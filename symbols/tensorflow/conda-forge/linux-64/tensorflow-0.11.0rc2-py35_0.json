{
 "*": {
  "data": {
   "imports": [
    "tensorflow.contrib.rnn.python.ops.gru_ops",
    "tensorflow.contrib.rnn.python.ops.lstm_ops",
    "tensorflow.contrib.rnn.python.ops.rnn_cell"
   ]
  },
  "type": "star-import"
 },
 "external": {
  "data": {},
  "type": "module"
 },
 "external.protobuf": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.internal": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.pyext": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.any_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.any_pb2.Any",
    "external.protobuf.python.google.protobuf.any_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.any_pb2._ANY",
    "external.protobuf.python.google.protobuf.any_pb2._b",
    "external.protobuf.python.google.protobuf.any_pb2._sym_db",
    "external.protobuf.python.google.protobuf.any_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.any_pb2.Any": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.any_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.any_pb2._ANY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.any_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.any_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.any_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.any_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.any_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.any_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.any_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.any_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.api_pb2.Api",
    "external.protobuf.python.google.protobuf.api_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.api_pb2.Method",
    "external.protobuf.python.google.protobuf.api_pb2.Mixin",
    "external.protobuf.python.google.protobuf.api_pb2._API",
    "external.protobuf.python.google.protobuf.api_pb2._METHOD",
    "external.protobuf.python.google.protobuf.api_pb2._MIXIN",
    "external.protobuf.python.google.protobuf.api_pb2._b",
    "external.protobuf.python.google.protobuf.api_pb2._sym_db",
    "external.protobuf.python.google.protobuf.api_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.source_context_pb2.DESCRIPTOR",
    "google.protobuf.source_context_pb2._SOURCECONTEXT",
    "google.protobuf.symbol_database.Default",
    "google.protobuf.type_pb2.DESCRIPTOR",
    "google.protobuf.type_pb2._OPTION",
    "google.protobuf.type_pb2._SYNTAX"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.api_pb2.Api": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2.Method": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2.Mixin": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2._API": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2._METHOD": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2._MIXIN": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.api_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2.google_dot_protobuf_dot_source__context__pb2": {
  "data": {
   "shadows": "google.protobuf.source_context_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2.google_dot_protobuf_dot_type__pb2": {
  "data": {
   "shadows": "google.protobuf.type_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.api_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.compiler": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2._CODEGENERATORREQUEST",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2._CODEGENERATORRESPONSE",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2._CODEGENERATORRESPONSE_FILE",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2._b",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2._sym_db",
    "external.protobuf.python.google.protobuf.compiler.plugin_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.DESCRIPTOR",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2._FILEDESCRIPTORPROTO",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._CODEGENERATORREQUEST": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._CODEGENERATORRESPONSE": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._CODEGENERATORRESPONSE_FILE": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2.google_dot_protobuf_dot_descriptor__pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.compiler.plugin_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "getattr",
    "google.protobuf.internal.api_implementation.Type",
    "google.protobuf.pyext._message",
    "type"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.descriptor.Descriptor": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.Descriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.Descriptor.CopyToProto": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.Descriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.Descriptor.EnumValueName": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.Descriptor.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.descriptor.Descriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.Descriptor.__new__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
    "google.protobuf.pyext._message.default_pool.FindMessageTypeByName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.Descriptor.fields_by_camelcase_name": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.DescriptorBase": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorMetaclass",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "external.protobuf.python.google.protobuf.descriptor.six"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.DescriptorBase.GetOptions": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "getattr",
    "google.protobuf.descriptor_pb2",
    "options_class"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.DescriptorBase._SetOptions": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.DescriptorBase.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.DescriptorMetaclass": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor.DescriptorMetaclass.__instancecheck__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorMetaclass",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.EnumDescriptor": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.EnumDescriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.EnumDescriptor.CopyToProto": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.EnumDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.EnumDescriptor.__init__": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.descriptor.EnumDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.EnumDescriptor.__new__": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
    "google.protobuf.pyext._message.default_pool.FindEnumTypeByName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.EnumValueDescriptor": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.EnumValueDescriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.EnumValueDescriptor.__init__": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.EnumValueDescriptor",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.EnumValueDescriptor.__new__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.Error": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.FieldDescriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor.ProtoTypeToCppProtoType": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "KeyError",
    "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor",
    "external.protobuf.python.google.protobuf.descriptor.TypeTransformationError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.internal.api_implementation.Type",
    "google.protobuf.pyext._message.default_pool.FindExtensionByName",
    "google.protobuf.pyext._message.default_pool.FindFieldByName",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor.__new__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
    "google.protobuf.pyext._message.default_pool.FindExtensionByName",
    "google.protobuf.pyext._message.default_pool.FindFieldByName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor.camelcase_name": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "_ToCamelCase",
    "property"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.FileDescriptor": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.FileDescriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.FileDescriptor.CopyToProto": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.FileDescriptor.__init__": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor_pool.Default",
    "google.protobuf.internal.api_implementation.Type",
    "google.protobuf.pyext._message.default_pool.AddSerializedFile",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.FileDescriptor.__new__": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.pyext._message.default_pool.AddSerializedFile",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.MakeDescriptor": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "enumerate",
    "external.protobuf.python.google.protobuf.descriptor.Descriptor",
    "external.protobuf.python.google.protobuf.descriptor.EnumDescriptor",
    "external.protobuf.python.google.protobuf.descriptor.EnumValueDescriptor",
    "external.protobuf.python.google.protobuf.descriptor.FieldDescriptor",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "external.protobuf.python.google.protobuf.descriptor.os",
    "external.protobuf.python.google.protobuf.descriptor.uuid",
    "google.protobuf.descriptor_pb2.FileDescriptorProto",
    "google.protobuf.internal.api_implementation.Type",
    "google.protobuf.pyext._message.default_pool.Add",
    "google.protobuf.pyext._message.default_pool.FindFileByName",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.MethodDescriptor": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.MethodDescriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.MethodDescriptor.__init__": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.MethodDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.MethodDescriptor.__new__": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
    "google.protobuf.pyext._message.default_pool.FindMethodByName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.OneofDescriptor": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.OneofDescriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.OneofDescriptor.__init__": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.OneofDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.OneofDescriptor.__new__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
    "google.protobuf.pyext._message.default_pool.FindOneofByName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.ServiceDescriptor": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase",
    "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.pyext._message.ServiceDescriptor"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor.ServiceDescriptor.CopyToProto": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.ServiceDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.ServiceDescriptor.FindMethodByName": {
  "data": {
   "lineno": 740
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.ServiceDescriptor.__init__": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.descriptor.ServiceDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.ServiceDescriptor.__new__": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.Message._CheckCalledFromGeneratedFile",
    "google.protobuf.pyext._message.default_pool.FindServiceByName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor.TypeTransformationError": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.DescriptorBase"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase.CopyToProto": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor.Error"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase.GetTopLevelContainingType": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor._NestedDescriptorBase",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor._ParseOptions": {
  "data": {
   "lineno": 866
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor._ToCamelCase": {
  "data": {
   "lineno": 876
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor._USE_C_DESCRIPTORS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor._message": {
  "data": {
   "shadows": "google.protobuf.pyext._message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor.api_implementation": {
  "data": {
   "shadows": "google.protobuf.internal.api_implementation"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor.descriptor_pool": {
  "data": {
   "shadows": "google.protobuf.descriptor_pool"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_database": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.DescriptorDatabase": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.DescriptorDatabase.Add": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_ExtractSymbols",
    "external.protobuf.python.google.protobuf.descriptor_database.DescriptorDatabaseConflictingDefinitionError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.DescriptorDatabase.FindFileByName": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.DescriptorDatabase.FindFileContainingSymbol": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.DescriptorDatabase.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.DescriptorDatabaseConflictingDefinitionError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor_database.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.Error": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor_database._ExtractSymbols": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_database.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.descriptor_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.descriptor_pb2.DescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.EnumDescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.EnumOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.EnumValueDescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.EnumValueOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.FieldDescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.FieldOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.FileDescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.FileDescriptorSet",
    "external.protobuf.python.google.protobuf.descriptor_pb2.FileOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.GeneratedCodeInfo",
    "external.protobuf.python.google.protobuf.descriptor_pb2.MessageOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.MethodDescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.MethodOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.OneofDescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.OneofOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.ServiceDescriptorProto",
    "external.protobuf.python.google.protobuf.descriptor_pb2.ServiceOptions",
    "external.protobuf.python.google.protobuf.descriptor_pb2.SourceCodeInfo",
    "external.protobuf.python.google.protobuf.descriptor_pb2.UninterpretedOption",
    "external.protobuf.python.google.protobuf.descriptor_pb2._DESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._DESCRIPTORPROTO_EXTENSIONRANGE",
    "external.protobuf.python.google.protobuf.descriptor_pb2._DESCRIPTORPROTO_RESERVEDRANGE",
    "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMDESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMVALUEDESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMVALUEOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDDESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDDESCRIPTORPROTO_LABEL",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDDESCRIPTORPROTO_TYPE",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDOPTIONS_CTYPE",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDOPTIONS_JSTYPE",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FILEDESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FILEDESCRIPTORSET",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FILEOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._FILEOPTIONS_OPTIMIZEMODE",
    "external.protobuf.python.google.protobuf.descriptor_pb2._GENERATEDCODEINFO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._GENERATEDCODEINFO_ANNOTATION",
    "external.protobuf.python.google.protobuf.descriptor_pb2._MESSAGEOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._METHODDESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._METHODOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._ONEOFDESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._ONEOFOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._SERVICEDESCRIPTORPROTO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._SERVICEOPTIONS",
    "external.protobuf.python.google.protobuf.descriptor_pb2._SOURCECODEINFO",
    "external.protobuf.python.google.protobuf.descriptor_pb2._SOURCECODEINFO_LOCATION",
    "external.protobuf.python.google.protobuf.descriptor_pb2._UNINTERPRETEDOPTION",
    "external.protobuf.python.google.protobuf.descriptor_pb2._UNINTERPRETEDOPTION_NAMEPART",
    "external.protobuf.python.google.protobuf.descriptor_pb2._b",
    "external.protobuf.python.google.protobuf.descriptor_pb2._sym_db",
    "external.protobuf.python.google.protobuf.descriptor_pb2.sys",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.DescriptorProto": {
  "data": {
   "lineno": 1678
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.EnumDescriptorProto": {
  "data": {
   "lineno": 1715
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.EnumOptions": {
  "data": {
   "lineno": 1771
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.EnumValueDescriptorProto": {
  "data": {
   "lineno": 1722
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.EnumValueOptions": {
  "data": {
   "lineno": 1778
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.FieldDescriptorProto": {
  "data": {
   "lineno": 1701
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.FieldOptions": {
  "data": {
   "lineno": 1757
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.FileDescriptorProto": {
  "data": {
   "lineno": 1671
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.FileDescriptorSet": {
  "data": {
   "lineno": 1664
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.FileOptions": {
  "data": {
   "lineno": 1743
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.GeneratedCodeInfo": {
  "data": {
   "lineno": 1829
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.MessageOptions": {
  "data": {
   "lineno": 1750
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.MethodDescriptorProto": {
  "data": {
   "lineno": 1736
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.MethodOptions": {
  "data": {
   "lineno": 1792
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.OneofDescriptorProto": {
  "data": {
   "lineno": 1708
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.OneofOptions": {
  "data": {
   "lineno": 1764
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.ServiceDescriptorProto": {
  "data": {
   "lineno": 1729
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.ServiceOptions": {
  "data": {
   "lineno": 1785
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.SourceCodeInfo": {
  "data": {
   "lineno": 1814
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.UninterpretedOption": {
  "data": {
   "lineno": 1799
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._DESCRIPTORPROTO": {
  "data": {
   "lineno": 431
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._DESCRIPTORPROTO_EXTENSIONRANGE": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._DESCRIPTORPROTO_RESERVEDRANGE": {
  "data": {
   "lineno": 394
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMDESCRIPTORPROTO": {
  "data": {
   "lineno": 659
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMOPTIONS": {
  "data": {
   "lineno": 1155
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMVALUEDESCRIPTORPROTO": {
  "data": {
   "lineno": 704
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._ENUMVALUEOPTIONS": {
  "data": {
   "lineno": 1200
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDDESCRIPTORPROTO": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDDESCRIPTORPROTO_LABEL": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDDESCRIPTORPROTO_TYPE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDOPTIONS": {
  "data": {
   "lineno": 1049
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDOPTIONS_CTYPE": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FIELDOPTIONS_JSTYPE": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FILEDESCRIPTORPROTO": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FILEDESCRIPTORSET": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FILEOPTIONS": {
  "data": {
   "lineno": 860
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._FILEOPTIONS_OPTIMIZEMODE": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._GENERATEDCODEINFO": {
  "data": {
   "lineno": 1564
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._GENERATEDCODEINFO_ANNOTATION": {
  "data": {
   "lineno": 1513
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._MESSAGEOPTIONS": {
  "data": {
   "lineno": 990
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._METHODDESCRIPTORPROTO": {
  "data": {
   "lineno": 794
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._METHODOPTIONS": {
  "data": {
   "lineno": 1276
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._ONEOFDESCRIPTORPROTO": {
  "data": {
   "lineno": 621
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._ONEOFOPTIONS": {
  "data": {
   "lineno": 1124
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._SERVICEDESCRIPTORPROTO": {
  "data": {
   "lineno": 749
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._SERVICEOPTIONS": {
  "data": {
   "lineno": 1238
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._SOURCECODEINFO": {
  "data": {
   "lineno": 1482
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._SOURCECODEINFO_LOCATION": {
  "data": {
   "lineno": 1424
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._UNINTERPRETEDOPTION": {
  "data": {
   "lineno": 1351
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._UNINTERPRETEDOPTION_NAMEPART": {
  "data": {
   "lineno": 1314
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._sym_db": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool",
    "external.protobuf.python.google.protobuf.descriptor_pool._USE_C_DESCRIPTORS",
    "google.protobuf.descriptor._USE_C_DESCRIPTORS",
    "google.protobuf.descriptor._message.default_pool"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.Default": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor_pool._DEFAULT"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor_pool._USE_C_DESCRIPTORS",
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.Add": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.AddDescriptor": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "TypeError",
    "google.protobuf.descriptor.Descriptor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.AddEnumDescriptor": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "google.protobuf.descriptor.EnumDescriptor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.AddFileDescriptor": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError",
    "google.protobuf.descriptor.FileDescriptor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.AddSerializedFile": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "google.protobuf.descriptor_pb2.FileDescriptorProto.FromString"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.FindEnumTypeByName": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor_pool._NormalizeFullyQualifiedName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.FindExtensionByName": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "KeyError",
    "external.protobuf.python.google.protobuf.descriptor_pool._NormalizeFullyQualifiedName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.FindFieldByName": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor_pool._NormalizeFullyQualifiedName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.FindFileByName": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.FindFileContainingSymbol": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "KeyError",
    "external.protobuf.python.google.protobuf.descriptor_pool._NormalizeFullyQualifiedName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.FindMessageTypeByName": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.descriptor_pool._NormalizeFullyQualifiedName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._ConvertEnumDescriptor": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "enumerate",
    "google.protobuf.descriptor.EnumDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._ConvertFileProtoToFileDescriptor": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "_AddEnumDescriptor",
    "_AddMessageDescriptor",
    "_PrefixWithDot",
    "enumerate",
    "external.protobuf.python.google.protobuf.descriptor_pool._USE_C_DESCRIPTORS",
    "google.protobuf.descriptor.FileDescriptor",
    "list"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._ConvertFileProtoToFileDescriptor._AddEnumDescriptor": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._ConvertFileProtoToFileDescriptor._AddMessageDescriptor": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "_AddEnumDescriptor",
    "_AddMessageDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._ConvertMessageDescriptor": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "_PrefixWithDot",
    "enumerate",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.OneofDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._ExtractSymbols": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "_PrefixWithDot"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._GetDeps": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._GetTypeFromScope": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "_PrefixWithDot"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._MakeEnumValueDescriptor": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "google.protobuf.descriptor.EnumValueDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._MakeFieldDescriptor": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "google.protobuf.descriptor.FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._MakeMethodDescriptor": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "google.protobuf.descriptor.MethodDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._MakeServiceDescriptor": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "enumerate",
    "google.protobuf.descriptor.ServiceDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._SetAllFieldTypes": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "_PrefixWithDot",
    "zip"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool._SetFieldType": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "google.protobuf.descriptor.FieldDescriptor.ProtoTypeToCppProtoType",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BOOL",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_DOUBLE",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_ENUM",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_FLOAT",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_GROUP",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_STRING",
    "google.protobuf.text_encoding.CUnescape",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "google.protobuf.descriptor_database.DescriptorDatabase"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.DescriptorPool.__new__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "google.protobuf.descriptor._message.DescriptorPool"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool._DEFAULT": {
  "data": {
   "lineno": 810
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool._NormalizeFullyQualifiedName": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool._PrefixWithDot": {
  "data": {
   "lineno": 800
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool._USE_C_DESCRIPTORS": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.__author__": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.descriptor_database": {
  "data": {
   "shadows": "google.protobuf.descriptor_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.descriptor_pool.text_encoding": {
  "data": {
   "shadows": "google.protobuf.text_encoding"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.duration_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.duration_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.duration_pb2.Duration",
    "external.protobuf.python.google.protobuf.duration_pb2._DURATION",
    "external.protobuf.python.google.protobuf.duration_pb2._b",
    "external.protobuf.python.google.protobuf.duration_pb2._sym_db",
    "external.protobuf.python.google.protobuf.duration_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.duration_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.duration_pb2.Duration": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.duration_pb2._DURATION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.duration_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.duration_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.duration_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.duration_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.duration_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.duration_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.duration_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.duration_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.empty_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.empty_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.empty_pb2.Empty",
    "external.protobuf.python.google.protobuf.empty_pb2._EMPTY",
    "external.protobuf.python.google.protobuf.empty_pb2._b",
    "external.protobuf.python.google.protobuf.empty_pb2._sym_db",
    "external.protobuf.python.google.protobuf.empty_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.empty_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.empty_pb2.Empty": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.empty_pb2._EMPTY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.empty_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.empty_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.empty_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.empty_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.empty_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.empty_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.empty_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.empty_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.field_mask_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.field_mask_pb2.FieldMask",
    "external.protobuf.python.google.protobuf.field_mask_pb2._FIELDMASK",
    "external.protobuf.python.google.protobuf.field_mask_pb2._b",
    "external.protobuf.python.google.protobuf.field_mask_pb2._sym_db",
    "external.protobuf.python.google.protobuf.field_mask_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2.FieldMask": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2._FIELDMASK": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.field_mask_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "external.protobuf.python.google.protobuf.internal._parameterized.re",
    "external.protobuf.python.google.protobuf.internal._parameterized.uuid",
    "object"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.ADDR_RE": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.CoopParameterizedTestCase": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized.ParameterizedTestCase",
    "external.protobuf.python.google.protobuf.internal._parameterized.TestGeneratorMetaclass",
    "metaclass",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.NamedParameters": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._FIRST_ARG",
    "external.protobuf.python.google.protobuf.internal._parameterized._ParameterDecorator"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.ParameterizedTestCase": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized.TestGeneratorMetaclass",
    "unittest2.TestCase"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.ParameterizedTestCase._OriginalName": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._SEPARATOR"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.ParameterizedTestCase.__str__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._StrClass"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.ParameterizedTestCase.id": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._StrClass"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.Parameters": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._ARGUMENT_REPR",
    "external.protobuf.python.google.protobuf.internal._parameterized._ParameterDecorator"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.TestGeneratorMetaclass": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.TestGeneratorMetaclass.__new__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "_UpdateClassDictForParamTestCase",
    "external.protobuf.python.google.protobuf.internal._parameterized._NonStringIterable",
    "iter",
    "type.__new__",
    "unittest2.TestLoader.testMethodPrefix"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ARGUMENT_REPR": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._CleanRepr": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized.ADDR_RE",
    "repr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._FIRST_ARG": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._FormatParameterList": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._CleanRepr",
    "external.protobuf.python.google.protobuf.internal._parameterized._NonStringIterable",
    "external.protobuf.python.google.protobuf.internal._parameterized.collections",
    "isinstance",
    "map"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._IsSingletonList": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ModifyClass": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "_UpdateClassDictForParamTestCase",
    "delattr",
    "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter",
    "external.protobuf.python.google.protobuf.internal._parameterized.types",
    "getattr",
    "isinstance",
    "setattr",
    "unittest2.TestLoader.testMethodPrefix"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._NonStringIterable": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized.collections",
    "external.protobuf.python.google.protobuf.internal._parameterized.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterDecorator": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._IsSingletonList",
    "external.protobuf.python.google.protobuf.internal._parameterized._NonStringIterable"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterDecorator._Apply": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._ModifyClass",
    "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter",
    "external.protobuf.python.google.protobuf.internal._parameterized.collections",
    "isinstance",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter.__call__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter.__init__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter.__iter__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "MakeBoundParamTest"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter.__iter__.MakeBoundParamTest": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "RuntimeError",
    "external.protobuf.python.google.protobuf.internal._parameterized._ARGUMENT_REPR",
    "external.protobuf.python.google.protobuf.internal._parameterized._FIRST_ARG",
    "external.protobuf.python.google.protobuf.internal._parameterized._FormatParameterList",
    "str",
    "test_method.__doc__"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._ParameterizedTestIter.__iter__.MakeBoundParamTest.BoundParamTest": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal._parameterized._NonStringIterable",
    "external.protobuf.python.google.protobuf.internal._parameterized.collections",
    "external.protobuf.python.google.protobuf.internal._parameterized.functools",
    "isinstance",
    "test_method"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._SEPARATOR": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._StrClass": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized._UpdateClassDictForParamTestCase": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "callable",
    "enumerate",
    "external.protobuf.python.google.protobuf.internal._parameterized._SEPARATOR",
    "getattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.__author__": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal._parameterized.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.api_implementation._api_version",
    "external.protobuf.python.google.protobuf.internal.api_implementation._default_implementation_type",
    "external.protobuf.python.google.protobuf.internal.api_implementation._implementation_type",
    "external.protobuf.python.google.protobuf.internal.api_implementation._implementation_version_str",
    "external.protobuf.python.google.protobuf.internal.api_implementation._proto_extension_modules_exist_in_build",
    "external.protobuf.python.google.protobuf.internal.api_implementation.os",
    "external.protobuf.python.google.protobuf.internal.api_implementation.sys",
    "external.protobuf.python.google.protobuf.internal.api_implementation.warnings",
    "google.protobuf._use_fast_cpp_protos",
    "google.protobuf.internal._api_implementation.api_version",
    "int"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation.Type": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.api_implementation._implementation_type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation.Version": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.api_implementation._implementation_version"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._api_implementation": {
  "data": {
   "shadows": "google.protobuf.internal._api_implementation"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._api_version": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._default_implementation_type": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._implementation_type": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._implementation_version": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._implementation_version_str": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._proto_extension_modules_exist_in_build": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation._use_fast_cpp_protos": {
  "data": {
   "shadows": "google.protobuf._use_fast_cpp_protos"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.api_implementation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.containers": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.containers.BaseContainer",
    "external.protobuf.python.google.protobuf.internal.containers.Mapping",
    "external.protobuf.python.google.protobuf.internal.containers.MutableMapping",
    "external.protobuf.python.google.protobuf.internal.containers.collections",
    "external.protobuf.python.google.protobuf.internal.containers.sys"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer.__getitem__": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer.__hash__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer.__init__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer.__len__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer.__ne__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer.__repr__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.BaseContainer.sort": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.__contains__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.__eq__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplemented",
    "dict",
    "external.protobuf.python.google.protobuf.internal.containers.collections",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.__ne__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.get": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.items": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.iteritems": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.iterkeys": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.itervalues": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.keys": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.Mapping.values": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.containers.MutableMapping"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.InvalidateIterators": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.MergeFrom": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__contains__": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__delitem__": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__getitem__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__init__": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__iter__": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__len__": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__repr__": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.__setitem__": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.clear": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.get": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MessageMap.get_or_create": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MutableMapping": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MutableMapping.clear": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MutableMapping.pop": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MutableMapping.popitem": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MutableMapping.setdefault": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.MutableMapping.update": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "external.protobuf.python.google.protobuf.internal.containers.Mapping",
    "hasattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.containers.BaseContainer"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.MergeFrom": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__delitem__": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__delslice__": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__eq__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__getslice__": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.add": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.extend": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "message_class"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.pop": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedCompositeFieldContainer.remove": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.containers.BaseContainer"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.MergeFrom": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.__delitem__": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.__delslice__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.__eq__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.__getslice__": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.__setitem__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.__setslice__": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.append": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.extend": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.insert": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.pop": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.RepeatedScalarFieldContainer.remove": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.containers.MutableMapping"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.InvalidateIterators": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.MergeFrom": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__contains__": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__delitem__": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__getitem__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__init__": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__iter__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__len__": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__repr__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.__setitem__": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.clear": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.ScalarMap.get": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.containers.__author__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.containers.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.containers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.decoder": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeSignedVarint",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeSignedVarint32",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint32",
    "external.protobuf.python.google.protobuf.internal.decoder._DoubleDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder._FieldSkipper",
    "external.protobuf.python.google.protobuf.internal.decoder._FloatDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder._ModifiedDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder._POS_INF",
    "external.protobuf.python.google.protobuf.internal.decoder._SignedVarintDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder._StructPackDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder._VarintDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder.long",
    "external.protobuf.python.google.protobuf.internal.decoder.six",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED32",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED64",
    "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "google.protobuf.internal.wire_format.ZigZagDecode",
    "google.protobuf.message.DecodeError",
    "int"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.BoolDecoder": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.BytesDecoder": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "len",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.BytesDecoder.DecodeField": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "local_DecodeVarint",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.DoubleDecoder": {
  "data": {
   "lineno": 455
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.EnumDecoder": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "len",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.EnumDecoder.DecodeField": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeSignedVarint32",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "google.protobuf.message._unknown_fields",
    "google.protobuf.message._unknown_fields.append"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.EnumDecoder.DecodePackedField": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeSignedVarint32",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "google.protobuf.message",
    "google.protobuf.message._unknown_fields",
    "google.protobuf.message._unknown_fields.append",
    "local_DecodeVarint",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeSignedVarint32",
    "google.protobuf.message",
    "google.protobuf.message._unknown_fields",
    "google.protobuf.message._unknown_fields.append",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.Fixed32Decoder": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.Fixed64Decoder": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.FloatDecoder": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.GroupDecoder": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP",
    "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP",
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.GroupDecoder.DecodeField": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.Int32Decoder": {
  "data": {
   "lineno": 432
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.Int64Decoder": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MESSAGE_SET_ITEM_TAG": {
  "data": {
   "lineno": 643
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MapDecoder": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "len",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MapDecoder.DecodeMap": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "local_DecodeVarint",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MessageDecoder": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "len",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MessageDecoder.DecodeField": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "local_DecodeVarint",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "local_DecodeVarint",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MessageSetItemDecoder": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder.ReadTag",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.MessageSetItemDecoder.DecodeItem": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "SkipField",
    "external.protobuf.python.google.protobuf.internal.decoder.MESSAGE_SET_ITEM_TAG",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message._unknown_fields",
    "google.protobuf.message._unknown_fields.append",
    "local_DecodeVarint",
    "local_ReadTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.ReadTag": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder.six"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.SFixed32Decoder": {
  "data": {
   "lineno": 452
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.SFixed64Decoder": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.SInt32Decoder": {
  "data": {
   "lineno": 441
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.SInt64Decoder": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.SkipField": {
  "data": {
   "lineno": 854
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.StringDecoder": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "external.protobuf.python.google.protobuf.internal.decoder.six",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "len",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.StringDecoder.DecodeField": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "_ConvertToUnicode",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "local_DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "_ConvertToUnicode",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "local_DecodeVarint",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "local_unicode"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.UInt32Decoder": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.UInt64Decoder": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._DecodeError": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._DecodeSignedVarint": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._DecodeSignedVarint32": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint32": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._DoubleDecoder": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder.struct",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED64",
    "local_unpack"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._DoubleDecoder.InnerDecode": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._NAN",
    "local_unpack"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._EndGroup": {
  "data": {
   "lineno": 804
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._FieldSkipper": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "SkipField",
    "external.protobuf.python.google.protobuf.internal.decoder._EndGroup",
    "external.protobuf.python.google.protobuf.internal.decoder._RaiseInvalidWireType",
    "external.protobuf.python.google.protobuf.internal.decoder._SkipFixed32",
    "external.protobuf.python.google.protobuf.internal.decoder._SkipFixed64",
    "external.protobuf.python.google.protobuf.internal.decoder._SkipGroup",
    "external.protobuf.python.google.protobuf.internal.decoder._SkipLengthDelimited",
    "external.protobuf.python.google.protobuf.internal.decoder._SkipVarint",
    "google.protobuf.internal.wire_format.TAG_TYPE_MASK"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._FieldSkipper.SkipField": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._FloatDecoder": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder.struct",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED32",
    "local_unpack"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._FloatDecoder.InnerDecode": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._NAN",
    "external.protobuf.python.google.protobuf.internal.decoder._NEG_INF",
    "external.protobuf.python.google.protobuf.internal.decoder._POS_INF",
    "local_unpack"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._ModifiedDecoder": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "decode_value",
    "modify_value"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._NAN": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._NEG_INF": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._POS_INF": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._RaiseInvalidWireType": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SignedVarintDecoder": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SignedVarintDecoder.DecodeVarint": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "external.protobuf.python.google.protobuf.internal.decoder.six",
    "result_type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint",
    "google.protobuf.internal.encoder.TagBytes",
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "decode_value",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "decode_value",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "local_DecodeVarint",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "decode_value",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "google.protobuf.message",
    "new_default"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SkipFixed32": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SkipFixed64": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SkipGroup": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "SkipField",
    "external.protobuf.python.google.protobuf.internal.decoder.ReadTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SkipLengthDelimited": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._SkipVarint": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "ord"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._StructPackDecoder": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._SimpleDecoder",
    "external.protobuf.python.google.protobuf.internal.decoder.struct",
    "format"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._StructPackDecoder.InnerDecode": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "format",
    "local_unpack"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._VarintDecoder": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder._VarintDecoder.DecodeVarint": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.decoder._DecodeError",
    "external.protobuf.python.google.protobuf.internal.decoder.six",
    "result_type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.__author__": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.encoder": {
  "data": {
   "shadows": "google.protobuf.internal.encoder"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.long": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.decoder.wire_format": {
  "data": {
   "shadows": "google.protobuf.internal.wire_format"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.encoder": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeSignedVarint",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "external.protobuf.python.google.protobuf.internal.encoder._FixedSizer",
    "external.protobuf.python.google.protobuf.internal.encoder._FloatingPointEncoder",
    "external.protobuf.python.google.protobuf.internal.encoder._ModifiedEncoder",
    "external.protobuf.python.google.protobuf.internal.encoder._ModifiedSizer",
    "external.protobuf.python.google.protobuf.internal.encoder._POS_INF",
    "external.protobuf.python.google.protobuf.internal.encoder._SignedVarintEncoder",
    "external.protobuf.python.google.protobuf.internal.encoder._SignedVarintSize",
    "external.protobuf.python.google.protobuf.internal.encoder._SimpleEncoder",
    "external.protobuf.python.google.protobuf.internal.encoder._SimpleSizer",
    "external.protobuf.python.google.protobuf.internal.encoder._StructPackEncoder",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintEncoder",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED32",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED64",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "google.protobuf.internal.wire_format.ZigZagEncode"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BoolEncoder": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "local_EncodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BoolEncoder.EncodeField": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BoolEncoder.EncodePackedField": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "len",
    "local_EncodeVarint",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BoolSizer": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BytesEncoder": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "len",
    "local_EncodeVarint",
    "local_len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BytesEncoder.EncodeField": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "local_EncodeVarint",
    "local_len",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "local_EncodeVarint",
    "local_len",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BytesSizer": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "len",
    "local_VarintSize",
    "local_len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BytesSizer.FieldSize": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "local_VarintSize",
    "local_len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "local_VarintSize",
    "local_len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.DoubleEncoder": {
  "data": {
   "lineno": 639
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.Fixed32Encoder": {
  "data": {
   "lineno": 634
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.Fixed64Encoder": {
  "data": {
   "lineno": 635
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.FloatEncoder": {
  "data": {
   "lineno": 638
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.GroupEncoder": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP",
    "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.GroupEncoder.EncodeField": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.GroupSizer": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.GroupSizer.FieldSize": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MapEncoder": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.MessageEncoder"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MapEncoder.EncodeField": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "encode_message",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MapSizer": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.MessageSizer"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MapSizer.FieldSize": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "message_sizer"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageEncoder": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "local_EncodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageEncoder.EncodeField": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "local_EncodeVarint",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "local_EncodeVarint",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageSetItemEncoder": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintBytes",
    "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "local_EncodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "local_EncodeVarint",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageSetItemSizer": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageSizer": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageSizer.FieldSize": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.SFixed32Encoder": {
  "data": {
   "lineno": 636
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.SFixed64Encoder": {
  "data": {
   "lineno": 637
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.StringEncoder": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "len",
    "local_EncodeVarint",
    "local_len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.StringEncoder.EncodeField": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "local_EncodeVarint",
    "local_len",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "local_EncodeVarint",
    "local_len",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.StringSizer": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "len",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.StringSizer.FieldSize": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "local_VarintSize",
    "local_len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "len",
    "local_VarintSize",
    "local_len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.TagBytes": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._VarintBytes",
    "google.protobuf.internal.wire_format.PackTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._EncodeSignedVarint": {
  "data": {
   "lineno": 403
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint": {
  "data": {
   "lineno": 402
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FixedSizer": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FixedSizer.SpecificSizer": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FloatingPointEncoder": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.encoder.struct",
    "format"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._NEG_INF",
    "external.protobuf.python.google.protobuf.internal.encoder._POS_INF",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "external.protobuf.python.google.protobuf.internal.encoder.struct",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "local_EncodeVarint",
    "local_struct_pack"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "EncodeNonFiniteOrRaise",
    "SystemError",
    "format",
    "local_struct_pack",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "EncodeNonFiniteOrRaise",
    "SystemError",
    "format",
    "len",
    "local_EncodeVarint",
    "local_struct_pack",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "EncodeNonFiniteOrRaise",
    "SystemError",
    "format",
    "local_struct_pack",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedEncoder": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "local_EncodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "encode_value",
    "modify_value",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "compute_value_size",
    "encode_value",
    "local_EncodeVarint",
    "modify_value",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "encode_value",
    "modify_value",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedSizer": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "compute_value_size",
    "modify_value"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "compute_value_size",
    "local_VarintSize",
    "modify_value"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "compute_value_size",
    "len",
    "modify_value"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._NEG_INF": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._POS_INF": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SignedVarintEncoder": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SignedVarintEncoder.EncodeSignedVarint": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.six",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SignedVarintSize": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleEncoder": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "encode_value",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "compute_value_size",
    "encode_value",
    "local_EncodeVarint",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "encode_value",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleSizer": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleSizer.SpecificSizer": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._TagSize",
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "compute_value_size"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "compute_value_size",
    "local_VarintSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "compute_value_size",
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._StructPackEncoder": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.struct",
    "format"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.TagBytes",
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint",
    "external.protobuf.python.google.protobuf.internal.encoder.struct",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "local_EncodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "format",
    "local_struct_pack",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "format",
    "len",
    "local_EncodeVarint",
    "local_struct_pack",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "format",
    "local_struct_pack",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._TagSize": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._VarintSize",
    "google.protobuf.internal.wire_format.PackTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._VarintBytes": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder._EncodeVarint"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._VarintEncoder": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._VarintEncoder.EncodeVarint": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.encoder.six",
    "write"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder._VarintSize": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.__author__": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.encoder.wire_format": {
  "data": {
   "shadows": "google.protobuf.internal.wire_format"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.Name": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.Value": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.items": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.keys": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.values": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.enum_type_wrapper.__author__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.message_listener": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.message_listener.MessageListener": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.message_listener.MessageListener.Modified": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.message_listener.NullMessageListener": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.message_listener.NullMessageListener.Modified": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.message_listener.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.python_message": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "google.protobuf.descriptor.FieldDescriptor"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.GeneratedProtocolMessageType": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.GeneratedProtocolMessageType.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "_AddEnumValues",
    "_AddInitMethod",
    "_AddMessageMethods",
    "_AddPrivateHelperMethods",
    "_AddPropertiesForExtensions",
    "_AddPropertiesForFields",
    "_AddStaticMethods",
    "_AttachFieldHelpers",
    "copy_reg.pickle",
    "external.protobuf.python.google.protobuf.internal.python_message.GeneratedProtocolMessageType",
    "google.protobuf.descriptor",
    "google.protobuf.descriptor.GetOptions",
    "google.protobuf.descriptor._concrete_class",
    "google.protobuf.descriptor.fields",
    "google.protobuf.descriptor.has_options",
    "google.protobuf.internal.decoder.MESSAGE_SET_ITEM_TAG",
    "google.protobuf.internal.decoder.MessageSetItemDecoder",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.GeneratedProtocolMessageType.__new__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_AddClassAttributesForNestedExtensions",
    "_AddSlots",
    "external.protobuf.python.google.protobuf.internal.python_message.GeneratedProtocolMessageType",
    "google.protobuf.descriptor",
    "google.protobuf.descriptor.full_name",
    "google.protobuf.internal.well_known_types.WKTBASES",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddByteSizeMethod": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "cls.ByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddByteSizeMethod.ByteSize": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddClassAttributesForNestedExtensions": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "google.protobuf.descriptor.extensions_by_name"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddClearExtensionMethod": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "cls.ClearExtension"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddClearExtensionMethod.ClearExtension": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._VerifyExtensionHandle"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddClearFieldMethod": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "cls.ClearField"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddClearFieldMethod.ClearField": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddEnumValues": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "google.protobuf.descriptor.enum_types",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddEqualsMethod": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "cls.__eq__"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddEqualsMethod.__eq__": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._AnyFullTypeName",
    "external.protobuf.python.google.protobuf.internal.python_message._InternalUnpackAny",
    "google.protobuf.message.Message",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddHasExtensionMethod": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "cls.HasExtension"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddHasExtensionMethod.HasExtension": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "KeyError",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._VerifyExtensionHandle"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddHasFieldMethod": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "HasField",
    "cls.HasField",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._Proto2HasError",
    "external.protobuf.python.google.protobuf.internal.python_message._Proto3HasError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddHasFieldMethod.HasField": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "HasField",
    "KeyError",
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddInitMethod": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddInitMethod._GetIntegerEnumValue": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.python_message.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddInitMethod.init": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "TypeError",
    "_GetFieldByName",
    "_GetIntegerEnumValue",
    "_Listener",
    "dict",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMapField",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMessageMapField",
    "external.protobuf.python.google.protobuf.internal.python_message._ReraiseTypeErrorWithFieldName",
    "google.protobuf.internal.message_listener.NullMessageListener",
    "isinstance",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddIsInitializedMethod": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "cls.FindInitializationErrors",
    "cls.IsInitialized",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddIsInitializedMethod.FindInitializationErrors": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMapField",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMessageMapField",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddIsInitializedMethod.IsInitialized": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "list"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddListFieldsMethod": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "cls.ListFields"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddListFieldsMethod.ListFields": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._IsPresent"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddMergeFromMethod": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "cls.MergeFrom",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddMergeFromMethod.MergeFrom": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "cls.__name__",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddMergeFromStringMethod": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "cls.MergeFromString",
    "cls._InternalParse",
    "cls._decoders_by_tag",
    "google.protobuf.internal.decoder.ReadTag",
    "google.protobuf.internal.decoder.SkipField"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddMergeFromStringMethod.InternalParse": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "field_decoder",
    "local_ReadTag",
    "local_SkipField"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddMergeFromStringMethod.MergeFromString": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "external.protobuf.python.google.protobuf.internal.python_message.struct",
    "google.protobuf.message.DecodeError",
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddMessageMethods": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "cls",
    "cls.Clear",
    "cls.DiscardUnknownFields",
    "cls._SetListener",
    "external.protobuf.python.google.protobuf.internal.python_message._AddByteSizeMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddClearExtensionMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddClearFieldMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddEqualsMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddHasExtensionMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddHasFieldMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddIsInitializedMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddListFieldsMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddMergeFromMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddMergeFromStringMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddReprMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddSerializePartialToStringMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddSerializeToStringMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddStrMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddUnicodeMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._AddWhichOneofMethod",
    "external.protobuf.python.google.protobuf.internal.python_message._Clear",
    "external.protobuf.python.google.protobuf.internal.python_message._DiscardUnknownFields",
    "external.protobuf.python.google.protobuf.internal.python_message._SetListener"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPrivateHelperMethods": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "cls.SetInParent",
    "cls._Modified",
    "cls._UpdateOneofState"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPrivateHelperMethods.Modified": {
  "data": {
   "lineno": 1336
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPrivateHelperMethods._UpdateOneofState": {
  "data": {
   "lineno": 1351
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForExtensions": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "google.protobuf.descriptor.extensions_by_name",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForField": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "_AddPropertiesForNonRepeatedCompositeField",
    "_AddPropertiesForNonRepeatedScalarField",
    "_AddPropertiesForRepeatedField",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForFields": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "_AddPropertiesForField",
    "_ExtensionDict",
    "google.protobuf.descriptor.fields",
    "google.protobuf.descriptor.is_extendable",
    "property"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForNonRepeatedCompositeField": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._PropertyName",
    "property",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForNonRepeatedCompositeField.getter": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForNonRepeatedCompositeField.setter": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForNonRepeatedScalarField": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._PropertyName",
    "field_setter",
    "google.protobuf.internal.type_checkers.GetTypeChecker",
    "property",
    "set",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForNonRepeatedScalarField.field_setter": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForNonRepeatedScalarField.getter": {
  "data": {
   "lineno": 656
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForNonRepeatedScalarField.setter": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "field_setter"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForRepeatedField": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._PropertyName",
    "property",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForRepeatedField.getter": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddPropertiesForRepeatedField.setter": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddReprMethod": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "cls.__repr__"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddReprMethod.__repr__": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "google.protobuf.text_format.MessageToString"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddSerializePartialToStringMethod": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "cls.SerializePartialToString",
    "cls._InternalSerialize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddSerializePartialToStringMethod.InternalSerialize": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "write_bytes"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddSerializePartialToStringMethod.SerializePartialToString": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "io.BytesIO"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddSerializeToStringMethod": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "cls.SerializeToString"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddSerializeToStringMethod.SerializeToString": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "google.protobuf.message.EncodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddSlots": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddStaticMethods": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "cls.FromString",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddStaticMethods.FromString": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "cls",
    "google.protobuf.message",
    "google.protobuf.message.MergeFromString"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddStaticMethods.RegisterExtension": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "AssertionError",
    "external.protobuf.python.google.protobuf.internal.python_message._AttachFieldHelpers",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMessageSetExtension"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddStrMethod": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "cls.__str__"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddStrMethod.__str__": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "google.protobuf.text_format.MessageToString"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddUnicodeMethod": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "cls.__unicode__"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddUnicodeMethod.__unicode__": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "google.protobuf.text_format.MessageToString"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddWhichOneofMethod": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "cls.WhichOneof"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AddWhichOneofMethod.WhichOneof": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AnyFullTypeName": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AttachFieldHelpers": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "AddDecoder",
    "_DefaultValueConstructorForField",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMapField",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMessageSetExtension",
    "google.protobuf.internal.encoder.MapEncoder",
    "google.protobuf.internal.encoder.MapSizer",
    "google.protobuf.internal.encoder.MessageSetItemEncoder",
    "google.protobuf.internal.encoder.MessageSetItemSizer",
    "google.protobuf.internal.type_checkers.FIELD_TYPE_TO_WIRE_TYPE",
    "google.protobuf.internal.type_checkers.TYPE_TO_ENCODER",
    "google.protobuf.internal.type_checkers.TYPE_TO_SIZER",
    "google.protobuf.internal.wire_format.IsTypePackable",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._AttachFieldHelpers.AddDecoder": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "_GetInitializeDefaultForMap",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMessageMapField",
    "google.protobuf.internal.decoder.MapDecoder",
    "google.protobuf.internal.encoder.TagBytes",
    "google.protobuf.internal.type_checkers.SupportsOpenEnums",
    "google.protobuf.internal.type_checkers.TYPE_TO_DECODER"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._BytesForNonRepeatedElement": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "KeyError",
    "fn",
    "google.protobuf.internal.type_checkers.TYPE_TO_BYTE_SIZE_FN",
    "google.protobuf.message.EncodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._Clear": {
  "data": {
   "lineno": 1282
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._DefaultValueConstructorForField": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._GetInitializeDefaultForMap",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMapField",
    "google.protobuf.internal.type_checkers.GetTypeChecker"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._DefaultValueConstructorForField.MakeRepeatedMessageDefault": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
    "google.protobuf.message._listener_for_children"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._DefaultValueConstructorForField.MakeRepeatedScalarDefault": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "google.protobuf.internal.containers.RepeatedScalarFieldContainer",
    "google.protobuf.message._listener_for_children"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._DefaultValueConstructorForField.MakeScalarDefault": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._DefaultValueConstructorForField.MakeSubMessageDefault": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "_OneofListener",
    "google.protobuf.message",
    "google.protobuf.message._listener_for_children"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._DiscardUnknownFields": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict._FindExtensionByName": {
  "data": {
   "lineno": 1530
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict._FindExtensionByNumber": {
  "data": {
   "lineno": 1541
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict.__eq__": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict.__getitem__": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "ReferenceError",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._VerifyExtensionHandle"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict.__hash__": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict.__init__": {
  "data": {
   "lineno": 1447
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict.__ne__": {
  "data": {
   "lineno": 1499
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ExtensionDict.__setitem__": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "TypeError",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._VerifyExtensionHandle",
    "google.protobuf.internal.type_checkers.GetTypeChecker"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._GetFieldByName": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._GetInitializeDefaultForMap": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.python_message._IsMessageMapField",
    "google.protobuf.internal.type_checkers.GetTypeChecker"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._GetInitializeDefaultForMap.MakeMessageMapDefault": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.message._listener_for_children"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._GetInitializeDefaultForMap.MakePrimitiveMapDefault": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "google.protobuf.internal.containers.ScalarMap",
    "google.protobuf.message._listener_for_children"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._InternalUnpackAny": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "google.protobuf.descriptor",
    "google.protobuf.message",
    "google.protobuf.message.ParseFromString",
    "google.protobuf.symbol_database.Default",
    "message_class"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._IsMapField": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._IsMessageMapField": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._IsMessageSetExtension": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._IsPresent": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "bool",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._Listener": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._Listener.Modified": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "ReferenceError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._Listener.__init__": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message.weakref",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._OneofListener": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._Listener"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._OneofListener.Modified": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "ReferenceError",
    "external.protobuf.python.google.protobuf.internal.python_message._OneofListener",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._OneofListener.__init__": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.python_message._OneofListener",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._PropertyName": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._Proto2HasError": {
  "data": {
   "lineno": 803
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._Proto3HasError": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._ReraiseTypeErrorWithFieldName": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "TypeError",
    "external.protobuf.python.google.protobuf.internal.python_message.six",
    "external.protobuf.python.google.protobuf.internal.python_message.sys",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._SetListener": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "google.protobuf.internal.message_listener.NullMessageListener"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message._VerifyExtensionHandle": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "KeyError",
    "external.protobuf.python.google.protobuf.internal.python_message._FieldDescriptor",
    "google.protobuf.message.DESCRIPTOR",
    "google.protobuf.message.DESCRIPTOR.full_name",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.__author__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.containers": {
  "data": {
   "shadows": "google.protobuf.internal.containers"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.copyreg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.decoder": {
  "data": {
   "shadows": "google.protobuf.internal.decoder"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.descriptor_mod": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.encoder": {
  "data": {
   "shadows": "google.protobuf.internal.encoder"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.message_listener_mod": {
  "data": {
   "shadows": "google.protobuf.internal.message_listener"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.message_mod": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.type_checkers": {
  "data": {
   "shadows": "google.protobuf.internal.type_checkers"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.well_known_types": {
  "data": {
   "shadows": "google.protobuf.internal.well_known_types"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.python_message.wire_format": {
  "data": {
   "shadows": "google.protobuf.internal.wire_format"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bytes",
    "external.protobuf.python.google.protobuf.internal.type_checkers.Int32ValueChecker",
    "external.protobuf.python.google.protobuf.internal.type_checkers.Int64ValueChecker",
    "external.protobuf.python.google.protobuf.internal.type_checkers.TypeCheckerWithDefault",
    "external.protobuf.python.google.protobuf.internal.type_checkers.Uint32ValueChecker",
    "external.protobuf.python.google.protobuf.internal.type_checkers.Uint64ValueChecker",
    "external.protobuf.python.google.protobuf.internal.type_checkers._FieldDescriptor",
    "external.protobuf.python.google.protobuf.internal.type_checkers.long",
    "external.protobuf.python.google.protobuf.internal.type_checkers.six",
    "float",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.internal.decoder.BoolDecoder",
    "google.protobuf.internal.decoder.BytesDecoder",
    "google.protobuf.internal.decoder.DoubleDecoder",
    "google.protobuf.internal.decoder.EnumDecoder",
    "google.protobuf.internal.decoder.Fixed32Decoder",
    "google.protobuf.internal.decoder.Fixed64Decoder",
    "google.protobuf.internal.decoder.FloatDecoder",
    "google.protobuf.internal.decoder.GroupDecoder",
    "google.protobuf.internal.decoder.Int32Decoder",
    "google.protobuf.internal.decoder.Int64Decoder",
    "google.protobuf.internal.decoder.MessageDecoder",
    "google.protobuf.internal.decoder.SFixed32Decoder",
    "google.protobuf.internal.decoder.SFixed64Decoder",
    "google.protobuf.internal.decoder.SInt32Decoder",
    "google.protobuf.internal.decoder.SInt64Decoder",
    "google.protobuf.internal.decoder.StringDecoder",
    "google.protobuf.internal.decoder.UInt32Decoder",
    "google.protobuf.internal.decoder.UInt64Decoder",
    "google.protobuf.internal.encoder.BoolEncoder",
    "google.protobuf.internal.encoder.BoolSizer",
    "google.protobuf.internal.encoder.BytesEncoder",
    "google.protobuf.internal.encoder.BytesSizer",
    "google.protobuf.internal.encoder.DoubleEncoder",
    "google.protobuf.internal.encoder.DoubleSizer",
    "google.protobuf.internal.encoder.EnumEncoder",
    "google.protobuf.internal.encoder.EnumSizer",
    "google.protobuf.internal.encoder.Fixed32Encoder",
    "google.protobuf.internal.encoder.Fixed32Sizer",
    "google.protobuf.internal.encoder.Fixed64Encoder",
    "google.protobuf.internal.encoder.Fixed64Sizer",
    "google.protobuf.internal.encoder.FloatEncoder",
    "google.protobuf.internal.encoder.FloatSizer",
    "google.protobuf.internal.encoder.GroupEncoder",
    "google.protobuf.internal.encoder.GroupSizer",
    "google.protobuf.internal.encoder.Int32Encoder",
    "google.protobuf.internal.encoder.Int32Sizer",
    "google.protobuf.internal.encoder.Int64Encoder",
    "google.protobuf.internal.encoder.Int64Sizer",
    "google.protobuf.internal.encoder.MessageEncoder",
    "google.protobuf.internal.encoder.MessageSizer",
    "google.protobuf.internal.encoder.SFixed32Encoder",
    "google.protobuf.internal.encoder.SFixed32Sizer",
    "google.protobuf.internal.encoder.SFixed64Encoder",
    "google.protobuf.internal.encoder.SFixed64Sizer",
    "google.protobuf.internal.encoder.SInt32Encoder",
    "google.protobuf.internal.encoder.SInt32Sizer",
    "google.protobuf.internal.encoder.SInt64Encoder",
    "google.protobuf.internal.encoder.SInt64Sizer",
    "google.protobuf.internal.encoder.StringEncoder",
    "google.protobuf.internal.encoder.StringSizer",
    "google.protobuf.internal.encoder.UInt32Encoder",
    "google.protobuf.internal.encoder.UInt32Sizer",
    "google.protobuf.internal.encoder.UInt64Encoder",
    "google.protobuf.internal.encoder.UInt64Sizer",
    "google.protobuf.internal.wire_format.BoolByteSize",
    "google.protobuf.internal.wire_format.BytesByteSize",
    "google.protobuf.internal.wire_format.DoubleByteSize",
    "google.protobuf.internal.wire_format.EnumByteSize",
    "google.protobuf.internal.wire_format.Fixed32ByteSize",
    "google.protobuf.internal.wire_format.Fixed64ByteSize",
    "google.protobuf.internal.wire_format.FloatByteSize",
    "google.protobuf.internal.wire_format.GroupByteSize",
    "google.protobuf.internal.wire_format.Int32ByteSize",
    "google.protobuf.internal.wire_format.Int64ByteSize",
    "google.protobuf.internal.wire_format.MessageByteSize",
    "google.protobuf.internal.wire_format.SFixed32ByteSize",
    "google.protobuf.internal.wire_format.SFixed64ByteSize",
    "google.protobuf.internal.wire_format.SInt32ByteSize",
    "google.protobuf.internal.wire_format.SInt64ByteSize",
    "google.protobuf.internal.wire_format.StringByteSize",
    "google.protobuf.internal.wire_format.UInt32ByteSize",
    "google.protobuf.internal.wire_format.UInt64ByteSize",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED32",
    "google.protobuf.internal.wire_format.WIRETYPE_FIXED64",
    "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED",
    "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP",
    "google.protobuf.internal.wire_format.WIRETYPE_VARINT",
    "int"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.EnumValueChecker": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.EnumValueChecker.CheckValue": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.type_checkers.six",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.EnumValueChecker.DefaultValue": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.EnumValueChecker.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.FIELD_TYPE_TO_WIRE_TYPE": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.GetTypeChecker": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "EnumValueChecker",
    "UnicodeValueChecker",
    "external.protobuf.python.google.protobuf.internal.type_checkers.SupportsOpenEnums",
    "external.protobuf.python.google.protobuf.internal.type_checkers._FieldDescriptor"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.Int32ValueChecker": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.type_checkers.IntValueChecker",
    "int"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.Int64ValueChecker": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.type_checkers.IntValueChecker",
    "external.protobuf.python.google.protobuf.internal.type_checkers.long"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.IntValueChecker": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.IntValueChecker.CheckValue": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.type_checkers.six",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.IntValueChecker.DefaultValue": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.SupportsOpenEnums": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TYPE_TO_BYTE_SIZE_FN": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TYPE_TO_DECODER": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TYPE_TO_ENCODER": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TYPE_TO_SIZER": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TypeChecker": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TypeChecker.CheckValue": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TypeChecker.__init__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TypeCheckerWithDefault": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.type_checkers.TypeChecker"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TypeCheckerWithDefault.DefaultValue": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.TypeCheckerWithDefault.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.type_checkers.TypeChecker"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.Uint32ValueChecker": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.type_checkers.IntValueChecker",
    "int"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.Uint64ValueChecker": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.type_checkers.IntValueChecker",
    "external.protobuf.python.google.protobuf.internal.type_checkers.long"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.UnicodeValueChecker": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.UnicodeValueChecker.CheckValue": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "TypeError",
    "UnicodeDecodeError",
    "ValueError",
    "bytes",
    "external.protobuf.python.google.protobuf.internal.type_checkers.six",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.UnicodeValueChecker.DefaultValue": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers._FieldDescriptor": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers._VALUE_CHECKERS": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.__author__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.api_implementation": {
  "data": {
   "shadows": "google.protobuf.internal.api_implementation"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.decoder": {
  "data": {
   "shadows": "google.protobuf.internal.decoder"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.encoder": {
  "data": {
   "shadows": "google.protobuf.internal.encoder"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.long": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.type_checkers.wire_format": {
  "data": {
   "shadows": "google.protobuf.internal.wire_format"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types.Any",
    "external.protobuf.python.google.protobuf.internal.well_known_types.Duration",
    "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask",
    "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue",
    "external.protobuf.python.google.protobuf.internal.well_known_types.Struct",
    "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp",
    "external.protobuf.python.google.protobuf.internal.well_known_types.six",
    "float"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Any": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Any.Is": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Any.Pack": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Any.TypeName": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Any.Unpack": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.FromJsonString": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.well_known_types.ParseError",
    "float",
    "int",
    "len",
    "round"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.FromMicroseconds": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._MICROS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.FromMilliseconds": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._MILLIS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MILLISECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.FromNanoseconds": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.FromSeconds": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.FromTimedelta": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._SECONDS_PER_DAY"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.ToJsonString": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.ToMicroseconds": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "_RoundTowardZero",
    "external.protobuf.python.google.protobuf.internal.well_known_types._MICROS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.ToMilliseconds": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "_RoundTowardZero",
    "external.protobuf.python.google.protobuf.internal.well_known_types._MILLIS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MILLISECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.ToNanoseconds": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.ToSeconds": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration.ToTimedelta": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "_RoundTowardZero",
    "datetime.timedelta",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Duration._NormalizeDuration": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Error": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldDescriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor.FieldDescriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.AllFieldsFromDescriptor": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.CanonicalFormFromMask": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "_FieldMaskTree"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.FromJsonString": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.Intersect": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "_CheckFieldMaskMessage",
    "_FieldMaskTree"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.IsValidForDescriptor": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "_IsValidPath"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.MergeMessage": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "_FieldMaskTree"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.ToJsonString": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.FieldMask.Union": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "_CheckFieldMaskMessage",
    "_FieldMaskTree"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.__getitem__": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._GetStructValue"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.__len__": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.__setitem__": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._SetStructValue"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.add_list": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.add_struct": {
  "data": {
   "lineno": 708
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.append": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._SetStructValue"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.extend": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ListValue.items": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.ParseError": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Struct": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Struct.__getitem__": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._GetStructValue"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Struct.__setitem__": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._SetStructValue"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Struct.get_or_create_list": {
  "data": {
   "lineno": 673
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Struct.get_or_create_struct": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.FromDatetime": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "datetime.datetime",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._SECONDS_PER_DAY"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.FromJsonString": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.strptime",
    "external.protobuf.python.google.protobuf.internal.well_known_types.ParseError",
    "external.protobuf.python.google.protobuf.internal.well_known_types._SECONDS_PER_DAY",
    "external.protobuf.python.google.protobuf.internal.well_known_types._TIMESTAMPFOMAT",
    "float",
    "int",
    "len",
    "round"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.FromMicroseconds": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._MICROS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.FromMilliseconds": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._MILLIS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MILLISECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.FromNanoseconds": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.FromSeconds": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.GetCurrentTime": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "datetime.datetime.utcnow"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.ToDatetime": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "datetime.datetime.utcfromtimestamp",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND",
    "float"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.ToJsonString": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._SECONDS_PER_DAY"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.ToMicroseconds": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._MICROS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.ToMilliseconds": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._MILLIS_PER_SECOND",
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MILLISECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.ToNanoseconds": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.Timestamp.ToSeconds": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.WKTBASES": {
  "data": {
   "lineno": 717
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._AddFieldPaths": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._CheckFieldMaskMessage": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree.AddLeafNodes": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree.AddPath": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree.IntersectPath": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree.MergeFromFieldMask": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree.MergeMessage": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "_MergeMessage"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree.ToFieldMask": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "_AddFieldPaths"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._FieldMaskTree.__init__": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._GetStructValue": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._INT_OR_FLOAT": {
  "data": {
   "lineno": 626
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._IsValidPath": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._MICROS_PER_SECOND": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._MILLIS_PER_SECOND": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._MergeMessage": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.internal.well_known_types._StrConvert",
    "getattr",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MICROSECOND": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_MILLISECOND": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._NANOS_PER_SECOND": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._RoundTowardZero": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._SECONDS_PER_DAY": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._SetStructValue": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "external.protobuf.python.google.protobuf.internal.well_known_types._INT_OR_FLOAT",
    "external.protobuf.python.google.protobuf.internal.well_known_types.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._StrConvert": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types._TIMESTAMPFOMAT": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.__author__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.well_known_types.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format": {
  "data": {
   "symbols_in_volume": [
    "AssertionError",
    "external.protobuf.python.google.protobuf.internal.wire_format.FORMAT_UINT32_LITTLE_ENDIAN",
    "external.protobuf.python.google.protobuf.internal.wire_format.FORMAT_UINT64_LITTLE_ENDIAN",
    "external.protobuf.python.google.protobuf.internal.wire_format.TAG_TYPE_BITS",
    "external.protobuf.python.google.protobuf.internal.wire_format.struct",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_GROUP",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_STRING",
    "int"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.BoolByteSize": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "TagByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.BytesByteSize": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TagByteSize",
    "_VarUInt64ByteSizeNoTag",
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.DoubleByteSize": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "TagByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.EnumByteSize": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.wire_format.UInt32ByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.FORMAT_DOUBLE_LITTLE_ENDIAN": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.FORMAT_FLOAT_LITTLE_ENDIAN": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.FORMAT_UINT32_LITTLE_ENDIAN": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.FORMAT_UINT64_LITTLE_ENDIAN": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.Fixed32ByteSize": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "TagByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.Fixed64ByteSize": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "TagByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.FloatByteSize": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "TagByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.GroupByteSize": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TagByteSize",
    "google.protobuf.message.ByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.INT32_MAX": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.INT32_MIN": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.INT64_MAX": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.INT64_MIN": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.Int32ByteSize": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Int64ByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.Int32ByteSizeNoTag": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_VarUInt64ByteSizeNoTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.Int64ByteSize": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "UInt64ByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.IsTypePackable": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.wire_format.NON_PACKABLE_TYPES"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.MessageByteSize": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TagByteSize",
    "_VarUInt64ByteSizeNoTag",
    "google.protobuf.message.ByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.MessageSetItemByteSize": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TagByteSize",
    "_VarUInt64ByteSizeNoTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.NON_PACKABLE_TYPES": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.PackTag": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.wire_format.TAG_TYPE_BITS",
    "external.protobuf.python.google.protobuf.internal.wire_format._WIRETYPE_MAX",
    "google.protobuf.message.EncodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.SFixed32ByteSize": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TagByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.SFixed64ByteSize": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "TagByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.SInt32ByteSize": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.wire_format.UInt32ByteSize",
    "external.protobuf.python.google.protobuf.internal.wire_format.ZigZagEncode"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.SInt64ByteSize": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.wire_format.UInt64ByteSize",
    "external.protobuf.python.google.protobuf.internal.wire_format.ZigZagEncode"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.StringByteSize": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "BytesByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.TAG_TYPE_BITS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.TAG_TYPE_MASK": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.TagByteSize": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_VarUInt64ByteSizeNoTag",
    "external.protobuf.python.google.protobuf.internal.wire_format.PackTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.UINT32_MAX": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.UINT64_MAX": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.UInt32ByteSize": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "UInt64ByteSize"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.UInt64ByteSize": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TagByteSize",
    "_VarUInt64ByteSizeNoTag"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.UnpackTag": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.wire_format.TAG_TYPE_BITS",
    "external.protobuf.python.google.protobuf.internal.wire_format.TAG_TYPE_MASK"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.WIRETYPE_END_GROUP": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.WIRETYPE_FIXED32": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.WIRETYPE_FIXED64": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.WIRETYPE_START_GROUP": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.WIRETYPE_VARINT": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.ZigZagDecode": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.ZigZagEncode": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format._VarUInt64ByteSizeNoTag": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.internal.wire_format.UINT64_MAX",
    "google.protobuf.message.EncodeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format._WIRETYPE_MAX": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.internal.wire_format.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "external.protobuf.python.google.protobuf.json_format.re",
    "external.protobuf.python.google.protobuf.json_format.six",
    "float",
    "frozenset",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_DOUBLE",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_FLOAT",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_INT32",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_INT64",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_UINT32",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_UINT64"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.json_format.Error": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.json_format.MessageToJson": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_Printer"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format.OrderedDict": {
  "data": {
   "shadows": "ordereddict.OrderedDict"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.Parse": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "_Parser",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "external.protobuf.python.google.protobuf.json_format._DuplicateChecker",
    "external.protobuf.python.google.protobuf.json_format.json",
    "external.protobuf.python.google.protobuf.json_format.six",
    "external.protobuf.python.google.protobuf.json_format.sys",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format.ParseError": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.json_format.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.json_format.SerializeToJsonError": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.json_format.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.json_format._ConvertBool": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "bool",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._ConvertFloat": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "external.protobuf.python.google.protobuf.json_format._INFINITY",
    "external.protobuf.python.google.protobuf.json_format._NAN",
    "external.protobuf.python.google.protobuf.json_format._NEG_INFINITY",
    "float"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._ConvertInteger": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "external.protobuf.python.google.protobuf.json_format.six",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._ConvertScalarFieldValue": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "_ConvertBool",
    "_ConvertFloat",
    "_ConvertInteger",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "external.protobuf.python.google.protobuf.json_format._FLOAT_TYPES",
    "external.protobuf.python.google.protobuf.json_format._INT_TYPES",
    "external.protobuf.python.google.protobuf.json_format._UNPAIRED_SURROGATE_PATTERN",
    "external.protobuf.python.google.protobuf.json_format.base64",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_BOOL",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_ENUM",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_STRING",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._CreateMessageFromTypeUrl": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "google.protobuf.symbol_database.Default",
    "message_class"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._DuplicateChecker": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.json_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._FLOAT_TYPES": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._INFINITY": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._INT64_TYPES": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._INT_OR_FLOAT": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._INT_TYPES": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._IsMapEntry": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._IsWrapperMessage": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._NAN": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._NEG_INFINITY": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser.ConvertMessage": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.json_format._IsWrapperMessage",
    "operator.methodcaller"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertAnyMessage": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "external.protobuf.python.google.protobuf.json_format._CreateMessageFromTypeUrl",
    "external.protobuf.python.google.protobuf.json_format._IsWrapperMessage",
    "isinstance",
    "operator.methodcaller"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertFieldValuePair": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_ConvertScalarFieldValue",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "external.protobuf.python.google.protobuf.json_format._IsMapEntry",
    "getattr",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "isinstance",
    "list",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertGenericMessage": {
  "data": {
   "lineno": 471
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertListValueMessage": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertMapFieldValue": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "_ConvertScalarFieldValue",
    "dict",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "getattr",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertStructMessage": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertValueMessage": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "bool",
    "dict",
    "external.protobuf.python.google.protobuf.json_format.ParseError",
    "external.protobuf.python.google.protobuf.json_format._INT_OR_FLOAT",
    "external.protobuf.python.google.protobuf.json_format.six",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser._ConvertWrapperMessage": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "_ConvertScalarFieldValue",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Parser.__init__": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer.ToJsonString": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.json_format.json"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._AnyMessageToJsonObject": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "_CreateMessageFromTypeUrl",
    "_IsWrapperMessage",
    "operator.methodcaller",
    "ordereddict.OrderedDict"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._FieldToJsonObject": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "bool",
    "external.protobuf.python.google.protobuf.json_format.SerializeToJsonError",
    "external.protobuf.python.google.protobuf.json_format._FLOAT_TYPES",
    "external.protobuf.python.google.protobuf.json_format._INFINITY",
    "external.protobuf.python.google.protobuf.json_format._INT64_TYPES",
    "external.protobuf.python.google.protobuf.json_format._NAN",
    "external.protobuf.python.google.protobuf.json_format._NEG_INFINITY",
    "external.protobuf.python.google.protobuf.json_format.base64",
    "external.protobuf.python.google.protobuf.json_format.math",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_BOOL",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_ENUM",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_STRING",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._GenericMessageToJsonObject": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._ListValueMessageToJsonObject": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._MessageToJsonObject": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "_IsWrapperMessage",
    "operator.methodcaller"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._RegularMessageToJsonObject": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "external.protobuf.python.google.protobuf.json_format.SerializeToJsonError",
    "external.protobuf.python.google.protobuf.json_format._IsMapEntry",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._StructMessageToJsonObject": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._ValueMessageToJsonObject": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer._WrapperMessageToJsonObject": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._Printer.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.json_format._TIMESTAMPFOMAT": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._UNPAIRED_SURROGATE_PATTERN": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format._WKTJSONMETHODS": {
  "data": {
   "lineno": 649
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format.__author__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.json_format.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.methodcaller": {
  "data": {
   "shadows": "operator.methodcaller"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.json_format.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.message": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.message.DecodeError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.message.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.message.EncodeError": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.message.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.message.Error": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.message.Message": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.message.Message.ByteSize": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.Clear": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.ClearExtension": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.ClearField": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.CopyFrom": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.DiscardUnknownFields": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.HasExtension": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.HasField": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.IsInitialized": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.ListFields": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.MergeFrom": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.MergeFromString": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.ParseFromString": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.SerializePartialToString": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.SerializeToString": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.SetInParent": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.WhichOneof": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message._SetListener": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__deepcopy__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__eq__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__getstate__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__hash__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__ne__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__setstate__": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__str__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.Message.__unicode__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.message_factory": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.message_factory.MessageFactory"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.message_factory.GetMessages": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.message_factory._FACTORY"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message_factory.MessageFactory": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.message_factory.MessageFactory.GetMessages": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message_factory.MessageFactory.GetPrototype": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bytes",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message_factory.MessageFactory.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "google.protobuf.descriptor_pool.DescriptorPool"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.message_factory._FACTORY": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.message_factory.__author__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.message_factory.descriptor_pool": {
  "data": {
   "shadows": "google.protobuf.descriptor_pool"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.message_factory.message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.message_factory.reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.proto_builder": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.proto_builder.MakeSimpleProtoClass": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyError",
    "_MakeFileDescriptorProto",
    "external.protobuf.python.google.protobuf.proto_builder._GetMessageFromFactory",
    "external.protobuf.python.google.protobuf.proto_builder.hashlib",
    "google.protobuf.message_factory.MessageFactory",
    "isinstance",
    "ordereddict.OrderedDict",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.proto_builder.OrderedDict": {
  "data": {
   "shadows": "ordereddict.OrderedDict"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.proto_builder._GetMessageFromFactory": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.proto_builder._MakeFileDescriptorProto": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "enumerate",
    "external.protobuf.python.google.protobuf.proto_builder.os",
    "google.protobuf.descriptor_pb2.FieldDescriptorProto.LABEL_OPTIONAL",
    "google.protobuf.descriptor_pb2.FileDescriptorProto"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.proto_builder.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.proto_builder.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.proto_builder.message_factory": {
  "data": {
   "shadows": "google.protobuf.message_factory"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.proto_builder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.pyext": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.pyext.cpp_message": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "google.protobuf.pyext._message.MessageMeta"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.pyext.cpp_message.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.pyext.cpp_message._message": {
  "data": {
   "shadows": "google.protobuf.pyext._message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.reflection": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.internal.api_implementation.Type",
    "google.protobuf.internal.python_message.GeneratedProtocolMessageType"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.reflection.GeneratedProtocolMessageType": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.reflection.MakeClass": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.message.Message",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.reflection.ParseMessage": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "MakeClass",
    "result_class"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.reflection.__author__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.reflection.api_implementation": {
  "data": {
   "shadows": "google.protobuf.internal.api_implementation"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.reflection.message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.reflection.message_impl": {
  "data": {
   "shadows": "google.protobuf.internal.python_message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.service": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.service.RpcChannel": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service.RpcChannel.CallMethod": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcController": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service.RpcController.ErrorText": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcController.Failed": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcController.IsCanceled": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcController.NotifyOnCancel": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcController.Reset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcController.SetFailed": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcController.StartCancel": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.RpcException": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service.Service": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service.Service.CallMethod": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.Service.GetDescriptor": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.Service.GetRequestClass": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.Service.GetResponseClass": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service.__author__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.service_reflection": {
  "data": {},
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.service_reflection.GeneratedServiceStubType": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.service_reflection.GeneratedServiceType"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service_reflection.GeneratedServiceStubType.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "_ServiceStubBuilder",
    "external.protobuf.python.google.protobuf.service_reflection.GeneratedServiceStubType",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection.GeneratedServiceType": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service_reflection.GeneratedServiceType.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_ServiceBuilder",
    "external.protobuf.python.google.protobuf.service_reflection.GeneratedServiceType"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder.BuildService": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "setattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder.BuildService._WrapCallMethod": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder._CallMethod": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "method"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder._GenerateNonImplementedMethod": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "method.name"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder._GetRequestClass": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder._GetResponseClass": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder._NonImplementedMethod": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceBuilder.__init__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceStubBuilder": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceStubBuilder.BuildServiceStub": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "method",
    "method.name",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceStubBuilder.BuildServiceStub._ServiceStubInit": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceStubBuilder._GenerateStubMethod": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "callback",
    "method"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceStubBuilder._StubMethod": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection._ServiceStubBuilder.__init__": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.service_reflection.__author__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.source_context_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.source_context_pb2.SourceContext",
    "external.protobuf.python.google.protobuf.source_context_pb2._SOURCECONTEXT",
    "external.protobuf.python.google.protobuf.source_context_pb2._b",
    "external.protobuf.python.google.protobuf.source_context_pb2._sym_db",
    "external.protobuf.python.google.protobuf.source_context_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2.SourceContext": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2._SOURCECONTEXT": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.source_context_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.struct_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.struct_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.struct_pb2.ListValue",
    "external.protobuf.python.google.protobuf.struct_pb2.Struct",
    "external.protobuf.python.google.protobuf.struct_pb2.Value",
    "external.protobuf.python.google.protobuf.struct_pb2._LISTVALUE",
    "external.protobuf.python.google.protobuf.struct_pb2._NULLVALUE",
    "external.protobuf.python.google.protobuf.struct_pb2._STRUCT",
    "external.protobuf.python.google.protobuf.struct_pb2._STRUCT_FIELDSENTRY",
    "external.protobuf.python.google.protobuf.struct_pb2._VALUE",
    "external.protobuf.python.google.protobuf.struct_pb2._b",
    "external.protobuf.python.google.protobuf.struct_pb2._sym_db",
    "external.protobuf.python.google.protobuf.struct_pb2.sys",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.ListValue": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.NULL_VALUE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.NullValue": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.Struct": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.Value": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._LISTVALUE": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._NULLVALUE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._STRUCT": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._STRUCT_FIELDSENTRY": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._VALUE": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.struct_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.struct_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.symbol_database": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase",
    "google.protobuf.descriptor_pool.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.symbol_database.Default": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.symbol_database._DEFAULT"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "google.protobuf.message_factory.MessageFactory"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase.GetMessages": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "KeyError",
    "_GetAllMessageNames"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase.GetMessages._GetAllMessageNames": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "_GetAllMessageNames"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase.GetSymbol": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase.RegisterEnumDescriptor": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase.RegisterFileDescriptor": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.symbol_database.SymbolDatabase.RegisterMessage": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.symbol_database._DEFAULT": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.symbol_database.descriptor_pool": {
  "data": {
   "shadows": "google.protobuf.descriptor_pool"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.symbol_database.message_factory": {
  "data": {
   "shadows": "google.protobuf.message_factory"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_encoding": {
  "data": {
   "symbols_in_volume": [
    "chr",
    "external.protobuf.python.google.protobuf.text_encoding._cescape_byte_to_str",
    "external.protobuf.python.google.protobuf.text_encoding._cescape_utf8_to_str",
    "external.protobuf.python.google.protobuf.text_encoding.re",
    "range"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.text_encoding.CEscape": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Ord",
    "external.protobuf.python.google.protobuf.text_encoding._cescape_byte_to_str",
    "external.protobuf.python.google.protobuf.text_encoding._cescape_utf8_to_str",
    "external.protobuf.python.google.protobuf.text_encoding.six",
    "isinstance",
    "ord"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_encoding.CUnescape": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bytes",
    "external.protobuf.python.google.protobuf.text_encoding._CUNESCAPE_HEX",
    "external.protobuf.python.google.protobuf.text_encoding._cescape_highbit_to_str",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_encoding.CUnescape.ReplaceHex": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_encoding._CUNESCAPE_HEX": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_encoding._cescape_byte_to_str": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_encoding._cescape_highbit_to_str": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_encoding._cescape_utf8_to_str": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_encoding.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_encoding.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_format": {
  "data": {
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.Tokenizer",
    "external.protobuf.python.google.protobuf.text_format.re",
    "external.protobuf.python.google.protobuf.text_format.six",
    "frozenset",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_DOUBLE",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_FLOAT",
    "google.protobuf.internal.type_checkers.Int32ValueChecker",
    "google.protobuf.internal.type_checkers.Int64ValueChecker",
    "google.protobuf.internal.type_checkers.Uint32ValueChecker",
    "google.protobuf.internal.type_checkers.Uint64ValueChecker",
    "int"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.text_format.Error": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.text_format.Merge": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "MergeLines"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.MergeLines": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "_Parser"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.MessageToString": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_Printer",
    "external.protobuf.python.google.protobuf.text_format.TextWriter"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Parse": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ParseLines",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseBool": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseEnum": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseError": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.Error"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseError.GetColumn": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseError.GetLine": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseError.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseFloat": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.text_format._FLOAT_INFINITY",
    "external.protobuf.python.google.protobuf.text_format._FLOAT_NAN",
    "float"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseInteger": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "_ParseAbstractInteger",
    "external.protobuf.python.google.protobuf.text_format._INTEGER_CHECKERS",
    "int"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.ParseLines": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "_Parser"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.PrintField": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "_Printer"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.PrintFieldValue": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_Printer"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.PrintMessage": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "_Printer"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.TextWriter": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.text_format.TextWriter.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.io",
    "external.protobuf.python.google.protobuf.text_format.six"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.TextWriter.close": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.TextWriter.getvalue": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.TextWriter.write": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format._QUOTES",
    "external.protobuf.python.google.protobuf.text_format.re",
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.AtEnd": {
  "data": {
   "lineno": 966
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.Consume": {
  "data": {
   "lineno": 1009
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeBool": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "ParseBool",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeByteString": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format._QUOTES"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeComment": {
  "data": {
   "lineno": 1021
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeEnum": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "ParseEnum",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeFloat": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "ParseFloat",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeIdentifier": {
  "data": {
   "lineno": 1035
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeIdentifierOrNumber": {
  "data": {
   "lineno": 1057
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeInteger": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "ValueError",
    "_ParseAbstractInteger",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ConsumeString": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "external.protobuf.python.google.protobuf.text_format.six"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.LookingAt": {
  "data": {
   "lineno": 963
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.NextToken": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ParseError": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.ParseErrorPreviousToken": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.TryConsume": {
  "data": {
   "lineno": 995
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.TryConsumeByteString": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.TryConsumeFloat": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.TryConsumeIdentifier": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.TryConsumeIdentifierOrNumber": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.TryConsumeInteger": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer._ConsumeSingleByteString": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.text_format._QUOTES",
    "google.protobuf.text_encoding.CUnescape",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer._PopLine": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer._SkipWhitespace": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer._StringParseError": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.Tokenizer.__init__": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._ANY_FULL_TYPE_NAME": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format._BuildMessageFromTypeName": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "KeyError",
    "google.protobuf.message_factory.MessageFactory",
    "message_type"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._ConsumeInt32": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "_ConsumeInteger"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._ConsumeInt64": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "_ConsumeInteger"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._ConsumeInteger": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "ParseInteger",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._ConsumeUint32": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "_ConsumeInteger"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._ConsumeUint64": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "_ConsumeInteger"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._FLOAT_INFINITY": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format._FLOAT_NAN": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format._FLOAT_TYPES": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format._INTEGER_CHECKERS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format._IsMapEntry": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._ParseAbstractInteger": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "ValueError",
    "external.protobuf.python.google.protobuf.text_format.long",
    "int"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser.MergeFromString": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser.MergeLines": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser.ParseFromString": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser.ParseLines": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser._ConsumeAnyTypeUrl": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser._MergeField": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "ParseInteger",
    "_SkipFieldContents",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_GROUP",
    "hasattr",
    "merger"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser._MergeMessageField": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format.ParseError",
    "external.protobuf.python.google.protobuf.text_format._ANY_FULL_TYPE_NAME",
    "external.protobuf.python.google.protobuf.text_format._BuildMessageFromTypeName",
    "external.protobuf.python.google.protobuf.text_format._IsMapEntry",
    "getattr",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser._MergeScalarField": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "RuntimeError",
    "_ConsumeInt32",
    "_ConsumeInt64",
    "_ConsumeUint32",
    "_ConsumeUint64",
    "getattr",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BOOL",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_DOUBLE",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_ENUM",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_FIXED32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_FIXED64",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_FLOAT",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_INT32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_INT64",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_SFIXED32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_SFIXED64",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT64",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_STRING",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT64",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser._ParseOrMerge": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "Tokenizer"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Parser.__init__": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Printer": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.protobuf.python.google.protobuf.text_format._Printer.PrintField": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_OPTIONAL",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_GROUP",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Printer.PrintFieldValue": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format._FLOAT_TYPES",
    "external.protobuf.python.google.protobuf.text_format.six",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_BOOL",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_ENUM",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_STRING",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_BYTES",
    "google.protobuf.text_encoding.CEscape",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Printer.PrintMessage": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format._ANY_FULL_TYPE_NAME",
    "external.protobuf.python.google.protobuf.text_format._IsMapEntry",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "sorted"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Printer._PrintMessageFieldValue": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Printer._TryPrintAsAnyMessage": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format._BuildMessageFromTypeName"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Printer.__init__": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._QUOTES": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format._SkipField": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format._SkipFieldContents"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._SkipFieldContents": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "_SkipFieldMessage",
    "_SkipFieldValue"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._SkipFieldMessage": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "external.protobuf.python.google.protobuf.text_format._SkipField"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._SkipFieldValue": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "_TryConsumeInt64",
    "_TryConsumeUint64",
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._Tokenizer": {
  "data": {
   "lineno": 1249
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format._TryConsumeInt64": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "_ConsumeInt64",
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._TryConsumeInteger": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "_ConsumeInteger",
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format._TryConsumeUint64": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "_ConsumeUint64",
    "external.protobuf.python.google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "external.protobuf.python.google.protobuf.text_format.__all__": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format.__author__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format.descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_format.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_format.long": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.text_format.message_factory": {
  "data": {
   "shadows": "google.protobuf.message_factory"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_format.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_format.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_format.text_encoding": {
  "data": {
   "shadows": "google.protobuf.text_encoding"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.text_format.type_checkers": {
  "data": {
   "shadows": "google.protobuf.internal.type_checkers"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.timestamp_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.timestamp_pb2.Timestamp",
    "external.protobuf.python.google.protobuf.timestamp_pb2._TIMESTAMP",
    "external.protobuf.python.google.protobuf.timestamp_pb2._b",
    "external.protobuf.python.google.protobuf.timestamp_pb2._sym_db",
    "external.protobuf.python.google.protobuf.timestamp_pb2.sys",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2.Timestamp": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2._TIMESTAMP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.timestamp_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.type_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.type_pb2.Enum",
    "external.protobuf.python.google.protobuf.type_pb2.EnumValue",
    "external.protobuf.python.google.protobuf.type_pb2.Field",
    "external.protobuf.python.google.protobuf.type_pb2.Option",
    "external.protobuf.python.google.protobuf.type_pb2.Type",
    "external.protobuf.python.google.protobuf.type_pb2._ENUM",
    "external.protobuf.python.google.protobuf.type_pb2._ENUMVALUE",
    "external.protobuf.python.google.protobuf.type_pb2._FIELD",
    "external.protobuf.python.google.protobuf.type_pb2._FIELD_CARDINALITY",
    "external.protobuf.python.google.protobuf.type_pb2._FIELD_KIND",
    "external.protobuf.python.google.protobuf.type_pb2._OPTION",
    "external.protobuf.python.google.protobuf.type_pb2._SYNTAX",
    "external.protobuf.python.google.protobuf.type_pb2._TYPE",
    "external.protobuf.python.google.protobuf.type_pb2._b",
    "external.protobuf.python.google.protobuf.type_pb2._sym_db",
    "external.protobuf.python.google.protobuf.type_pb2.sys",
    "google.protobuf.any_pb2.DESCRIPTOR",
    "google.protobuf.any_pb2._ANY",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.source_context_pb2.DESCRIPTOR",
    "google.protobuf.source_context_pb2._SOURCECONTEXT",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.type_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.Enum": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.EnumValue": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.Field": {
  "data": {
   "lineno": 510
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.Option": {
  "data": {
   "lineno": 531
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.SYNTAX_PROTO2": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.SYNTAX_PROTO3": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.Syntax": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2.Type": {
  "data": {
   "lineno": 503
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._ENUM": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._ENUMVALUE": {
  "data": {
   "lineno": 399
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._FIELD": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._FIELD_CARDINALITY": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._FIELD_KIND": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._OPTION": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._SYNTAX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._TYPE": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.type_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2.google_dot_protobuf_dot_any__pb2": {
  "data": {
   "shadows": "google.protobuf.any_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2.google_dot_protobuf_dot_source__context__pb2": {
  "data": {
   "shadows": "google.protobuf.source_context_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.type_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "external.protobuf.python.google.protobuf.wrappers_pb2.BoolValue",
    "external.protobuf.python.google.protobuf.wrappers_pb2.BytesValue",
    "external.protobuf.python.google.protobuf.wrappers_pb2.DESCRIPTOR",
    "external.protobuf.python.google.protobuf.wrappers_pb2.DoubleValue",
    "external.protobuf.python.google.protobuf.wrappers_pb2.FloatValue",
    "external.protobuf.python.google.protobuf.wrappers_pb2.Int32Value",
    "external.protobuf.python.google.protobuf.wrappers_pb2.Int64Value",
    "external.protobuf.python.google.protobuf.wrappers_pb2.StringValue",
    "external.protobuf.python.google.protobuf.wrappers_pb2.UInt32Value",
    "external.protobuf.python.google.protobuf.wrappers_pb2.UInt64Value",
    "external.protobuf.python.google.protobuf.wrappers_pb2._BOOLVALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._BYTESVALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._DOUBLEVALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._FLOATVALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._INT32VALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._INT64VALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._STRINGVALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._UINT32VALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._UINT64VALUE",
    "external.protobuf.python.google.protobuf.wrappers_pb2._b",
    "external.protobuf.python.google.protobuf.wrappers_pb2._sym_db",
    "external.protobuf.python.google.protobuf.wrappers_pb2.sys",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.BoolValue": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.BytesValue": {
  "data": {
   "lineno": 373
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.DoubleValue": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.FloatValue": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.Int32Value": {
  "data": {
   "lineno": 345
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.Int64Value": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.StringValue": {
  "data": {
   "lineno": 366
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.UInt32Value": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.UInt64Value": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._BOOLVALUE": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._BYTESVALUE": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._DOUBLEVALUE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._FLOATVALUE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._INT32VALUE": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._INT64VALUE": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._STRINGVALUE": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._UINT32VALUE": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._UINT64VALUE": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "external.protobuf.python.google.protobuf.wrappers_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.six_archive": {
  "data": {},
  "type": "module"
 },
 "external.six_archive.six": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "OverflowError",
    "__name__",
    "__spec__.submodule_search_locations",
    "bytes",
    "chr",
    "enumerate",
    "external.six_archive.six.BytesIO",
    "external.six_archive.six.Module_six_moves_urllib",
    "external.six_archive.six.Module_six_moves_urllib_error",
    "external.six_archive.six.Module_six_moves_urllib_parse",
    "external.six_archive.six.Module_six_moves_urllib_request",
    "external.six_archive.six.Module_six_moves_urllib_response",
    "external.six_archive.six.Module_six_moves_urllib_robotparser",
    "external.six_archive.six.MovedAttribute",
    "external.six_archive.six.MovedModule",
    "external.six_archive.six.PY3",
    "external.six_archive.six.PY34",
    "external.six_archive.six.StringIO",
    "external.six_archive.six.X",
    "external.six_archive.six._MovedItems",
    "external.six_archive.six._SixMetaPathImporter",
    "external.six_archive.six._add_doc",
    "external.six_archive.six._func_closure",
    "external.six_archive.six._func_code",
    "external.six_archive.six._func_defaults",
    "external.six_archive.six._func_globals",
    "external.six_archive.six._importer",
    "external.six_archive.six._meth_func",
    "external.six_archive.six._meth_self",
    "external.six_archive.six._moved_attributes",
    "external.six_archive.six._urllib_error_moved_attributes",
    "external.six_archive.six._urllib_parse_moved_attributes",
    "external.six_archive.six._urllib_request_moved_attributes",
    "external.six_archive.six._urllib_response_moved_attributes",
    "external.six_archive.six._urllib_robotparser_moved_attributes",
    "external.six_archive.six.advance_iterator",
    "external.six_archive.six.b",
    "external.six_archive.six.exec_",
    "external.six_archive.six.functools",
    "external.six_archive.six.get_unbound_function",
    "external.six_archive.six.io",
    "external.six_archive.six.iteritems",
    "external.six_archive.six.iterkeys",
    "external.six_archive.six.iterlists",
    "external.six_archive.six.itertools",
    "external.six_archive.six.itervalues",
    "external.six_archive.six.moves",
    "external.six_archive.six.operator",
    "external.six_archive.six.print_",
    "external.six_archive.six.reraise",
    "external.six_archive.six.struct",
    "external.six_archive.six.sys",
    "external.six_archive.six.types",
    "external.six_archive.six.u",
    "getattr",
    "globals",
    "int",
    "isinstance",
    "iter",
    "len",
    "next",
    "object",
    "ord",
    "setattr",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "external.six_archive.six.BytesIO": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "external.six_archive.six.Iterator": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.Iterator.next": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.MAXSIZE": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "external.six_archive.six.Module_six_moves_urllib": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "external.six_archive.six._importer",
    "external.six_archive.six.types"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.Module_six_moves_urllib.__dir__": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "external.six_archive.six.Module_six_moves_urllib_error": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "external.six_archive.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.Module_six_moves_urllib_parse": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "external.six_archive.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.Module_six_moves_urllib_request": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "external.six_archive.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.Module_six_moves_urllib_response": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "external.six_archive.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.Module_six_moves_urllib_robotparser": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "external.six_archive.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.MovedAttribute": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "external.six_archive.six._LazyDescr"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.MovedAttribute.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "external.six_archive.six.MovedAttribute",
    "external.six_archive.six.PY3",
    "super"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.MovedAttribute._resolve": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "external.six_archive.six._import_module",
    "getattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.MovedModule": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "external.six_archive.six._LazyDescr"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.MovedModule.__getattr__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.MovedModule.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "external.six_archive.six.MovedModule",
    "external.six_archive.six.PY3",
    "super"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.MovedModule._resolve": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "external.six_archive.six._import_module"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.PY2": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "external.six_archive.six.PY3": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "external.six_archive.six.PY34": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "external.six_archive.six.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "external.six_archive.six.X": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six.X.__len__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "external.six_archive.six._LazyDescr": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six._LazyDescr.__get__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "AttributeError",
    "delattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six._LazyDescr.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "external.six_archive.six._LazyModule": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "external.six_archive.six.types"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six._LazyModule.__dir__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "external.six_archive.six._LazyModule.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "external.six_archive.six._LazyModule",
    "super"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six._MovedItems": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "external.six_archive.six._LazyModule"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six._SixMetaPathImporter": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "external.six_archive.six._SixMetaPathImporter.__get_module": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ImportError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six._SixMetaPathImporter.__init__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "external.six_archive.six._SixMetaPathImporter._add_module": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "external.six_archive.six._SixMetaPathImporter._get_module": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "external.six_archive.six._SixMetaPathImporter.find_module": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "external.six_archive.six._SixMetaPathImporter.get_code": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "external.six_archive.six._SixMetaPathImporter.is_package": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six._SixMetaPathImporter.load_module": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "KeyError",
    "external.six_archive.six.MovedModule",
    "external.six_archive.six.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "external.six_archive.six.__package__": {
  "data": {
   "lineno": 850
  },
  "type": "constant"
 },
 "external.six_archive.six.__path__": {
  "data": {
   "lineno": 849
  },
  "type": "constant"
 },
 "external.six_archive.six.__version__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "external.six_archive.six._add_doc": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "external.six_archive.six._assertCountEqual": {
  "data": {
   "lineno": 659
  },
  "type": "constant"
 },
 "external.six_archive.six._assertRaisesRegex": {
  "data": {
   "lineno": 660
  },
  "type": "constant"
 },
 "external.six_archive.six._assertRegex": {
  "data": {
   "lineno": 661
  },
  "type": "constant"
 },
 "external.six_archive.six._func_closure": {
  "data": {
   "lineno": 514
  },
  "type": "constant"
 },
 "external.six_archive.six._func_code": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "external.six_archive.six._func_defaults": {
  "data": {
   "lineno": 516
  },
  "type": "constant"
 },
 "external.six_archive.six._func_globals": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "external.six_archive.six._import_module": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "__import__",
    "external.six_archive.six.sys"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six._importer": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "external.six_archive.six._meth_func": {
  "data": {
   "lineno": 511
  },
  "type": "constant"
 },
 "external.six_archive.six._meth_self": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "external.six_archive.six._moved_attributes": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "external.six_archive.six._print": {
  "data": {
   "lineno": 777
  },
  "type": "constant"
 },
 "external.six_archive.six._urllib_error_moved_attributes": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "external.six_archive.six._urllib_parse_moved_attributes": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "external.six_archive.six._urllib_request_moved_attributes": {
  "data": {
   "lineno": 385
  },
  "type": "constant"
 },
 "external.six_archive.six._urllib_response_moved_attributes": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "external.six_archive.six._urllib_robotparser_moved_attributes": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "external.six_archive.six.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "external.six_archive.six.add_metaclass": {
  "data": {
   "lineno": 812
  },
  "type": "function"
 },
 "external.six_archive.six.add_metaclass.wrapper": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "isinstance",
    "metaclass",
    "str"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.add_move": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "external.six_archive.six._MovedItems",
    "setattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.advance_iterator": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "external.six_archive.six.assertCountEqual": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "external.six_archive.six._assertCountEqual",
    "getattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.assertRaisesRegex": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "external.six_archive.six._assertRaisesRegex",
    "getattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.assertRegex": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "external.six_archive.six._assertRegex",
    "getattr"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.b": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "external.six_archive.six.binary_type": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "external.six_archive.six.byte2int": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.callable": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "external.six_archive.six.class_types": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "external.six_archive.six.create_bound_method": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "external.six_archive.six.types"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.create_unbound_method": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "external.six_archive.six.types"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.exec_": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "exec",
    "external.six_archive.six.sys"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "external.six_archive.six.get_function_closure": {
  "data": {
   "lineno": 567
  },
  "type": "constant"
 },
 "external.six_archive.six.get_function_code": {
  "data": {
   "lineno": 568
  },
  "type": "constant"
 },
 "external.six_archive.six.get_function_defaults": {
  "data": {
   "lineno": 569
  },
  "type": "constant"
 },
 "external.six_archive.six.get_function_globals": {
  "data": {
   "lineno": 570
  },
  "type": "constant"
 },
 "external.six_archive.six.get_method_function": {
  "data": {
   "lineno": 565
  },
  "type": "constant"
 },
 "external.six_archive.six.get_method_self": {
  "data": {
   "lineno": 566
  },
  "type": "constant"
 },
 "external.six_archive.six.get_unbound_function": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "external.six_archive.six.indexbytes": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.int2byte": {
  "data": {
   "lineno": 649
  },
  "type": "constant"
 },
 "external.six_archive.six.integer_types": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "external.six_archive.six.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "external.six_archive.six.iterbytes": {
  "data": {
   "lineno": 656
  },
  "type": "constant"
 },
 "external.six_archive.six.iteritems": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "external.six_archive.six.iterkeys": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "external.six_archive.six.iterlists": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "external.six_archive.six.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "external.six_archive.six.itervalues": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "external.six_archive.six.moves": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "external.six_archive.six.next": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "external.six_archive.six.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "external.six_archive.six.print_": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "external.six_archive.six._print",
    "external.six_archive.six.sys"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.print_.write": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.python_2_unicode_compatible": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "ValueError",
    "external.six_archive.six.PY2"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.raise_from": {
  "data": {
   "lineno": 717
  },
  "type": "function"
 },
 "external.six_archive.six.remove_move": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "delattr",
    "external.six_archive.six._MovedItems",
    "external.six_archive.six.moves"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.reraise": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "tp"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.string_types": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "external.six_archive.six.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "external.six_archive.six.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "external.six_archive.six.text_type": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "external.six_archive.six.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "external.six_archive.six.u": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.unichr": {
  "data": {
   "lineno": 648
  },
  "type": "constant"
 },
 "external.six_archive.six.viewitems": {
  "data": {
   "lineno": 608
  },
  "type": "constant"
 },
 "external.six_archive.six.viewkeys": {
  "data": {
   "lineno": 604
  },
  "type": "constant"
 },
 "external.six_archive.six.viewvalues": {
  "data": {
   "lineno": 606
  },
  "type": "constant"
 },
 "external.six_archive.six.with_metaclass": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.with_metaclass.metaclass": {
  "data": {
   "lineno": 805
  },
  "type": "class"
 },
 "external.six_archive.six.with_metaclass.metaclass.__new__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "meta"
   ]
  },
  "type": "function"
 },
 "external.six_archive.six.wraps": {
  "data": {
   "lineno": 797
  },
  "type": "constant"
 },
 "external.six_archive.six.wraps.wrapper": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "external.six_archive.six.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow": {
  "data": {
   "symbols_in_volume": [
    "tensorflow._LazyContribLoader"
   ]
  },
  "type": "module"
 },
 "tensorflow._LazyContribLoader": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow._LazyContribLoader.__getattr__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "getattr",
    "tensorflow.importlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.entropy": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.entropy"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.monte_carlo": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.monte_carlo"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.monte_carlo._get_samples",
    "tensorflow.contrib.bayesflow.python.ops.monte_carlo._logspace_mean",
    "tensorflow.contrib.bayesflow.python.ops.monte_carlo._sample_mean",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.ELBOForms": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.__all__": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy._get_samples": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy._logspace_mean": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy._sample_mean": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.elbo_ratio": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "entropy_shannon",
    "log_p",
    "tensorflow.contrib.bayesflow.python.ops.entropy.ELBOForms",
    "tensorflow.contrib.bayesflow.python.ops.entropy._get_samples",
    "tensorflow.contrib.bayesflow.python.ops.entropy._sample_mean",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.entropy_shannon": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "tensorflow.contrib.bayesflow.python.ops.entropy.ELBOForms",
    "tensorflow.contrib.bayesflow.python.ops.monte_carlo.expectation",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.monte_carlo": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.monte_carlo"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.renyi_alpha": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.entropy.math",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.check_ops.assert_rank",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.minimum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.renyi_ratio": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "log_p",
    "tensorflow.contrib.bayesflow.python.ops.entropy._get_samples",
    "tensorflow.contrib.bayesflow.python.ops.entropy._logspace_mean",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.entropy.variational_inference": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.variational_inference"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.__all__": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo._get_samples": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo._logspace_mean": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "_sample_max",
    "_sample_mean",
    "tensorflow.python.ops.array_ops.stop_gradient",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo._sample_max": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.reduce_max"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo._sample_mean": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.expectation": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "_get_samples",
    "_sample_mean",
    "f",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.expectation_importance_sampler": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_get_samples",
    "_importance_sampler_positive_f",
    "f",
    "log_p",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.expectation_importance_sampler._importance_sampler_positive_f": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "_logspace_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.expectation_importance_sampler_logspace": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "_get_samples",
    "_logspace_mean",
    "log_f",
    "log_p",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.monte_carlo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT32_LOWER": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT32_UPPER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT64_LOWER": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT64_UPPER": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math._double_factorial": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math._log_ndtr_lower": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "_double_factorial",
    "range",
    "tensorflow.contrib.bayesflow.python.ops.special_math.math",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math._ndtr": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.special_math.math",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.erf",
    "tensorflow.python.ops.math_ops.erfc",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.log_ndtr": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_log_ndtr_lower",
    "int",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT32_LOWER",
    "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT32_UPPER",
    "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT64_LOWER",
    "tensorflow.contrib.bayesflow.python.ops.special_math.LOGNDTR_FLOAT64_UPPER",
    "tensorflow.contrib.bayesflow.python.ops.special_math._ndtr",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.ndtr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "_ndtr",
    "numpy.float32",
    "numpy.float64",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.special_math.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.__all__": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_mean_baseline": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_mean_baseline.mean_baseline": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.pow",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.training.training.ExponentialMovingAverage"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_score_function_with_advantage": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_score_function_with_advantage.score_function_with_advantage": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "advantage_fn",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.stop_gradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_score_function_with_baseline": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "get_mean_baseline"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_score_function_with_baseline.score_function_with_baseline": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "baseline_fn",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.score_function",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_score_function_with_constant_baseline": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.get_score_function_with_constant_baseline.score_function_with_constant_baseline": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.score_function"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.score_function": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.stop_gradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.training": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph._add_n_or_sum": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "all",
    "sum",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph._stochastic_dependencies_map": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "set",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.collections",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.STOCHASTIC_TENSOR_COLLECTION",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph._upstream_stochastic_nodes": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_stochastic_dependencies_map",
    "set",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.stochastic_tensor": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_graph.surrogate_loss": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_add_n_or_sum",
    "isinstance",
    "list",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_graph._stochastic_dependencies_map",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.stop_gradient",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "dir",
    "getattr",
    "globals",
    "issubclass",
    "list",
    "sorted",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._WrapperTensor",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.__all__",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._candidate",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._globals",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._local_name",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.collections",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.inspect",
    "tensorflow.contrib.distributions",
    "tensorflow.contrib.distributions.Distribution",
    "tensorflow.python.framework.ops.register_tensor_conversion_function"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.six"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.STOCHASTIC_TENSOR_COLLECTION",
    "tensorflow.python.framework.ops.add_to_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor._tensor_conversion_function": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor.dtype": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor.graph": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor.input_dict": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor.loss": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor.name": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor.value": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.MeanValue": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.MeanValue.__init__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.MeanValue.stop_gradient": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.NoValueTypeSetError": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.ObservedStochasticTensor": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.ObservedStochasticTensor.__init__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dist_cls",
    "issubclass",
    "list",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor",
    "tensorflow.contrib.distributions.Distribution",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.ObservedStochasticTensor.loss": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.STOCHASTIC_TENSOR_COLLECTION": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleAndReshapeValue": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleAndReshapeValue.__init__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleAndReshapeValue.n": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleAndReshapeValue.stop_gradient": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleValue": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleValue.__init__": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleValue.n": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleValue.stop_gradient": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.BaseStochasticTensor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.__init__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "dist_cls",
    "issubclass",
    "super",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.score_function",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.NoValueTypeSetError",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleAndReshapeValue",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.get_current_value_type",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.value_type",
    "tensorflow.contrib.distributions.Distribution",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor._create_value": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.MeanValue",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleAndReshapeValue",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleValue",
    "tensorflow.python.framework.tensor_shape.vector",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.stop_gradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.clone": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.distribution": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.dtype": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.entropy": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.graph": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.input_dict": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.loss": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.MeanValue",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleAndReshapeValue",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.SampleValue",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.mean": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.name": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.value": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor.value_type": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._STOCHASTIC_VALUE_STACK": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType.declare_inputs": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType.popped_above": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType.pushed_above": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType.stop_gradient": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._WrapperTensor": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._candidate"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._WrapperTensor.__init__": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators.score_function",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.__all__": {
  "data": {
   "lineno": 550
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._candidate": {
  "data": {
   "lineno": 566
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._globals": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._local_name": {
  "data": {
   "lineno": 570
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.distributions": {
  "data": {
   "shadows": "tensorflow.contrib.distributions"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.get_current_value_type": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.NoValueTypeSetError",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._STOCHASTIC_VALUE_STACK",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.sge": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.value_type": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._STOCHASTIC_VALUE_STACK",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor._StochasticValueType",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.contextlib",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object",
    "range",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference._ELBOForm"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms.check_form": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "staticmethod",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.VI_PRIORS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference._ELBOForm": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference._elbo": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "NotImplementedError",
    "_reduce",
    "sum",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms",
    "tensorflow.contrib.distributions.kl",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference._elbo._reduce": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference._find_variational_and_priors": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "list",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_graph._upstream_stochastic_nodes",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference.VI_PRIORS",
    "tensorflow.contrib.distributions.Distribution",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.distributions": {
  "data": {
   "shadows": "tensorflow.contrib.distributions"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.elbo": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_elbo",
    "_find_variational_and_priors",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.elbo_with_log_joint": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "_elbo",
    "_find_variational_and_priors",
    "dict",
    "len",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference.ELBOForms",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.register_prior": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor.StochasticTensor",
    "tensorflow.contrib.bayesflow.python.ops.variational_inference.VI_PRIORS",
    "tensorflow.contrib.distributions.BaseDistribution",
    "tensorflow.python.framework.ops.add_to_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.sg": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.stochastic_graph"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.python.ops.variational_inference.st": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.special_math": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.special_math"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.stochastic_gradient_estimators": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.stochastic_gradient_estimators"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.stochastic_graph": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.stochastic_graph"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.stochastic_tensor": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.stochastic_tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.bayesflow.variational_inference": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.variational_inference"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.cmake.setup": {
  "data": {
   "symbols_in_volume": [
    "setuptools.find_packages",
    "setuptools.setup",
    "tensorflow.contrib.cmake.setup.BinaryDistribution",
    "tensorflow.contrib.cmake.setup.CONSOLE_SCRIPTS",
    "tensorflow.contrib.cmake.setup.InstallCommand",
    "tensorflow.contrib.cmake.setup.REQUIRED_PACKAGES",
    "tensorflow.contrib.cmake.setup.TEST_PACKAGES",
    "tensorflow.contrib.cmake.setup._VERSION",
    "tensorflow.contrib.cmake.setup.find_files",
    "tensorflow.contrib.cmake.setup.matches",
    "tensorflow.contrib.cmake.setup.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.cmake.setup.BinaryDistribution": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "setuptools.dist.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cmake.setup.BinaryDistribution.is_pure": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.CONSOLE_SCRIPTS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.contrib.cmake.setup.Command": {
  "data": {
   "shadows": "setuptools.Command"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.Distribution": {
  "data": {
   "shadows": "setuptools.dist.Distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.InstallCommand": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "setuptools.command.install.install"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cmake.setup.InstallCommand.finalize_options": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "setuptools.command.install.install.finalize_options",
    "tensorflow.contrib.cmake.setup.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.InstallCommandBase": {
  "data": {
   "shadows": "setuptools.command.install.install"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.InstallHeaders": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "setuptools.Command"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cmake.setup.InstallHeaders.finalize_options": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.InstallHeaders.get_inputs": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.InstallHeaders.get_outputs": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.InstallHeaders.initialize_options": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.InstallHeaders.mkdir_and_copy_file": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.contrib.cmake.setup.os",
    "tensorflow.contrib.cmake.setup.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.InstallHeaders.run": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.REQUIRED_PACKAGES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.cmake.setup.TEST_PACKAGES": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.contrib.cmake.setup._VERSION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.cmake.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.find_files": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.contrib.cmake.setup.fnmatch",
    "tensorflow.contrib.cmake.setup.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cmake.setup.find_packages": {
  "data": {
   "shadows": "setuptools.find_packages"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.matches": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "tensorflow.contrib.cmake.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.setup": {
  "data": {
   "shadows": "setuptools.setup"
  },
  "type": "import"
 },
 "tensorflow.contrib.cmake.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.copy_graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.copy_graph.python.util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.copy_graph.python.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.Session": {
  "data": {
   "shadows": "tensorflow.python.client.session.Session"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.Variable": {
  "data": {
   "shadows": "tensorflow.python.ops.variables.Variable"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.copy_op_to_graph": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "copy.deepcopy",
    "device_function",
    "dict",
    "isinstance",
    "reversed",
    "str",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.copy_variable_to_graph": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "str",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.get_copied_op": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.copy_elements.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.copy_graph.python.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.crf.CrfForwardRnnCell": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf.CrfForwardRnnCell"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf._lengths_to_masks": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf._lengths_to_masks"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.crf_binary_score": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf.crf_binary_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.crf_log_likelihood": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf.crf_log_likelihood"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.crf_log_norm": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf.crf_log_norm"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.crf_sequence_score": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf.crf_sequence_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.crf_unary_score": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf.crf_unary_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.crf.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.crf.python.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.crf.python.ops.crf.CrfForwardRnnCell": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.crf.python.ops.crf.CrfForwardRnnCell.__call__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.reduce_logsumexp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.CrfForwardRnnCell.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.CrfForwardRnnCell.output_size": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.CrfForwardRnnCell.state_size": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.contrib.crf.python.ops.crf._lengths_to_masks": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.crf_binary_score": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "tensorflow.contrib.crf.python.ops.crf._lengths_to_masks",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.crf_log_likelihood": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.contrib.crf.python.ops.crf.crf_log_norm",
    "tensorflow.contrib.crf.python.ops.crf.crf_sequence_score",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.crf_log_norm": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "CrfForwardRnnCell",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.reduce_logsumexp",
    "tensorflow.python.ops.rnn.dynamic_rnn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.crf_sequence_score": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "crf_binary_score",
    "crf_unary_score"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.crf_unary_score": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.contrib.crf.python.ops.crf._lengths_to_masks",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.rnn": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.crf.viterbi_decode": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.expand_dims",
    "numpy.int32",
    "numpy.max",
    "numpy.zeros_like",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.crf.python.ops.crf.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.python.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.crf.viterbi_decode": {
  "data": {
   "shadows": "tensorflow.contrib.crf.python.ops.crf.viterbi_decode"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.cudnn_rnn.CudnnGRU": {
  "data": {
   "shadows": "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnGRU"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.CudnnLSTM": {
  "data": {
   "shadows": "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTM"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.CudnnRNNRelu": {
  "data": {
   "shadows": "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNRelu"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.CudnnRNNTanh": {
  "data": {
   "shadows": "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNTanh"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._InitOpDefLibrary",
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_backprop_outputs",
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_outputs",
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_params_to_canonical_outputs",
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._CudnnRNNBackpropOutput": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._CudnnRNNOutput": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._CudnnRNNParamsToCanonicalOutput": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_backprop_outputs": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_params_from_canonical_outputs": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_params_size_outputs": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._cudnn_rnn_params_to_canonical_outputs": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._op_def_lib": {
  "data": {
   "lineno": 810
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "input",
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._CudnnRNNOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "input",
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._CudnnRNNBackpropOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_from_canonical": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_size": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_to_canonical": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops._CudnnRNNParamsToCanonicalOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_ops_so",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnGRU": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "__doc__",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_common_doc_string"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTM": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "__doc__",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNN",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_common_doc_string"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTM.__call__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTM.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNRelu": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "__doc__",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_common_doc_string"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNTanh": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "__doc__",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_common_doc_string"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNN": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "__doc__",
    "object",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_common_doc_string"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNN.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNN.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNN.params_size": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_size",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "__doc__",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNN",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_common_doc_string"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC.__call__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._CudnnRNNNoInputC"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_backward": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_common_doc_string": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops._cudnn_rnn_ops_so": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.gen_cudnn_rnn_ops": {
  "data": {
   "shadows": "tensorflow.contrib.cudnn_rnn.ops.gen_cudnn_rnn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.matrix_diag_transform": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util.matrix_diag_transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli",
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli",
    "tensorflow.contrib.distributions.python.ops.distribution_util.get_logits_and_prob",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._batch_shape": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._entropy": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.sigmoid"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._event_shape": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._get_batch_shape": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._get_event_shape": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._log_prob": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._mean": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._mode": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._param_shapes": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._prob": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._sample_n": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._std": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli._variance": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli.logits": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli.p": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli.q": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.BernoulliWithSigmoidP": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.BernoulliWithSigmoidP.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.bernoulli.BernoulliWithSigmoidP",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.sigmoid"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli._kl_bernoulli_bernoulli": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.bernoulli.Bernoulli",
    "tensorflow.contrib.distributions.python.ops.kullback_leibler.RegisterKL",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.kullback_leibler": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.kullback_leibler"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bernoulli.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.beta.Beta",
    "tensorflow.contrib.distributions.python.ops.beta._prob_note",
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.beta.Beta",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._assert_valid_sample": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._batch_shape": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._cdf": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.betainc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._entropy": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.digamma",
    "tensorflow.python.ops.math_ops.lgamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._event_shape": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._get_batch_shape": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._get_event_shape": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._log_cdf": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._log_prob": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._mean": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._mode": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._param_shapes": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._prob": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._sample_n": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.random_ops.random_gamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._std": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta._variance": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta.a": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta.a_b_sum": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.Beta.b": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta.BetaWithSoftplusAB": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.beta.Beta"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.beta.BetaWithSoftplusAB.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.beta.BetaWithSoftplusAB",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.beta._prob_note": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.beta.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.beta.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.shape._DistributionShape",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector._maybe_assert_dtype": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector._name_scope": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.distributions.python.ops.bijector.contextlib",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.dtype": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.forward": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.inverse": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "AttributeError",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.inverse_and_inverse_log_det_jacobian": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "AttributeError",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.inverse_log_det_jacobian": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "AttributeError",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.is_constant_jacobian": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.name": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.parameters": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.shaper": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Bijector.validate_args": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._DistributionShape": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.shape._DistributionShape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Exp": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.bijector._Bijector"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Exp.__init__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.bijector._Exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Exp._forward": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Exp._inverse": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Exp._inverse_and_inverse_log_det_jacobian": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Exp._inverse_log_det_jacobian": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Identity": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.bijector._Bijector"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Identity.__init__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.bijector._Identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Identity._forward": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Identity._inverse": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._Identity._inverse_log_det_jacobian": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.bijector._Bijector"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "TypeError",
    "super",
    "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int32.base_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale._forward": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale._inverse": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.matrix_triangular_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale._inverse_log_det_jacobian": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale._process_scale": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_all",
    "tensorflow.python.ops.math_ops.reduce_any",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale.loc": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector._ShiftAndScale.scale": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.bijector.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.binomial.Binomial",
    "tensorflow.contrib.distributions.python.ops.binomial._prob_note",
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.binomial.Binomial",
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.contrib.distributions.python.ops.distribution_util.get_logits_and_prob",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_non_negative"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._batch_shape": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._check_counts": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.check_ops.assert_less_equal",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._event_shape": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._get_batch_shape": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._get_event_shape": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._log_prob": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._mean": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._mode": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.floor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._prob": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._std": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial._variance": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial.logits": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial.n": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.Binomial.p": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.binomial._prob_note": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.binomial.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.categorical.Categorical",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._batch_shape": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._entropy": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.nn_ops.softmax",
    "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._event_shape": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._get_batch_shape": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._get_event_shape": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._log_prob": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.nn_ops.sparse_softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._mode": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._prob": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical._sample_n": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.random_ops.multinomial"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical.logits": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.Categorical.num_classes": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.categorical.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.Chi2": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.gamma.Gamma"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.Chi2.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.chi2.Chi2",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.Chi2._param_shapes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.Chi2.df": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.Chi2WithAbsDf": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.chi2.Chi2"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.Chi2WithAbsDf.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.chi2.Chi2WithAbsDf",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.floor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.gamma": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.gamma"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.chi2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet",
    "tensorflow.contrib.distributions.python.ops.dirichlet._prob_note",
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.check_ops.assert_rank_at_least",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._assert_valid_sample": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_close",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._batch_shape": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._entropy": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.digamma",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.special_math_ops.lbeta"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._event_shape": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._get_batch_shape": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._get_event_shape": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._log_prob": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.special_math_ops.lbeta"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._mean": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._mode": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._prob": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._sample_n": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.random_ops.random_gamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._std": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet._variance": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "tensorflow.python.ops.math_ops.batch_matmul",
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet.alpha": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.Dirichlet.alpha_sum": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet._prob_note": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet.special_math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.special_math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial",
    "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial._prob_note",
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._assert_valid_alpha": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.check_ops.assert_rank_at_least",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._assert_valid_counts": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._assert_valid_n": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._batch_shape": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._event_shape": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._get_batch_shape": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._get_event_shape": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._log_prob": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.log_combinations",
    "tensorflow.python.ops.special_math_ops.lbeta"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._mean": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._prob": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial._variance": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial.alpha": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial.alpha_sum": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.DirichletMultinomial.n": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial._prob_note": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.dirichlet_multinomial.special_math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.special_math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.BaseDistribution",
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution",
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.BaseDistribution": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.distributions.python.ops.distribution.abc",
    "tensorflow.contrib.distributions.python.ops.distribution.six"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.BaseDistribution.log_prob": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.BaseDistribution.sample_n": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.BaseDistribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution._check_hasattr": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "NotImplementedError",
    "callable",
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution._expand_sample_shape": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.prod",
    "numpy.reshape",
    "tensorflow.contrib.distributions.python.ops.distribution_util.pick_vector",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int32.as_numpy_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_prod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution._name_scope": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.distributions.python.ops.distribution.contextlib",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution._param_shapes": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.allow_nan_stats": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.batch_shape": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.cdf": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.dtype": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.entropy": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.event_shape": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.get_batch_shape": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.get_event_shape": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.is_continuous": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.is_reparameterized": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.log_cdf": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.log_pdf": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.log_pmf": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.log_prob": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.log_survival_function": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.mean": {
  "data": {
   "lineno": 560
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.mode": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.name": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.param_shapes": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.param_static_shapes": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_util.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.parameters": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.pdf": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.pmf": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.prob": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.sample": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_util.constant_value_as_shape",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.sample_n": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_util.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.std": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.survival_function": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.validate_args": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.Distribution.variance": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.assert_close": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.finfo",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.round",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.assert_symmetric": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_transpose",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.get_logits_and_prob": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_close",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_less_equal",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sigmoid"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.log_combinations": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.matrix_diag_transform": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "transform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.pick_vector": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.op_scope",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.rotate_transpose": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "abs",
    "numpy.arange",
    "numpy.roll",
    "numpy.sign",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.check_ops.assert_integer",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.mod",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.distribution_util.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.Exponential": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.gamma.Gamma"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.Exponential.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.exponential.Exponential",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.Exponential._param_shapes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.Exponential._sample_n": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.nextafter",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.Exponential.lam": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.ExponentialWithSoftplusLam": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.exponential.Exponential"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.ExponentialWithSoftplusLam.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.exponential.ExponentialWithSoftplusLam",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.gamma": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.gamma"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.exponential.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.gamma.Gamma"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.gamma.Gamma",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._batch_shape": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._cdf": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.igamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._entropy": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.digamma",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._event_shape": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._get_batch_shape": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._get_event_shape": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._log_cdf": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.igamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._log_prob": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._mean": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._mode": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._param_shapes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._prob": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._sample_n": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_gamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._std": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma._variance": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma.alpha": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.Gamma.beta": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.GammaWithSoftplusAlphaBeta": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.gamma.Gamma"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.GammaWithSoftplusAlphaBeta.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.gamma.GammaWithSoftplusAlphaBeta",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.gamma.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._batch_shape": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._cdf": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.igammac"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._entropy": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.digamma",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._event_shape": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._get_batch_shape": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._get_event_shape": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._log_cdf": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._log_prob": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._mean": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._mode": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._param_shapes": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._prob": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._sample_n": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_gamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma._variance": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma.alpha": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma.beta": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGammaWithSoftplusAlphaBeta": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGamma"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGammaWithSoftplusAlphaBeta.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.inverse_gamma.InverseGammaWithSoftplusAlphaBeta",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.inverse_gamma.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.RegisterKL": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.RegisterKL.__call__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "kl_fn",
    "tensorflow.contrib.distributions.python.ops.kullback_leibler._DIVERGENCES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.RegisterKL.__init__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler._DIVERGENCES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.kl": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError",
    "kl_fn",
    "tensorflow.contrib.distributions.python.ops.kullback_leibler._DIVERGENCES",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.is_nan",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.reduce_any",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.kullback_leibler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.laplace.Laplace",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._batch_shape": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._cdf": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.sign"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._entropy": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.laplace.math",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._event_shape": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._get_batch_shape": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._get_event_shape": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._log_cdf": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._log_prob": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.laplace.math",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._mean": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._median": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._mode": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._param_shapes": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._prob": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._sample_n": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.nextafter",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.sign",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._std": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.laplace.math",
    "tensorflow.python.ops.array_ops.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace._variance": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace.loc": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.Laplace.scale": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.LaplaceWithSoftplusScale": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.laplace.Laplace"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.LaplaceWithSoftplusScale.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.laplace.LaplaceWithSoftplusScale",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.laplace.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "super",
    "tensorflow.contrib.distributions.python.ops.categorical.Categorical",
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution",
    "tensorflow.contrib.distributions.python.ops.mixture.Mixture",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._batch_shape": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._cat_probs": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.unpack",
    "tensorflow.python.ops.nn_ops.log_softmax",
    "tensorflow.python.ops.nn_ops.softmax",
    "which_softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._event_shape": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._get_batch_shape": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._get_event_shape": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._log_prob": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.math_ops.reduce_logsumexp",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._mean": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "expand",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.add_n",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._mean.expand": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._prob": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture._sample_n": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.int32",
    "range",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.reduce_prod",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.data_flow_ops.dynamic_partition",
    "tensorflow.python.ops.data_flow_ops.dynamic_stitch",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture.cat": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture.components": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture.entropy_lower_bound": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.add_n",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.Mixture.num_components": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.categorical": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.categorical"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mixture.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial",
    "tensorflow.contrib.distributions.python.ops.multinomial._prob_note"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.contrib.distributions.python.ops.distribution_util.get_logits_and_prob",
    "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._assert_valid_sample": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._batch_shape": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._event_shape": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._get_batch_shape": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._get_event_shape": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._log_prob": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.log_combinations",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._mean": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._prob": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial._variance": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial.logits": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial.n": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.Multinomial.p": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial._prob_note": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.multinomial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.kullback_leibler.RegisterKL",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalCholesky",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiag",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiagPlusVDVT",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalFull",
    "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD",
    "tensorflow.contrib.distributions.python.ops.mvn._kl_mvn_mvn_brute_force",
    "tensorflow.contrib.distributions.python.ops.mvn._prob_note",
    "tensorflow.contrib.distributions.python.ops.mvn.kl_classes"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalCholesky": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalCholesky.__init__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalCholesky",
    "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiag": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiag.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiag",
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiagPlusVDVT": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiagPlusVDVT.__init__": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiagPlusVDVT",
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag",
    "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiagWithSoftplusStDev": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiag"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiagWithSoftplusStDev.__init__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalDiagWithSoftplusStDev",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalFull": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalFull.__init__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.mvn.MultivariateNormalFull",
    "tensorflow.contrib.distributions.python.ops.operator_pd_full.OperatorPDFull"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._assert_valid_mu": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._batch_shape": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._entropy": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.mvn.math",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._event_shape": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.pack"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._get_batch_shape": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._get_event_shape": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._log_prob": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.mvn.math",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._mean": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._mode": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._prob": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._sample_n": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.random_ops.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD._variance": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD.log_sigma_det": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD.mu": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD.sigma": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._MultivariateNormalOperatorPD.sigma_det": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._kl_mvn_mvn_brute_force": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.mvn._prob_note": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.kl_classes": {
  "data": {
   "lineno": 749
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.kullback_leibler": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.kullback_leibler"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.operator_pd_cholesky": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.operator_pd_diag": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_diag"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.operator_pd_full": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_full"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.operator_pd_vdvt_update": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.mvn.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.normal.Normal",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._batch_shape": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._cdf": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.special_math.ndtr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._entropy": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.normal.math",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._event_shape": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._get_batch_shape": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._get_event_shape": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._log_cdf": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.special_math.log_ndtr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._log_prob": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.normal.math",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._log_survival_function": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.special_math.log_ndtr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._mean": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._mode": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._param_shapes": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._prob": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._sample_n": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.random_ops.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._std": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._survival_function": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.contrib.bayesflow.python.ops.special_math.ndtr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._variance": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal._z": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal.mu": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.Normal.sigma": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.NormalWithSoftplusSigma": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.normal.Normal"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.normal.NormalWithSoftplusSigma.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.normal.NormalWithSoftplusSigma",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal._kl_normal_normal": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.kullback_leibler.RegisterKL",
    "tensorflow.contrib.distributions.python.ops.normal.Normal",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.kullback_leibler": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.kullback_leibler"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.special_math": {
  "data": {
   "shadows": "tensorflow.contrib.bayesflow.python.ops.special_math"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors.Normal": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.normal.Normal"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors.normal_congugates_known_sigma_predictive": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.distributions.python.ops.normal.Normal",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors.normal_conjugates_known_sigma_posterior": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.distributions.python.ops.normal.Normal",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.normal_conjugate_posteriors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.distributions.python.ops.operator_pd.abc",
    "tensorflow.contrib.distributions.python.ops.operator_pd.six"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._add_to_tensor": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._batch_log_det": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._batch_matmul": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._batch_solve": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._batch_sqrt_log_det": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._batch_sqrt_matmul": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._batch_sqrt_solve": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._det": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._dispatch_based_on_batch": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "batch_method",
    "singleton_method",
    "tensorflow.python.ops.control_flow_ops.cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._iqfov_via_solve": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "extract_batch_shape",
    "flip_matrix_to_vector",
    "flip_vector_to_matrix",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._iqfov_via_sqrt_solve": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "extract_batch_shape",
    "flip_matrix_to_vector",
    "flip_vector_to_matrix",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._log_det": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._matmul": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._shape": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._solve": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._sqrt_log_det": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._sqrt_matmul": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._sqrt_solve": {
  "data": {
   "lineno": 587
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._sqrt_to_dense": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase._to_dense": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.add_to_tensor": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.batch_shape": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.det": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.dtype": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.get_batch_shape": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.get_shape": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.get_vector_shape": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.inputs": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.log_det": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.matmul": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.name": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.rank": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.shape": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.solve": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.sqrt_log_det": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.sqrt_matmul": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.sqrt_solve": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.sqrt_to_dense": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.to_dense": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.vector_shape": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.vector_space_dimension": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase.verify_pd": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd._flip_matrix_to_vector_dynamic": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd._flip_matrix_to_vector_static": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd._flip_vector_to_matrix_dynamic": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.reduce_prod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd._flip_vector_to_matrix_dynamic._flip_front_dims_to_back": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd._flip_vector_to_matrix_static": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "_flip_front_dims_to_back",
    "len",
    "numpy.prod",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd._flip_vector_to_matrix_static._flip_front_dims_to_back": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.extract_batch_shape": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.flip_matrix_to_vector": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "_flip_matrix_to_vector_dynamic",
    "_flip_matrix_to_vector_static",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.flip_vector_to_matrix": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "_flip_vector_to_matrix_dynamic",
    "_flip_vector_to_matrix_static",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._batch_log_det": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._batch_matmul": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._batch_solve": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.cholesky_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._batch_sqrt_matmul": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._batch_sqrt_solve": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.matrix_triangular_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._check_chol": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.check_ops.assert_rank_at_least",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._matmul": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._shape": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._solve": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.cholesky_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._sqrt_matmul": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._sqrt_solve": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.matrix_triangular_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._sqrt_to_dense": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.matrix_band_part"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky._to_dense": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky.dtype": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky.get_shape": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky.inputs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky.name": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky.verify_pd": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.operator_pd": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._add_to_tensor": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.matrix_set_diag"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._batch_log_det": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._batch_matmul": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._batch_solve": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._batch_sqrt_matmul": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_transpose",
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._batch_sqrt_solve": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._sqrt_to_dense": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag",
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag._to_dense": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase",
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc",
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.six"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._add_to_tensor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._batch_log_det": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._batch_matmul": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._batch_solve": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._batch_sqrt_matmul": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._batch_sqrt_solve": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._check_diag": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._shape": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._sqrt_to_dense": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase._to_dense": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase.dtype": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase.get_shape": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase.inputs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase.name": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase.verify_pd": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiagBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._add_to_tensor": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._batch_log_det": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._batch_matmul": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_transpose",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._batch_solve": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._batch_sqrt_matmul": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._batch_sqrt_solve": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._sqrt_to_dense": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDSqrtDiag._to_dense": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.operator_pd": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_diag.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.OperatorPDFull": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.OperatorPDFull.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_symmetric",
    "tensorflow.contrib.distributions.python.ops.operator_pd_full.OperatorPDFull",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.linalg_ops.cholesky"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.operator_pd_cholesky": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_full.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_util.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._add_to_tensor": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.matrix_set_diag"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._batch_log_det": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._batch_matmul": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._batch_solve": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._batch_sqrt_log_det": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._batch_sqrt_matmul": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._batch_sqrt_solve": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._check_shape": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.check_ops.assert_less_equal",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._check_x": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._det": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._shape": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._sqrt_to_dense": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity._to_dense": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag",
    "tensorflow.python.ops.array_ops.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity.dtype": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity.get_shape": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity.inputs": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity.name": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity.verify_pd": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.operator_pd": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_identity.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.distributions.python.ops.operator_pd.OperatorPDBase",
    "tensorflow.contrib.distributions.python.ops.operator_pd_diag.OperatorPDDiag",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._batch_log_det": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._batch_matmul": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._batch_solve": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._batch_sqrt_log_det": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag_part"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._batch_sqrt_matmul": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._batch_sqrt_solve": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.cholesky_solve",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._check_shapes_dynamic": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.check_ops.assert_rank",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._check_shapes_static": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "msg"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._check_shapes_static.msg": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._check_types": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "TypeError",
    "msg"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._check_types.msg": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._chol_capacitance": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.cholesky",
    "tensorflow.python.ops.math_ops.batch_matmul",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._det": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._get_identity_operator": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_pd_identity.OperatorPDIdentity",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._inv_quadratic_form_on_vectors": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._log_det": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._matmul": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._shape": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._solve": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._sqrt_log_det": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.matrix_diag_part"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._sqrt_log_det_core": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._sqrt_matmul": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._sqrt_solve": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.python.ops.linalg_ops.cholesky_solve",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._sqrt_to_dense": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate._to_dense": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate.dtype": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate.get_shape": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate.inputs": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate.name": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.OperatorPDSqrtVDVTUpdate.verify_pd": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.operator_pd": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.operator_pd_diag": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_diag"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.operator_pd_identity": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_identity"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_pd_vdvt_update.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.operator_test_util.abc",
    "tensorflow.contrib.distributions.python.ops.operator_test_util.six",
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest._build_operator_and_mat": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.float64",
    "tensorflow.contrib.distributions.python.ops.operator_test_util.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest._compare_results": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.setUp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_add_to_tensor": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.ones_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_determinants": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.log",
    "tensorflow.matrix_determinant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_matmul": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_solve": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.matrix_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_sqrt_matmul": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tensorflow.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_sqrt_solve": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.matrix_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_sqrt_to_dense": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.OperatorPDDerivedClassTest.test_to_dense": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.operator_test_util.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.poisson.Poisson",
    "tensorflow.contrib.distributions.python.ops.poisson._prob_note"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.poisson.Poisson",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._assert_valid_sample": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._batch_shape": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._cdf": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.igammac"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._event_shape": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._get_batch_shape": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._get_event_shape": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._log_cdf": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._log_prob": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._mean": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._mode": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.floor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._prob": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._std": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson._variance": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.Poisson.lam": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.poisson._prob_note": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.poisson.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._cdf_base_note",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._cdf_note",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._log_cdf_note",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._log_prob_note",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._log_sf_note",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._prob_base_note",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._prob_note",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._sf_note"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "TypeError",
    "base_dist_cls",
    "issubclass",
    "super",
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution",
    "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.check_ops.assert_less"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._batch_shape": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._cdf": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._check_integer": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.assert_integer_form",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._event_shape": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._get_batch_shape": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._get_event_shape": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._log_cdf": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.inf",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._log_prob": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._log_prob_with_logcdf": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._logsum_expbig_minus_expsmall"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._log_prob_with_logsf_and_logcdf": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.quantized_distribution._logsum_expbig_minus_expsmall",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._log_survival_function": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.inf",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.ceil",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._prob": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._prob_with_cdf": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._prob_with_sf_and_cdf": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._sample_n": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.ceil",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution._survival_function": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.ceil",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution.base_distribution": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._cdf_base_note": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._cdf_note": {
  "data": {
   "lineno": 472
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._log_cdf_note": {
  "data": {
   "lineno": 476
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._log_prob_note": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._log_sf_note": {
  "data": {
   "lineno": 506
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._logsum_expbig_minus_expsmall": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._prob_base_note": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._prob_note": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._sf_base_note": {
  "data": {
   "lineno": 486
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution._sf_note": {
  "data": {
   "lineno": 502
  },
  "type": "constant"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.quantized_distribution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape._assert_non_negative_int32_scalar": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int32.base_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.check_ops.assert_rank",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape._introspect_ndims": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape._is_all_constant_helper": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "all",
    "tensorflow.python.framework.tensor_util.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape._name_scope": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.shape.contextlib",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.batch_ndims": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.event_ndims": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.get_dims": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "make_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.get_dims.make_dims": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "list",
    "range",
    "sum",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.get_ndims": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.rank"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.get_sample_ndims": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.get_shape": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "slice_shape",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.get_shape.slice_shape": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "all",
    "sum",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.make_batch_of_event_sample_matrices": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.pick_vector",
    "tensorflow.contrib.distributions.python.ops.distribution_util.rotate_transpose",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.name": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.undo_make_batch_of_event_sample_matrices": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "min",
    "tensorflow.contrib.distributions.python.ops.distribution_util.rotate_transpose",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape._DistributionShape.validate_args": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.shape.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.shape.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.student_t.StudentT"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.student_t.StudentT",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._batch_shape": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._entropy": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.digamma",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.special_math_ops.lbeta"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._event_shape": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._get_batch_shape": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._get_event_shape": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._log_prob": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.student_t.math",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._mean": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._mode": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._ones": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._param_shapes": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._prob": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.student_t.math",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.pow",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._sample_n": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.student_t.math",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.unpack",
    "tensorflow.python.ops.math_ops.cos",
    "tensorflow.python.ops.math_ops.pow",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._std": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT._variance": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT.df": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT.mu": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentT.sigma": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentTWithAbsDfSoftplusSigma": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.student_t.StudentT"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.StudentTWithAbsDfSoftplusSigma.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.student_t.StudentTWithAbsDfSoftplusSigma",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.nn.softplus"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.special_math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.special_math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.student_t.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution_util.append_class_fun_doc",
    "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "base_dist_cls",
    "super",
    "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._batch_shape": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._cdf": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._event_shape": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._get_batch_shape": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._get_event_shape": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._inverse_possibly_from_cache": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._log_cdf": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._log_prob": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._log_survival_function": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._prob": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._sample_n": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution._survival_function": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution.base_distribution": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution.inverse": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution.log_det_jacobian": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.TransformedDistribution.transform": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.distribution_util": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.transformed_distribution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.uniform.Uniform",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_less"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._batch_shape": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._cdf": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._entropy": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._event_shape": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._get_batch_shape": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._get_event_shape": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._log_cdf": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._log_prob": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._mean": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._param_shapes": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._prob": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.is_nan",
    "tensorflow.python.ops.math_ops.logical_or",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._sample_n": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._std": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.uniform.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform._variance": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform.a": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform.b": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.Uniform.range": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.uniform.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.WishartCholesky": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.WishartCholesky.__init__": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky.OperatorPDCholesky",
    "tensorflow.contrib.distributions.python.ops.wishart.WishartCholesky"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.WishartFull": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.WishartFull.__init__": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.distributions.python.ops.operator_pd_full.OperatorPDFull",
    "tensorflow.contrib.distributions.python.ops.wishart.WishartFull"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.asarray",
    "super",
    "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.check_ops.assert_less_equal",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._batch_shape": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._entropy": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.wishart.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._event_shape": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._get_batch_shape": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._get_event_shape": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._log_prob": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.linalg_ops.cholesky",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._mean": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._mode": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "float",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._multi_digamma": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.digamma",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._multi_gamma_sequence": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.linspace"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._multi_lgamma": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.wishart.math",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._prob": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.exp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._sample_n": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.batch_matmul",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.random_ops.random_gamma",
    "tensorflow.python.ops.random_ops.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._std": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.linalg_ops.cholesky"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD._variance": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.linalg_ops.cholesky",
    "tensorflow.python.ops.math_ops.batch_matmul",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.cholesky_input_output_matrices": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.df": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.dimension": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.log_normalizing_constant": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.wishart.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.mean_log_det": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "tensorflow.contrib.distributions.python.ops.wishart.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.scale": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart._WishartOperatorPD.scale_operator_pd": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.distribution": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.distribution"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.operator_pd_cholesky": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_cholesky"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.operator_pd_full": {
  "data": {
   "shadows": "tensorflow.contrib.distributions.python.ops.operator_pd_full"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.distributions.python.ops.wishart.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.factorization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.clustering_ops._clustering_ops",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMEANS_PLUS_PLUS_INIT": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._clusters_l2_normalized": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._compute_cosine_distance": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.matmul",
    "tensorflow.nn.l2_normalize",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._compute_euclidean_distance": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.matmul",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._distance_graph": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "list",
    "str",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._full_batch_training_op": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "tensorflow.add_n",
    "tensorflow.assign",
    "tensorflow.cast",
    "tensorflow.constant",
    "tensorflow.nn.l2_normalize",
    "tensorflow.ones",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.unsorted_segment_sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._infer_graph": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.nearest_neighbors",
    "tensorflow.nn.l2_normalize",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.squeeze",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._init_clusters": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "callable",
    "init",
    "isinstance",
    "str",
    "tensorflow.Variable",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.KMEANS_PLUS_PLUS_INIT",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.kmeans_plus_plus_initialization",
    "tensorflow.int64",
    "tensorflow.nn.l2_normalize",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._init_clusters_random": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.add_n",
    "tensorflow.assert_less_equal",
    "tensorflow.cast",
    "tensorflow.control_dependencies",
    "tensorflow.int64",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.random_uniform",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._l2_normalize_data": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.nn.l2_normalize",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans._mini_batch_training_op": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.gather",
    "tensorflow.group",
    "tensorflow.int32",
    "tensorflow.inv",
    "tensorflow.ones",
    "tensorflow.ones_like",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.rank",
    "tensorflow.reshape",
    "tensorflow.scatter_add",
    "tensorflow.size",
    "tensorflow.unique",
    "tensorflow.unsorted_segment_sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans.training_graph": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE",
    "tensorflow.nn.l2_normalize"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.RANDOM_INIT": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops._clustering_ops": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.embedding_lookup": {
  "data": {
   "shadows": "tensorflow.python.ops.embedding_ops.embedding_lookup"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.gen_clustering_ops": {
  "data": {
   "shadows": "tensorflow.contrib.factorization.python.ops.gen_clustering_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.load_op_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library.load_op_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.clustering_ops.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.factorization_ops._factorization_ops",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel",
    "tensorflow.diag",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._cached_copy": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "six.moves.xrange",
    "tensorflow.Variable",
    "tensorflow.assign",
    "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel",
    "tensorflow.group",
    "tensorflow.no_op",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_factors": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "callable",
    "classmethod",
    "enumerate",
    "init",
    "isinstance",
    "len",
    "list",
    "make_initializer",
    "str",
    "tensorflow.Variable",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_factors.make_initializer": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_factors.make_initializer.initializer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "init",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_gramian": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.Variable",
    "tensorflow.float32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_transient_vars": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "tensorflow.group",
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_weights": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "enumerate",
    "isinstance",
    "len",
    "make_wt_initializer",
    "tensorflow.Variable",
    "tensorflow.contrib.factorization.python.ops.factorization_ops.collections",
    "tensorflow.contrib.factorization.python.ops.factorization_ops.numbers",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_weights.make_wt_initializer": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._create_weights.make_wt_initializer.initializer": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._get_sharding_func": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._get_sharding_func.func": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "tensorflow.maximum",
    "tensorflow.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._prepare_gramian": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "tensorflow.add_n",
    "tensorflow.assign",
    "tensorflow.matmul",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._process_input_helper": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "isinstance",
    "sharding_func",
    "tensorflow.SparseTensor",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel",
    "tensorflow.expand_dims",
    "tensorflow.int64",
    "tensorflow.matrix_solve",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.shape",
    "tensorflow.sparse_tensor_dense_matmul",
    "tensorflow.split",
    "tensorflow.squeeze",
    "tensorflow.transpose",
    "tensorflow.unique",
    "wals_compute_partial_lhs_and_rhs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._shard_sizes": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "classmethod",
    "divmod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel._transient_var": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.col_factors": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.col_update_prep_gramian_op": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.col_weights": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.initialize_col_update_op": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.initialize_op": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "property",
    "tensorflow.initialize_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.initialize_row_update_op": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.row_factors": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.row_update_prep_gramian_op": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.row_weights": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.scatter_update": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "len",
    "list",
    "sharding_func",
    "six.moves.xrange",
    "tensorflow.cast",
    "tensorflow.dynamic_partition",
    "tensorflow.group",
    "tensorflow.int32",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.scatter_update"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.update_col_factors": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.update_row_factors": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.WALSModel.worker_init": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops._factorization_ops": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.embedding_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.embedding_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.load_op_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library.load_op_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.float32",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.INPUT_MATRIX": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_als": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.contrib.factorization.WALSModel",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.INPUT_MATRIX",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.np_matrix_to_tf_sparse",
    "tensorflow.float32",
    "tensorflow.sparse_placeholder",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_als_transposed": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.contrib.factorization.WALSModel",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.INPUT_MATRIX",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.np_matrix_to_tf_sparse",
    "tensorflow.float32",
    "tensorflow.sparse_placeholder",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_process_input": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.WALSModel",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.INPUT_MATRIX",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.np_matrix_to_tf_sparse",
    "tensorflow.float32",
    "tensorflow.sparse_placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_process_input_transposed": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.WALSModel",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.INPUT_MATRIX",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.np_matrix_to_tf_sparse",
    "tensorflow.float32",
    "tensorflow.sparse_placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_train_full_low_rank_als": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.transpose",
    "six.moves.xrange",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.factorization.WALSModel"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_train_full_low_rank_wals": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.transpose",
    "six.moves.xrange",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.factorization.WALSModel"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_train_matrix_completion_wals": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "filter",
    "keep_index",
    "list",
    "numpy.array",
    "numpy.dot",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.transpose",
    "six.moves.xrange",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.factorization.WALSModel"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest._run_test_train_matrix_completion_wals.keep_index": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.setUp": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.sparse_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.simple_train": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_als_transposed_with_cache": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_als_with_cache": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_als_without_cache": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_process_input_transposed_with_cache": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_process_input_transposed_without_cache": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_process_input_with_cache": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_process_input_without_cache": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_train_full_low_rank_wals_with_cache": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_train_full_low_rank_wals_without_cache": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_train_matrix_completion_wals_with_cache": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.WalsModelTest.test_train_matrix_completion_wals_without_cache": {
  "data": {
   "lineno": 515
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.np_matrix_to_tf_sparse": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.array",
    "numpy.concatenate",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.int64",
    "numpy.nonzero",
    "numpy.where",
    "range",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.sparse_input": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.INPUT_MATRIX",
    "tensorflow.contrib.factorization.python.ops.factorization_ops_test.np_matrix_to_tf_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.factorization_ops_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._InitOpDefLibrary",
    "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._nearest_neighbors_outputs",
    "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._NearestNeighborsOutput": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._kmeans_plus_plus_initialization_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._nearest_neighbors_outputs": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._op_def_lib": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.kmeans_plus_plus_initialization": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.nearest_neighbors": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gen_clustering_ops._NearestNeighborsOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_clustering_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gen_factorization_ops._InitOpDefLibrary",
    "tensorflow.contrib.factorization.python.ops.gen_factorization_ops._wals_compute_partial_lhs_and_rhs_outputs",
    "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops._WALSComputePartialLhsAndRhsOutput": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops._op_def_lib": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops._wals_compute_partial_lhs_and_rhs_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gen_factorization_ops.wals_compute_partial_lhs_and_rhs": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gen_factorization_ops._WALSComputePartialLhsAndRhsOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.TransformerMixin",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.factorization.python.ops.gmm.GMM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM._get_eval_ops": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gmm.GMM",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.gmm",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM._get_predict_ops": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gmm.GMM",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.gmm"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM._get_train_ops": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.assign_add",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.gmm",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM._parse_tensor_or_dict": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sorted",
    "tensorflow.python.ops.array_ops.concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM.clusters": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.squeeze",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.CLUSTERS_VARIABLE",
    "tensorflow.contrib.framework.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM.covariances": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.CLUSTERS_COVS_VARIABLE",
    "tensorflow.contrib.framework.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM.fit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM.predict": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array",
    "super",
    "tensorflow.contrib.factorization.python.ops.gmm.GMM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM.score": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.contrib.factorization.python.ops.gmm.GMM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.GMM.transform": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.array",
    "super",
    "tensorflow.contrib.factorization.python.ops.gmm.GMM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.TransformerMixin": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.TransformerMixin"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.data_feeder": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.data_feeder"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.gmm_ops": {
  "data": {
   "shadows": "tensorflow.contrib.factorization.python.ops.gmm_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm.with_dependencies": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.with_dependencies"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.DIAG_COVARIANCE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Exception",
    "len",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.DIAG_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE",
    "tensorflow.diag",
    "tensorflow.ones",
    "tensorflow.pack",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._create_variables": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.DIAG_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops._covariance",
    "tensorflow.contrib.factorization.python.ops.gmm_ops._init_clusters_random",
    "tensorflow.diag_part",
    "tensorflow.expand_dims",
    "tensorflow.float32",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_diag_covariance_probs": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.batch_matmul",
    "tensorflow.expand_dims",
    "tensorflow.log",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.squeeze",
    "tensorflow.to_float",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_distance_to_clusters": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.batch_matmul",
    "tensorflow.concat",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.DIAG_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE",
    "tensorflow.diag",
    "tensorflow.expand_dims",
    "tensorflow.gather_nd",
    "tensorflow.matrix_inverse",
    "tensorflow.pack",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.sqrt",
    "tensorflow.tile",
    "tensorflow.to_int64",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_expectation_operation": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "tensorflow.exp",
    "tensorflow.expand_dims",
    "tensorflow.pack",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_full_covariance_probs": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.cholesky",
    "tensorflow.log",
    "tensorflow.matrix_diag_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.to_float",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_graph": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "tensorflow.expand_dims",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_log_prob_operation": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.gmm_ops.DIAG_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_loglikelihood_operation": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "tensorflow.log",
    "tensorflow.reduce_sum",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_maximization_operation": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "range",
    "tensorflow.add_n",
    "tensorflow.assign",
    "tensorflow.concat",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.DIAG_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.MEPS",
    "tensorflow.control_dependencies",
    "tensorflow.diag_part",
    "tensorflow.div",
    "tensorflow.expand_dims",
    "tensorflow.matmul",
    "tensorflow.no_op",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.squeeze",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_partial_maximization_operation": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "range",
    "tensorflow.batch_matmul",
    "tensorflow.concat",
    "tensorflow.expand_dims",
    "tensorflow.matmul",
    "tensorflow.reduce_sum",
    "tensorflow.squeeze",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm._define_prior_log_prob_operation": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tensorflow.exp",
    "tensorflow.log",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.alphas": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.assignments": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.argmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.clusters": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.covariances": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.scores": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm.training_ops": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.MEPS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops._covariance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.reduce_mean",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.square",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops._init_clusters_random": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.add_n",
    "tensorflow.assert_less_equal",
    "tensorflow.cast",
    "tensorflow.control_dependencies",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.random_uniform",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.embedding_lookup": {
  "data": {
   "shadows": "tensorflow.python.ops.embedding_ops.embedding_lookup"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.gmm": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.Tensor",
    "tensorflow.constant",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE",
    "tensorflow.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm",
    "tensorflow.float32",
    "tensorflow.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.GmmOpsTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.GmmOpsTest.make_data": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.random.normal",
    "numpy.random.random",
    "six.moves.xrange",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.GmmOpsTest.make_data_from_centers": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.random.normal",
    "numpy.random.random_integers",
    "numpy.random.random_sample",
    "six.moves.xrange",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.GmmOpsTest.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.GmmOpsTest.testParams": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.testing.assert_almost_equal",
    "six.moves.xrange",
    "tensorflow.constant",
    "tensorflow.contrib.factorization.GmmAlgorithm",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.GmmOpsTest.test_covariance": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.diag",
    "numpy.ravel",
    "numpy.testing.assert_array_almost_equal",
    "tensorflow.constant",
    "tensorflow.contrib.factorization.python.ops.gmm_ops._covariance",
    "tensorflow.contrib.factorization.python.ops.gmm_ops_test.time",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.GmmOpsTest.test_simple_cluster": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.mean",
    "numpy.squeeze",
    "six.moves.xrange",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.factorization.gmm",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.gmm_ops": {
  "data": {
   "shadows": "tensorflow.contrib.factorization.python.ops.gmm_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_ops_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.FLAGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest._compare_with_sklearn": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "numpy.asarray",
    "numpy.diag",
    "numpy.random.seed",
    "numpy.ravel",
    "tensorflow.contrib.factorization.GMM",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.make_random_centers": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "numpy.round",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.make_random_points": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.dot",
    "numpy.float32",
    "numpy.linalg.inv",
    "numpy.mean",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.round",
    "numpy.sqrt",
    "six.moves.xrange",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.add.reduce",
    "numpy.random.seed",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.test_clusters": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.factorization.GMM",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.test_compare_diag": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.test_compare_full": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.test_fit": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.GMM",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.GMMTest.test_infer": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.sum",
    "tensorflow.contrib.factorization.GMM",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.gmm_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.KMEANS_PLUS_PLUS_INIT",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.BaseMonitor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.COSINE_DISTANCE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMEANS_PLUS_PLUS_INIT": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.TransformerMixin",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._StopWhenConverged": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._StopWhenConverged.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._StopWhenConverged.begin": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._StopWhenConverged.step_begin": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._StopWhenConverged.step_end": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abs",
    "super",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._get_eval_ops": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._get_predict_ops": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._get_train_ops": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.assign_add",
    "tensorflow.contrib.factorization.python.ops.clustering_ops.KMeans",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering._parse_tensor_or_dict": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sorted",
    "tensorflow.python.ops.array_ops.concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering.clusters": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering.fit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering.predict": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.array",
    "super",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering.score": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering.transform": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.array",
    "super",
    "tensorflow.contrib.factorization.python.ops.kmeans.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.RANDOM_INIT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.SQUARED_EUCLIDEAN_DISTANCE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.TransformerMixin": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.TransformerMixin"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.clustering_ops": {
  "data": {
   "shadows": "tensorflow.contrib.factorization.python.ops.clustering_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.data_feeder": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.data_feeder"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans.with_dependencies": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.with_dependencies"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.FLAGS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.python.platform.benchmark.Benchmark"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark.SetUp": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "float",
    "numpy.random.seed",
    "numpy.sum",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.make_random_centers",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.make_random_points"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark._fit": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark._report": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark.benchmark_01_2dim_5center_500point": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark.benchmark_02_20dim_20center_10kpoint": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark.benchmark_03_100dim_50center_50kpoint": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark.benchmark_03_100dim_50center_50kpoint_unseparated": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark.benchmark_04_100dim_500center_500kpoint": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark.benchmark_05_100dim_500center_500kpoint_unseparated": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.batch_size": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.config": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.setUp": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.add.reduce",
    "numpy.random.seed",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.make_random_centers",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.make_random_points"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_clusters": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_fit": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_fit_raise_if_num_clusters_larger_than_num_points_kmeans_plus_plus": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.float32",
    "tensorflow.contrib.factorization.KMEANS_PLUS_PLUS_INIT",
    "tensorflow.contrib.factorization.KMeansClustering"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_fit_raise_if_num_clusters_larger_than_num_points_random_init": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.RANDOM_INIT"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_fit_with_cosine_distance": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.sort",
    "tensorflow.contrib.factorization.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.normalize"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_infer": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.maximum",
    "numpy.square",
    "numpy.sum",
    "numpy.transpose",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.make_random_points"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_monitor": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.RANDOM_INIT",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_predict_with_cosine_distance": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.mean",
    "numpy.sort",
    "numpy.tensordot",
    "tensorflow.contrib.factorization.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.normalize"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_predict_with_cosine_distance_and_kmeans_plus_plus": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.mean",
    "numpy.tensordot",
    "sorted",
    "tensorflow.contrib.factorization.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.KMEANS_PLUS_PLUS_INIT",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.normalize"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.test_transform_with_cosine_distance": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.mean",
    "numpy.sort",
    "tensorflow.contrib.factorization.COSINE_DISTANCE",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.RANDOM_INIT",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.cosine_similarity",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.normalize"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest.use_mini_batch": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.MiniBatchKMeansTest": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansTest"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.MiniBatchKMeansTest.batch_size": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.MiniBatchKMeansTest.use_mini_batch": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.SklearnKMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.SklearnKMeansBenchmark": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.SklearnKMeansBenchmark._fit": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "print",
    "range",
    "sklearn.cluster.KMeans",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.TensorflowKMeansBenchmark": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "tensorflow.contrib.factorization.python.ops.kmeans_test.KMeansBenchmark"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.TensorflowKMeansBenchmark._fit": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "int",
    "print",
    "range",
    "tensorflow.contrib.factorization.KMEANS_PLUS_PLUS_INIT",
    "tensorflow.contrib.factorization.KMeansClustering",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.math",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.time",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.benchmark": {
  "data": {
   "shadows": "tensorflow.python.platform.benchmark"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.cosine_similarity": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.transpose",
    "tensorflow.contrib.factorization.python.ops.kmeans_test.normalize"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.make_random_centers": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.make_random_points": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.add.reduce",
    "numpy.float32",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.normalize": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.factorization.python.ops.kmeans_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.ffmpeg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.decode_audio": {
  "data": {
   "shadows": "tensorflow.contrib.ffmpeg.ffmpeg_ops.decode_audio"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.encode_audio": {
  "data": {
   "shadows": "tensorflow.contrib.ffmpeg.ffmpeg_ops.encode_audio"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.ffmpeg.ffmpeg_ops._load_library",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops._load_library": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NameError",
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.decode_audio": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.decode_audio"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.encode_audio": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.encode_audio"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.gen_decode_audio_op_py": {
  "data": {
   "shadows": "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.gen_encode_audio_op_py": {
  "data": {
   "shadows": "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ffmpeg_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py._InitOpDefLibrary": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py._decode_audio_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py._op_def_lib": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.decode_audio": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_decode_audio_op_py.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py._InitOpDefLibrary": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py._encode_audio_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py._op_def_lib": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.encode_audio": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.ops.gen_encode_audio_op_py.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.ffmpeg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.framework.__all__": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.framework": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.framework.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils._get_checkpoint_filename": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.IsDirectory",
    "tensorflow.python.training.saver.latest_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils._set_checkpoint_initializer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._restore_slice",
    "tensorflow.python.ops.state_ops.assign"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils._set_variable_or_list_initializer": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils._set_checkpoint_initializer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.gen_io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_io_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.init_from_checkpoint": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "is_var",
    "isinstance",
    "len",
    "list",
    "str",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils._get_checkpoint_filename",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils._set_variable_or_list_initializer",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.load_checkpoint",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.six",
    "tensorflow.python.ops.variable_scope._get_default_variable_store",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.list_variables": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.load_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.load_checkpoint": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils._get_checkpoint_filename",
    "tensorflow.python.training.training.NewCheckpointReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.load_variable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.load_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.train": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.checkpoint_utils.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.deprecation.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.deprecation.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecated_args": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.deprecation.deprecated_args"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecation": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.framework.deprecation._add_deprecated_arg_notice_to_docstring": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.deprecation._add_deprecation_to_docstring"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation._add_deprecated_function_notice_to_docstring": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.deprecation._add_deprecation_to_docstring"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation._add_deprecation_to_docstring": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation._get_qualified_name": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation._validate_callable": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation._validate_deprecation_args": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.framework.deprecation.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.deprecation._validate_deprecation_args"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated.deprecated_wrapper": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "func.__doc__",
    "tensorflow.contrib.framework.python.framework.deprecation._add_deprecated_function_notice_to_docstring",
    "tensorflow.contrib.framework.python.framework.deprecation._validate_callable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated.deprecated_wrapper.new_func": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "func",
    "tensorflow.contrib.framework.python.framework.deprecation._get_qualified_name",
    "tensorflow.contrib.framework.python.framework.deprecation.functools",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated_arg_values": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.framework.deprecation._validate_deprecation_args"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated_arg_values.deprecated_wrapper": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "func",
    "func.__doc__",
    "tensorflow.contrib.framework.python.framework.deprecation._add_deprecated_arg_notice_to_docstring",
    "tensorflow.contrib.framework.python.framework.deprecation._validate_callable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated_arg_values.deprecated_wrapper.new_func": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "func",
    "func.__module__",
    "tensorflow.contrib.framework.python.framework.deprecation._get_qualified_name",
    "tensorflow.contrib.framework.python.framework.deprecation.functools",
    "tensorflow.contrib.framework.python.framework.deprecation.inspect",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated_args": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.framework.deprecation._validate_deprecation_args"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated_args.deprecated_wrapper": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "func",
    "func.__doc__",
    "len",
    "tensorflow.contrib.framework.python.framework.deprecation._add_deprecated_arg_notice_to_docstring",
    "tensorflow.contrib.framework.python.framework.deprecation._validate_callable",
    "tensorflow.contrib.framework.python.framework.deprecation.inspect"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.deprecated_args.deprecated_wrapper.new_func": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "func",
    "func.__module__",
    "len",
    "tensorflow.contrib.framework.python.framework.deprecation._get_qualified_name",
    "tensorflow.contrib.framework.python.framework.deprecation.functools",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.deprecation.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util._all_equal": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util._assert_same_base_type": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util._assert_shape_op": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.tensor_util._is_shape",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util._is_rank": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util._is_shape": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.tensor_util._all_equal",
    "tensorflow.contrib.framework.python.framework.tensor_util._is_rank",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.math_ops.logical_and"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.framework.tensor_util._assert_same_base_type",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.assert_scalar_int": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.convert_to_tensor_or_sparse_tensor": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensor.from_value",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.is_tensor": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.reduce_sum_n": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.with_same_shape": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "with_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.framework.tensor_util.with_shape": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.int32",
    "numpy.int64",
    "numpy.ndarray",
    "tensorflow.contrib.framework.python.framework.tensor_util._assert_shape_op",
    "tensorflow.contrib.framework.python.framework.tensor_util.is_tensor",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.reshape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._ARGSTACK": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._DECORATED_OPS": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.__all__": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._add_op": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.arg_scope._DECORATED_OPS",
    "tensorflow.contrib.framework.python.ops.arg_scope._key_op",
    "tensorflow.contrib.framework.python.ops.arg_scope._kwarg_names"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._current_arg_scope": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.arg_scope._get_arg_stack"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._get_arg_stack": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.arg_scope._ARGSTACK"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._key_op": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._kwarg_names": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope._name_op": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.add_arg_scope": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "func",
    "func.__doc__",
    "setattr",
    "tensorflow.contrib.framework.python.ops.arg_scope._add_op",
    "tensorflow.contrib.framework.python.ops.arg_scope._key_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.add_arg_scope.func_with_args": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "func",
    "tensorflow.contrib.framework.python.ops.arg_scope._current_arg_scope",
    "tensorflow.contrib.framework.python.ops.arg_scope._key_op",
    "tensorflow.contrib.framework.python.ops.arg_scope.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.arg_scope": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "has_arg_scope",
    "isinstance",
    "list",
    "tensorflow.contrib.framework.python.ops.arg_scope._current_arg_scope",
    "tensorflow.contrib.framework.python.ops.arg_scope._get_arg_stack",
    "tensorflow.contrib.framework.python.ops.arg_scope._key_op",
    "tensorflow.contrib.framework.python.ops.arg_scope._name_op",
    "tensorflow.contrib.framework.python.ops.arg_scope.contextlib",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.arg_scoped_arguments": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "func",
    "tensorflow.contrib.framework.python.ops.arg_scope._DECORATED_OPS",
    "tensorflow.contrib.framework.python.ops.arg_scope._key_op",
    "tensorflow.contrib.framework.python.ops.arg_scope.has_arg_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.has_arg_scope": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "func",
    "tensorflow.contrib.framework.python.ops.arg_scope._DECORATED_OPS",
    "tensorflow.contrib.framework.python.ops.arg_scope._key_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.arg_scope.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.ops.ops.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.ops.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.ops.get_graph_from_inputs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._get_graph_from_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops._get_tensor_repr": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.uint8",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.print_op": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.contrib.framework.python.ops.prettyprint_ops._get_tensor_repr",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.logging_ops.Print",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.prettyprint_ops.tensor_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.tensor_array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.framework.python.ops.variables.VariableDeviceChooser": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.framework.python.ops.variables.VariableDeviceChooser.__call__": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "tensorflow.python.framework.device.DeviceSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.VariableDeviceChooser.__init__": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.contrib.framework.python.ops.variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.add_model_variable": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.assert_global_step": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.assert_or_get_global_step": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "get_global_step",
    "tensorflow.contrib.framework.python.ops.variables.assert_global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.assign_from_checkpoint": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "str",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.pywrap_tensorflow.NewCheckpointReader",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.assign_from_checkpoint_fn": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.pywrap_tensorflow.NewCheckpointReader",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.assign_from_checkpoint_fn.callback": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "tensorflow.python.training.saver.restore"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.assign_from_values": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.assign_from_values_fn": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.assign_from_values"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.assign_from_values_fn.callback": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.contrib_add_arg_scope": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.add_arg_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.create_global_step": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_global_step": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "tensorflow.contrib.framework.python.ops.variables.assert_global_step",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.platform.tf_logging.error"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_local_variables": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_variables",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_model_variables": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_variables",
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_or_create_global_step": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.create_global_step",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_unique_variable": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_variables": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_variables_by_name": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_variables_by_suffix": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.get_variables_to_restore": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "set",
    "tensorflow.contrib.framework.python.ops.variables.get_variables",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.local_variable": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.model_variable": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.variable",
    "tensorflow.python.framework.device",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.tf_device": {
  "data": {
   "shadows": "tensorflow.python.framework.device"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.variable": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "list",
    "set",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.python.framework.device",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.framework.python.ops.variables.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.python.ops.variables.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.framework.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.match.OpMatcher",
    "tensorflow.contrib.graph_editor.select.select_ops",
    "tensorflow.contrib.graph_editor.select.select_ts",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.subgraph.make_view_from_scope",
    "tensorflow.contrib.graph_editor.util.make_placeholder_from_dtype_and_shape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.graph_editor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.edit"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.edit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.bypass": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.graph_editor.edit.detach_inputs",
    "tensorflow.contrib.graph_editor.reroute.reroute_a2b_ts",
    "tensorflow.contrib.graph_editor.subgraph.make_view"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.edit.connect": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.edit.detach_outputs",
    "tensorflow.contrib.graph_editor.reroute.reroute_a2b_inputs",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.util.check_graphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.edit.detach": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.edit.detach_inputs",
    "tensorflow.contrib.graph_editor.edit.detach_outputs",
    "tensorflow.contrib.graph_editor.select.check_cios"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.edit.detach_control_inputs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute.remove_control_inputs",
    "tensorflow.contrib.graph_editor.subgraph.make_view"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.edit.detach_control_outputs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.graph_editor.reroute.remove_control_inputs",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.util.ControlOutputs",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.edit.detach_inputs": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.edit.detach_control_inputs",
    "tensorflow.contrib.graph_editor.reroute.swap_inputs",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.util.placeholder_name",
    "tensorflow.python.ops.array_ops.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.edit.detach_outputs": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.contrib.graph_editor.edit.detach_control_outputs",
    "tensorflow.contrib.graph_editor.reroute.swap_outputs",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.util.make_placeholder_from_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.edit.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.reroute": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.reroute"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.select": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.select"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.subgraph": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.subgraph"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.tf_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.edit.util": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.util"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.match": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.match"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.match.OpMatcher": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.match.OpMatcher.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "cinput_op_match",
    "consumer_op_match",
    "input_op_match",
    "isinstance",
    "len",
    "positive_filter",
    "tensorflow.python.framework.ops.Operation",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.OpMatcher.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.OpMatcher._finalize_positive_filter": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "tensorflow.contrib.graph_editor.select.can_be_regex",
    "tensorflow.contrib.graph_editor.select.make_regex",
    "tensorflow.python.framework.ops.Operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.OpMatcher.control_input_ops": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.graph_editor.match._make_graph_match"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.OpMatcher.input_ops": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.graph_editor.match._make_graph_match"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.OpMatcher.output_ops": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "consumer_op_match",
    "isinstance",
    "list",
    "tensorflow.contrib.graph_editor.match._make_graph_match"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.match._make_graph_match": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "OpMatcher",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.match.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.match.op_type": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.match.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.match.select": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.select"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.match.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.match.tf_ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.matcher": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.ops": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.ph": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.reroute": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.reroute"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.reroute._RerouteMode": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object",
    "range"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.reroute._RerouteMode.check": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.reroute._check_ts_compatibility": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.contrib.graph_editor.util.make_list_of_t",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute._reroute_sgv": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_inputs",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_outputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute._reroute_sgv_inputs": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_remap",
    "tensorflow.contrib.graph_editor.reroute._reroute_ts",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.util.check_graphs",
    "tensorflow.contrib.graph_editor.util.get_consuming_ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute._reroute_sgv_outputs": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._reroute_ts",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.util.check_graphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute._reroute_sgv_remap": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView",
    "tensorflow.contrib.graph_editor.util.check_graphs",
    "type",
    "update_passthrough_outputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute._reroute_sgv_remap.update_passthrough_outputs": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute._reroute_t": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute._reroute_ts": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "frozenset",
    "set",
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._check_ts_compatibility",
    "tensorflow.contrib.graph_editor.reroute._reroute_t",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.contrib.graph_editor.util.make_list_of_t",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.reroute.add_control_inputs": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops.Operation",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.reroute.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.reroute.remove_control_inputs": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops.Operation",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_a2b": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_a2b_inputs": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_a2b_outputs": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_outputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_a2b_ts": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_ts"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_b2a": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_b2a_inputs": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_b2a_outputs": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_outputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.reroute_b2a_ts": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_ts"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.subgraph": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.subgraph"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.reroute.swap": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.swap_inputs": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.swap_outputs": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_sgv_outputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.swap_ts": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.reroute._RerouteMode",
    "tensorflow.contrib.graph_editor.reroute._reroute_ts"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.reroute.tf_ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.reroute.util": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.util"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.select"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select._RE_TYPE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.select.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.select._get_input_ts": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select._get_output_ts": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select.can_be_regex": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "six.string_types",
    "tensorflow.contrib.graph_editor.select._RE_TYPE"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.check_cios": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.contrib.graph_editor.util.ControlOutputs",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.compute_boundary_ts": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "frozenset",
    "tensorflow.contrib.graph_editor.select._get_input_ts",
    "tensorflow.contrib.graph_editor.select._get_output_ts",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select.filter_ops": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "positive_filter",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.filter_ops_from_regex": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.filter_ops",
    "tensorflow.contrib.graph_editor.select.make_regex",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.filter_ts": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "positive_filter",
    "tensorflow.contrib.graph_editor.select._get_input_ts",
    "tensorflow.contrib.graph_editor.select._get_output_ts",
    "tensorflow.contrib.graph_editor.util.concatenate_unique",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.filter_ts_from_regex": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.filter_ts",
    "tensorflow.contrib.graph_editor.select.make_regex",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_backward_walk_ops": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "frozenset",
    "is_within",
    "isinstance",
    "list",
    "set",
    "tensorflow.contrib.graph_editor.util.concatenate_unique",
    "tensorflow.contrib.graph_editor.util.get_generating_ops",
    "tensorflow.contrib.graph_editor.util.is_iterable",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.contrib.graph_editor.util.make_list_of_t",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_backward_walk_ops.is_within": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_forward_walk_ops": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "frozenset",
    "is_within",
    "isinstance",
    "list",
    "set",
    "tensorflow.contrib.graph_editor.select.check_cios",
    "tensorflow.contrib.graph_editor.util.concatenate_unique",
    "tensorflow.contrib.graph_editor.util.get_consuming_ops",
    "tensorflow.contrib.graph_editor.util.is_iterable",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.contrib.graph_editor.util.make_list_of_t",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_forward_walk_ops.is_within": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_name_scope_ops": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.filter_ops_from_regex",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_ops_ios": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.check_cios",
    "tensorflow.contrib.graph_editor.util.concatenate_unique",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_walks_intersection_ops": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.check_cios",
    "tensorflow.contrib.graph_editor.select.get_backward_walk_ops",
    "tensorflow.contrib.graph_editor.select.get_forward_walk_ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_walks_union_ops": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.check_cios",
    "tensorflow.contrib.graph_editor.select.get_backward_walk_ops",
    "tensorflow.contrib.graph_editor.select.get_forward_walk_ops",
    "tensorflow.contrib.graph_editor.util.concatenate_unique"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.get_within_boundary_ops": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "tensorflow.contrib.graph_editor.select.check_cios",
    "tensorflow.contrib.graph_editor.select.get_ops_ios",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select.make_regex": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "six.string_types",
    "tensorflow.contrib.graph_editor.select.can_be_regex",
    "tensorflow.contrib.graph_editor.select.re",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select.select_ops": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "positive_filter",
    "six.iteritems",
    "tensorflow.contrib.graph_editor.select.can_be_regex",
    "tensorflow.contrib.graph_editor.select.filter_ops_from_regex",
    "tensorflow.contrib.graph_editor.select.make_regex",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.python.framework.ops",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.append",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.select_ops_and_ts": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.select_ops",
    "tensorflow.contrib.graph_editor.select.select_ts",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.select_ts": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "positive_filter",
    "six.iteritems",
    "tensorflow.contrib.graph_editor.select.can_be_regex",
    "tensorflow.contrib.graph_editor.select.filter_ts_from_regex",
    "tensorflow.contrib.graph_editor.select.make_regex",
    "tensorflow.contrib.graph_editor.util.make_list_of_t",
    "tensorflow.python.framework.ops.Graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.select.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select.tf_ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.select.util": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.util"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.sgv": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.sgv_scope": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.subgraph": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.subgraph"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.StringIO": {
  "data": {
   "shadows": "six.StringIO"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__bool__": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__copy__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "list",
    "setattr",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__enter__": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__exit__": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "frozenset",
    "list",
    "tensorflow.contrib.graph_editor.select.compute_boundary_ts",
    "tensorflow.contrib.graph_editor.util.get_unique_graph",
    "tensorflow.contrib.graph_editor.util.make_list_of_op",
    "tensorflow.contrib.graph_editor.util.make_list_of_t"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__str__": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "id",
    "print",
    "print_list",
    "six.StringIO"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__str__.op_name": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__str__.print_list": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "get_name",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.__str__.tensor_name": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView._assign_from": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView._remap_default": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.graph_editor.select.compute_boundary_ts"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView._remap_inputs": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.graph_editor.subgraph._check_within_range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView._remap_outputs": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.graph_editor.subgraph._check_within_range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView._remap_outputs_make_unique": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.graph_editor.util.concatenate_unique"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView._remap_outputs_to_consumers": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView._remove_unused_ops": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.get_walks_union_ops",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.connected_inputs": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.connected_outputs": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.consumers": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.concatenate_unique"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.copy": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.subgraph.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.find_op_by_name": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.graph": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.input_index": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.inputs": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.graph_editor.util.ListView"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.is_passthrough": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.op": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.ops": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.output_index": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.outputs": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.graph_editor.util.ListView"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.passthroughs": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.graph_editor.util.ListView"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.remap": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.subgraph.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.remap_default": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.remap_inputs": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.remap_outputs": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.subgraph.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.remap_outputs_make_unique": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.subgraph.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.remap_outputs_to_consumers": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.subgraph.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.SubGraphView.remove_unused_ops": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.subgraph.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.subgraph._check_graph": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView",
    "tensorflow.python.framework.ops.Graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph._check_within_range": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.make_view": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tensorflow.contrib.graph_editor.select.select_ops_and_ts",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView",
    "tensorflow.contrib.graph_editor.subgraph._check_graph",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.make_view_from_scope": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.select.get_name_scope_ops",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView",
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.subgraph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.select": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.select"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.tf_ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.subgraph.util": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.util"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.StringIO": {
  "data": {
   "shadows": "six.StringIO"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo.__init__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo.__str__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "id",
    "print",
    "six.StringIO",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo._get_transformed_map": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo._original_elem": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "finder",
    "isinstance",
    "missing_fn",
    "six.iteritems",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo._transformed_elem": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "isinstance",
    "missing_fn",
    "six.iteritems",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo.original": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "functools.partial",
    "missing_fn",
    "tensorflow.contrib.graph_editor.util.transform_tree"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.ResultInfo.transformed": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "functools.partial",
    "missing_fn",
    "tensorflow.contrib.graph_editor.util.transform_tree"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer._Info": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer._Info.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "frozenset",
    "tensorflow.contrib.graph_editor.util.ControlOutputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.__call__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.transform.Transformer",
    "tensorflow.contrib.graph_editor.util.scope_finalize",
    "tensorflow.python.framework.ops.Graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.__init__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.transform.assign_renamed_collections_handler",
    "tensorflow.contrib.graph_editor.transform.copy_op_handler",
    "tensorflow.contrib.graph_editor.transform.keep_t_if_possible_handler",
    "tensorflow.contrib.graph_editor.transform.replace_t_with_placeholder_handler",
    "tensorflow.contrib.graph_editor.transform.transform_op_if_inside_handler"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer._transform_op": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "device_function",
    "reversed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer._transform_sgv": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "six.iteritems",
    "tensorflow.contrib.graph_editor.subgraph.SubGraphView"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer._transform_t": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.Transformer.new_name": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.transform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.assign_renamed_collections_handler": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.copy": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "TypeError",
    "copier",
    "isinstance",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.transform.Transformer",
    "tensorflow.python.framework.ops.Graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.copy_op_handler": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "copy.deepcopy",
    "tensorflow.python.framework.ops.Operation",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.copy_with_input_replacements": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "TypeError",
    "copier",
    "copier.transform_external_input_handler",
    "isinstance",
    "tensorflow.contrib.graph_editor.subgraph.make_view",
    "tensorflow.contrib.graph_editor.transform.Transformer",
    "tensorflow.python.framework.ops.Graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.copy_with_input_replacements.replace_t_with_replacement_handler": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.transform.keep_t_if_possible_handler"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.edit": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.edit"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.graph_replace": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "missing_fn",
    "six.iterkeys",
    "tensorflow.contrib.graph_editor.select.get_walks_intersection_ops",
    "tensorflow.contrib.graph_editor.transform.copy_with_input_replacements",
    "tensorflow.contrib.graph_editor.util.ControlOutputs",
    "tensorflow.contrib.graph_editor.util.flatten_tree",
    "tensorflow.contrib.graph_editor.util.get_unique_graph",
    "tensorflow.python.framework.ops",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.iterkeys": {
  "data": {
   "shadows": "six.iterkeys"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.keep_t_if_possible_handler": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.transform.replace_t_with_placeholder_handler"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.replace_t_with_placeholder_handler": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.make_placeholder_from_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.reroute": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.reroute"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.select": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.select"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.subgraph": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.subgraph"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.tf_ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.transform.transform_op_if_inside_handler": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.transform_op_in_place": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.graph_editor.edit.detach_outputs",
    "tensorflow.contrib.graph_editor.reroute.reroute_a2b_ts"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.transform.util": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.util"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.ts": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.util": {
  "data": {
   "shadows": "tensorflow.contrib.graph_editor.util"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.util.ControlOutputs": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.util.ControlOutputs.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.Graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ControlOutputs._build": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ControlOutputs.get": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ControlOutputs.get_all": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ControlOutputs.graph": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ControlOutputs.update": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ListView": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.graph_editor.util.ListView.__add__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ListView.__bool__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ListView.__getitem__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ListView.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ListView.__iter__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.ListView.__len__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.graph_editor.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.util.check_graphs": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.concatenate_unique": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.util.flatten_tree": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.is_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.get_consuming_ops": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.make_list_of_t",
    "tensorflow.python.framework.ops",
    "tensorflow.python.framework.ops.append"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.get_generating_ops": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.make_list_of_t"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.get_tensors": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.Graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.get_unique_graph": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "str",
    "tensorflow.contrib.graph_editor.util.is_iterable",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.is_iterable": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "iter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.util.make_list_of_op": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.graph_editor.util.get_unique_graph",
    "tensorflow.contrib.graph_editor.util.is_iterable",
    "tensorflow.python.framework.ops",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.get_operations"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.make_list_of_t": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.graph_editor.util.get_tensors",
    "tensorflow.contrib.graph_editor.util.get_unique_graph",
    "tensorflow.contrib.graph_editor.util.is_iterable",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.make_placeholder_from_dtype_and_shape": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.placeholder_name",
    "tensorflow.python.ops.array_ops.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.make_placeholder_from_tensor": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "tensorflow.contrib.graph_editor.util.placeholder_name",
    "tensorflow.python.ops.array_ops.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.placeholder_name": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.graph_editor.util.scope_basename",
    "tensorflow.contrib.graph_editor.util.scope_dirname",
    "tensorflow.contrib.graph_editor.util.scope_finalize",
    "tensorflow.python.framework.ops.Tensor",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.util.scope_basename": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.scope_dirname": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.scope_finalize": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "tensorflow.contrib.graph_editor.util.tf_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.util.tf_ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.graph_editor.util.transform_tree": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dict",
    "fn",
    "isinstance",
    "iterable_type",
    "list",
    "six.iteritems",
    "tensorflow.contrib.graph_editor.util.is_iterable",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.grid_rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.grid_rnn.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.grid_rnn.python.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicLSTMCell": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicLSTMCell.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicLSTMCell",
    "tensorflow.python.ops.rnn_cell.BasicLSTMCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicRNNCell": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicRNNCell.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicRNNCell",
    "tensorflow.python.ops.rnn_cell.BasicRNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1LSTMCell": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1LSTMCell.__init__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1LSTMCell",
    "tensorflow.python.ops.rnn_cell.LSTMCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicLSTMCell": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicLSTMCell.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicLSTMCell",
    "tensorflow.python.ops.rnn_cell.BasicLSTMCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell",
    "tensorflow.python.ops.rnn_cell.BasicRNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2GRUCell": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2GRUCell.__init__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2GRUCell",
    "tensorflow.python.ops.rnn_cell.GRUCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell.__init__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell",
    "tensorflow.python.ops.rnn_cell.LSTMCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid3LSTMCell": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid3LSTMCell.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid3LSTMCell",
    "tensorflow.python.ops.rnn_cell.LSTMCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell.__call__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "_propagate",
    "enumerate",
    "len",
    "range",
    "sum",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "_parse_rnn_config",
    "cell_fn",
    "isinstance",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.rnn_cell.LSTMCell",
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell.input_size": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell.output_size": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell.state_size": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell._GridRNNConfig": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell._GridRNNDimension": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell._parse_rnn_config": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "check_dim_list",
    "range",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell._GridRNNConfig",
    "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell._GridRNNDimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell._parse_rnn_config.check_dim_list": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "list",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell._propagate": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "cell",
    "len",
    "tensorflow.contrib.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.grid_rnn.python.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.__all__": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.layers.ops.gen_bucketization_op._InitOpDefLibrary",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op._InitOpDefLibrary": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op._bucketize_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op._op_def_lib": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op.bucketize": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_bucketization_op.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op._InitOpDefLibrary",
    "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op._sparse_feature_cross_outputs",
    "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op._InitOpDefLibrary": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op._SparseFeatureCrossOutput": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op._op_def_lib": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op._sparse_feature_cross_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.sparse_feature_cross": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op._SparseFeatureCrossOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.ops.gen_sparse_feature_cross_op.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops._prune_invalid_ids": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.sparse_ops.sparse_retain"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.contrib_tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.embedding_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.embedding_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.hashed_embedding_lookup": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "range",
    "sum",
    "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.sparse_feature_cross",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.hashed_embedding_lookup_sparse": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "tensorflow.contrib.layers.python.layers.embedding_ops.hashed_embedding_lookup",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.unique",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.sparse_segment_mean",
    "tensorflow.python.ops.math_ops.sparse_segment_sqrt_n",
    "tensorflow.python.ops.math_ops.sparse_segment_sum",
    "tensorflow.python.ops.sparse_ops.sparse_fill_empty_rows",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.safe_embedding_lookup_sparse": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "_prune_invalid_ids",
    "len",
    "tensorflow.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.embedding_ops.embedding_lookup_sparse",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.sparse_ops.sparse_fill_empty_rows",
    "tensorflow.python.ops.sparse_ops.sparse_reshape",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.sparse_feature_cross_op": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest._random_weights": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "tensorflow.create_partitioned_variables",
    "tensorflow.float32",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest.setUp": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest.test_hashed_embedding_consistency": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.hashed_embedding_lookup"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest.test_hashed_embedding_coverage": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "tensorflow.constant",
    "tensorflow.contrib.layers.hashed_embedding_lookup"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest.test_hashed_embedding_lookup_sparse": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.hashed_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest.test_hashed_embedding_multi_dimension": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.hashed_embedding_lookup"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.HashedEmbeddingLookupTest.test_hashed_embedding_multiple_partition": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.min",
    "tensorflow.constant",
    "tensorflow.contrib.layers.hashed_embedding_lookup"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest._ids_and_weights_2d": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest._ids_and_weights_3d": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest._random_weights": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.embedding_ops_test.math",
    "tensorflow.create_partitioned_variables",
    "tensorflow.float32",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_3d_no_weights": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_3d_partitioned": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.python.layers.embedding_ops_test.itertools",
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_3d_partitioned_inconsistent_weights": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "tensorflow.constant",
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse",
    "tensorflow.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_3d_return_special_vector": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_3d_return_zero_vector": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_no_weights": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_partitioned": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.python.layers.embedding_ops_test.itertools",
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_partitioned_inconsistent_weights": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "tensorflow.constant",
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse",
    "tensorflow.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_return_special_vector": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.SafeEmbeddingLookupSparseTest.test_safe_embedding_lookup_sparse_return_zero_vector": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.safe_embedding_lookup_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.embedding_ops_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.__eq__": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.__ne__": {
  "data": {
   "lineno": 1859
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.__new__": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn._to_dense_tensor": {
  "data": {
   "lineno": 1850
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.config": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.insert_transformed_feature": {
  "data": {
   "lineno": 1796
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.key": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.name": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.to_weighted_sum": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": [
    "_weight",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.DataFrameColumn.to_weighted_sum._weight": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "_add_variable_collection",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.__new__": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "range",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn._to_embedding_lookup_arguments": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingLookupArguments",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.config": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.insert_transformed_feature": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.python.ops.bucketization_op.bucketize"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.key": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.length": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.name": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.to_sparse_tensor": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn.to_weighted_sum": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "_add_variable_collection",
    "_create_embedding_lookup",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.__new__": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "sorted",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn._checkpoint_path": {
  "data": {
   "lineno": 1712
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn._is_crossable": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod",
    "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn._to_embedding_lookup_arguments": {
  "data": {
   "lineno": 1717,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingLookupArguments",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.config": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "_get_feature_config",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.id_tensor": {
  "data": {
   "lineno": 1642
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.insert_transformed_feature": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "_collect_leaf_level_columns",
    "isinstance",
    "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn",
    "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.sparse_feature_cross"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.insert_transformed_feature._collect_leaf_level_columns": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "_collect_leaf_level_columns",
    "isinstance",
    "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.key": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.length": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.name": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "property",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.to_weighted_sum": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "_add_variable_collection",
    "_create_embedding_lookup",
    "len",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.init_from_checkpoint",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn.weight_tensor": {
  "data": {
   "lineno": 1647
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.__new__": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.math",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn._checkpoint_path": {
  "data": {
   "lineno": 897
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn._to_embedding_lookup_arguments": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.config": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "_get_feature_config",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.insert_transformed_feature": {
  "data": {
   "lineno": 866
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.key": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.length": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.name": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "_add_variable_collection",
    "_create_embedding_lookup",
    "len",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.init_from_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn.to_weighted_sum": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingLookupArguments": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.layers.python.layers.feature_column.abc"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn._checkpoint_path": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn._key_without_properties": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "enumerate",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn._to_dense_tensor": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn._to_embedding_lookup_arguments": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn.config": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.deprecation.deprecated",
    "tensorflow.contrib.layers.python.layers.feature_column.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn.insert_transformed_feature": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.framework.python.framework.deprecation.deprecated",
    "tensorflow.contrib.layers.python.layers.feature_column.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn.key": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.deprecation.deprecated",
    "tensorflow.contrib.layers.python.layers.feature_column.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn.name": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.framework.deprecation.deprecated",
    "tensorflow.contrib.layers.python.layers.feature_column.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.framework.deprecation.deprecated",
    "tensorflow.contrib.layers.python.layers.feature_column.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn.to_weighted_sum": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.framework.deprecation.deprecated",
    "tensorflow.contrib.layers.python.layers.feature_column.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn.__new__": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn.config": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn.insert_transformed_feature": {
  "data": {
   "lineno": 1097
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn.name": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "_add_variable_collection",
    "_create_embeddings",
    "tensorflow.contrib.layers.python.layers.embedding_ops.hashed_embedding_lookup_sparse",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn.config": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "_get_feature_config",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn.insert_transformed_feature": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn.key": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn.length": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn.name": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn.to_weighted_sum": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.__new__": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn._normalized_input_tensor": {
  "data": {
   "lineno": 1207
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn._to_dense_tensor": {
  "data": {
   "lineno": 1261
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.config": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "list",
    "property",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.insert_transformed_feature": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.key": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.name": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.normalizer_fn": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 1229
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.to_weighted_sum": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "_weight",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn.to_weighted_sum._weight": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "_add_variable_collection",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.__new__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn",
    "tensorflow.python.framework.dtypes.string",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn._to_embedding_lookup_arguments": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingLookupArguments",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.config": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.id_tensor": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.is_compatible": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.key": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.length": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.name": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.to_weighted_sum": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "_add_variable_collection",
    "_create_embedding_lookup",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn.weight_tensor": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnHashed": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnHashed.__new__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnHashed",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnHashed.insert_transformed_feature": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_to_hash_bucket_fast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnIntegerized": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnIntegerized.__new__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnIntegerized",
    "tensorflow.python.framework.dtypes.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnIntegerized.insert_transformed_feature": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.math_ops.mod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnKeys": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnKeys.__new__": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "_SparseIdLookupConfig",
    "len",
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnKeys",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnKeys.insert_transformed_feature": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.lookup.lookup_ops.string_to_index"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseIdLookupConfig": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._SparseIdLookupConfig.__new__": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseIdLookupConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.__new__": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn._to_embedding_lookup_arguments": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingLookupArguments",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.config": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "_get_feature_config",
    "property",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.id_tensor": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.insert_transformed_feature": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.key": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.length": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.name": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.to_dnn_input_layer": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.to_weighted_sum": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "_add_variable_collection",
    "_create_embedding_lookup",
    "tensorflow.python.ops.init_ops.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn.weight_tensor": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._add_variable_collection": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": [
    "list",
    "set",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._create_embedding_lookup": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.embedding_ops.safe_embedding_lookup_sparse",
    "tensorflow.contrib.layers.python.layers.feature_column._create_embeddings",
    "tensorflow.contrib.layers.python.layers.feature_column._create_shared_embeddings",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._create_embeddings": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._create_shared_embeddings": {
  "data": {
   "lineno": 2033,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "len",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column._get_feature_config": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._FeatureColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.bucketization_op": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.ops.bucketization_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.bucketized_column": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._BucketizedColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.checkpoint_utils": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.checkpoint_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.contrib_lookup_ops": {
  "data": {
   "shadows": "tensorflow.contrib.lookup.lookup_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.create_feature_spec_for_parsing": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._get_feature_config"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.crossed_column": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._CrossedColumn",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.deprecation": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.deprecation"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.embedding_column": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.embedding_ops": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.embedding_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.hashed_embedding_column": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.python.layers.feature_column._HashedEmbeddingColumn",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.make_place_holder_tensors_for_base_features": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.layers.python.layers.feature_column.create_feature_spec_for_parsing",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.array_ops.sparse_placeholder",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.one_hot_column": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._OneHotColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.real_valued_column": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "tensorflow.contrib.layers.python.layers.feature_column._RealValuedColumn",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.shared_embedding_columns": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "tensorflow.contrib.layers.python.layers.feature_column._EmbeddingColumn",
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumn",
    "tensorflow.python.platform.tf_logging.warn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.sparse_column_with_hash_bucket": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnHashed",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.sparse_column_with_integerized_feature": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnIntegerized",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.sparse_column_with_keys": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column._SparseColumnKeys",
    "tensorflow.python.platform.tf_logging.warn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.sparse_feature_cross_op": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.string_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.string_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column.weighted_sparse_column": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.python.layers.feature_column._WeightedSparseColumn",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer.__init__": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer.transform": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.python.layers.feature_column",
    "tensorflow.contrib.layers.python.layers.feature_column.insert_transformed_feature",
    "tensorflow.contrib.layers.python.layers.feature_column.name",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._create_embedding_lookup": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.embedding_ops.safe_embedding_lookup_sparse",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._create_joint_embedding_lookup": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.embedding_ops.safe_embedding_lookup_sparse",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.sparse_ops.sparse_concat",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._infer_real_valued_column_for_tensor": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "range",
    "tensorflow.contrib.layers.python.layers.feature_column.real_valued_column",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._log_variable": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops._maybe_restore_from_checkpoint": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.init_from_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.check_feature_columns": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.checkpoint_utils": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.checkpoint_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.embedding_ops": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.embedding_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.fc": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.feature_column"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.infer_real_valued_columns": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._infer_real_valued_column_for_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.input_from_feature_columns": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "_Transformer",
    "check_feature_columns",
    "list",
    "set",
    "sorted",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.joint_weighted_sum_from_feature_columns": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "NotImplementedError",
    "_Transformer",
    "_log_variable",
    "check_feature_columns",
    "set",
    "sorted",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.feature_column._add_variable_collection",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._create_joint_embedding_lookup",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn_ops.bias_add",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.parse_feature_columns_from_examples": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_Transformer",
    "check_feature_columns",
    "set",
    "sorted",
    "tensorflow.contrib.layers.python.layers.feature_column.create_feature_spec_for_parsing",
    "tensorflow.python.ops.parsing_ops.parse_example"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops.weighted_sum_from_feature_columns": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_Transformer",
    "_log_variable",
    "check_feature_columns",
    "dict",
    "set",
    "sorted",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.feature_column._add_variable_collection",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._create_embedding_lookup",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._maybe_restore_from_checkpoint",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.nn_ops.bias_add",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testAllDNNColumns": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.one_hot_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testBucketizedColumnSucceedsForDNN": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testBucketizedColumnWithMultiDimensionsSucceedsForDNN": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testBucketizedColumnWithNormalizerSucceedsForDNN": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testCrossedColumnFailsForDNN": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testDeepColumnsSucceedForDNN": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testEmbeddingColumnForDNN": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.ops.init_ops.ones_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testEmbeddingColumnSucceedsForDNN": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testEmbeddingColumnWithCrossedColumnSucceedsForDNN": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "set",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testEmbeddingColumnWithInitializerSucceedsForDNN": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.tile",
    "tensorflow.SparseTensor",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testEmbeddingColumnWithMultipleInitializersFails": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testEmbeddingColumnWithWeightedSparseColumnForDNN": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.ops.init_ops.ones_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testEmbeddingColumnWithWeightedSparseColumnSucceedsForDNN": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testHashedEmbeddingColumnSucceedsForDNN": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.hashed_embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.get_collection",
    "tensorflow.gradients",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testInputLayerWithCollectionsForDNN": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "len",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testInputLayerWithTrainableArgForDNN": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "len",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testOneHotColumnFromMultivalentSparseColumnWithKeysSucceedsForDNN": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.one_hot_column",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testOneHotColumnFromSparseColumnWithHashBucketSucceedsForDNN": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.one_hot_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testOneHotColumnFromSparseColumnWithIntegerizedFeaturePassesForDNN": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.one_hot_column",
    "tensorflow.contrib.layers.sparse_column_with_integerized_feature",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testOneHotColumnFromSparseColumnWithKeysSucceedsForDNN": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.one_hot_column",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testOneHotColumnFromWeightedSparseColumnFails": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.one_hot_column",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testRealValuedColumn": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testRealValuedColumnWithMultiDimensions": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testRealValuedColumnWithMultiDimensionsAndNormalizer": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testRealValuedColumnWithNormalizer": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testSparseColumnFailsForDNN": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.CreateInputLayersForDNNsTest.testWeightedSparseColumnFailsForDNN": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.initialize_all_tables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest.testDictionary": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.infer_real_valued_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest.testNotGoodDtype": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.constant",
    "tensorflow.contrib.layers.infer_real_valued_columns",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest.testSparseTensor": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.infer_real_valued_columns"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest.testTensorFloat32": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.infer_real_valued_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.float32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest.testTensorFloat64": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.infer_real_valued_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.float64",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest.testTensorInt32": {
  "data": {
   "lineno": 1570,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.infer_real_valued_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.int32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.InferRealValuedColumnTest.testTensorInt64": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.infer_real_valued_columns",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.int64",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.ParseExampleTest": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.ParseExampleTest.testParseExample": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.parse_feature_columns_from_examples",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.initialize_all_tables",
    "tensorflow.train.BytesList",
    "tensorflow.train.Example",
    "tensorflow.train.Feature",
    "tensorflow.train.Features",
    "tensorflow.train.FloatList"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testBucketizedColumn": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testBucketizedColumnWithMultiDimensions": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testCachedTransformation": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testCrossColumn": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "all",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testCrossWithBucketizedColumn": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "all",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testCrossWithCrossedColumn": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "all",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testCrossWithMultiDimensionBucketizedColumn": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.gradients",
    "tensorflow.initialize_all_variables",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testEmbeddingColumn": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testIfFeatureTableContainsTransformationReturnIt": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testRealValuedColumnIsIdentityTransformation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testSparseColumnWithHashBucket": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "all",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testSparseColumnWithHashBucket_IsIntegerized": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "all",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_integerized_feature",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testSparseColumnWithKeys": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.initialize_all_tables",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testSparseIntColumnWithHashBucket": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "all",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.TransformerTest.testWeightedSparseColumn": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.python.layers.feature_column_ops._Transformer",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.float32",
    "tensorflow.initialize_all_tables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testAllWideColumns": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testBucketizedColumn": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testBucketizedColumnHavingMultiDimensions": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testBucketizedColumnWithMultiDimensions": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testCrossColumnByItself": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testCrossUsageInPredictions": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testCrossWithBucketizedColumn": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testCrossWithCrossedColumn": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "set",
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testCrossedColumn": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "set",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testEmbeddingColumn": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testIntegerizedColumn": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_integerized_feature",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testIntegerizedColumnWithInvalidId": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_integerized_feature",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testJointPredictions": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.joint_weighted_sum_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testJointPredictionsRealFails": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.layers.joint_weighted_sum_from_feature_columns",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testJointPredictionsWeightedFails": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "AssertionError",
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.joint_weighted_sum_from_feature_columns",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithBucketizedColumn": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithBucketizedColumnHavingMultiDimensions": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithCrossedColumn": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithMultivalentColumn": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithOnlyBias": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithRealValuedColumn": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithRealValuedColumnHavingMultiDimensions": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMulticlassWithSparseColumn": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMultivalentCrossUsageInPredictions": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testMultivalentCrossUsageInPredictionsWithPartition": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables",
    "tensorflow.min_max_variable_partitioner",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testPredictions": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testPredictionsWithMultivalentColumnButNoCross": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testPredictionsWithWeightedSparseColumn": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testRealValuedColumnHavingMultiDimensions": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testRealValuedColumnWithMultiDimensions": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testSparseColumn": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testSparseFeatureColumnWithHashedBucketSize": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testSparseIntColumn": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testVariablesAddedToCollection": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.WeightedSumTest.testWeightedSparseColumn": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_tables",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.feature_column_ops": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.feature_column_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_ops_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testBucketizedColumnNameEndsWithUnderscoreBucketized": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testBucketizedColumnRequiresRealValuedColumn": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.sparse_column_with_integerized_feature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testBucketizedColumnRequiresSortedBuckets": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testBucketizedColumnWithSameBucketBoundaries": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testCreateFeatureSpec": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "set",
    "tensorflow.FixedLenFeature",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.create_feature_spec_for_parsing",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.float32",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testCreateFeatureSpec_RealValuedColumnWithDefaultValue": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "len",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.layers.create_feature_spec_for_parsing",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testCrossedColumnNameCreatesSortedNames": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testCrossedColumnNotSupportRealValuedColumn": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "TypeError",
    "set",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testEmbeddingColumn": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testImmutability": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AttributeError",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testInitCrossedColumnWeightsFromCkpt": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.assign",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.python.layers.feature_column_test.os",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.initialize_all_variables",
    "tensorflow.train.Saver",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testInitEmbeddingColumnWeightsFromCkpt": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.python.layers.feature_column_test.os",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.initialize_all_variables",
    "tensorflow.train.Saver",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testMakePlaceHolderTensorsForBaseFeatures": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "set",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.make_place_holder_tensors_for_base_features",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testOneHotColumn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.one_hot_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.sparse_column_with_keys"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testRealValuedColumn": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "normalizer",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.int32",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testRealValuedColumnDtypes": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testSharedEmbeddingColumn": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.layers.shared_embedding_columns",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.initialize_all_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testSparseColumnDtypes": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.layers.sparse_column_with_integerized_feature",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testSparseColumnWithHashBucket": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testWeightedSparseColumn": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.FeatureColumnTest.testWeightedSparseColumnDtypes": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.layers.sparse_column_with_keys",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.feature_column_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.initializers.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.initializers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers.variance_scaling_initializer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers.variance_scaling_initializer._initializer": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "len",
    "tensorflow.contrib.layers.python.layers.initializers.math",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.random_ops.truncated_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer_conv2d": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.InitializerTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.InitializerTest._test_xavier": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "initializer",
    "numpy.var",
    "tensorflow.Session",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.InitializerTest.test_xavier_conv2d_normal": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.xavier_initializer_conv2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.InitializerTest.test_xavier_conv2d_uniform": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.xavier_initializer_conv2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.InitializerTest.test_xavier_normal": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.xavier_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.InitializerTest.test_xavier_uniform": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.xavier_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.InitializerTest.test_xavier_wrong_dtype": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.xavier_initializer",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest._test_variance": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "initializer",
    "numpy.var",
    "tensorflow.Graph",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_1d_shape_fan_avg": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_1d_shape_fan_in": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_1d_shape_fan_out": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_conv2d_fan_avg": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_conv2d_fan_in": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_conv2d_fan_out": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_fan_avg": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_fan_in": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_fan_out": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_wrong_dtype": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TypeError",
    "initializer",
    "tensorflow.contrib.layers.variance_scaling_initializer",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_conv2d_normal": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_conv2d_uniform": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_normal": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_uniform": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.initializers_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.layers.convolution2d",
    "tensorflow.contrib.layers.python.layers.layers.convolution2d_in_plane",
    "tensorflow.contrib.layers.python.layers.layers.convolution2d_transpose",
    "tensorflow.contrib.layers.python.layers.layers.fully_connected",
    "tensorflow.contrib.layers.python.layers.layers.functools",
    "tensorflow.contrib.layers.python.layers.layers.legacy_fully_connected",
    "tensorflow.contrib.layers.python.layers.layers.separable_convolution2d",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.nn.relu6"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.layers.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers._apply_activation": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "activation_fn",
    "list",
    "tensorflow.python.framework.ops.GraphKeys.ACTIVATIONS",
    "tensorflow.python.framework.ops.add_to_collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.add_arg_scope": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.add_arg_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.avg_pool2d": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.two_element_tuple",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.avg_pool"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.batch_norm": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "activation_fn",
    "list",
    "range",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.initializers.get",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.constant_value",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.init_ops.ones_initializer",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.nn.batch_normalization",
    "tensorflow.python.ops.nn.moments",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.batch_norm._delay_updates": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "tensorflow.python.training.moving_averages.assign_moving_average"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.batch_norm._force_updates": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.training.moving_averages.assign_moving_average"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.bias_add": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "activation_fn",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.contrib.layers.python.layers.utils.last_dimension",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.conv2d": {
  "data": {
   "lineno": 1469
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.conv2d_in_plane": {
  "data": {
   "lineno": 1471
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.conv2d_transpose": {
  "data": {
   "lineno": 1470
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.convolution2d": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "activation_fn",
    "normalizer_fn",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.contrib.layers.python.layers.utils.last_dimension",
    "tensorflow.contrib.layers.python.layers.utils.two_element_tuple",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.atrous_conv2d",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.nn.conv2d",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.convolution2d_in_plane": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "activation_fn",
    "normalizer_fn",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.contrib.layers.python.layers.utils.last_dimension",
    "tensorflow.contrib.layers.python.layers.utils.two_element_tuple",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.nn.depthwise_conv2d",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.convolution2d_transpose": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "activation_fn",
    "get_deconv_dim",
    "normalizer_fn",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.contrib.layers.python.layers.utils.last_dimension",
    "tensorflow.contrib.layers.python.layers.utils.two_element_tuple",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.nn.conv2d_transpose",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.convolution2d_transpose.get_deconv_dim": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.math_ops.mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.dropout": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.dropout"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.flatten": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.fully_connected": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "ValueError",
    "activation_fn",
    "int",
    "isinstance",
    "len",
    "normalizer_fn",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.contrib.layers.python.layers.utils.last_dimension",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.unpack",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.standard_ops.matmul",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.initializers": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.initializers"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.layer_norm": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "ValueError",
    "activation_fn",
    "list",
    "range",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.init_ops.ones_initializer",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.batch_normalization",
    "tensorflow.python.ops.nn.moments",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.legacy_fully_connected": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "ValueError",
    "activation_fn",
    "len",
    "list",
    "set",
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.python.layers.layers._apply_activation",
    "tensorflow.python.framework.ops.GraphKeys.ACTIVATIONS",
    "tensorflow.python.framework.ops.GraphKeys.BIASES",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.WEIGHTS",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.unpack",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.standard_ops.matmul",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.legacy_linear": {
  "data": {
   "lineno": 1463
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.legacy_relu": {
  "data": {
   "lineno": 1462
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.linear": {
  "data": {
   "lineno": 1466
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.max_pool2d": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.two_element_tuple",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.max_pool"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.moving_averages": {
  "data": {
   "shadows": "tensorflow.python.training.moving_averages"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.one_hot_encoding": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.standard_ops.one_hot",
    "tensorflow.python.ops.standard_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.relu": {
  "data": {
   "lineno": 1464
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.relu6": {
  "data": {
   "lineno": 1465
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.repeat": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "hasattr",
    "layer",
    "range",
    "str",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.separable_conv2d": {
  "data": {
   "lineno": 1472
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.layers.separable_convolution2d": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "activation_fn",
    "normalizer_fn",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.get_variable_collections",
    "tensorflow.contrib.layers.python.layers.utils.last_dimension",
    "tensorflow.contrib.layers.python.layers.utils.two_element_tuple",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.nn.depthwise_conv2d",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.nn.separable_conv2d",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.softmax": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.contrib.layers.python.layers.utils.last_dimension",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn.softmax",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.stack": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "layer",
    "layer.__name__",
    "layer.func",
    "layer.func.__name__",
    "len",
    "list",
    "range",
    "str",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.standard_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.standard_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.unit_norm": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers.utils": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers.variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest.testCollectOutputs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.avg_pool2d",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest.testCreateAvgPool": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest.testCreateAvgPoolStrideWithSamePadding": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.avg_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest.testCreateAvgPoolWithSamePadding": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.avg_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest.testCreateAvgPoolWithScope": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.avg_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest.testCreateSquareAvgPool": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.avg_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.AvgPool2DTest.testGlobalAvgPool": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.avg_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testCreateMovingVars": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testCreateOp": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testCreateVariables": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testCustomInitializer": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testDelayedUpdateMovingVars": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.control_dependencies",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testEvalMovingVars": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.assign",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testIsTrainingVariable": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.control_dependencies",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testMovingAverageVariables": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testNoUpdatesWhenIsTrainingFalse": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionIsTrainingVariable": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionNoTraining": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "numpy.random.rand",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testNoneUpdatesCollections": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testReuseUpdateOps": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.arg_scope",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testReuseVariables": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testReuseVars": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.control_dependencies",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testTrainMovingVars": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.get_collection",
    "tensorflow.gradients",
    "tensorflow.initialize_all_variables",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testUnknownLastDim": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.TensorShape",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testUnknownShape": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BatchNormTest.testUpdatesCollection": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BiasAddTest": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BiasAddTest.testCreate": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.bias_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BiasAddTest.testCreateDimensions": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.bias_add",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.BiasAddTest.testCreateWithActivation": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bias_add",
    "tensorflow.nn.relu",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testConvWithBatchNorm": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.arg_scope",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConv": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvCreatesWeightsAndBiasesVarsWithRateTwo": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvNoRegularizers": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvValid": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvWithCollection": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.get_collection",
    "tensorflow.name_scope",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvWithScope": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvWithStride": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvWithTensorShape": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvWithWD": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.nn.l2_loss",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateConvWithoutActivation": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateFullyConv": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateHorizontalConv": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateSquareConv": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testCreateVerticalConv": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testDynamicOutputSizeWithRateOneValidPadding": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testDynamicOutputSizeWithRateTwoValidPadding": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testNonReuseVars": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testOutputSizeWithRateTwoSamePadding": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testOutputSizeWithRateTwoValidPadding": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testReuseConvWithBatchNorm": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.arg_scope",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testReuseConvWithWD": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.framework.arg_scope",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testReuseVars": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testWithScope": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTest.testWithScopeWithoutActivation": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testDeconvWithoutBiasesProducesConv2dTranspose": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.isclose",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.nn.conv2d_transpose",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testDynamicOutputSizeWithStrideTwoSamePadding": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testDynamicOutputSizeWithStrideTwoValidPadding": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeRandomSizesAndStridesValidPadding": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "numpy.random.seed",
    "range",
    "tensorflow.Graph",
    "tensorflow.contrib.layers.conv2d",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith1x1StrideTwoSamePadding": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith1x1StrideTwoValidPadding": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith2x2StrideTwoSamePadding": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith2x2StrideTwoValidPadding": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x1": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x4": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x5": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideOneSamePadding": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideOneValidPadding": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideTwoValidPadding": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testWithScope": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.Convolution2dTransposeTests.testWithScopeWithoutActivation": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.conv2d_transpose",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithBlankImage": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "numpy.zeros",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.conv2d_in_plane",
    "tensorflow.initialize_all_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithBlankImageAndPlaceholder": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.conv2d_in_plane",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithRandomImageMultiBatch": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.conv2d_in_plane",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithRandomImageMultiBatchMultiChannel": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.conv2d_in_plane",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithVaryingImage": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.asmatrix",
    "numpy.reshape",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.conv2d_in_plane",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest.testVertConvWithBlankImage": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.zeros",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.conv2d_in_plane",
    "tensorflow.initialize_all_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.ConvolutionInPlaneTest.testVertConvWithVaryingImage": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.asmatrix",
    "numpy.reshape",
    "tensorflow.constant",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.conv2d_in_plane",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCollectOutputs": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.dropout",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCreateDropout": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.dropout",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCreateDropoutNoTraining": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.dropout",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCreateDropoutWithConstantFalse": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.dropout",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCreateDropoutWithConstantTrue": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.dropout",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCreateDropoutWithPlaceholder": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "tensorflow.bool",
    "tensorflow.contrib.layers.dropout",
    "tensorflow.placeholder",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCreateFCFollowByDropout": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.dropout",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testCreateFCWithDropout": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.dropout",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.DropoutTest.testDropout": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.dropout",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testCreateFC": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "layer_fn",
    "numpy.random.uniform",
    "tensorflow.Graph",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.contrib.layers.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testCreateFCWithCollection": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.get_collection",
    "tensorflow.name_scope",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testCreateFCWithScope": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testCreateFCWithWD": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testCreateFCWithoutActivation": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testCreateFcCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testCreateNoRegularizers": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testFCWithBatchNorm": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.arg_scope",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testNonReuseVars": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testReuseFCWithBatchNorm": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.arg_scope",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testReuseFCWithWD": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FCTest.testReuseVars": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FlattenTest": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FlattenTest.testCollectOutputs": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.flatten",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FlattenTest.testFlatten3D": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.flatten",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FlattenTest.testFlatten4D": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.flatten",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FlattenTest.testFlattenBatchSize": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.flatten",
    "tensorflow.int32",
    "tensorflow.placeholder",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FlattenTest.testInvalidRank": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.TensorShape",
    "tensorflow.contrib.layers.flatten",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.FlattenTest.testUnknownLastDim": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.TensorShape",
    "tensorflow.contrib.layers.flatten",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.doOutputTest": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.var",
    "numpy.zeros",
    "range",
    "tensorflow.constant",
    "tensorflow.contrib.layers.layer_norm",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testCreateOp": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testCreateVariables": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.layer_norm",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testOutput2DInput": {
  "data": {
   "lineno": 1668
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testOutput4DInput": {
  "data": {
   "lineno": 1671
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testReuseVariables": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.layers.layer_norm",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testReuseVars": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.constant",
    "tensorflow.contrib.layers.layer_norm",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testUnknownLastDim": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.TensorShape",
    "tensorflow.contrib.layers.layer_norm",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LayerNormTest.testUnknownShape": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.contrib.layers.layer_norm",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest._custom_initializers": {
  "data": {
   "lineno": 2219,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.Session",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.legacy_relu",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest._fully_connected_basic_use": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.Session",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.errors.FailedPreconditionError",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.nn.relu",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest._unknown_dim_invalid_input": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.setUp": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.SUMMARIES",
    "tensorflow.constant",
    "tensorflow.get_collection",
    "tensorflow.set_random_seed",
    "tensorflow.test.TestCase.setUp"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_1d_invalid_input": {
  "data": {
   "lineno": 2384,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.constant",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.nn.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_all_custom_collections": {
  "data": {
   "lineno": 2260,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.contrib.layers.legacy_relu",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_custom_collections": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.contrib.layers.legacy_relu",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_custom_initializers": {
  "data": {
   "lineno": 2232
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_custom_initializers_multi_dim": {
  "data": {
   "lineno": 2236
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_empty_x_results_in_empty_output": {
  "data": {
   "lineno": 2339,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.initialize_all_variables",
    "tensorflow.nn.softmax",
    "tensorflow.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_fully_connected_basic_use": {
  "data": {
   "lineno": 2164
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_fully_connected_basic_use_multi_dim": {
  "data": {
   "lineno": 2167
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_known_dim_valid_input": {
  "data": {
   "lineno": 2376
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_no_activation": {
  "data": {
   "lineno": 2275,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_no_activation_no_bias": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_no_bias": {
  "data": {
   "lineno": 2271,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.contrib.layers.legacy_relu",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_regularizer": {
  "data": {
   "lineno": 2285,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.constant",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_regularizer.test_fn": {
  "data": {
   "lineno": 2288
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_multiple_variables": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.constant",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_multiple_variables.test_fn": {
  "data": {
   "lineno": 2303
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_variable_reuse": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.constant",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.get_collection",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_variable_reuse.test_fn": {
  "data": {
   "lineno": 2321
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_relu_layer_basic_use": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.Session",
    "tensorflow.contrib.layers.legacy_relu",
    "tensorflow.errors.FailedPreconditionError",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_shapes_variable_first_dim": {
  "data": {
   "lineno": 2353,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_unknown_dim_invalid_input": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_variable_reuse_with_scope": {
  "data": {
   "lineno": 2192,
   "symbols_in_volume": [
    "numpy.allclose",
    "tensorflow.Session",
    "tensorflow.contrib.layers.legacy_relu",
    "tensorflow.initialize_all_variables",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.LegacyFullyConnectedTest.test_variable_reuse_with_template": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.initialize_all_variables",
    "tensorflow.make_template",
    "tmpl1"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest.testCollectOutputs": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.max_pool2d",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest.testCreateMaxPool": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tensorflow.contrib.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest.testCreateMaxPoolStrideWithSamePadding": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.max_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest.testCreateMaxPoolWithSamePadding": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.max_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest.testCreateMaxPoolWithScope": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.max_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest.testCreateSquareMaxPool": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.max_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.MaxPool2DTest.testGlobalMaxPool": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.max_pool2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.OneHotEncodingTest": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.OneHotEncodingTest.testCollectOutputs": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.one_hot_encoding",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.OneHotEncodingTest.testOneHotEncoding": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.one_hot_encoding"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.OneHotEncodingTest.testOneHotEncodingCreate": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.contrib.layers.one_hot_encoding"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.OneHotEncodingTest.testOneHotEncodingInt32": {
  "data": {
   "lineno": 1753,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.one_hot_encoding",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.RepeatTests": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.RepeatTests.testRepeat": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.conv2d",
    "tensorflow.contrib.layers.repeat"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.RepeatTests.testRepeatWithScope": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.conv2d",
    "tensorflow.contrib.layers.repeat",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testConvWithBatchNorm": {
  "data": {
   "lineno": 1925,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testConvWithInputsViaPlaceHolder": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.contrib.layers.batch_norm",
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvFloat32": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.float32",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvFloat64": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.float64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvInt32": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.int32",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvValid": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvWithScope": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvWithWeightDecay": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateConvWithoutActivation": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateDepthwiseConv": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateDepthwiseConvCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_variables",
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testCreateDepthwiseConvValid": {
  "data": {
   "lineno": 1877,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SeparableConv2dTest.testReuseConvWithWeightDecay": {
  "data": {
   "lineno": 1907,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.contrib.layers.separable_conv2d",
    "tensorflow.get_collection",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SoftmaxTests": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SoftmaxTests.setUp": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.layers_test.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SoftmaxTests.testSoftmax2D": {
  "data": {
   "lineno": 1974,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.constant",
    "tensorflow.contrib.layers.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SoftmaxTests.testSoftmax3D": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.constant",
    "tensorflow.contrib.layers.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SoftmaxTests.testSoftmax3DUnknownSize": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.contrib.layers.softmax",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.SoftmaxTests.testSoftmaxUndefinedNthDimension": {
  "data": {
   "lineno": 2018,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.softmax",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.StackTests": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.StackTests.testStackConvolution2d": {
  "data": {
   "lineno": 2046,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.contrib.layers.stack",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.StackTests.testStackFullyConnected": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.contrib.layers.stack"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.StackTests.testStackRelu": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.relu",
    "tensorflow.contrib.layers.stack",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.StackTests.testStackWithScope": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.convolution2d",
    "tensorflow.contrib.layers.stack",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.UnitNormTests": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.UnitNormTests.testDimEqualToRankRaisesError": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.unit_norm",
    "tensorflow.random_uniform",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.UnitNormTests.testKnownRankUnknownDimsSucceeds": {
  "data": {
   "lineno": 2105,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "tensorflow.contrib.layers.unit_norm",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.reduce_sum",
    "tensorflow.sqrt",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.UnitNormTests.testUnitNormWithRandomMatrix": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "tensorflow.contrib.layers.unit_norm",
    "tensorflow.random_uniform",
    "tensorflow.reduce_sum",
    "tensorflow.set_random_seed",
    "tensorflow.sqrt",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.UnitNormTests.testUnknownRankRaisesError": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.unit_norm",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.layers_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.training.training.AdagradOptimizer",
    "tensorflow.python.training.training.AdamOptimizer",
    "tensorflow.python.training.training.FtrlOptimizer",
    "tensorflow.python.training.training.GradientDescentOptimizer",
    "tensorflow.python.training.training.MomentumOptimizer",
    "tensorflow.python.training.training.RMSPropOptimizer"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.OPTIMIZER_CLS_NAMES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.OPTIMIZER_SUMMARIES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.optimizers._add_scaled_noise_to_gradients": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.random_ops.truncated_normal",
    "tensorflow.python.ops.variables",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers._clip_gradients_by_norm": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.clip_ops.clip_by_global_norm",
    "tensorflow.python.ops.variables",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers._multiply_gradients": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.IndexedSlices"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.optimize_loss": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "_add_scaled_noise_to_gradients",
    "_clip_gradients_by_norm",
    "_multiply_gradients",
    "callable",
    "float",
    "isinstance",
    "issubclass",
    "learning_rate_decay_fn",
    "list",
    "set",
    "str",
    "tensorflow.contrib.layers.python.layers.optimizers.OPTIMIZER_CLS_NAMES",
    "tensorflow.contrib.layers.python.layers.optimizers.six",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.clip_ops.global_norm",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.logging_ops.histogram_summary",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables",
    "tensorflow.python.ops.variables.trainable_variables",
    "tensorflow.python.training.optimizer",
    "tensorflow.python.training.optimizer.Optimizer",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.optimizer_": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.train": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.vars_": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testGradientClip": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testGradientMultiply": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testGradientNoise": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testGradientNoiseWithClipping": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testIgnoreVariablesWithNoGradients": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testNoLrCallable": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testNoLrCallable.optimizer_fn": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testSGDOptimizer": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.initialize_all_variables",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testUpdateOp": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.get_variable",
    "tensorflow.initialize_all_variables",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testUpdateOpFromCollection": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.add_to_collection",
    "tensorflow.assign",
    "tensorflow.constant_initializer",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model",
    "tensorflow.get_variable",
    "tensorflow.initialize_all_variables",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.OptimizersTest.testWrongOptimizer": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test._setup_model": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.abs",
    "tensorflow.constant_initializer",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.optimizers_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.apply_regularization": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "regularizer",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.GraphKeys.WEIGHTS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.l1_l2_regularizer": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sum_regularizer",
    "tensorflow.contrib.layers.python.layers.regularizers.l1_regularizer",
    "tensorflow.contrib.layers.python.layers.regularizers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.l1_regularizer": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.contrib.layers.python.layers.regularizers.numbers",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.l1_regularizer.l1": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.standard_ops.abs",
    "tensorflow.python.ops.standard_ops.mul",
    "tensorflow.python.ops.standard_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.l2_regularizer": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.contrib.layers.python.layers.regularizers.numbers",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.l2_regularizer.l2": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.l2_loss",
    "tensorflow.python.ops.standard_ops.mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.standard_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.standard_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.sum_regularizer": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers.sum_regularizer.sum_reg": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "reg",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest.testL1L2RegularizerWithScope": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.l1_l2_regularizer",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest.test_apply_regularization": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sum",
    "tensorflow.constant",
    "tensorflow.contrib.layers.apply_regularization",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest.test_apply_regularization_invalid_regularizer": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.constant",
    "tensorflow.contrib.layers.apply_regularization",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest.test_l1": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.l1_regularizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest.test_l1_l2": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.constant",
    "tensorflow.contrib.layers.l1_l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest.test_l2": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.power",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.RegularizerTest.test_sum_regularizer": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "l1_l2_reg",
    "l1_reg1",
    "l1_reg2",
    "numpy.abs",
    "numpy.array",
    "numpy.power",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.contrib.layers.sum_regularizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.regularizers_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.summaries.functools",
    "tensorflow.contrib.layers.python.layers.summaries.summarize_collection",
    "tensorflow.python.framework.ops.GraphKeys.BIASES",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.WEIGHTS"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.summaries.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.summaries._add_histogram_summary": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.summaries.assert_summary_tag_unique",
    "tensorflow.python.ops.standard_ops.histogram_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries._add_scalar_summary": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.summaries.assert_summary_tag_unique",
    "tensorflow.python.ops.standard_ops.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.assert_summary_tag_unique": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "is_summary_tag_unique"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.is_summary_tag_unique": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.tensor_util.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.standard_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.standard_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_activation": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.summaries._add_histogram_summary",
    "tensorflow.contrib.layers.python.layers.summaries._add_scalar_summary",
    "tensorflow.python.ops.standard_ops.cast",
    "tensorflow.python.ops.standard_ops.greater",
    "tensorflow.python.ops.standard_ops.less",
    "tensorflow.python.ops.standard_ops.reduce_mean",
    "tensorflow.python.ops.standard_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_activations": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "summarizer",
    "tensorflow.contrib.layers.python.layers.summaries.summarize_activation",
    "tensorflow.contrib.layers.python.layers.summaries.summarize_collection",
    "tensorflow.python.framework.ops.GraphKeys.ACTIVATIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_biases": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_collection": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "summarizer",
    "tensorflow.contrib.layers.python.layers.summaries.re",
    "tensorflow.contrib.layers.python.layers.summaries.summarize_tensor",
    "tensorflow.contrib.layers.python.layers.summaries.summarize_tensors",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_tensor": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.summaries._add_histogram_summary",
    "tensorflow.contrib.layers.python.layers.summaries._add_scalar_summary",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_tensors": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "summarizer",
    "tensorflow.contrib.layers.python.layers.summaries.summarize_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_variables": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.summaries.summarize_weights": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.summaries.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest.test_duplicate_tag": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Variable",
    "tensorflow.contrib.layers.summarize_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest.test_summarize_activation": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.SUMMARIES",
    "tensorflow.Variable",
    "tensorflow.contrib.layers.summarize_activation",
    "tensorflow.get_collection",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest.test_summarize_activation_relu": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.SUMMARIES",
    "tensorflow.Variable",
    "tensorflow.contrib.layers.summarize_activation",
    "tensorflow.get_collection",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest.test_summarize_activation_relu6": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "tensorflow.GraphKeys.SUMMARIES",
    "tensorflow.Variable",
    "tensorflow.contrib.layers.summarize_activation",
    "tensorflow.get_collection",
    "tensorflow.nn.relu6"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest.test_summarize_collection_regex": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "tensorflow.Variable",
    "tensorflow.add_to_collection",
    "tensorflow.contrib.layers.summarize_collection",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest.test_summarize_multidim_tensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.layers.summarize_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.SummariesTest.test_summarize_scalar_tensor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.layers.summarize_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.summaries_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.target_column.ProblemType": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column._BinarySvmTargetColumn": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.target_column._MultiClassTargetColumn"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column._BinarySvmTargetColumn.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.layers.python.layers.target_column._BinarySvmTargetColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._BinarySvmTargetColumn.__init__.loss_fn": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.hinge_loss",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.less_equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._BinarySvmTargetColumn.logits_to_predictions": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.argmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._MetricKeys": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column._MultiClassTargetColumn": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.target_column._TargetColumn"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column._MultiClassTargetColumn.__init__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.layers.python.layers.target_column.ProblemType",
    "tensorflow.contrib.layers.python.layers.target_column._MultiClassTargetColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._MultiClassTargetColumn._default_eval_metrics": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "get_default_binary_metrics_for_eval"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._MultiClassTargetColumn.get_eval_ops": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "_run_metrics",
    "isinstance",
    "len",
    "metric_op",
    "str",
    "tensorflow.contrib.layers.python.layers.target_column.six",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.streaming_mean",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.math_ops.to_float",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._MultiClassTargetColumn.logits_to_predictions": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.nn.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._RegressionTargetColumn": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.target_column._TargetColumn"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column._RegressionTargetColumn.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.layers.python.layers.target_column.ProblemType",
    "tensorflow.contrib.layers.python.layers.target_column._RegressionTargetColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._RegressionTargetColumn.get_eval_ops": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "_run_metrics",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._RegressionTargetColumn.logits_to_predictions": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn._weighted_loss": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.get_eval_ops": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.get_weight_tensor": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.label_name": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.logits_to_predictions": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.loss": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.num_label_columns": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.problem_type": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.training_loss": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._TargetColumn.weight_column_name": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._accuracy_at_threshold": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._accuracy_at_threshold._accuracy_metric": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._float_weights_or_none": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._log_loss_with_two_classes": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._mean_squared_loss": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._predictions_streaming_mean": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._run_metrics": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "metric",
    "tensorflow.contrib.layers.python.layers.target_column.six",
    "tensorflow.contrib.metrics",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._softmax_cross_entropy_loss": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.nn.sparse_softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._streaming_at_threshold": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._streaming_at_threshold._streaming_metrics": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "streaming_metrics_fn",
    "tensorflow.contrib.layers.python.layers.target_column._float_weights_or_none",
    "tensorflow.python.ops.array_ops.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._streaming_auc": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.target_column._float_weights_or_none",
    "tensorflow.contrib.metrics.streaming_auc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column._targets_streaming_mean": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.binary_svm_target": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_BinarySvmTargetColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.get_default_binary_metrics_for_eval": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "_accuracy_at_threshold",
    "_streaming_at_threshold",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.streaming_precision_at_thresholds",
    "tensorflow.contrib.metrics.streaming_recall_at_thresholds"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column.losses": {
  "data": {
   "shadows": "tensorflow.contrib.losses"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.multi_class_target": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "_MultiClassTargetColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column.regression_target": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_RegressionTargetColumn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testBinaryClassification": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.multi_class_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testBinaryClassificationWithWeights": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.multi_class_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testBinaryEvalMetrics": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testBinarySVMDefaultWeights": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.binary_svm_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testBinarySVMWithWeights": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.binary_svm_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testMultiClass": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.multi_class_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testMultiClassEvalMetrics": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testMultiClassWithInvalidNClass": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.layers.multi_class_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.MultiClassTargetColumnTest.testMultiClassWithWeight": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.multi_class_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.RegressionTargetColumnTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.RegressionTargetColumnTest.testRegression": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.regression_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.RegressionTargetColumnTest.testRegressionWithWeights": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.layers.regression_target"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.target_column_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.utils.NamedOutputs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.utils.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.layers.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.add_to_collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.constant_value": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.convert_collection_to_dict": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.utils.get_tensor_alias",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.first_dimension": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.gather_tensors_alias": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "get_tensor_alias"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.get_tensor_alias": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.get_variable_collections": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.last_dimension": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.smart_cond": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "fn1",
    "fn2",
    "tensorflow.contrib.layers.python.layers.utils.constant_value",
    "tensorflow.contrib.layers.python.layers.utils.static_cond",
    "tensorflow.python.ops.control_flow_ops.cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.static_cond": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "fn1",
    "fn2"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils.two_element_tuple": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.CollectNamedOutputsTest": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.CollectNamedOutputsTest.test_aliases": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.CollectNamedOutputsTest.test_collect": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.CollectNamedOutputsTest.test_gather_aliases": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "aliases",
    "tensorflow.add_to_collection",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.collect_named_outputs",
    "tensorflow.contrib.layers.python.layers.utils.gather_tensors_alias",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.ConstantValueTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.ConstantValueTest.test_constant": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.ConstantValueTest.test_placeholder": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.dtype",
    "tensorflow.contrib.layers.python.layers.utils.constant_value",
    "tensorflow.identity",
    "tensorflow.placeholder",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.ConstantValueTest.test_value": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.utils.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.ConstantValueTest.test_variable": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.contrib.layers.python.layers.utils.constant_value",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondDynamicTest": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondDynamicTest.test_constant": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "expected",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondDynamicTest.test_tensors": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "expected",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondDynamicTest.test_value": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "expected",
    "tensorflow.bool",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond",
    "tensorflow.convert_to_tensor",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondDynamicTest.test_variable": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "expected",
    "tensorflow.Variable",
    "tensorflow.bool",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondStaticTest": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondStaticTest.test_constant": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "expected",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondStaticTest.test_tensors": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "expected",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondStaticTest.test_value": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "expected",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.SmartCondStaticTest.test_variable": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "expected",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.smart_cond",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.StaticCondTest": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.StaticCondTest.test_constant": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "expected",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.StaticCondTest.test_tensors": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "expected",
    "tensorflow.constant",
    "tensorflow.contrib.layers.python.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.StaticCondTest.test_value": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "expected",
    "tensorflow.contrib.layers.python.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.StaticCondTest.test_variable": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "expected",
    "tensorflow.Variable",
    "tensorflow.contrib.layers.python.layers.utils.static_cond",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.layers.utils_test.utils": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.ops.bucketization_op._bucketization_op",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op._bucketization_op": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op.bucketize": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "tensorflow.contrib.layers.python.ops.bucketization_op._bucketization_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.bucketization_op.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op._sparse_feature_cross_op",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op._sparse_feature_cross_op": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op.sparse_feature_cross": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "len",
    "list",
    "range",
    "tensorflow.contrib.layers.python.ops.sparse_feature_cross_op._sparse_feature_cross_op",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.layers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.learn.__all__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.__all__": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.Evaluable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.evaluable.Evaluable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.Experiment": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.experiment.Experiment"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.NanLossDuringTrainingError": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors.NanLossDuringTrainingError"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.Trainable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.trainable.Trainable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.os",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook._save": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.time",
    "tensorflow.core.util.event_pb2.SessionLog",
    "tensorflow.core.util.event_pb2.SessionLog.CHECKPOINT",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook.after_run": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook.before_run": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.training.training_util.write_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook.begin": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook.end": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook.after_run": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook.before_run": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook.begin": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "_as_graph_element"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanLossDuringTrainingError": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanLossDuringTrainingError.__str__": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanTensorHook": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanTensorHook.__init__": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanTensorHook.after_run": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.isnan",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanLossDuringTrainingError",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanTensorHook.before_run": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SessionLog": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2.SessionLog"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SessionRunArgs": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook.after_run": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.time",
    "tensorflow.core.framework.summary_pb2.Summary",
    "tensorflow.core.framework.summary_pb2.Summary.Value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook.before_run": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook.begin": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook.after_run": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook.before_run": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook.begin": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.Summary": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2.Summary"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook.after_run": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.SessionLog",
    "tensorflow.core.util.event_pb2.SessionLog.START"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook.before_run": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook.begin": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook.end": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummaryWriterCache": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks._as_graph_element": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "hasattr",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.six",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.session_run_hook": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.BINARY_TRANSFORMS",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.register_binary_op",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.UNARY_TRANSFORMS",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.register_unary_op"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.BooleanMask": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.BooleanMask"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.DataFrame": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.Difference": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.HashFast": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.NumpySource": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.PandasSource": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.PredefinedSeries": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.ReaderSource": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.Series": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series.Series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.Sum": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.TensorFlowDataFrame": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.TensorFlowTransform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.Transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.TransformedSeries": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.__all__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.dataframe._bt": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe._ut": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.__delitem__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.__getitem__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "str",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.collections",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.__len__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.__setitem__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.assign": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "str",
    "type",
    "v"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.build": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.columns": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.exclude_columns": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame.select_columns": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.dataframe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils._build_alternate_universe": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_in_alternate_universe",
    "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils._infer_feature_specs",
    "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils._build_alternate_universe._in_alternate_universe": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "KeyError",
    "_in_alternate_universe",
    "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils._infer_feature_specs": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils._to_feature_spec",
    "tensorflow.python.framework.ops.Graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils._to_feature_spec": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.feature_column": {
  "data": {
   "shadows": "tensorflow.contrib.layers.feature_column"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.ss": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.to_feature_columns_and_input_fn": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "set",
    "tensorflow.contrib.layers.feature_column.DataFrameColumn",
    "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils._build_alternate_universe",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.to_feature_columns_and_input_fn.input_fn": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.parameter": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.HAS_PANDAS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._ArrayFeedFn": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._ArrayFeedFn.__call__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.errors.OutOfRangeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._ArrayFeedFn.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._OrderedDictNumpyFeedFn": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._OrderedDictNumpyFeedFn.__call__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "range",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._OrderedDictNumpyFeedFn.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._PandasFeedFn": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._PandasFeedFn.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dict",
    "range",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._PandasFeedFn.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.enqueue_data": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "get_feed_fn",
    "int",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._ArrayFeedFn",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._OrderedDictNumpyFeedFn",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._PandasFeedFn",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.collections",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.queue_runner.add_queue_runner",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.fqr": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.python.training.queue_runner.QueueRunner"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner",
    "tensorflow.python.framework.errors.CancelledError",
    "tensorflow.python.framework.errors.OutOfRangeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner._init_from_proto": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "NotImplementedError",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner._run": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "feed_fn",
    "str",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.threading",
    "tensorflow.python.framework.errors.CancelledError",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner.create_threads": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "feed_fn",
    "len",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.threading",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.FeedingQueueRunner.to_proto": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.qr": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_queue_runner.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.__eq__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.__ne__": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.__repr__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.build": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.feature_spec": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.name": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.PredefinedSeries.required_base_features": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series.build": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_binary_op": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_binary_op.register": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "setattr",
    "transform_cls"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_binary_op.register._member_func": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "transform_cls"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_unary_op": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_unary_op.register": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "setattr",
    "transform_cls"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_unary_op.register._member_func": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "transform_cls"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries.__repr__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries.build": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries.make_repr": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "repr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.TransformedSeries.required_base_features": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.series.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.DataFrame"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame._from_csv_base": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "get_default_values",
    "parser",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._expand_file_names",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.csv",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.TextFileSource",
    "tensorflow.python.platform.gfile.GFile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.batch": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "batcher",
    "dict",
    "list",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.Batch",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "classmethod",
    "cls._from_csv_base",
    "get_default_values"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv.get_default_values": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv_with_feature_spec": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "classmethod",
    "cls._from_csv_base",
    "get_default_values",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.columns",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._get_default_value",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv_with_feature_spec.get_default_values": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._get_default_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_examples": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "parser",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._expand_file_names",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource",
    "tensorflow.python.ops.io_ops.TFRecordReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_numpy": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy_source",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_ordereddict": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy_source",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.OrderedDictNumpySource"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_pandas": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pandas_source",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe",
    "tensorflow.contrib.learn.python.learn.dataframe.dataframe.assign",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.materialize_to_memory": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.run": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.collections",
    "tensorflow.python.client.session",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.client.session.run",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.ops.variables.initialize_all_variables",
    "tensorflow.python.ops.variables.initialize_local_variables",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.training.coordinator.Coordinator",
    "tensorflow.python.training.queue_runner.start_queue_runners",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.run_one_batch": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.run_one_epoch": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.select_rows": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.split": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.split_fast": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._dtype_to_nan": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._expand_file_names": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "tensorflow.python.platform.gfile.Glob",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._get_default_value": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe._dtype_to_nan",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.batch": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.coordinator": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.csv_parser": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.df": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.example_parser": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.in_memory_source": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.qr": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.reader_source": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.sess": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.sparsify": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.split_mask": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform._apply_transform": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform._check_output_tensors": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform._produce_output_series": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "TransformedSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform.build_transitive": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "TransformedSeries.make_repr",
    "ValueError",
    "getattr",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.__call__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.contrib.learn.python.learn.dataframe.transform._make_list_of_series"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.__repr__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.__str__": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform._output_names": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform._produce_output_series": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.input_valency": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.name": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.output_names": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.dataframe.transform._make_tuple_of_string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.parameters": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.inspect",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform.return_type": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform._make_list_of_series": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "list",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.collections",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform._make_tuple_of_string": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "str",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.collections",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transform.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform._output_names": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform.batch_size": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform.input_valency": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform.num_threads": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform.queue_capacity": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.Batch": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.Batch._apply_transform": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.training.input.batch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.Batch.name": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.AbstractBatchTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "int",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch._apply_transform": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.training.input.shuffle_batch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch.min_after_dequeue": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch.name": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.ShuffleBatch.seed": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.input_ops": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.floordiv",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.math_ops.mod",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.pow",
    "tensorflow.python.ops.math_ops.truediv"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.BINARY_TRANSFORMS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform._apply_transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform._output_names": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform.input_valency": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform.scalar": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.SeriesBinaryTransform": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.SeriesBinaryTransform._apply_transform": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.SeriesBinaryTransform._output_names": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.SeriesBinaryTransform.input_valency": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms._DOC_FORMAT_STRING": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.register_binary_op": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "operation.__doc__",
    "operation.__name__",
    "setattr",
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.ScalarBinaryTransform",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.SeriesBinaryTransform",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms._DOC_FORMAT_STRING",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.register_binary_op._fn": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "isinstance",
    "scalar_transform_cls",
    "series_transform_cls",
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.register_binary_op.scalar_apply_op": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.register_binary_op.scalar_name": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "operation.__name__",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.register_binary_op.series_apply_op": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.register_binary_op.series_name": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.series": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.BooleanMask": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_binary_op",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.BooleanMask._apply_transform": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "mask_fn",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.sparse_boolean_mask",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.boolean_mask",
    "tensorflow.python.ops.array_ops.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.BooleanMask._output_names": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.BooleanMask.input_valency": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.BooleanMask.name": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.functional_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.functional_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.series": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.sparse_boolean_mask": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.functional_ops.foldl",
    "tensorflow.python.ops.functional_ops.map_fn",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_or",
    "tensorflow.python.ops.sparse_ops.sparse_retain"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.boolean_mask.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser._apply_transform": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.parsing_ops.decode_csv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser._output_names": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser.column_names": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser.default_values": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser.input_valency": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser.name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify._apply_transform": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.python.ops.sparse_ops.sparse_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify._output_names": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify.default_value": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify.input_valency": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify.name": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_binary_op",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference._apply_transform": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference._negate_sparse",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.sparse_ops.sparse_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference._output_names": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference.input_valency": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.Difference.name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference._negate_sparse": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.series": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.difference.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sorted",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser._apply_transform": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.python.ops.parsing_ops.parse_example"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser._output_names": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser.feature_definitions": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser.input_valency": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser.name": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast._apply_transform": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.python.ops.string_ops.string_to_hash_bucket_fast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast._output_names": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast.input_valency": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast.name": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.string_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.string_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "max",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource._apply_transform": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.enqueue_data",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.batch_size": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.data": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.data_name": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.enqueue_size": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.input_valency": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.min_after_dequeue": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.num_threads": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.queue_capacity": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.seed": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource.shuffle": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource._output_names": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource.name": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.OrderedDictNumpySource": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.OrderedDictNumpySource.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.OrderedDictNumpySource"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.OrderedDictNumpySource._output_names": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.OrderedDictNumpySource.name": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.BaseInMemorySource"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource._output_names": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource.name": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.feeding_functions": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "max",
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource._apply_transform": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.training.input.batch_join",
    "tensorflow.python.training.input.shuffle_batch_join",
    "tensorflow.python.training.input.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource._output_names": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.batch_size": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.enqueue_size": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.input_valency": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.min_after_dequeue": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.name": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.num_threads": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.queue_capacity": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.reader_cls": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.reader_kwargs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.seed": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.shuffle": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource.work_units": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.TFRecordSource": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource",
    "tensorflow.python.ops.io_ops.TFRecordReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.TextFileSource": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource",
    "tensorflow.python.ops.io_ops.TextLineReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.input_ops": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify._apply_transform": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.nan",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.boolean_mask",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.is_nan",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify._output_names": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify.input_valency": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify.name": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify.strip_value": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform.Transform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask._output_names": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask._produce_output_series": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes.HashFast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask.input_valency": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.SplitMask.name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.hashes": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.hashes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.split_mask.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_binary_op",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum._apply_transform": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.sparse_ops.sparse_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum._output_names": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum.input_valency": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.Sum.name": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.series": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.sum.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "tensorflow.python.ops.math_ops.ceil",
    "tensorflow.python.ops.math_ops.cos",
    "tensorflow.python.ops.math_ops.digamma",
    "tensorflow.python.ops.math_ops.erf",
    "tensorflow.python.ops.math_ops.erfc",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.inv",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.neg",
    "tensorflow.python.ops.math_ops.round",
    "tensorflow.python.ops.math_ops.rsqrt",
    "tensorflow.python.ops.math_ops.sign",
    "tensorflow.python.ops.math_ops.sin",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.DOC_FORMAT_STRING": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.UNARY_TRANSFORMS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.register_unary_op": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "operation.__name__",
    "tensorflow.contrib.learn.python.learn.dataframe.series.Series.register_unary_op",
    "tensorflow.contrib.learn.python.learn.dataframe.transform.TensorFlowTransform",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.DOC_FORMAT_STRING",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.register_unary_op._apply_transform": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "operation",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.register_unary_op._output_names": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.register_unary_op.input_valency": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.register_unary_op.name": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.series": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.transform": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.base.load_boston",
    "tensorflow.contrib.learn.python.learn.datasets.base.load_iris",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.load_mnist",
    "tensorflow.contrib.learn.python.learn.datasets.text_datasets.load_dbpedia"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.datasets.DATASETS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.datasets.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.base"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.Dataset": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.Datasets": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.load_boston": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.float",
    "os.path.dirname",
    "os.path.join",
    "tensorflow.contrib.learn.python.learn.datasets.base.load_csv_with_header"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.load_csv_with_header": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "next",
    "numpy.asarray",
    "numpy.zeros",
    "tensorflow.contrib.learn.python.learn.datasets.base.Dataset",
    "tensorflow.contrib.learn.python.learn.datasets.base.csv",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.load_csv_without_header": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "tensorflow.contrib.learn.python.learn.datasets.base.Dataset",
    "tensorflow.contrib.learn.python.learn.datasets.base.csv",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.load_iris": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.int",
    "os.path.dirname",
    "os.path.join",
    "tensorflow.contrib.learn.python.learn.datasets.base.load_csv_with_header"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.maybe_download": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "print",
    "six.moves.urllib.request.urlretrieve",
    "tensorflow.contrib.learn.python.learn.datasets.base.os",
    "tensorflow.contrib.learn.python.learn.datasets.base.tempfile",
    "tensorflow.python.platform.gfile.Copy",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.GFile",
    "tensorflow.python.platform.gfile.MakeDirs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.shrink_csv": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.base.csv",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.base.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.load_boston": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.datasets.load_dataset": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.datasets.DATASETS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.load_iris": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.mnist"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.numpy",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.uint8"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet.epochs_completed": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet.images": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet.labels": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet.next_batch": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet.num_examples": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.SOURCE_URL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist._read32": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.mnist.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.base": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.base"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.dense_to_one_hot": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.mnist.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.extract_images": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "tensorflow.contrib.learn.python.learn.datasets.mnist._read32",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.gzip",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.extract_labels": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "tensorflow.contrib.learn.python.learn.datasets.mnist._read32",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.dense_to_one_hot",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.gzip",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.load_mnist": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.mnist.read_data_sets"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.read_data_sets": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "fake",
    "len",
    "open",
    "tensorflow.contrib.learn.python.learn.datasets.base.Datasets",
    "tensorflow.contrib.learn.python.learn.datasets.base.maybe_download",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.SOURCE_URL",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.extract_images",
    "tensorflow.contrib.learn.python.learn.datasets.mnist.extract_labels",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.read_data_sets.fake": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.mnist.DataSet"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.mnist.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets.base": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.base"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets.main": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.base.shrink_csv",
    "tensorflow.contrib.learn.python.learn.datasets.text_datasets.maybe_download_dbpedia"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets.text_datasets": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.text_datasets"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.produce_small_datasets.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.text_datasets"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.DBPEDIA_URL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.base": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.base"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.load_dbpedia": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.str",
    "tensorflow.contrib.learn.python.learn.datasets.base.Datasets",
    "tensorflow.contrib.learn.python.learn.datasets.base.load_csv_without_header",
    "tensorflow.contrib.learn.python.learn.datasets.base.shrink_csv",
    "tensorflow.contrib.learn.python.learn.datasets.text_datasets.maybe_download_dbpedia",
    "tensorflow.contrib.learn.python.learn.datasets.text_datasets.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.maybe_download_dbpedia": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.base.maybe_download",
    "tensorflow.contrib.learn.python.learn.datasets.text_datasets.DBPEDIA_URL",
    "tensorflow.contrib.learn.python.learn.datasets.text_datasets.os",
    "tensorflow.contrib.learn.python.learn.datasets.text_datasets.tarfile",
    "tensorflow.python.platform.gfile.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.datasets.text_datasets.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.BaseEstimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.Classifier": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.DNNClassifier": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.DNNLinearCombinedClassifier": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.DNNLinearCombinedRegressor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedRegressor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.DNNRegressor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNRegressor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.Estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.LinearClassifier": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.LinearRegressor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.LogisticRegressor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.ModeKeys": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.NotFittedError": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.RunConfig": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.run_config.RunConfig"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.SVM": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.svm.SVM"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.TensorFlowBaseTransformer": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowBaseTransformer"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.TensorFlowEstimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.TensorFlowRNNClassifier": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNClassifier"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.TensorFlowRNNRegressor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNRegressor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.TensorForestEstimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.TensorForestLossMonitor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin",
    "sklearn.base.RegressorMixin",
    "sklearn.base.TransformerMixin",
    "sklearn.cross_validation.train_test_split",
    "sklearn.metrics.accuracy_score",
    "sklearn.metrics.log_loss",
    "sklearn.metrics.mean_squared_error",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.TRY_IMPORT_SKLEARN",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._BaseEstimator",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._ClassifierMixin",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._RegressorMixin",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._TransformerMixin",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._accuracy_score",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._mean_squared_error",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._train_test_split",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.os"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.BaseEstimator": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.ClassifierMixin": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError": {
  "data": {
   "shadows": "sklearn.utils.validation.NotFittedError"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.RegressorMixin": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.TRY_IMPORT_SKLEARN": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.TransformerMixin": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._BaseEstimator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._BaseEstimator.__repr__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn._pprint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._BaseEstimator.get_params": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._BaseEstimator.set_params": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._ClassifierMixin": {
  "data": {
   "lineno": 118
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._RegressorMixin": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._TransformerMixin": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._accuracy_score": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._mean_squared_error": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len",
    "numpy.average",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._pprint": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn._train_test_split": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "int",
    "numpy.random.permutation",
    "numpy.random.seed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.log_loss": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators._sklearn.train_test_split": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "super",
    "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES",
    "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin",
    "tensorflow.contrib.learn.python.learn.estimators.base.six",
    "tensorflow.contrib.learn.python.learn.estimators.base.types",
    "tensorflow.python.platform.tf_logging.warning",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin.fit": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin.predict": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "list",
    "numpy.argmax",
    "numpy.array",
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin.predict_proba": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin.save": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.base._copy_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.NotFittedError": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowBaseTransformer": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.TransformerMixin",
    "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowBaseTransformer.fit_transform": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowBaseTransformer.transform": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowBaseTransformer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.base.DeprecatedMixin",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super",
    "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES",
    "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.base.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator._get_model_fn": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator._get_model_fn._model_fn": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "isinstance",
    "model_fn",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.learn.python.learn.estimators.base.types",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator._predict": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator._restore": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.evaluate": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.fit": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.get_tensor": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.partial_fit": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.predict": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.predict_proba": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.restore": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "getattr",
    "isinstance",
    "locals",
    "six.string_types",
    "str",
    "tensorflow.contrib.learn.python.learn.estimators",
    "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.base.json",
    "tensorflow.contrib.learn.python.learn.estimators.base.os",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator.save": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "callable",
    "hasattr",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError",
    "tensorflow.contrib.learn.python.learn.estimators.base._copy_dir",
    "tensorflow.contrib.learn.python.learn.estimators.base._write_with_backup",
    "tensorflow.contrib.learn.python.learn.estimators.base.json",
    "tensorflow.contrib.learn.python.learn.estimators.base.os",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base._copy_dir": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.base.os",
    "tensorflow.python.platform.gfile.Copy",
    "tensorflow.python.platform.gfile.IsDirectory",
    "tensorflow.python.platform.gfile.ListDirectory",
    "tensorflow.python.platform.gfile.MakeDirs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base._sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base._write_with_backup": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.Open",
    "tensorflow.python.platform.gfile.Rename"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.contrib_framework": {
  "data": {
   "shadows": "tensorflow.contrib.framework"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.estimators": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.setup_train_data_feeder": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.base.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier._classifier_model": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier._classifier_model_with_params": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier._convert_to_estimator_model_result": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.nn.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier.evaluate": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier",
    "tensorflow.contrib.learn.python.learn.estimators.classifier._get_classifier_metrics",
    "tensorflow.contrib.metrics"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier.predict": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier.predict_proba": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.classifier.Classifier",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier._get_classifier_metrics": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_accuracy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.classification_signature_fn": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.exporter.classification_signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.exporter": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.exporter"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest._get_default_signature": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "tensorflow.Session",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signatures",
    "tensorflow.train.import_meta_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest._runIrisAll": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.argmax",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest._testExportMonitorRegressionSignature": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Classifier",
    "tensorflow.contrib.learn.classifier.classification_signature_fn",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.monitors.ExportMonitor",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_fn",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.tempfile",
    "tensorflow.gfile.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest.testIrisAll": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Classifier",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest.testIrisAllWithParams": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Classifier",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_params_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest.testIrisInputFn": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Classifier",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.iris_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest.testIrisPredictAsIterable": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.argmax",
    "tensorflow.contrib.learn.Classifier",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.ClassifierTest.testIrisPredictInputFnAsIterable": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "list",
    "tensorflow.contrib.learn.Classifier",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.functools",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.iris_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test._sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.iris_input_fn": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.reshape",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_fn": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.learn.models.logistic_regression_zero_init",
    "tensorflow.one_hot"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.logistic_model_params_fn": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.learn.models.logistic_regression_zero_init",
    "tensorflow.one_hot"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.manifest_pb2": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.manifest_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.classifier_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel.__init__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel",
    "tensorflow.python.ops.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel._add_hidden_layer_summary": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "tensorflow.python.ops.logging_ops.histogram_summary",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.nn.zero_fraction"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel._get_default_optimizer": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel.build_model": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.contrib.layers.dropout",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.python.ops.partitioned_variables.min_max_variable_partitioner",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel.get_bias": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel.get_weights": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel._get_default_optimizer": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "min",
    "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel.build_model": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.joint_weighted_sum_from_feature_columns",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.python.ops.partitioned_variables.min_max_variable_partitioner",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel.get_bias": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel.get_weights": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "list",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.re",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.list_variables",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel._get_default_optimizer": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel._get_feature_columns": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "set",
    "sorted",
    "tensorflow.contrib.layers.python.layers.feature_column_ops.check_feature_columns"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel._get_optimizer": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "callable",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel._get_vars": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel.build_model": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel.get_scope_name": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model._ComposableModel.get_train_step": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.python.ops.clip_ops.clip_by_global_norm",
    "tensorflow.python.ops.gradients.gradients",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.feature_column_ops": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.feature_column_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.gradients": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.partitioned_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.partitioned_variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.ComposableModelTest": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.ComposableModelTest.testDNNModel": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.DNNEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._iris_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.ComposableModelTest.testJointLinearModel": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.JointLinearEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.ComposableModelTest.testJointLinearModel.input_fn": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.ComposableModelTest.testLinearModel": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.LinearEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.ComposableModelTest.testLinearModel.input_fn": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.DNNEstimator": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.DNNEstimator.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.DNNEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.JointLinearEstimator": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.JointLinearEstimator.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.JointLinearEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.LinearEstimator": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.LinearEstimator.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.LinearEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest._get_eval_ops": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest._get_predict_ops": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._BaseEstimatorForTest._get_train_ops": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test._iris_input_fn": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.composable_model": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.composable_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.composable_model_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.evaluable.Evaluable",
    "tensorflow.contrib.learn.python.learn.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.__init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._dnn_classifier_model_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn.tempfile",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._changing_default_center_bias",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator",
    "tensorflow.python.ops.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.bias_": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "enumerate",
    "property",
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._CENTERED_BIAS_WEIGHT",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.config": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.evaluate": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._LOGISTIC",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.streaming_auc",
    "tensorflow.contrib.metrics.update"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.export": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.utils.export.classification_signature_fn_with_prob"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.export.default_input_fn": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.parse_feature_columns_from_examples"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.fit": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.get_variable_names": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.list_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.get_variable_value": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.model_dir": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.predict": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._as_iterable",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.predict_proba": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._as_iterable",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNClassifier.weights_": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "enumerate",
    "property",
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNRegressor": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedRegressor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNRegressor.__init__": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "optimizer",
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._changing_default_center_bias",
    "tensorflow.python.ops.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNRegressor.bias_": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.DNNRegressor.weights_": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._CENTERED_BIAS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._CENTERED_BIAS_WEIGHT": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._CLASSES": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._LEARNING_RATE": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._LOGISTIC": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._PROBABILITIES": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._add_hidden_layer_summary": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.python.ops.logging_ops.histogram_summary",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.nn.zero_fraction"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._as_iterable": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._centered_bias": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._CENTERED_BIAS",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._CENTERED_BIAS_WEIGHT",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._centered_bias_step": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "loss_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._CENTERED_BIAS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.training.training.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._dnn_classifier_model_fn": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "enumerate",
    "loss_fn",
    "optimizer",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.contrib.layers.dropout",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.python.layers.optimizers.optimize_loss",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._LEARNING_RATE",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._add_hidden_layer_summary",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._centered_bias",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._centered_bias_step",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._get_feature_dict",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._get_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._get_weight_tensor",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._predictions",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._rescale_eval_loss",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.EVAL",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.TRAIN",
    "tensorflow.contrib.losses.python.losses.loss_ops.sigmoid_cross_entropy",
    "tensorflow.contrib.losses.python.losses.loss_ops.sparse_softmax_cross_entropy",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.partitioned_variables.min_max_variable_partitioner",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._get_feature_dict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._get_optimizer": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "callable",
    "optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._get_weight_tensor": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._predictions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._LOGISTIC",
    "tensorflow.contrib.learn.python.learn.estimators.dnn._PROBABILITIES",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.nn.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn._rescale_eval_loss": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.dnn_linear_combined": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.evaluable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.evaluable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.export": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.export"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.list_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.list_variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.load_variable": {
  "data": {
   "shadows": "tensorflow.contrib.framework.load_variable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.loss_ops": {
  "data": {
   "shadows": "tensorflow.contrib.losses.python.losses.loss_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.metric_spec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.optimizers": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.optimizers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.partitioned_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.partitioned_variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.session_run_hook": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.train": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.trainable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.trainable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._changing_default_center_bias",
    "tensorflow.python.ops.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier.predict": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.argmax",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier.predict_proba": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedRegressor": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedRegressor.__init__": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.layers.regression_target",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._changing_default_center_bias",
    "tensorflow.python.ops.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel",
    "tensorflow.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator",
    "tensorflow.python.ops.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._centered_bias": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._centered_bias_step": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.training.training.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._dnn_logits": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_dnn_feature_columns": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "set",
    "sorted",
    "tensorflow.contrib.layers.python.layers.feature_column_ops.check_feature_columns"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_eval_ops": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_feature_dict": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_feature_ops_from_example": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.layers.create_feature_spec_for_parsing",
    "tensorflow.python.ops.parsing_ops.parse_example"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_linear_feature_columns": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "set",
    "sorted",
    "tensorflow.contrib.layers.python.layers.feature_column_ops.check_feature_columns"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_predict_ops": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_target_column": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._get_train_ops": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._linear_logits": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator._logits": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.nn.bias_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator.dnn_bias_": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator.dnn_weights_": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator.linear_bias_": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._DNNLinearCombinedBaseEstimator.linear_weights_": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._changing_default_center_bias": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.composable_model": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.composable_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.feature_column_ops": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.feature_column_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.training": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCenteredBias": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "float",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCenteredBias._input_fn_train": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCustomMetrics": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.streaming_auc",
    "tensorflow.contrib.metrics.streaming_precision"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCustomMetrics._input_fn_train": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCustomMetrics._my_metric_op": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "tensorflow.mul",
    "tensorflow.reduce_sum",
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCustomOptimizerByFunction": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_logistic_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCustomOptimizerByFunction._optimizer_exp_decay": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.train.AdagradOptimizer",
    "tensorflow.train.exponential_decay"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCustomOptimizerByObject": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_logistic_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression",
    "tensorflow.train.AdagradOptimizer",
    "tensorflow.train.FtrlOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testCustomOptimizerByString": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_logistic_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testDNNOnly": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_multiclass_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testDNNWeightsBiasesNames": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testDNNWeightsBiasesNames._input_fn_train": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testDisableCenteredBias": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testDisableCenteredBias._input_fn_train": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testEstimatorContract": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testEvaluationShouldUseWeightColumn": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.monitors.CaptureVariable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testEvaluationShouldUseWeightColumn._input_fn_train": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testLinearOnly": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "print",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testLinearOnly.input_fn": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testLinearOnlyOneFeature": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testLinearOnlyOneFeature.input_fn": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testLogisticRegression_MatrixData": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_logistic_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testLogisticRegression_TensorData": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "range",
    "str",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testLogisticRegression_TensorData._input_fn": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testMultiClass": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_multiclass_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testPredict": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testPredict._input_fn_predict": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "tensorflow.float32",
    "tensorflow.ones",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testPredict._input_fn_train": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testTrainWithPartitionedVariables": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testTrainWithPartitionedVariables._input_fn": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testVariableQuery": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testVariableQuery._input_fn_train": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testWeightAndBiasNames": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_multiclass_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testWeightColumn": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedClassifier",
    "tensorflow.contrib.learn.monitors.CaptureVariable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testWeightColumn._input_fn_eval": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedClassifierTest.testWeightColumn._input_fn_train": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedRegressorTest": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedRegressorTest._input_fn_train": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedRegressorTest.testEstimatorContract": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.DNNLinearCombinedRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedRegressorTest.testRegression": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedRegressor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.DNNLinearCombinedRegressorTest.testRegressionContinueTraining": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "new_estimator",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNLinearCombinedRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._get_quantile_based_buckets": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.percentile",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_logistic_fn": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._iris_input_multiclass_fn": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._prepare_iris_data_for_logistic_regression": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.where",
    "tensorflow.contrib.learn.datasets.base.Dataset",
    "tensorflow.contrib.learn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test._sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.estimator_test_utils": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._CLASSES": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DEFAULT_LEARNING_RATE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.evaluable.Evaluable",
    "tensorflow.contrib.learn.python.learn.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.__init__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._get_default_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.dnn_sampled_softmax_classifier_model_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.tempfile",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.evaluate": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.functools",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_precision_at_k",
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_recall_at_k"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.export": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.export.default_input_fn": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.parse_feature_columns_from_examples"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.fit": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.get_estimator": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.get_variable_names": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.model_dir": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.predict": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._TOP_K",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._as_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier.predict_proba": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._as_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._PROBABILITIES": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._TOP_K": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._as_iterable": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._get_default_optimizer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DEFAULT_LEARNING_RATE",
    "tensorflow.python.training.training.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._get_optimizer": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "callable",
    "optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.contrib_framework": {
  "data": {
   "shadows": "tensorflow.contrib.framework"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.dnn_sampled_softmax_classifier_model_fn": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "enumerate",
    "optimizer",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.framework.python.ops.variables.model_variable",
    "tensorflow.contrib.layers.dropout",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.contrib.layers.input_from_feature_columns",
    "tensorflow.contrib.layers.python.layers.initializers.xavier_initializer",
    "tensorflow.contrib.layers.python.layers.optimizers.optimize_loss",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DEFAULT_LEARNING_RATE",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._TOP_K",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._get_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.EVAL",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.INFER",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.TRAIN",
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.nn.learned_unigram_candidate_sampler",
    "tensorflow.python.ops.nn.sampled_softmax_loss",
    "tensorflow.python.ops.nn.softmax",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits",
    "tensorflow.python.ops.nn.top_k",
    "tensorflow.python.ops.partitioned_variables.min_max_variable_partitioner",
    "tensorflow.python.ops.standard_ops.matmul",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.evaluable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.evaluable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.initializers": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.initializers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.metric_ops": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.metric_spec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.optimizers": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.optimizers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.partitioned_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.partitioned_variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.standard_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.standard_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.train": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.trainable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.trainable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier.variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomMetrics": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier",
    "tensorflow.train.AdamOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomMetrics._input_fn": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomMetrics._my_metric_op": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.mul",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomOptimizerByFunction": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomOptimizerByFunction._input_fn": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomOptimizerByFunction._optimizer_exp_decay": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.train.AdagradOptimizer",
    "tensorflow.train.exponential_decay"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomOptimizerByObject": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier",
    "tensorflow.train.AdamOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testCustomOptimizerByObject._input_fn": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testExport": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testExport._input_fn": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testMultiClass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testMultiClass._iris_input_fn": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.float32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testMultiLabelTopKWithCustomMetrics": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier",
    "tensorflow.train.AdamOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testMultiLabelTopKWithCustomMetrics._input_fn": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testMultiLabelTopKWithCustomMetrics._my_metric_op": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.add",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testPredictAsIterable": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "list",
    "numpy.argmax",
    "numpy.array_equal",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testPredictAsIterable._input_fn": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testTrainSaveLoad": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testTrainSaveLoad._input_fn": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testTrainWithPartitionedVariables": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier._DNNSampledSoftmaxClassifier",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.DNNSampledSoftmaxClassifierTest.testTrainWithPartitionedVariables._input_fn": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.dnn_sampled_softmax_classifier": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_sampled_softmax_classifier_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testCustomMetrics": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "KeyError",
    "set",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.streaming_auc",
    "tensorflow.contrib.metrics.streaming_precision"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testCustomMetrics._input_fn_train": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testCustomMetrics._my_metric_op": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "tensorflow.mul",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.reduce_sum",
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testDisableCenteredBias": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test._iris_input_multiclass_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testEstimatorContract": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testExport": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testExport.input_fn": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLogisticRegression_FloatLabel": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLogisticRegression_FloatLabel._input_fn_float_label": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLogisticRegression_MatrixData": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test._iris_input_logistic_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLogisticRegression_TensorData": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLogisticRegression_TensorData._input_fn": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLoss": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLoss._input_fn_train": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLossWithWeights": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLossWithWeights._input_fn_eval": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testLossWithWeights._input_fn_train": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testMultiClass_MatrixData": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test._iris_input_multiclass_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testPredict_AsIterable": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testPredict_AsIterable._input_fn": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testPredict_AsIterableFalse": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testPredict_AsIterableFalse._input_fn": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testTrainSaveLoad": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testTrainSaveLoad._input_fn": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testTrainWithPartitionedVariables": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testTrainWithPartitionedVariables._input_fn": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.int32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testTrainWithWeights": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testTrainWithWeights._input_fn_eval": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNClassifierTest.testTrainWithWeights._input_fn_train": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testCustomMetrics": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "set",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error",
    "tensorflow.contrib.metrics.streaming_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testCustomMetrics._input_fn_train": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testCustomMetrics._my_metric_op": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "tensorflow.mul",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testDisableCenteredBias": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testDisableCenteredBias._input_fn": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testEstimatorContract": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testLoss": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testLoss._input_fn_train": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testLossWithWeights": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testLossWithWeights._input_fn_eval": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testLossWithWeights._input_fn_train": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testPredict_AsIterable": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testPredict_AsIterable._input_fn": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testPredict_AsIterableFalse": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testPredict_AsIterableFalse._input_fn": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testRegression_MatrixData": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test._iris_input_logistic_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testRegression_TensorData": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testRegression_TensorData._input_fn": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testTrainSaveLoad": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.functools",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testTrainSaveLoad._input_fn": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testTrainWithPartitionedVariables": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.embedding_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testTrainWithPartitionedVariables._input_fn": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testTrainWithWeights": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testTrainWithWeights._input_fn_eval": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.DNNRegressorTest.testTrainWithWeights._input_fn_train": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.FeatureColumnTest": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.FeatureColumnTest.testTrain": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test.boston_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.MetricSpec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test._iris_input_logistic_fn": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_test._prepare_iris_data_for_logistic_regression",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test._iris_input_multiclass_fn": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test._prepare_iris_data_for_logistic_regression": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.where",
    "tensorflow.contrib.learn.datasets.base.Dataset",
    "tensorflow.contrib.learn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test._sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.boston_input_fn": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.float32",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.estimator_test_utils": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dnn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.BasicRNNCell",
    "tensorflow.python.ops.rnn_cell.GRUCell",
    "tensorflow.python.ops.rnn_cell.LSTMCell"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._CELL_TYPES": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.abc",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.six",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.training.optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._activations_to_eval_ops": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._activations_to_loss": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._activations_to_predictions": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._construct_rnn": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "KeyError",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.rnn.dynamic_rnn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._get_eval_ops": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._get_predict_ops": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._get_train_ops": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._loss_to_train_op": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator._process_gradients": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.clip_ops.clip_by_global_norm",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator._activations_to_eval_ops": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._mask_activations_and_targets",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator._activations_to_loss": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._mask_activations_and_targets",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator._activations_to_predictions": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._SingleValueRNNEstimator": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._DynamicRNNEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._SingleValueRNNEstimator._activations_to_eval_ops": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._select_last_activations",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._SingleValueRNNEstimator._activations_to_loss": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._select_last_activations",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._SingleValueRNNEstimator._activations_to_predictions": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._select_last_activations",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_optimizer": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "issubclass",
    "list",
    "optimizer_type",
    "str",
    "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES.get",
    "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES.keys",
    "tensorflow.contrib.layers.OPTIMZIER.keys",
    "tensorflow.python.training.momentum",
    "tensorflow.python.training.momentum.MomentumOptimizer",
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_rnn_cell": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "cell_type",
    "isinstance",
    "issubclass",
    "list",
    "str",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._CELL_TYPES",
    "tensorflow.python.ops.rnn_cell.MultiRNNCell",
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._mask_activations_and_targets": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._padding_mask",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.boolean_mask",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._padding_mask": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._select_last_activations": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.contrib_framework": {
  "data": {
   "shadows": "tensorflow.contrib.framework"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.momentum_opt": {
  "data": {
   "shadows": "tensorflow.python.training.momentum"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.multi_value_rnn_classifier": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "cell_type",
    "optimizer_type",
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_rnn_cell",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.training.momentum",
    "tensorflow.python.training.optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.multi_value_rnn_regressor": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "cell_type",
    "optimizer_type",
    "tensorflow.contrib.layers.regression_target",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_rnn_cell",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.training.momentum",
    "tensorflow.python.training.optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.opt": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.rnn": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.single_value_rnn_classifier": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "cell_type",
    "optimizer_type",
    "tensorflow.contrib.layers.multi_class_target",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._SingleValueRNNEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_rnn_cell",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.training.momentum",
    "tensorflow.python.training.optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.single_value_rnn_regressor": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "cell_type",
    "optimizer_type",
    "tensorflow.contrib.layers.regression_target",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._SingleValueRNNEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._get_rnn_cell",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.training.momentum",
    "tensorflow.python.training.optimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.DynamicRnnEstimatorTest": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.DynamicRnnEstimatorTest.setUp": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.IdentityRNNCell",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.DynamicRnnEstimatorTest.testConstructRNN": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "float",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.int32",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.IdentityRNNCell": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.nn.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.IdentityRNNCell.__call__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.IdentityRNNCell.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.IdentityRNNCell.output_size": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.IdentityRNNCell.state_size": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockOptimizer": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockOptimizer.apply_gradients": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockOptimizer.compute_gradients": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn.activations_to_predictions": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn.get_eval_ops": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn.loss": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn.num_label_columns": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn.set_num_label_columns": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.setUp": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._MultiValueRNNEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.IdentityRNNCell",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MockTargetColumn",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testActivationsToPredictions": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.reshape",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testLearnShiftByOne": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "get_shift_input_fn",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.multi_value_rnn_classifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testLearnShiftByOne.get_shift_input_fn": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testLearnShiftByOne.get_shift_input_fn.input_fn": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "tensorflow.expand_dims",
    "tensorflow.int32",
    "tensorflow.random_uniform",
    "tensorflow.slice",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testLearnSineFunction": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "get_sin_input_fn",
    "numpy.pi",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.multi_value_rnn_regressor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testLearnSineFunction.get_sin_input_fn": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testLearnSineFunction.get_sin_input_fn._sin_fn": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.linspace",
    "tensorflow.reshape",
    "tensorflow.sin"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testLearnSineFunction.get_sin_input_fn.input_fn": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.expand_dims",
    "tensorflow.float32",
    "tensorflow.map_fn",
    "tensorflow.random_uniform",
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testMaskActivationsAndTargets": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "sum",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._mask_activations_and_targets",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.MultiValueRNNEstimatorTest.testPaddingMask": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._padding_mask",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest.testLearnMajority": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "get_majority_input_fn",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.single_value_rnn_classifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest.testLearnMajority.get_majority_input_fn": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest.testLearnMajority.get_majority_input_fn.input_fn": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "tensorflow.expand_dims",
    "tensorflow.int32",
    "tensorflow.random_uniform",
    "tensorflow.reduce_sum",
    "tensorflow.squeeze",
    "tensorflow.to_float",
    "tensorflow.to_int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest.testLearnMean": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "get_mean_input_fn",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.single_value_rnn_regressor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest.testLearnMean.get_mean_input_fn": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest.testLearnMean.get_mean_input_fn.input_fn": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "tensorflow.expand_dims",
    "tensorflow.float32",
    "tensorflow.matmul",
    "tensorflow.ones",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.SingleValueRNNEstimatorTest.testSelectLastactivations": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator._select_last_activations",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.dynamic_rnn_estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.sequence_length_mask": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "enumerate",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.dynamic_rnn_estimator_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.BaseEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.abc",
    "tensorflow.contrib.learn.python.learn.estimators.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.evaluable.Evaluable",
    "tensorflow.contrib.learn.python.learn.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.__init__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "str",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_replica_device_setter",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.tempfile",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warning",
    "vars"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._check_inputs": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._evaluate_model": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "hasattr",
    "input_fn",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.os",
    "tensorflow.contrib.learn.python.learn.graph_actions.evaluate",
    "tensorflow.contrib.metrics",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.saver.latest_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._extract_metric_update_ops": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.platform.tf_logging.warning",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._get_eval_ops": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._get_feature_ops_from_example": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_example_parser_from_signatures"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._get_features_from_input_fn": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "input_fn",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._get_predict_ops": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._get_train_ops": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._infer_model": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "input_fn",
    "isinstance",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.saver.latest_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._infer_model_as_iterable": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "_feed_fn",
    "feed_fn",
    "list",
    "range",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.itertools",
    "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds_iter",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._infer_model_as_iterable._feed_fn": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "feed_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._infer_model_single": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "_feed_fn",
    "numpy.concatenate",
    "tensorflow.contrib.learn.python.learn.graph_actions.infer",
    "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._infer_model_single._feed_fn": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "feed_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator._train_model": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "hasattr",
    "init_feed_fn",
    "input_fn",
    "isinstance",
    "min",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.time",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train",
    "tensorflow.contrib.learn.python.learn.monitors",
    "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.config": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.evaluate": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "input_fn",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_input_fn",
    "tensorflow.contrib.metrics"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.export": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "input_fn",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.utils.export._default_input_fn",
    "tensorflow.contrib.learn.python.learn.utils.export._export_estimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.fit": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_input_fn",
    "tensorflow.contrib.learn.python.learn.monitors",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.get_variable_names": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.list_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.get_variable_value": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.model_dir": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.partial_fit": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "input_fn",
    "tensorflow.contrib.learn.python.learn.monitors",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator.predict": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "input_fn",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator.__init__": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_arguments",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._identity_feature_engineering_fn",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._call_model_fn": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_arguments"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._get_eval_ops": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._make_metrics_ops",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._get_predict_ops": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_placeholders_from_signatures"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator._get_train_ops": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.NotFittedError": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator._get_arguments": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "hasattr",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.inspect"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator._get_input_fn": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.is_tensor",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator._get_replica_device_setter": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.python.training.device_setter.replica_device_setter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator._identity_feature_engineering_fn": {
  "data": {
   "lineno": 866
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator._make_metrics_ops": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "metric",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.six",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.metrics",
    "tensorflow.python.platform.tf_logging.warning",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.contrib_framework": {
  "data": {
   "shadows": "tensorflow.contrib.framework"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.data_feeder": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.data_feeder"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.device_setter": {
  "data": {
   "shadows": "tensorflow.python.training.device_setter"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.evaluable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.evaluable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.export": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.export"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.graph_actions": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.graph_actions"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.infer_real_valued_columns_from_input": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.infer_real_valued_columns_from_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.infer_real_valued_columns_from_input_fn": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "input_fn",
    "tensorflow.contrib.layers.infer_real_valued_columns",
    "tensorflow.python.framework.ops.Graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.list_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.list_variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.load_variable": {
  "data": {
   "shadows": "tensorflow.contrib.framework.load_variable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.metric_spec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.monitor_lib": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.run_config": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.run_config"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.session_run_hook": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.tensor_signature": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.tensor_signature"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator.trainable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.trainable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor.begin": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor.end": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor.step_begin": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor.step_end": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testBadInput": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.constant",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.iris_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testBostonAll": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.float64",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn",
    "tensorflow.contrib.metrics.streaming_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testCheckInputs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.ones",
    "right_features",
    "right_targets",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testContinueTraining": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.float64",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.tempfile",
    "tensorflow.contrib.metrics.streaming_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testCustomConfig": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TestInput",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testCustomConfig.TestInput": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testCustomConfig.TestInput.__init__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testCustomConfig.TestInput.config_test_input_fn": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testEstimatorParams": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_params_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testIrisAll": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.argmax",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.logistic_model_no_mode_fn",
    "tensorflow.contrib.metrics.streaming_accuracy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testIrisInputFn": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.iris_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.logistic_model_no_mode_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testIrisIterator": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.iris_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.itertools",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.logistic_model_no_mode_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testMonitors": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.CheckCallsMonitor",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testPredict": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testPredictAsIterable": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "len",
    "list",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testPredictInputFn": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testPredictInputFnAsIterable": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "len",
    "list",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.functools",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testSummaryWriting": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn",
    "tensorflow.contrib.testing.latest_events",
    "tensorflow.contrib.testing.simple_values_from_events"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testTrainInputFn": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_eval_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testTrainMaxStepsIsNotIncremental": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testTrainStepsIsIncremental": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testUntrained": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.float64",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.NotFittedError",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testWrongInput": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.testWrongInput.other_input_fn": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.EstimatorTest.test_export_returns_exported_dirname": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest._assert_single_feature_column": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "len",
    "tensorflow.FixedLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testBoolInput": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "six.moves.xrange",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testBoolInputFn": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testBostonInputFn": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test._BOSTON_INPUT_DIM",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn",
    "tensorflow.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testFloat32Input": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testFloat32InputFn": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testFloat64Input": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.ones",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input",
    "tensorflow.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testFloat64InputFn": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.float64",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testInt32Input": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.ones",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testInt32InputFn": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.int32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testInt64Input": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.ones",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testInt64InputFn": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.int64",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testInvalidArgs": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.constant",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testIrisInputFn": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test._IRIS_INPUT_DIM",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test.iris_input_fn",
    "tensorflow.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testStringInput": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "six.moves.xrange",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.InferRealValuedColumnsTest.testStringInputFn": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "six.moves.xrange",
    "tensorflow.constant",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.ReplicaDeviceSetterTest": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.ReplicaDeviceSetterTest.testMutableHashTableIsLocal": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_replica_device_setter",
    "tensorflow.contrib.lookup.MutableHashTable",
    "tensorflow.device",
    "tensorflow.int64",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.ReplicaDeviceSetterTest.testMutableHashTableIsOnPs": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_replica_device_setter",
    "tensorflow.contrib.lookup.MutableHashTable",
    "tensorflow.device",
    "tensorflow.int64",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.ReplicaDeviceSetterTest.testTaskIsSetOnWorkerWhenJobNameIsSet": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_replica_device_setter",
    "tensorflow.device"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.ReplicaDeviceSetterTest.testVariablesAreLocal": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_replica_device_setter",
    "tensorflow.device"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.ReplicaDeviceSetterTest.testVariablesAreOnPs": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.estimator._get_replica_device_setter",
    "tensorflow.device"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test._BOSTON_INPUT_DIM": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test._IRIS_INPUT_DIM": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test._sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_eval_fn": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test._BOSTON_INPUT_DIM",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.boston_input_fn": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test._BOSTON_INPUT_DIM",
    "tensorflow.reshape",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.iris_input_fn": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test._IRIS_INPUT_DIM",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_fn": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.learn.models.linear_regression_zero_init"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.linear_model_params_fn": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.learn.models.linear_regression_zero_init"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.logistic_model_no_mode_fn": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.learn.models.logistic_regression_zero_init",
    "tensorflow.one_hot"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.inspect"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.infer_real_valued_columns_from_input": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator.infer_real_valued_columns_from_input"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.infer_real_valued_columns_from_input_fn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator.infer_real_valued_columns_from_input_fn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.evaluable.Evaluable",
    "tensorflow.contrib.learn.python.learn.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.__init__": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._changing_default_center_bias",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.linear._get_default_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.linear._get_optimizer",
    "tensorflow.contrib.learn.python.learn.estimators.linear._linear_classifier_model_fn",
    "tensorflow.contrib.learn.python.learn.estimators.linear.sdca_classifier_model_fn",
    "tensorflow.contrib.learn.python.learn.estimators.linear.tempfile",
    "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.bias_": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.config": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.evaluate": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "metric",
    "str",
    "tensorflow.contrib.layers.python.layers.target_column.get_default_binary_metrics_for_eval",
    "tensorflow.contrib.learn.python.learn.estimators.linear._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._LOGISTIC",
    "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._wrap_metric",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.items",
    "tensorflow.contrib.metrics.pop",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.update",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.export": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.utils.export.classification_signature_fn_with_prob"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.export.default_input_fn": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.parse_feature_columns_from_examples"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.fit": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.get_estimator": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.get_variable_names": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.list_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.get_variable_value": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.model_dir": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.predict": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.linear._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._as_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.predict_proba": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._as_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearClassifier.weights_": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "len",
    "list",
    "property",
    "tensorflow.contrib.learn.python.learn.estimators.linear.re",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.list_variables",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedRegressor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor.__init__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined._changing_default_center_bias",
    "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor._get_train_ops": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "tensorflow.contrib.framework.python.ops.variables.get_or_create_global_step",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.linear._add_bias_column",
    "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.logging_ops.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor._loss_type": {
  "data": {
   "lineno": 734
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor.bias_": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.LinearRegressor.weights_": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._CLASSES": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._LOGISTIC": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._add_bias_column": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._as_iterable": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._centered_bias": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._centered_bias_step": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "loss_fn",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.training.training.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._get_default_optimizer": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "min",
    "tensorflow.contrib.learn.python.learn.estimators.linear.math",
    "tensorflow.python.training.training.FtrlOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._get_metric_args": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr",
    "tensorflow.contrib.learn.python.learn.estimators.linear.inspect"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._get_optimizer": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "callable",
    "isinstance",
    "spec",
    "tensorflow.contrib.layers.OPTIMIZER_CLS_NAMES",
    "tensorflow.contrib.learn.python.learn.estimators.linear.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._hinge_loss": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.hinge_loss",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.less_equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._linear_classifier_model_fn": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "loss_fn",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.contrib.layers.joint_weighted_sum_from_feature_columns",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.INFER",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.TRAIN",
    "tensorflow.contrib.learn.python.learn.estimators.linear._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._LOGISTIC",
    "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._centered_bias",
    "tensorflow.contrib.learn.python.learn.estimators.linear._centered_bias_step",
    "tensorflow.contrib.learn.python.learn.estimators.linear._log_loss_with_two_classes",
    "tensorflow.contrib.learn.python.learn.estimators.linear._softmax_cross_entropy_loss",
    "tensorflow.contrib.learn.python.learn.estimators.linear._weighted_loss",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.clip_ops.clip_by_global_norm",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.gradients.gradients",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.nn.bias_add",
    "tensorflow.python.ops.nn.softmax",
    "tensorflow.python.ops.partitioned_variables.min_max_variable_partitioner",
    "tensorflow.python.ops.variable_scope.variable_op_scope",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._log_loss_with_two_classes": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._softmax_cross_entropy_loss": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.nn.sparse_softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._weighted_loss": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._wrap_metric": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "metric",
    "tensorflow.contrib.learn.python.learn.estimators.linear._get_metric_args"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._wrap_metric.wrapped": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "metric",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear._wrap_metric.wrapped_weights": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "metric",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.dnn_linear_combined": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.dnn_linear_combined"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.evaluable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.evaluable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.export": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.export"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.gradients": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.losses": {
  "data": {
   "shadows": "tensorflow.contrib.losses"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.metric_spec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.partitioned_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.partitioned_variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.sdca_classifier_model_fn": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "loss_fn",
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.contrib.layers.weighted_sum_from_feature_columns",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.INFER",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.ModeKeys.TRAIN",
    "tensorflow.contrib.learn.python.learn.estimators.linear._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._LOGISTIC",
    "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._add_bias_column",
    "tensorflow.contrib.learn.python.learn.estimators.linear._hinge_loss",
    "tensorflow.contrib.learn.python.learn.estimators.linear._log_loss_with_two_classes",
    "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.nn.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.sdca_optimizer": {
  "data": {
   "shadows": "tensorflow.contrib.linear_optimizer.python.sdca_optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.session_run_hook": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.target_column": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.target_column"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.train": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.trainable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.trainable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.FeatureColumnTest": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.FeatureColumnTest.testTrain": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test.boston_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testCustomMetrics": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.streaming_auc",
    "tensorflow.contrib.metrics.streaming_precision"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testCustomMetrics._input_fn_train": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testCustomMetrics._my_metric_op": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.mul",
    "tensorflow.reduce_sum",
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testCustomOptimizerByFunction": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test._iris_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testCustomOptimizerByObject": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test._iris_input_fn",
    "tensorflow.train.FtrlOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testCustomOptimizerByString": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test._iris_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testCustomOptimizerByString._optimizer": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.train.FtrlOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testDisableCenteredBias": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testDisableCenteredBias.input_fn": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testEstimatorContract": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testEval": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testEval.input_fn": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testExport": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testExport.input_fn": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testJointTrain": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testJointTrain.input_fn": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testLogisticFractionalLabels": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "get_input_fn",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testLogisticFractionalLabels.get_input_fn": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testLogisticFractionalLabels.get_input_fn.input_fn": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testMultiClass": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test._iris_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerBucketizedFeatures": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerBucketizedFeatures.input_fn": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerCrossedFeatures": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerCrossedFeatures.input_fn": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerMixedFeatures": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerMixedFeatures.input_fn": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerRealValuedFeatureWithHigherDimension": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerRealValuedFeatureWithHigherDimension.input_fn": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerRealValuedFeatures": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerRealValuedFeatures.input_fn": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerSparseFeatures": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerSparseFeatures.input_fn": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerWeightedSparseFeatures": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.layers.weighted_sparse_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testSdcaOptimizerWeightedSparseFeatures.input_fn": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrain": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrain.input_fn": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainOptimizerWithL1Reg": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.train.FtrlOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainOptimizerWithL1Reg.input_fn": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainSaveLoad": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "list",
    "numpy.array_equal",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test.functools",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainSaveLoad.input_fn": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainWithMissingFeature": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainWithMissingFeature.input_fn": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainWithPartitionedVariables": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testTrainWithPartitionedVariables._input_fn": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testWeightAndBiasNames": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test._iris_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testWeightColumn": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testWeightColumn._input_fn_eval": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testWeightColumn._input_fn_train": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testWeightColumnLoss": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearClassifier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearClassifierTest.testWeightColumnLoss._input_fn": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testCustomMetrics": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "set",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error",
    "tensorflow.contrib.metrics.streaming_mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testCustomMetrics._input_fn_train": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testCustomMetrics._my_metric_op": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "tensorflow.mul",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testDisableCenteredBias": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testDisableCenteredBias._input_fn": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testEstimatorContract": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testLoss": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testLoss._input_fn_train": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testLossWithWeights": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testLossWithWeights._input_fn_eval": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testLossWithWeights._input_fn_train": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testPredict_AsIterable": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testPredict_AsIterable._input_fn": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testPredict_AsIterableFalse": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testPredict_AsIterableFalse._input_fn": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testRecoverWeights": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.random.RandomState",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.infer_real_valued_columns_from_input",
    "tensorflow.train.FtrlOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testRegression": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testRegression.input_fn": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testRegression_MatrixData": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test._iris_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testRegression_TensorData": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testRegression_TensorData._input_fn": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerBiasAndOtherColumns": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerBiasAndOtherColumns.input_fn": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "int",
    "range",
    "str",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerBiasAndOtherColumnsFabricatedCentered": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerBiasAndOtherColumnsFabricatedCentered.input_fn": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "int",
    "range",
    "str",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerBiasOnly": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerBiasOnly.input_fn": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "range",
    "str",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerMixedFeaturesArbitraryWeights": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerMixedFeaturesArbitraryWeights.input_fn": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerRealValuedLinearFeatures": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "numpy.dot",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerRealValuedLinearFeatures.input_fn": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerSparseFeaturesWithL1Reg": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "numpy.absolute",
    "print",
    "sorted",
    "sum",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.linear_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testSdcaOptimizerSparseFeaturesWithL1Reg.input_fn": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testTrainSaveLoad": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test.functools",
    "tensorflow.contrib.learn.python.learn.estimators.linear_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testTrainSaveLoad._input_fn": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testTrainWithPartitionedVariables": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testTrainWithPartitionedVariables._input_fn": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.train.limit_epochs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testTrainWithWeights": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testTrainWithWeights._input_fn_eval": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.LinearRegressorTest.testTrainWithWeights._input_fn_train": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.MetricSpec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test._iris_input_fn": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test._sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.boston_input_fn": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.float32",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.estimator_test_utils": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator_test_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.linear_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor.evaluate": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor",
    "tensorflow.contrib.metrics"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor.get_default_metrics": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor._make_streaming_with_threshold",
    "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor._predictions_streaming_mean",
    "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor._targets_streaming_mean",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.streaming_auc",
    "tensorflow.contrib.metrics.streaming_precision",
    "tensorflow.contrib.metrics.streaming_recall"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor._make_streaming_with_threshold": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor._make_streaming_with_threshold._streaming_metrics": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "streaming_metrics_fn",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor._predictions_streaming_mean": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor._targets_streaming_mean": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test.LogisticRegressorTest": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test.LogisticRegressorTest.test_fit_and_evaluate_metrics": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.LogisticRegressor",
    "tensorflow.contrib.learn.LogisticRegressor.ACCURACY_BASELINE",
    "tensorflow.contrib.learn.LogisticRegressor.ACCURACY_MEAN",
    "tensorflow.contrib.learn.LogisticRegressor.AUC",
    "tensorflow.contrib.learn.LogisticRegressor.PRECISION_MEAN",
    "tensorflow.contrib.learn.LogisticRegressor.PREDICTION_MEAN",
    "tensorflow.contrib.learn.LogisticRegressor.RECALL_MEAN",
    "tensorflow.contrib.learn.LogisticRegressor.TARGET_MEAN",
    "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test._iris_data_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test._logistic_regression_model_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test._iris_data_input_fn": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.where",
    "tensorflow.constant",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.float32",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test._logistic_regression_model_fn": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.constant_initializer",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.layers.linear",
    "tensorflow.contrib.layers.optimize_loss",
    "tensorflow.contrib.losses.sigmoid_cross_entropy",
    "tensorflow.sigmoid",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.logistic_regressor_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.estimator.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestDeviceAssigner",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator._get_eval_ops": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "metric",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest._assert_float32",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.six",
    "tensorflow.contrib.tensor_forest.client.eval_metrics.get_metric",
    "tensorflow.contrib.tensor_forest.data.data_ops.ParseDataTensorOrDict",
    "tensorflow.contrib.tensor_forest.data.data_ops.ParseLabelTensorOrDict",
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator._get_predict_ops": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.random_forest._assert_float32",
    "tensorflow.contrib.tensor_forest.data.data_ops.ParseDataTensorOrDict"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator._get_train_ops": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest._assert_float32",
    "tensorflow.contrib.tensor_forest.data.data_ops.ParseDataTensorOrDict",
    "tensorflow.contrib.tensor_forest.data.data_ops.ParseLabelTensorOrDict",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator.predict": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.argmax",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator.predict_proba": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator.predict_with_keys": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.argmax",
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor.every_n_step_end": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor.set_estimator": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor.step_begin": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.random_forest.TensorForestLossMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest._assert_float32": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.contrib_framework": {
  "data": {
   "shadows": "tensorflow.contrib.framework"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.data_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.data.data_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.eval_metrics": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.client.eval_metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.mon": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.TensorForestTrainerTests": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.TensorForestTrainerTests.testClassification": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.float32",
    "tensorflow.contrib.learn.TensorForestEstimator",
    "tensorflow.contrib.learn.TensorForestLossMonitor",
    "tensorflow.contrib.learn.datasets.load_iris",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.TensorForestTrainerTests.testRegression": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.float32",
    "tensorflow.contrib.learn.TensorForestEstimator",
    "tensorflow.contrib.learn.TensorForestLossMonitor",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.random_forest_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowEstimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNClassifier": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.ClassifierMixin",
    "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNClassifier.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.rnn.null_input_op_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNClassifier._model_fn": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.models.get_rnn_model",
    "tensorflow.contrib.learn.python.learn.models.logistic_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNClassifier.bias_": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNClassifier.weights_": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNRegressor": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.RegressorMixin",
    "tensorflow.contrib.learn.python.learn.estimators.base.TensorFlowEstimator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNRegressor.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.rnn.null_input_op_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNRegressor._model_fn": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.models.get_rnn_model",
    "tensorflow.contrib.learn.python.learn.models.linear_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNRegressor.bias_": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.TensorFlowRNNRegressor.weights_": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn._sklearn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.models": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.models"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.null_input_op_fn": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "numpy.array",
    "numpy.float32",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.RNNTest": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.RNNTest.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.random",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.RNNTest.testBidirectionalRNN": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.TensorFlowRNNClassifier",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.data",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.labels",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.rnn_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.RNNTest.testRNN": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.TensorFlowRNNClassifier",
    "tensorflow.contrib.learn.TensorFlowRNNRegressor",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.data",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.labels",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.rnn_input_fn",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.targets",
    "tensorflow.contrib.learn.python.learn.estimators.rnn_test.test_data"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.accuracy_score": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.data": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.labels": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.mean_squared_error": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.rnn_input_fn": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.targets": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.test_data": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.estimators.rnn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.ClusterSpec": {
  "data": {
   "shadows": "tensorflow.python.training.server_lib.ClusterSpec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.ConfigProto": {
  "data": {
   "shadows": "tensorflow.python.ConfigProto"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.GPUOptions": {
  "data": {
   "shadows": "tensorflow.python.GPUOptions"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.RunConfig": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.RunConfig.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "_count_ps",
    "_get_master",
    "tensorflow.contrib.learn.python.learn.estimators.run_config.json",
    "tensorflow.contrib.learn.python.learn.estimators.run_config.os",
    "tensorflow.python.ConfigProto",
    "tensorflow.python.GPUOptions",
    "tensorflow.python.training.server_lib.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.RunConfig.is_chief": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.RunConfig.job_name": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config._count_ps": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config._get_master": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.run_config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.evaluable.Evaluable",
    "tensorflow.contrib.learn.python.learn.trainable.Trainable"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.estimators.estimator.Estimator",
    "tensorflow.contrib.learn.python.learn.estimators.linear.sdca_classifier_model_fn",
    "tensorflow.contrib.learn.python.learn.estimators.svm.tempfile",
    "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.bias_": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.evaluate": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "tensorflow.contrib.layers.python.layers.target_column.get_default_binary_metrics_for_eval",
    "tensorflow.contrib.learn.python.learn.estimators.linear._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._LOGISTIC",
    "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.linear._wrap_metric",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.metrics",
    "tensorflow.contrib.metrics.items",
    "tensorflow.contrib.metrics.streaming_accuracy",
    "tensorflow.contrib.metrics.update",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.export": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.export.default_input_fn": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.parse_feature_columns_from_examples"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.fit": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.get_variable_names": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.list_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.predict": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.linear._CLASSES",
    "tensorflow.contrib.learn.python.learn.estimators.svm._as_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.predict_proba": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.linear._PROBABILITIES",
    "tensorflow.contrib.learn.python.learn.estimators.svm._as_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.SVM.weights_": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len",
    "list",
    "property",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.list_variables",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm._as_iterable": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm._get_metric_args": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "hasattr",
    "tensorflow.contrib.learn.python.learn.estimators.svm.inspect"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.evaluable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.evaluable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.linear": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.linear"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.metric_spec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.metrics_lib": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.sdca_optimizer": {
  "data": {
   "shadows": "tensorflow.contrib.linear_optimizer.python.sdca_optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.target_column": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.target_column"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm.trainable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.trainable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testBucketizedFeatures": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testBucketizedFeatures.input_fn": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testMixedFeatures": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.bucketized_column",
    "tensorflow.contrib.layers.crossed_column",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testMixedFeatures.input_fn": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testMultiDimensionalRealValuedFeaturesWithL2Regularization": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testMultiDimensionalRealValuedFeaturesWithL2Regularization.input_fn": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesPerfectlySeparable": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesPerfectlySeparable.input_fn": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesWithBigL1Regularization": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesWithBigL1Regularization.input_fn": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesWithL2Regularization": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesWithL2Regularization.input_fn": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesWithMildL1Regularization": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testRealValuedFeaturesWithMildL1Regularization.input_fn": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testSparseFeatures": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.layers.sparse_column_with_hash_bucket",
    "tensorflow.contrib.learn.SVM"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.SVMTest.testSparseFeatures.input_fn": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.svm_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature.__new__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature.get_feature_spec": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature.get_placeholder": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.array_ops.sparse_placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature.is_compatible_with": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "_shape_is_compatible_0dim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature.is_compatible_with._shape_is_compatible_0dim": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_example_parser_from_signatures": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.parsing_ops.parse_example"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_placeholders_from_signatures": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testSparseTensorCompatible": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.SparseTensor",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testSparseTensorSignaturePlaceholders": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_placeholders_from_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testTensorPlaceholderNone": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_placeholders_from_signatures"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testTensorSignatureCompatible": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testTensorSignatureExampleParserDict": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_example_parser_from_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible",
    "tensorflow.float64",
    "tensorflow.int32",
    "tensorflow.placeholder",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testTensorSignatureExampleParserSingle": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_example_parser_from_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible",
    "tensorflow.int32",
    "tensorflow.placeholder",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testTensorSignatureNone": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testTensorSignaturePlaceholders": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_placeholders_from_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible",
    "tensorflow.int32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.TensorSignatureTest.testUnknownShape": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
    "tensorflow.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible",
    "tensorflow.int32",
    "tensorflow.placeholder",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.tensor_signature": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.tensor_signature"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.estimators.tensor_signature_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.evaluable": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.evaluable.Evaluable": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.learn.python.learn.evaluable.abc"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.evaluable.Evaluable.evaluate": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.learn.python.learn.evaluable.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.evaluable.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.evaluable.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.evaluable.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.evaluable.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.evaluate": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.graph_actions.evaluate"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.evaluable.Evaluable",
    "tensorflow.contrib.learn.python.learn.experiment.Experiment",
    "tensorflow.contrib.learn.python.learn.trainable.Trainable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment._continuous_eval": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError",
    "tensorflow.contrib.learn.python.learn.experiment.time",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment._start_server": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.training.server_lib.Server"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.continuous_eval": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.continuous_eval_on_train_data": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.estimator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.evaluate": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.experiment.time",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.local_run": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_new_attr_context",
    "tensorflow.contrib.framework.deprecated"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.run_std_server": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.test": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.train": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "min",
    "tensorflow.contrib.learn.python.learn.experiment.time",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.Experiment.train_and_evaluate": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "_new_attr_context",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.NotFittedError": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.NotFittedError"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.experiment._new_attr_context": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "getattr",
    "setattr",
    "tensorflow.contrib.learn.python.learn.experiment.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.experiment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.evaluable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.evaluable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.monitors": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.server_lib": {
  "data": {
   "shadows": "tensorflow.python.training.server_lib"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.experiment.trainable": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.trainable"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.graph_actions"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._SUMMARY_WRITERS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._eval_results_to_str": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._get_first_op_from_collection": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._get_local_init_op": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions._get_first_op_from_collection",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_INIT_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.data_flow_ops.initialize_all_tables",
    "tensorflow.python.ops.variables.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._get_ready_op": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions._get_first_op_from_collection",
    "tensorflow.python.framework.ops.GraphKeys.READY_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.variables.report_uninitialized_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._get_saver": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions._get_first_op_from_collection",
    "tensorflow.python.framework.ops.GraphKeys.SAVERS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._make_saver": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "feed_fn",
    "isinstance",
    "list",
    "tensorflow.contrib.framework.python.ops.variables.assert_or_get_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.NanTensorHook",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.contrib.learn.python.learn.monitored_session.WorkerSessionCreator",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._restore_from_checkpoint": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions._make_saver",
    "tensorflow.python.client.session",
    "tensorflow.python.platform.gfile.Glob",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.restore"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._run_with_monitors": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "set",
    "tensorflow.contrib.learn.python.learn.monitors",
    "tensorflow.python.client.session.run",
    "tensorflow.python.framework.ops.Tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._summary_writer_lock": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._train_internal": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "BaseException",
    "StopIteration",
    "ValueError",
    "feed_fn",
    "float",
    "get_current_step",
    "numpy.isnan",
    "six.reraise",
    "str",
    "tensorflow.contrib.framework.python.ops.variables.assert_or_get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions._make_saver",
    "tensorflow.contrib.learn.python.learn.graph_actions._run_with_monitors",
    "tensorflow.contrib.learn.python.learn.graph_actions.get_summary_writer",
    "tensorflow.contrib.learn.python.learn.graph_actions.sys",
    "tensorflow.contrib.learn.python.learn.graph_actions.time",
    "tensorflow.contrib.learn.python.learn.monitors",
    "tensorflow.contrib.learn.python.learn.monitors.NanLossDuringTrainingError",
    "tensorflow.contrib.learn.python.learn.monitors.get_default_monitors",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable",
    "tensorflow.python.client.session",
    "tensorflow.python.client.session.run",
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.ops.logging_ops.get_summary_op",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warn",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.supervisor",
    "tensorflow.python.training.supervisor.PrepareSession",
    "tensorflow.python.training.supervisor.ShouldStop",
    "tensorflow.python.training.supervisor.StartQueueRunners",
    "tensorflow.python.training.supervisor.Stop",
    "tensorflow.python.training.supervisor.Supervisor",
    "tensorflow.python.training.supervisor.Supervisor.USE_DEFAULT",
    "tensorflow.python.training.supervisor.save_path",
    "tensorflow.python.training.supervisor.saver.save"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions._write_summary_results": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.float32",
    "tensorflow.contrib.learn.python.learn.graph_actions._eval_results_to_str",
    "tensorflow.contrib.learn.python.learn.graph_actions.get_summary_writer",
    "tensorflow.core.framework.summary_pb2.Summary",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.basic_session_run_hooks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.basic_session_run_hooks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.clear_summary_writers": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.clear"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.contrib_ops": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.coordinator": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.evaluate": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "RuntimeError",
    "StopIteration",
    "ValueError",
    "feed_fn",
    "float",
    "str",
    "tensorflow.contrib.framework.python.ops.variables.assert_or_get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions._eval_results_to_str",
    "tensorflow.contrib.learn.python.learn.graph_actions._get_local_init_op",
    "tensorflow.contrib.learn.python.learn.graph_actions._get_ready_op",
    "tensorflow.contrib.learn.python.learn.graph_actions._get_saver",
    "tensorflow.contrib.learn.python.learn.graph_actions._restore_from_checkpoint",
    "tensorflow.contrib.learn.python.learn.graph_actions._write_summary_results",
    "tensorflow.contrib.learn.python.learn.graph_actions.time",
    "tensorflow.python.client.session",
    "tensorflow.python.client.session.close",
    "tensorflow.python.client.session.run",
    "tensorflow.python.framework.errors.CancelledError",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.ops.variables.initialize_all_variables",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warn",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.coordinator.Coordinator",
    "tensorflow.python.training.queue_runner.start_queue_runners",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.session_manager",
    "tensorflow.python.training.session_manager.SessionManager",
    "tensorflow.python.training.session_manager.recover_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.get_summary_writer": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.infer": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.monitored_session": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitored_session"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.monitors_lib": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds_iter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds_iter": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.python.ops.ops.get_graph_from_inputs",
    "tensorflow.contrib.learn.python.learn.graph_actions._restore_from_checkpoint",
    "tensorflow.python.client.session",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.client.session.run",
    "tensorflow.python.ops.data_flow_ops.initialize_all_tables",
    "tensorflow.python.ops.variables.initialize_all_variables",
    "tensorflow.python.ops.variables.initialize_local_variables",
    "tensorflow.python.training.coordinator.Coordinator",
    "tensorflow.python.training.queue_runner.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.run_n": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "run_feeds",
    "tensorflow.contrib.learn.python.learn.graph_actions.itertools"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.session_manager_lib": {
  "data": {
   "shadows": "tensorflow.python.training.session_manager"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.summary_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.summary_writer_cache": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.summary_writer_cache"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.tf_session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.tf_supervisor": {
  "data": {
   "shadows": "tensorflow.python.training.supervisor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.train": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "_train_internal",
    "feed_fn",
    "tensorflow.contrib.learn.python.learn.monitors",
    "tensorflow.python.framework.errors.AbortedError",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.graph_actions.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.infer": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.graph_actions.infer"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.io": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.HAS_DASK": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.dask_io.HAS_DASK"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.HAS_PANDAS": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.HAS_PANDAS"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.HAS_DASK": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io._add_to_index": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io._construct_dask_df_with_divisions": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "isinstance",
    "range",
    "tensorflow.contrib.learn.python.learn.learn_io.dask_io._add_to_index",
    "tensorflow.contrib.learn.python.learn.learn_io.dask_io._get_divisions",
    "toolz.merge"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io._get_divisions": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.allowed_classes": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.extract_dask_data": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.learn_io.dask_io._construct_dask_df_with_divisions",
    "tensorflow.contrib.learn.python.learn.learn_io.dask_io.allowed_classes"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.extract_dask_labels": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "isinstance",
    "len",
    "tensorflow.contrib.learn.python.learn.learn_io.dask_io._construct_dask_df_with_divisions",
    "tensorflow.contrib.learn.python.learn.learn_io.dask_io.allowed_classes"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.merge": {
  "data": {
   "shadows": "toolz.merge"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.dask_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DaskDataFeeder": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DaskDataFeeder.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "dask.dataframe.multi.concat",
    "float",
    "isinstance",
    "len",
    "list",
    "str",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._check_dtype",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._get_in_out_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DaskDataFeeder.get_feed_dict_fn": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DaskDataFeeder.get_feed_dict_fn._feed_dict_fn": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "extract_pandas_matrix",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DaskDataFeeder.get_feed_params": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.int64",
    "numpy.random.RandomState",
    "range",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._check_dtype",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._get_in_out_shape",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.check_array"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.batch_size": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.get_feed_dict_fn": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.get_feed_dict_fn._feed_dict_fn": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "int",
    "len",
    "min",
    "numpy.array",
    "numpy.zeros",
    "six.moves.xrange",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._access",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.get_feed_params": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.input_builder": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.ops.array_ops.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.input_dtype": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.make_epoch_variable": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.output_dtype": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.set_placeholders": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.shuffle": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.x": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder.y": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.StreamingDataFeeder": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.StreamingDataFeeder.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.dtype",
    "numpy.float32",
    "numpy.ndarray",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._check_dtype",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._get_in_out_shape",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.itertools",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.six",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.StreamingDataFeeder.get_feed_dict_fn": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.StreamingDataFeeder.get_feed_dict_fn._feed_dict_fn": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "len",
    "numpy.zeros",
    "six.moves.xrange",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.StreamingDataFeeder.get_feed_params": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._access": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._batch_data": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._check_dtype": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._data_type_filter": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "extract_dask_data",
    "extract_dask_labels",
    "extract_pandas_data",
    "extract_pandas_labels"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._get_in_out_shape": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._is_iterable": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.check_array": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_predict_data_feeder": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "extract_dask_data",
    "extract_pandas_data",
    "float",
    "int",
    "len",
    "numpy.reshape",
    "six.moves.xrange",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._batch_data",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._is_iterable",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_processor_data_feeder": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "extract_pandas_matrix"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "StreamingDataFeeder",
    "ValueError",
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "data_feeder_cls",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._data_type_filter",
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder._is_iterable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.extract_dask_data": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.dask_io.extract_dask_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.extract_dask_labels": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.dask_io.extract_dask_labels"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.extract_pandas_data": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.extract_pandas_labels": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_labels"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.extract_pandas_matrix": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_matrix"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.KEY_FEATURE_NAME": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.input_ops": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.queue_parsed_features": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "range",
    "sorted",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors.CancelledError",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_batch_examples": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "read_keyed_batch_examples"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_batch_features": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "parse_fn",
    "reader",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_batch_record_features": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_batch_features",
    "tensorflow.python.ops.io_ops.TFRecordReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_examples": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "isinstance",
    "list",
    "max",
    "parse_fn",
    "range",
    "reader",
    "sorted",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io.KEY_FEATURE_NAME",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.platform.gfile.Glob",
    "tensorflow.python.training.input.batch_join",
    "tensorflow.python.training.input.shuffle_batch_join",
    "tensorflow.python.training.input.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_features": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "parse_fn",
    "queue_parsed_features",
    "reader",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_examples",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.parsing_ops.parse_example",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest._create_sorted_temp_files": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.os",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.tempfile",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest._create_temp_file": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.os",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.tempfile",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest._mock_glob": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._FILE_NAMES",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._INVALID_FILE_PATTERN",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._VALID_FILE_PATTERN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.random",
    "tensorflow.python.platform.gfile.Glob"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.tearDown": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest",
    "tensorflow.python.platform.gfile.Glob"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_batch_randomized": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "set",
    "tensorflow.Graph",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.learn.io.read_batch_examples",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._FILE_NAMES",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._VALID_FILE_PATTERN",
    "tensorflow.python.framework.test_util.assert_ops_in_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_batch_record_features": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.FixedLenFeature",
    "tensorflow.Graph",
    "tensorflow.contrib.learn.io.read_batch_record_features",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._FILE_NAMES",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._VALID_FILE_PATTERN",
    "tensorflow.float32",
    "tensorflow.python.framework.test_util.assert_ops_in_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_batch_text_lines": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.TextLineReader",
    "tensorflow.contrib.learn.io.read_batch_examples",
    "tensorflow.initialize_local_variables",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.platform.gfile.Glob",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_dequeue_batch_value_errors": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.learn.io.read_batch_examples",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._INVALID_FILE_PATTERN",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._VALID_FILE_PATTERN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_keyed_parse_json": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "tensorflow.FixedLenFeature",
    "tensorflow.Graph",
    "tensorflow.TextLineReader",
    "tensorflow.contrib.learn.io.read_keyed_batch_examples",
    "tensorflow.decode_json_example",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.parse_single_example",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.platform.gfile.Glob",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_keyed_read_text_lines": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.TextLineReader",
    "tensorflow.contrib.learn.io.read_keyed_batch_examples",
    "tensorflow.initialize_local_variables",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.platform.gfile.Glob",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_one_epoch": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "set",
    "tensorflow.Graph",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.learn.io.read_batch_examples",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._FILE_NAMES",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._VALID_FILE_PATTERN",
    "tensorflow.python.framework.test_util.assert_ops_in_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_read_text_lines": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.TextLineReader",
    "tensorflow.contrib.learn.io.read_batch_examples",
    "tensorflow.initialize_local_variables",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.platform.gfile.Glob",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.GraphIOTest.test_read_text_lines_multifile": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.TextLineReader",
    "tensorflow.contrib.learn.io.read_batch_examples",
    "tensorflow.initialize_local_variables",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.platform.gfile.Glob",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._FILE_NAMES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._INVALID_FILE_PATTERN": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test._VALID_FILE_PATTERN": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.graph_io_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.HAS_PANDAS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.PANDAS_DTYPES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "str",
    "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.PANDAS_DTYPES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_labels": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "str",
    "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.PANDAS_DTYPES"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_matrix": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.pandas_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.queue_parsed_features": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.graph_io.queue_parsed_features"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.read_batch_examples": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_batch_examples"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.read_batch_features": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_batch_features"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.read_batch_record_features": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_batch_record_features"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.read_keyed_batch_examples": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_examples"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_io.read_keyed_batch_features": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_features"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner.Experiment": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.experiment.Experiment"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner._get_default_schedule": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.learn_runner._is_distributed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner._is_distributed": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.learn_runner.run": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_get_default_schedule",
    "callable",
    "experiment_fn",
    "getattr",
    "hasattr",
    "isinstance",
    "task",
    "tensorflow.contrib.learn.python.learn.experiment.Experiment",
    "tensorflow.python.platform.tf_logging.error",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.__str__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.create_metric_ops": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_get_dict",
    "tensorflow.python.platform.tf_logging.error"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.create_metric_ops._get_dict": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.label_key": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.metric_fn": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.prediction_key": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec.weight_key": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.metric_spec.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.models"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models._reverse_seq": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "list",
    "reversed",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reverse_sequence",
    "tensorflow.python.ops.array_ops.unpack"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.array_ops_": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.bidirectional_rnn": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "tensorflow.contrib.learn.python.learn.models._reverse_seq",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.nn.rnn",
    "tensorflow.python.ops.nn.rnn_cell.RNNCell",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.contrib_rnn": {
  "data": {
   "shadows": "tensorflow.contrib.rnn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.get_rnn_model": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.get_rnn_model.rnn_estimator": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "cell_fn",
    "input_op_fn",
    "target_predictor_fn",
    "tensorflow.contrib.learn.python.learn.models.bidirectional_rnn",
    "tensorflow.contrib.learn.python.learn.models.functools",
    "tensorflow.contrib.rnn.AttentionCellWrapper",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.nn.rnn",
    "tensorflow.python.ops.nn.rnn_cell.BasicLSTMCell",
    "tensorflow.python.ops.nn.rnn_cell.BasicRNNCell",
    "tensorflow.python.ops.nn.rnn_cell.GRUCell",
    "tensorflow.python.ops.nn.rnn_cell.MultiRNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.linear_regression": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.learn.python.learn.ops.losses_ops.mean_squared_error_regressor",
    "tensorflow.python.ops.init_ops.random_normal_initializer",
    "tensorflow.python.ops.logging_ops.histogram_summary",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.linear_regression_zero_init": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "linear_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.logistic_regression": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "KeyError",
    "tensorflow.contrib.learn.python.learn.ops.losses_ops.softmax_classifier",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.init_ops.random_normal_initializer",
    "tensorflow.python.ops.logging_ops.histogram_summary",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.logistic_regression_zero_init": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "logistic_regression"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.models.losses_ops": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.ops.losses_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.models.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session.SessionCreator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator._get_session_manager": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.training.session_manager.SessionManager"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator.create_session": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession._CoordinatedSessionCreator": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession._CoordinatedSessionCreator.__init__": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession._CoordinatedSessionCreator.create_session": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "_CoordinatedSession",
    "_HookedSession",
    "tensorflow.python.training.coordinator.Coordinator",
    "tensorflow.python.training.queue_runner.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession.__enter__": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession.__exit__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "StopIteration",
    "tensorflow.python.framework.errors.OutOfRangeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "_RecoverableSession",
    "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession._close_internal": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession._is_closed": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession.close": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession.graph": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession.run": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession.should_stop": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "init_fn",
    "tensorflow.python.training.saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold._default_local_init_op": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.data_flow_ops.initialize_all_tables",
    "tensorflow.python.ops.variables.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold._get_or_default": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "RuntimeError",
    "default_constructor",
    "len",
    "staticmethod",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.finalize": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.python.framework.ops.GraphKeys.INIT_OP",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_INIT_OP",
    "tensorflow.python.framework.ops.GraphKeys.READY_OP",
    "tensorflow.python.framework.ops.GraphKeys.SAVERS",
    "tensorflow.python.framework.ops.GraphKeys.SUMMARY_OP",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.logging_ops.merge_all_summaries",
    "tensorflow.python.ops.variables.initialize_all_variables",
    "tensorflow.python.ops.variables.report_uninitialized_variables",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.init_feed_dict": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.init_fn": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.init_op": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.local_init_op": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.ready_op": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.saver": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold.summary_op": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.SessionCreator": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.SessionCreator.create_session": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.learn.python.learn.monitored_session.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.WorkerSessionCreator": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session.SessionCreator"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.WorkerSessionCreator.__init__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.WorkerSessionCreator._get_session_manager": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.training.session_manager.SessionManager"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.WorkerSessionCreator.create_session": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession._check_stop": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession.close": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession._call_hook_before_run": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession._check_stop": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession._raise_if_feeds_intersects": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "RuntimeError",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession.run": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunContext",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunValues"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._RecoverableSession": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._RecoverableSession.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._RecoverableSession.run": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.AbortedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.__init__": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession._check_stop": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.close": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.graph": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.run": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.sess_str": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.should_stop": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.coordinator": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.session_run_hook": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.sm": {
  "data": {
   "shadows": "tensorflow.python.training.session_manager"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.training_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitored_session.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor._lock_estimator": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor._unlock_estimator": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.begin": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.end": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.epoch_begin": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.epoch_end": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.post_step": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.run_on_all_workers": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.set_estimator": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.step_begin": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.step_end": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable.__init__": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable.every_n_step_begin": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable.every_n_step_end": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable",
    "tensorflow.contrib.learn.python.learn.monitors._extract_output"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable.values": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver.__init__": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver",
    "tensorflow.contrib.learn.python.learn.monitors.os",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver._save": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.time",
    "tensorflow.core.util.event_pb2.SessionLog",
    "tensorflow.core.util.event_pb2.SessionLog.CHECKPOINT",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver.begin": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver.end": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver.post_step": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver",
    "tensorflow.contrib.learn.python.learn.monitors.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver.step_begin": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.end": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.every_n_post_step": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.every_n_step_begin": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.every_n_step_end": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.post_step": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.step_begin": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.EveryN.step_end": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor.__init__": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor.end": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "RuntimeError",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver.latest_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor.every_n_step_end": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "RuntimeError",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor.export_dir": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor.exports_to_keep": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor.last_export_dir": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ExportMonitor.signature_fn": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.GraphDump": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.GraphDump.__init__": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.GraphDump"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.GraphDump.begin": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "KeyError",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.GraphDump",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.GraphDump.compare": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.allclose",
    "numpy.ndarray",
    "str",
    "tensorflow.contrib.learn.python.learn.monitors._extract_output"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.GraphDump.data": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.GraphDump.step_begin": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.GraphDump"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.GraphDump.step_end": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.GraphDump"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable.__init__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable.every_n_step_begin": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "list",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable.every_n_step_end": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "str",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable",
    "tensorflow.contrib.learn.python.learn.monitors._extract_output",
    "tensorflow.contrib.learn.python.learn.monitors.six",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.NanLoss": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.NanLoss.__init__": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.NanLoss"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.NanLoss.every_n_step_begin": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.NanLoss"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.NanLoss.every_n_step_end": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "numpy.isnan",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.NanLoss",
    "tensorflow.contrib.learn.python.learn.monitors.NanLossDuringTrainingError",
    "tensorflow.contrib.learn.python.learn.monitors._extract_output",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.NanLossDuringTrainingError": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.NanLossDuringTrainingError.__str__": {
  "data": {
   "lineno": 1140
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.PrintTensor": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.PrintTensor.__init__": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.PrintTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.PrintTensor.every_n_step_begin": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "list",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.PrintTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.PrintTensor.every_n_step_end": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "str",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.PrintTensor",
    "tensorflow.contrib.learn.python.learn.monitors._extract_output",
    "tensorflow.contrib.learn.python.learn.monitors.six",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors.__init__": {
  "data": {
   "lineno": 1184
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors.after_run": {
  "data": {
   "lineno": 1211
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors.before_run": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "ValueError",
    "_as_graph_element",
    "dict",
    "isinstance",
    "list",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors.begin": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors.end": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.inspect"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SessionLog": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2.SessionLog"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StepCounter": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StepCounter.__init__": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.StepCounter",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StepCounter.every_n_step_end": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.time",
    "tensorflow.core.framework.summary_pb2.Summary",
    "tensorflow.core.framework.summary_pb2.Summary.Value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StepCounter.set_estimator": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.StepCounter",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StopAtStep": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StopAtStep.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.StopAtStep"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StopAtStep.run_on_all_workers": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StopAtStep.step_begin": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.StopAtStep"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.StopAtStep.step_end": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.StopAtStep"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.Summary": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2.Summary"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SummarySaver": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SummarySaver.__init__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.SummarySaver",
    "tensorflow.python.training.summary_io.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SummarySaver.end": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.SummarySaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SummarySaver.every_n_step_begin": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.SummarySaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SummarySaver.every_n_step_end": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.SummarySaver",
    "tensorflow.contrib.learn.python.learn.monitors._extract_output"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SummarySaver.set_estimator": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.SummarySaver",
    "tensorflow.python.training.summary_io.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.SummaryWriterCache": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor.best_step": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor.best_value": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor.early_stopped": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor.every_n_step_end": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "str",
    "super",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor",
    "tensorflow.python.platform.tf_logging.debug",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver.latest_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors._as_graph_element": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "hasattr",
    "isinstance",
    "tensorflow.contrib.learn.python.learn.monitors.six",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors._extract_output": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.get_default_monitors": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.PrintTensor",
    "tensorflow.contrib.learn.python.learn.monitors.SummarySaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.monitors.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.saver_lib": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.session_run_hook": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.summary_io": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.monitors.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops.array_ops_": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops.one_hot_matrix": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.array_ops_": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.deprecation.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.dnn": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "activation",
    "enumerate",
    "tensorflow.contrib.framework.python.framework.deprecation.deprecated",
    "tensorflow.contrib.layers.legacy_fully_connected",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.nn.relu",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.dnn_ops.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.array_ops_": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.categorical_variable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.embedding_lookup",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.embedding_lookup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.nn.embedding_lookup"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.embeddings_ops.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.array_ops_": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.loss_ops": {
  "data": {
   "shadows": "tensorflow.contrib.losses.python.losses.loss_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.mean_squared_error_regressor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.losses.python.losses.loss_ops.sum_of_squares",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.nn.xw_plus_b"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.losses_ops.softmax_classifier": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.python.losses.loss_ops.softmax_cross_entropy",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.nn.softmax",
    "tensorflow.python.ops.nn.xw_plus_b"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.array_ops_": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.rnn_decoder": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "cell",
    "enumerate",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.rnn_seq2seq": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.rnn_decoder",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.nn.rnn",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.seq2seq_inputs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.unpack",
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.sequence_classifier": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.nn.softmax",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.seq2seq_ops.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.OpsTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.OpsTest.test_categorical_variable": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.transpose",
    "tensorflow.contrib.learn.python.learn.ops.categorical_variable",
    "tensorflow.initialize_all_variables",
    "tensorflow.int64",
    "tensorflow.placeholder",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.OpsTest.test_embedding_lookup": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "tensorflow.contrib.learn.python.learn.ops.embedding_lookup"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.OpsTest.test_one_hot_matrix": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.ops.one_hot_matrix",
    "tensorflow.int64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.OpsTest.test_softmax_classifier": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.ops.softmax_classifier",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.conv2d": {
  "data": {
   "shadows": "tensorflow.contrib.layers.conv2d"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.ops": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.ops_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.Seq2SeqOpsTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.Seq2SeqOpsTest.test_rnn_decoder": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.contrib.learn.python.learn.ops.rnn_decoder",
    "tensorflow.float32",
    "tensorflow.nn.rnn_cell.GRUCell",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.Seq2SeqOpsTest.test_seq2seq_inputs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.swapaxes",
    "tensorflow.contrib.learn.python.learn.ops.seq2seq_inputs",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.Seq2SeqOpsTest.test_sequence_classifier": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.learn.python.learn.ops.sequence_classifier",
    "tensorflow.float32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.ops": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.ops.tests.seq2seq_ops_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor.fit": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "isinstance",
    "numpy.nan",
    "setup_processor_data_feeder",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor.fit_transform": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor.freeze": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor.transform": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "isinstance",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "setup_processor_data_feeder",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary.__len__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary.add": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary.freeze": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary.get": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary.reverse": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary.trim": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sorted",
    "str",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.CategoricalTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.CategoricalTest.testMultiCategoricalProcessor": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.CategoricalTest.testSingleCategoricalProcessor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.nan",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.CategoricalTest.testSingleCategoricalProcessorPandasSingleDF": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "tensorflow.contrib.learn.python.learn.learn_io.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.HAS_PANDAS": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.HAS_PANDAS"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.categorical": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.preprocessing.categorical"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.CategoricalVocabularyTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.CategoricalVocabularyTest.testCountsTrim": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.CategoricalVocabularyTest.testIntVocabulary": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "len",
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.CategoricalVocabularyTest.testWordVocabulary": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.categorical_vocabulary": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.preprocessing.categorical_vocabulary"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.categorical_vocabulary_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.CategoricalVocabulary": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.preprocessing.CategoricalVocabulary"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.TextTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.TextTest.testByteProcessor": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.ByteProcessor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.TextTest.testExistingVocabularyProcessor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.preprocessing.CategoricalVocabulary",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.TextTest.testTokenizer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.tokenizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.TextTest.testVocabularyProcessor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.TextTest.testVocabularyProcessorSaveRestore": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.restore",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.text": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.preprocessing.text"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.tests.text_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.re"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.ByteProcessor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.ByteProcessor.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.ByteProcessor.fit": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.ByteProcessor.fit_transform": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.ByteProcessor.reverse": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "numpy.int8",
    "numpy.trim_zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.ByteProcessor.transform": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "buffer_or_memoryview",
    "isinstance",
    "len",
    "memoryview",
    "numpy.frombuffer",
    "numpy.pad",
    "numpy.uint8",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.TOKENIZER_RE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "CategoricalVocabulary",
    "tensorflow.contrib.learn.python.learn.preprocessing.text.tokenizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.fit": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.fit_transform": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.restore": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "cPickle.loads",
    "classmethod",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.reverse": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.save": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "cPickle.dumps",
    "tensorflow.python.platform.gfile.Open"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor.transform": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "enumerate",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.preprocessing.text.tokenizer": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.preprocessing.text.TOKENIZER_RE"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.run_feeds": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.run_n": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.graph_actions.run_n"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs.__new__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunContext": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunContext.__init__": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunContext.original_args": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunContext.request_stop": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunContext.session": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunContext.stop_requested": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook.after_run": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook.before_run": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook.begin": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook.end": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunValues": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.session_run_hook.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.threading"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.clear": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.training.summary_io.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.clear_summary_writers": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.get_summary_writer": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.summary_io": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.summary_writer_cache.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testBoston": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.LinearRegressor",
    "tensorflow.contrib.learn.python.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.base_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIris": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIrisAllVariables": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIrisContinueTraining": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIrisStreaming": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "iris_data",
    "iris_predict_data",
    "iris_target",
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIrisStreaming.iris_data": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIrisStreaming.iris_predict_data": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIrisStreaming.iris_target": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIrisSummaries": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.base_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testIris_proba": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.log_loss",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.base_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testOneDim": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.contrib.learn.python.learn.LinearRegressor",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.base_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.BaseTest.testUnfitted": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.TensorFlowEstimator",
    "tensorflow.contrib.learn.python.learn.estimators.base.NotFittedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.accuracy_score": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.base": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators.base"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.datasets": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.log_loss": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.log_loss"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.mean_squared_error": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.base_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.setUp": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.tearDown": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.test_raise_in_both_secs_and_steps": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.test_raise_in_none_secs_and_steps": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.test_save_saves_at_end": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.test_save_secs_saves_in_first_step": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.test_save_secs_saves_periodically": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.test_save_steps_saves_in_first_step": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.CheckpointSaverHookTest.test_save_steps_saves_periodically": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.LoggingTensorHookTest": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.LoggingTensorHookTest.setUp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.LoggingTensorHookTest.setUp.mock_log": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.LoggingTensorHookTest.tearDown": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.LoggingTensorHookTest.test_print": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "range",
    "str",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StepCounterHookTest": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StepCounterHookTest.setUp": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StepCounterHookTest.tearDown": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StepCounterHookTest.test_step_counter": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.time",
    "tensorflow.contrib.testing.FakeSummaryWriter",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StopAtStepTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StopAtStepTest.test_raise_in_both_last_step_and_num_steps": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StopAtStepTest.test_stop_based_on_last_step": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.assign",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.StopAtStepTest.test_stop_based_on_num_step": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.assign",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.SummarySaverHookTest": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.SummarySaverHookTest.test_summary_saver": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.Variable",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.testing.FakeSummaryWriter",
    "tensorflow.initialize_all_variables",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.basic_session_run_hooks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.basic_session_run_hooks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.monitored_session": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitored_session"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.testing": {
  "data": {
   "shadows": "tensorflow.contrib.testing"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.basic_session_run_hooks_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest._assert_dtype": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest._assert_raises": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_dask_data_feeder": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dict",
    "feed_dict_fn",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_data_feeder_multioutput_classification": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "feed_dict_fn",
    "numpy.array",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_data_feeder_multioutput_regression": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "feed_dict_fn",
    "numpy.array",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_data_feeder_regression": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "feed_dict_fn",
    "numpy.array",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_epoch": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "feed_dict_fn",
    "numpy.array",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_hdf5_data_feeder": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ImportError",
    "feed_dict_fn",
    "numpy.array",
    "numpy.matrix",
    "print",
    "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.h5py"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_bool": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool",
    "six.moves.xrange",
    "tensorflow.bool"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_float16": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.matrix",
    "tensorflow.float16"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_float32": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.matrix",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_float64": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.matrix",
    "tensorflow.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_int16": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.matrix",
    "tensorflow.int16"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_int32": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.matrix",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_int64": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.matrix",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_int8": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.matrix",
    "tensorflow.int8"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_string": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.array",
    "six.moves.xrange",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_uint16": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.uint16",
    "tensorflow.uint16"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_uint32": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_uint64": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_input_uint8": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.uint8",
    "tensorflow.uint8"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_streaming_data_feeder": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "feed_dict_fn",
    "x_iter",
    "y_iter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_streaming_data_feeder.x_iter": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_streaming_data_feeder.y_iter": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.DataFeederTest.test_unsupervised": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "feed_dict_fn",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.SetupPredictDataFeederTest": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.SetupPredictDataFeederTest.test_iterable_data": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "iter",
    "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.data_feeder_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.DifferenceTestCase": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.DifferenceTestCase.testDifference": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_pandas",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.HAS_PANDAS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.HAS_PANDAS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.SumTestCase": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.SumTestCase.testSum": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_pandas",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.HAS_PANDAS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.df": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.arithmetic_transform_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.BatchTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.BatchTestCase.testBatch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "batcher",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch.Batch",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.batch": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.batch"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.in_memory_source": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.batch_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dir",
    "len",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.BINARY_TRANSFORMS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.BinaryTransformTestCase",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.TEST_NAME_PREFIX",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.test_methods",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.BINARY_TRANSFORMS": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.binary_transforms.BINARY_TRANSFORMS"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.BinaryTransformTestCase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.BinaryTransformTestCase.add_test_case": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "classmethod",
    "op.__name__",
    "setattr",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.TEST_NAME_PREFIX"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.BinaryTransformTestCase.add_test_case._test": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "len",
    "numpy.arange",
    "numpy.testing.assert_almost_equal",
    "op",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_numpy",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.NUMPY_ARRAY_SIZE",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.SCALAR",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.NUMPY_ARRAY_SIZE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.SCALAR": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.TEST_NAME_PREFIX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.df": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.test_methods": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.binary_transform_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.BooleanMaskTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.BooleanMaskTestCase.testDense": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.BooleanMaskTestCase.testSparse": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "list",
    "max",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal",
    "range",
    "tensorflow.SparseTensor",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.mocks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.boolean_mask_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.CSVParserTestCase": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.CSVParserTestCase.testParse": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "parser",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser.CSVParser",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.string",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.csv_parser": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.csv_parser"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.mocks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.csv_parser_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_build": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_create": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "frozenset",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_del_item_column": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "frozenset",
    "len",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_exclude_columns": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "frozenset",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_get_item": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_select_columns": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "frozenset",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_set_item_column": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_set_item_column_multi": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_set_item_numpy": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.DataFrameTest.test_set_item_pandas": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.mocks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.setup_test_df": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.DataFrame",
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.dataframe_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.EstimatorUtilsTest": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.EstimatorUtilsTest.test_to_estimator_not_disjoint": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.setup_test_df_3layer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.EstimatorUtilsTest.test_to_estimator_not_disjoint.get_not_disjoint": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "input_fn",
    "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.to_feature_columns_and_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.EstimatorUtilsTest.test_to_feature_columns_and_input_fn": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "input_fn",
    "len",
    "sorted",
    "tensorflow.FixedLenFeature",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.layers.feature_column.DataFrameColumn",
    "tensorflow.contrib.learn.python.learn.PredefinedSeries",
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.to_feature_columns_and_input_fn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.setup_test_df_3layer",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32",
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.EstimatorUtilsTest.test_to_feature_columns_and_input_fn_no_targets": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "input_fn",
    "len",
    "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils.to_feature_columns_and_input_fn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.setup_test_df_3layer",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.estimator_utils": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.estimator_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.feature_column": {
  "data": {
   "shadows": "tensorflow.contrib.layers.feature_column"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.mocks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.setup_test_df": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.DataFrame",
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.setup_test_df_3layer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.DataFrame",
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.estimator_utils_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.ExampleParserTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.ExampleParserTestCase.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "google.protobuf.text_format.Parse",
    "list",
    "numpy.array",
    "super",
    "tensorflow.FixedLenFeature",
    "tensorflow.VarLenFeature",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.ExampleParserTestCase",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.core.example.example_pb2.Example",
    "tensorflow.int64",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.ExampleParserTestCase.testParseWithDictDefinition": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "parser",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.ExampleParserTestCase.testParseWithTupleDefinition": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "parser",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser.ExampleParser"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.example_parser": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.example_parser"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.example_pb2": {
  "data": {
   "shadows": "tensorflow.core.example.example_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.mocks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.example_parser_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.HAS_PANDAS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test._FeedingFunctionsTestCase": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test._FeedingFunctionsTestCase.testArrayFeedFnBatchFive": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "aff",
    "numpy.arange",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._ArrayFeedFn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.vals_to_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test._FeedingFunctionsTestCase.testArrayFeedFnBatchOne": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "aff",
    "numpy.arange",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._ArrayFeedFn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.vals_to_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test._FeedingFunctionsTestCase.testArrayFeedFnBatchOneHundred": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "aff",
    "list",
    "numpy.arange",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._ArrayFeedFn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.vals_to_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test._FeedingFunctionsTestCase.testPandasFeedFnBatchFive": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "aff",
    "numpy.arange",
    "pandas.DataFrame",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._PandasFeedFn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.vals_to_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test._FeedingFunctionsTestCase.testPandasFeedFnBatchOne": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "aff",
    "numpy.arange",
    "pandas.DataFrame",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._PandasFeedFn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.vals_to_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test._FeedingFunctionsTestCase.testPandasFeedFnBatchOneHundred": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "aff",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions._PandasFeedFn",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.vals_to_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.ff": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_functions_test.vals_to_list": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.FeedingQueueRunnerTestCase": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.FeedingQueueRunnerTestCase.testArrayFeeding": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.enqueue_data",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.get_rows",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.FeedingQueueRunnerTestCase.testArrayFeedingMultiThread": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.enqueue_data",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.get_rows",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.FeedingQueueRunnerTestCase.testPandasFeeding": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.enqueue_data",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.HAS_PANDAS",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.FeedingQueueRunnerTestCase.testPandasFeedingMultiThread": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions.enqueue_data",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.HAS_PANDAS",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.HAS_PANDAS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.ff": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.queues.feeding_functions"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.get_rows": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.feeding_queue_runner_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.HAS_PANDAS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.NumpySourceTestCase": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.NumpySourceTestCase.testNumpySource": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy_source",
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.get_rows",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.PandasSourceTestCase": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.PandasSourceTestCase.testPandasFeeding": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "pandas_source",
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.PandasSource",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.HAS_PANDAS",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.get_rows": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.in_memory_source": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.in_memory_source_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform._apply_transform": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform._output_names": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.Mock2x2Transform.input_valency": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockOneOutputTransform": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockOneOutputTransform.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockOneOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockOneOutputTransform._apply_transform": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockOneOutputTransform._output_names": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockOneOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.Series"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries.__repr__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries.build": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor.__eq__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32",
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor.__ne__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor.__repr__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor.dtype": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor.get_shape": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSparseTensor.name": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor.__eq__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor.__ne__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor.__repr__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor.dtype": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor.get_shape": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor.name": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "tensorflow.contrib.learn.python.learn.TensorFlowTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform.__eq__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform.__ne__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform.input_valency": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform.name": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform.param_one": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform.param_two": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform._apply_transform": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform._output_names": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform.param_three": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.parameter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockZeroOutputTransform": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTransform"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockZeroOutputTransform.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockZeroOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockZeroOutputTransform._apply_transform": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockZeroOutputTransform._output_names": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockZeroOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.ReaderSourceTestCase": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.ReaderSourceTestCase.setUp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "range",
    "str",
    "super",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.ReaderSourceTestCase"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.ReaderSourceTestCase.testNoShuffle": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "id_source",
    "int",
    "range",
    "tensorflow.IdentityReader",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource",
    "tensorflow.initialize_all_variables",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.ReaderSourceTestCase.testYesShuffle": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "id_source",
    "int",
    "range",
    "set",
    "tensorflow.IdentityReader",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source.ReaderSource",
    "tensorflow.initialize_all_variables",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.rs": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.reader_source"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.reader_source_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.TransformedSeriesTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.TransformedSeriesTest.test_build_multiple_output": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.TransformedSeriesTest.test_build_no_output": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.TransformedSeriesTest.test_build_no_output.create_no_output_series": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockZeroOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.TransformedSeriesTest.test_build_single_output": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockOneOutputTransform",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTensor",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.TransformedSeriesTest.test_repr": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "repr",
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.mocks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.series_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.SparsifyDensifyTestCase": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.SparsifyDensifyTestCase.testSparsifyDensifyFloatNan": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test._test_sparsify_densify"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.SparsifyDensifyTestCase.testSparsifyDensifyFloatZero": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test._test_sparsify_densify"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.SparsifyDensifyTestCase.testSparsifyDensifyIntNan": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test._test_sparsify_densify"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.SparsifyDensifyTestCase.testSparsifyDensifyIntZero": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test._test_sparsify_densify"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.SparsifyDensifyTestCase.testSparsifyDensifyStringEmpty": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test._test_sparsify_densify"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test._test_sparsify_densify": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.isnan",
    "numpy.testing.assert_array_equal",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source.NumpySource",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify.Sparsify",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.densify": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.in_memory_source": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.in_memory_source"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.sparsify": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.sparsify"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.sparsify_densify_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.HAS_PANDAS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase._assert_pandas_equals_tensorflow": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "range",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._assert_df_equals_dict"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testBatch": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_pandas",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.HAS_PANDAS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testFromCSV": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandas.read_csv",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_csv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testFromCSVLimitEpoch": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "list",
    "sum",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_csv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testFromCSVWithFeatureSpec": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "numpy.nan",
    "object",
    "pandas.read_csv",
    "range",
    "tensorflow.FixedLenFeature",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv_with_feature_spec",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify.Densify",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_csv_sparse",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.math",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testFromExamples": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "_expected_fixed_len_float",
    "_expected_var_len_int",
    "enumerate",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range",
    "tensorflow.FixedLenFeature",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_examples",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_tfrecord",
    "tensorflow.float32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testFromExamples._expected_fixed_len_float": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testFromExamples._expected_var_len_int": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testFromNumpy": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testInitFromPandas": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "range",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_pandas",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.HAS_PANDAS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._assert_df_equals_dict"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.TensorFlowDataFrameTestCase.testSplitString": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "frozenset",
    "len",
    "list",
    "print",
    "set",
    "sum",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_csv",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_csv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._assert_df_equals_dict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "assertion",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_csv": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "numpy.random.rand",
    "numpy.random.randint",
    "range",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.csv",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.tempfile",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_csv_sparse": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "numpy.random.rand",
    "numpy.random.randint",
    "range",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.csv",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.tempfile",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test._make_test_tfrecord": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "float",
    "range",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.tempfile",
    "tensorflow.core.example.example_pb2.Example",
    "tensorflow.python_io.TFRecordWriter",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.densify": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.densify"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.df": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.example_pb2": {
  "data": {
   "shadows": "tensorflow.core.example.example_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.tensorflow_dataframe_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.TransformTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.TransformTest.test_cache": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "sorted",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.TransformTest.test_call": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "t",
    "tensorflow.contrib.learn.python.learn.TransformedSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.TransformTest.test_make_list_of_column": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.dataframe.transform._make_list_of_series",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockSeries"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.TransformTest.test_parameters": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.TransformTest.test_parameters_inherited_combined": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.TransformTest.test_return_type": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks.MockTwoOutputTransform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test._make_list_of_series": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transform._make_list_of_series"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.mocks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.tests.dataframe.mocks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.transform_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.UNARY_TRANSFORMS",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.UnaryTestCase",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.NUMPY_ARRAY_SIZE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.UNARY_TRANSFORMS": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.transforms.unary_transforms.UNARY_TRANSFORMS"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.UnaryTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.UnaryTestCase.add_test_case": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "setattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.UnaryTestCase.add_test_case._test": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "hasattr",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.random.shuffle",
    "numpy.testing.assert_almost_equal",
    "op",
    "tensorflow.Session",
    "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe.TensorFlowDataFrame.from_numpy",
    "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.NUMPY_ARRAY_SIZE",
    "tensorflow.train.Coordinator",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.df": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.dataframe.tensorflow_dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.dataframe.unary_transform_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.CustomOptimizer": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.CustomOptimizer.testIrisMomentum": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.DNNClassifier",
    "tensorflow.contrib.learn.python.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.train_test_split",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.estimators_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.CustomOptimizer.testIrisMomentum.custom_optimizer": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.train.MomentumOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testFeatureEngineeringFn": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "next",
    "tensorflow.contrib.learn.Estimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testFeatureEngineeringFn.feature_engineering_fn": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testFeatureEngineeringFn.input_fn": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testFeatureEngineeringFn.model_fn": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testNoneFeatureEngineeringFn": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "next",
    "tensorflow.contrib.learn.Estimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testNoneFeatureEngineeringFn.feature_engineering_fn": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testNoneFeatureEngineeringFn.input_fn": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.FeatureEngineeringFunctionTest.testNoneFeatureEngineeringFn.model_fn": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.InferredfeatureColumnTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.InferredfeatureColumnTest.testIrisMomentum": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.python.learn.DNNClassifier",
    "tensorflow.contrib.learn.python.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.train_test_split",
    "tensorflow.contrib.learn.python.learn.tests.estimators_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.InferredfeatureColumnTest.testIrisMomentum.custom_optimizer": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.train.MomentumOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.accuracy_score": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.datasets": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.estimators_test.train_test_split": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.train_test_split"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.python.util.all_util.reveal_undocumented"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_continuous_eval": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "StopIteration",
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_continuous_eval_throttle_delay": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "StopIteration",
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.time",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_evaluate": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_evaluate_delay": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.time",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_run_local": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.monitors.ValidationMonitor",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_run_std_server": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.test.mock.call",
    "tensorflow.test.mock.patch",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_run_std_server_raises_without_cluster_spec": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.test.mock.patch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_test": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train_and_evaluate": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.monitors.ValidationMonitor",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train_default_delay": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train_delay": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train_raises_if_job_name_is_missing": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train_server_does_not_start_with_empty_master": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.test.mock.patch",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train_server_does_not_start_without_cluster_spec": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.test.mock.patch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.ExperimentTest.test_train_starts_server": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.ConfigProto",
    "tensorflow.contrib.learn.Experiment",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator",
    "tensorflow.contrib.learn.python.learn.tests.experiment_test.time",
    "tensorflow.test.mock.call",
    "tensorflow.test.mock.patch",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Evaluable",
    "tensorflow.contrib.learn.Trainable"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator.config": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator.evaluate": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "StopIteration",
    "sorted",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.TestEstimator.fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.reveal_undocumented": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.reveal_undocumented"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.run_config": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.run_config"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.experiment_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.BaseMonitor": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest._assert_ckpt": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.train.get_checkpoint_state"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest._assert_summaries": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.graph_actions.get_summary_writer",
    "tensorflow.contrib.testing.FakeSummaryWriter",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest._build_inference_graph": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.TABLE_INITIALIZERS",
    "tensorflow.Variable",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.framework.local_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.setUp": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions.clear_summary_writers",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.tempfile",
    "tensorflow.contrib.testing.FakeSummaryWriter.install"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.tearDown": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions.clear_summary_writers",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.shutil",
    "tensorflow.contrib.testing.FakeSummaryWriter.uninstall"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_coordinator_request_stop_called": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.coordinator.Coordinator",
    "tensorflow.contrib.learn.python.learn.graph_actions.coordinator.Coordinator.request_stop",
    "tensorflow.contrib.learn.python.learn.graph_actions.infer",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_evaluate": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.evaluate"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_evaluate_feed_fn": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.evaluate",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._Feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_evaluate_feed_fn_with_exhaustion": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.evaluate",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._Feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_evaluate_invalid_args": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.graph_actions.evaluate"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_evaluate_with_saver": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.GraphKeys.SAVERS",
    "tensorflow.add_to_collection",
    "tensorflow.contrib.learn.python.learn.graph_actions.evaluate",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_infer": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.infer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_infer_different_default_graph": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.infer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_infer_feed": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.infer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_infer_invalid_feed": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.infer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_run_feeds_iter_cleanup_with_exceptions": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.graph_actions.coordinator.Coordinator",
    "tensorflow.contrib.learn.python.learn.graph_actions.coordinator.Coordinator.request_stop",
    "tensorflow.contrib.learn.python.learn.graph_actions.run_feeds_iter",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_summary_writer": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions.get_summary_writer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_train": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_train_invalid_args": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_train_loss": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.framework.local_variable",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train",
    "tensorflow.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_train_max_steps_is_not_incremental": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_train_skip_train_if_max_step_already_saved": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_train_steps_is_incremental": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTest.test_train_summaries": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions._monitored_train",
    "tensorflow.control_dependencies",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest._assert_ckpt": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "tensorflow.train.get_checkpoint_state"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest._assert_summaries": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.learn.python.learn.graph_actions.get_summary_writer",
    "tensorflow.contrib.testing.FakeSummaryWriter",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest._build_inference_graph": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.TABLE_INITIALIZERS",
    "tensorflow.Variable",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.framework.local_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.setUp": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions.clear_summary_writers",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.tempfile",
    "tensorflow.contrib.testing.FakeSummaryWriter.install"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.tearDown": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.graph_actions.clear_summary_writers",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.shutil",
    "tensorflow.contrib.testing.FakeSummaryWriter.uninstall"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions.train",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train_chief_monitor": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions.train",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper",
    "tensorflow.control_dependencies",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train_invalid_args": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.graph_actions.train"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train_loss": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.framework.local_variable",
    "tensorflow.contrib.learn.python.learn.graph_actions.train",
    "tensorflow.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train_max_steps_is_not_incremental": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions.train",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train_steps_is_incremental": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions.train",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable",
    "tensorflow.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train_summaries": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions.train",
    "tensorflow.control_dependencies",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.GraphActionsTrainTest.test_train_worker_monitor": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.constant",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.learn.python.learn.graph_actions.train",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_INIT_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.variables.initialize_all_variables",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper.begin": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper.has_step": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper.is_active": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper.run_on_all_workers": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper.step_begin": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._BaseMonitorWrapper"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._Feeder": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._Feeder.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._Feeder.feed_fn": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test._Feeder.step": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.testing": {
  "data": {
   "shadows": "tensorflow.contrib.testing"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.graph_actions_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "tensorflow.contrib.learn.python.learn.tests.grid_search_test.HAS_SKLEARN",
    "tensorflow.contrib.learn.python.learn.tests.grid_search_test.os",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.GridSearchCV": {
  "data": {
   "shadows": "sklearn.grid_search.GridSearchCV"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.GridSearchTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.GridSearchTest.testIrisDNN": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.datasets.load_iris",
    "sklearn.grid_search.GridSearchCV",
    "sklearn.metrics.accuracy_score",
    "tensorflow.contrib.learn.python.learn.DNNClassifier",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.grid_search_test.HAS_SKLEARN",
    "tensorflow.contrib.learn.python.learn.tests.grid_search_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.HAS_SKLEARN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.grid_search_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.IOTest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.IOTest.test_dask_io": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "dask.dataframe.from_pandas",
    "dict",
    "extract_dask_data",
    "extract_dask_labels",
    "list",
    "pandas.DataFrame",
    "pandas.date_range",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.IOTest.test_dask_iris_classification": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "pandas.DataFrame",
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.io_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.IOTest.test_pandas_dataframe": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "print",
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.io_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.IOTest.test_pandas_series": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "tensorflow.contrib.learn.python.learn.LinearClassifier",
    "tensorflow.contrib.learn.python.learn.datasets.load_iris",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.io_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.IOTest.test_string_data_formats": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "tensorflow.contrib.learn.python.learn.io.extract_pandas_data",
    "tensorflow.contrib.learn.python.learn.io.extract_pandas_labels"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.accuracy_score": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.accuracy_score"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.datasets": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.io_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.setUp": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_fail_job_name_with_no_default_schedule": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_fail_no_output_dir": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_experiment"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_fail_non_callable": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.learn.python.learn.learn_runner.run"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_fail_non_callable_task": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_experiment"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_fail_non_existent_task": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_experiment"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_fail_not_experiment": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_non_experiment"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_fail_schedule_from_config_with_no_job_name": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_no_schedule_and_no_config_runs_train_and_evaluate": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_experiment"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_no_schedule_and_non_distributed_runs_train_and_evaluate": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_non_distributed_cluster_spec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_run_with_custom_schedule": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_experiment"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_run_with_explicit_local_run": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_experiment"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_schedule_from_config_runs_serve_on_ps": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_schedule_from_config_runs_train_and_evaluate_on_master": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_schedule_from_config_runs_train_on_worker": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_schedule_from_manually_specified_job_name": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.MainTest.test_schedule_from_tf_config": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_runner.run",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.json",
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.Experiment"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.estimator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Estimator",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.estimator.Estimator": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.local_run": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.run_std_server": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.simple_task": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.train": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment.train_and_evaluate": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_distributed_cluster_spec": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_experiment": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.TestExperiment",
    "tensorflow.logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_non_distributed_cluster_spec": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.build_non_experiment": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.learn_runner": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.run_config": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.run_config"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.learn_runner_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.LoadCsvTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.LoadCsvTest.testBoston": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.load_boston"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.LoadCsvTest.testIris": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.datasets": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.load_csv_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpec": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_create_metric_ops": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_fail_no_label": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_fail_no_prediction": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_fail_single_label": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_fail_single_prediction": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_no_weight": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_single_label": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.MetricSpecTest.test_single_prediction": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.metric_spec.MetricSpec",
    "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.test_metric": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.metric_spec_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.AbortAtNSession": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.AbortAtNSession.__init__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.AbortAtNSession.close": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.AbortAtNSession.run": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.errors.AbortedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest.test_dont_request_stop_on_exception_in_main_thread": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession",
    "tensorflow.identity",
    "tensorflow.train.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest.test_properties": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession",
    "tensorflow.train.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest.test_run": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession",
    "tensorflow.identity",
    "tensorflow.train.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest.test_should_stop_on_close": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession",
    "tensorflow.train.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest.test_should_stop_on_coord_stop": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession",
    "tensorflow.train.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest.test_stop_threads_on_close": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.busy_wait_for_coord_stop",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.threading",
    "tensorflow.train.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.CoordinatedSessionTest.test_stop_threads_on_close_after_exception": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "TypeError",
    "range",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._CoordinatedSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.busy_wait_for_coord_stop",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.threading",
    "tensorflow.identity",
    "tensorflow.train.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "collections.Counter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook.after_run": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook.before_run": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeSession": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeSession.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.__init__"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeSession.run": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "dict",
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession.run"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testBothHooksAndUserHaveFeeds": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testCallsHooksBeginEnd": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunValues",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testFetchesHookRequests": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testHooksAndUserFeedConflicts": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testHooksFeedConflicts": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testOnlyHooksHaveFeeds": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testRunPassesAllArguments": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeSession",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.HookedSessionTest.testShouldStop": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.FakeHook",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest._test_dir": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.glob",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_defaults": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_exit_cleanly_on_out_of_range_exception": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN",
    "tensorflow.errors.OutOfRangeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_exit_cleanly_on_stop_iteration_exception": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "StopIteration",
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_graph": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_last_step": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_last_step.load_ckpt": {
  "data": {
   "lineno": 624
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_num_steps": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_num_steps.load_ckpt": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_raises_regular_exceptions_in_with_body": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_recover_and_retry_on_aborted_error": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN",
    "tensorflow.errors.AbortedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_recovery": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.contrib.learn.python.learn.monitored_session.ChiefSessionCreator",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_regular_exception_pass_through_run": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_regular_exception_reported_to_coord_pass_through_return": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_regular_exception_reported_to_coord_pass_through_run": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_retry_on_aborted_error": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN",
    "tensorflow.errors.AbortedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.MonitoredSessionTest.test_stop_cleanly_when_no_exception_in_with_body": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.MonitoredSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN.__init__": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RaiseOnceAtCountN.before_run": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest._SessionReturner": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest._SessionReturner.__init__": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest._SessionReturner.create_session": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest.test_properties": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._RecoverableSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest.test_recovery": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "IndexError",
    "StackSessionCreator",
    "len",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._RecoverableSession",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest.test_recovery.StackSessionCreator": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest.test_recovery.StackSessionCreator.__init__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.AbortAtNSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest.test_recovery.StackSessionCreator.create_session": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.RecoverableSessionTest.test_run": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._RecoverableSession",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest.test_caches_values": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest.test_defaults_empty_graph": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tensorflow.Graph",
    "tensorflow.Operation",
    "tensorflow.Tensor",
    "tensorflow.Variable",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest.test_defaults_no_variables": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.Graph",
    "tensorflow.Operation",
    "tensorflow.Tensor",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest.test_graph_is_finalized": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest.test_nothing_created_before_finalize": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest.test_raise_error_if_more_than_one_cached_item": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.GraphKeys.SAVERS",
    "tensorflow.Variable",
    "tensorflow.add_to_collection",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.ScaffoldTest.test_uses_passed_values": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "callable",
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.StopAtNSession": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.StopAtNSession.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.StopAtNSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.StopAtNSession._check_stop": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.WrappedSessionTest": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.WrappedSessionTest.test_close_twice": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.WrappedSessionTest.test_properties": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.WrappedSessionTest.test_run": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession",
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.WrappedSessionTest.test_should_stop_delegates_to_wrapped_session": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession",
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.StopAtNSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.WrappedSessionTest.test_should_stop_on_close": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitored_session._WrappedSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.WrappedSessionTest.test_should_stop_uses_check_stop": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.StopAtNSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.basic_session_run_hooks": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.basic_session_run_hooks"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.busy_wait_for_coord_stop": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.monitored_session": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitored_session"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.session_run_hook": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.session_run_hook"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitored_session_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest._run": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.setUp": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.get_or_create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session.Scaffold",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.tearDown": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.monitors_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.test_raise_in_both_secs_and_steps": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.test_raise_in_none_secs_and_steps": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.test_save_saves_at_end": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.test_save_secs_saves_in_first_step": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.test_save_secs_saves_periodically": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.test_save_steps_saves_in_first_step": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.CheckpointSaverTest.test_save_steps_saves_periodically": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.contrib.framework.load_variable",
    "tensorflow.contrib.learn.python.learn.monitors.CheckpointSaver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor.__init__": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "collections.Counter",
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor.__init__"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor.begin": {
  "data": {
   "lineno": 638
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor.end": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor.post_step": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor.step_begin": {
  "data": {
   "lineno": 644
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor.step_end": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest._assert_validation_monitor": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest._run_monitor": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "six.moves.xrange",
    "tensorflow.Tensor",
    "tensorflow.get_default_session",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.setUp": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.setUp.mockLog": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.tearDown": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_base_monitor": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.monitors.BaseMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_capture_variable": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.assign_add",
    "tensorflow.contrib.learn.python.learn.monitors.CaptureVariable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_0": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_1": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_2": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_8": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_8_call_post_step_at_the_end": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_8_call_post_step_should_not_be_called_twice": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_8_no_max_steps": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_8_recovered_after_step_begin": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_every_8_recovered_after_step_end": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_graph_dump": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.assign_add",
    "tensorflow.contrib.learn.python.learn.monitors.GraphDump",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_logging_trainable": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "str",
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitors.LoggingTrainable",
    "tensorflow.get_default_session",
    "tensorflow.mul",
    "tensorflow.sub",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_print": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "str",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitors.PrintTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_summary_saver": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.assign_add",
    "tensorflow.contrib.learn.python.learn.monitors.SummarySaver",
    "tensorflow.contrib.testing.FakeSummaryWriter",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_validation_monitor": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len",
    "mock_estimator_class",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor",
    "tensorflow.python.training.saver",
    "tensorflow.test.mock.patch",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_validation_monitor_invalid_metric": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "mock_estimator_class",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor",
    "tensorflow.python.training.saver",
    "tensorflow.test.mock.patch",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_validation_monitor_no_ckpt": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mock_estimator_class",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor",
    "tensorflow.python.training.saver",
    "tensorflow.test.mock.patch",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_validation_monitor_no_early_stopping_rounds": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "mock_estimator_class",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor",
    "tensorflow.python.training.saver",
    "tensorflow.test.mock.patch",
    "tensorflow.test.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.MonitorsTest.test_validation_monitor_no_estimator": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.learn.python.learn.monitors.ValidationMonitor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.RunHookAdapterForMonitorsTest": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.RunHookAdapterForMonitorsTest.test_calls_and_steps": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.assign_add",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.RunHookAdapterForMonitorsTest.test_requests": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.learn.python.learn.monitored_session._HookedSession",
    "tensorflow.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test.FakeMonitor",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.StopAtStepTest": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.StopAtStepTest.test_raise_in_both_last_step_and_num_steps": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.monitors.StopAtStep"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.StopAtStepTest.test_stop_based_on_last_step": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.StopAtStep"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.StopAtStepTest.test_stop_based_on_num_step": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.StopAtStep"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.monitors.EveryN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN.every_n_post_step": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN.every_n_step_begin": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN.every_n_step_end": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN.post_steps": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN.steps_begun": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test._MyEveryN.steps_ended": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.monitored_session": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.monitored_session"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.testing": {
  "data": {
   "shadows": "tensorflow.contrib.testing"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.monitors_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.MultiOutputTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.MultiOutputTest.testMultiRegression": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.sort",
    "tensorflow.contrib.learn.python.learn.LinearRegressor",
    "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input",
    "tensorflow.contrib.learn.python.learn.tests.multioutput_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.mean_squared_error": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.estimators._sklearn.mean_squared_error"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.multioutput_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.NonLinearTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.NonLinearTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.random",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.NonLinearTest.testBostonDNN": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.datasets.load_boston"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.NonLinearTest.testDNNDropout0": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.NonLinearTest.testDNNDropout0_1": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.NonLinearTest.testDNNDropout0_9": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.NonLinearTest.testIrisDNN": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNClassifier",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.nonlinear_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.RegressionTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.RegressionTest.testLinearRegression": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.random.RandomState",
    "tensorflow.contrib.learn.python.learn.LinearRegressor",
    "tensorflow.contrib.learn.python.learn.infer_real_valued_columns_from_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.regression_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main",
    "tensorflow.test.mock.patch"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_bad_is_chief_combinations_raise": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_default_is_chief_from_tf_config_without_job_name": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.json",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.patch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_default_is_chief_without_tf_config_but_has_job_name": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_default_is_chief_without_tf_config_or_job_name": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_defaults_with_no_tf_config": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_empty_cluster_spec": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_explicitly_setting_task_to_0_overrides_tf_config": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.json",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.patch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_explicitly_specified_values": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_illegal_task_index_raises": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_invalid_job_name_raises": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_is_chief_from_tf_config": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.json",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.patch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_no_cluster_spec_results_in_empty_master": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_no_job_name_produces_empty_master": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_num_ps_replicas_and_cluster_spec_are_mutually_exclusive": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_num_ps_replicas_can_be_set_if_cluster_spec_is_empty": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_num_ps_replicas_from_tf_config": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.json",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.patch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_single_node_in_cluster_spec_produces_empty_master": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_tf_config_with_overrides": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.json",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.patch",
    "tensorflow.train.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.RunConfigTest.test_values_from_tf_config": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.run_config.RunConfig",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.json",
    "tensorflow.contrib.learn.python.learn.tests.run_config_test.patch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.patch": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.run_config": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.run_config"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.run_config_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.learn.python.learn.tests.stability_test._NullOptimizer",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.StabilityTest": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.StabilityTest.testDNNRegression": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "list",
    "tensorflow.Graph",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.DNNRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.tests.stability_test._NULL_OPTIMIZER",
    "tensorflow.contrib.learn.python.learn.tests.stability_test.random",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.StabilityTest.testLinearRegression": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "list",
    "tensorflow.Graph",
    "tensorflow.contrib.framework.create_global_step",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.RunConfig",
    "tensorflow.contrib.learn.datasets.load_boston",
    "tensorflow.contrib.learn.python.learn.tests.stability_test._NULL_OPTIMIZER",
    "tensorflow.contrib.learn.python.learn.tests.stability_test.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.StabilityTest.testRandomStability": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test._NULL_OPTIMIZER": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test._NullOptimizer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.train.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test._NullOptimizer.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.learn.python.learn.tests.stability_test._NullOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test._NullOptimizer._apply_dense": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test._NullOptimizer._apply_sparse": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test._NullOptimizer._prepare": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test._get_input_fn": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.data_feeder": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.data_feeder"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.stability_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.SummaryWriterCacheTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.SummaryWriterCacheTest._test_dir": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.glob",
    "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.SummaryWriterCacheTest.test_cache": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get",
    "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.glob",
    "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.SummaryWriterCacheTest.test_clear": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.clear",
    "tensorflow.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache.get"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.summary_writer_cache": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.summary_writer_cache"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.tests.summary_writer_cache_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.train": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.graph_actions.train"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.trainable": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.trainable.Trainable": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.learn.python.learn.trainable.abc"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.trainable.Trainable.fit": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.contrib.learn.python.learn.trainable.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.trainable.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.trainable.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.trainable.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.trainable.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.checkpoint_utils": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.checkpoint_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.init_from_checkpoint": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.init_from_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.list_variables": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.list_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_checkpoint": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.load_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.framework.python.framework.checkpoint_utils.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.checkpoints.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.utils.export._default_input_fn": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export._export_estimator": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "input_fn",
    "signature_fn",
    "tensorflow.contrib.framework.deprecated_arg_values",
    "tensorflow.contrib.framework.python.ops.variables.create_global_step",
    "tensorflow.contrib.layers.ProblemType.CLASSIFICATION",
    "tensorflow.contrib.layers.ProblemType.LINEAR_REGRESSION",
    "tensorflow.contrib.layers.ProblemType.LOGISTIC_REGRESSION",
    "tensorflow.contrib.learn.python.learn.utils.export._default_input_fn",
    "tensorflow.contrib.learn.python.learn.utils.export._export_graph",
    "tensorflow.contrib.learn.python.learn.utils.export._get_saver",
    "tensorflow.contrib.learn.python.learn.utils.export.classification_signature_fn",
    "tensorflow.contrib.learn.python.learn.utils.export.generic_signature_fn",
    "tensorflow.contrib.learn.python.learn.utils.export.logistic_regression_signature_fn",
    "tensorflow.contrib.learn.python.learn.utils.export.regression_signature_fn",
    "tensorflow.contrib.session_bundle.gc.largest_export_versions",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.platform.tf_logging.warn",
    "tensorflow.python.training.saver.latest_checkpoint",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export._export_graph": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_global_step",
    "tensorflow.contrib.session_bundle.exporter.Exporter",
    "tensorflow.python.client.session",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.ops.GraphKeys.ASSET_FILEPATHS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.data_flow_ops.initialize_all_tables",
    "tensorflow.python.ops.variables.initialize_local_variables",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.restore"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export._get_first_op_from_collection": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export._get_saver": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.contrib.learn.python.learn.utils.export._get_first_op_from_collection",
    "tensorflow.python.framework.ops.GraphKeys.SAVERS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.classification_signature_fn": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.exporter.classification_signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.classification_signature_fn_with_prob": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.exporter.classification_signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.deprecated_arg_values": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_arg_values"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.export_estimator": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "_export_estimator",
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.learn.python.learn.utils.export._default_input_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.exporter": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.exporter"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.gc": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.gc"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.generic_signature_fn": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.contrib.session_bundle.exporter.generic_signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.logistic_regression_signature_fn": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.session_bundle.exporter.regression_signature",
    "tensorflow.python.platform.tf_logging.fatal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.regression_signature_fn": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.exporter.regression_signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.tf_session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_estimator": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.export.export_estimator"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.ExportTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.ExportTest._get_default_signature": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "tensorflow.Session",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signatures",
    "tensorflow.train.import_meta_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.ExportTest.testExportMonitor": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.monitors.ExportMonitor",
    "tensorflow.contrib.learn.python.learn.utils.export.generic_signature_fn",
    "tensorflow.contrib.learn.python.learn.utils.export_test.os",
    "tensorflow.contrib.learn.python.learn.utils.export_test.random",
    "tensorflow.contrib.learn.python.learn.utils.export_test.tempfile",
    "tensorflow.gfile.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.ExportTest.testExportMonitorRegressionSignature": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.contrib.layers.real_valued_column",
    "tensorflow.contrib.learn.LinearRegressor",
    "tensorflow.contrib.learn.monitors.ExportMonitor",
    "tensorflow.contrib.learn.python.learn.utils.export_test.random",
    "tensorflow.contrib.learn.python.learn.utils.export_test.tempfile",
    "tensorflow.gfile.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.ExportTest.testExportMonitorRegressionSignature._regression_signature": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.exporter.regression_signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.export": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.export"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.learn": {
  "data": {
   "shadows": "tensorflow.contrib.learn"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.manifest_pb2": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.manifest_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.export_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_string",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.FLAGS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.checkpoints": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.utils.checkpoints"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.main": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "print",
    "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.FLAGS",
    "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.print_tensors_in_checkpoint_file",
    "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.print_tensors_in_checkpoint_file": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "print",
    "str",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.list_variables",
    "tensorflow.contrib.learn.python.learn.utils.checkpoints.load_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.inspect_checkpoint.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.learn.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.learn.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.linear_optimizer.SDCAOptimizer": {
  "data": {
   "shadows": "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.SdcaModel": {
  "data": {
   "shadows": "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.SparseFeatureColumn": {
  "data": {
   "shadows": "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._InitOpDefLibrary",
    "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._distributed_sdca_large_batch_solver_outputs",
    "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._DistributedSdcaLargeBatchSolverOutput": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._distributed_sdca_large_batch_solver_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._op_def_lib": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._sdca_fprint_outputs": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._sdca_shrink_l1_outputs": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.distributed_sdca_large_batch_solver": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops._DistributedSdcaLargeBatchSolverOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.sdca_fprint": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.sdca_shrink_l1": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.linear_optimizer.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._sdca_ops",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._assertList": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._assertSpecified": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._convert_n_to_tensor": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._create_slots": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.collections",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._l1_loss": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "sum",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._l2_loss": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "sum",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._linear_predictions": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "len",
    "six.moves.range",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.segment_sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._num_loss_partitions": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._num_table_shards": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._symmetric_l1_regularization": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel._symmetric_l2_regularization": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel.approximate_duality_gap": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel.minimize": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._sdca_ops",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.state_ops.assign_add",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel.predictions": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.sigmoid"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel.regularized_loss": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel.unregularized_loss": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits",
    "tensorflow.python.ops.nn_ops.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn.example_indices": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn.feature_indices": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn.feature_values": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.LookupInterface"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "six.moves.range",
    "super",
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable",
    "tensorflow.contrib.lookup.lookup_ops.MutableHashTable",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable._num_shards": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable._shard_indices": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.mod",
    "tensorflow.python.ops.string_ops.string_to_hash_bucket_fast"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable.export_sharded": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable.insert": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "six.moves.range",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.data_flow_ops.dynamic_partition"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable.lookup": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "TypeError",
    "six.moves.range",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.data_flow_ops.dynamic_partition",
    "tensorflow.python.ops.data_flow_ops.dynamic_stitch",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable.size": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "six.moves.range",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._ShardedMutableHashTable.table_shards": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops._sdca_ops": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.convert_to_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.convert_to_tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.gen_sdca_ops": {
  "data": {
   "shadows": "tensorflow.contrib.linear_optimizer.ops.gen_sdca_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.load_op_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library.load_op_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.lookup_ops": {
  "data": {
   "shadows": "tensorflow.contrib.lookup.lookup_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.name_scope": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.name_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.sigmoid_cross_entropy_with_logits": {
  "data": {
   "shadows": "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.string_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.string_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.var_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer.get_name": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer.get_train_step": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "_training_examples_and_variables",
    "dict",
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer.get_train_step._tensor_to_sparse_feature_column": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn",
    "tensorflow.python.ops.array_ops.gather_nd",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.not_equal",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer.get_train_step._training_examples_and_variables": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "_tensor_to_sparse_feature_column",
    "dict",
    "isinstance",
    "sorted",
    "tensorflow.contrib.layers.feature_column._BucketizedColumn",
    "tensorflow.contrib.layers.feature_column._CrossedColumn",
    "tensorflow.contrib.layers.feature_column._RealValuedColumn",
    "tensorflow.contrib.layers.feature_column._SparseColumn",
    "tensorflow.contrib.layers.feature_column._WeightedSparseColumn",
    "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops.SparseFeatureColumn",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.math_ops.to_float",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.linear_optimizer.python.sdca_optimizer.sdca_ops": {
  "data": {
   "shadows": "tensorflow.contrib.linear_optimizer.python.ops.sdca_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.lookup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.lookup.lookup_ops.BaseSaverBuilder": {
  "data": {
   "shadows": "tensorflow.python.training.saver.BaseSaverBuilder"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.HashTable": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.HashTable.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.lookup.lookup_ops.HashTable",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._hash_table"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.LookupInterface"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase.default_value": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase.init": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase.lookup": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.gen_data_flow_ops._lookup_table_find"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase.size": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._lookup_table_size"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.InitializableLookupTableBase.table_ref": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.KeyValueTensorInitializer": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.TableInitializerBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.KeyValueTensorInitializer.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.lookup.lookup_ops.KeyValueTensorInitializer",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.KeyValueTensorInitializer.initialize": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.TABLE_INITIALIZERS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._initialize_table"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface._check_table_dtypes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface.init": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface.key_dtype": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface.lookup": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface.name": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface.size": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.LookupInterface.value_dtype": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.LookupInterface"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.MutableHashTableSaveable": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "tensorflow.python.training.saver.BaseSaverBuilder.SaveableObject"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.MutableHashTableSaveable.__init__": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.lookup.lookup_ops.MutableHashTable",
    "tensorflow.python.training.saver.BaseSaverBuilder.SaveSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.MutableHashTableSaveable.restore": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._lookup_table_import"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.__init__": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.lookup.lookup_ops.MutableHashTable",
    "tensorflow.python.framework.ops.GraphKeys.SAVEABLE_OBJECTS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.gen_data_flow_ops._mutable_hash_table",
    "tensorflow.python.ops.gen_data_flow_ops._mutable_hash_table_of_tensors"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.export": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._lookup_table_export"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.insert": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._lookup_table_insert"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.lookup": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._lookup_table_find"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.MutableHashTable.size": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._lookup_table_size"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TableInitializerBase": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.TableInitializerBase.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TableInitializerBase.initialize": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TableInitializerBase.key_dtype": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TableInitializerBase.value_dtype": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileIdTableInitializer": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.TextFileInitializer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileIdTableInitializer.__init__": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.lookup.lookup_ops.TextFileIdTableInitializer",
    "tensorflow.contrib.lookup.lookup_ops.TextFileIndex",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileIndex": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileInitializer": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.TableInitializerBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileInitializer.__init__": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super",
    "tensorflow.contrib.lookup.lookup_ops.TextFileIndex",
    "tensorflow.contrib.lookup.lookup_ops.TextFileInitializer",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileInitializer.initialize": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.GraphKeys.ASSET_FILEPATHS",
    "tensorflow.python.framework.ops.GraphKeys.TABLE_INITIALIZERS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._initialize_table_from_text_file"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileStringTableInitializer": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.TextFileInitializer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.lookup.lookup_ops.TextFileStringTableInitializer.__init__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.lookup.lookup_ops.TextFileIndex",
    "tensorflow.contrib.lookup.lookup_ops.TextFileStringTableInitializer",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.gen_data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.index_to_string": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.HashTable",
    "tensorflow.contrib.lookup.lookup_ops.KeyValueTensorInitializer",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.lookup_ops.string_to_index": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "tensorflow.contrib.lookup.lookup_ops.HashTable",
    "tensorflow.contrib.lookup.lookup_ops.KeyValueTensorInitializer",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.lookup.lookup_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.lookup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.losses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.losses.python.losses": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.losses.python.losses.__all__": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "tensorflow.contrib.losses.python.losses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.losses.python.losses.loss_ops.sum_of_pairwise_squares",
    "tensorflow.contrib.losses.python.losses.loss_ops.sum_of_squares"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops._num_present": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.not_equal",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops._safe_div": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops._safe_mean": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.python.losses.loss_ops._safe_div",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops._scale_losses": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list",
    "max",
    "range",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.absolute_difference": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.add_arg_scope": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.add_arg_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.add_loss": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.add_arg_scope",
    "tensorflow.python.framework.ops.GraphKeys.LOSSES",
    "tensorflow.python.framework.ops.add_to_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "_num_present",
    "add_loss",
    "tensorflow.contrib.losses.python.losses.loss_ops._safe_mean",
    "tensorflow.contrib.losses.python.losses.loss_ops._scale_losses",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.cosine_distance": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.deprecated": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.get_losses": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOSSES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.get_regularization_losses": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.get_total_loss": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.python.losses.loss_ops.get_losses",
    "tensorflow.contrib.losses.python.losses.loss_ops.get_regularization_losses",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.hinge_loss": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.nn_ops.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.log_loss": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.mean_pairwise_squared_error": {
  "data": {
   "lineno": 608
  },
  "type": "constant"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.mean_squared_error": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.sigmoid_cross_entropy": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.softmax_cross_entropy": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.sparse_softmax_cross_entropy": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.nn.sparse_softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.sum_of_pairwise_squares": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "range",
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.losses.python.losses.loss_ops._num_present",
    "tensorflow.contrib.losses.python.losses.loss_ops._safe_div",
    "tensorflow.contrib.losses.python.losses.loss_ops._scale_losses",
    "tensorflow.contrib.losses.python.losses.loss_ops.add_loss",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.loss_ops.sum_of_squares": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.framework.deprecated",
    "tensorflow.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.losses.python.losses.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.python.losses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.losses.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.metrics.__all__": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.aggregate_metric_map": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.aggregate_metric_map"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.aggregate_metrics": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.aggregate_metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.auc_using_histogram": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.histogram_ops.auc_using_histogram"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.confusion_matrix": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.confusion_matrix"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.ops.gen_set_ops._InitOpDefLibrary",
    "tensorflow.contrib.metrics.ops.gen_set_ops.__dense_to_dense_set_operation_outputs",
    "tensorflow.contrib.metrics.ops.gen_set_ops.__dense_to_sparse_set_operation_outputs",
    "tensorflow.contrib.metrics.ops.gen_set_ops.__sparse_to_sparse_set_operation_outputs",
    "tensorflow.contrib.metrics.ops.gen_set_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._DenseToDenseSetOperationOutput": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._DenseToSparseSetOperationOutput": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._SparseToSparseSetOperationOutput": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.__dense_to_dense_set_operation_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.__dense_to_sparse_set_operation_outputs": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.__set_size_outputs": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.__sparse_to_sparse_set_operation_outputs": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._dense_to_dense_set_operation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.ops.gen_set_ops._DenseToDenseSetOperationOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._dense_to_sparse_set_operation": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.ops.gen_set_ops._DenseToSparseSetOperationOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._op_def_lib": {
  "data": {
   "lineno": 472
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._set_size": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops._sparse_to_sparse_set_operation": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.ops.gen_set_ops._SparseToSparseSetOperationOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.ops.gen_set_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.metrics": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.metrics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.metrics.classification.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification.accuracy": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.metrics.classification.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.ClassificationTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.ClassificationTest.testAccuracy1D": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.metrics.classification.accuracy",
    "tensorflow.int32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.ClassificationTest.testAccuracy1DBool": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.bool",
    "tensorflow.contrib.metrics.python.metrics.classification.accuracy",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.ClassificationTest.testAccuracy1DInt64": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.metrics.classification.accuracy",
    "tensorflow.int64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.ClassificationTest.testAccuracy1DString": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.metrics.classification.accuracy",
    "tensorflow.placeholder",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.ClassificationTest.testAccuracyDtypeMismatch": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.metrics.classification.accuracy",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.ClassificationTest.testAccuracyFloatLabels": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.metrics.classification.accuracy",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.classification": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.metrics.classification"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.classification_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.metrics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.confusion_matrix": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.to_int32",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.sparse_ops.sparse_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.metric_ops_util": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops._auc_convert_hist_to_auc": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "_strict_1d_cumsum",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.truediv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops._auc_hist_accumulate": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops._check_labels_and_scores": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops._make_auc_histograms": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.boolean_mask",
    "tensorflow.python.ops.histogram_ops.histogram_fixed_width",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops._strict_1d_cumsum": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "_strict_conv1d",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.pad"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops._strict_conv1d": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.nn_ops.conv2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.auc_using_histogram": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_auc_convert_hist_to_auc",
    "_auc_hist_accumulate",
    "_check_labels_and_scores",
    "_make_auc_histograms",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.histogram_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.histogram_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.metric_ops_util": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.histogram_ops.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.__all__": {
  "data": {
   "lineno": 2797
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name": {
  "data": {
   "lineno": 1221
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._broadcast_weights": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._count_condition": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._create_local",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_type",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._create_local": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.check_ops.assert_type",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.logical_not"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._maybe_select_class_id": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._select_class_id"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._safe_div": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.math_ops.truediv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._safe_scalar_div": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._select_class_id": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_intersection",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduced_shape",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.sparse_ops.sparse_retain"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._sparse_false_negative_at_k": {
  "data": {
   "lineno": 1995,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._maybe_select_class_id",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_difference",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_size",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.to_double"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._sparse_false_positive_at_k": {
  "data": {
   "lineno": 1907,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._maybe_select_class_id",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_difference",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_size",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.to_double"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._sparse_true_positive_at_k": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._maybe_select_class_id",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_intersection",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_size",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.to_double"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_false_negatives": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._count_condition",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_false_positives": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._count_condition",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_sparse_false_negative_at_k": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.local_variable",
    "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name",
    "tensorflow.contrib.metrics.python.ops.metric_ops._sparse_false_negative_at_k",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_double",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_sparse_false_positive_at_k": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.local_variable",
    "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name",
    "tensorflow.contrib.metrics.python.ops.metric_ops._sparse_false_positive_at_k",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_double",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_sparse_true_positive_at_k": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.local_variable",
    "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name",
    "tensorflow.contrib.metrics.python.ops.metric_ops._sparse_true_positive_at_k",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_double",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_true_positives": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._count_condition",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops._tp_fn_tn_fp": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.metrics.python.ops.metric_ops._broadcast_weights",
    "tensorflow.contrib.metrics.python.ops.metric_ops._create_local",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.aggregate_metric_map": {
  "data": {
   "lineno": 2767,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.aggregate_metrics": {
  "data": {
   "lineno": 2748,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.confusion_matrix_ops": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.contrib_variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.deprecated_args": {
  "data": {
   "shadows": "tensorflow.contrib.framework.deprecated_args"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.expand_and_tile": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensor.from_value",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.sparse_ops.sparse_concat",
    "tensorflow.python.ops.sparse_ops.sparse_reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.metric_ops_util": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.num_relevant": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.contrib.metrics.python.ops.set_ops.set_size",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.minimum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.set_ops": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.set_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.sparse_average_precision_at_k": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "ValueError",
    "_sparse_true_positive_at_k",
    "tensorflow.contrib.metrics.python.ops.metric_ops.expand_and_tile",
    "tensorflow.contrib.metrics.python.ops.metric_ops.num_relevant",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.cumsum",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_double",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.nn.top_k"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_accuracy": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_auc": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "ValueError",
    "compute_auc",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops._tp_fn_tn_fp",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_auc.compute_auc": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_covariance": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._broadcast_weights",
    "tensorflow.contrib.metrics.python.ops.metric_ops._create_local",
    "tensorflow.contrib.metrics.python.ops.metric_ops._safe_div",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._broadcast_weights",
    "tensorflow.contrib.metrics.python.ops.metric_ops._create_local",
    "tensorflow.contrib.metrics.python.ops.metric_ops._safe_div",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_absolute_error": {
  "data": {
   "lineno": 2084,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.ops.math_ops.abs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_cosine_distance": {
  "data": {
   "lineno": 2517,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_iou": {
  "data": {
   "lineno": 2633,
   "symbols_in_volume": [
    "compute_mean_iou",
    "tensorflow.contrib.framework.deprecated_args",
    "tensorflow.contrib.metrics.python.ops.confusion_matrix_ops.confusion_matrix",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS",
    "tensorflow.contrib.metrics.python.ops.metric_ops._create_local",
    "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_iou.compute_mean_iou": {
  "data": {
   "lineno": 2721,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.diag_part",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_relative_error": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_squared_error": {
  "data": {
   "lineno": 2196,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_tensor": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "compute_mean",
    "tensorflow.contrib.metrics.python.ops.metric_ops._create_local",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_tensor.compute_mean": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.truediv"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_pearson_correlation": {
  "data": {
   "lineno": 2438,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops._safe_div",
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_covariance",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_percentage_less": {
  "data": {
   "lineno": 2582,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated_args",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS",
    "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights",
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_precision": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "compute_precision",
    "tensorflow.contrib.framework.deprecated_args",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS",
    "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights",
    "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_false_positives",
    "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_true_positives",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_precision.compute_precision": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_precision_at_thresholds": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "compute_precision",
    "tensorflow.contrib.metrics.python.ops.metric_ops._tp_fn_tn_fp",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_precision_at_thresholds.compute_precision": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "compute_recall",
    "tensorflow.contrib.framework.deprecated_args",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS",
    "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights",
    "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_false_negatives",
    "tensorflow.contrib.metrics.python.ops.metric_ops._streaming_true_positives",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall.compute_recall": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall_at_k": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.deprecated_args",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS",
    "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name",
    "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights",
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.nn.in_top_k"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall_at_thresholds": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "compute_recall",
    "tensorflow.contrib.metrics.python.ops.metric_ops._tp_fn_tn_fp",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall_at_thresholds.compute_recall": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_root_mean_squared_error": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_squared_error",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sensitivity_at_specificity": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "ValueError",
    "compute_sensitivity_at_specificity",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops._tp_fn_tn_fp",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sensitivity_at_specificity.compute_sensitivity_at_specificity": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.argmin",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_average_precision_at_k": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.local_variable",
    "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name",
    "tensorflow.contrib.metrics.python.ops.metric_ops._safe_scalar_div",
    "tensorflow.contrib.metrics.python.ops.metric_ops.sparse_average_precision_at_k",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.to_double",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_precision_at_k": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "_streaming_sparse_false_positive_at_k",
    "_streaming_sparse_true_positive_at_k",
    "tensorflow.contrib.framework.deprecated_args",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS",
    "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name",
    "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.nn.top_k"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_recall_at_k": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "_streaming_sparse_false_negative_at_k",
    "_streaming_sparse_true_positive_at_k",
    "tensorflow.contrib.framework.deprecated_args",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_DATE",
    "tensorflow.contrib.metrics.python.ops.metric_ops.IGNORE_MASK_INSTRUCTIONS",
    "tensorflow.contrib.metrics.python.ops.metric_ops._at_k_name",
    "tensorflow.contrib.metrics.python.ops.metric_ops._mask_weights",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.nn.top_k"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_specificity_at_sensitivity": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "ValueError",
    "compute_specificity_at_sensitivity",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops._tp_fn_tn_fp",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_specificity_at_sensitivity.compute_specificity_at_sensitivity": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.cumsum",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "tensorflow.contrib.metrics",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.AggregateMetricMapTest": {
  "data": {
   "lineno": 3631,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.AggregateMetricMapTest.testAggregateMultipleMetricsReturnsListsInOrder": {
  "data": {
   "lineno": 3633,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.AggregateMetricsTest": {
  "data": {
   "lineno": 3596,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.AggregateMetricsTest.testAggregateMultipleMetricsReturnsListsInOrder": {
  "data": {
   "lineno": 3613,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.AggregateMetricsTest.testAggregateNoMetricsRaisesValueError": {
  "data": {
   "lineno": 3598,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.AggregateMetricsTest.testAggregateSingleMetricReturnsOneItemLists": {
  "data": {
   "lineno": 3602,
   "symbols_in_volume": [
    "len",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest": {
  "data": {
   "lineno": 3706,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest._assert_sparse_tensors_equal": {
  "data": {
   "lineno": 3822
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest._test_expand_and_tile": {
  "data": {
   "lineno": 3732,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.metrics.python.ops.metric_ops.expand_and_tile",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest.testExpandAndTile1x": {
  "data": {
   "lineno": 3744
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest.testExpandAndTile5x": {
  "data": {
   "lineno": 3783
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest.testExpandAndTileInvalidArgs": {
  "data": {
   "lineno": 3708,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.ops.metric_ops.expand_and_tile",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest.testSparseExpandAndTile1x": {
  "data": {
   "lineno": 3828,
   "symbols_in_volume": [
    "tensorflow.SparseTensorValue",
    "tensorflow.contrib.metrics.python.ops.metric_ops.expand_and_tile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest.testSparseExpandAndTile5x": {
  "data": {
   "lineno": 3867,
   "symbols_in_volume": [
    "range",
    "tensorflow.SparseTensorValue",
    "tensorflow.contrib.metrics.python.ops.metric_ops.expand_and_tile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.ExpandAndTileTest.testSparseExpandAndTileInvalidArgs": {
  "data": {
   "lineno": 3718,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "tensorflow.OpError",
    "tensorflow.SparseTensorValue",
    "tensorflow.contrib.metrics.python.ops.metric_ops.expand_and_tile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.NumRelevantTest": {
  "data": {
   "lineno": 3655,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.NumRelevantTest.testNumRelevantDense": {
  "data": {
   "lineno": 3665,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.contrib.metrics.python.ops.metric_ops.num_relevant",
    "tensorflow.int32",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.NumRelevantTest.testNumRelevantInvalidArgs": {
  "data": {
   "lineno": 3657,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.ops.metric_ops.num_relevant",
    "tensorflow.int32",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.NumRelevantTest.testNumRelevantSparse": {
  "data": {
   "lineno": 3678,
   "symbols_in_volume": [
    "tensorflow.SparseTensorValue",
    "tensorflow.contrib.metrics.python.ops.metric_ops.num_relevant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.PcntBelowThreshTest": {
  "data": {
   "lineno": 3280,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.PcntBelowThreshTest.setUp": {
  "data": {
   "lineno": 3282,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.PcntBelowThreshTest.testMetricsCollection": {
  "data": {
   "lineno": 3285,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.PcntBelowThreshTest.testOneUpdate": {
  "data": {
   "lineno": 3301,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.PcntBelowThreshTest.testSomePresentOneUpdate": {
  "data": {
   "lineno": 3320,
   "symbols_in_volume": [
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.PcntBelowThreshTest.testUpdatesCollection": {
  "data": {
   "lineno": 3293,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.allCorrectAsExpected": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.np_auc": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.size",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.setUp": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testAUCPRSpecialCase": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testAllCorrect": {
  "data": {
   "lineno": 907
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testAllIncorrect": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testAnotherAUCPRSpecialCase": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testMetricsCollection": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testRecallOneAndPrecisionOneGivesOnePRAUC": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testSomeCorrect": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testThirdAUCPRSpecialCase": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testUpdatesCollection": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testWeighted1d": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testWeighted2d": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "_enqueue_as_batches",
    "int",
    "numpy.ones",
    "numpy.random.exponential",
    "numpy.random.normal",
    "numpy.random.randint",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testWithMultipleUpdates._enqueue_as_batches": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "numpy.float32",
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAUCTest.testZeroTruePositivesAndFalseNegativesGivesOneAUC": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.setUp": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testEffectivelyEquivalentSizes": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testMetricsCollection": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testMultipleUpdates": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testMultipleUpdatesWithWeightedValues": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testPredictionsAndLabelsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testPredictionsAndWeightsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testUpdatesCollection": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingAccuracyTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest": {
  "data": {
   "lineno": 2846,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.setUp": {
  "data": {
   "lineno": 2848,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testMetricsCollection": {
  "data": {
   "lineno": 2851,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testMultiUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 2953,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cov",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.tile",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._reweight",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testMultiUpdateWithErrorNoWeights": {
  "data": {
   "lineno": 2923,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testSingleUpdateIdentical": {
  "data": {
   "lineno": 2884,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cov",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.range",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testSingleUpdateNonIdentical": {
  "data": {
   "lineno": 2896,
   "symbols_in_volume": [
    "numpy.cov",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 2908,
   "symbols_in_volume": [
    "numpy.cov",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._reweight",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testUpdatesCollection": {
  "data": {
   "lineno": 2859,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingCovarianceTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2867,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanAbsoluteErrorTest": {
  "data": {
   "lineno": 2468,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanAbsoluteErrorTest.setUp": {
  "data": {
   "lineno": 2470,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanAbsoluteErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanAbsoluteErrorTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 2507,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanAbsoluteErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 2481,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanAbsoluteErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2489,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest": {
  "data": {
   "lineno": 3143,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.setUp": {
  "data": {
   "lineno": 3145,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testMetricsCollection": {
  "data": {
   "lineno": 3148,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithError1": {
  "data": {
   "lineno": 3200,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithError2": {
  "data": {
   "lineno": 3219,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithErrorAndWeights1": {
  "data": {
   "lineno": 3239,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithErrorAndWeights2": {
  "data": {
   "lineno": 3259,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateZeroError": {
  "data": {
   "lineno": 3184,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testUpdatesCollection": {
  "data": {
   "lineno": 3157,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanCosineDistanceTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 3166,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest": {
  "data": {
   "lineno": 3344,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.setUp": {
  "data": {
   "lineno": 3346,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testAllCorrect": {
  "data": {
   "lineno": 3555,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testAllWrong": {
  "data": {
   "lineno": 3566,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testIgnoreMaskIsNotBooleanRaisesTypeError": {
  "data": {
   "lineno": 3383,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testLabelsAndIgnoreMaskOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 3375,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.bool",
    "tensorflow.cast",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testLabelsAndWeightsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 3391,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testMetricsCollections": {
  "data": {
   "lineno": 3350,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testMultipleUpdates": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testMultipleUpdatesWithMissingClass": {
  "data": {
   "lineno": 3503,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testMultipleUpdatesWithWeights": {
  "data": {
   "lineno": 3450,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.bool",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testPredictionsAndLabelsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 3368,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testResultsWithSomeMissing": {
  "data": {
   "lineno": 3577,
   "symbols_in_volume": [
    "numpy.mean",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testUpdateOpEvalIsAccumulatedConfusionMatrix": {
  "data": {
   "lineno": 3538,
   "symbols_in_volume": [
    "numpy.mean",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testUpdatesCollection": {
  "data": {
   "lineno": 3359,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanIOUTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 3399,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanRelativeErrorTest": {
  "data": {
   "lineno": 2521,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanRelativeErrorTest.setUp": {
  "data": {
   "lineno": 2523,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanRelativeErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanRelativeErrorTest.testSingleUpdateNormalizedByLabels": {
  "data": {
   "lineno": 2564,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.asarray",
    "numpy.divide",
    "numpy.float32",
    "numpy.mean",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanRelativeErrorTest.testSingleUpdateNormalizedByZeros": {
  "data": {
   "lineno": 2582,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanRelativeErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 2536,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanRelativeErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2545,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest": {
  "data": {
   "lineno": 2597,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.setUp": {
  "data": {
   "lineno": 2599,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 2602,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testMetricsComputedConcurrently": {
  "data": {
   "lineno": 2696,
   "symbols_in_volume": [
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testMultipleBatchesOfSizeOne": {
  "data": {
   "lineno": 2673,
   "symbols_in_volume": [
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testMultipleMetricsOnMultipleBatchesOfSizeOne": {
  "data": {
   "lineno": 2735,
   "symbols_in_volume": [
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testSingleUpdateWithError": {
  "data": {
   "lineno": 2648,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 2660,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testSingleUpdateZeroError": {
  "data": {
   "lineno": 2636,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanSquaredErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.setUp": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testBasic": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testMetricsCollection": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testMultiDimensional": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testUpdateOpsReturnsCurrentValue": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testUpdatesCollection": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testWeighted1d": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testWeighted2d_1": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTensorTest.testWeighted2d_2": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.setUp": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.test1dWeightedValues": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.test1dWeightedValues_placeholders": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.test2dWeightedValues": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.test2dWeightedValues_placeholders": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.testBasic": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.testMetricsCollection": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.testUpdateOpsReturnsCurrentValue": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.FIFOQueue",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingMeanTest.testUpdatesCollection": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest": {
  "data": {
   "lineno": 2990,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.setUp": {
  "data": {
   "lineno": 2992,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testMetricsCollection": {
  "data": {
   "lineno": 2995,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testMultiUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 3105,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cov",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.sqrt",
    "numpy.tile",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._reweight",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testMultiUpdateWithErrorNoWeights": {
  "data": {
   "lineno": 3074,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testSingleUpdateIdentical": {
  "data": {
   "lineno": 3029,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.corrcoef",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.range",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testSingleUpdateNonIdentical": {
  "data": {
   "lineno": 3042,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 3055,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cov",
    "numpy.sqrt",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._reweight",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testUpdatesCollection": {
  "data": {
   "lineno": 3003,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPearsonRTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 3011,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.setUp": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testAllCorrect": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testAllIncorrect": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testExtremeThresholds": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testMetricsCollection": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testSomeCorrect": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testUpdatesCollection": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testWeights1d": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.reshape",
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testWeights2d": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.reshape",
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.randint",
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testZeroLabelsPredictions": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.setUp": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testAllCorrect": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testAllIncorrect": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testMasked": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testMetricsCollection": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testSomeCorrect": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testUpdatesCollection": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testWeighted1d": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testWeighted1d_placeholders": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testWeighted2d": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testWeighted2d_placeholders": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingPrecisionTest.testZeroTrueAndFalsePositivesGivesZeroPrecision": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest.setUp": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest.testMetricsCollection": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.int32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateKIs1": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateKIs2": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateKIs3": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateSomeMissingKIs2": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallAtKTest.testUpdatesCollection": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.int32",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.setUp": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testAllCorrect": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testAllIncorrect": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testMasked": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testMetricsCollection": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testSomeCorrect": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testUpdatesCollection": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testWeighted1d": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testWeighted2d": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRecallTest.testZeroTruePositivesAndFalseNegativesGivesZeroRecall": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest.setUp": {
  "data": {
   "lineno": 2764,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 2767,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest.testSingleUpdateWithError": {
  "data": {
   "lineno": 2814,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.math",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 2826,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.math",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest.testSingleUpdateZeroError": {
  "data": {
   "lineno": 2801,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 2775,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingRootMeanSquaredErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2783,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.initialize_local_variables",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.setUp": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.testAllCorrect": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.testMetricsCollection": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.testSomeCorrectHighSpecificity": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.testSomeCorrectLowSpecificity": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.testUpdatesCollection": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSensitivityAtSpecificityTest.testWeighted": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest._test_sparse_average_precision_at_k": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops.sparse_average_precision_at_k",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest._test_streaming_sparse_average_precision_at_k": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.OpError",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.math",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_variables",
    "tensorflow.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest._test_streaming_sparse_precision_at_k": {
  "data": {
   "lineno": 1697,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.OpError",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.math",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_variables",
    "tensorflow.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_3d": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_3d_ignore_all": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_3d_ignore_some": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_3d_no_labels": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_3d_no_predictions": {
  "data": {
   "lineno": 1934,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_average_precision": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "six.moves.xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_one_label_at_k1": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_one_label_at_k1_no_predictions": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_sparse_tensor_value": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_variables",
    "tensorflow.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_three_labels_at_k5": {
  "data": {
   "lineno": 1907,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_three_labels_at_k5_no_labels": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparsePrecisionTest.test_three_labels_at_k5_no_predictions": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest._test_streaming_sparse_recall_at_k": {
  "data": {
   "lineno": 2105,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.OpError",
    "tensorflow.bool",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.math",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_variables",
    "tensorflow.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_3d": {
  "data": {
   "lineno": 2344,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_3d_ignore_all": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_3d_ignore_some": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_3d_no_labels": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_3d_no_predictions": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1": {
  "data": {
   "lineno": 2157,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1_empty_classes": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1_no_predictions": {
  "data": {
   "lineno": 2147,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1_weighted": {
  "data": {
   "lineno": 2171,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_sparse_tensor_value": {
  "data": {
   "lineno": 2454,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_variables",
    "tensorflow.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_three_labels_at_k5": {
  "data": {
   "lineno": 2272,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_three_labels_at_k5_no_labels": {
  "data": {
   "lineno": 2243,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.NAN",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSparseRecallTest.test_three_labels_at_k5_no_predictions": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.setUp": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testAllCorrect": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testMetricsCollection": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testSomeCorrectHighSensitivity": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testSomeCorrectLowSensitivity": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testUpdatesCollection": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.get_collection",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables",
    "tensorflow.int64",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testWeighted1d": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.StreamingSpecificityAtSensitivityTest.testWeighted2d": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics",
    "tensorflow.float32",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.SparseTensor.from_value",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_2d_label_to_sparse_value": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int64",
    "tensorflow.SparseTensorValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.SparseTensor.from_value",
    "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test._binary_3d_label_to_sparse_value": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.int64",
    "tensorflow.SparseTensorValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test._enqueue_vector": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test._reweight": {
  "data": {
   "lineno": 2841,
   "symbols_in_volume": [
    "int",
    "numpy.concatenate",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.metric_ops": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.metrics": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest._testRemoveSqueezableDimensions": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.metrics.python.ops.metric_ops_util.remove_squeezable_dimensions",
    "tensorflow.initialize_local_variables",
    "tensorflow.int32",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_extraLabelDim": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_extraPredictionDim": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_extraPredictionDim_staticLabel": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_static": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_staticLabel": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_staticLabel_extraLabelDim": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_staticPrediction": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_staticPrediction_extraLabelDim": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_staticPrediction_extraPredictionDim": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_static_extraLabelDim": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.RemoveSqueezableDimensionsTest.testRemoveSqueezableDimensions_static_extraPredictionDim": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.metric_ops_util": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.metric_ops_util_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops": {
  "data": {
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.metrics.python.ops.set_ops._set_ops",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.int8",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.dtypes.uint16",
    "tensorflow.python.framework.dtypes.uint8",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops._VALID_DTYPES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops._set_operation": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.contrib.framework.python.framework.tensor_util.convert_to_tensor_or_sparse_tensor",
    "tensorflow.contrib.metrics.python.ops.set_ops._VALID_DTYPES",
    "tensorflow.contrib.metrics.python.ops.set_ops._set_ops",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops._set_ops": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.set_difference": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.set_ops._set_operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.set_intersection": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.set_ops._set_operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.set_size": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.contrib.framework.python.framework.tensor_util.convert_to_tensor_or_sparse_tensor",
    "tensorflow.contrib.metrics.python.ops.set_ops._VALID_DTYPES",
    "tensorflow.contrib.metrics.python.ops.set_ops._set_ops",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.set_union": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.set_ops._set_operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.metrics.python.ops.set_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.set_difference": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.set_ops.set_difference"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.set_intersection": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.set_ops.set_intersection"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.set_size": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.set_ops.set_size"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.set_union": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.set_ops.set_union"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_accuracy": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_accuracy"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_auc": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_auc"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_covariance": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_covariance"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_mean": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_mean_absolute_error": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_absolute_error"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_mean_cosine_distance": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_cosine_distance"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_mean_iou": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_iou"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_mean_relative_error": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_relative_error"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_mean_squared_error": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_squared_error"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_mean_tensor": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean_tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_pearson_correlation": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_pearson_correlation"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_percentage_less": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_percentage_less"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_precision": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_precision"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_precision_at_thresholds": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_precision_at_thresholds"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_recall": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_recall_at_k": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall_at_k"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_recall_at_thresholds": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_recall_at_thresholds"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_root_mean_squared_error": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_root_mean_squared_error"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_sensitivity_at_specificity": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sensitivity_at_specificity"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_sparse_average_precision_at_k": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_average_precision_at_k"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_sparse_precision_at_k": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_precision_at_k"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_sparse_recall_at_k": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_sparse_recall_at_k"
  },
  "type": "import"
 },
 "tensorflow.contrib.metrics.streaming_specificity_at_sensitivity": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_specificity_at_sensitivity"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.opt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.opt.python.training": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_accumulate",
    "_compute_gradients",
    "_get_shape_tuple",
    "_prod",
    "list",
    "slice",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.variables.trainable_variables",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface._make_eval_func": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface._make_eval_func.eval_func": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "_get_shape_tuple",
    "callable",
    "callback",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface._make_eval_funcs": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface._minimize": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface._pack": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface.minimize": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dict",
    "tensorflow.python.framework.ops.get_default_session",
    "tensorflow.python.platform.tf_logging.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ScipyOptimizerInterface": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ScipyOptimizerInterface._minimize": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ScipyOptimizerInterface._minimize.loss_grad_func_wrapper": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "loss_grad_func"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer._accumulate": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer._compute_gradients": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.gradients.gradients",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer._get_shape_tuple": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer._prod": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.gradients": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.external_optimizer.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.MovingAverageOptimizer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.MovingAverageOptimizer.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.python.training.moving_averages.ExponentialMovingAverage"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.MovingAverageOptimizer.apply_gradients": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.MovingAverageOptimizer.swapping_saver": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "isinstance",
    "tensorflow.contrib.opt.python.training.moving_average_optimizer.six",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.training.saver.BaseSaverBuilder.OpListToDict",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.moving_averages": {
  "data": {
   "shadows": "tensorflow.python.training.moving_averages"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.moving_average_optimizer.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer._clip_dense": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.clip_ops.clip_by_norm"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer._clip_sparse": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.clip_ops.clip_by_norm",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer._maybe_colocate_with": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.contextlib",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer.apply_gradients": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer.compute_gradients": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer.get_slot": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer.get_slot_names": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.opt.python.training.variable_clipping_optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.quantization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.dequantize": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops.dequantize"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.kernels": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.threading"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.Load": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.QUANTIZED_KERNELS_FILE",
    "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so._kernels_lock",
    "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so._quantized_kernels",
    "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.os",
    "tensorflow.load_op_library",
    "tensorflow.logging.info",
    "tensorflow.resource_loader.get_data_files_path"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.QUANTIZED_KERNELS_FILE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so._kernels_lock": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so._quantized_kernels": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.kernels.load_quantized_kernels_so.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.load_quantized_ops_so.threading"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.Load": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.load_quantized_ops_so.QUANTIZED_OPS_FILE",
    "tensorflow.contrib.quantization.load_quantized_ops_so._ops_lock",
    "tensorflow.contrib.quantization.load_quantized_ops_so._quantized_ops",
    "tensorflow.contrib.quantization.load_quantized_ops_so.os",
    "tensorflow.load_op_library",
    "tensorflow.logging.info",
    "tensorflow.resource_loader.get_data_files_path"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.QUANTIZED_OPS_FILE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so._ops_lock": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so._quantized_ops": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.load_quantized_ops_so.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_array_ops._InitOpDefLibrary",
    "tensorflow.contrib.quantization.ops.gen_array_ops._quantize_v2_outputs",
    "tensorflow.contrib.quantization.ops.gen_array_ops._quantized_concat_outputs",
    "tensorflow.contrib.quantization.ops.gen_array_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops._QuantizeV2Output": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops._QuantizedConcatOutput": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops._dequantize_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops._op_def_lib": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops._quantize_v2_outputs": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops._quantized_concat_outputs": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.dequantize": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.quantize_v2": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "input",
    "tensorflow.contrib.quantization.ops.gen_array_ops._QuantizeV2Output"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.quantized_concat": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_array_ops._QuantizedConcatOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_array_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_math_ops._InitOpDefLibrary",
    "tensorflow.contrib.quantization.ops.gen_math_ops._quantize_down_and_shrink_range_outputs",
    "tensorflow.contrib.quantization.ops.gen_math_ops._quantized_mat_mul_outputs",
    "tensorflow.contrib.quantization.ops.gen_math_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops._QuantizeDownAndShrinkRangeOutput": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops._QuantizedMatMulOutput": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops._op_def_lib": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops._quantize_down_and_shrink_range_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops._quantized_mat_mul_outputs": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.quantize_down_and_shrink_range": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "input",
    "tensorflow.contrib.quantization.ops.gen_math_ops._QuantizeDownAndShrinkRangeOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.quantized_mat_mul": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_math_ops._QuantizedMatMulOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_math_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_nn_ops._InitOpDefLibrary",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_avg_pool_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_batch_norm_with_global_normalization_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_bias_add_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_conv2d_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_max_pool_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_relu6_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_relu_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_relu_x_outputs",
    "tensorflow.contrib.quantization.ops.gen_nn_ops.collections",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedAvgPoolOutput": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedBatchNormWithGlobalNormalizationOutput": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedBiasAddOutput": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedConv2DOutput": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedMaxPoolOutput": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedRelu6Output": {
  "data": {
   "lineno": 319
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedReluOutput": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedReluXOutput": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._op_def_lib": {
  "data": {
   "lineno": 969
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_avg_pool_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_batch_norm_with_global_normalization_outputs": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_bias_add_outputs": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_conv2d_outputs": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_max_pool_outputs": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_relu6_outputs": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_relu_outputs": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops._quantized_relu_x_outputs": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_avg_pool": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "input",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedAvgPoolOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_batch_norm_with_global_normalization": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedBatchNormWithGlobalNormalizationOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_bias_add": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "input",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedBiasAddOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_conv2d": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "filter",
    "input",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedConv2DOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_max_pool": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "input",
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedMaxPoolOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_relu": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedReluOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_relu6": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedRelu6Output"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.quantized_relu_x": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "tensorflow.contrib.quantization.ops.gen_nn_ops._QuantizedReluXOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.quantization.ops.gen_nn_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.quantization.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.array_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.quantization.python.array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.array_ops.dequantize": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops.dequantize"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.array_ops.quantize_v2": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops.quantize_v2"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.array_ops.quantized_concat": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops.quantized_concat"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.array_ops.quantized_gen_array_ops": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.math_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.quantization.python.math_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.math_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.math_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.math_ops.gen_math_ops": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.math_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.math_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.nn_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.quantization.python.nn_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.nn_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.nn_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.nn_ops.gen_nn_ops": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.nn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.nn_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.quantize_v2": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops.quantize_v2"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.quantized_array_ops": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.python.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.quantized_concat": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops.quantized_concat"
  },
  "type": "import"
 },
 "tensorflow.contrib.quantization.quantized_gen_array_ops": {
  "data": {
   "shadows": "tensorflow.contrib.quantization.ops.gen_array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.rnn.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.rnn.python.ops.gru_ops._gru_ops_so",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.GRUBlockCell": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.GRUBlockCell.__call__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "_gru_block_cell",
    "tensorflow.contrib.rnn.python.ops.gru_ops._gru_ops_so",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.GRUBlockCell.__init__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.GRUBlockCell.output_size": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.GRUBlockCell.state_size": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops._GRUBlockCellGrad": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.rnn.python.ops.gru_ops._gru_ops_so",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.nn_ops.bias_add_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops._gru_ops_so": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.gru_ops.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_ops_so",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.LSTMBlockCell": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.LSTMBlockCell.__call__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "str",
    "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_block_cell",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.LSTMBlockCell.__init__": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.LSTMBlockCell.output_size": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.LSTMBlockCell.state_size": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops._BlockLSTMGrad": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_ops_so",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops._LSTMBlockCellGrad": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_ops_so",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.nn_ops.bias_add_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops._block_lstm": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_ops_so",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_block_cell": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_ops_so",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_block_cell_grad_outputs": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops._lstm_ops_so": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.lstm_ops.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell._linear"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.AttentionCellWrapper": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.AttentionCellWrapper.__call__": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.rnn.python.ops.rnn_cell._linear",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.AttentionCellWrapper.__init__": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "str",
    "tensorflow.python.ops.rnn_cell.RNNCell",
    "tensorflow.python.platform.tf_logging.warn",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.AttentionCellWrapper._attention": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "conv2d",
    "reduce_sum",
    "softmax",
    "tanh",
    "tensorflow.contrib.rnn.python.ops.rnn_cell._linear",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.ops.nn_ops.conv2d",
    "tensorflow.python.ops.nn_ops.softmax",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.AttentionCellWrapper.output_size": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.AttentionCellWrapper.state_size": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "list",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.CoupledInputForgetGateLSTMCell": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.CoupledInputForgetGateLSTMCell.__call__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "sigmoid",
    "tensorflow.contrib.rnn.python.ops.rnn_cell._get_concat_variable",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.clip_ops.clip_by_value",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.nn_ops.bias_add",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.CoupledInputForgetGateLSTMCell.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.CoupledInputForgetGateLSTMCell.output_size": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.CoupledInputForgetGateLSTMCell.state_size": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.GridLSTMCell": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.GridLSTMCell.__call__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "getattr",
    "int",
    "len",
    "range",
    "sigmoid",
    "tanh",
    "tensorflow.contrib.rnn.python.ops.rnn_cell._get_concat_variable",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.clip_ops.clip_by_value",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.ops.nn_ops.bias_add",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.GridLSTMCell.__init__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "int",
    "range",
    "tensorflow.contrib.rnn.python.ops.rnn_cell.collections",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.GridLSTMCell._make_tf_features": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "range",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.GridLSTMCell.output_size": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.GridLSTMCell.state_size": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.GridLSTMCell.state_tuple_type": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell.__call__": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.nn_ops.dropout",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell.__init__": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell._linear": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell._norm": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.python.layers.layers.layer_norm",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell.output_size": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell.state_size": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.TimeFreqLSTMCell": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.TimeFreqLSTMCell.__call__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "sigmoid",
    "tanh",
    "tensorflow.contrib.rnn.python.ops.rnn_cell._get_concat_variable",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.clip_ops.clip_by_value",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.ops.nn_ops.bias_add",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.TimeFreqLSTMCell.__init__": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.TimeFreqLSTMCell._make_tf_features": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "range",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.TimeFreqLSTMCell.output_size": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.TimeFreqLSTMCell.state_size": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell._get_concat_variable": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_get_sharded_variable",
    "len",
    "tensorflow.python.framework.ops.GraphKeys.CONCATENATED_VARIABLES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell._get_sharded_variable": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "range",
    "tensorflow.contrib.rnn.python.ops.rnn_cell.math",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell._linear": {
  "data": {
   "lineno": 761
  },
  "type": "constant"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers.python.layers.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.contrib.rnn.python.ops.rnn_cell.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.constants": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.constants.EXPORT_BASE_NAME",
    "tensorflow.contrib.session_bundle.constants.EXPORT_SUFFIX_NAME",
    "tensorflow.contrib.session_bundle.constants.VARIABLES_FILENAME"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.constants.ASSETS_DIRECTORY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.ASSETS_KEY": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.EXPORT_BASE_NAME": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.EXPORT_SUFFIX_NAME": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.GRAPH_KEY": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.META_GRAPH_DEF_FILENAME": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.SIGNATURES_KEY": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.VARIABLES_FILENAME": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.VARIABLES_FILENAME_PATTERN": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.VERSION_FORMAT_SPECIFIER": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.constants.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.constants.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.exporter.Any": {
  "data": {
   "shadows": "google.protobuf.any_pb2.Any"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.Exporter": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.session_bundle.exporter.Exporter.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.as_saver_def"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.Exporter._file_path_value": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.Exporter.export": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "RuntimeError",
    "paths_to_delete",
    "tensorflow.contrib.session_bundle.constants.ASSETS_DIRECTORY",
    "tensorflow.contrib.session_bundle.constants.EXPORT_BASE_NAME",
    "tensorflow.contrib.session_bundle.constants.EXPORT_SUFFIX_NAME",
    "tensorflow.contrib.session_bundle.constants.VERSION_FORMAT_SPECIFIER",
    "tensorflow.contrib.session_bundle.exporter.os",
    "tensorflow.contrib.session_bundle.gc.get_paths",
    "tensorflow.contrib.session_bundle.gc.negation",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.python.platform.gfile.Rename",
    "tensorflow.python.training.training_util.global_step",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.as_text"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.Exporter.export.parser": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "int",
    "tensorflow.contrib.session_bundle.exporter.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.Exporter.init": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "google.protobuf.any_pb2.Any",
    "isinstance",
    "tensorflow.contrib.session_bundle.constants.ASSETS_KEY",
    "tensorflow.contrib.session_bundle.constants.GRAPH_KEY",
    "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY",
    "tensorflow.contrib.session_bundle.constants.SIGNATURES_KEY",
    "tensorflow.contrib.session_bundle.exporter.gfile_copy_callback",
    "tensorflow.contrib.session_bundle.exporter.os",
    "tensorflow.contrib.session_bundle.exporter.six",
    "tensorflow.contrib.session_bundle.manifest_pb2.AssetFile",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signatures",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.classification_signature": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.manifest_pb2.Signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.constants": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.gc": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.gc"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.generic_signature": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.exporter.six",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.gfile_copy_callback": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.exporter.os",
    "tensorflow.python.platform.gfile.Copy",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.python.platform.gfile.Remove",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.manifest_pb2": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.manifest_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.regression_signature": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.manifest_pb2.Signature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.flags.FLAGS",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.exporter_test.FLAGS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.exporter_test.GLOBAL_STEP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest.doBasicsOneExportPath": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.GraphDef",
    "tensorflow.GraphKeys.ASSET_FILEPATHS",
    "tensorflow.Session",
    "tensorflow.Variable",
    "tensorflow.add",
    "tensorflow.add_to_collection",
    "tensorflow.assign",
    "tensorflow.constant",
    "tensorflow.contrib.session_bundle.constants.ASSETS_DIRECTORY",
    "tensorflow.contrib.session_bundle.constants.ASSETS_KEY.any_list.value",
    "tensorflow.contrib.session_bundle.constants.GRAPH_KEY.any_list.value",
    "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY",
    "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY.node_list.value",
    "tensorflow.contrib.session_bundle.constants.META_GRAPH_DEF_FILENAME",
    "tensorflow.contrib.session_bundle.constants.SIGNATURES_KEY.any_list.value",
    "tensorflow.contrib.session_bundle.constants.VARIABLES_FILENAME",
    "tensorflow.contrib.session_bundle.constants.VARIABLES_FILENAME_PATTERN",
    "tensorflow.contrib.session_bundle.constants.VERSION_FORMAT_SPECIFIER",
    "tensorflow.contrib.session_bundle.exporter.Exporter",
    "tensorflow.contrib.session_bundle.exporter.classification_signature",
    "tensorflow.contrib.session_bundle.exporter.generic_signature",
    "tensorflow.contrib.session_bundle.exporter.regression_signature",
    "tensorflow.contrib.session_bundle.exporter_test.GLOBAL_STEP",
    "tensorflow.contrib.session_bundle.gc.largest_export_versions",
    "tensorflow.contrib.session_bundle.manifest_pb2.AssetFile",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signatures",
    "tensorflow.core.protobuf.config_pb2.ConfigProto",
    "tensorflow.get_collection",
    "tensorflow.get_default_graph",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.FastGFile",
    "tensorflow.python.platform.gfile.GFile",
    "tensorflow.reset_default_graph",
    "tensorflow.test.get_temp_dir",
    "tensorflow.train.Saver",
    "tensorflow.train.import_meta_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest.testBasics": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest.testBasicsNoShard": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest.testClearDevice": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest.testDuplicateExportRaisesError": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest.testExportMultipleTimes": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.SaveRestoreShardedTest.testGC": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.platform.gfile.ListDirectory",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.constants": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.exporter": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.exporter"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.gc": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.gc"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.manifest_pb2": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.manifest_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.exporter_test.tearDownModule": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.exporter_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.gc.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.gc.Path": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.gc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.get_paths": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "parser",
    "sorted",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.os",
    "tensorflow.python.platform.gfile.ListDirectory"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.largest_export_versions": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.largest_export_versions.keep": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "enumerate",
    "sorted",
    "tensorflow.contrib.session_bundle.gc.heapq"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.mod_export_version": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.mod_export_version.keep": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.negation": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.negation.keep": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "f",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.one_of_every_n_export_versions": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.one_of_every_n_export_versions.keep": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.contrib.session_bundle.gc.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc.union": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.union.keep": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "lf",
    "list",
    "rf",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testLargestExportVersions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "newest",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.largest_export_versions"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testLargestExportVersionsDoesNotDeleteZeroFolder": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "newest",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.largest_export_versions"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testModExportVersion": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "mod",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.mod_export_version"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testNegation": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mod",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.mod_export_version",
    "tensorflow.contrib.session_bundle.gc.negation"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testOneOfEveryNExportVersions": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "one_of",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.one_of_every_n_export_versions"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testOneOfEveryNExportVersionsZero": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "one_of",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.one_of_every_n_export_versions"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testPathsWithParse": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.get_paths",
    "tensorflow.contrib.session_bundle.gc_test.os",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testPathsWithParse.parser": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "tensorflow.contrib.session_bundle.gc_test.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.GcTest.testUnion": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "f",
    "six.moves.xrange",
    "tensorflow.contrib.session_bundle.gc.Path",
    "tensorflow.contrib.session_bundle.gc.largest_export_versions",
    "tensorflow.contrib.session_bundle.gc.mod_export_version",
    "tensorflow.contrib.session_bundle.gc.union"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.gc": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.gc"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.tearDownModule": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.gc_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.gc_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.contrib.session_bundle.manifest_pb2.AssetFile",
    "tensorflow.contrib.session_bundle.manifest_pb2.ClassificationSignature",
    "tensorflow.contrib.session_bundle.manifest_pb2.DESCRIPTOR",
    "tensorflow.contrib.session_bundle.manifest_pb2.GenericSignature",
    "tensorflow.contrib.session_bundle.manifest_pb2.RegressionSignature",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signature",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signatures",
    "tensorflow.contrib.session_bundle.manifest_pb2.TensorBinding",
    "tensorflow.contrib.session_bundle.manifest_pb2._ASSETFILE",
    "tensorflow.contrib.session_bundle.manifest_pb2._CLASSIFICATIONSIGNATURE",
    "tensorflow.contrib.session_bundle.manifest_pb2._GENERICSIGNATURE",
    "tensorflow.contrib.session_bundle.manifest_pb2._GENERICSIGNATURE_MAPENTRY",
    "tensorflow.contrib.session_bundle.manifest_pb2._REGRESSIONSIGNATURE",
    "tensorflow.contrib.session_bundle.manifest_pb2._SIGNATURE",
    "tensorflow.contrib.session_bundle.manifest_pb2._SIGNATURES",
    "tensorflow.contrib.session_bundle.manifest_pb2._SIGNATURES_NAMEDSIGNATURESENTRY",
    "tensorflow.contrib.session_bundle.manifest_pb2._TENSORBINDING",
    "tensorflow.contrib.session_bundle.manifest_pb2._b",
    "tensorflow.contrib.session_bundle.manifest_pb2._sym_db",
    "tensorflow.contrib.session_bundle.manifest_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.AssetFile": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.ClassificationSignature": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.GenericSignature": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.RegressionSignature": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.Signature": {
  "data": {
   "lineno": 433
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.Signatures": {
  "data": {
   "lineno": 404
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.TensorBinding": {
  "data": {
   "lineno": 419
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._ASSETFILE": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._CLASSIFICATIONSIGNATURE": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._GENERICSIGNATURE": {
  "data": {
   "lineno": 341
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._GENERICSIGNATURE_MAPENTRY": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._REGRESSIONSIGNATURE": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._SIGNATURE": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._SIGNATURES": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._SIGNATURES_NAMEDSIGNATURESENTRY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._TENSORBINDING": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.manifest_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.session_bundle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.constants": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.load_session_bundle_from_path": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "tensorflow.GraphDef",
    "tensorflow.Session",
    "tensorflow.contrib.session_bundle.constants.ASSETS_DIRECTORY",
    "tensorflow.contrib.session_bundle.constants.ASSETS_KEY",
    "tensorflow.contrib.session_bundle.constants.ASSETS_KEY.any_list.value",
    "tensorflow.contrib.session_bundle.constants.GRAPH_KEY",
    "tensorflow.contrib.session_bundle.constants.GRAPH_KEY.any_list.value",
    "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY",
    "tensorflow.contrib.session_bundle.constants.INIT_OP_KEY.node_list.value",
    "tensorflow.contrib.session_bundle.constants.META_GRAPH_DEF_FILENAME",
    "tensorflow.contrib.session_bundle.constants.VARIABLES_FILENAME",
    "tensorflow.contrib.session_bundle.constants.VARIABLES_FILENAME_PATTERN",
    "tensorflow.contrib.session_bundle.manifest_pb2.AssetFile",
    "tensorflow.contrib.session_bundle.session_bundle.os",
    "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "tensorflow.get_collection",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.get_matching_files",
    "tensorflow.python.lib.io.file_io.read_file_to_string",
    "tensorflow.reset_default_graph",
    "tensorflow.train.import_meta_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.session_bundle.manifest_pb2": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.manifest_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.meta_graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.meta_graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.SessionBundleLoadNoVarsTest": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.SessionBundleLoadNoVarsTest.setUp": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.add_to_collection",
    "tensorflow.contrib.session_bundle.constants.META_GRAPH_DEF_FILENAME",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.python.framework.graph_util.convert_variables_to_constants",
    "tensorflow.sub",
    "tensorflow.test.get_temp_dir",
    "tensorflow.train.export_meta_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.SessionBundleLoadNoVarsTest.tearDown": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.session_bundle_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.SessionBundleLoadNoVarsTest.testGraphWithoutVarsLoadsCorrectly": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.contrib.session_bundle.session_bundle.load_session_bundle_from_path",
    "tensorflow.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.SessionBundleLoadTest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.SessionBundleLoadTest.testBadPath": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "RuntimeError",
    "str",
    "tensorflow.ConfigProto",
    "tensorflow.contrib.session_bundle.session_bundle.load_session_bundle_from_path",
    "tensorflow.reset_default_graph",
    "tensorflow.test.test_src_dir_path"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.SessionBundleLoadTest.testBasic": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "tensorflow.ConfigProto",
    "tensorflow.contrib.session_bundle.constants.ASSETS_DIRECTORY",
    "tensorflow.contrib.session_bundle.constants.SIGNATURES_KEY.any_list.value",
    "tensorflow.contrib.session_bundle.manifest_pb2.Signatures",
    "tensorflow.contrib.session_bundle.session_bundle.load_session_bundle_from_path",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.reset_default_graph",
    "tensorflow.test.test_src_dir_path"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.constants": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.graph_util": {
  "data": {
   "shadows": "tensorflow.python.framework.graph_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.manifest_pb2": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.manifest_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.session_bundle": {
  "data": {
   "shadows": "tensorflow.contrib.session_bundle.session_bundle"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tensorflow.contrib.session_bundle.session_bundle_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.data_decoder": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.data_decoder"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.data_provider": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.data_provider"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.dataset": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.dataset"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.dataset_data_provider": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.dataset_data_provider"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.evaluation": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.evaluation"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.learning": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.learning"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.losses": {
  "data": {
   "shadows": "tensorflow.contrib.losses"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.metrics": {
  "data": {
   "shadows": "tensorflow.contrib.metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.model_analyzer": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.model_analyzer"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.nets.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.nets.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.alexnet": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.alexnet"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.inception": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.overfeat": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.overfeat"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.resnet_utils": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.resnet_v1": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.resnet_v1"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.resnet_v2": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.resnet_v2"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.nets.vgg": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.vgg"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.parallel_reader": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.parallel_reader"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.prefetch_queue": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.prefetch_queue"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder.DataDecoder": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.slim.python.slim.data.data_decoder.abc"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder.DataDecoder.decode": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.data_decoder.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder.DataDecoder.list_items": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.data_decoder.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.data_decoder.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.DataProvider": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.slim.python.slim.data.data_provider.abc"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.DataProvider.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.DataProvider._validate_items": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.DataProvider.get": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.DataProvider.list_items": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.DataProvider.num_samples": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.data_provider.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset.Dataset": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset.Dataset.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.DatasetDataProvider": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.data_provider.DataProvider"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.DatasetDataProvider.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "super",
    "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.DatasetDataProvider",
    "tensorflow.contrib.slim.python.slim.data.parallel_reader.parallel_read",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.data_provider": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.data_provider"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.parallel_reader": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.parallel_reader"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.DatasetDataProviderTest": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.DatasetDataProviderTest.testTFRecordDataset": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list",
    "tensorflow.Session",
    "tensorflow.contrib.slim.dataset_data_provider.DatasetDataProvider",
    "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test._create_tfrecord_dataset",
    "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test._resize_image",
    "tensorflow.contrib.slim.queues.QueueRunners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.DatasetDataProviderTest.testTFRecordSeparateGetDataset": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "list",
    "tensorflow.Session",
    "tensorflow.contrib.slim.dataset_data_provider.DatasetDataProvider",
    "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test._create_tfrecord_dataset",
    "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test._resize_image",
    "tensorflow.contrib.slim.queues.QueueRunners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test._create_tfrecord_dataset": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.FixedLenFeature",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.slim.dataset.Dataset",
    "tensorflow.contrib.slim.python.slim.data.test_utils.create_tfrecord_files",
    "tensorflow.contrib.slim.tfexample_decoder.Image",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.int64",
    "tensorflow.string",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test._resize_image": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.expand_dims",
    "tensorflow.image.resize_bilinear",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.slim": {
  "data": {
   "shadows": "tensorflow.contrib.slim"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.test_utils": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.test_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.dataset_data_provider_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops.ReaderBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "range",
    "reader_class",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader.common_queue": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader.num_readers": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader.num_records_produced": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader.num_work_units_completed": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader.read": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.get_data_files": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "tensorflow.python.platform.gfile.Glob",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.parallel_read": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "get_data_files",
    "reader_class",
    "tensorflow.contrib.slim.python.slim.data.parallel_reader.ParallelReader",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.training.input.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.single_pass_read": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "get_data_files",
    "reader_class",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.training.input.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.tf_dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader.tf_input": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReadTest": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReadTest.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReadTest.testTFRecordReader": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "range",
    "str",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.slim.parallel_reader.parallel_read",
    "tensorflow.contrib.slim.python.slim.data.test_utils.create_tfrecord_files",
    "tensorflow.train.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReaderTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReaderTest._verify_all_data_sources_read": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.slim.parallel_reader.ParallelReader",
    "tensorflow.contrib.slim.parallel_reader.get_data_files",
    "tensorflow.contrib.slim.python.slim.data.test_utils.create_tfrecord_files",
    "tensorflow.train.Supervisor",
    "tensorflow.train.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReaderTest.setUp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReaderTest.testFIFOSharedQueue": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.FIFOQueue",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.ParallelReaderTest.testRandomShuffleQueue": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.RandomShuffleQueue",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.SinglePassReadTest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.SinglePassReadTest.setUp": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.SinglePassReadTest.testOutOfRangeError": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "range",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.slim.parallel_reader.single_pass_read",
    "tensorflow.contrib.slim.python.slim.data.test_utils.create_tfrecord_files",
    "tensorflow.contrib.slim.queues.QueueRunners",
    "tensorflow.errors.OutOfRangeError",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.SinglePassReadTest.testTFRecordReader": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "range",
    "str",
    "tensorflow.TFRecordReader",
    "tensorflow.contrib.slim.parallel_reader.single_pass_read",
    "tensorflow.contrib.slim.python.slim.data.test_utils.create_tfrecord_files",
    "tensorflow.contrib.slim.queues.QueueRunners",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.slim": {
  "data": {
   "shadows": "tensorflow.contrib.slim"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.test_utils": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.test_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.parallel_reader_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.prefetch_queue": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "sorted",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.PrefetchQueueTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.PrefetchQueueTest.testDictConstruction": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.prefetch_queue.prefetch_queue",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.PrefetchQueueTest.testMultiThread": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sort",
    "range",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.prefetch_queue.prefetch_queue",
    "tensorflow.errors.OutOfRangeError",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.random_normal",
    "tensorflow.random_uniform",
    "tensorflow.train.batch",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.PrefetchQueueTest.testMultipleDequeue": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sort",
    "range",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.prefetch_queue.prefetch_queue",
    "tensorflow.errors.OutOfRangeError",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.random_normal",
    "tensorflow.random_uniform",
    "tensorflow.train.batch",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.PrefetchQueueTest.testOneThread": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.arange",
    "range",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.prefetch_queue.prefetch_queue",
    "tensorflow.errors.OutOfRangeError",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.random_normal",
    "tensorflow.random_uniform",
    "tensorflow.train.batch",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.slim": {
  "data": {
   "shadows": "tensorflow.contrib.slim"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.prefetch_queue_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils._encoded_bytes_feature": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "string_to_bytes",
    "tensorflow.train.Feature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils._encoded_bytes_feature.string_to_bytes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.train.BytesList"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils._encoded_int64_feature": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.train.Feature",
    "tensorflow.train.Int64List"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils._encoder": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.image.encode_jpeg",
    "tensorflow.image.encode_png",
    "tensorflow.uint8"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils._string_feature": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.train.BytesList",
    "tensorflow.train.Feature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.create_tfrecord_files": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.slim.python.slim.data.test_utils.generate_image",
    "tensorflow.contrib.slim.python.slim.data.test_utils.os",
    "tensorflow.python_io.TFRecordWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.generate_image": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random_integers",
    "tensorflow.contrib.slim.python.slim.data.test_utils._encoded_bytes_feature",
    "tensorflow.contrib.slim.python.slim.data.test_utils._encoded_int64_feature",
    "tensorflow.contrib.slim.python.slim.data.test_utils._encoder",
    "tensorflow.contrib.slim.python.slim.data.test_utils._string_feature",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.test_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.BoundingBox": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.BoundingBox.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.BoundingBox"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.BoundingBox.tensors_to_item": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image._decode": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.control_flow_ops.case",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_or"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image._decode.decode_jpg": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.python.ops.image_ops.decode_jpeg"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image._decode.decode_png": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "tensorflow.python.ops.image_ops.decode_png"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image._decode.decode_raw": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.uint8",
    "tensorflow.python.ops.parsing_ops.decode_raw"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Image.tensors_to_item": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object",
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.abc"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler.keys": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler.tensors_to_item": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.abc"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandlerCallback": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandlerCallback.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandlerCallback"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandlerCallback.tensors_to_item": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.SparseTensor": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.SparseTensor.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.SparseTensor.tensors_to_item": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.TFExampleDecoder": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.data_decoder.DataDecoder"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.TFExampleDecoder.__init__": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.TFExampleDecoder.decode": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.parse_single_example"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.TFExampleDecoder.list_items": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Tensor": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Tensor.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "super",
    "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.Tensor.tensors_to_item": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.sparse_ops.sparse_reshape",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.data_decoder": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.data_decoder"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.image_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.image_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.DecodeExample": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.reshape",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.GenerateImage": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.uint8",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.RunDecodeExample": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest._BytesFeature": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.train.BytesList",
    "tensorflow.train.Feature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedBytesFeature": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "BytesList",
    "tensorflow.train.Feature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedBytesFeature.BytesList": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.train.BytesList"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedFloatFeature": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.train.Feature",
    "tensorflow.train.FloatList"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedInt64Feature": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.train.Feature",
    "tensorflow.train.Int64List"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest._Encoder": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.image.encode_jpeg",
    "tensorflow.image.encode_png",
    "tensorflow.string",
    "tensorflow.uint8"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest._StringFeature": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.train.BytesList",
    "tensorflow.train.Feature"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleMultiShapeKeyTensor": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleShapeKeyTensor": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithBoundingBox": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.random.rand",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.BoundingBox",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.float32",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithFixLenTensorWithShape": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithFloatTensor": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.float32",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithInt64Tensor": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithItemHandlerCallback": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.ItemHandlerCallback",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.float32",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithItemHandlerCallback.HandleDepth": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithJPEGEncoding": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithJpegEncoding": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithNoShapeInfo": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithPNGEncoding": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithPngEncoding": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithRAWEncoding": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithRawEncoding": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensor": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.SparseTensor",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensorToDense": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.SparseTensor",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensorWithGivenShape": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.SparseTensor",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensorWithKeyShape": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.SparseTensor",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithStringTensor": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "tensorflow.FixedLenFeature",
    "tensorflow.constant",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.reshape",
    "tensorflow.string",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithTensor": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.float32",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithVarLenTensor": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithVarLenTensorToDense": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.VarLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.contrib.slim.tfexample_decoder.Tensor",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.train.Example",
    "tensorflow.train.Features"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.float32",
    "tensorflow.FixedLenFeature",
    "tensorflow.contrib.slim.tfexample_decoder.ItemHandlerCallback",
    "tensorflow.contrib.slim.tfexample_decoder.TFExampleDecoder",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback.ConditionalDecoding": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "tensorflow.case",
    "tensorflow.equal",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback.ConditionalDecoding.DecodeJpg": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "tensorflow.image.decode_jpeg"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback.ConditionalDecoding.DecodePng": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "tensorflow.image.decode_png"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.slim": {
  "data": {
   "shadows": "tensorflow.contrib.slim"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.data.tfexample_decoder_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.evaluation._USE_DEFAULT": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.__all__": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.checkpoints_iterator": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation.time",
    "tensorflow.contrib.slim.python.slim.evaluation.wait_for_new_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.evaluate_once": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_or_create_global_step",
    "tensorflow.contrib.framework.python.ops.variables.get_variables_to_restore",
    "tensorflow.contrib.slim.python.slim.evaluation._USE_DEFAULT",
    "tensorflow.contrib.slim.python.slim.evaluation.evaluation",
    "tensorflow.contrib.slim.python.slim.evaluation.time",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.logging_ops.merge_all_summaries",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.restore",
    "tensorflow.python.training.summary_io.SummaryWriter",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.evaluation": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "int",
    "range",
    "tensorflow.contrib.framework.python.ops.variables.get_or_create_global_step",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.evaluation_loop": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "tensorflow.contrib.framework.python.ops.variables.get_or_create_global_step",
    "tensorflow.contrib.framework.python.ops.variables.get_variables_to_restore",
    "tensorflow.contrib.slim.python.slim.evaluation._USE_DEFAULT",
    "tensorflow.contrib.slim.python.slim.evaluation.checkpoints_iterator",
    "tensorflow.contrib.slim.python.slim.evaluation.evaluation",
    "tensorflow.contrib.slim.python.slim.evaluation.time",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.logging_ops.merge_all_summaries",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.summary_io.SummaryWriter",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.summary_io": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.supervisor": {
  "data": {
   "shadows": "tensorflow.python.training.supervisor"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation.wait_for_new_checkpoint": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation.time",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver.latest_checkpoint"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.python.platform.flags.FLAGS",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest._create_names_to_metrics": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.streaming_accuracy"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest._verify_summaries": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "events",
    "len",
    "tensorflow.contrib.slim.python.slim.evaluation_test.glob",
    "tensorflow.contrib.slim.python.slim.evaluation_test.os",
    "tensorflow.train.summary_iterator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.setUp": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "super",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest",
    "tensorflow.contrib.slim.python.slim.evaluation_test.GenerateTestData",
    "tensorflow.contrib.slim.python.slim.evaluation_test.GroundTruthAccuracy",
    "tensorflow.contrib.slim.python.slim.evaluation_test.TestModel",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.float32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testFinalOpsIsEvaluated": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testFinalOpsOnEvaluationLoop": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.os",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testLatestCheckpointReturnsNoneAfterTimeout": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.contrib.slim.python.slim.evaluation_test.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testMonitorCheckpointsLoopTimeout": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testSummariesAreFlushedToDisk": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.os",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables",
    "tensorflow.merge_all_summaries",
    "tensorflow.scalar_summary",
    "tensorflow.train.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testSummariesAreFlushedToDiskWithoutGlobalStep": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.os",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables",
    "tensorflow.merge_all_summaries",
    "tensorflow.scalar_summary",
    "tensorflow.train.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testUpdateOpsAreEvaluated": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testWithFeedDict": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.EvaluationTest.testWithQueueRunning": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables",
    "tensorflow.train.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.FLAGS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.GenerateTestData": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.GroundTruthAccuracy": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "float",
    "numpy.argmax",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.SingleEvaluationTest": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.SingleEvaluationTest.setUp": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "super",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.evaluation_test.GenerateTestData",
    "tensorflow.contrib.slim.python.slim.evaluation_test.GroundTruthAccuracy",
    "tensorflow.contrib.slim.python.slim.evaluation_test.SingleEvaluationTest",
    "tensorflow.contrib.slim.python.slim.evaluation_test.TestModel",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.float32",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.SingleEvaluationTest.testErrorRaisedIfCheckpointDoesntExist": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.slim.python.slim.evaluation_test.os",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.SingleEvaluationTest.testRestoredModelPerformance": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.evaluation_test.os",
    "tensorflow.contrib.slim.python.slim.evaluation_test.slim",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.initialize_local_variables",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.TestModel": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.argmax",
    "tensorflow.mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.slim": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.evaluation_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.learning._USE_DEFAULT": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.learning.__all__": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.learning._wait_for_step": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.learning.time",
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.add_gradients_summaries": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.clip_ops.global_norm",
    "tensorflow.python.ops.logging_ops.histogram_summary",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.clip_gradient_norms": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.clip_ops.clip_by_norm"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.create_train_op": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.python.slim.learning.add_gradients_summaries",
    "tensorflow.contrib.slim.python.slim.learning.clip_gradient_norms",
    "tensorflow.contrib.slim.python.slim.learning.multiply_gradients",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.check_numerics",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.variables.get_or_create_global_step",
    "tensorflow.python.ops.variables.trainable_variables",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.optimizer.Optimizer.GATE_OP",
    "tensorflow.python.training.optimizer.apply_gradients",
    "tensorflow.python.training.optimizer.compute_gradients"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.multiply_gradients": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.IndexedSlices"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.supervisor": {
  "data": {
   "shadows": "tensorflow.python.training.supervisor"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.sync_replicas_optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.sync_replicas_optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.tf_optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.tf_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.timeline": {
  "data": {
   "shadows": "tensorflow.python.client.timeline"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.train": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "min",
    "tensorflow.contrib.slim.python.slim.learning._USE_DEFAULT",
    "tensorflow.contrib.slim.python.slim.learning._wait_for_step",
    "tensorflow.contrib.slim.python.slim.learning.sys",
    "tensorflow.contrib.slim.python.slim.learning.train_step",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.errors.AbortedError",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.data_flow_ops.initialize_all_tables",
    "tensorflow.python.ops.logging_ops.merge_all_summaries",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.mod",
    "tensorflow.python.ops.variables.get_or_create_global_step",
    "tensorflow.python.ops.variables.initialize_all_variables",
    "tensorflow.python.ops.variables.initialize_local_variables",
    "tensorflow.python.ops.variables.report_uninitialized_variables",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.supervisor.Supervisor",
    "tensorflow.python.training.supervisor.Supervisor.USE_DEFAULT",
    "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer",
    "train_step_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning.train_step": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.slim.python.slim.learning.os",
    "tensorflow.contrib.slim.python.slim.learning.time",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.core.protobuf.config_pb2.RunOptions.FULL_TRACE",
    "tensorflow.python.client.timeline.Timeline",
    "tensorflow.python.lib.io.file_io.write_string_to_file",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning.variables": {
  "data": {
   "shadows": "tensorflow.contrib.framework.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.BatchNormClassifier": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.sigmoid"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.ClipGradientNormsTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.ClipGradientNormsTest.clip_values": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.ClipGradientNormsTest.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.ClipGradientNormsTest.testIndexedSlicesGradIsClippedCorrectly": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "tensorflow.IndexedSlices",
    "tensorflow.Session",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.ClipGradientNormsTest.testNoneGradPassesThroughCorrectly": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.ClipGradientNormsTest.testOrdinaryGradIsClippedCorrectly": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.CreateTrainOpTest": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.CreateTrainOpTest.setUp": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.CreateTrainOpTest.testEmptyUpdateOps": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.slim.python.slim.learning_test.BatchNormClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.CreateTrainOpTest.testUseUpdateOps": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.var",
    "range",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.constant",
    "tensorflow.contrib.framework.get_variables_by_name",
    "tensorflow.contrib.slim.python.slim.learning_test.BatchNormClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.sigmoid"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest.setUp": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.multiply",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest.testEmptyMultiplesRaisesError": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest.testIndexedSlicesGradIsMultiplied": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tensorflow.IndexedSlices",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest.testMultipleGradientsWithVariables": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest.testMultipleOfNoneGradRaisesError": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest.testNonDictMultiplierRaisesError": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.MultiplyGradientsTest.testNonListGradsRaisesError": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainBNClassifierTest": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainBNClassifierTest.setUp": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "tensorflow.contrib.slim.python.slim.learning_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainBNClassifierTest.testTrainWithNoInitAssignCanAchieveZeroLoss": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.BatchNormClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.ModelLoss": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.create_train_op": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.setUp": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testResumeTrainAchievesRoughlyTheSameLoss": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainAllVarsHasLowerLossThanTrainSubsetOfVars": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithAlteredGradients": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithInitFromCheckpoint": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.all_variables",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithInitFromCheckpoint.InitAssignFn": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithInitFromFn": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.all_variables",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.set_random_seed",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithInitFromFn.RestoreFn": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithLocalVariable": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithNoInitAssignCanAchieveZeroLoss": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithNonDefaultGraph": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithNoneAsInitWhenUsingVarsRaisesError": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithNoneAsLogdir": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithNoneAsLogdirWhenUsingSaverRaisesError": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithNoneAsLogdirWhenUsingSummariesRaisesError": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.merge_all_summaries",
    "tensorflow.scalar_summary",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithNoneAsLogdirWhenUsingTraceRaisesError": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithSessionConfig": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "tensorflow.ConfigProto",
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainWithTrace": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.constant",
    "tensorflow.contrib.slim.python.slim.learning_test.LogisticClassifier",
    "tensorflow.contrib.slim.python.slim.learning_test.os",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.float32",
    "tensorflow.scalar_summary",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.TrainTest.testTrainingSubsetsOfVariablesOnlyUpdatesThoseVariables": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.contrib.slim.python.slim.learning_test.slim",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.np_testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.slim": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.learning_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.model_analyzer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.model_analyzer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.model_analyzer.analyze_ops": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "print",
    "str",
    "tensorflow.contrib.slim.python.slim.model_analyzer.tensor_description"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.model_analyzer.analyze_vars": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "print",
    "tensorflow.contrib.slim.python.slim.model_analyzer.tensor_description"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.model_analyzer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.model_analyzer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.model_analyzer.tensor_description": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.contrib.slim.python.slim.nets.alexnet.alexnet_v2",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.alexnet_v2": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.constant_initializer",
    "tensorflow.contrib.slim.python.slim.nets.alexnet.slim",
    "tensorflow.contrib.slim.python.slim.nets.alexnet.trunc_normal",
    "tensorflow.squeeze",
    "tensorflow.variable_scope",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.alexnet_v2_arg_scope": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.constant_initializer",
    "tensorflow.contrib.slim.python.slim.nets.alexnet.slim",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.slim": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet.trunc_normal": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test.testBuild": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test.testEndPoints": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test.testEvaluation": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test.testForward": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test.testFullyConvolutional": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test.testModelVariables": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
    "tensorflow.contrib.slim.python.slim.nets.alexnet_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.AlexnetV2Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.alexnet.alexnet_v2",
    "tensorflow.get_variable_scope",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.alexnet": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.alexnet"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.slim": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.alexnet_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v1": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v1_arg_scope": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1_arg_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v1_base": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1_base"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v2": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v2_arg_scope": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2_arg_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v2_base": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2_base"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v3": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v3_arg_scope": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3_arg_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.inception_v3_base": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3_base"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "prediction_fn",
    "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1_base",
    "tensorflow.contrib.slim.python.slim.nets.inception_v1.slim",
    "tensorflow.squeeze",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1_arg_scope": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.contrib.slim.python.slim.nets.inception_v1.slim",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.inception_v1_base": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.concat",
    "tensorflow.contrib.slim.python.slim.nets.inception_v1.slim",
    "tensorflow.contrib.slim.python.slim.nets.inception_v1.trunc_normal",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.slim": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1.trunc_normal": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testBuildAndCheckAllEndPointsUptoMixed5c": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v1_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testBuildBaseNetwork": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v1_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testBuildClassificationNetwork": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v1",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testBuildOnlyUptoFinalEndpoint": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.Graph",
    "tensorflow.contrib.slim.nets.inception.inception_v1_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testEvaluation": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.inception.inception_v1",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testHalfSizeImages": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v1_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testLogitsNotSqueezed": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.slim.nets.inception.inception_v1",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testModelHasExpectedNumberOfParameters": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v1_arg_scope",
    "tensorflow.contrib.slim.nets.inception.inception_v1_base",
    "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.inception.inception_v1",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testUnknowBatchSize": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v1",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.InceptionV1Test.testUnknownImageShape": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "list",
    "numpy.random.uniform",
    "tensorflow.contrib.slim.nets.inception.inception_v1",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.inception": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.inception"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.slim": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v1_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2._reduced_kernel_size_for_small_input": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "_reduced_kernel_size_for_small_input",
    "prediction_fn",
    "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2_base",
    "tensorflow.contrib.slim.python.slim.nets.inception_v2.slim",
    "tensorflow.squeeze",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2_arg_scope": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.contrib.slim.python.slim.nets.inception_v2.slim",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.inception_v2_base": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "depth",
    "int",
    "max",
    "min",
    "tensorflow.concat",
    "tensorflow.contrib.slim.python.slim.nets.inception_v2.slim",
    "tensorflow.contrib.slim.python.slim.nets.inception_v2.trunc_normal",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.slim": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2.trunc_normal": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testBuildAndCheckAllEndPointsUptoMixed5c": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testBuildBaseNetwork": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testBuildClassificationNetwork": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testBuildEndPointsWithDepthMultiplierGreaterThanOne": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testBuildEndPointsWithDepthMultiplierLessThanOne": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testBuildOnlyUptoFinalEndpoint": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.Graph",
    "tensorflow.contrib.slim.nets.inception.inception_v2_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testEvaluation": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testHalfSizeImages": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testLogitsNotSqueezed": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testModelHasExpectedNumberOfParameters": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2_arg_scope",
    "tensorflow.contrib.slim.nets.inception.inception_v2_base",
    "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testRaiseValueErrorWithInvalidDepthMultiplier": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testUnknowBatchSize": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.InceptionV2Test.testUnknownImageShape": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "list",
    "numpy.random.uniform",
    "tensorflow.contrib.slim.nets.inception.inception_v2",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.inception": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.inception"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.slim": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v2_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3._reduced_kernel_size_for_small_input": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "_reduced_kernel_size_for_small_input",
    "depth",
    "int",
    "max",
    "prediction_fn",
    "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3_base",
    "tensorflow.contrib.slim.python.slim.nets.inception_v3.slim",
    "tensorflow.contrib.slim.python.slim.nets.inception_v3.trunc_normal",
    "tensorflow.squeeze",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3_arg_scope": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.contrib.slim.python.slim.nets.inception_v3.slim",
    "tensorflow.nn.relu",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.inception_v3_base": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "depth",
    "int",
    "max",
    "tensorflow.concat",
    "tensorflow.contrib.slim.python.slim.nets.inception_v3.slim",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.slim": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3.trunc_normal": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testBuildAndCheckAllEndPointsUptoMixed7c": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testBuildBaseNetwork": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testBuildClassificationNetwork": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testBuildEndPoints": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testBuildEndPointsWithDepthMultiplierGreaterThanOne": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testBuildEndPointsWithDepthMultiplierLessThanOne": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testBuildOnlyUptoFinalEndpoint": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.Graph",
    "tensorflow.contrib.slim.nets.inception.inception_v3_base",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testEvaluation": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testHalfSizeImages": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testLogitsNotSqueezed": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testModelHasExpectedNumberOfParameters": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3_arg_scope",
    "tensorflow.contrib.slim.nets.inception.inception_v3_base",
    "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testRaiseValueErrorWithInvalidDepthMultiplier": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testUnknowBatchSize": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.InceptionV3Test.testUnknownImageShape": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "list",
    "numpy.random.uniform",
    "tensorflow.contrib.slim.nets.inception.inception_v3",
    "tensorflow.float32",
    "tensorflow.initialize_all_variables",
    "tensorflow.placeholder",
    "tensorflow.reset_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.inception": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.inception"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.slim": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.inception_v3_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.overfeat": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.constant_initializer",
    "tensorflow.contrib.slim.python.slim.nets.overfeat.slim",
    "tensorflow.contrib.slim.python.slim.nets.overfeat.trunc_normal",
    "tensorflow.squeeze",
    "tensorflow.variable_scope",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.overfeat_arg_scope": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.overfeat.slim",
    "tensorflow.nn.relu",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.slim": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat.trunc_normal": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest.testBuild": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.overfeat.overfeat",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest.testEndPoints": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.overfeat.overfeat",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest.testEvaluation": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.overfeat.overfeat",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest.testForward": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.overfeat.overfeat",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest.testFullyConvolutional": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.overfeat.overfeat",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest.testModelVariables": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.overfeat.overfeat",
    "tensorflow.contrib.slim.python.slim.nets.overfeat_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.OverFeatTest.testTrainEvalWithReuse": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.overfeat.overfeat",
    "tensorflow.get_variable_scope",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.overfeat": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.overfeat"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.slim": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.overfeat_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.Block": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.resnet_utils.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.conv2d_same": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.resnet_utils.slim",
    "tensorflow.pad"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.resnet_arg_scope": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.GraphKeys.UPDATE_OPS",
    "tensorflow.contrib.slim.python.slim.nets.resnet_utils.slim",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.slim": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.stack_blocks_dense": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "tensorflow.contrib.slim.python.slim.nets.resnet_utils.slim",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.subsample": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.resnet_utils.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.bottleneck": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.slim",
    "tensorflow.nn.relu",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_arg_scope": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_utils": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.stack_blocks_dense",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.slim",
    "tensorflow.reduce_mean",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_101": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_152": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_200": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_50": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1.resnet_v1"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.slim": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest._resnet_small": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.nets.resnet_v1.bottleneck",
    "tensorflow.contrib.slim.nets.resnet_v1.resnet_v1"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalValues": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testClassificationEndPoints": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testClassificationShapes": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testRootlessFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testUnknownBatchSize": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest._atrousValues": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.nets.resnet_utils.stack_blocks_dense",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest._resnet_plain": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.stack_blocks_dense",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest._stack_blocks_nondense": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest.testAtrousValuesBottleneck": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_v1.bottleneck"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest.testConv2DSameEven": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.get_variable",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.reshape",
    "tensorflow.to_float",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest.testConv2DSameOdd": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim",
    "tensorflow.get_variable",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.reshape",
    "tensorflow.to_float",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest.testEndPointsV1": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.nets.resnet_v1.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest.testSubsampleFourByFour": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.ResnetUtilsTest.testSubsampleThreeByThree": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.create_test_input": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.reshape",
    "numpy.tile",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.resnet_utils": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.resnet_v1": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.resnet_v1"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.slim": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v1_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.bottleneck": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.slim",
    "tensorflow.nn.relu",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_arg_scope": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_utils": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.stack_blocks_dense",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.slim",
    "tensorflow.nn.relu",
    "tensorflow.reduce_mean",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_101": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_152": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_200": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_50": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.slim": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest._resnet_small": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.nets.resnet_v2.bottleneck",
    "tensorflow.contrib.slim.nets.resnet_v2.resnet_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalValues": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testClassificationEndPoints": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testClassificationShapes": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testRootlessFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testUnknownBatchSize": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest._atrousValues": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.nets.resnet_utils.stack_blocks_dense",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest._resnet_plain": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.stack_blocks_dense",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest._stack_blocks_nondense": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest.testAtrousValuesBottleneck": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_v2.bottleneck"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest.testConv2DSameEven": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.get_variable",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.reshape",
    "tensorflow.to_float",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest.testConv2DSameOdd": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.conv2d_same",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim",
    "tensorflow.get_variable",
    "tensorflow.get_variable_scope",
    "tensorflow.initialize_all_variables",
    "tensorflow.reshape",
    "tensorflow.to_float",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest.testEndPointsV2": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.resnet_utils.Block",
    "tensorflow.contrib.slim.nets.resnet_utils.resnet_arg_scope",
    "tensorflow.contrib.slim.nets.resnet_v2.bottleneck",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input",
    "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest.testSubsampleFourByFour": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.ResnetUtilsTest.testSubsampleThreeByThree": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.contrib.slim.nets.resnet_utils.subsample",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.create_test_input": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.reshape",
    "numpy.tile",
    "tensorflow.float32",
    "tensorflow.placeholder",
    "tensorflow.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.resnet_utils": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.resnet_v2": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.resnet_v2"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.slim": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.resnet_v2_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim",
    "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_16",
    "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_19",
    "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_a"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.slim": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_16": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.vgg.slim",
    "tensorflow.squeeze",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_19": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.vgg.slim",
    "tensorflow.squeeze",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_a": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.vgg.slim",
    "tensorflow.squeeze",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_arg_scope": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.nets.vgg.slim",
    "tensorflow.nn.relu",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_d": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_e": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.contrib.slim",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test.testBuild": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_16",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test.testEndPoints": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.vgg.vgg_16",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test.testEvaluation": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.vgg.vgg_16",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test.testForward": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_16",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test.testFullyConvolutional": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_16",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test.testModelVariables": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.vgg.vgg_16",
    "tensorflow.contrib.slim.python.slim.nets.vgg_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG16Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.vgg.vgg_16",
    "tensorflow.get_variable_scope",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test.testBuild": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_19",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test.testEndPoints": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.vgg.vgg_19",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test.testEvaluation": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.vgg.vgg_19",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test.testForward": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_19",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test.testFullyConvolutional": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_19",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test.testModelVariables": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.vgg.vgg_19",
    "tensorflow.contrib.slim.python.slim.nets.vgg_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGG19Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.vgg.vgg_19",
    "tensorflow.get_variable_scope",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest.testBuild": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_a",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest.testEndPoints": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.vgg.vgg_a",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest.testEvaluation": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.vgg.vgg_a",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest.testForward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_a",
    "tensorflow.initialize_all_variables",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest.testFullyConvolutional": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.contrib.slim.nets.vgg.vgg_a",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest.testModelVariables": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "set",
    "tensorflow.contrib.slim.nets.vgg.vgg_a",
    "tensorflow.contrib.slim.python.slim.nets.vgg_test.slim",
    "tensorflow.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.VGGATest.testTrainEvalWithReuse": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.contrib.slim.nets.vgg.vgg_a",
    "tensorflow.get_variable_scope",
    "tensorflow.random_uniform",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.slim": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.nets.vgg_test.vgg": {
  "data": {
   "shadows": "tensorflow.contrib.slim.nets.vgg"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.queues": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.slim.python.slim.queues.threading"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.slim.python.slim.queues.NestedQueueRunnerError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.slim.python.slim.queues.QueueRunners": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "tensorflow.contrib.slim.python.slim.queues.NestedQueueRunnerError",
    "tensorflow.contrib.slim.python.slim.queues._queue_runner_lock",
    "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.training.coordinator.Coordinator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.slim.python.slim.queues.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.queues._queue_runner_lock": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.contrib.slim.python.slim.queues.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.queues.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.queues.coordinator": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.queues.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.queues.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.queues.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.python.slim.queues.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.queues": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.queues"
  },
  "type": "import"
 },
 "tensorflow.contrib.slim.tfexample_decoder": {
  "data": {
   "shadows": "tensorflow.contrib.slim.python.slim.data.tfexample_decoder"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.client.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.client.eval_metrics"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics._EVAL_METRICS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics._accuracy": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_accuracy",
    "tensorflow.python.ops.math_ops.argmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics._predictions": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics._r2": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics._sigmoid_entropy": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.sigmoid_cross_entropy",
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics._softmax_entropy": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.contrib.losses.softmax_cross_entropy",
    "tensorflow.contrib.metrics.python.ops.metric_ops.streaming_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.get_metric": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.client.eval_metrics._EVAL_METRICS"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.losses": {
  "data": {
   "shadows": "tensorflow.contrib.losses"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.metric_ops": {
  "data": {
   "shadows": "tensorflow.contrib.metrics.python.ops.metric_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.eval_metrics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.client.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.data.data_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.DATA_OPS_FILE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.Load": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.data.data_ops.DATA_OPS_FILE",
    "tensorflow.contrib.tensor_forest.data.data_ops._data_ops",
    "tensorflow.contrib.tensor_forest.data.data_ops._ops_lock",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.ParseDataTensorOrDict": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "tensorflow.contrib.tensor_forest.data.data_ops._ParseDense",
    "tensorflow.contrib.tensor_forest.data.data_ops._ParseSparse",
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.ParseLabelTensorOrDict": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sorted",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops._ParseDense": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io.KEY_FEATURE_NAME",
    "tensorflow.contrib.tensor_forest.data.data_ops.Load",
    "tensorflow.contrib.tensor_forest.python.constants.DATA_CATEGORICAL",
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.array_ops.concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops._ParseSparse": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "sorted",
    "tensorflow.contrib.learn.python.learn.learn_io.graph_io.KEY_FEATURE_NAME",
    "tensorflow.contrib.tensor_forest.data.data_ops.Load",
    "tensorflow.contrib.tensor_forest.data.data_ops.math",
    "tensorflow.contrib.tensor_forest.python.constants.DATA_CATEGORICAL",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.sparse_ops.sparse_concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops._data_ops": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops._ops_lock": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.constants": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.graph_io": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.learn_io.graph_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.data_ops.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestDeviceAssigner"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer._define_vars": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer.inference_graph": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.HybridLayerTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.HybridLayerTest.setUp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.HybridLayerTest.testLayerNums": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.hybrid_model": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "optimizer_class",
    "tensorflow.contrib.layers.l1_regularizer",
    "tensorflow.contrib.layers.l2_regularizer",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestDeviceAssigner",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel._base_inference": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel._do_layer_inference": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.collections",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.inference_graph": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn_ops.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.loss": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.apply_regularization",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.math_ops.to_int32",
    "tensorflow.python.ops.nn_ops.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.python.ops.variables.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.predict_proba": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn_ops.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.training_graph": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.training_inference_graph": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.training_loss": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel.validation_loss": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.KFeatureRoutingFunctionTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.KFeatureRoutingFunctionTest.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.Load",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.KFeatureRoutingFunctionTest.testParams": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.KFeatureRoutingFunctionTest.testRoutingFunction": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.k_feature_routing_function_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.RoutingFunctionTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.RoutingFunctionTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.RoutingFunctionTest.testRoutingFunction": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.kernel_tests.routing_function_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer._define_vars": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer.inference_graph": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.HardDecisionsToDataLayer": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.HardDecisionsToDataLayer._define_vars": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.HardDecisionsToDataLayer.inference_graph": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.HardDecisionsToDataLayer.soft_inference_graph": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.HardDecisionsToDataLayer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.KFeatureDecisionsToDataLayer": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.KFeatureDecisionsToDataLayer.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.KFeatureDecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.KFeatureDecisionsToDataLayer._define_vars": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.KFeatureDecisionsToDataLayer.inference_graph": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticHardDecisionsToDataLayer": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.HardDecisionsToDataLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticHardDecisionsToDataLayer._define_vars": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticHardDecisionsToDataLayer.inference_graph": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticHardDecisionsToDataLayer.soft_inference_graph": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticSoftDecisionsToDataLayer": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticHardDecisionsToDataLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticSoftDecisionsToDataLayer._define_vars": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticSoftDecisionsToDataLayer.inference_graph": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.hybrid_layer": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.DecisionsToDataTest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.DecisionsToDataTest.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.random",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.DecisionsToDataTest.testInferenceConstruction": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.Operation": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Operation"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.Tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.decisions_to_data": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FlattenedFullyConnectedLayer": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FlattenedFullyConnectedLayer._define_vars": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FlattenedFullyConnectedLayer.inference_graph": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer._define_vars": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer.inference_graph": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.python.framework.ops.device"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.ManyToOneLayer": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer.HybridLayer"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.ManyToOneLayer._define_vars": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.ManyToOneLayer.inference_graph": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.squeeze"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.hybrid_layer": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_layer"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.layers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.DecisionsToDataThenNN": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.DecisionsToDataThenNN.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.DecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.DecisionsToDataThenNN",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.decisions_to_data": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.hybrid_model": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.DecisionsToDataThenNNTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.DecisionsToDataThenNNTest.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.DecisionsToDataThenNNTest.testConstructionPollution": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.DecisionsToDataThenNN",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.random",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.DecisionsToDataThenNNTest.testHParams": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.DecisionsToDataThenNN",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.DecisionsToDataThenNNTest.testInferenceConstruction": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.DecisionsToDataThenNN",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.random",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.DecisionsToDataThenNNTest.testTrainingConstruction": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn.DecisionsToDataThenNN",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.random",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.Operation": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Operation"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.Tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.decisions_to_data_then_nn": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.decisions_to_data_then_nn_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.ForestToDataThenNN": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.ForestToDataThenNN.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "range",
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.KFeatureDecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.ForestToDataThenNN",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.decisions_to_data": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.hybrid_model": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.ForestToDataThenNNTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.ForestToDataThenNNTest.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.ForestToDataThenNNTest.testInferenceConstruction": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.ForestToDataThenNN",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.random",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.ForestToDataThenNNTest.testTrainingConstruction": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn.ForestToDataThenNN",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.random",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.Operation": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Operation"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.Tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.forest_to_data_then_nn": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.forest_to_data_then_nn_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.HardDecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN._base_inference": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.contrib.layers.fully_connected",
    "tensorflow.python.ops.nn_ops.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN.inference_graph": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn_ops.softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN.training_inference_graph": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.decisions_to_data": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.hybrid_model": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.layers": {
  "data": {
   "shadows": "tensorflow.contrib.layers"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.KFeatureDecisionsToDataThenNN": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.KFeatureDecisionsToDataThenNN.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.KFeatureDecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.KFeatureDecisionsToDataThenNN",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.decisions_to_data": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.hybrid_model": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.KFeatureDecisionsToDataThenNNTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.KFeatureDecisionsToDataThenNNTest.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.KFeatureDecisionsToDataThenNNTest.testKFeatureInferenceConstruction": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.KFeatureDecisionsToDataThenNN",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.random",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.KFeatureDecisionsToDataThenNNTest.testKFeatureTrainingConstruction": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn.KFeatureDecisionsToDataThenNN",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.random",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.Operation": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Operation"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.Tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Tensor"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.k_feature_decisions_to_data_then_nn": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.k_feature_decisions_to_data_then_nn_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.NN": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model.HybridModel"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.NN.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.NN",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.hybrid_model": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.hybrid_model"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.StochasticHardDecisionsToDataThenNN": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.StochasticHardDecisionsToDataThenNN.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticHardDecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.StochasticHardDecisionsToDataThenNN",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.decisions_to_data": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.hard_decisions_to_data_then_nn": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_hard_decisions_to_data_then_nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.StochasticSoftDecisionsToDataThenNN": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn.HardDecisionsToDataThenNN"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.StochasticSoftDecisionsToDataThenNN.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "super",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data.StochasticSoftDecisionsToDataLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected.FullyConnectedLayer",
    "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.StochasticSoftDecisionsToDataThenNN",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.adagrad": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.decisions_to_data": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.decisions_to_data"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.fully_connected": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.layers.fully_connected"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.hard_decisions_to_data_then_nn": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.models.hard_decisions_to_data_then_nn"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.models.stochastic_soft_decisions_to_data_then_nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.threading",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.Load": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.TRAINING_OPS_FILE",
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._ops_lock",
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._training_ops",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.TRAINING_OPS_FILE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._KFeatureRoutingFunctionGradient": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "gradient_op",
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._training_ops",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._RoutingFunctionGradient": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "routing_gradient",
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._training_ops",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._StochasticHardRoutingFunctionGradient": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "gradient_op",
    "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._training_ops",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "unpack_path_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._ops_lock": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops._training_ops": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.hybrid.python.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.hybrid.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.constants": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.constants.DATA_CATEGORICAL": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.constants.LEAF_NODE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.constants.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.constants.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.inference_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.inference_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsClassificationTests": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsClassificationTests.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsClassificationTests.testBadInput": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsClassificationTests.testNoFinished": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsClassificationTests.testSimple": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsRegressionTests": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsRegressionTests.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.BestSplitsRegressionTests.testSimple": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.best_splits_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT",
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testBadInput": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testFutureEpoch": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testMissingLabel": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testNoAccumulators": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testSimple": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testSimpleWeighted": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testSparseInput": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsClassificationTest.testThreaded": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.ConfigProto"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsRegressionTest": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsRegressionTest.setUp": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT",
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsRegressionTest.testSimple": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.CountExtremelyRandomStatsRegressionTest.testSimpleWeighted": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.constants": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.count_extremely_random_stats_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.FinishedNodesTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.FinishedNodesTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.FinishedNodesTest.testBadInput": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.FinishedNodesTest.testEarlyDominates": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.FinishedNodesTest.testLeavesCanBeNegativeOne": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.FinishedNodesTest.testNoAccumulators": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.FinishedNodesTest.testSimple": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.finished_nodes_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.GrowTreeTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.GrowTreeTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.GrowTreeTest.testBadInput": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.GrowTreeTest.testNoFinished": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.GrowTreeTest.testNoRoomToGrow": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.assign",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.GrowTreeTest.testSimple": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.grow_tree_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.SampleInputsTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.SampleInputsTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.SampleInputsTest.testBadInput": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.SampleInputsTest.testNoAccumulators": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.SampleInputsTest.testSimple": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.SampleInputsTest.testSparse": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.SampleInputsTest.testWeights": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.sample_inputs_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.ScatterAddNdimTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.ScatterAddNdimTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.ScatterAddNdimTest.test1dim": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.ScatterAddNdimTest.test3dim": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.ScatterAddNdimTest.testBadInput": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.ScatterAddNdimTest.testIncompleteIndices": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.ScatterAddNdimTest.testNoUpdates": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.scatter_add_ndim_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT",
    "tensorflow.contrib.tensor_forest.python.ops.inference_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest.testBackoffToParent": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest.testBadInput": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest.testNoInput": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest.testSimple": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest.testSparseInput": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.TreePredictionsTest.testSparseInputDefaultIsZero": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.constants": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.inference_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.inference_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.tree_predictions_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.UpdateFertileSlotsTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.UpdateFertileSlotsTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.UpdateFertileSlotsTest.testBadInput": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.UpdateFertileSlotsTest.testNoFinished": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.UpdateFertileSlotsTest.testSimple": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.kernel_tests.update_fertile_slots_op_test.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.inference_ops.threading",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.INFERENCE_OPS_FILE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.Load": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.inference_ops.INFERENCE_OPS_FILE",
    "tensorflow.contrib.tensor_forest.python.ops.inference_ops._inference_ops",
    "tensorflow.contrib.tensor_forest.python.ops.inference_ops._ops_lock",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops._inference_ops": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops._ops_lock": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.inference_ops.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.topn_ops.threading",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.Load": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.topn_ops.TOPN_OPS_FILE",
    "tensorflow.contrib.tensor_forest.python.ops.topn_ops._ops_lock",
    "tensorflow.contrib.tensor_forest.python.ops.topn_ops._topn_ops",
    "tensorflow.load_op_library",
    "tensorflow.logging.info",
    "tensorflow.resource_loader.get_path_to_datafile"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.TOPN_OPS_FILE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops._ops_lock": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops._topn_ops": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.topn_ops.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.threading",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.Load": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.training_ops.TRAINING_OPS_FILE",
    "tensorflow.contrib.tensor_forest.python.ops.training_ops._ops_lock",
    "tensorflow.contrib.tensor_forest.python.ops.training_ops._training_ops",
    "tensorflow.python.framework.load_library.load_op_library",
    "tensorflow.python.platform.resource_loader.get_path_to_datafile",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.TRAINING_OPS_FILE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops._ops_lock": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops._training_ops": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.load_library": {
  "data": {
   "shadows": "tensorflow.python.framework.load_library"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.ops.training_ops.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams.fill": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "getattr",
    "int",
    "max",
    "min",
    "range",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.math",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams.values": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestStats": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestStats.__init__": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestStats.get_average": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "getattr",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestTrainingVariables": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestTrainingVariables.__getitem__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestTrainingVariables.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeTrainingVariables",
    "tensorflow.python.framework.ops.device",
    "tree_variables_class"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestTrainingVariables.__setitem__": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestDeviceAssigner": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestDeviceAssigner.__init__": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestDeviceAssigner.get_device": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.tensor_forest.python.ops.inference_ops",
    "tensorflow.contrib.tensor_forest.python.ops.training_ops",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestTrainingVariables",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestDeviceAssigner",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeTrainingVariables",
    "tensorflow.python.ops.variables",
    "tensorflow.python.platform.tf_logging.info",
    "tree_graph_class",
    "tree_variables_class"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs._bag_features": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.split"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.average_impurity": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.average_size": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.to_float"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.get_stats": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestStats",
    "tensorflow.python.framework.ops.device"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.inference_graph": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_graph": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.tensor_forest.python.constants.DATA_FLOAT",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.training_loss": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.neg"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs.validation_loss": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.neg"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs._gini": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs._variance": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs._weighted_gini": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.average_impurity": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.constants.LEAF_NODE",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.to_int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.average_impurity.big": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.average_impurity.impurity": {
  "data": {
   "lineno": 846
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.finish_iteration": {
  "data": {
   "lineno": 792
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.get_stats": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.constants.LEAF_NODE",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeStats",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.inference_graph": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.size": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.training_graph": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.contrib.tensor_forest.python.constants.LEAF_NODE",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.boolean_mask",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.control_flow_ops.tuple",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.neg",
    "tensorflow.python.ops.math_ops.to_int32",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.state_ops.scatter_update"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.tree_initialization": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.tree_initialization._init_tree": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "tensorflow.python.ops.state_ops.scatter_update"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs.tree_initialization._nothing": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeStats": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeStats.__init__": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeTrainingVariables": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeTrainingVariables.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.TreeTrainingVariables.get_tree_name": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.constants": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.constants"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.inference_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.inference_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.tf_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testForestHParams": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testForestHParamsBigTree": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testImpurityConstruction": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.Tensor",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testInferenceConstruction": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.Tensor",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testInferenceConstructionSparse": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.SparseTensor",
    "tensorflow.Tensor",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testTrainingConstructionClassification": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.Operation",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testTrainingConstructionClassificationSparse": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.Operation",
    "tensorflow.SparseTensor",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.TensorForestTest.testTrainingConstructionRegression": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.Operation",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.ForestHParams",
    "tensorflow.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.tensor_forest": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.tensor_forest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.tensor_forest_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.constant_initializer",
    "tensorflow.contrib.tensor_forest.python.ops.topn_ops.Load",
    "tensorflow.float32",
    "tensorflow.float32.min",
    "tensorflow.get_variable",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN.get_and_remove_best": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN.get_best": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.cond",
    "tensorflow.control_dependencies",
    "tensorflow.gather",
    "tensorflow.minimum",
    "tensorflow.nn.top_k",
    "tensorflow.no_op",
    "tensorflow.to_int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN.get_best.refresh_shortlist": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.float32.min",
    "tensorflow.greater",
    "tensorflow.group",
    "tensorflow.nn.top_k",
    "tensorflow.reduce_min",
    "tensorflow.reduce_sum",
    "tensorflow.to_int32",
    "tensorflow.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN.insert": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.cond",
    "tensorflow.control_dependencies",
    "tensorflow.greater",
    "tensorflow.no_op",
    "tensorflow.reduce_any",
    "tensorflow.scatter_update"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN.insert.shortlist_insert": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.boolean_mask",
    "tensorflow.group",
    "tensorflow.scatter_update",
    "tensorflow.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn.TopN.remove": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.control_dependencies",
    "tensorflow.float32",
    "tensorflow.float32.min",
    "tensorflow.ones_like",
    "tensorflow.scatter_update"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn.topn_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.topn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.topn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.setUp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.contrib.tensor_forest.python.ops.topn_ops.Load"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.testInsertOpHard": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.testInsertOpIntoAlmostFullShortlist": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.testInsertOpIntoEmptyShortlist": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.testInsertOpIntoFullShortlist": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.testRemoveAll": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.testRemoveAllMissing": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNOpsTest.testRemoveSimple": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNTest": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNTest.testLotsOfInsertsAscending": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "float",
    "list",
    "range",
    "tensorflow.contrib.tensor_forest.python.topn.TopN",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.client.session.Session"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNTest.testLotsOfInsertsDescending": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "float",
    "list",
    "range",
    "tensorflow.contrib.tensor_forest.python.topn.TopN",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.client.session.Session"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNTest.testNeedToRefreshShortlistInGetBest": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "float",
    "list",
    "range",
    "tensorflow.contrib.tensor_forest.python.topn.TopN",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.client.session.Session"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNTest.testRemoveNotInShortlist": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "float",
    "list",
    "range",
    "tensorflow.contrib.tensor_forest.python.topn.TopN",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.client.session.Session"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNTest.testSimple": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.tensor_forest.python.topn.TopN",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.client.session.Session"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.TopNTest.testSimpler": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "list",
    "tensorflow.contrib.tensor_forest.python.topn.TopN",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.client.session.Session"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.topn": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.topn"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.topn_test.topn_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.topn_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensor_forest.python.training_ops": {
  "data": {
   "shadows": "tensorflow.contrib.tensor_forest.python.ops.training_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensorboard.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensorboard.plugins.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.EmbeddingInfo": {
  "data": {
   "shadows": "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.EmbeddingInfo"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.PROJECTOR_FILENAME": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.ProjectorConfig": {
  "data": {
   "shadows": "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.ProjectorConfig"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.DESCRIPTOR",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.EmbeddingInfo",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.ProjectorConfig",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._EMBEDDINGINFO",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._PROJECTORCONFIG",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._b",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._sym_db",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.EmbeddingInfo": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.ProjectorConfig": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._EMBEDDINGINFO": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._PROJECTORCONFIG": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.contrib.tensorboard.plugins.projector.visualize_embeddings": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "google.protobuf.text_format.MessageToString",
    "tensorflow.contrib.tensorboard.plugins.projector.PROJECTOR_FILENAME",
    "tensorflow.contrib.tensorboard.plugins.projector.os",
    "tensorflow.python.lib.io.file_io.write_string_to_file"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.tensorboard.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.testing.python.framework": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.add_graph": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.add_session_log": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.add_summary": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "tensorflow.core.framework.summary_pb2.Summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.assert_summaries": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.flush": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.install": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter",
    "tensorflow.python.training.summary_io.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.reopen": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.summaries": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter.uninstall": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "tensorflow.python.training.summary_io.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.summary_io": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.fake_summary_writer.summary_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.testing.python.framework.util_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.assert_summary": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_almost_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.util_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.latest_event_file": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.contrib.testing.python.framework.util_test.glob",
    "tensorflow.contrib.testing.python.framework.util_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.util_test.latest_events": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.contrib.testing.python.framework.util_test.latest_event_file",
    "tensorflow.python.training.summary_io.summary_iterator"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.util_test.latest_summaries": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.contrib.testing.python.framework.util_test.latest_events"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.util_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.simple_values_from_events": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "events"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.testing.python.framework.util_test.summary_io": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.summary_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2"
  },
  "type": "import"
 },
 "tensorflow.contrib.testing.python.framework.util_test.to_summary_proto": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.core.framework.summary_pb2.Summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.training.__all__": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.training.python.training": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.training.python.training.bucket_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.training.input._as_original_type",
    "tensorflow.python.training.input._as_tensor_list",
    "tensorflow.python.training.input._deserialize_sparse_tensors",
    "tensorflow.python.training.input._dtypes",
    "tensorflow.python.training.input._serialize_sparse_tensors",
    "tensorflow.python.training.input._shapes",
    "tensorflow.python.training.input._which_queue"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.__all__": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._as_original_type": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._as_tensor_list": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._deserialize_sparse_tensors": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._dtypes": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._serialize_sparse_tensors": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._shapes": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._validate_bucket": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.bucket_ops._which_queue": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.bucket": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "enqueue_which",
    "enumerate",
    "queue_creator",
    "range",
    "tensorflow.contrib.training.python.training.bucket_ops._as_original_type",
    "tensorflow.contrib.training.python.training.bucket_ops._as_tensor_list",
    "tensorflow.contrib.training.python.training.bucket_ops._deserialize_sparse_tensors",
    "tensorflow.contrib.training.python.training.bucket_ops._dtypes",
    "tensorflow.contrib.training.python.training.bucket_ops._serialize_sparse_tensors",
    "tensorflow.contrib.training.python.training.bucket_ops._shapes",
    "tensorflow.contrib.training.python.training.bucket_ops._validate_bucket",
    "tensorflow.contrib.training.python.training.bucket_ops._which_queue",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.errors.CancelledError",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.scalar",
    "tensorflow.python.framework.tensor_shape.vector",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.data_flow_ops.PaddingFIFOQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner",
    "which_dequeue"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.bucket.enqueue_which": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "range",
    "tensorflow.contrib.training.python.training.bucket_ops.functools",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.bucket.enqueue_which.enqueue_single": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.bucket_by_sequence_length": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.iinfo",
    "numpy.int32",
    "tensorflow.contrib.training.python.training.bucket_ops._as_original_type",
    "tensorflow.contrib.training.python.training.bucket_ops._as_tensor_list",
    "tensorflow.contrib.training.python.training.bucket_ops.bucket",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.scalar",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.math_ops.to_int32",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.input_py": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.bucket_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.contrib.training.python.training.sampling_ops._calculate_acceptance_probabilities": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.is_nan",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops._conditional_batch": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops._estimate_data_distribution": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.truediv",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops._get_batch_from_per_class_queues": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "range",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.random_ops.multinomial"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops._make_per_class_queues": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.data_flow_ops.dynamic_partition",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops._verify_input": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.check_ops.assert_integer",
    "tensorflow.python.ops.check_ops.assert_less",
    "tensorflow.python.ops.check_ops.assert_non_negative",
    "tensorflow.python.ops.check_ops.assert_positive",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.input_ops": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.stratified_sample": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_calculate_acceptance_probabilities",
    "_conditional_batch",
    "_estimate_data_distribution",
    "_verify_input",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.logging_ops.Print",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.logical_or",
    "tensorflow.python.ops.math_ops.not_equal",
    "tensorflow.python.ops.math_ops.reduce_all",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.training.input.batch"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.stratified_sample_unknown_dist": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "_get_batch_from_per_class_queues",
    "_make_per_class_queues",
    "_verify_input",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sampling_ops.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver": {
  "data": {},
  "type": "module"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.__init__": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.batch_size": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.context": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.insertion_index": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.key": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.length": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.next_key": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.save_state": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "KeyError",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_shape",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.logical_not"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.sequence": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.sequence_count": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.sequences": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.state": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch.total_length": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._SequenceInputWrapper",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_dimensions",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_multiple_of",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._prepare_sequence_inputs",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.collections",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.six",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.math_ops.less_equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._create_barrier": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.data_flow_ops.Barrier"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._create_prefetch_op": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "dict",
    "list",
    "range",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_dimensions",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.collections",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_join"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._get_barrier_index": {
  "data": {
   "lineno": 997
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._get_barrier_length_index": {
  "data": {
   "lineno": 982
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._get_barrier_next_key_index": {
  "data": {
   "lineno": 988
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._get_barrier_sequence_count_index": {
  "data": {
   "lineno": 994
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._get_barrier_sequence_index": {
  "data": {
   "lineno": 991
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._get_barrier_total_length_index": {
  "data": {
   "lineno": 985
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._prepare_barrier_reads": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.collections",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver._store_index_maps": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.barrier": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.batch_size": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.close": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.name": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.next_batch": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.num_unroll": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver.prefetch_op": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._SequenceInputWrapper": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._SequenceInputWrapper.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.six",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._SequenceInputWrapper.context": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._SequenceInputWrapper.key": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._SequenceInputWrapper.length": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._SequenceInputWrapper.sequences": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_dimensions": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "max",
    "set",
    "str",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_join",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_multiple_of": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.mod",
    "tensorflow.python.ops.math_ops.not_equal",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_join"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_rank": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "str",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_join"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_shape": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "str",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_rank",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_all",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_join"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._padding": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "str",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.numbers",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.six",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_join"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._prepare_sequence_inputs": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "TypeError",
    "_assert_fully_defined",
    "_sort_by_name",
    "dict",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._check_rank",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._prepare_sequence_inputs._assert_fully_defined": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver._prepare_sequence_inputs._sort_by_name": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.batch_sequences_with_states": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "_padding",
    "list",
    "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.not_equal",
    "tensorflow.python.ops.string_ops.as_string",
    "tensorflow.python.ops.string_ops.string_join",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.string_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.string_ops"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.contrib.training.python.training.sequence_queueing_state_saver.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.contrib.util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.contrib.util.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.contrib.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.constant_value": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util.constant_value"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.make_ndarray": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util.MakeNdarray"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.make_tensor_proto": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util.make_tensor_proto"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.ops_used_by_graph_def": {
  "data": {
   "shadows": "tensorflow.python.training.saver.ops_used_by_graph_def"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.contrib.util.stripped_op_list_for_graph": {
  "data": {
   "shadows": "tensorflow.python.training.saver.stripped_op_list_for_graph"
  },
  "type": "import"
 },
 "tensorflow.core": {
  "data": {},
  "type": "module"
 },
 "tensorflow.core.example": {
  "data": {},
  "type": "module"
 },
 "tensorflow.core.example.example_parser_configuration_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.example.example_parser_configuration_pb2.DESCRIPTOR",
    "tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration",
    "tensorflow.core.example.example_parser_configuration_pb2.FeatureConfiguration",
    "tensorflow.core.example.example_parser_configuration_pb2.FixedLenFeatureProto",
    "tensorflow.core.example.example_parser_configuration_pb2.VarLenFeatureProto",
    "tensorflow.core.example.example_parser_configuration_pb2._EXAMPLEPARSERCONFIGURATION",
    "tensorflow.core.example.example_parser_configuration_pb2._EXAMPLEPARSERCONFIGURATION_FEATUREMAPENTRY",
    "tensorflow.core.example.example_parser_configuration_pb2._FEATURECONFIGURATION",
    "tensorflow.core.example.example_parser_configuration_pb2._FIXEDLENFEATUREPROTO",
    "tensorflow.core.example.example_parser_configuration_pb2._VARLENFEATUREPROTO",
    "tensorflow.core.example.example_parser_configuration_pb2._b",
    "tensorflow.core.example.example_parser_configuration_pb2._sym_db",
    "tensorflow.core.example.example_parser_configuration_pb2.sys",
    "tensorflow.core.framework.tensor_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_pb2._TENSORPROTO",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.FeatureConfiguration": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.FixedLenFeatureProto": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.VarLenFeatureProto": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._EXAMPLEPARSERCONFIGURATION": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._EXAMPLEPARSERCONFIGURATION_FEATUREMAPENTRY": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._FEATURECONFIGURATION": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._FIXEDLENFEATUREPROTO": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._VARLENFEATUREPROTO": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_parser_configuration_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.tensorflow_dot_core_dot_framework_dot_tensor__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_parser_configuration_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.example.example_pb2.DESCRIPTOR",
    "tensorflow.core.example.example_pb2.Example",
    "tensorflow.core.example.example_pb2.SequenceExample",
    "tensorflow.core.example.example_pb2._EXAMPLE",
    "tensorflow.core.example.example_pb2._SEQUENCEEXAMPLE",
    "tensorflow.core.example.example_pb2._b",
    "tensorflow.core.example.example_pb2._sym_db",
    "tensorflow.core.example.example_pb2.sys",
    "tensorflow.core.example.feature_pb2.DESCRIPTOR",
    "tensorflow.core.example.feature_pb2._FEATURELISTS",
    "tensorflow.core.example.feature_pb2._FEATURES"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.example.example_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_pb2.Example": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_pb2.SequenceExample": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_pb2._EXAMPLE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_pb2._SEQUENCEEXAMPLE": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.example.example_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.example.example_pb2.tensorflow_dot_core_dot_example_dot_feature__pb2": {
  "data": {
   "shadows": "tensorflow.core.example.feature_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.example.feature_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.example.feature_pb2.BytesList",
    "tensorflow.core.example.feature_pb2.DESCRIPTOR",
    "tensorflow.core.example.feature_pb2.Feature",
    "tensorflow.core.example.feature_pb2.FeatureList",
    "tensorflow.core.example.feature_pb2.FeatureLists",
    "tensorflow.core.example.feature_pb2.Features",
    "tensorflow.core.example.feature_pb2.FloatList",
    "tensorflow.core.example.feature_pb2.Int64List",
    "tensorflow.core.example.feature_pb2._BYTESLIST",
    "tensorflow.core.example.feature_pb2._FEATURE",
    "tensorflow.core.example.feature_pb2._FEATURELIST",
    "tensorflow.core.example.feature_pb2._FEATURELISTS",
    "tensorflow.core.example.feature_pb2._FEATURELISTS_FEATURELISTENTRY",
    "tensorflow.core.example.feature_pb2._FEATURES",
    "tensorflow.core.example.feature_pb2._FEATURES_FEATUREENTRY",
    "tensorflow.core.example.feature_pb2._FLOATLIST",
    "tensorflow.core.example.feature_pb2._INT64LIST",
    "tensorflow.core.example.feature_pb2._b",
    "tensorflow.core.example.feature_pb2._sym_db",
    "tensorflow.core.example.feature_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.example.feature_pb2.BytesList": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2.Feature": {
  "data": {
   "lineno": 384
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2.FeatureList": {
  "data": {
   "lineno": 406
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2.FeatureLists": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2.Features": {
  "data": {
   "lineno": 391
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2.FloatList": {
  "data": {
   "lineno": 370
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2.Int64List": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._BYTESLIST": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._FEATURE": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._FEATURELIST": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._FEATURELISTS": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._FEATURELISTS_FEATURELISTENTRY": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._FEATURES": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._FEATURES_FEATUREENTRY": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._FLOATLIST": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._INT64LIST": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.example.feature_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.example.feature_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.example.feature_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.example.feature_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.example.feature_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.example.feature_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework": {
  "data": {},
  "type": "module"
 },
 "tensorflow.core.framework.allocation_description_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.allocation_description_pb2.AllocationDescription",
    "tensorflow.core.framework.allocation_description_pb2.DESCRIPTOR",
    "tensorflow.core.framework.allocation_description_pb2._ALLOCATIONDESCRIPTION",
    "tensorflow.core.framework.allocation_description_pb2._b",
    "tensorflow.core.framework.allocation_description_pb2._sym_db",
    "tensorflow.core.framework.allocation_description_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.allocation_description_pb2.AllocationDescription": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "tensorflow.core.framework.allocation_description_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.framework.allocation_description_pb2._ALLOCATIONDESCRIPTION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.framework.allocation_description_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.allocation_description_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.allocation_description_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.allocation_description_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.allocation_description_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.allocation_description_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.allocation_description_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.allocation_description_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.core.framework.attr_value_pb2.DESCRIPTOR",
    "tensorflow.core.framework.attr_value_pb2.NameAttrList",
    "tensorflow.core.framework.attr_value_pb2._ATTRVALUE",
    "tensorflow.core.framework.attr_value_pb2._ATTRVALUE_LISTVALUE",
    "tensorflow.core.framework.attr_value_pb2._NAMEATTRLIST",
    "tensorflow.core.framework.attr_value_pb2._NAMEATTRLIST_ATTRENTRY",
    "tensorflow.core.framework.attr_value_pb2._b",
    "tensorflow.core.framework.attr_value_pb2._sym_db",
    "tensorflow.core.framework.attr_value_pb2.sys",
    "tensorflow.core.framework.tensor_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_pb2._TENSORPROTO",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.attr_value_pb2.AttrValue": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2.NameAttrList": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2._ATTRVALUE": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2._ATTRVALUE_LISTVALUE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2._NAMEATTRLIST": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2._NAMEATTRLIST_ATTRENTRY": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.attr_value_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2.tensorflow_dot_core_dot_framework_dot_tensor__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2.tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.attr_value_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.cost_graph_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.cost_graph_pb2.CostGraphDef",
    "tensorflow.core.framework.cost_graph_pb2.DESCRIPTOR",
    "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF",
    "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF_NODE",
    "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF_NODE_INPUTINFO",
    "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF_NODE_OUTPUTINFO",
    "tensorflow.core.framework.cost_graph_pb2._b",
    "tensorflow.core.framework.cost_graph_pb2._sym_db",
    "tensorflow.core.framework.cost_graph_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.cost_graph_pb2.CostGraphDef": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF_NODE": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF_NODE_INPUTINFO": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF_NODE_OUTPUTINFO": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.cost_graph_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.cost_graph_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.cost_graph_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.cost_graph_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.cost_graph_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.cost_graph_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.device_attributes_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.device_attributes_pb2.DESCRIPTOR",
    "tensorflow.core.framework.device_attributes_pb2.DeviceAttributes",
    "tensorflow.core.framework.device_attributes_pb2._BUSADJACENCY",
    "tensorflow.core.framework.device_attributes_pb2._DEVICEATTRIBUTES",
    "tensorflow.core.framework.device_attributes_pb2._b",
    "tensorflow.core.framework.device_attributes_pb2._sym_db",
    "tensorflow.core.framework.device_attributes_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.device_attributes_pb2.BUS_0": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2.BUS_1": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2.BUS_ANY": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2.BUS_NUM_ADJACENCIES": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2.BusAdjacency": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2.DeviceAttributes": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2._BUSADJACENCY": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2._DEVICEATTRIBUTES": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.device_attributes_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.device_attributes_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.device_attributes_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tensorflow.core.framework.device_attributes_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.device_attributes_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.device_attributes_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "tensorflow.core.framework.device_attributes_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.attr_value_pb2.DESCRIPTOR",
    "tensorflow.core.framework.attr_value_pb2._ATTRVALUE",
    "tensorflow.core.framework.function_pb2.DESCRIPTOR",
    "tensorflow.core.framework.function_pb2.FunctionDef",
    "tensorflow.core.framework.function_pb2.FunctionDefLibrary",
    "tensorflow.core.framework.function_pb2.GradientDef",
    "tensorflow.core.framework.function_pb2._FUNCTIONDEF",
    "tensorflow.core.framework.function_pb2._FUNCTIONDEFLIBRARY",
    "tensorflow.core.framework.function_pb2._FUNCTIONDEF_NODE",
    "tensorflow.core.framework.function_pb2._FUNCTIONDEF_NODE_ATTRENTRY",
    "tensorflow.core.framework.function_pb2._FUNCTIONDEF_RETENTRY",
    "tensorflow.core.framework.function_pb2._GRADIENTDEF",
    "tensorflow.core.framework.function_pb2._b",
    "tensorflow.core.framework.function_pb2._sym_db",
    "tensorflow.core.framework.function_pb2.sys",
    "tensorflow.core.framework.node_def_pb2.DESCRIPTOR",
    "tensorflow.core.framework.node_def_pb2._NODEDEF",
    "tensorflow.core.framework.op_def_pb2.DESCRIPTOR",
    "tensorflow.core.framework.op_def_pb2._OPDEF"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.function_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2.FunctionDef": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2.FunctionDefLibrary": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2.GradientDef": {
  "data": {
   "lineno": 345
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._FUNCTIONDEF": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._FUNCTIONDEFLIBRARY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._FUNCTIONDEF_NODE": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._FUNCTIONDEF_NODE_ATTRENTRY": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._FUNCTIONDEF_RETENTRY": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._GRADIENTDEF": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.function_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2.tensorflow_dot_core_dot_framework_dot_attr__value__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2.tensorflow_dot_core_dot_framework_dot_node__def__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.node_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.function_pb2.tensorflow_dot_core_dot_framework_dot_op__def__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.function_pb2.DESCRIPTOR",
    "tensorflow.core.framework.function_pb2._FUNCTIONDEFLIBRARY",
    "tensorflow.core.framework.graph_pb2.DESCRIPTOR",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.core.framework.graph_pb2._GRAPHDEF",
    "tensorflow.core.framework.graph_pb2._b",
    "tensorflow.core.framework.graph_pb2._sym_db",
    "tensorflow.core.framework.graph_pb2.sys",
    "tensorflow.core.framework.node_def_pb2.DESCRIPTOR",
    "tensorflow.core.framework.node_def_pb2._NODEDEF",
    "tensorflow.core.framework.versions_pb2.DESCRIPTOR",
    "tensorflow.core.framework.versions_pb2._VERSIONDEF"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.graph_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.core.framework.graph_pb2.GraphDef": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "tensorflow.core.framework.graph_pb2._GRAPHDEF": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.core.framework.graph_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.graph_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.graph_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2.tensorflow_dot_core_dot_framework_dot_function__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.function_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2.tensorflow_dot_core_dot_framework_dot_node__def__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.node_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.graph_pb2.tensorflow_dot_core_dot_framework_dot_versions__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.versions_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.kernel_def_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.attr_value_pb2.DESCRIPTOR",
    "tensorflow.core.framework.attr_value_pb2._ATTRVALUE",
    "tensorflow.core.framework.kernel_def_pb2.DESCRIPTOR",
    "tensorflow.core.framework.kernel_def_pb2.KernelDef",
    "tensorflow.core.framework.kernel_def_pb2._KERNELDEF",
    "tensorflow.core.framework.kernel_def_pb2._KERNELDEF_ATTRCONSTRAINT",
    "tensorflow.core.framework.kernel_def_pb2._b",
    "tensorflow.core.framework.kernel_def_pb2._sym_db",
    "tensorflow.core.framework.kernel_def_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.kernel_def_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.framework.kernel_def_pb2.KernelDef": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "tensorflow.core.framework.kernel_def_pb2._KERNELDEF": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.core.framework.kernel_def_pb2._KERNELDEF_ATTRCONSTRAINT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.framework.kernel_def_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.kernel_def_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.kernel_def_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.kernel_def_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.kernel_def_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.kernel_def_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.kernel_def_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.kernel_def_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.kernel_def_pb2.tensorflow_dot_core_dot_framework_dot_attr__value__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.log_memory_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.log_memory_pb2.DESCRIPTOR",
    "tensorflow.core.framework.log_memory_pb2.MemoryLogRawAllocation",
    "tensorflow.core.framework.log_memory_pb2.MemoryLogRawDeallocation",
    "tensorflow.core.framework.log_memory_pb2.MemoryLogStep",
    "tensorflow.core.framework.log_memory_pb2.MemoryLogTensorAllocation",
    "tensorflow.core.framework.log_memory_pb2.MemoryLogTensorDeallocation",
    "tensorflow.core.framework.log_memory_pb2.MemoryLogTensorOutput",
    "tensorflow.core.framework.log_memory_pb2._MEMORYLOGRAWALLOCATION",
    "tensorflow.core.framework.log_memory_pb2._MEMORYLOGRAWDEALLOCATION",
    "tensorflow.core.framework.log_memory_pb2._MEMORYLOGSTEP",
    "tensorflow.core.framework.log_memory_pb2._MEMORYLOGTENSORALLOCATION",
    "tensorflow.core.framework.log_memory_pb2._MEMORYLOGTENSORDEALLOCATION",
    "tensorflow.core.framework.log_memory_pb2._MEMORYLOGTENSOROUTPUT",
    "tensorflow.core.framework.log_memory_pb2._b",
    "tensorflow.core.framework.log_memory_pb2._sym_db",
    "tensorflow.core.framework.log_memory_pb2.sys",
    "tensorflow.core.framework.tensor_description_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_description_pb2._TENSORDESCRIPTION"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.log_memory_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2.MemoryLogRawAllocation": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2.MemoryLogRawDeallocation": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2.MemoryLogStep": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2.MemoryLogTensorAllocation": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2.MemoryLogTensorDeallocation": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2.MemoryLogTensorOutput": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._MEMORYLOGRAWALLOCATION": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._MEMORYLOGRAWDEALLOCATION": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._MEMORYLOGSTEP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._MEMORYLOGTENSORALLOCATION": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._MEMORYLOGTENSORDEALLOCATION": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._MEMORYLOGTENSOROUTPUT": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.log_memory_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.log_memory_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.log_memory_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.log_memory_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.log_memory_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.log_memory_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.log_memory_pb2.tensorflow_dot_core_dot_framework_dot_tensor__description__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_description_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.node_def_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.attr_value_pb2.DESCRIPTOR",
    "tensorflow.core.framework.attr_value_pb2._ATTRVALUE",
    "tensorflow.core.framework.node_def_pb2.DESCRIPTOR",
    "tensorflow.core.framework.node_def_pb2.NodeDef",
    "tensorflow.core.framework.node_def_pb2._NODEDEF",
    "tensorflow.core.framework.node_def_pb2._NODEDEF_ATTRENTRY",
    "tensorflow.core.framework.node_def_pb2._b",
    "tensorflow.core.framework.node_def_pb2._sym_db",
    "tensorflow.core.framework.node_def_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.node_def_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.framework.node_def_pb2.NodeDef": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "tensorflow.core.framework.node_def_pb2._NODEDEF": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.core.framework.node_def_pb2._NODEDEF_ATTRENTRY": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.framework.node_def_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.node_def_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.node_def_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.node_def_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.node_def_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.node_def_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.node_def_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.node_def_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.node_def_pb2.tensorflow_dot_core_dot_framework_dot_attr__value__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.attr_value_pb2.DESCRIPTOR",
    "tensorflow.core.framework.attr_value_pb2._ATTRVALUE",
    "tensorflow.core.framework.op_def_pb2.DESCRIPTOR",
    "tensorflow.core.framework.op_def_pb2.OpDef",
    "tensorflow.core.framework.op_def_pb2.OpDeprecation",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.core.framework.op_def_pb2._OPDEF",
    "tensorflow.core.framework.op_def_pb2._OPDEF_ARGDEF",
    "tensorflow.core.framework.op_def_pb2._OPDEF_ATTRDEF",
    "tensorflow.core.framework.op_def_pb2._OPDEPRECATION",
    "tensorflow.core.framework.op_def_pb2._OPLIST",
    "tensorflow.core.framework.op_def_pb2._b",
    "tensorflow.core.framework.op_def_pb2._sym_db",
    "tensorflow.core.framework.op_def_pb2.sys",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.op_def_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2.OpDef": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2.OpDeprecation": {
  "data": {
   "lineno": 382
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2.OpList": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._OPDEF": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._OPDEF_ARGDEF": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._OPDEF_ATTRDEF": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._OPDEPRECATION": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._OPLIST": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.op_def_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2.tensorflow_dot_core_dot_framework_dot_attr__value__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.op_def_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.allocation_description_pb2.DESCRIPTOR",
    "tensorflow.core.framework.allocation_description_pb2._ALLOCATIONDESCRIPTION",
    "tensorflow.core.framework.step_stats_pb2.AllocatorMemoryUsed",
    "tensorflow.core.framework.step_stats_pb2.DESCRIPTOR",
    "tensorflow.core.framework.step_stats_pb2.DeviceStepStats",
    "tensorflow.core.framework.step_stats_pb2.NodeExecStats",
    "tensorflow.core.framework.step_stats_pb2.NodeOutput",
    "tensorflow.core.framework.step_stats_pb2.StepStats",
    "tensorflow.core.framework.step_stats_pb2._ALLOCATORMEMORYUSED",
    "tensorflow.core.framework.step_stats_pb2._DEVICESTEPSTATS",
    "tensorflow.core.framework.step_stats_pb2._NODEEXECSTATS",
    "tensorflow.core.framework.step_stats_pb2._NODEOUTPUT",
    "tensorflow.core.framework.step_stats_pb2._STEPSTATS",
    "tensorflow.core.framework.step_stats_pb2._b",
    "tensorflow.core.framework.step_stats_pb2._sym_db",
    "tensorflow.core.framework.step_stats_pb2.sys",
    "tensorflow.core.framework.tensor_description_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_description_pb2._TENSORDESCRIPTION"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.step_stats_pb2.AllocatorMemoryUsed": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2.DeviceStepStats": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2.NodeExecStats": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2.NodeOutput": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2.StepStats": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._ALLOCATORMEMORYUSED": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._DEVICESTEPSTATS": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._NODEEXECSTATS": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._NODEOUTPUT": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._STEPSTATS": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.step_stats_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2.tensorflow_dot_core_dot_framework_dot_allocation__description__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.allocation_description_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.step_stats_pb2.tensorflow_dot_core_dot_framework_dot_tensor__description__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_description_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.summary_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.summary_pb2.DESCRIPTOR",
    "tensorflow.core.framework.summary_pb2.HistogramProto",
    "tensorflow.core.framework.summary_pb2.Summary",
    "tensorflow.core.framework.summary_pb2._HISTOGRAMPROTO",
    "tensorflow.core.framework.summary_pb2._SUMMARY",
    "tensorflow.core.framework.summary_pb2._SUMMARY_AUDIO",
    "tensorflow.core.framework.summary_pb2._SUMMARY_IMAGE",
    "tensorflow.core.framework.summary_pb2._SUMMARY_VALUE",
    "tensorflow.core.framework.summary_pb2._b",
    "tensorflow.core.framework.summary_pb2._sym_db",
    "tensorflow.core.framework.summary_pb2.sys",
    "tensorflow.core.framework.tensor_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_pb2._TENSORPROTO"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.summary_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2.HistogramProto": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2.Summary": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._HISTOGRAMPROTO": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._SUMMARY": {
  "data": {
   "lineno": 295
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._SUMMARY_AUDIO": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._SUMMARY_IMAGE": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._SUMMARY_VALUE": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.summary_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.summary_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.summary_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.summary_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.summary_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.summary_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.summary_pb2.tensorflow_dot_core_dot_framework_dot_tensor__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.allocation_description_pb2.DESCRIPTOR",
    "tensorflow.core.framework.allocation_description_pb2._ALLOCATIONDESCRIPTION",
    "tensorflow.core.framework.tensor_description_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_description_pb2.TensorDescription",
    "tensorflow.core.framework.tensor_description_pb2._TENSORDESCRIPTION",
    "tensorflow.core.framework.tensor_description_pb2._b",
    "tensorflow.core.framework.tensor_description_pb2._sym_db",
    "tensorflow.core.framework.tensor_description_pb2.sys",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.tensor_description_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_description_pb2.TensorDescription": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_description_pb2._TENSORDESCRIPTION": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_description_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_description_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_description_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2.tensorflow_dot_core_dot_framework_dot_allocation__description__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.allocation_description_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2.tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_description_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.tensor_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_pb2.TensorProto",
    "tensorflow.core.framework.tensor_pb2._TENSORPROTO",
    "tensorflow.core.framework.tensor_pb2._b",
    "tensorflow.core.framework.tensor_pb2._sym_db",
    "tensorflow.core.framework.tensor_pb2.sys",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.tensor_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_pb2.TensorProto": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_pb2._TENSORPROTO": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2.tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_shape_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO_DIM",
    "tensorflow.core.framework.tensor_shape_pb2._b",
    "tensorflow.core.framework.tensor_shape_pb2._sym_db",
    "tensorflow.core.framework.tensor_shape_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO_DIM": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_shape_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_shape_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_shape_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_shape_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_shape_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_shape_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_shape_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_shape_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_slice_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.tensor_slice_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto",
    "tensorflow.core.framework.tensor_slice_pb2._TENSORSLICEPROTO",
    "tensorflow.core.framework.tensor_slice_pb2._TENSORSLICEPROTO_EXTENT",
    "tensorflow.core.framework.tensor_slice_pb2._b",
    "tensorflow.core.framework.tensor_slice_pb2._sym_db",
    "tensorflow.core.framework.tensor_slice_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.tensor_slice_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_slice_pb2._TENSORSLICEPROTO": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_slice_pb2._TENSORSLICEPROTO_EXTENT": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_slice_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_slice_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_slice_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_slice_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_slice_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.tensor_slice_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_slice_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.tensor_slice_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.types_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE",
    "tensorflow.core.framework.types_pb2._b",
    "tensorflow.core.framework.types_pb2._sym_db",
    "tensorflow.core.framework.types_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.types_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_BFLOAT16": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_BFLOAT16_REF": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_BOOL": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_BOOL_REF": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_COMPLEX128": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_COMPLEX128_REF": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_COMPLEX64": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_COMPLEX64_REF": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_DOUBLE": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_DOUBLE_REF": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_FLOAT": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_FLOAT_REF": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_HALF": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_HALF_REF": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT16": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT16_REF": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT32": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT32_REF": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT64": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT64_REF": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT8": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INT8_REF": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_INVALID": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QINT16": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QINT16_REF": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QINT32": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QINT32_REF": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QINT8": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QINT8_REF": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QUINT16": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QUINT16_REF": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QUINT8": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_QUINT8_REF": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_STRING": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_STRING_REF": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_UINT16": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_UINT16_REF": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_UINT8": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DT_UINT8_REF": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2.DataType": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2._DATATYPE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.types_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.types_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.types_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tensorflow.core.framework.types_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.types_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.types_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "tensorflow.core.framework.types_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.variable_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.variable_pb2.DESCRIPTOR",
    "tensorflow.core.framework.variable_pb2.SaveSliceInfoDef",
    "tensorflow.core.framework.variable_pb2.VariableDef",
    "tensorflow.core.framework.variable_pb2._SAVESLICEINFODEF",
    "tensorflow.core.framework.variable_pb2._VARIABLEDEF",
    "tensorflow.core.framework.variable_pb2._b",
    "tensorflow.core.framework.variable_pb2._sym_db",
    "tensorflow.core.framework.variable_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.variable_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.framework.variable_pb2.SaveSliceInfoDef": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "tensorflow.core.framework.variable_pb2.VariableDef": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "tensorflow.core.framework.variable_pb2._SAVESLICEINFODEF": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "tensorflow.core.framework.variable_pb2._VARIABLEDEF": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.framework.variable_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.variable_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.variable_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.variable_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.variable_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.variable_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.variable_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.variable_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.framework.versions_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.versions_pb2.DESCRIPTOR",
    "tensorflow.core.framework.versions_pb2.VersionDef",
    "tensorflow.core.framework.versions_pb2._VERSIONDEF",
    "tensorflow.core.framework.versions_pb2._b",
    "tensorflow.core.framework.versions_pb2._sym_db",
    "tensorflow.core.framework.versions_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.framework.versions_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.framework.versions_pb2.VersionDef": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "tensorflow.core.framework.versions_pb2._VERSIONDEF": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.framework.versions_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.framework.versions_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.framework.versions_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.framework.versions_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.framework.versions_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.framework.versions_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.framework.versions_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.framework.versions_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.core.lib.core": {
  "data": {},
  "type": "module"
 },
 "tensorflow.core.lib.core.error_codes_pb2": {
  "data": {
   "symbols_in_volume": [
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.lib.core.error_codes_pb2.DESCRIPTOR",
    "tensorflow.core.lib.core.error_codes_pb2._CODE",
    "tensorflow.core.lib.core.error_codes_pb2._b",
    "tensorflow.core.lib.core.error_codes_pb2._sym_db",
    "tensorflow.core.lib.core.error_codes_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.lib.core.error_codes_pb2.ABORTED": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.ALREADY_EXISTS": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.CANCELLED": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.Code": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.DATA_LOSS": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.DEADLINE_EXCEEDED": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.DO_NOT_USE_RESERVED_FOR_FUTURE_EXPANSION_USE_DEFAULT_IN_SWITCH_INSTEAD_": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.FAILED_PRECONDITION": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.INTERNAL": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.INVALID_ARGUMENT": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.NOT_FOUND": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.OK": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.OUT_OF_RANGE": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.PERMISSION_DENIED": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.RESOURCE_EXHAUSTED": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.UNAUTHENTICATED": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.UNAVAILABLE": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.UNIMPLEMENTED": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2.UNKNOWN": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2._CODE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.lib.core.error_codes_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.lib.core.error_codes_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.lib.core.error_codes_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tensorflow.core.lib.core.error_codes_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.lib.core.error_codes_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.lib.core.error_codes_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "tensorflow.core.lib.core.error_codes_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf": {
  "data": {},
  "type": "module"
 },
 "tensorflow.core.protobuf.config_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.cost_graph_pb2.DESCRIPTOR",
    "tensorflow.core.framework.cost_graph_pb2._COSTGRAPHDEF",
    "tensorflow.core.framework.graph_pb2.DESCRIPTOR",
    "tensorflow.core.framework.graph_pb2._GRAPHDEF",
    "tensorflow.core.framework.step_stats_pb2.DESCRIPTOR",
    "tensorflow.core.framework.step_stats_pb2._STEPSTATS",
    "tensorflow.core.protobuf.config_pb2.ConfigProto",
    "tensorflow.core.protobuf.config_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.config_pb2.DebugTensorWatch",
    "tensorflow.core.protobuf.config_pb2.GPUOptions",
    "tensorflow.core.protobuf.config_pb2.GraphOptions",
    "tensorflow.core.protobuf.config_pb2.OptimizerOptions",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.core.protobuf.config_pb2.ThreadPoolOptionProto",
    "tensorflow.core.protobuf.config_pb2._CONFIGPROTO",
    "tensorflow.core.protobuf.config_pb2._CONFIGPROTO_DEVICECOUNTENTRY",
    "tensorflow.core.protobuf.config_pb2._DEBUGTENSORWATCH",
    "tensorflow.core.protobuf.config_pb2._GPUOPTIONS",
    "tensorflow.core.protobuf.config_pb2._GRAPHOPTIONS",
    "tensorflow.core.protobuf.config_pb2._OPTIMIZEROPTIONS",
    "tensorflow.core.protobuf.config_pb2._OPTIMIZEROPTIONS_LEVEL",
    "tensorflow.core.protobuf.config_pb2._RUNMETADATA",
    "tensorflow.core.protobuf.config_pb2._RUNOPTIONS",
    "tensorflow.core.protobuf.config_pb2._RUNOPTIONS_TRACELEVEL",
    "tensorflow.core.protobuf.config_pb2._THREADPOOLOPTIONPROTO",
    "tensorflow.core.protobuf.config_pb2._b",
    "tensorflow.core.protobuf.config_pb2._sym_db",
    "tensorflow.core.protobuf.config_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.config_pb2.ConfigProto": {
  "data": {
   "lineno": 653
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.DebugTensorWatch": {
  "data": {
   "lineno": 668
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.GPUOptions": {
  "data": {
   "lineno": 625
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.GraphOptions": {
  "data": {
   "lineno": 639
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.OptimizerOptions": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.RunMetadata": {
  "data": {
   "lineno": 682
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.RunOptions": {
  "data": {
   "lineno": 675
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2.ThreadPoolOptionProto": {
  "data": {
   "lineno": 646
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._CONFIGPROTO": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._CONFIGPROTO_DEVICECOUNTENTRY": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._DEBUGTENSORWATCH": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._GPUOPTIONS": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._GRAPHOPTIONS": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._OPTIMIZEROPTIONS": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._OPTIMIZEROPTIONS_LEVEL": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._RUNMETADATA": {
  "data": {
   "lineno": 558
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._RUNOPTIONS": {
  "data": {
   "lineno": 498
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._RUNOPTIONS_TRACELEVEL": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._THREADPOOLOPTIONPROTO": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.config_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2.tensorflow_dot_core_dot_framework_dot_cost__graph__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.cost_graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2.tensorflow_dot_core_dot_framework_dot_graph__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.config_pb2.tensorflow_dot_core_dot_framework_dot_step__stats__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.step_stats_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.control_flow_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.protobuf.control_flow_pb2.CondContextDef",
    "tensorflow.core.protobuf.control_flow_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.control_flow_pb2.ValuesDef",
    "tensorflow.core.protobuf.control_flow_pb2.WhileContextDef",
    "tensorflow.core.protobuf.control_flow_pb2._CONDCONTEXTDEF",
    "tensorflow.core.protobuf.control_flow_pb2._VALUESDEF",
    "tensorflow.core.protobuf.control_flow_pb2._VALUESDEF_EXTERNALVALUESENTRY",
    "tensorflow.core.protobuf.control_flow_pb2._WHILECONTEXTDEF",
    "tensorflow.core.protobuf.control_flow_pb2._b",
    "tensorflow.core.protobuf.control_flow_pb2._sym_db",
    "tensorflow.core.protobuf.control_flow_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.control_flow_pb2.CondContextDef": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2.ValuesDef": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2.WhileContextDef": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2._CONDCONTEXTDEF": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2._VALUESDEF": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2._VALUESDEF_EXTERNALVALUESENTRY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2._WHILECONTEXTDEF": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.control_flow_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.control_flow_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.control_flow_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.control_flow_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.control_flow_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.control_flow_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.any_pb2.DESCRIPTOR",
    "google.protobuf.any_pb2._ANY",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.graph_pb2.DESCRIPTOR",
    "tensorflow.core.framework.graph_pb2._GRAPHDEF",
    "tensorflow.core.framework.op_def_pb2.DESCRIPTOR",
    "tensorflow.core.framework.op_def_pb2._OPLIST",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE",
    "tensorflow.core.protobuf.meta_graph_pb2.AssetFileDef",
    "tensorflow.core.protobuf.meta_graph_pb2.CollectionDef",
    "tensorflow.core.protobuf.meta_graph_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "tensorflow.core.protobuf.meta_graph_pb2.SignatureDef",
    "tensorflow.core.protobuf.meta_graph_pb2.TensorInfo",
    "tensorflow.core.protobuf.meta_graph_pb2._ASSETFILEDEF",
    "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF",
    "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_ANYLIST",
    "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_BYTESLIST",
    "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_FLOATLIST",
    "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_INT64LIST",
    "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_NODELIST",
    "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF",
    "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF_COLLECTIONDEFENTRY",
    "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF_METAINFODEF",
    "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF_SIGNATUREDEFENTRY",
    "tensorflow.core.protobuf.meta_graph_pb2._SIGNATUREDEF",
    "tensorflow.core.protobuf.meta_graph_pb2._SIGNATUREDEF_INPUTSENTRY",
    "tensorflow.core.protobuf.meta_graph_pb2._SIGNATUREDEF_OUTPUTSENTRY",
    "tensorflow.core.protobuf.meta_graph_pb2._TENSORINFO",
    "tensorflow.core.protobuf.meta_graph_pb2._b",
    "tensorflow.core.protobuf.meta_graph_pb2._sym_db",
    "tensorflow.core.protobuf.meta_graph_pb2.sys",
    "tensorflow.core.protobuf.saver_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.saver_pb2._SAVERDEF"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.AssetFileDef": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.CollectionDef": {
  "data": {
   "lineno": 725
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef": {
  "data": {
   "lineno": 694
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.SignatureDef": {
  "data": {
   "lineno": 779
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.TensorInfo": {
  "data": {
   "lineno": 772
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._ASSETFILEDEF": {
  "data": {
   "lineno": 603
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_ANYLIST": {
  "data": {
   "lineno": 347
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_BYTESLIST": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_FLOATLIST": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_INT64LIST": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._COLLECTIONDEF_NODELIST": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF_COLLECTIONDEFENTRY": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF_METAINFODEF": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF_SIGNATUREDEFENTRY": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._SIGNATUREDEF": {
  "data": {
   "lineno": 558
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._SIGNATUREDEF_INPUTSENTRY": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._SIGNATUREDEF_OUTPUTSENTRY": {
  "data": {
   "lineno": 521
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._TENSORINFO": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.meta_graph_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.google_dot_protobuf_dot_any__pb2": {
  "data": {
   "shadows": "google.protobuf.any_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.tensorflow_dot_core_dot_framework_dot_graph__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.tensorflow_dot_core_dot_framework_dot_op__def__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.meta_graph_pb2.tensorflow_dot_core_dot_protobuf_dot_saver__pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.saver_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.named_tensor_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.tensor_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_pb2._TENSORPROTO",
    "tensorflow.core.protobuf.named_tensor_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto",
    "tensorflow.core.protobuf.named_tensor_pb2._NAMEDTENSORPROTO",
    "tensorflow.core.protobuf.named_tensor_pb2._b",
    "tensorflow.core.protobuf.named_tensor_pb2._sym_db",
    "tensorflow.core.protobuf.named_tensor_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.named_tensor_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.named_tensor_pb2._NAMEDTENSORPROTO": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.named_tensor_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.named_tensor_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.named_tensor_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.named_tensor_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.named_tensor_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.named_tensor_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.named_tensor_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.named_tensor_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.named_tensor_pb2.tensorflow_dot_core_dot_framework_dot_tensor__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.queue_runner_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.lib.core.error_codes_pb2.DESCRIPTOR",
    "tensorflow.core.lib.core.error_codes_pb2._CODE",
    "tensorflow.core.protobuf.queue_runner_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef",
    "tensorflow.core.protobuf.queue_runner_pb2._QUEUERUNNERDEF",
    "tensorflow.core.protobuf.queue_runner_pb2._b",
    "tensorflow.core.protobuf.queue_runner_pb2._sym_db",
    "tensorflow.core.protobuf.queue_runner_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.queue_runner_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.queue_runner_pb2._QUEUERUNNERDEF": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.queue_runner_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.queue_runner_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.queue_runner_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.queue_runner_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.queue_runner_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.queue_runner_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.queue_runner_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.queue_runner_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.queue_runner_pb2.tensorflow_dot_core_dot_lib_dot_core_dot_error__codes__pb2": {
  "data": {
   "shadows": "tensorflow.core.lib.core.error_codes_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saved_model_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.protobuf.meta_graph_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.meta_graph_pb2._METAGRAPHDEF",
    "tensorflow.core.protobuf.saved_model_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.saved_model_pb2.SavedModel",
    "tensorflow.core.protobuf.saved_model_pb2._SAVEDMODEL",
    "tensorflow.core.protobuf.saved_model_pb2._b",
    "tensorflow.core.protobuf.saved_model_pb2._sym_db",
    "tensorflow.core.protobuf.saved_model_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.saved_model_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saved_model_pb2.SavedModel": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saved_model_pb2._SAVEDMODEL": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saved_model_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saved_model_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saved_model_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saved_model_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saved_model_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saved_model_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saved_model_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saved_model_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saved_model_pb2.tensorflow_dot_core_dot_protobuf_dot_meta__graph__pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.meta_graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saver_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.protobuf.saver_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.saver_pb2.SaverDef",
    "tensorflow.core.protobuf.saver_pb2._SAVERDEF",
    "tensorflow.core.protobuf.saver_pb2._SAVERDEF_CHECKPOINTFORMATVERSION",
    "tensorflow.core.protobuf.saver_pb2._b",
    "tensorflow.core.protobuf.saver_pb2._sym_db",
    "tensorflow.core.protobuf.saver_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.saver_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saver_pb2.SaverDef": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saver_pb2._SAVERDEF": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saver_pb2._SAVERDEF_CHECKPOINTFORMATVERSION": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saver_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saver_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saver_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saver_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saver_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.saver_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saver_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.saver_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.tensor_slice_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_slice_pb2._TENSORSLICEPROTO",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE",
    "tensorflow.core.framework.versions_pb2.DESCRIPTOR",
    "tensorflow.core.framework.versions_pb2._VERSIONDEF",
    "tensorflow.core.protobuf.tensor_bundle_pb2.BundleEntryProto",
    "tensorflow.core.protobuf.tensor_bundle_pb2.BundleHeaderProto",
    "tensorflow.core.protobuf.tensor_bundle_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.tensor_bundle_pb2._BUNDLEENTRYPROTO",
    "tensorflow.core.protobuf.tensor_bundle_pb2._BUNDLEHEADERPROTO",
    "tensorflow.core.protobuf.tensor_bundle_pb2._BUNDLEHEADERPROTO_ENDIANNESS",
    "tensorflow.core.protobuf.tensor_bundle_pb2._b",
    "tensorflow.core.protobuf.tensor_bundle_pb2._sym_db",
    "tensorflow.core.protobuf.tensor_bundle_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.BundleEntryProto": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.BundleHeaderProto": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._BUNDLEENTRYPROTO": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._BUNDLEHEADERPROTO": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._BUNDLEHEADERPROTO_ENDIANNESS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.tensorflow_dot_core_dot_framework_dot_tensor__slice__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_slice_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensor_bundle_pb2.tensorflow_dot_core_dot_framework_dot_versions__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.versions_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.protobuf.config_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.config_pb2._CONFIGPROTO",
    "tensorflow.core.protobuf.tensorflow_server_pb2.ClusterDef",
    "tensorflow.core.protobuf.tensorflow_server_pb2.DESCRIPTOR",
    "tensorflow.core.protobuf.tensorflow_server_pb2.JobDef",
    "tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef",
    "tensorflow.core.protobuf.tensorflow_server_pb2._CLUSTERDEF",
    "tensorflow.core.protobuf.tensorflow_server_pb2._JOBDEF",
    "tensorflow.core.protobuf.tensorflow_server_pb2._JOBDEF_TASKSENTRY",
    "tensorflow.core.protobuf.tensorflow_server_pb2._SERVERDEF",
    "tensorflow.core.protobuf.tensorflow_server_pb2._b",
    "tensorflow.core.protobuf.tensorflow_server_pb2._sym_db",
    "tensorflow.core.protobuf.tensorflow_server_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2.ClusterDef": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2.JobDef": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._CLUSTERDEF": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._JOBDEF": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._JOBDEF_TASKSENTRY": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._SERVERDEF": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.protobuf.tensorflow_server_pb2.tensorflow_dot_core_dot_protobuf_dot_config__pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.core.util.event_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.summary_pb2.DESCRIPTOR",
    "tensorflow.core.framework.summary_pb2._SUMMARY",
    "tensorflow.core.util.event_pb2.DESCRIPTOR",
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.core.util.event_pb2.LogMessage",
    "tensorflow.core.util.event_pb2.SessionLog",
    "tensorflow.core.util.event_pb2.TaggedRunMetadata",
    "tensorflow.core.util.event_pb2._EVENT",
    "tensorflow.core.util.event_pb2._LOGMESSAGE",
    "tensorflow.core.util.event_pb2._LOGMESSAGE_LEVEL",
    "tensorflow.core.util.event_pb2._SESSIONLOG",
    "tensorflow.core.util.event_pb2._SESSIONLOG_SESSIONSTATUS",
    "tensorflow.core.util.event_pb2._TAGGEDRUNMETADATA",
    "tensorflow.core.util.event_pb2._b",
    "tensorflow.core.util.event_pb2._sym_db",
    "tensorflow.core.util.event_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.util.event_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2.Event": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2.LogMessage": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2.SessionLog": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2.TaggedRunMetadata": {
  "data": {
   "lineno": 356
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._EVENT": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._LOGMESSAGE": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._LOGMESSAGE_LEVEL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._SESSIONLOG": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._SESSIONLOG_SESSIONSTATUS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._TAGGEDRUNMETADATA": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.util.event_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.util.event_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.util.event_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.util.event_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.util.event_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.event_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.util.event_pb2.tensorflow_dot_core_dot_framework_dot_summary__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.memmapped_file_system_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.util.memmapped_file_system_pb2.DESCRIPTOR",
    "tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectory",
    "tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectoryElement",
    "tensorflow.core.util.memmapped_file_system_pb2._MEMMAPPEDFILESYSTEMDIRECTORY",
    "tensorflow.core.util.memmapped_file_system_pb2._MEMMAPPEDFILESYSTEMDIRECTORYELEMENT",
    "tensorflow.core.util.memmapped_file_system_pb2._b",
    "tensorflow.core.util.memmapped_file_system_pb2._sym_db",
    "tensorflow.core.util.memmapped_file_system_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.util.memmapped_file_system_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectory": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectoryElement": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._MEMMAPPEDFILESYSTEMDIRECTORY": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._MEMMAPPEDFILESYSTEMDIRECTORYELEMENT": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.util.memmapped_file_system_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.util.memmapped_file_system_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.memmapped_file_system_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.framework.tensor_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_pb2._TENSORPROTO",
    "tensorflow.core.framework.tensor_shape_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_shape_pb2._TENSORSHAPEPROTO",
    "tensorflow.core.framework.tensor_slice_pb2.DESCRIPTOR",
    "tensorflow.core.framework.tensor_slice_pb2._TENSORSLICEPROTO",
    "tensorflow.core.framework.types_pb2.DESCRIPTOR",
    "tensorflow.core.framework.types_pb2._DATATYPE",
    "tensorflow.core.framework.versions_pb2.DESCRIPTOR",
    "tensorflow.core.framework.versions_pb2._VERSIONDEF",
    "tensorflow.core.util.saved_tensor_slice_pb2.DESCRIPTOR",
    "tensorflow.core.util.saved_tensor_slice_pb2.SavedSlice",
    "tensorflow.core.util.saved_tensor_slice_pb2.SavedSliceMeta",
    "tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSliceMeta",
    "tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSlices",
    "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDSLICE",
    "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDSLICEMETA",
    "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDTENSORSLICEMETA",
    "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDTENSORSLICES",
    "tensorflow.core.util.saved_tensor_slice_pb2._b",
    "tensorflow.core.util.saved_tensor_slice_pb2._sym_db",
    "tensorflow.core.util.saved_tensor_slice_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.SavedSlice": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.SavedSliceMeta": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSliceMeta": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSlices": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDSLICE": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDSLICEMETA": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDTENSORSLICEMETA": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._SAVEDTENSORSLICES": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.tensorflow_dot_core_dot_framework_dot_tensor__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.tensorflow_dot_core_dot_framework_dot_tensor__slice__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_slice_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.tensorflow_dot_core_dot_framework_dot_types__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.saved_tensor_slice_pb2.tensorflow_dot_core_dot_framework_dot_versions__pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.versions_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.test_log_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.any_pb2.DESCRIPTOR",
    "google.protobuf.any_pb2._ANY",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.core.util.test_log_pb2.AvailableDeviceInfo",
    "tensorflow.core.util.test_log_pb2.BenchmarkEntries",
    "tensorflow.core.util.test_log_pb2.BenchmarkEntry",
    "tensorflow.core.util.test_log_pb2.BuildConfiguration",
    "tensorflow.core.util.test_log_pb2.CPUInfo",
    "tensorflow.core.util.test_log_pb2.CommitId",
    "tensorflow.core.util.test_log_pb2.DESCRIPTOR",
    "tensorflow.core.util.test_log_pb2.EntryValue",
    "tensorflow.core.util.test_log_pb2.GPUInfo",
    "tensorflow.core.util.test_log_pb2.MachineConfiguration",
    "tensorflow.core.util.test_log_pb2.MemoryInfo",
    "tensorflow.core.util.test_log_pb2.PlatformInfo",
    "tensorflow.core.util.test_log_pb2.RunConfiguration",
    "tensorflow.core.util.test_log_pb2.TestResults",
    "tensorflow.core.util.test_log_pb2._AVAILABLEDEVICEINFO",
    "tensorflow.core.util.test_log_pb2._BENCHMARKENTRIES",
    "tensorflow.core.util.test_log_pb2._BENCHMARKENTRY",
    "tensorflow.core.util.test_log_pb2._BENCHMARKENTRY_EXTRASENTRY",
    "tensorflow.core.util.test_log_pb2._BUILDCONFIGURATION",
    "tensorflow.core.util.test_log_pb2._COMMITID",
    "tensorflow.core.util.test_log_pb2._CPUINFO",
    "tensorflow.core.util.test_log_pb2._CPUINFO_CACHESIZEENTRY",
    "tensorflow.core.util.test_log_pb2._ENTRYVALUE",
    "tensorflow.core.util.test_log_pb2._GPUINFO",
    "tensorflow.core.util.test_log_pb2._MACHINECONFIGURATION",
    "tensorflow.core.util.test_log_pb2._MEMORYINFO",
    "tensorflow.core.util.test_log_pb2._PLATFORMINFO",
    "tensorflow.core.util.test_log_pb2._RUNCONFIGURATION",
    "tensorflow.core.util.test_log_pb2._TESTRESULTS",
    "tensorflow.core.util.test_log_pb2._b",
    "tensorflow.core.util.test_log_pb2._sym_db",
    "tensorflow.core.util.test_log_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.core.util.test_log_pb2.AvailableDeviceInfo": {
  "data": {
   "lineno": 914
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.BenchmarkEntries": {
  "data": {
   "lineno": 857
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.BenchmarkEntry": {
  "data": {
   "lineno": 842
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.BuildConfiguration": {
  "data": {
   "lineno": 864
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.CPUInfo": {
  "data": {
   "lineno": 878
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.CommitId": {
  "data": {
   "lineno": 871
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.EntryValue": {
  "data": {
   "lineno": 835
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.GPUInfo": {
  "data": {
   "lineno": 900
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.MachineConfiguration": {
  "data": {
   "lineno": 921
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.MemoryInfo": {
  "data": {
   "lineno": 893
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.PlatformInfo": {
  "data": {
   "lineno": 907
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.RunConfiguration": {
  "data": {
   "lineno": 928
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2.TestResults": {
  "data": {
   "lineno": 935
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._AVAILABLEDEVICEINFO": {
  "data": {
   "lineno": 551
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._BENCHMARKENTRIES": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._BENCHMARKENTRY": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._BENCHMARKENTRY_EXTRASENTRY": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._BUILDCONFIGURATION": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._COMMITID": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._CPUINFO": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._CPUINFO_CACHESIZEENTRY": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._ENTRYVALUE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._GPUINFO": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._MACHINECONFIGURATION": {
  "data": {
   "lineno": 603
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._MEMORYINFO": {
  "data": {
   "lineno": 402
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._PLATFORMINFO": {
  "data": {
   "lineno": 485
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._RUNCONFIGURATION": {
  "data": {
   "lineno": 676
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._TESTRESULTS": {
  "data": {
   "lineno": 707
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.core.util.test_log_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.core.util.test_log_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.core.util.test_log_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.core.util.test_log_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.core.util.test_log_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.test_log_pb2.google_dot_protobuf_dot_any__pb2": {
  "data": {
   "shadows": "google.protobuf.any_pb2"
  },
  "type": "import"
 },
 "tensorflow.core.util.test_log_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.examples": {
  "data": {},
  "type": "module"
 },
 "tensorflow.examples.tutorials": {
  "data": {},
  "type": "module"
 },
 "tensorflow.examples.tutorials.mnist": {
  "data": {},
  "type": "module"
 },
 "tensorflow.examples.tutorials.mnist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data": {
  "data": {
   "shadows": "tensorflow.examples.tutorials.mnist.input_data"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.read_data_sets": {
  "data": {
   "shadows": "tensorflow.contrib.learn.python.learn.datasets.mnist.read_data_sets"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.input_data.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.mnist": {
  "data": {
   "shadows": "tensorflow.examples.tutorials.mnist.mnist"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.mnist.IMAGE_PIXELS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tensorflow.examples.tutorials.mnist.mnist.IMAGE_SIZE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.examples.tutorials.mnist.mnist.NUM_CLASSES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.examples.tutorials.mnist.mnist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.mnist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.mnist.evaluation": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.int32",
    "tensorflow.nn.in_top_k",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.examples.tutorials.mnist.mnist.inference": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "float",
    "tensorflow.Variable",
    "tensorflow.examples.tutorials.mnist.mnist.IMAGE_PIXELS",
    "tensorflow.examples.tutorials.mnist.mnist.NUM_CLASSES",
    "tensorflow.examples.tutorials.mnist.mnist.math",
    "tensorflow.matmul",
    "tensorflow.name_scope",
    "tensorflow.nn.relu",
    "tensorflow.truncated_normal",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.examples.tutorials.mnist.mnist.loss": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean",
    "tensorflow.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.examples.tutorials.mnist.mnist.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.mnist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.mnist.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.examples.tutorials.mnist.mnist.training": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.examples.tutorials.mnist.mnist.loss",
    "tensorflow.scalar_summary",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.examples.tutorials.mnist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "tensorflow.models": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.embedding": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.embedding.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.gen_word2vec": {
  "data": {
   "shadows": "tensorflow.models.embedding.gen_word2vec"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.gen_word2vec._InitOpDefLibrary": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.gen_word2vec._SkipgramOutput": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.gen_word2vec._neg_train_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.gen_word2vec._op_def_lib": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.gen_word2vec._skipgram_outputs": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.gen_word2vec.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.gen_word2vec.neg_train": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.models.embedding.gen_word2vec.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.gen_word2vec.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.gen_word2vec.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.gen_word2vec.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.gen_word2vec.skipgram": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.models.embedding.gen_word2vec._SkipgramOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.gen_word2vec.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags",
    "tensorflow.app.run",
    "tensorflow.models.embedding.word2vec.flags"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.embedding.word2vec.FLAGS": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.word2vec.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.Options": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.embedding.word2vec.Options.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.models.embedding.word2vec.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.__init__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec._predict": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec._train_thread_body": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.analogy": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.build_eval_graph": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "min",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.matmul",
    "tensorflow.nn.l2_normalize",
    "tensorflow.nn.top_k",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.build_graph": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "print",
    "tensorflow.initialize_all_variables",
    "tensorflow.models.embedding.gen_word2vec.skipgram",
    "tensorflow.scalar_summary",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.eval": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "AttributeError",
    "print",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.forward": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.cast",
    "tensorflow.int64",
    "tensorflow.matmul",
    "tensorflow.mul",
    "tensorflow.nn.embedding_lookup",
    "tensorflow.nn.fixed_unigram_candidate_sampler",
    "tensorflow.random_uniform",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.nce_loss": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "tensorflow.nn.sigmoid_cross_entropy_with_logits",
    "tensorflow.ones_like",
    "tensorflow.reduce_sum",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.nearby": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "print",
    "six.moves.xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.optimize": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "float",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.maximum",
    "tensorflow.train.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.read_analogies": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int32",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.save_vocab": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "open",
    "six.moves.xrange",
    "tensorflow.compat.as_text",
    "tensorflow.models.embedding.word2vec.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.Word2Vec.train": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "print",
    "six.moves.xrange",
    "tensorflow.merge_all_summaries",
    "tensorflow.models.embedding.word2vec.os",
    "tensorflow.models.embedding.word2vec.sys",
    "tensorflow.models.embedding.word2vec.threading",
    "tensorflow.models.embedding.word2vec.time",
    "tensorflow.train.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec._start_shell": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "globals",
    "tensorflow.models.embedding.word2vec.IPython"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.flags": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.word2vec.main": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "locals",
    "print",
    "six.moves.xrange",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.device",
    "tensorflow.models.embedding.word2vec.FLAGS",
    "tensorflow.models.embedding.word2vec.Options",
    "tensorflow.models.embedding.word2vec.Word2Vec",
    "tensorflow.models.embedding.word2vec._start_shell",
    "tensorflow.models.embedding.word2vec.os",
    "tensorflow.models.embedding.word2vec.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.word2vec": {
  "data": {
   "shadows": "tensorflow.models.embedding.gen_word2vec"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags",
    "tensorflow.app.run",
    "tensorflow.models.embedding.word2vec_optimized.flags"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.embedding.word2vec_optimized.FLAGS": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.word2vec_optimized.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.Options": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.embedding.word2vec_optimized.Options.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.models.embedding.word2vec_optimized.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.__init__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec._predict": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec._train_thread_body": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.analogy": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.build_eval_graph": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "min",
    "tensorflow.gather",
    "tensorflow.initialize_all_variables",
    "tensorflow.int32",
    "tensorflow.matmul",
    "tensorflow.nn.l2_normalize",
    "tensorflow.nn.top_k",
    "tensorflow.placeholder",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.build_graph": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "print",
    "tensorflow.Variable",
    "tensorflow.cast",
    "tensorflow.control_dependencies",
    "tensorflow.float32",
    "tensorflow.maximum",
    "tensorflow.models.embedding.gen_word2vec.neg_train",
    "tensorflow.models.embedding.gen_word2vec.skipgram",
    "tensorflow.random_uniform",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.eval": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "AttributeError",
    "print",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.nearby": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "print",
    "six.moves.xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.read_analogies": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int32",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.save_vocab": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "open",
    "six.moves.xrange",
    "tensorflow.compat.as_text",
    "tensorflow.models.embedding.word2vec_optimized.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.Word2Vec.train": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "print",
    "six.moves.xrange",
    "tensorflow.models.embedding.word2vec_optimized.sys",
    "tensorflow.models.embedding.word2vec_optimized.threading",
    "tensorflow.models.embedding.word2vec_optimized.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized._start_shell": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "globals",
    "tensorflow.models.embedding.word2vec_optimized.IPython"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.flags": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.models.embedding.word2vec_optimized.main": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "locals",
    "print",
    "six.moves.xrange",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.device",
    "tensorflow.models.embedding.word2vec_optimized.FLAGS",
    "tensorflow.models.embedding.word2vec_optimized.Options",
    "tensorflow.models.embedding.word2vec_optimized.Word2Vec",
    "tensorflow.models.embedding.word2vec_optimized._start_shell",
    "tensorflow.models.embedding.word2vec_optimized.os",
    "tensorflow.models.embedding.word2vec_optimized.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.embedding.word2vec_optimized.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.word2vec": {
  "data": {
   "shadows": "tensorflow.models.embedding.gen_word2vec"
  },
  "type": "import"
 },
 "tensorflow.models.embedding.word2vec_optimized.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.models.image": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.image.alexnet": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_integer",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.FLAGS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.inference": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.float32",
    "tensorflow.models.image.alexnet.alexnet_benchmark.print_activations",
    "tensorflow.name_scope",
    "tensorflow.nn.bias_add",
    "tensorflow.nn.conv2d",
    "tensorflow.nn.max_pool",
    "tensorflow.nn.relu",
    "tensorflow.truncated_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.main": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.models.image.alexnet.alexnet_benchmark.run_benchmark"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.print_activations": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.run_benchmark": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "tensorflow.ConfigProto",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.Variable",
    "tensorflow.float32",
    "tensorflow.gradients",
    "tensorflow.initialize_all_variables",
    "tensorflow.models.image.alexnet.alexnet_benchmark.FLAGS",
    "tensorflow.models.image.alexnet.alexnet_benchmark.inference",
    "tensorflow.models.image.alexnet.alexnet_benchmark.time_tensorflow_run",
    "tensorflow.nn.l2_loss",
    "tensorflow.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.time_tensorflow_run": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "print",
    "six.moves.xrange",
    "tensorflow.models.image.alexnet.alexnet_benchmark.FLAGS",
    "tensorflow.models.image.alexnet.alexnet_benchmark.math",
    "tensorflow.models.image.alexnet.alexnet_benchmark.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.alexnet.alexnet_benchmark.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.image.cifar10.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10": {
  "data": {
   "shadows": "tensorflow.models.image.cifar10.cifar10"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.DATA_URL": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.FLAGS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.IMAGE_SIZE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.INITIAL_LEARNING_RATE": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.LEARNING_RATE_DECAY_FACTOR": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.MOVING_AVERAGE_DECAY": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.NUM_CLASSES": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.NUM_EPOCHS_PER_DECAY": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.NUM_EXAMPLES_PER_EPOCH_FOR_EVAL": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10.TOWER_NAME": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10._activation_summary": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.histogram_summary",
    "tensorflow.models.image.cifar10.cifar10.TOWER_NAME",
    "tensorflow.models.image.cifar10.cifar10.re",
    "tensorflow.nn.zero_fraction",
    "tensorflow.scalar_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10._add_loss_summaries": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "tensorflow.get_collection",
    "tensorflow.scalar_summary",
    "tensorflow.train.ExponentialMovingAverage"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10._variable_on_cpu": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.device",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.models.image.cifar10.cifar10.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10._variable_with_weight_decay": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tensorflow.add_to_collection",
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.models.image.cifar10.cifar10.FLAGS",
    "tensorflow.models.image.cifar10.cifar10._variable_on_cpu",
    "tensorflow.mul",
    "tensorflow.nn.l2_loss",
    "tensorflow.truncated_normal_initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.cifar10_input": {
  "data": {
   "shadows": "tensorflow.models.image.cifar10.cifar10_input"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.distorted_inputs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.cast",
    "tensorflow.float16",
    "tensorflow.models.image.cifar10.cifar10.FLAGS",
    "tensorflow.models.image.cifar10.cifar10.os",
    "tensorflow.models.image.cifar10.cifar10_input.distorted_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.inference": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.add",
    "tensorflow.constant_initializer",
    "tensorflow.matmul",
    "tensorflow.models.image.cifar10.cifar10.FLAGS",
    "tensorflow.models.image.cifar10.cifar10.NUM_CLASSES",
    "tensorflow.models.image.cifar10.cifar10._activation_summary",
    "tensorflow.models.image.cifar10.cifar10._variable_on_cpu",
    "tensorflow.models.image.cifar10.cifar10._variable_with_weight_decay",
    "tensorflow.nn.bias_add",
    "tensorflow.nn.conv2d",
    "tensorflow.nn.lrn",
    "tensorflow.nn.max_pool",
    "tensorflow.nn.relu",
    "tensorflow.reshape",
    "tensorflow.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.inputs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.cast",
    "tensorflow.float16",
    "tensorflow.models.image.cifar10.cifar10.FLAGS",
    "tensorflow.models.image.cifar10.cifar10.os",
    "tensorflow.models.image.cifar10.cifar10_input.inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.loss": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "tensorflow.add_n",
    "tensorflow.add_to_collection",
    "tensorflow.cast",
    "tensorflow.get_collection",
    "tensorflow.int64",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.maybe_download_and_extract": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "print",
    "six.moves.urllib.request.urlretrieve",
    "tensorflow.models.image.cifar10.cifar10.DATA_URL",
    "tensorflow.models.image.cifar10.cifar10.FLAGS",
    "tensorflow.models.image.cifar10.cifar10.os",
    "tensorflow.models.image.cifar10.cifar10.tarfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.maybe_download_and_extract._progress": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "float",
    "tensorflow.models.image.cifar10.cifar10.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10.train": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "int",
    "tensorflow.control_dependencies",
    "tensorflow.histogram_summary",
    "tensorflow.models.image.cifar10.cifar10.FLAGS",
    "tensorflow.models.image.cifar10.cifar10.INITIAL_LEARNING_RATE",
    "tensorflow.models.image.cifar10.cifar10.LEARNING_RATE_DECAY_FACTOR",
    "tensorflow.models.image.cifar10.cifar10.MOVING_AVERAGE_DECAY",
    "tensorflow.models.image.cifar10.cifar10.NUM_EPOCHS_PER_DECAY",
    "tensorflow.models.image.cifar10.cifar10.NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN",
    "tensorflow.models.image.cifar10.cifar10._add_loss_summaries",
    "tensorflow.no_op",
    "tensorflow.scalar_summary",
    "tensorflow.train.ExponentialMovingAverage",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.train.exponential_decay",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_boolean",
    "tensorflow.app.flags.DEFINE_integer",
    "tensorflow.app.flags.DEFINE_string",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.FLAGS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.cifar10": {
  "data": {
   "shadows": "tensorflow.models.image.cifar10.cifar10"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.eval_once": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.now",
    "int",
    "numpy.sum",
    "print",
    "tensorflow.GraphKeys.QUEUE_RUNNERS",
    "tensorflow.Session",
    "tensorflow.Summary",
    "tensorflow.get_collection",
    "tensorflow.models.image.cifar10.cifar10_eval.FLAGS",
    "tensorflow.models.image.cifar10.cifar10_eval.math",
    "tensorflow.train.Coordinator",
    "tensorflow.train.get_checkpoint_state"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.evaluate": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.merge_all_summaries",
    "tensorflow.models.image.cifar10.cifar10.MOVING_AVERAGE_DECAY",
    "tensorflow.models.image.cifar10.cifar10.inference",
    "tensorflow.models.image.cifar10.cifar10.inputs",
    "tensorflow.models.image.cifar10.cifar10_eval.FLAGS",
    "tensorflow.models.image.cifar10.cifar10_eval.eval_once",
    "tensorflow.models.image.cifar10.cifar10_eval.time",
    "tensorflow.nn.in_top_k",
    "tensorflow.train.ExponentialMovingAverage",
    "tensorflow.train.Saver",
    "tensorflow.train.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.main": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.gfile.MakeDirs",
    "tensorflow.models.image.cifar10.cifar10.maybe_download_and_extract",
    "tensorflow.models.image.cifar10.cifar10_eval.FLAGS",
    "tensorflow.models.image.cifar10.cifar10_eval.evaluate"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_eval.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input": {
  "data": {
   "shadows": "tensorflow.models.image.cifar10.cifar10_input"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input.IMAGE_SIZE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10_input.NUM_CLASSES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10_input.NUM_EXAMPLES_PER_EPOCH_FOR_EVAL": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10_input.NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10_input._generate_image_and_label_batch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.image_summary",
    "tensorflow.reshape",
    "tensorflow.train.batch",
    "tensorflow.train.shuffle_batch"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_input.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input.distorted_inputs": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "print",
    "six.moves.xrange",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.gfile.Exists",
    "tensorflow.image.per_image_whitening",
    "tensorflow.image.random_brightness",
    "tensorflow.image.random_contrast",
    "tensorflow.image.random_flip_left_right",
    "tensorflow.models.image.cifar10.cifar10_input.IMAGE_SIZE",
    "tensorflow.models.image.cifar10.cifar10_input.NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN",
    "tensorflow.models.image.cifar10.cifar10_input._generate_image_and_label_batch",
    "tensorflow.models.image.cifar10.cifar10_input.os",
    "tensorflow.models.image.cifar10.cifar10_input.read_cifar10",
    "tensorflow.random_crop",
    "tensorflow.train.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_input.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input.inputs": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "six.moves.xrange",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.gfile.Exists",
    "tensorflow.image.per_image_whitening",
    "tensorflow.image.resize_image_with_crop_or_pad",
    "tensorflow.models.image.cifar10.cifar10_input.IMAGE_SIZE",
    "tensorflow.models.image.cifar10.cifar10_input.NUM_EXAMPLES_PER_EPOCH_FOR_EVAL",
    "tensorflow.models.image.cifar10.cifar10_input.NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN",
    "tensorflow.models.image.cifar10.cifar10_input._generate_image_and_label_batch",
    "tensorflow.models.image.cifar10.cifar10_input.os",
    "tensorflow.models.image.cifar10.cifar10_input.read_cifar10",
    "tensorflow.train.string_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_input.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input.read_cifar10": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "CIFAR10Record",
    "tensorflow.FixedLengthRecordReader",
    "tensorflow.cast",
    "tensorflow.decode_raw",
    "tensorflow.int32",
    "tensorflow.reshape",
    "tensorflow.slice",
    "tensorflow.transpose",
    "tensorflow.uint8"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_input.read_cifar10.CIFAR10Record": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.image.cifar10.cifar10_input.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.CIFAR10InputTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.CIFAR10InputTest._record": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bytearray",
    "bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.CIFAR10InputTest.testSimple": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "open",
    "range",
    "tensorflow.FIFOQueue",
    "tensorflow.compat.as_text",
    "tensorflow.errors.OutOfRangeError",
    "tensorflow.models.image.cifar10.cifar10_input.read_cifar10",
    "tensorflow.models.image.cifar10.cifar10_input_test.os",
    "tensorflow.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.cifar10_input": {
  "data": {
   "shadows": "tensorflow.models.image.cifar10.cifar10_input"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_input_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_boolean",
    "tensorflow.app.flags.DEFINE_integer",
    "tensorflow.app.flags.DEFINE_string",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.FLAGS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.average_gradients": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.expand_dims",
    "tensorflow.reduce_mean",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.cifar10": {
  "data": {
   "shadows": "tensorflow.models.image.cifar10.cifar10"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.main": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.gfile.MakeDirs",
    "tensorflow.models.image.cifar10.cifar10.maybe_download_and_extract",
    "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.FLAGS",
    "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.train"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.tower_loss": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.add_n",
    "tensorflow.control_dependencies",
    "tensorflow.get_collection",
    "tensorflow.identity",
    "tensorflow.models.image.cifar10.cifar10.TOWER_NAME",
    "tensorflow.models.image.cifar10.cifar10.distorted_inputs",
    "tensorflow.models.image.cifar10.cifar10.inference",
    "tensorflow.models.image.cifar10.cifar10.loss",
    "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.re",
    "tensorflow.scalar_summary",
    "tensorflow.train.ExponentialMovingAverage"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.train": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "int",
    "numpy.isnan",
    "print",
    "six.moves.xrange",
    "tensorflow.ConfigProto",
    "tensorflow.Graph",
    "tensorflow.GraphKeys.SUMMARIES",
    "tensorflow.Session",
    "tensorflow.all_variables",
    "tensorflow.constant_initializer",
    "tensorflow.device",
    "tensorflow.get_collection",
    "tensorflow.get_variable",
    "tensorflow.get_variable_scope",
    "tensorflow.group",
    "tensorflow.histogram_summary",
    "tensorflow.initialize_all_variables",
    "tensorflow.merge_summary",
    "tensorflow.models.image.cifar10.cifar10.INITIAL_LEARNING_RATE",
    "tensorflow.models.image.cifar10.cifar10.LEARNING_RATE_DECAY_FACTOR",
    "tensorflow.models.image.cifar10.cifar10.MOVING_AVERAGE_DECAY",
    "tensorflow.models.image.cifar10.cifar10.NUM_EPOCHS_PER_DECAY",
    "tensorflow.models.image.cifar10.cifar10.NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN",
    "tensorflow.models.image.cifar10.cifar10.TOWER_NAME",
    "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.FLAGS",
    "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.average_gradients",
    "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.time",
    "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.tower_loss",
    "tensorflow.name_scope",
    "tensorflow.scalar_summary",
    "tensorflow.train.ExponentialMovingAverage",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.train.Saver",
    "tensorflow.train.SummaryWriter",
    "tensorflow.train.exponential_decay",
    "tensorflow.train.start_queue_runners",
    "tensorflow.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_multi_gpu_train.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_boolean",
    "tensorflow.app.flags.DEFINE_integer",
    "tensorflow.app.flags.DEFINE_string",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.image.cifar10.cifar10_train.FLAGS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.models.image.cifar10.cifar10_train.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.cifar10": {
  "data": {
   "shadows": "tensorflow.models.image.cifar10.cifar10"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.main": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "tensorflow.gfile.DeleteRecursively",
    "tensorflow.gfile.Exists",
    "tensorflow.gfile.MakeDirs",
    "tensorflow.models.image.cifar10.cifar10.maybe_download_and_extract",
    "tensorflow.models.image.cifar10.cifar10_train.FLAGS",
    "tensorflow.models.image.cifar10.cifar10_train.train"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_train.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.cifar10_train.train": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "float",
    "numpy.isnan",
    "print",
    "six.moves.xrange",
    "tensorflow.ConfigProto",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.Variable",
    "tensorflow.all_variables",
    "tensorflow.initialize_all_variables",
    "tensorflow.merge_all_summaries",
    "tensorflow.models.image.cifar10.cifar10.distorted_inputs",
    "tensorflow.models.image.cifar10.cifar10.inference",
    "tensorflow.models.image.cifar10.cifar10.loss",
    "tensorflow.models.image.cifar10.cifar10.train",
    "tensorflow.models.image.cifar10.cifar10_train.FLAGS",
    "tensorflow.models.image.cifar10.cifar10_train.time",
    "tensorflow.train.Saver",
    "tensorflow.train.SummaryWriter",
    "tensorflow.train.start_queue_runners"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.cifar10.cifar10_train.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.cifar10.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.image.imagenet.classify_image": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_integer",
    "tensorflow.app.flags.DEFINE_string",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.image.imagenet.classify_image.DATA_URL": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "tensorflow.models.image.imagenet.classify_image.FLAGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tensorflow.models.image.imagenet.classify_image.NodeLookup": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.image.imagenet.classify_image.NodeLookup.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.models.image.imagenet.classify_image.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.NodeLookup.id_to_string": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.NodeLookup.load": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "tensorflow.gfile.Exists",
    "tensorflow.gfile.GFile",
    "tensorflow.logging.fatal",
    "tensorflow.models.image.imagenet.classify_image.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.create_graph": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.GraphDef",
    "tensorflow.gfile.FastGFile",
    "tensorflow.import_graph_def",
    "tensorflow.models.image.imagenet.classify_image.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.main": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.models.image.imagenet.classify_image.FLAGS",
    "tensorflow.models.image.imagenet.classify_image.maybe_download_and_extract",
    "tensorflow.models.image.imagenet.classify_image.run_inference_on_image"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.maybe_download_and_extract": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "print",
    "six.moves.urllib.request.urlretrieve",
    "tensorflow.models.image.imagenet.classify_image.DATA_URL",
    "tensorflow.models.image.imagenet.classify_image.FLAGS",
    "tensorflow.models.image.imagenet.classify_image.tarfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.maybe_download_and_extract._progress": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "float",
    "tensorflow.models.image.imagenet.classify_image.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.run_inference_on_image": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.squeeze",
    "print",
    "tensorflow.Session",
    "tensorflow.gfile.Exists",
    "tensorflow.gfile.FastGFile",
    "tensorflow.logging.fatal",
    "tensorflow.models.image.imagenet.classify_image.FLAGS",
    "tensorflow.models.image.imagenet.classify_image.NodeLookup",
    "tensorflow.models.image.imagenet.classify_image.create_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.imagenet.classify_image.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.imagenet.classify_image.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.image.mnist.convolutional": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.app.flags.DEFINE_boolean",
    "tensorflow.app.flags.FLAGS",
    "tensorflow.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.image.mnist.convolutional.BATCH_SIZE": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.EVAL_BATCH_SIZE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.EVAL_FREQUENCY": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.FLAGS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.IMAGE_SIZE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.NUM_CHANNELS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.NUM_EPOCHS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.NUM_LABELS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.PIXEL_DEPTH": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.SEED": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.SOURCE_URL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.VALIDATION_SIZE": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.WORK_DIRECTORY": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.models.image.mnist.convolutional.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.data_type": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.float16",
    "tensorflow.float32",
    "tensorflow.models.image.mnist.convolutional.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.error_rate": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tensorflow.models.image.mnist.convolutional.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.extract_data": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "print",
    "tensorflow.models.image.mnist.convolutional.IMAGE_SIZE",
    "tensorflow.models.image.mnist.convolutional.NUM_CHANNELS",
    "tensorflow.models.image.mnist.convolutional.PIXEL_DEPTH",
    "tensorflow.models.image.mnist.convolutional.gzip",
    "tensorflow.models.image.mnist.convolutional.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.extract_labels": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "print",
    "tensorflow.models.image.mnist.convolutional.gzip",
    "tensorflow.models.image.mnist.convolutional.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.fake_data": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.models.image.mnist.convolutional.IMAGE_SIZE",
    "tensorflow.models.image.mnist.convolutional.NUM_CHANNELS",
    "tensorflow.models.image.mnist.convolutional.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.main": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "eval_in_batches",
    "float",
    "int",
    "model",
    "print",
    "six.moves.xrange",
    "tensorflow.Session",
    "tensorflow.Variable",
    "tensorflow.constant",
    "tensorflow.initialize_all_variables",
    "tensorflow.int64",
    "tensorflow.models.image.mnist.convolutional.BATCH_SIZE",
    "tensorflow.models.image.mnist.convolutional.EVAL_BATCH_SIZE",
    "tensorflow.models.image.mnist.convolutional.EVAL_FREQUENCY",
    "tensorflow.models.image.mnist.convolutional.FLAGS",
    "tensorflow.models.image.mnist.convolutional.IMAGE_SIZE",
    "tensorflow.models.image.mnist.convolutional.NUM_CHANNELS",
    "tensorflow.models.image.mnist.convolutional.NUM_EPOCHS",
    "tensorflow.models.image.mnist.convolutional.NUM_LABELS",
    "tensorflow.models.image.mnist.convolutional.SEED",
    "tensorflow.models.image.mnist.convolutional.VALIDATION_SIZE",
    "tensorflow.models.image.mnist.convolutional.data_type",
    "tensorflow.models.image.mnist.convolutional.error_rate",
    "tensorflow.models.image.mnist.convolutional.extract_data",
    "tensorflow.models.image.mnist.convolutional.extract_labels",
    "tensorflow.models.image.mnist.convolutional.fake_data",
    "tensorflow.models.image.mnist.convolutional.maybe_download",
    "tensorflow.models.image.mnist.convolutional.sys",
    "tensorflow.models.image.mnist.convolutional.time",
    "tensorflow.nn.l2_loss",
    "tensorflow.nn.softmax",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.placeholder",
    "tensorflow.reduce_mean",
    "tensorflow.train.MomentumOptimizer",
    "tensorflow.train.exponential_decay",
    "tensorflow.truncated_normal",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.main.eval_in_batches": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "six.moves.xrange",
    "tensorflow.models.image.mnist.convolutional.EVAL_BATCH_SIZE",
    "tensorflow.models.image.mnist.convolutional.NUM_LABELS",
    "tensorflow.models.image.mnist.convolutional.numpy"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.main.model": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.models.image.mnist.convolutional.SEED",
    "tensorflow.nn.bias_add",
    "tensorflow.nn.conv2d",
    "tensorflow.nn.dropout",
    "tensorflow.nn.max_pool",
    "tensorflow.nn.relu",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.maybe_download": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "print",
    "six.moves.urllib.request.urlretrieve",
    "tensorflow.gfile.Exists",
    "tensorflow.gfile.GFile",
    "tensorflow.gfile.MakeDirs",
    "tensorflow.models.image.mnist.convolutional.SOURCE_URL",
    "tensorflow.models.image.mnist.convolutional.WORK_DIRECTORY",
    "tensorflow.models.image.mnist.convolutional.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.image.mnist.convolutional.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "tensorflow.models.image.mnist.convolutional.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.models.rnn": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.linear": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.rnn.linear.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.linear.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.linear.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.rnn.ptb.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader": {
  "data": {
   "shadows": "tensorflow.models.rnn.ptb.reader"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader._build_vocab": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "range",
    "sorted",
    "tensorflow.models.rnn.ptb.reader._read_words",
    "tensorflow.models.rnn.ptb.reader.collections",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.ptb.reader._file_to_word_ids": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.models.rnn.ptb.reader._read_words"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.ptb.reader._read_words": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.gfile.GFile"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.ptb.reader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.ptb.reader.ptb_iterator": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.ptb.reader.ptb_raw_data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "tensorflow.models.rnn.ptb.reader._build_vocab",
    "tensorflow.models.rnn.ptb.reader._file_to_word_ids",
    "tensorflow.models.rnn.ptb.reader.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.ptb.reader.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.rnn": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.rnn.rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.rnn_cell": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.rnn.rnn_cell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.rnn_cell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.rnn_cell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.seq2seq": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tensorflow.models.rnn.seq2seq.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.seq2seq.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.seq2seq.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate": {
  "data": {},
  "type": "module"
 },
 "tensorflow.models.rnn.translate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils": {
  "data": {
   "shadows": "tensorflow.models.rnn.translate.data_utils"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.EOS_ID": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils.GO_ID": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils.PAD_ID": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils.UNK_ID": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._DIGIT_RE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._EOS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._GO": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._PAD": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._START_VOCAB": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._UNK": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._WMT_ENFR_DEV_URL": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._WMT_ENFR_TRAIN_URL": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils._WORD_SPLIT": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tensorflow.models.rnn.translate.data_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.basic_tokenizer": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.models.rnn.translate.data_utils._WORD_SPLIT"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.create_vocabulary": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "print",
    "sorted",
    "tensorflow.compat.as_bytes",
    "tensorflow.models.rnn.translate.data_utils._DIGIT_RE",
    "tensorflow.models.rnn.translate.data_utils._START_VOCAB",
    "tensorflow.models.rnn.translate.data_utils.basic_tokenizer",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.GFile",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.data_to_token_ids": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "print",
    "str",
    "tensorflow.models.rnn.translate.data_utils.initialize_vocabulary",
    "tensorflow.models.rnn.translate.data_utils.sentence_to_token_ids",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.GFile",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.get_wmt_enfr_dev_set": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "print",
    "tensorflow.models.rnn.translate.data_utils._WMT_ENFR_DEV_URL",
    "tensorflow.models.rnn.translate.data_utils.maybe_download",
    "tensorflow.models.rnn.translate.data_utils.os",
    "tensorflow.models.rnn.translate.data_utils.tarfile",
    "tensorflow.python.platform.gfile.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.get_wmt_enfr_train_set": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "print",
    "tensorflow.models.rnn.translate.data_utils._WMT_ENFR_TRAIN_URL",
    "tensorflow.models.rnn.translate.data_utils.gunzip_file",
    "tensorflow.models.rnn.translate.data_utils.maybe_download",
    "tensorflow.models.rnn.translate.data_utils.os",
    "tensorflow.models.rnn.translate.data_utils.tarfile",
    "tensorflow.python.platform.gfile.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.gunzip_file": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "open",
    "print",
    "tensorflow.models.rnn.translate.data_utils.gzip"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.initialize_vocabulary": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.GFile"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.maybe_download": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "print",
    "six.moves.urllib.request.urlretrieve",
    "tensorflow.models.rnn.translate.data_utils.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.prepare_wmt_data": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.models.rnn.translate.data_utils.create_vocabulary",
    "tensorflow.models.rnn.translate.data_utils.data_to_token_ids",
    "tensorflow.models.rnn.translate.data_utils.get_wmt_enfr_dev_set",
    "tensorflow.models.rnn.translate.data_utils.get_wmt_enfr_train_set",
    "tensorflow.models.rnn.translate.data_utils.os",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.sentence_to_token_ids": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.models.rnn.translate.data_utils.UNK_ID",
    "tensorflow.models.rnn.translate.data_utils._DIGIT_RE",
    "tensorflow.models.rnn.translate.data_utils.basic_tokenizer",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.data_utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.data_utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model": {
  "data": {
   "shadows": "tensorflow.models.rnn.translate.seq2seq_model"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.Seq2SeqModel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.Seq2SeqModel.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "float",
    "len",
    "seq2seq_f",
    "six.moves.xrange",
    "tensorflow.Variable",
    "tensorflow.all_variables",
    "tensorflow.clip_by_global_norm",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.gradients",
    "tensorflow.int32",
    "tensorflow.matmul",
    "tensorflow.nn.rnn_cell.BasicLSTMCell",
    "tensorflow.nn.rnn_cell.GRUCell",
    "tensorflow.nn.rnn_cell.MultiRNNCell",
    "tensorflow.nn.seq2seq.model_with_buckets",
    "tensorflow.placeholder",
    "tensorflow.train.GradientDescentOptimizer",
    "tensorflow.train.Saver",
    "tensorflow.trainable_variables",
    "tensorflow.transpose",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.Seq2SeqModel.__init__.sampled_loss": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.nn.sampled_softmax_loss",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.Seq2SeqModel.__init__.seq2seq_f": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "tensorflow.nn.seq2seq.embedding_attention_seq2seq"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.Seq2SeqModel.get_batch": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.ones",
    "reversed",
    "six.moves.xrange",
    "tensorflow.models.rnn.translate.data_utils.GO_ID",
    "tensorflow.models.rnn.translate.data_utils.PAD_ID",
    "tensorflow.models.rnn.translate.seq2seq_model.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.Seq2SeqModel.step": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.int32",
    "numpy.zeros",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.data_utils": {
  "data": {
   "shadows": "tensorflow.models.rnn.translate.data_utils"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.models.rnn.translate.seq2seq_model.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dir",
    "set",
    "tensorflow.python._allowed_symbols",
    "tensorflow.python._default_dlopen_flags",
    "tensorflow.python._exported_dunders",
    "tensorflow.python.client.client_lib",
    "tensorflow.python.ctypes",
    "tensorflow.python.framework.constant_op",
    "tensorflow.python.framework.framework_lib",
    "tensorflow.python.msg",
    "tensorflow.python.ops.array_ops",
    "tensorflow.python.ops.check_ops",
    "tensorflow.python.ops.control_flow_ops",
    "tensorflow.python.ops.functional_ops",
    "tensorflow.python.ops.histogram_ops",
    "tensorflow.python.ops.io_ops",
    "tensorflow.python.ops.math_ops",
    "tensorflow.python.ops.nn",
    "tensorflow.python.ops.script_ops",
    "tensorflow.python.ops.session_ops",
    "tensorflow.python.ops.sparse_ops",
    "tensorflow.python.ops.state_ops",
    "tensorflow.python.ops.string_ops",
    "tensorflow.python.ops.tensor_array_ops",
    "tensorflow.python.summary.summary",
    "tensorflow.python.sys",
    "tensorflow.python.traceback",
    "tensorflow.python.training.training",
    "tensorflow.python.util.all_util.remove_undocumented",
    "tensorflow.python.util.compat"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.__all__": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "tensorflow.python._allowed_symbols": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "tensorflow.python._default_dlopen_flags": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tensorflow.python._exported_dunders": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "tensorflow.python.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.python.client": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.client.client_lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.client.client_lib.InteractiveSession": {
  "data": {
   "shadows": "tensorflow.python.client.session.InteractiveSession"
  },
  "type": "import"
 },
 "tensorflow.python.client.client_lib.OpError": {
  "data": {
   "shadows": "tensorflow.python.framework.errors.OpError"
  },
  "type": "import"
 },
 "tensorflow.python.client.client_lib.Session": {
  "data": {
   "shadows": "tensorflow.python.client.session.Session"
  },
  "type": "import"
 },
 "tensorflow.python.client.client_lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.client.client_lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.client.client_lib.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.client.client_lib.get_default_session": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.get_default_session"
  },
  "type": "import"
 },
 "tensorflow.python.client.client_lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.client.device_lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.client.device_lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.client.device_lib.device_attributes_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.device_attributes_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.client.device_lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.client.device_lib.list_local_devices": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_convert",
    "tensorflow.python.pywrap_tensorflow.list_devices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.device_lib.list_local_devices._convert": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.core.framework.device_attributes_pb2.DeviceAttributes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.device_lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.client.device_lib.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "tensorflow.python.client.notebook.IS_KERNEL",
    "tensorflow.python.client.notebook.os",
    "tensorflow.python.client.notebook.sys",
    "tensorflow.python.platform.app.run",
    "tensorflow.python.platform.flags.DEFINE_string",
    "tensorflow.python.platform.flags.FLAGS"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.client.notebook.FLAGS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.python.client.notebook.IPKernelApp": {
  "data": {
   "shadows": "IPython.kernel.zmq.kernelapp.IPKernelApp"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.IS_KERNEL": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.python.client.notebook.NotebookApp": {
  "data": {
   "shadows": "IPython.html.notebookapp.NotebookApp"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.ORIG_ARGV": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.python.client.notebook.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.main": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "IPython.html.notebookapp.NotebookApp.instance",
    "IPython.kernel.zmq.kernelapp.IPKernelApp.instance",
    "IPython.lib.passwd",
    "print",
    "tensorflow.python.client.notebook.FLAGS",
    "tensorflow.python.client.notebook.IS_KERNEL",
    "tensorflow.python.client.notebook.ORIG_ARGV",
    "tensorflow.python.client.notebook.socket",
    "tensorflow.python.client.notebook.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.notebook.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.passwd": {
  "data": {
   "shadows": "IPython.lib.passwd"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "tensorflow.python.client.notebook.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.client.session": {
  "data": {
   "symbols_in_volume": [
    "list",
    "object",
    "tensorflow.python.client.session._get_feeds_for_indexed_slices",
    "tensorflow.python.client.session._get_indexed_slices_value_from_fetches",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "zip"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.client.session.BaseSession": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "tensorflow.python.client.session.SessionInterface",
    "tensorflow.python.client.session.re"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session.BaseSession.__del__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.python.pywrap_tensorflow.TF_DeleteSession",
    "tensorflow.python.pywrap_tensorflow.TF_DeleteStatus",
    "tensorflow.python.pywrap_tensorflow.TF_NewStatus"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.__init__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.core.protobuf.config_pb2.ConfigProto",
    "tensorflow.python.client.session.threading",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.pywrap_tensorflow.TF_DeleteSessionOptions",
    "tensorflow.python.pywrap_tensorflow.TF_NewSession",
    "tensorflow.python.pywrap_tensorflow.TF_NewSessionOptions",
    "tensorflow.python.util.compat.as_bytes",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._do_call": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "KeyError",
    "fn",
    "tensorflow.python.client.session.BaseSession",
    "tensorflow.python.framework.errors.OpError",
    "tensorflow.python.util.compat.as_text",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._do_run": {
  "data": {
   "lineno": 923
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._do_run._prun_fn": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.TF_PRun"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._do_run._run_fn": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.TF_Run"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._extend_graph": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.TF_ExtendGraph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._register_dead_handle": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.client.session.BaseSession",
    "tensorflow.python.ops.session_ops._get_handle_deleter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._run": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_feed_fn",
    "int",
    "isinstance",
    "numpy.asarray",
    "str",
    "subfeed_dtype",
    "tensorflow.python.client.session._FetchHandler",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.nest.flatten_dict_items"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._run._feed_fn": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "TypeError",
    "feed_fn",
    "isinstance",
    "tensorflow.python.client.session._REGISTERED_EXPANSIONS",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession._update_with_movers": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object",
    "tensorflow.python.ops.session_ops._get_handle_mover",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.as_default": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.default_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.close": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.TF_CloseSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.graph": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.graph_def": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.partial_run": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.partial_run_setup": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "_feed_fn",
    "isinstance",
    "list",
    "tensorflow.python.client.session._FetchHandler",
    "tensorflow.python.util.compat.as_bytes",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.partial_run_setup._feed_fn": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "TypeError",
    "feed_fn",
    "isinstance",
    "tensorflow.python.client.session._REGISTERED_EXPANSIONS",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.partial_run_setup._setup_fn": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.TF_PRunSetup"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.run": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow.TF_DeleteBuffer",
    "tensorflow.python.pywrap_tensorflow.TF_GetBuffer",
    "tensorflow.python.pywrap_tensorflow.TF_NewBuffer",
    "tensorflow.python.pywrap_tensorflow.TF_NewBufferFromString",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.BaseSession.sess_str": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.InteractiveSession": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "tensorflow.python.client.session.BaseSession"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session.InteractiveSession.__init__": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "super",
    "tensorflow.core.protobuf.config_pb2.ConfigProto",
    "tensorflow.python.client.session.InteractiveSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.InteractiveSession.close": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.client.session.InteractiveSession"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.Session": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "tensorflow.python.client.session.BaseSession"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session.Session.__enter__": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.Session.__exit__": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError",
    "tensorflow.python.platform.tf_logging.error"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.Session.__init__": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.client.session.Session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.Session.reset": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.pywrap_tensorflow.TF_Reset",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.SessionInterface": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session.SessionInterface.graph": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.SessionInterface.partial_run": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.SessionInterface.partial_run_setup": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.SessionInterface.run": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.SessionInterface.sess_str": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._DictFetchMapper": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.python.client.session._FetchMapper"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session._DictFetchMapper.__init__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "tensorflow.python.client.session._FetchMapper",
    "tensorflow.python.client.session._uniquify_fetches"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._DictFetchMapper.build_results": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._DictFetchMapper.unique_fetches": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "tensorflow.python.client.session._ElementFetchMapper": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.python.client.session._FetchMapper"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session._ElementFetchMapper.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "str",
    "tensorflow.python.framework.ops.get_default_graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._ElementFetchMapper.build_results": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "tensorflow.python.client.session._ElementFetchMapper.unique_fetches": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchHandler": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session._FetchHandler.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.client.session._FetchMapper",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchHandler._assert_fetchable": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchHandler.build_results": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.session_ops.TensorHandle"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchHandler.fetches": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchHandler.targets": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchMapper": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session._FetchMapper.build_results": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchMapper.for_fetch": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "TypeError",
    "_DictFetchMapper",
    "_ElementFetchMapper",
    "_ListFetchMapper",
    "dict",
    "fetch_fn",
    "isinstance",
    "list",
    "staticmethod",
    "tensorflow.python.client.session._REGISTERED_EXPANSIONS",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._FetchMapper.unique_fetches": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._ListFetchMapper": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "tensorflow.python.client.session._FetchMapper"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.session._ListFetchMapper.__init__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.python.client.session._FetchMapper",
    "tensorflow.python.client.session._uniquify_fetches",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._ListFetchMapper.build_results": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "list",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._ListFetchMapper.unique_fetches": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "tensorflow.python.client.session._REGISTERED_EXPANSIONS": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "tensorflow.python.client.session._get_feeds_for_indexed_slices": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._get_indexed_slices_value_from_fetches": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.IndexedSlicesValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session._uniquify_fetches": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.session.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.session_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.session_ops"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.tf_session": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.client.session.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.client.timeline": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.client.timeline.AllocationMaximum": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.python.client.timeline.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.timeline.StepStatsAnalysis": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.python.client.timeline.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.timeline.Timeline": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.timeline.Timeline.__init__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "tensorflow.python.client.timeline._ChromeTraceFormatter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._alloc_flow_id": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._alloc_pid": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._allocate_pids": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._analyze_tensors": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._assign_lanes": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._emit_op": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._emit_tensor_snapshot": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._is_gputrace_device": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._parse_op_label": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._produce_tensor": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.client.timeline._TensorTracker"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._show_compute": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline._show_memory_counters": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.client.timeline.AllocationMaximum",
    "tensorflow.python.client.timeline.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline.analyze_step_stats": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "tensorflow.python.client.timeline.StepStatsAnalysis"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.Timeline.generate_chrome_trace_format": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter._create_event": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_counter": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_counters": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_flow_end": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_flow_start": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_obj_create": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_obj_delete": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_obj_snapshot": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_pid": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_region": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.emit_tid": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._ChromeTraceFormatter.format_to_string": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.python.client.timeline.json"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.client.timeline._TensorTracker.__init__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.add_ref": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.add_unref": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.allocator": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.create_time": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.last_unref": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "max",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.name": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.num_bytes": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.object_id": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline._TensorTracker.pid": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.client.timeline.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.client.timeline.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.client.timeline.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tensorflow.python.client.timeline.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.client.timeline.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tensorflow.python.client.timeline.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.client.timeline.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.client_lib": {
  "data": {
   "shadows": "tensorflow.python.client.client_lib"
  },
  "type": "import"
 },
 "tensorflow.python.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "tensorflow.python.debug": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.debug.cli": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.debug.cli.analyzer_cli": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "str",
    "tensorflow.python.debug.cli.analyzer_cli.argparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer._error": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer._list_neighbors": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer._list_node_attributes": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer._list_node_dumps": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer.get_help": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer.list_tensors": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli.re",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer.node_info": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli.debugger_cli_common": {
  "data": {
   "shadows": "tensorflow.python.debug.cli.debugger_cli_common"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLIControlDepTest": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLIControlDepTest.setUpClass": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer",
    "tensorflow.python.debug.cli.analyzer_cli_test.tempfile",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.debug_utils.watch_graph",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLIControlDepTest.tearDownClass": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.python.debug.cli.analyzer_cli_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLIControlDepTest.testNodeInfoWithControlDependencies": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_node_attribute_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.setUpClass": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.cli.analyzer_cli.DebugAnalyzer",
    "tensorflow.python.debug.cli.analyzer_cli_test.tempfile",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.debug_utils.watch_graph",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.tearDownClass": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.python.debug.cli.analyzer_cli_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testListTensorFilterByNodeNameRegexAndOpTypeRegex": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_listed_tensors"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testListTensorFilterByOpTypeRegex": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_listed_tensors"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testListTensors": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_listed_tensors"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testListTensorsFilterByNodeNameRegex": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_listed_tensors"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testListTensorsInvalidOptions": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.check_error_output"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testNodeInfoByNodeName": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_node_attribute_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testNodeInfoByTensorName": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_node_attribute_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testNodeInfoNonexistentNodeName": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testNodeInfoShowAttributes": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_node_attribute_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.AnalyzerCLISimpleMulAddTest.testNodeInfoShowDumps": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.analyzer_cli_test.assert_node_attribute_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.analyzer_cli": {
  "data": {
   "shadows": "tensorflow.python.debug.cli.analyzer_cli"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.assert_listed_tensors": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "float",
    "iter",
    "len",
    "next",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.assert_node_attribute_lines": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "float",
    "iter",
    "len",
    "next",
    "six.moves.xrange",
    "sorted",
    "tensorflow.python.debug.cli.analyzer_cli_test.parse_op_and_node"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.check_error_output": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.debug_data": {
  "data": {
   "shadows": "tensorflow.python.debug.debug_data"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.debug_utils": {
  "data": {
   "shadows": "tensorflow.python.debug.debug_utils"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.debugger_cli_common": {
  "data": {
   "shadows": "tensorflow.python.debug.cli.debugger_cli_common"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.parse_op_and_node": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.analyzer_cli_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry.__init__": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry._get_help_for_command_prefix": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.HELP_INDENT"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry._resolve_prefix": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry.dispatch_command": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "handler",
    "isinstance",
    "str",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry.get_help": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry.is_registered": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry.register_command_handler": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.HELP_INDENT": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines.annotations": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines.font_attr_segs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines.lines": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.regex_find": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "six.moves.xrange",
    "sorted",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines",
    "tensorflow.python.debug.cli.debugger_cli_common.copy",
    "tensorflow.python.debug.cli.debugger_cli_common.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.wrap_rich_text_lines": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "six.moves.xrange",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest._echo_screen_cols": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest._handler_raising_exception": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest._handler_returning_wrong_type": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest._noop_handler": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.setUp": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testDispatchHandlerRaisingException": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testGetHelpFull": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testGetHelpSingleCommand": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testHandlerWithWrongReturnType": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testInvokeHandlerWithScreenInfo": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testRegisterAndInvokeHandler": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testRegisterAndInvokeHandlerWithAliases": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testRegisterDuplicateAliases": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testRegisterDuplicateHandlers": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testRegisterEmptyCommandPrefix": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testRegisterHandlerWithInvalidHelpInfoType": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.CommandHandlerRegistryTest.testRegisterNonCallableHandler": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.CommandHandlerRegistry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RegexFindTest": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RegexFindTest.setUp": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RegexFindTest.testRegexFindWithExistingFontAttrSegs": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.regex_find"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RegexFindTest.testRegexFindWithoutExistingFontAttrSegs": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.regex_find"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RichTextLinesTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RichTextLinesTest.testModifyRichTextLinesObject": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RichTextLinesTest.testRichTextLinesConstructorComplete": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RichTextLinesTest.testRichTextLinesConstructorIncomplete": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RichTextLinesTest.testRichTextLinesConstructorWithInvalidType": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.RichTextLinesTest.testRichTextLinesConstructorWithString": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.WrapScreenOuptutTest": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.WrapScreenOuptutTest.setUp": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.WrapScreenOuptutTest.testNoActualWrapping": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.python.debug.cli.debugger_cli_common.wrap_rich_text_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.WrapScreenOuptutTest.testWrappingInvalidArguments": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines",
    "tensorflow.python.debug.cli.debugger_cli_common.wrap_rich_text_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.WrapScreenOuptutTest.testWrappingWithAttrCutoff": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.wrap_rich_text_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.WrapScreenOuptutTest.testWrappingWithMultipleAttrCutoff": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.cli.debugger_cli_common.RichTextLines",
    "tensorflow.python.debug.cli.debugger_cli_common.wrap_rich_text_lines"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.debugger_cli_common": {
  "data": {
   "shadows": "tensorflow.python.debug.cli.debugger_cli_common"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.cli.debugger_cli_common_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.__init__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "sorted",
    "tensorflow.python.debug.debug_data.DebugTensorDatum",
    "tensorflow.python.debug.debug_data.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir._load_partition_graphs": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "six.moves.xrange",
    "tensorflow.python.debug.debug_data.is_copy_node",
    "tensorflow.python.debug.debug_data.is_debug_node",
    "tensorflow.python.debug.debug_data.parse_debug_node_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir._validate_dump_with_graphs": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "repr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.debug_watch_keys": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data.get_tensor_watch_key"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.devices": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.dumped_tensor_data": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.find": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "len",
    "predicate"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.get_rel_timestamps": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.debug_data.get_tensor_watch_key"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.get_tensor_file_paths": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.debug_data.get_tensor_watch_key"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.get_tensors": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.debug_data.get_tensor_watch_key"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.node_attributes": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.node_device": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.node_inputs": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.node_op_type": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.node_recipients": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.nodes": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.partition_graphs": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.size": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.t0": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.transitive_inputs": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "trace_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.transitive_inputs.trace_inputs": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "trace_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugDumpDir.watch_key_to_data": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.debug.debug_data.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.__repr__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.__str__": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.debug_op": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.file_path": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.get_tensor": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data.load_tensor_from_event_file"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.node_name": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.output_slot": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.tensor_name": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.debug.debug_data.get_tensor_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.timestamp": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.DebugTensorDatum.watch_key": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.debug.debug_data.get_tensor_watch_key"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data.event_pb2": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data.get_tensor_name": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.get_tensor_watch_key": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data.get_tensor_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.is_copy_node": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.is_debug_node": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.load_tensor_from_event_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "open",
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.python.framework.tensor_util.MakeNdarray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data.parse_debug_node_name": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.debug.debug_data_test.DebugDumpDirTest": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.debug_data_test.DebugDumpDirTest.setUp": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data_test.os",
    "tensorflow.python.debug.debug_data_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.DebugDumpDirTest.tearDown": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.DebugDumpDirTest.testDebugDumpDir_emptyDumpDir": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data.DebugDumpDir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.DebugDumpDirTest.testDebugDumpDir_invalidFileNamingPattern": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.debug_data_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.DebugDumpDirTest.testDebugDumpDir_nonexistentDumpRoot": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "IOError",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.debug_data_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.DebugTensorDatumTest": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.debug_data_test.DebugTensorDatumTest.testDebugDatum": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "repr",
    "str",
    "tensorflow.python.debug.debug_data.DebugTensorDatum",
    "tensorflow.python.debug.debug_data_test.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.NodeNameChecksTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.debug_data_test.NodeNameChecksTest.testIsCopyNode": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data.is_copy_node"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.NodeNameChecksTest.testIsDebugNode": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data.is_debug_node"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.ParseDebugNodeNameTest": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.debug_data_test.ParseDebugNodeNameTest.testParseDebugNodeName_invalidPrefix": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.debug_data.parse_debug_node_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.ParseDebugNodeNameTest.testParseDebugNodeName_invalidWatchedTensorName": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.debug_data.parse_debug_node_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.ParseDebugNodeNameTest.testParseDebugNodeName_missingDebugOpIndex": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.debug.debug_data.parse_debug_node_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.ParseDebugNodeNameTest.testParseDebugNodeName_valid": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_data.parse_debug_node_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_data_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.debug_data": {
  "data": {
   "shadows": "tensorflow.python.debug.debug_data"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_data_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.debug.debug_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils.add_debug_tensor_watch": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils.watch_graph": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "six.moves.xrange",
    "str",
    "tensorflow.python.debug.debug_utils.add_debug_tensor_watch",
    "tensorflow.python.debug.debug_utils.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils.watch_graph_with_blacklists": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "six.moves.xrange",
    "str",
    "tensorflow.python.debug.debug_utils.add_debug_tensor_watch",
    "tensorflow.python.debug.debug_utils.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest._verify_watches": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.setUp": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.config_pb2.RunOptions"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.setUpClass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "numpy.nan",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testAddDebugTensorWatches_defaultDebugOp": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.debug_utils.add_debug_tensor_watch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testAddDebugTensorWatches_explicitDebugOp": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.debug_utils.add_debug_tensor_watch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testAddDebugTensorWatches_multipleDebugOps": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.debug_utils.add_debug_tensor_watch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testAddDebugTensorWatches_multipleURLs": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.debug_utils.add_debug_tensor_watch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testWatchGraph_allNodes": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.debug.debug_utils.watch_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testWatchGraph_nodeNameAndOpTypeBlacklists": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_utils.watch_graph_with_blacklists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testWatchGraph_nodeNameAndOpTypeWhitelists": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tensorflow.python.debug.debug_utils.watch_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testWatchGraph_nodeNameBlacklist": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.debug.debug_utils.watch_graph_with_blacklists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testWatchGraph_nodeNameWhitelist": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.debug.debug_utils.watch_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testWatchGraph_opTypeBlacklist": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.debug.debug_utils.watch_graph_with_blacklists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.DebugUtilsTest.testWatchGraph_opTypeWhitelist": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.debug.debug_utils.watch_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.debug_utils_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.debug_utils": {
  "data": {
   "shadows": "tensorflow.python.debug.debug_utils"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.python.debug.debug_utils_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest._addDebugTensorWatch": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.setUp": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.python.debug.session_debug_test.tempfile",
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.python.debug.session_debug_test.shutil"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpCausalityCheck": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.debug_utils.watch_graph",
    "tensorflow.python.debug.session_debug_test.os",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpGraphStructureLookup": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "set",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.debug_utils.watch_graph",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpStringTensorsToFileSystem": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpToFileOverlappingParentDir": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpToFileWhileLoop": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "six.moves.xrange",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.session_debug_test.os",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpToFileWhileLoop.body": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpToFileWhileLoop.cond": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.less"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testDumpUninitializedVariable": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.initialize_all_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testFindNodesWithBadTensorValues": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "len",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.debug.debug_data.DebugDumpDir",
    "tensorflow.python.debug.debug_utils.watch_graph",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.SessionDebugTest.testFindNodesWithBadTensorValues.has_bad_value": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isinf",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.debug.session_debug_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.debug_data": {
  "data": {
   "shadows": "tensorflow.python.debug.debug_data"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.debug_utils": {
  "data": {
   "shadows": "tensorflow.python.debug.debug_utils"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.debug.session_debug_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.python.framework": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.common_shapes": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.common_shapes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.avg_pool_shape": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.common_shapes.get2d_conv_output_size",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.broadcast_shape": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "reversed",
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.call_cpp_shape_fn": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "ValueError",
    "debug_python_shape_fn",
    "numpy.asarray",
    "str",
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.FromString",
    "tensorflow.python.framework.errors.InvalidArgumentError",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.pywrap_tensorflow.RunCppShapeInference"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.conv2d_shape": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.common_shapes.get2d_conv_output_size",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.depthwise_conv2d_native_shape": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.common_shapes.get2d_conv_output_size",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.get2d_conv_output_size": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.get_conv_output_size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.get_conv_output_size": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "_same",
    "_valid",
    "all",
    "any",
    "int",
    "tensorflow.python.framework.tensor_shape.as_dimension",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.get_conv_output_size._same": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.get_conv_output_size._valid": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.matmul_shape": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.max_pool_shape": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.common_shapes.get2d_conv_output_size",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.no_outputs": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.scalar_shape": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.separable_conv2d_shape": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.common_shapes.get2d_conv_output_size",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.six.moves": {
  "data": {
   "shadows": "six.moves"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.tensor_shape_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.framework.common_shapes.unchanged_shape": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.unchanged_shape_with_rank": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.unchanged_shape_with_rank._ShapeFunction": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.unchanged_shape_with_rank_at_least": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.unchanged_shape_with_rank_at_least._ShapeFunction": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.unchanged_shape_with_rank_at_most": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.unchanged_shape_with_rank_at_most._ShapeFunction": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "tensorflow.python.framework.common_shapes.unknown_shape": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.constant_op": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.generic",
    "numpy.ndarray",
    "object",
    "tensorflow.python.framework.constant_op._constant_tensor_conversion_function",
    "tensorflow.python.framework.constant_op._dimension_tensor_conversion_function",
    "tensorflow.python.framework.constant_op._tensor_shape_tensor_conversion_function",
    "tensorflow.python.framework.ops.register_tensor_conversion_function",
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tuple"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.framework.constant_op._ConstantShape": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.constant_op._constant_tensor_conversion_function": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.constant_op._dimension_tensor_conversion_function": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.constant_op._tensor_shape_tensor_conversion_function": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.constant_op.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.attr_value_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.constant": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.tensor_util.make_tensor_proto"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.constant_op.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.constant_op.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.framework.device": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.device.DeviceSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.device.DeviceSpec.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec._clear": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec.from_string": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.framework.device.DeviceSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec.job": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec.merge_from": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec.parse_from_string": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec.replica": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec.task": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.DeviceSpec.to_string": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.device.canonical_name": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.device.DeviceSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.check_valid": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.python.framework.device.DeviceSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.device.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.device.merge_device": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.device.DeviceSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.merge_device._device_function": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "tensorflow.python.framework.device.DeviceSpec",
    "tensorflow.python.framework.device.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.device.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.dtypes": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "numpy.bool",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object",
    "numpy.uint16",
    "numpy.uint8",
    "tensorflow.core.framework.types_pb2.DT_BFLOAT16",
    "tensorflow.core.framework.types_pb2.DT_BFLOAT16_REF",
    "tensorflow.core.framework.types_pb2.DT_BOOL",
    "tensorflow.core.framework.types_pb2.DT_BOOL_REF",
    "tensorflow.core.framework.types_pb2.DT_COMPLEX128",
    "tensorflow.core.framework.types_pb2.DT_COMPLEX128_REF",
    "tensorflow.core.framework.types_pb2.DT_COMPLEX64",
    "tensorflow.core.framework.types_pb2.DT_COMPLEX64_REF",
    "tensorflow.core.framework.types_pb2.DT_DOUBLE",
    "tensorflow.core.framework.types_pb2.DT_DOUBLE_REF",
    "tensorflow.core.framework.types_pb2.DT_FLOAT",
    "tensorflow.core.framework.types_pb2.DT_FLOAT_REF",
    "tensorflow.core.framework.types_pb2.DT_HALF",
    "tensorflow.core.framework.types_pb2.DT_HALF_REF",
    "tensorflow.core.framework.types_pb2.DT_INT16",
    "tensorflow.core.framework.types_pb2.DT_INT16_REF",
    "tensorflow.core.framework.types_pb2.DT_INT32",
    "tensorflow.core.framework.types_pb2.DT_INT32_REF",
    "tensorflow.core.framework.types_pb2.DT_INT64",
    "tensorflow.core.framework.types_pb2.DT_INT64_REF",
    "tensorflow.core.framework.types_pb2.DT_INT8",
    "tensorflow.core.framework.types_pb2.DT_INT8_REF",
    "tensorflow.core.framework.types_pb2.DT_QINT16",
    "tensorflow.core.framework.types_pb2.DT_QINT16_REF",
    "tensorflow.core.framework.types_pb2.DT_QINT32",
    "tensorflow.core.framework.types_pb2.DT_QINT32_REF",
    "tensorflow.core.framework.types_pb2.DT_QINT8",
    "tensorflow.core.framework.types_pb2.DT_QINT8_REF",
    "tensorflow.core.framework.types_pb2.DT_QUINT16",
    "tensorflow.core.framework.types_pb2.DT_QUINT16_REF",
    "tensorflow.core.framework.types_pb2.DT_QUINT8",
    "tensorflow.core.framework.types_pb2.DT_QUINT8_REF",
    "tensorflow.core.framework.types_pb2.DT_STRING",
    "tensorflow.core.framework.types_pb2.DT_STRING_REF",
    "tensorflow.core.framework.types_pb2.DT_UINT16",
    "tensorflow.core.framework.types_pb2.DT_UINT16_REF",
    "tensorflow.core.framework.types_pb2.DT_UINT8",
    "tensorflow.core.framework.types_pb2.DT_UINT8_REF",
    "tensorflow.python.framework.dtypes.DType",
    "tensorflow.python.framework.dtypes._INTERN_TABLE",
    "tensorflow.python.framework.dtypes._STRING_TO_TF",
    "tensorflow.python.framework.dtypes._TYPE_TO_STRING",
    "tensorflow.python.framework.dtypes._np_qint16",
    "tensorflow.python.framework.dtypes._np_qint32",
    "tensorflow.python.framework.dtypes._np_qint8",
    "tensorflow.python.framework.dtypes._np_quint16",
    "tensorflow.python.framework.dtypes._np_quint8",
    "tensorflow.python.framework.dtypes.bfloat16",
    "tensorflow.python.framework.dtypes.bfloat16_ref",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.bool_ref",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex128_ref",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.complex64_ref",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float16_ref",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float32_ref",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.float64_ref",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.int16_ref",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int32_ref",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.int64_ref",
    "tensorflow.python.framework.dtypes.int8",
    "tensorflow.python.framework.dtypes.int8_ref",
    "tensorflow.python.framework.dtypes.qint16",
    "tensorflow.python.framework.dtypes.qint16_ref",
    "tensorflow.python.framework.dtypes.qint32",
    "tensorflow.python.framework.dtypes.qint32_ref",
    "tensorflow.python.framework.dtypes.qint8",
    "tensorflow.python.framework.dtypes.qint8_ref",
    "tensorflow.python.framework.dtypes.quint16",
    "tensorflow.python.framework.dtypes.quint16_ref",
    "tensorflow.python.framework.dtypes.quint8",
    "tensorflow.python.framework.dtypes.quint8_ref",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.dtypes.string_ref",
    "tensorflow.python.framework.dtypes.uint16",
    "tensorflow.python.framework.dtypes.uint16_ref",
    "tensorflow.python.framework.dtypes.uint8",
    "tensorflow.python.framework.dtypes.uint8_ref"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.framework.dtypes.DType": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.dtypes.DType.__eq__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "as_dtype"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.__hash__": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "tensorflow.core.framework.types_pb2.DT_INVALID",
    "tensorflow.core.framework.types_pb2.DataType.values"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.__ne__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.__repr__": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.__str__": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.as_datatype_enum": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.as_numpy_dtype": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.as_ref": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.base_dtype": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.is_compatible_with": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "as_dtype"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.is_complex": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.is_floating": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.is_integer": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.is_quantized": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.is_ref_dtype": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.is_unsigned": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TypeError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.max": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "numpy.finfo",
    "numpy.iinfo",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.min": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "numpy.finfo",
    "numpy.iinfo",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.name": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.real_dtype": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.DType.size": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.QUANTIZED_DTYPES": {
  "data": {
   "lineno": 495
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._INTERN_TABLE": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._NP_TO_TF": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._STRING_TO_TF": {
  "data": {
   "lineno": 404
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._TF_TO_NP": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._TYPE_TO_STRING": {
  "data": {
   "lineno": 364
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._np_qint16": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._np_qint32": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._np_qint8": {
  "data": {
   "lineno": 421
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._np_quint16": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes._np_quint8": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.dtypes.as_dtype": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "isinstance",
    "numpy.dtype",
    "numpy.string_",
    "numpy.unicode_",
    "tensorflow.python.framework.dtypes.DType",
    "tensorflow.python.framework.dtypes._INTERN_TABLE",
    "tensorflow.python.framework.dtypes._NP_TO_TF",
    "tensorflow.python.framework.dtypes._STRING_TO_TF",
    "tensorflow.python.framework.dtypes.string"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.dtypes.bfloat16": {
  "data": {
   "lineno": 295
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.bfloat16_ref": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.bool": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.bool_ref": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.complex128": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.complex128_ref": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.complex64": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.complex64_ref": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.dtypes.double": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.double_ref": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.float16": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.float16_ref": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.float32": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.float32_ref": {
  "data": {
   "lineno": 298
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.float64": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.float64_ref": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.half": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.half_ref": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int16": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int16_ref": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int32": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int32_ref": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int64": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int64_ref": {
  "data": {
   "lineno": 309
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int8": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.int8_ref": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.dtypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.dtypes.qint16": {
  "data": {
   "lineno": 292
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.qint16_ref": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.qint32": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.qint32_ref": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.qint8": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.qint8_ref": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.quint16": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.quint16_ref": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.quint8": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.quint8_ref": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.string": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.string_ref": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.types_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.dtypes.uint16": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.uint16_ref": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.uint8": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "tensorflow.python.framework.dtypes.uint8_ref": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "tensorflow.core.lib.core.error_codes_pb2.ABORTED",
    "tensorflow.core.lib.core.error_codes_pb2.ALREADY_EXISTS",
    "tensorflow.core.lib.core.error_codes_pb2.CANCELLED",
    "tensorflow.core.lib.core.error_codes_pb2.DATA_LOSS",
    "tensorflow.core.lib.core.error_codes_pb2.DEADLINE_EXCEEDED",
    "tensorflow.core.lib.core.error_codes_pb2.FAILED_PRECONDITION",
    "tensorflow.core.lib.core.error_codes_pb2.INTERNAL",
    "tensorflow.core.lib.core.error_codes_pb2.INVALID_ARGUMENT",
    "tensorflow.core.lib.core.error_codes_pb2.NOT_FOUND",
    "tensorflow.core.lib.core.error_codes_pb2.OK",
    "tensorflow.core.lib.core.error_codes_pb2.OUT_OF_RANGE",
    "tensorflow.core.lib.core.error_codes_pb2.PERMISSION_DENIED",
    "tensorflow.core.lib.core.error_codes_pb2.RESOURCE_EXHAUSTED",
    "tensorflow.core.lib.core.error_codes_pb2.UNAUTHENTICATED",
    "tensorflow.core.lib.core.error_codes_pb2.UNAVAILABLE",
    "tensorflow.core.lib.core.error_codes_pb2.UNIMPLEMENTED",
    "tensorflow.core.lib.core.error_codes_pb2.UNKNOWN",
    "tensorflow.python.framework.errors.ABORTED",
    "tensorflow.python.framework.errors.ALREADY_EXISTS",
    "tensorflow.python.framework.errors.AbortedError",
    "tensorflow.python.framework.errors.AlreadyExistsError",
    "tensorflow.python.framework.errors.CANCELLED",
    "tensorflow.python.framework.errors.CancelledError",
    "tensorflow.python.framework.errors.DATA_LOSS",
    "tensorflow.python.framework.errors.DEADLINE_EXCEEDED",
    "tensorflow.python.framework.errors.DataLossError",
    "tensorflow.python.framework.errors.DeadlineExceededError",
    "tensorflow.python.framework.errors.FAILED_PRECONDITION",
    "tensorflow.python.framework.errors.FailedPreconditionError",
    "tensorflow.python.framework.errors.INTERNAL",
    "tensorflow.python.framework.errors.INVALID_ARGUMENT",
    "tensorflow.python.framework.errors.InternalError",
    "tensorflow.python.framework.errors.InvalidArgumentError",
    "tensorflow.python.framework.errors.NOT_FOUND",
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.framework.errors.OUT_OF_RANGE",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.framework.errors.PERMISSION_DENIED",
    "tensorflow.python.framework.errors.PermissionDeniedError",
    "tensorflow.python.framework.errors.RESOURCE_EXHAUSTED",
    "tensorflow.python.framework.errors.ResourceExhaustedError",
    "tensorflow.python.framework.errors.UNAUTHENTICATED",
    "tensorflow.python.framework.errors.UNAVAILABLE",
    "tensorflow.python.framework.errors.UNIMPLEMENTED",
    "tensorflow.python.framework.errors.UNKNOWN",
    "tensorflow.python.framework.errors.UnauthenticatedError",
    "tensorflow.python.framework.errors.UnavailableError",
    "tensorflow.python.framework.errors.UnimplementedError",
    "tensorflow.python.framework.errors.UnknownError",
    "tensorflow.python.framework.errors._CODE_TO_EXCEPTION_CLASS"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.framework.errors.ABORTED": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.ALREADY_EXISTS": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.AbortedError": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.AbortedError.__init__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.ABORTED",
    "tensorflow.python.framework.errors.AbortedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.AlreadyExistsError": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.AlreadyExistsError.__init__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.ALREADY_EXISTS",
    "tensorflow.python.framework.errors.AlreadyExistsError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.CANCELLED": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.CancelledError": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.CancelledError.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.CANCELLED",
    "tensorflow.python.framework.errors.CancelledError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.DATA_LOSS": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.DEADLINE_EXCEEDED": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.DataLossError": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.DataLossError.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.DATA_LOSS",
    "tensorflow.python.framework.errors.DataLossError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.DeadlineExceededError": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.DeadlineExceededError.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.DEADLINE_EXCEEDED",
    "tensorflow.python.framework.errors.DeadlineExceededError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.FAILED_PRECONDITION": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.FailedPreconditionError": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.FailedPreconditionError.__init__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.FAILED_PRECONDITION",
    "tensorflow.python.framework.errors.FailedPreconditionError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.INTERNAL": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.INVALID_ARGUMENT": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.InternalError": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.InternalError.__init__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.INTERNAL",
    "tensorflow.python.framework.errors.InternalError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.InvalidArgumentError": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.InvalidArgumentError.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.INVALID_ARGUMENT",
    "tensorflow.python.framework.errors.InvalidArgumentError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.NOT_FOUND": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.NotFoundError": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.NotFoundError.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.NOT_FOUND",
    "tensorflow.python.framework.errors.NotFoundError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.OK": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.OUT_OF_RANGE": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.OpError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.OpError.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.OpError.__str__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.traceback",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.OpError.error_code": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.OpError.message": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.OpError.node_def": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.OpError.op": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.OutOfRangeError": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.OutOfRangeError.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.OUT_OF_RANGE",
    "tensorflow.python.framework.errors.OutOfRangeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.PERMISSION_DENIED": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.PermissionDeniedError": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.PermissionDeniedError.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.PERMISSION_DENIED",
    "tensorflow.python.framework.errors.PermissionDeniedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.RESOURCE_EXHAUSTED": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.ResourceExhaustedError": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.ResourceExhaustedError.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.RESOURCE_EXHAUSTED",
    "tensorflow.python.framework.errors.ResourceExhaustedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.UNAUTHENTICATED": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.UNAVAILABLE": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.UNIMPLEMENTED": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.UNKNOWN": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.UnauthenticatedError": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.UnauthenticatedError.__init__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.UNAUTHENTICATED",
    "tensorflow.python.framework.errors.UnauthenticatedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.UnavailableError": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.UnavailableError.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.UNAVAILABLE",
    "tensorflow.python.framework.errors.UnavailableError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.UnimplementedError": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.UnimplementedError.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.UNIMPLEMENTED",
    "tensorflow.python.framework.errors.UnimplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.UnknownError": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.errors.UnknownError.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.errors.UNKNOWN",
    "tensorflow.python.framework.errors.UnknownError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors._CODE_TO_EXCEPTION_CLASS": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors._EXCEPTION_CLASS_TO_CODE": {
  "data": {
   "lineno": 433
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors.__all__": {
  "data": {
   "lineno": 469
  },
  "type": "constant"
 },
 "tensorflow.python.framework.errors._make_specific_exception": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "KeyError",
    "exc_type",
    "tensorflow.python.framework.errors.UnknownError",
    "tensorflow.python.framework.errors.exception_type_from_error_code",
    "tensorflow.python.framework.errors.warnings"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.error_code_from_exception_type": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors._EXCEPTION_CLASS_TO_CODE"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.error_codes_pb2": {
  "data": {
   "shadows": "tensorflow.core.lib.core.error_codes_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.exception_type_from_error_code": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors._CODE_TO_EXCEPTION_CLASS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.raise_exception_on_not_ok_status": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors._make_specific_exception",
    "tensorflow.python.framework.errors.contextlib",
    "tensorflow.python.pywrap_tensorflow.TF_DeleteStatus",
    "tensorflow.python.pywrap_tensorflow.TF_GetCode",
    "tensorflow.python.pywrap_tensorflow.TF_Message",
    "tensorflow.python.pywrap_tensorflow.TF_NewStatus",
    "tensorflow.python.util.compat.as_text"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.errors.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "tensorflow.python.framework.errors.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.framework_lib.DeviceSpec": {
  "data": {
   "shadows": "tensorflow.python.framework.device.DeviceSpec"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.Dimension": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape.Dimension"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.Graph": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Graph"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.GraphKeys": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.GraphKeys"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.IndexedSlices": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.IndexedSlices"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.NoGradient": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.NoGradient"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.NotDifferentiable": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.NotDifferentiable"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.Operation": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Operation"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.Output": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Output"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.RegisterGradient": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.RegisterGradient"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.RegisterShape": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.RegisterShape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.SparseTensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.SparseTensor"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.SparseTensorValue": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.SparseTensorValue"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.Tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.Tensor"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.TensorShape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape.TensorShape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.add_to_collection": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.add_to_collection"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.container": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.container"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.control_dependencies": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.control_dependencies"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.convert_to_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.convert_to_tensor"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.convert_to_tensor_or_indexed_slices": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.device": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.device"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.get_collection": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.get_collection"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.get_collection_ref": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.get_collection_ref"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.get_default_graph": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.get_default_graph"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.get_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed.get_seed"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.import_graph_def": {
  "data": {
   "shadows": "tensorflow.python.framework.importer.import_graph_def"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.name_scope": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.name_scope"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.op_scope": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.op_scope"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.register_tensor_conversion_function": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.register_tensor_conversion_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.reset_default_graph": {
  "data": {
   "shadows": "tensorflow.python.framework.ops.reset_default_graph"
  },
  "type": "import"
 },
 "tensorflow.python.framework.framework_lib.set_random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed.set_random_seed"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.function.Declare": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.function.Declare.__call__": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "tensorflow.python.framework.function._call"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function.Declare.__init__": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "_to_argdef_list",
    "tensorflow.core.framework.op_def_pb2.OpDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function.Declare.__init__._to_argdef_list": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "tensorflow.core.framework.op_def_pb2.OpDef.ArgDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function.Defun": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.function.Defun.__call__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "tensorflow.python.framework.function._DefinedFunction"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function.Defun.__init__": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.function._DefinedFunction.__call__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "tensorflow.python.framework.function._call",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction.__hash__": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "range",
    "tensorflow.python.framework.function._get_func_name",
    "tensorflow.python.framework.function.inspect",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction._create_definition_if_needed": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "hash",
    "isinstance",
    "list",
    "tensorflow.python.framework.function._graph_to_function_def",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.array_ops.placeholder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction.add_to_graph": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction.definition": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction.grad_func_name": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction.name": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._DefinedFunction.python_grad_func": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._add_input_array": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "str",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
    "tensorflow.core.framework.function_pb2.FunctionDef.Node",
    "tensorflow.python.framework.function._make_argname_from_tensor_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._add_op_node": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "len",
    "range",
    "tensorflow.core.framework.function_pb2.FunctionDef.Node",
    "tensorflow.python.framework.function._add_input_array",
    "tensorflow.python.framework.function._add_output_array",
    "tensorflow.python.framework.function._add_output_list",
    "tensorflow.python.framework.function._get_node_def_attr",
    "tensorflow.python.framework.function._make_argname_from_tensor_name",
    "tensorflow.python.framework.op_def_registry.get_registered_ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._add_output_array": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "six.moves.xrange",
    "str",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
    "tensorflow.core.framework.function_pb2.FunctionDef.Node",
    "tensorflow.python.framework.function._make_argname_from_tensor_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._add_output_list": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len",
    "six.moves.xrange",
    "str",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.core.framework.function_pb2.FunctionDef.Node",
    "tensorflow.python.framework.function._make_argname_from_tensor_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._call": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "setattr",
    "tensorflow.python.framework.dtypes.DType",
    "tensorflow.python.framework.function._parse_kwargs_as_attrs",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.name_scope",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._get_func_name": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "tensorflow.python.framework.function.inspect",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._get_node_def_attr": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._graph_to_function_def": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "set",
    "tensorflow.core.framework.function_pb2.FunctionDef",
    "tensorflow.python.framework.function._add_op_node",
    "tensorflow.python.framework.function._tensor_to_argdef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._make_argname_from_tensor_name": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.python.framework.function.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._parse_kwargs_as_attrs": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "tensorflow.core.framework.attr_value_pb2.AttrValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function._tensor_to_argdef": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.core.framework.op_def_pb2.OpDef.ArgDef",
    "tensorflow.python.framework.function._make_argname_from_tensor_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.function.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.attr_value_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.function_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.function_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.framework.function.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.graph_util._VARIABLE_OPS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.python.framework.graph_util._is_variable_op": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.framework.graph_util._VARIABLE_OPS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util._node_name": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.attr_value_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.convert_variables_to_constants": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "dict",
    "len",
    "print",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.core.framework.node_def_pb2.NodeDef",
    "tensorflow.python.framework.graph_util.extract_sub_graph",
    "tensorflow.python.framework.tensor_util.make_tensor_proto",
    "tensorflow.python.platform.tf_logging.info",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.extract_sub_graph": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "set",
    "sorted",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.python.framework.graph_util._node_name",
    "tensorflow.python.framework.graph_util.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.must_run_on_cpu": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.core.framework.node_def_pb2.NodeDef",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.graph_util._is_variable_op",
    "tensorflow.python.framework.ops.Operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util.node_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.node_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.pydev": {
  "data": {
   "shadows": "tensorflow.python.framework.device"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.framework.graph_util.remove_training_nodes": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.core.framework.node_def_pb2.NodeDef",
    "tensorflow.python.framework.graph_util.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util.set_cpu0": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.framework.device.DeviceSpec.from_string"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "tensorflow.python.framework.graph_util.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.importer._ArgToTypesNoRef": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.core.framework.types_pb2.DT_INVALID",
    "tensorflow.python.framework.importer._GetNodeAttr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._ArgsToTypes": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.python.framework.importer._SingleArgToTypes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._CanonicalInputName": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.framework.importer._IsControlInput",
    "tensorflow.python.framework.importer._ParseTensorName",
    "tensorflow.python.util.compat.as_str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._FindAttrInOpDef": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._GetNodeAttr": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._InputTypes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.python.framework.importer._ArgsToTypes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._InvalidNodeMessage": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._IsControlInput": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._MaybeDevice": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.python.framework.importer.contextlib",
    "tensorflow.python.framework.ops.device"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._OutputTypes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.python.framework.importer._ArgsToTypes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._ParseTensorName": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer._SingleArgToTypes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.importer._ArgToTypesNoRef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.attr_value_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.import_graph_def": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "enumerate",
    "frozenset",
    "isinstance",
    "list",
    "set",
    "tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.importer._CanonicalInputName",
    "tensorflow.python.framework.importer._FindAttrInOpDef",
    "tensorflow.python.framework.importer._InputTypes",
    "tensorflow.python.framework.importer._InvalidNodeMessage",
    "tensorflow.python.framework.importer._IsControlInput",
    "tensorflow.python.framework.importer._MaybeDevice",
    "tensorflow.python.framework.importer._OutputTypes",
    "tensorflow.python.framework.importer._ParseTensorName",
    "tensorflow.python.framework.op_def_registry.get_registered_ops",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.ops.set_shapes_for_outputs",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.as_str",
    "tensorflow.python.util.compat.bytes_or_text_types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.importer.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.importer.types_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.load_library.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.error_codes_pb2": {
  "data": {
   "shadows": "tensorflow.core.lib.core.error_codes_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.load_file_system_library": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors._make_specific_exception",
    "tensorflow.python.pywrap_tensorflow.TF_DeleteStatus",
    "tensorflow.python.pywrap_tensorflow.TF_GetCode",
    "tensorflow.python.pywrap_tensorflow.TF_LoadLibrary",
    "tensorflow.python.pywrap_tensorflow.TF_Message",
    "tensorflow.python.pywrap_tensorflow.TF_NewStatus",
    "tensorflow.python.util.compat.as_text"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.load_library.load_op_library": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "exec",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.errors._make_specific_exception",
    "tensorflow.python.framework.load_library.hashlib",
    "tensorflow.python.framework.load_library.imp",
    "tensorflow.python.framework.load_library.sys",
    "tensorflow.python.pywrap_tensorflow.GetPythonWrappers",
    "tensorflow.python.pywrap_tensorflow.TF_DeleteStatus",
    "tensorflow.python.pywrap_tensorflow.TF_GetCode",
    "tensorflow.python.pywrap_tensorflow.TF_GetOpList",
    "tensorflow.python.pywrap_tensorflow.TF_LoadLibrary",
    "tensorflow.python.pywrap_tensorflow.TF_Message",
    "tensorflow.python.pywrap_tensorflow.TF_NewStatus",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.as_text"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.load_library.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.py_tf": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.framework.load_library.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.op_def_library.OpDefLibrary": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.op_def_library.OpDefLibrary.__init__": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library.OpDefLibrary.add_op": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.core.framework.op_def_pb2.OpDef",
    "tensorflow.python.framework.op_def_library._OpInfo",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library.OpDefLibrary.add_op_list": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library.OpDefLibrary.apply_op": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "AssertionError",
    "NotImplementedError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "any",
    "isinstance",
    "len",
    "map",
    "set",
    "sorted",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.core.framework.types_pb2.DT_INVALID",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.op_def_library._Attr",
    "tensorflow.python.framework.op_def_library._AttrValue",
    "tensorflow.python.framework.op_def_library._Flatten",
    "tensorflow.python.framework.op_def_library._IsListParameter",
    "tensorflow.python.framework.op_def_library._IsListValue",
    "tensorflow.python.framework.op_def_library._MakeBool",
    "tensorflow.python.framework.op_def_library._MakeFloat",
    "tensorflow.python.framework.op_def_library._MakeInt",
    "tensorflow.python.framework.op_def_library._MakeShape",
    "tensorflow.python.framework.op_def_library._MakeStr",
    "tensorflow.python.framework.op_def_library._MakeTensor",
    "tensorflow.python.framework.op_def_library._MakeType",
    "tensorflow.python.framework.op_def_library._MaybeColocateWith",
    "tensorflow.python.framework.op_def_library._Restructure",
    "tensorflow.python.framework.op_def_library._SatisfiesTypeConstraint",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._get_graph_from_inputs",
    "tensorflow.python.framework.ops.convert_n_to_tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.util.compat.as_text",
    "tensorflow.python.util.compat.bytes_or_text_types",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._Attr": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._AttrValue": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._Flatten": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.python.framework.op_def_library._IsListValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._IsListParameter": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._IsListValue": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MakeBool": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MakeFloat": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "isinstance",
    "repr",
    "tensorflow.python.util.compat.real_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MakeInt": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "repr",
    "tensorflow.python.framework.op_def_library.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MakeShape": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MakeStr": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "repr",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.bytes_or_text_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MakeTensor": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "repr",
    "tensorflow.core.framework.tensor_pb2.TensorProto"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MakeType": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "TypeError",
    "repr",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.op_def_library._SatisfiesTypeConstraint"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._MaybeColocateWith": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "tensorflow.python.framework.op_def_library.contextlib",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._NumTypeFields": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.core.framework.types_pb2.DT_INVALID"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._OpInfo": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.op_def_library._OpInfo.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "tensorflow.python.framework.op_def_library._Attr",
    "tensorflow.python.framework.op_def_library._NumTypeFields"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._Restructure": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library._SatisfiesTypeConstraint": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.as_dtype"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_library.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.attr_value_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.tensor_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.tensor_shape_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_library.types_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_registry": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.op_def_registry._registered_ops": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.python.framework.op_def_registry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_registry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_registry.get_registered_ops": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.python.framework.op_def_registry._registered_ops"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.op_def_registry.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_registry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.op_def_registry.register_op_list": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_registry._registered_ops",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._DefaultGraphStack",
    "tensorflow.python.framework.ops._DefaultStack",
    "tensorflow.python.framework.ops._TensorTensorConversionFunction",
    "tensorflow.python.framework.ops._operation_conversion_error",
    "tensorflow.python.framework.ops.collections",
    "tensorflow.python.framework.ops.re",
    "tensorflow.python.framework.ops.register_dense_tensor_like_type",
    "tensorflow.python.framework.ops.register_tensor_conversion_function",
    "tensorflow.python.framework.registry.Registry",
    "tuple"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.framework.ops.Graph": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.Graph._ControlDependenciesController": {
  "data": {
   "lineno": 3142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.Graph._ControlDependenciesController.__enter__": {
  "data": {
   "lineno": 3179
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._ControlDependenciesController.__exit__": {
  "data": {
   "lineno": 3189
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._ControlDependenciesController.__init__": {
  "data": {
   "lineno": 3145,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._ControlDependenciesController.add_op": {
  "data": {
   "lineno": 3200
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._ControlDependenciesController.control_inputs": {
  "data": {
   "lineno": 3196,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._ControlDependenciesController.op_in_group": {
  "data": {
   "lineno": 3203
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.__init__": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "dict",
    "set",
    "tensorflow.core.framework.versions_pb2.VersionDef",
    "tensorflow.python.framework.op_def_registry.get_registered_ops",
    "tensorflow.python.framework.ops.collections",
    "tensorflow.python.framework.ops.threading",
    "tensorflow.python.framework.versions.GRAPH_DEF_VERSION",
    "tensorflow.python.framework.versions.GRAPH_DEF_VERSION_MIN_CONSUMER"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._add_function": {
  "data": {
   "lineno": 2273,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._add_op": {
  "data": {
   "lineno": 2082,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "max",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._apply_device_functions": {
  "data": {
   "lineno": 3077,
   "symbols_in_volume": [
    "device_function",
    "reversed"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._as_graph_def": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "ValueError",
    "sorted",
    "tensorflow.core.framework.function_pb2.GradientDef",
    "tensorflow.core.framework.graph_pb2.GraphDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._as_graph_element_locked": {
  "data": {
   "lineno": 2460,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "repr",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._as_graph_element",
    "tensorflow.python.util.compat.as_str",
    "tensorflow.python.util.compat.bytes_or_text_types",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._attr_scope": {
  "data": {
   "lineno": 3357,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "dict",
    "isinstance",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.python.framework.ops.contextlib",
    "tensorflow.python.framework.ops.six",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._check_not_finalized": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._control_dependencies_for_inputs": {
  "data": {
   "lineno": 3220,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._current_control_dependencies": {
  "data": {
   "lineno": 3213,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._get_control_flow_context": {
  "data": {
   "lineno": 2157
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._get_function": {
  "data": {
   "lineno": 2263
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._is_function": {
  "data": {
   "lineno": 2253
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._kernel_label_map": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "dict",
    "isinstance",
    "tensorflow.python.framework.ops.contextlib",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._last_id": {
  "data": {
   "lineno": 2616,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._next_id": {
  "data": {
   "lineno": 2609
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._original_op": {
  "data": {
   "lineno": 2760,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._pop_control_dependencies_controller": {
  "data": {
   "lineno": 3209
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._push_control_dependencies_controller": {
  "data": {
   "lineno": 3206
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._record_op_seen_by_control_dependencies": {
  "data": {
   "lineno": 3255
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph._set_control_flow_context": {
  "data": {
   "lineno": 2165
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.add_to_collection": {
  "data": {
   "lineno": 2655
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.add_to_collections": {
  "data": {
   "lineno": 2673,
   "symbols_in_volume": [
    "isinstance",
    "set",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.as_default": {
  "data": {
   "lineno": 2620
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.as_graph_def": {
  "data": {
   "lineno": 2227
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.as_graph_element": {
  "data": {
   "lineno": 2425
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.colocate_with": {
  "data": {
   "lineno": 2941,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.contextlib",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.container": {
  "data": {
   "lineno": 3089,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.control_dependencies": {
  "data": {
   "lineno": 3264,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.create_op": {
  "data": {
   "lineno": 2298,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "enumerate",
    "isinstance",
    "set",
    "sorted",
    "tensorflow.core.framework.attr_value_pb2.AttrValue",
    "tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._NodeDef",
    "tensorflow.python.framework.ops.set_shapes_for_outputs",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.device": {
  "data": {
   "lineno": 3007,
   "symbols_in_volume": [
    "callable",
    "tensorflow.python.framework.device.merge_device",
    "tensorflow.python.framework.ops.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.finalize": {
  "data": {
   "lineno": 2147
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.finalized": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.get_all_collection_keys": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.get_collection": {
  "data": {
   "lineno": 2719,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "tensorflow.python.framework.ops.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.get_collection_ref": {
  "data": {
   "lineno": 2694
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.get_operation_by_name": {
  "data": {
   "lineno": 2567,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.six",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.get_operations": {
  "data": {
   "lineno": 2549,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.get_tensor_by_name": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.six",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.gradient_override_map": {
  "data": {
   "lineno": 3482,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "dict",
    "isinstance",
    "tensorflow.python.framework.ops.contextlib",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.graph_def_versions": {
  "data": {
   "lineno": 2121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.is_feedable": {
  "data": {
   "lineno": 3548
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.is_fetchable": {
  "data": {
   "lineno": 3556,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.name_scope": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops._VALID_OP_NAME_REGEX",
    "tensorflow.python.framework.ops._VALID_SCOPE_NAME_REGEX",
    "tensorflow.python.framework.ops.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.prevent_feeding": {
  "data": {
   "lineno": 3544
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.prevent_fetching": {
  "data": {
   "lineno": 3552
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.seed": {
  "data": {
   "lineno": 2138
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.unique_name": {
  "data": {
   "lineno": 2896
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Graph.version": {
  "data": {
   "lineno": 2108,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.GraphKeys": {
  "data": {
   "lineno": 3935,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.IndexedSlices": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.IndexedSlices.__init__": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "_get_graph_from_inputs"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.__neg__": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.IndexedSlices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.__str__": {
  "data": {
   "lineno": 934
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.dense_shape": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.device": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.dtype": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.graph": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.indices": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.name": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.op": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlices.values": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.IndexedSlicesValue": {
  "data": {
   "lineno": 944
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops.NoGradient": {
  "data": {
   "lineno": 1703
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops.NotDifferentiable": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops._gradient_registry",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.OpStats": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.OpStats.__iadd__": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.OpStats.__init__": {
  "data": {
   "lineno": 1810
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.OpStats.statistic_type": {
  "data": {
   "lineno": 1819
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.OpStats.value": {
  "data": {
   "lineno": 1827
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.Operation._InputList": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.Operation._InputList.__bool__": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._InputList.__getitem__": {
  "data": {
   "lineno": 1505
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._InputList.__init__": {
  "data": {
   "lineno": 1490
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._InputList.__iter__": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._InputList.__len__": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.__init__": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "enumerate",
    "isinstance",
    "list",
    "tensorflow.core.framework.node_def_pb2.NodeDef",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._VALID_OP_NAME_REGEX",
    "tensorflow.python.framework.ops._extract_stack",
    "tensorflow.python.framework.ops.copy",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.__str__": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._add_control_input": {
  "data": {
   "lineno": 1458
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._add_control_inputs": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "TypeError",
    "_assert_same_graph",
    "isinstance",
    "tensorflow.python.framework.ops.Operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._add_input": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "TypeError",
    "_assert_same_graph",
    "isinstance",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._get_control_flow_context": {
  "data": {
   "lineno": 1332
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._id": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._input_dtypes": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._recompute_node_def": {
  "data": {
   "lineno": 1471
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._set_control_flow_context": {
  "data": {
   "lineno": 1340
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._set_device": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "tensorflow.python.framework.device",
    "tensorflow.python.framework.ops._device_string"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation._update_input": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "TypeError",
    "_assert_same_graph",
    "isinstance",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.colocation_groups": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.control_inputs": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.device": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.get_attr": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.graph": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.inputs": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.framework.ops.Operation"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.name": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.node_def": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.op_def": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.outputs": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.run": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "_run_using_default_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.traceback": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.framework.ops._convert_stack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.type": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Operation.values": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Output": {
  "data": {
   "lineno": 563
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops.RegisterGradient": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.RegisterGradient.__call__": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._gradient_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.RegisterGradient.__init__": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.RegisterShape": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.RegisterShape.__call__": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "KeyError",
    "tensorflow.python.framework.ops._default_shape_function_registry",
    "tensorflow.python.framework.ops._shape_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.RegisterShape.__init__": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.RegisterStatistics": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.RegisterStatistics.__call__": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._stats_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.RegisterStatistics.__init__": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.SparseTensor.__init__": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "name_scope",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.__str__": {
  "data": {
   "lineno": 1094
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor._override_operator": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops._override_helper"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.dtype": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.eval": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "SparseTensorValue",
    "_eval_using_default_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.from_value": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "classmethod",
    "tensorflow.python.framework.ops.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.graph": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.indices": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.op": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.shape": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensor.values": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.SparseTensorValue": {
  "data": {
   "lineno": 1128
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops.Tensor": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops.Tensor.__bool__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.__eq__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.__hash__": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.__iter__": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.__nonzero__": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.__repr__": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.__str__": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor._add_consumer": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor._as_node_def_input": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor._override_operator": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._override_helper"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor._shape_as_list": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.consumers": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.device": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.dtype": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.eval": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "_eval_using_default_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.get_shape": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.graph": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.name": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.op": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.set_shape": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.Tensor.value_index": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultGraphStack": {
  "data": {
   "lineno": 3799,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._DefaultStack"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops._DefaultGraphStack._GetGlobalDefaultGraph": {
  "data": {
   "lineno": 3813,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultGraphStack.__init__": {
  "data": {
   "lineno": 3802,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops._DefaultGraphStack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultGraphStack.get_default": {
  "data": {
   "lineno": 3806,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops._DefaultGraphStack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultGraphStack.reset": {
  "data": {
   "lineno": 3822,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops._DefaultGraphStack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultStack": {
  "data": {
   "lineno": 3618,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.threading"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.ops._DefaultStack.__init__": {
  "data": {
   "lineno": 3621,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops._DefaultStack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultStack.enforce_nesting": {
  "data": {
   "lineno": 3636
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultStack.get_controller": {
  "data": {
   "lineno": 3640,
   "symbols_in_volume": [
    "AssertionError",
    "tensorflow.python.framework.ops.contextlib",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultStack.get_default": {
  "data": {
   "lineno": 3626,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._DefaultStack.reset": {
  "data": {
   "lineno": 3629
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._NodeDef": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "callable",
    "tensorflow.core.framework.node_def_pb2.NodeDef",
    "tensorflow.python.framework.device",
    "tensorflow.python.framework.ops._device_string",
    "tensorflow.python.framework.ops.six",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._TENSOR_LIKE_TYPES": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._TensorTensorConversionFunction": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._VALID_OP_NAME_REGEX": {
  "data": {
   "lineno": 1170
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._VALID_SCOPE_NAME_REGEX": {
  "data": {
   "lineno": 1171
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._as_graph_element": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "callable",
    "conv_fn",
    "getattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._assert_same_graph": {
  "data": {
   "lineno": 3859,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._convert_stack": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.linecache"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._default_graph_stack": {
  "data": {
   "lineno": 3826
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._default_session_stack": {
  "data": {
   "lineno": 3656
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._default_shape_function_registry": {
  "data": {
   "lineno": 1717
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._device_string": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.device.DeviceSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._eval_using_default_session": {
  "data": {
   "lineno": 3724,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.get_default_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._extract_stack": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "tensorflow.python.framework.ops.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._get_graph_from_inputs": {
  "data": {
   "lineno": 3874,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._as_graph_element",
    "tensorflow.python.framework.ops._assert_same_graph",
    "tensorflow.python.framework.ops.get_default_graph",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._gradient_registry": {
  "data": {
   "lineno": 1622
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._no_shape_function": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._operation_conversion_error": {
  "data": {
   "lineno": 4217,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._override_helper": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "object.__lt__",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._proto_function_registry": {
  "data": {
   "lineno": 4164
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._run_using_default_session": {
  "data": {
   "lineno": 3764,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.get_default_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops._shape_registry": {
  "data": {
   "lineno": 1716
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._stats_registry": {
  "data": {
   "lineno": 1841
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops._tensor_conversion_func_registry": {
  "data": {
   "lineno": 575
  },
  "type": "constant"
 },
 "tensorflow.python.framework.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.add_to_collection": {
  "data": {
   "lineno": 4027,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.add_to_collections": {
  "data": {
   "lineno": 4041,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.attr_value_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.attr_value_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.colocate_with": {
  "data": {
   "lineno": 3595,
   "symbols_in_volume": [
    "get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.container": {
  "data": {
   "lineno": 3582,
   "symbols_in_volume": [
    "get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.control_dependencies": {
  "data": {
   "lineno": 3599,
   "symbols_in_volume": [
    "get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.convert_n_to_tensor": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "tensorflow.python.framework.ops.collections",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "tensorflow.python.framework.ops.collections",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.convert_to_tensor": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "NotImplemented",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "conversion_func",
    "isinstance",
    "sorted",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops._tensor_conversion_func_registry",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.default_session": {
  "data": {
   "lineno": 3659,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._default_session_stack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.device": {
  "data": {
   "lineno": 3564,
   "symbols_in_volume": [
    "get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.function_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.function_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.get_all_collection_keys": {
  "data": {
   "lineno": 4098,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_collection": {
  "data": {
   "lineno": 4074,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_collection_proto_type": {
  "data": {
   "lineno": 4193,
   "symbols_in_volume": [
    "LookupError",
    "tensorflow.python.framework.ops._proto_function_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_collection_ref": {
  "data": {
   "lineno": 4055,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_default_graph": {
  "data": {
   "lineno": 3841,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._default_graph_stack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_default_session": {
  "data": {
   "lineno": 3707,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._default_session_stack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_from_proto_function": {
  "data": {
   "lineno": 4209,
   "symbols_in_volume": [
    "LookupError",
    "tensorflow.python.framework.ops._proto_function_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_gradient_function": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops._gradient_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_stats_for_node_def": {
  "data": {
   "lineno": 1909,
   "symbols_in_volume": [
    "LookupError",
    "stats_func",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops._stats_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.get_to_proto_function": {
  "data": {
   "lineno": 4201,
   "symbols_in_volume": [
    "LookupError",
    "tensorflow.python.framework.ops._proto_function_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.is_dense_tensor_like": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops._TENSOR_LIKE_TYPES"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.name_scope": {
  "data": {
   "lineno": 4104,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops._get_graph_from_inputs",
    "tensorflow.python.framework.ops.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.node_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.node_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.op_scope": {
  "data": {
   "lineno": 4155,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.contextlib",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.pydev": {
  "data": {
   "shadows": "tensorflow.python.framework.device"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.register_dense_tensor_like_type": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "isinstance",
    "list",
    "property",
    "tensorflow.python.framework.ops._TENSOR_LIKE_TYPES",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.register_proto_function": {
  "data": {
   "lineno": 4167,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "tensorflow.python.framework.ops._proto_function_registry"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.register_tensor_conversion_function": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "all",
    "callable",
    "conversion_func",
    "isinstance",
    "tensorflow.python.framework.ops._tensor_conversion_func_registry",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.registry": {
  "data": {
   "shadows": "tensorflow.python.framework.registry"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.reset_default_graph": {
  "data": {
   "lineno": 3829,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._default_graph_stack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.set_shapes_for_outputs": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "LookupError",
    "RuntimeError",
    "len",
    "shape_func",
    "tensorflow.python.framework.ops._default_shape_function_registry",
    "tensorflow.python.framework.ops._shape_registry",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.ops.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.versions": {
  "data": {
   "shadows": "tensorflow.python.framework.versions"
  },
  "type": "import"
 },
 "tensorflow.python.framework.ops.versions_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.versions_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.random_seed": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.random_seed.DEFAULT_GRAPH_SEED": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.python.framework.random_seed._MAXINT32": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.python.framework.random_seed._truncate_seed": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed._MAXINT32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.random_seed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.random_seed.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.random_seed.get_seed": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.random_seed.DEFAULT_GRAPH_SEED",
    "tensorflow.python.framework.random_seed._truncate_seed"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.random_seed.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.random_seed.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.random_seed.set_random_seed": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.registry": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.registry.Registry": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.registry.Registry.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.registry.Registry.lookup": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "LookupError",
    "tensorflow.python.framework.registry._TYPE_TAG",
    "tensorflow.python.util.compat.as_str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.registry.Registry.register": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "KeyError",
    "tensorflow.python.framework.registry._LOCATION_TAG",
    "tensorflow.python.framework.registry._TYPE_TAG",
    "tensorflow.python.framework.registry.traceback",
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.registry._LOCATION_TAG": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.python.framework.registry._TYPE_TAG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.python.framework.registry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.registry.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.registry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.registry.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.framework.registry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.registry.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_shape": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.tensor_shape.Dimension": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__add__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "as_dimension",
    "tensorflow.python.framework.tensor_shape.Dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__div__": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__eq__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplemented",
    "ValueError",
    "as_dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__floordiv__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "as_dimension",
    "tensorflow.python.framework.tensor_shape.Dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__ge__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "as_dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__gt__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "as_dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__index__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "tensorflow.python.util.compat.bytes_or_text_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__int__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__le__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "as_dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__lt__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "as_dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__mod__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "as_dimension",
    "tensorflow.python.framework.tensor_shape.Dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__mul__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "as_dimension",
    "tensorflow.python.framework.tensor_shape.Dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__ne__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplemented",
    "ValueError",
    "as_dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__repr__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__str__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.__sub__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "as_dimension",
    "tensorflow.python.framework.tensor_shape.Dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.assert_is_compatible_with": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.is_compatible_with": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "as_dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.merge_with": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "as_dimension",
    "tensorflow.python.framework.tensor_shape.Dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.Dimension.value": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__bool__": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__eq__": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "as_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__getitem__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "slice",
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__init__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "iter",
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.as_dimension",
    "tensorflow.python.util.compat.bytes_or_text_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__iter__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "iter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__len__": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__ne__": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "ValueError",
    "as_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__repr__": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.__str__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.as_list": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.as_proto": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.assert_has_rank": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.assert_is_compatible_with": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.assert_is_fully_defined": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.assert_same_rank": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ValueError",
    "as_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.concatenate": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "as_shape",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.dims": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.is_compatible_with": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "as_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.is_fully_defined": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.merge_with": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "as_shape",
    "enumerate",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.ndims": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.num_elements": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.with_rank": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ValueError",
    "unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.with_rank_at_least": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.TensorShape.with_rank_at_most": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_shape.as_dimension": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.tensor_shape.Dimension"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.as_shape": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_shape.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_shape.matrix": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_shape.scalar": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.tensor_shape_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_shape.unknown_shape": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_shape.vector": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "frozenset",
    "numpy.bool",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object",
    "numpy.uint16",
    "numpy.uint8",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.int8",
    "tensorflow.python.framework.dtypes.qint16",
    "tensorflow.python.framework.dtypes.qint16.as_numpy_dtype",
    "tensorflow.python.framework.dtypes.qint32",
    "tensorflow.python.framework.dtypes.qint32.as_numpy_dtype",
    "tensorflow.python.framework.dtypes.qint8",
    "tensorflow.python.framework.dtypes.qint8.as_numpy_dtype",
    "tensorflow.python.framework.dtypes.quint16",
    "tensorflow.python.framework.dtypes.quint16.as_numpy_dtype",
    "tensorflow.python.framework.dtypes.quint8",
    "tensorflow.python.framework.dtypes.quint8.as_numpy_dtype",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.dtypes.uint16",
    "tensorflow.python.framework.dtypes.uint8",
    "tensorflow.python.framework.fast_tensor_util.AppendBoolArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendComplex128ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendComplex64ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendFloat64ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendInt16ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendInt8ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendObjectArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendUInt16ArrayToTensorProto",
    "tensorflow.python.framework.fast_tensor_util.AppendUInt8ArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendBoolArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendComplex128ArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendComplex64ArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendFloat16ArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendFloat32ArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendFloat64ArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendInt64ArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendIntArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendObjectArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.SlowAppendQIntArrayToTensorProto",
    "tensorflow.python.framework.tensor_util._FAST_TENSOR_UTIL_AVAILABLE",
    "tensorflow.python.framework.tensor_util._FilterBool",
    "tensorflow.python.framework.tensor_util._FilterComplex",
    "tensorflow.python.framework.tensor_util._FilterFloat",
    "tensorflow.python.framework.tensor_util._FilterInt",
    "tensorflow.python.framework.tensor_util._FilterStr"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.framework.tensor_util.ExtractBitsFromFloat16": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.asscalar",
    "numpy.float16",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.GetFromNumpyDTypeDict": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_util.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.GetNumpyAppendFn": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.string_",
    "numpy.unicode_",
    "tensorflow.python.framework.fast_tensor_util.AppendObjectArrayToTensorProto",
    "tensorflow.python.framework.tensor_util.GetFromNumpyDTypeDict",
    "tensorflow.python.framework.tensor_util.SlowAppendObjectArrayToTensorProto",
    "tensorflow.python.framework.tensor_util._FAST_TENSOR_UTIL_AVAILABLE",
    "tensorflow.python.framework.tensor_util._NP_TO_APPEND_FN"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.MakeNdarray": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "iter",
    "len",
    "numpy.array",
    "numpy.float16",
    "numpy.fromiter",
    "numpy.fromstring",
    "numpy.prod",
    "numpy.repeat",
    "numpy.uint16",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.bfloat16",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.int8",
    "tensorflow.python.framework.dtypes.qint16",
    "tensorflow.python.framework.dtypes.qint32",
    "tensorflow.python.framework.dtypes.qint8",
    "tensorflow.python.framework.dtypes.quint16",
    "tensorflow.python.framework.dtypes.quint8",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.dtypes.uint16",
    "tensorflow.python.framework.dtypes.uint8",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.ShapeEquals": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "list",
    "tensorflow.core.framework.tensor_pb2.TensorProto",
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendBoolArrayToTensorProto": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendComplex128ArrayToTensorProto": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendComplex64ArrayToTensorProto": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendFloat16ArrayToTensorProto": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_util.ExtractBitsFromFloat16"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendFloat32ArrayToTensorProto": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendFloat64ArrayToTensorProto": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendInt64ArrayToTensorProto": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendIntArrayToTensorProto": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendObjectArrayToTensorProto": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.SlowAppendQIntArrayToTensorProto": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.asscalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.TensorShapeProtoToList": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._AssertCompatible": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "TypeError",
    "fn",
    "repr",
    "tensorflow.python.framework.tensor_util._FilterNotTensor",
    "tensorflow.python.framework.tensor_util._TF_TO_IS_OK",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._ConstantValue": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "TypeError",
    "constant_value",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.int32",
    "numpy.prod",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_util.MakeNdarray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FAST_TENSOR_UTIL_AVAILABLE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.python.framework.tensor_util._FilterBool": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "list",
    "tensorflow.python.framework.tensor_util._FirstNotNone",
    "tensorflow.python.framework.tensor_util._NotNone",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FilterComplex": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.tensor_util._FirstNotNone",
    "tensorflow.python.framework.tensor_util._NotNone",
    "tensorflow.python.util.compat.complex_types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FilterFloat": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.tensor_util._FirstNotNone",
    "tensorflow.python.framework.tensor_util._NotNone",
    "tensorflow.python.util.compat.real_types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FilterInt": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.tensor_util._FirstNotNone",
    "tensorflow.python.framework.tensor_util._NotNone",
    "tensorflow.python.util.compat.integral_types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FilterNotTensor": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "str",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_util._FirstNotNone",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FilterStr": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.tensor_util._FirstNotNone",
    "tensorflow.python.framework.tensor_util._NotNone",
    "tensorflow.python.util.compat.bytes_or_text_types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FirstNotNone": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_util._Message"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._FlattenToStrings": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._GetDenseDimensions": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._Message": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.tensor_util._Message.__init__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._Message.__repr__": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._NP_TO_APPEND_FN": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "tensorflow.python.framework.tensor_util._NotNone": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_util._Message"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util._TENSOR_CONTENT_TYPES": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "tensorflow.python.framework.tensor_util._TF_TO_IS_OK": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "tensorflow.python.framework.tensor_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.constant_value": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_util._ConstantValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.constant_value_as_shape": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.scalar",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.framework.tensor_util.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.fast_tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.fast_tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.make_tensor_proto": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "append_fn",
    "hasattr",
    "int",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.array_equal",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.generic",
    "numpy.int32",
    "numpy.int64",
    "numpy.ndarray",
    "numpy.prod",
    "tensorflow.core.framework.tensor_pb2.TensorProto",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.qint16",
    "tensorflow.python.framework.dtypes.qint32",
    "tensorflow.python.framework.dtypes.qint8",
    "tensorflow.python.framework.dtypes.quint16",
    "tensorflow.python.framework.dtypes.quint8",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.framework.tensor_util.GetNumpyAppendFn",
    "tensorflow.python.framework.tensor_util._AssertCompatible",
    "tensorflow.python.framework.tensor_util._FlattenToStrings",
    "tensorflow.python.framework.tensor_util._GetDenseDimensions",
    "tensorflow.python.framework.tensor_util._TENSOR_CONTENT_TYPES",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.tensor_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.tensor_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.framework.tensor_util.tensor_shape_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.framework.test_util.CudaSupportsHalfMatMulAndConv": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow.CudaSupportsHalfMatMulAndConv"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.IsGoogleCudaEnabled": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow.IsGoogleCudaEnabled"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.six",
    "tensorflow.python.platform.googletest.TestCase",
    "tensorflow.python.platform.googletest.TestCase.assertCountEqual",
    "tensorflow.python.platform.googletest.TestCase.assertRaisesRegex"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._AssertProtoEquals": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.python.util.protobuf.compare.ProtoEq",
    "tensorflow.python.util.protobuf.compare.assertProtoEqual"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._CheckedThread": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._CheckedThread.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._CheckedThread._protected_run": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._CheckedThread.is_alive": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._CheckedThread.join": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._CheckedThread.start": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._ClearCachedSession": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._GetNdArray": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase._NDArrayNear": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.allclose",
    "numpy.isnan",
    "numpy.logical_or",
    "numpy.testing.assert_allclose",
    "numpy.where",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllCloseAccordingToType": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "max",
    "numpy.float16"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.float32",
    "numpy.float64",
    "numpy.isnan",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "print"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertArrayNear": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "float",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertDeviceEqual": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "tensorflow.python.framework.device.canonical_name"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNDArrayNear": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNear": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertProtoEquals": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertProtoEqualsVersion": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tensorflow.python.framework.versions.GRAPH_DEF_VERSION",
    "tensorflow.python.framework.versions.GRAPH_DEF_VERSION_MIN_CONSUMER"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesOpError": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "callable",
    "isinstance",
    "predicate",
    "str",
    "tensorflow.python.framework.test_util.contextlib",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch.predicate": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "tensorflow.python.framework.errors.OpError",
    "tensorflow.python.framework.test_util.re",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertShapeEqual": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.generic",
    "numpy.ndarray",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.assertStartsWith": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.checkedThread": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.TensorFlowTestCase"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.GetTempDir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.setUp": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.random.seed",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tensorflow.python.framework.random_seed.DEFAULT_GRAPH_SEED",
    "tensorflow.python.framework.test_util.random"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.tearDown": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.test_session": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "prepare_config",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.test_util.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.TensorFlowTestCase.test_session.prepare_config": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.config_pb2.ConfigProto"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.assert_equal_graph_def": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "isinstance",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.python.pywrap_tensorflow.EqualGraphDefWrapper",
    "tensorflow.python.util.compat.as_str",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.assert_ops_in_graph": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.framework.test_util.compare": {
  "data": {
   "shadows": "tensorflow.python.util.protobuf.compare"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.pydev": {
  "data": {
   "shadows": "tensorflow.python.framework.device"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.framework.test_util.versions": {
  "data": {
   "shadows": "tensorflow.python.framework.versions"
  },
  "type": "import"
 },
 "tensorflow.python.framework.versions": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.versions.__compiler_version__",
    "tensorflow.python.framework.versions.__git_version__",
    "tensorflow.python.framework.versions.__version__",
    "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION",
    "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_CONSUMER",
    "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_PRODUCER",
    "tensorflow.python.pywrap_tensorflow.__compiler_version__",
    "tensorflow.python.pywrap_tensorflow.__git_version__",
    "tensorflow.python.pywrap_tensorflow.__version__"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.framework.versions.COMPILER_VERSION": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.GIT_VERSION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.GRAPH_DEF_VERSION": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.GRAPH_DEF_VERSION_MIN_CONSUMER": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.GRAPH_DEF_VERSION_MIN_PRODUCER": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.VERSION": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.__compiler_version__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.__git_version__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.__version__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.python.framework.versions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.framework.versions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.framework.versions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.framework.versions.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.framework_lib": {
  "data": {
   "shadows": "tensorflow.python.framework.framework_lib"
  },
  "type": "import"
 },
 "tensorflow.python.functional_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.functional_ops"
  },
  "type": "import"
 },
 "tensorflow.python.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.python.histogram_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.histogram_ops"
  },
  "type": "import"
 },
 "tensorflow.python.image": {
  "data": {
   "shadows": "tensorflow.python.ops.image_ops"
  },
  "type": "import"
 },
 "tensorflow.python.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "tensorflow.python.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.python.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.python.lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.lib.core": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.lib.io": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.lib.io.file_io": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.lib.io.file_io.FileIO": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.lib.io.file_io.FileIO.__enter__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.__exit__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.InvalidArgumentError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.__iter__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.__next__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO._prereadline_check": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.PermissionDeniedError",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.CreateBufferedInputStream",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO._prewrite_check": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.PermissionDeniedError",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.CreateWritableFile",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.close": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.flush": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.FlushWritableFile"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.mode": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.name": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.next": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.read": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.PermissionDeniedError",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.ReadFileToString",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.readline": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.python.util.compat.as_str_any"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.readlines": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.size": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "stat"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.FileIO.write": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.AppendToFile",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io.copy": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.CopyFile",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.create_dir": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.CreateDir",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.delete_file": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.DeleteFile",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.delete_recursively": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.DeleteRecursively",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io.file_exists": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow.FileExists",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.get_matching_files": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.GetMatchingFiles",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.as_str_any"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.is_directory": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow.IsDirectory",
    "tensorflow.python.pywrap_tensorflow.TF_NewStatus",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.list_directory": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.lib.io.file_io.get_matching_files",
    "tensorflow.python.lib.io.file_io.is_directory",
    "tensorflow.python.lib.io.file_io.os",
    "tensorflow.python.pywrap_tensorflow.Basename",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.as_str_any"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io.read_file_to_string": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.recursive_create_dir": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.RecursivelyCreateDir",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.rename": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.RenameFile",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.stat": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.FileStatistics",
    "tensorflow.python.pywrap_tensorflow.Stat",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.walk": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.lib.io.file_io.is_directory",
    "tensorflow.python.lib.io.file_io.list_directory",
    "tensorflow.python.lib.io.file_io.os",
    "tensorflow.python.util.compat.as_str_any"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io.write_string_to_file": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest._setupWalkDirectories": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.create_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.create_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.tearDown": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.delete_recursively"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testCopy": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.copy",
    "tensorflow.python.lib.io.file_io.file_exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testCopyOverwrite": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.copy",
    "tensorflow.python.lib.io.file_io.file_exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testCopyOverwriteFalse": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.AlreadyExistsError",
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.copy"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testCreateRecursiveDir": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.delete_recursively",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.recursive_create_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testDeleteRecursivelyFail": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.lib.io.file_io.delete_recursively"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testFileDelete": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.delete_file",
    "tensorflow.python.lib.io.file_io.file_exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testFileDeleteFail": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.lib.io.file_io.delete_file"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testFileDoesntExist": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.read_file_to_string"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testFileReadBadMode": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.PermissionDeniedError",
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.file_exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testFileWriteBadMode": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.PermissionDeniedError",
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testGetMatchingFiles": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.create_dir",
    "tensorflow.python.lib.io.file_io.delete_recursively",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.get_matching_files"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testIsDirectory": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.create_dir",
    "tensorflow.python.lib.io.file_io.is_directory",
    "tensorflow.python.lib.io.file_io.stat"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testListDirectory": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.create_dir",
    "tensorflow.python.lib.io.file_io.list_directory"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testListDirectoryFailure": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.lib.io.file_io.list_directory"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testMultipleWrites": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.read_file_to_string"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testReadLine": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testReadingIterator": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testReadlines": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testRename": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.rename"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testRenameOverwrite": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.rename"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testRenameOverwriteFalse": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.AlreadyExistsError",
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.rename"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testStat": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.stat"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testWalkFailure": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.walk"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testWalkInOrder": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.walk"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testWalkPostOrder": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.walk"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.FileIoTest.testWriteToString": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.read_file_to_string",
    "tensorflow.python.lib.io.file_io.write_string_to_file"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.file_io_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io_test.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io_test.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io_test.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.file_io_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.python_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.lib.io.python_io.__all__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.python.lib.io.python_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.python_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.python_io.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.python_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.tf_record": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordCompressionType": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordOptions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object",
    "tensorflow.python.lib.io.tf_record.TFRecordCompressionType"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordOptions.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordOptions.get_compression_type_string": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordWriter": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordWriter.__enter__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordWriter.__exit__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordWriter.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.lib.io.tf_record.TFRecordOptions",
    "tensorflow.python.pywrap_tensorflow.PyRecordWriter_New",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordWriter.close": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.tf_record.TFRecordWriter.write": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "tensorflow.python.lib.io.tf_record.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.tf_record.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.tf_record.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.tf_record.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.tf_record.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.tf_record.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.lib.io.tf_record.tf_record_iterator": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "IOError",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.lib.io.tf_record.TFRecordOptions",
    "tensorflow.python.pywrap_tensorflow.PyRecordReader_New",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.python.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.msg": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.python.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tensorflow.python.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.array_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.NotDifferentiable"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.array_grad._BatchToSpaceGrad": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.space_to_batch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._BatchToSpaceNDGrad": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.space_to_batch_nd"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._CheckNumericsGrad": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.check_numerics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ConcatGrad": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_CreateDenseMaskAndBegin",
    "_ExtractInputShapes",
    "isinstance",
    "len",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.gen_array_ops._concat_offset",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.logical_and",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ConcatGrad._CreateDenseMaskAndBegin": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ConcatGrad._ExtractInputShapes": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.shape_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._DepthToSpaceGrad": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.space_to_depth"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._DiagGrad": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.diag_part"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._DiagPartGrad": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.diag"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ExpandDimsGrad": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_grad._ReshapeToInput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ExtractImagePatchesGrad": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "math.ceil",
    "max",
    "range",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.dtypes.float32",
    "tensorflow.python.framework.ops.dtypes.int64",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_dense_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._FillGrad": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._GatherGrad": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._GatherNdGrad": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._IdGrad": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._MatrixBandPartGrad": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.matrix_band_part"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._MatrixDiagGrad": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.matrix_diag_part"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._MatrixDiagPartGrad": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.matrix_diag"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._MatrixSetDiagGrad": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._MirrorPadGrad": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_array_ops._mirror_pad_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._MirrorPadGradGrad": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_array_ops._mirror_pad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._PackGrad": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.unpack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._PadGrad": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._QuantizeAndDequantizeGrad": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._RefIdGrad": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ReshapeGrad": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ReshapeToInput": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ReverseGrad": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reverse"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._ReverseSequenceGrad": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reverse_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._SliceGrad": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.pad",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._SpaceToBatchGrad": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.batch_to_space"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._SpaceToBatchNDGrad": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.batch_to_space_nd"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._SpaceToDepthGrad": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.depth_to_space"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._SplitGrad": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._SqueezeGrad": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_grad._ReshapeToInput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._StridedSliceGrad": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.strided_slice_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._StridedSliceGradGrad": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.strided_slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._TileGrad": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._TransposeGrad": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.invert_permutation",
    "tensorflow.python.ops.array_ops.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad._UnpackGrad": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.pack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.gen_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_grad.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops": {
  "data": {
   "symbols_in_volume": [
    "list",
    "slice",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.ops.Tensor._override_operator",
    "tensorflow.python.framework.ops.register_tensor_conversion_function",
    "tensorflow.python.ops.array_ops._SliceHelper",
    "tensorflow.python.ops.array_ops._autopacking_conversion_function",
    "tensorflow.python.ops.array_ops.batch_to_space",
    "tensorflow.python.ops.array_ops.space_to_batch",
    "tensorflow.python.ops.gen_array_ops._batch_to_space.__doc__",
    "tensorflow.python.ops.gen_array_ops._space_to_batch.__doc__",
    "tensorflow.python.ops.gen_array_ops.list_diff",
    "tuple"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.array_ops.NEW_AXIS": {
  "data": {
   "lineno": 1589
  },
  "type": "constant"
 },
 "tensorflow.python.ops.array_ops.SHRINK_AXIS": {
  "data": {
   "lineno": 1590
  },
  "type": "constant"
 },
 "tensorflow.python.ops.array_ops._BatchToSpaceNDShape": {
  "data": {
   "lineno": 2041,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._BatchToSpaceShape": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._ConcatShape": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._DelegateStridedSliceShape": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._EditDistanceShape": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._ExpandDims": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._FillShape": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.framework.tensor_util.constant_value_as_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._MirrorPadGradShape": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._OneHotShape": {
  "data": {
   "lineno": 2216,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._PadShape": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._PlaceholderWithDefaultShape": {
  "data": {
   "lineno": 2221,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._QuantizeDequantizeShape": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.unchanged_shape",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._ReshapeShape": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.prod",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_util.constant_value_as_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._SliceHelper": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Ellipsis",
    "isinstance",
    "list",
    "pack",
    "strided_slice",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops._baseslice",
    "tensorflow.python.ops.array_ops.newaxis",
    "tensorflow.python.ops.array_ops.sys",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._SliceHelperVar": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops._SliceHelper"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._SliceShape": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.framework.tensor_util.constant_value_as_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._SpaceToBatchNDShape": {
  "data": {
   "lineno": 2031,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._SpaceToBatchShape": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._SplitShape": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._StridedSliceGradShape": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._TileGradShape": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.framework.tensor_util.constant_value_as_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._TileShape": {
  "data": {
   "lineno": 1770,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.framework.tensor_util.constant_value_as_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._TransposeShape": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._autopacking_conversion_function": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "NotImplemented",
    "tensorflow.python.ops.array_ops._autopacking_helper",
    "tensorflow.python.ops.array_ops._get_dtype_from_nested_lists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._autopacking_helper": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "list",
    "str",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.is_dense_tensor_like",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_array_ops._pack",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._baseslice": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "tensorflow.python.ops.array_ops._compute_size_of_strided_dim": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "canonical",
    "tensorflow.python.ops.array_ops.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._compute_size_of_strided_dim.canonical": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "max",
    "min",
    "tensorflow.python.ops.array_ops.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops._get_dtype_from_nested_lists": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.is_dense_tensor_like",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.batch_to_space": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "batch_to_space_nd",
    "input",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.boolean_mask": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "ValueError",
    "_apply_mask_1d",
    "reshape",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.boolean_mask._apply_mask_1d": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "gather",
    "squeeze",
    "where"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.concat": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "identity",
    "isinstance",
    "len",
    "list",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.scalar",
    "tensorflow.python.ops.gen_array_ops._concat",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.constant": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op.constant"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.edit_distance": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.ops.gen_array_ops._edit_distance"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.gen_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.gen_logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_logging_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.gen_math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.listdiff": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "tensorflow.python.ops.array_ops.matrix_transpose": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "range",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.gen_math_ops._range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.meshgrid": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "len",
    "list",
    "range",
    "reshape",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.gen_logging_ops._assert",
    "tensorflow.python.ops.gen_math_ops.equal",
    "tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.newaxis": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "tensorflow.python.ops.array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.one_hot": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_array_ops._one_hot"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.ones": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "fill",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.ones_like": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "ones",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape_internal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.pack": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.gen_array_ops._pack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.pad": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.gen_array_ops._mirror_pad",
    "tensorflow.python.ops.gen_array_ops._pad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.placeholder": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._placeholder"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.rank": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "input",
    "rank_internal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.rank_internal": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "input",
    "input.shape",
    "isinstance",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_array_ops.rank",
    "tensorflow.python.ops.gen_array_ops.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.required_space_to_batch_paddings": {
  "data": {
   "lineno": 1919,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.sequence_mask": {
  "data": {
   "lineno": 2243,
   "symbols_in_volume": [
    "ValueError",
    "expand_dims",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._max",
    "tensorflow.python.ops.gen_math_ops._range",
    "tensorflow.python.ops.gen_math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.shape": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "input",
    "shape_internal",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.shape_internal": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "input",
    "input.shape",
    "isinstance",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_array_ops.shape",
    "tensorflow.python.ops.gen_math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.size": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "input",
    "size_internal",
    "tensorflow.python.framework.dtypes.int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.size_internal": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "input",
    "input.shape",
    "isinstance",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_array_ops.size",
    "tensorflow.python.ops.gen_math_ops._prod",
    "tensorflow.python.ops.gen_math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.slice": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.gen_array_ops._slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.space_to_batch": {
  "data": {
   "lineno": 2000,
   "symbols_in_volume": [
    "input",
    "numpy.array",
    "numpy.int64",
    "space_to_batch_nd"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.sparse_mask": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "gather",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.listdiff"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.sparse_placeholder": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.split": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops._split"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.strided_slice": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops.strided_slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.strided_slice.assign": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.gen_array_ops.strided_slice_assign"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.array_ops.transpose": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.gen_array_ops.rank",
    "tensorflow.python.ops.gen_array_ops.transpose",
    "tensorflow.python.ops.gen_math_ops._range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.unpack": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.gen_array_ops._unpack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.zeros": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "fill",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.array_ops.zeros_like": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.gen_array_ops._zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.candidate_sampling_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.candidate_sampling_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.all_candidate_sampler": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_candidate_sampling_ops._all_candidate_sampler"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.candidate_sampling_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.compute_accidental_hits": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_candidate_sampling_ops._compute_accidental_hits"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.candidate_sampling_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.fixed_unigram_candidate_sampler": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_candidate_sampling_ops._fixed_unigram_candidate_sampler"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.candidate_sampling_ops.gen_candidate_sampling_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_candidate_sampling_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.learned_unigram_candidate_sampler": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_candidate_sampling_ops._learned_unigram_candidate_sampler"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.candidate_sampling_ops.log_uniform_candidate_sampler": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_candidate_sampling_ops._log_uniform_candidate_sampler"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.candidate_sampling_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tensorflow.python.ops.candidate_sampling_ops.uniform_candidate_sampler": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_candidate_sampling_ops._uniform_candidate_sampler"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.int8",
    "tensorflow.python.framework.dtypes.qint32",
    "tensorflow.python.framework.dtypes.qint8",
    "tensorflow.python.framework.dtypes.quint8",
    "tensorflow.python.framework.dtypes.uint8"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.check_ops.NUMERIC_TYPES": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.python.ops.check_ops.__all__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.python.ops.check_ops._assert_rank_condition": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "assert_rank",
    "assert_type",
    "dynamic_condition",
    "static_condition",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops._get_diff_for_monotonic_comparison": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "TypeError",
    "is_numeric_tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.math_ops.less"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.assert_equal": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_greater": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_greater_equal": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_integer": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_less": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_less_equal": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_negative": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "assert_less",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_non_negative": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "assert_less_equal",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_non_positive": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "assert_less_equal",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_positive": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "assert_less",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_proper_iterable": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.util.compat.bytes_or_text_types",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_rank": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "dynamic_condition",
    "static_condition",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.check_ops._assert_rank_condition",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_rank_at_least": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "ValueError",
    "dynamic_condition",
    "static_condition",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.check_ops._assert_rank_condition",
    "tensorflow.python.ops.math_ops.greater_equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.assert_type": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.is_non_decreasing": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.check_ops._get_diff_for_monotonic_comparison",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.is_numeric_tensor": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.check_ops.NUMERIC_TYPES"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.is_strictly_increasing": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.check_ops._get_diff_for_monotonic_comparison",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.check_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.check_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.clip_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.clip_by_average_norm": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.rsqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.clip_ops.clip_by_global_norm": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "list",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.clip_ops.collections",
    "tensorflow.python.ops.clip_ops.global_norm",
    "tensorflow.python.ops.clip_ops.six",
    "tensorflow.python.ops.math_ops.minimum",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.clip_ops.clip_by_norm": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.rsqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.clip_ops.clip_by_value": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.minimum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.clip_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.global_norm": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "list",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.clip_ops.collections",
    "tensorflow.python.ops.clip_ops.six",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.nn_ops.l2_loss"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.clip_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.clip_ops.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.control_flow_grad._ExitGrad",
    "tensorflow.python.ops.control_flow_grad._SwitchGrad"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.control_flow_grad._EnterGrad": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "TypeError",
    "exit",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.get_default_graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._ExitGrad": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "enter_fn",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops._Enter",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._LoopCondGrad": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._MergeGrad": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "six.moves.xrange",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._NextIterationGrad": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._RefEnterGrad": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.control_flow_grad._EnterGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._RefMergeGrad": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.control_flow_grad._MergeGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._RefNextIterationGrad": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.control_flow_grad._NextIterationGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad._SwitchGrad": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "merge",
    "switch",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops._AddNextAndBackEdge"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_grad.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_grad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_grad.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.core.protobuf.control_flow_pb2.CondContextDef",
    "tensorflow.core.protobuf.control_flow_pb2.WhileContextDef",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.GraphKeys.COND_CONTEXT",
    "tensorflow.python.framework.ops.GraphKeys.WHILE_CONTEXT",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.ops.register_proto_function",
    "tensorflow.python.ops.control_flow_ops.CondContext",
    "tensorflow.python.ops.control_flow_ops.WhileContext",
    "tensorflow.python.ops.control_flow_ops._MergeShape",
    "tuple"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.control_flow_ops.Assert": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "cond",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.Assert.true_assert": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_logging_ops._assert"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.ControlFlowContext"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.AddOp": {
  "data": {
   "lineno": 1575
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.AddValue": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.BuildCondBranch": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "fn",
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor",
    "tensorflow.python.ops.control_flow_ops._basetuple",
    "tensorflow.python.ops.control_flow_ops._convert_tensorarrays_to_flows",
    "with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.GetControlPivot": {
  "data": {
   "lineno": 1529
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext._AddOpInternal": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.python.ops.control_flow_ops.IsLoopExit",
    "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.__init__": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops.ControlFlowContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext._init_from_proto": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "tensorflow.core.protobuf.control_flow_pb2.CondContextDef",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops.CondContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.back_prop": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.branch": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.from_proto": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.ops.control_flow_ops.CondContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.grad_state": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.name": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.pivot": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.pred": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.CondContext.to_proto": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "super",
    "tensorflow.core.protobuf.control_flow_pb2.CondContextDef",
    "tensorflow.python.ops.control_flow_ops.CondContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.AddName": {
  "data": {
   "lineno": 1395
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.Enter": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.Exit": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.ExitResult": {
  "data": {
   "lineno": 1411
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.GetWhileContext": {
  "data": {
   "lineno": 1417
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext._IsInOuterContext": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops._GetOutputContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext._MaybeAddToWhileContext": {
  "data": {
   "lineno": 1432
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext._MaybeRemoveExternalControlEdges": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.control_flow_ops._GetOutputContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.__init__": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext._from_proto": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.ops.control_flow_ops.ControlFlowContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext._init_values_from_proto": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "isinstance",
    "set",
    "tensorflow.core.protobuf.control_flow_pb2.ValuesDef",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext._to_proto": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.core.protobuf.control_flow_pb2.ValuesDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.back_prop": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.grad_state": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowContext.outer_context": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.AddWhileContext": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.GradLoopState",
    "tensorflow.python.ops.control_flow_ops._GetWhileContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.EnterGradWhileContext": {
  "data": {
   "lineno": 1066
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.ExitGradWhileContext": {
  "data": {
   "lineno": 1072
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.GetGradState": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "IsLoopExit",
    "tensorflow.python.ops.control_flow_ops._GetWhileContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.PostProcessing": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.control_flow_ops._NextIteration"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.ProcessUnusedLoopExits": {
  "data": {
   "lineno": 1028
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.ZerosLike": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "IsLoopSwitch",
    "IsSwitch",
    "ZerosLikeOutsideLoop",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.control_flow_ops._GetWhileContext",
    "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.ZerosLikeForExit": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.array_ops.zeros_like"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ControlFlowState.__init__": {
  "data": {
   "lineno": 1012
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.AddBackPropAccumulatedValue": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor",
    "tensorflow.python.ops.gen_data_flow_ops._stack_pop"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.AddForwardAccumulator": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops._GetOutputContext",
    "tensorflow.python.ops.gen_data_flow_ops._stack",
    "tensorflow.python.ops.gen_data_flow_ops._stack_push"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.GetRealValue": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops._GetLoopConstantEnter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.__init__": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "WhileContext",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.deferred_exits": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.forward_context": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.forward_index": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.forward_sync": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "control_trigger",
    "property",
    "tensorflow.python.framework.ops.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.grad_context": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.grad_index": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.grad_sync": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "control_trigger",
    "property",
    "tensorflow.python.framework.ops.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.history_map": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.outer_grad_state": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.pending_exits_count": {
  "data": {
   "lineno": 820
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.switch_map": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.GradLoopState.unused_exits": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.IsLoopExit": {
  "data": {
   "lineno": 1290
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.IsLoopSwitch": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "WhileContext",
    "isinstance",
    "tensorflow.python.ops.control_flow_ops.IsSwitch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.IsSwitch": {
  "data": {
   "lineno": 1285
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.MaybeCreateControlFlowState": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "IsLoopExit",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.control_flow_ops.ControlFlowState"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.ControlFlowContext"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.AddBackPropAccumulator": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.control_flow_ops._Enter",
    "tensorflow.python.ops.control_flow_ops._NextIteration",
    "tensorflow.python.ops.control_flow_ops.exit",
    "tensorflow.python.ops.control_flow_ops.merge",
    "tensorflow.python.ops.control_flow_ops.switch",
    "tensorflow.python.ops.math_ops.add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.AddBackPropIndexedSlicesAccumulator": {
  "data": {
   "lineno": 2159,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.control_flow_ops._Enter",
    "tensorflow.python.ops.control_flow_ops._NextIteration",
    "tensorflow.python.ops.control_flow_ops.exit",
    "tensorflow.python.ops.control_flow_ops.merge",
    "tensorflow.python.ops.control_flow_ops.switch",
    "tensorflow.python.ops.math_ops.maximum",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.AddBackPropLoopCounter": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "loop_cond",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.control_flow_ops._Enter",
    "tensorflow.python.ops.control_flow_ops._NextIteration",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.control_flow_ops.exit",
    "tensorflow.python.ops.control_flow_ops.merge",
    "tensorflow.python.ops.control_flow_ops.switch",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.AddForwardLoopCounter": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.control_flow_ops._Enter",
    "tensorflow.python.ops.control_flow_ops._NextIteration",
    "tensorflow.python.ops.control_flow_ops.exit",
    "tensorflow.python.ops.control_flow_ops.merge",
    "tensorflow.python.ops.control_flow_ops.switch",
    "tensorflow.python.ops.math_ops.add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.AddOp": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops._GetWhileContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.AddValue": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "enter",
    "enter.name",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops.IsLoopExit",
    "tensorflow.python.ops.control_flow_ops._Enter",
    "tensorflow.python.ops.control_flow_ops._GetWhileContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.BuildLoop": {
  "data": {
   "lineno": 2344,
   "symbols_in_volume": [
    "body",
    "len",
    "pred",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.ops.control_flow_ops._convert_flows_to_tensorarrays",
    "tensorflow.python.ops.control_flow_ops._convert_tensorarrays_to_flows",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.GetControlPivot": {
  "data": {
   "lineno": 1878
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.GetWhileContext": {
  "data": {
   "lineno": 1875
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._AddOpInternal": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.python.ops.control_flow_ops.IsLoopExit"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._BuildLoop": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "ValueError",
    "body",
    "isinstance",
    "len",
    "list",
    "loop_cond",
    "pred",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.control_flow_ops._AddNextAndBackEdge",
    "tensorflow.python.ops.control_flow_ops._EnforceShapeInvariant",
    "tensorflow.python.ops.control_flow_ops._Enter",
    "tensorflow.python.ops.control_flow_ops._Identity",
    "tensorflow.python.ops.control_flow_ops._IsLoopConstantEnter",
    "tensorflow.python.ops.control_flow_ops._SetShapeInvariants",
    "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor",
    "tensorflow.python.ops.control_flow_ops._convert_flows_to_tensorarrays",
    "tensorflow.python.ops.control_flow_ops._convert_tensorarrays_to_flows",
    "tensorflow.python.ops.control_flow_ops.exit",
    "tensorflow.python.ops.control_flow_ops.merge",
    "tensorflow.python.util.nest.assert_same_structure",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._FixControlInputsAndContext": {
  "data": {
   "lineno": 2371,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.get_default_graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._InitializeValues": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "set",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._MaybeAddControlDependency": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "_IsOpFree"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._MaybeAddControlDependency._IsOpFree": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops._IsLoopConstantEnter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.__init__": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.ControlFlowContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._init_from_args": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext._init_from_proto": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "tensorflow.core.protobuf.control_flow_pb2.WhileContextDef",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_ops.WhileContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.back_prop": {
  "data": {
   "lineno": 1825,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.from_proto": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.ops.control_flow_ops.WhileContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.grad_state": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.loop_exits": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.name": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.parallel_iterations": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.pivot": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.swap_memory": {
  "data": {
   "lineno": 1830,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.WhileContext.to_proto": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "super",
    "tensorflow.core.protobuf.control_flow_pb2.WhileContextDef",
    "tensorflow.python.ops.control_flow_ops.WhileContext"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.ZerosLikeOutsideLoop": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.control_flow_ops.IsSwitch",
    "tensorflow.python.ops.control_flow_ops.switch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._AddNextAndBackEdge": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.control_flow_ops._NextIteration",
    "tensorflow.python.ops.math_ops._as_indexed_slices",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._AsTensorList": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.control_flow_ops._basetuple",
    "with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._CheckResults": {
  "data": {
   "lineno": 2551,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._EnforceShapeInvariant": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.control_flow_ops._ShapeLessThanOrEqual",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._Enter": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "TypeError",
    "enter",
    "isinstance",
    "ref_enter",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._GetLoopConstantEnter": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops._IsLoopConstantEnter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._GetOutputContext": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "IsLoopExit"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._GetWhileContext": {
  "data": {
   "lineno": 1001
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._GroupControlDeps": {
  "data": {
   "lineno": 2597,
   "symbols_in_volume": [
    "no_op",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.device"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._Identity": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.gen_array_ops._ref_identity",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._IsLoopConstantEnter": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._LoopCondShape": {
  "data": {
   "lineno": 2904,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._MergeShape": {
  "data": {
   "lineno": 2913,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.scalar",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._NextIteration": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "next_iteration",
    "ref_next_iteration",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._SetShapeInvariants": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.control_flow_ops._ShapeLessThanOrEqual",
    "tensorflow.python.util.nest.flatten",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._ShapeLessThanOrEqual": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._SwitchRefOrTensor": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "isinstance",
    "ref_switch",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.ops.control_flow_ops.switch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._basetuple": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "tensorflow.python.ops.control_flow_ops._convert_flows_to_tensorarrays": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "tensorflow.python.ops.control_flow_ops._make_tensor_array",
    "tensorflow.python.ops.tensor_array_ops.TensorArray",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._convert_tensorarrays_to_flows": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops._make_tensor_array": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.case": {
  "data": {
   "lineno": 2716,
   "symbols_in_volume": [
    "TypeError",
    "_build_case",
    "_correct_empty",
    "callable",
    "default",
    "dict",
    "dummy_type",
    "enumerate",
    "fn",
    "isinstance",
    "len",
    "list",
    "map",
    "pred",
    "pred.dtype",
    "pred.name",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.control_flow_ops._basetuple",
    "tensorflow.python.ops.control_flow_ops.collections",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.platform.tf_logging.warn",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.case._build_case": {
  "data": {
   "lineno": 2860,
   "symbols_in_volume": [
    "default",
    "enumerate",
    "fn",
    "list",
    "tensorflow.python.ops.control_flow_ops.cond",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.case._correct_empty": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "isinstance",
    "no_op",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.ops.array_ops.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.cond": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "callable",
    "isinstance",
    "len",
    "tensorflow.python.framework.ops.GraphKeys.COND_CONTEXT",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.control_flow_ops.CondContext",
    "tensorflow.python.ops.control_flow_ops._convert_flows_to_tensorarrays",
    "tensorflow.python.ops.control_flow_ops.merge",
    "tensorflow.python.ops.control_flow_ops.switch",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.control_flow_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.control_flow_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.exit": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.ops.gen_control_flow_ops._exit",
    "tensorflow.python.ops.gen_control_flow_ops._ref_exit",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.gen_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.gen_control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.gen_data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.gen_logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_logging_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.group": {
  "data": {
   "lineno": 2607,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "no_op",
    "sorted",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops._GroupControlDeps",
    "tensorflow.python.ops.control_flow_ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.group.device_key": {
  "data": {
   "lineno": 2651
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.merge": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_control_flow_ops._merge",
    "tensorflow.python.ops.gen_control_flow_ops._ref_merge",
    "tensorflow.python.ops.math_ops._as_indexed_slices_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.switch": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_control_flow_ops._switch",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.tensor_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.tensor_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.control_flow_ops.tuple": {
  "data": {
   "lineno": 2661,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "set",
    "sorted",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.while_loop": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "body",
    "callable",
    "tensorflow.python.framework.ops.GraphKeys.WHILE_CONTEXT",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.WhileContext",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.util.nest.assert_same_structure"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.with_dependencies": {
  "data": {
   "lineno": 2561,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops._Identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.control_flow_ops.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.ctc_ops._BroadcastMul": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_grad._BroadcastMul"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops._CTCLossGrad": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.nn_grad._BroadcastMul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.ctc_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops.ctc_beam_search_decoder": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.gen_ctc_ops._ctc_beam_search_decoder",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.ctc_ops.ctc_greedy_decoder": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.gen_ctc_ops._ctc_greedy_decoder"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.ctc_ops.ctc_loss": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.gen_ctc_ops._ctc_loss"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.ctc_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops.gen_ctc_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_ctc_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.ctc_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.NotDifferentiable"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.data_flow_grad._DynamicPartitionGrads": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.data_flow_ops.dynamic_partition",
    "tensorflow.python.ops.data_flow_ops.dynamic_stitch",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_prod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_grad._DynamicStitchGrads": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "AsInt32",
    "isinstance",
    "len",
    "six.moves.xrange",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.unsorted_segment_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_grad._DynamicStitchGrads.AsInt32": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_grad.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.__init__": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.ops.data_flow_ops._as_shape_list",
    "tensorflow.python.ops.data_flow_ops._as_type_list",
    "tensorflow.python.ops.gen_data_flow_ops._barrier"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.barrier_ref": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.close": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._barrier_close"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.incomplete_size": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._barrier_incomplete_size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.insert_many": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._barrier_insert_many"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.name": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.ready_size": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._barrier_ready_size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.Barrier.take_many": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.vector",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.gen_data_flow_ops._barrier_take_many",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.FIFOQueue": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "tensorflow.python.ops.data_flow_ops.QueueBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.data_flow_ops.FIFOQueue.__init__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.data_flow_ops._as_name_list",
    "tensorflow.python.ops.data_flow_ops._as_shape_list",
    "tensorflow.python.ops.data_flow_ops._as_type_list",
    "tensorflow.python.ops.gen_data_flow_ops._fifo_queue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.PaddingFIFOQueue": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "tensorflow.python.ops.data_flow_ops.QueueBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.data_flow_ops.PaddingFIFOQueue.__init__": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.ops.data_flow_ops.PaddingFIFOQueue",
    "tensorflow.python.ops.data_flow_ops._as_name_list",
    "tensorflow.python.ops.data_flow_ops._as_shape_list",
    "tensorflow.python.ops.data_flow_ops._as_type_list",
    "tensorflow.python.ops.gen_data_flow_ops._padding_fifo_queue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.PriorityQueue": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "tensorflow.python.ops.data_flow_ops.QueueBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.data_flow_ops.PriorityQueue.__init__": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.data_flow_ops.PriorityQueue",
    "tensorflow.python.ops.data_flow_ops._as_shape_list",
    "tensorflow.python.ops.data_flow_ops._as_type_list",
    "tensorflow.python.ops.gen_data_flow_ops._priority_queue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase._check_enqueue_dtypes": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "sorted",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase._dequeue_return_value": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase._scope_vals": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.close": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._queue_close"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.dequeue": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._queue_dequeue",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.dequeue_many": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.Dimension",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.gen_data_flow_ops._queue_dequeue_many",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.dequeue_up_to": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.gen_data_flow_ops._queue_dequeue_up_to",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.dtypes": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.enqueue": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._queue_enqueue",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.enqueue_many": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._queue_enqueue_many",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.from_list": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "list",
    "staticmethod",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.ops.control_flow_ops.ref_select",
    "tensorflow.python.ops.data_flow_ops.QueueBase",
    "tensorflow.python.ops.data_flow_ops._shape_common",
    "tensorflow.python.ops.data_flow_ops.six",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.name": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.names": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.queue_ref": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.shapes": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.QueueBase.size": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._queue_size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "tensorflow.python.ops.data_flow_ops.QueueBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue.__init__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue",
    "tensorflow.python.ops.data_flow_ops._as_name_list",
    "tensorflow.python.ops.data_flow_ops._as_shape_list",
    "tensorflow.python.ops.data_flow_ops._as_type_list",
    "tensorflow.python.ops.data_flow_ops.hashlib",
    "tensorflow.python.ops.gen_data_flow_ops._random_shuffle_queue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops._DynamicPartitionShape": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops._DynamicStitchShape": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops._as_name_list": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "tensorflow.python.framework.dtypes",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops._as_shape_list": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "any",
    "int",
    "isinstance",
    "list",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.data_flow_ops.collections",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops._as_type_list": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.dtypes",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops._dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops._shape_common": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.gen_data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.initialize_all_tables": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.TABLE_INITIALIZERS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.control_flow_ops.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.data_flow_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.data_flow_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.embedding_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.embedding_lookup": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "six.moves.xrange",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.data_flow_ops.dynamic_partition",
    "tensorflow.python.ops.data_flow_ops.dynamic_stitch",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.embedding_ops.embedding_lookup_sparse": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "range",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.unique",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.pow",
    "tensorflow.python.ops.math_ops.segment_sum",
    "tensorflow.python.ops.math_ops.sparse_segment_mean",
    "tensorflow.python.ops.math_ops.sparse_segment_sqrt_n",
    "tensorflow.python.ops.math_ops.sparse_segment_sum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.embedding_ops.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.embedding_ops.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.functional_ops._symbolic_gradient": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_functional_ops._symbolic_gradient"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.foldl": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.tensor_array_ops.TensorArray",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.foldl.compute": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.foldr": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "fn",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.tensor_array_ops.TensorArray",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.foldr.compute": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.map_fn": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "fn",
    "input_flatten",
    "input_pack",
    "output_flatten",
    "output_pack",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.tensor_array_ops.TensorArray",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.map_fn.compute": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "fn",
    "input_pack",
    "output_flatten",
    "tensorflow.python.util.nest.assert_same_structure",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.map_fn.input_pack": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.map_fn.output_pack": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.scan": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "fn",
    "input_flatten",
    "input_pack",
    "output_flatten",
    "output_pack",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.tensor_array_ops.TensorArray",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.scan.compute": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "fn",
    "input_pack",
    "output_flatten",
    "output_pack",
    "tensorflow.python.util.nest.assert_same_structure",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.scan.input_pack": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.scan.output_pack": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.functional_ops.tensor_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.tensor_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.functional_ops.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_array_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_array_ops.__broadcast_gradient_args_outputs",
    "tensorflow.python.ops.gen_array_ops._list_diff_outputs",
    "tensorflow.python.ops.gen_array_ops._unique_outputs",
    "tensorflow.python.ops.gen_array_ops._unique_with_counts_outputs",
    "tensorflow.python.ops.gen_array_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_array_ops._BroadcastGradientArgsOutput": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 3094,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._ListDiffOutput": {
  "data": {
   "lineno": 1193
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._UniqueOutput": {
  "data": {
   "lineno": 2910
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._UniqueWithCountsOutput": {
  "data": {
   "lineno": 2949
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__batch_to_space_outputs": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__broadcast_gradient_args_outputs": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__concat_offset_outputs": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__concat_outputs": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__const_outputs": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__edit_distance_outputs": {
  "data": {
   "lineno": 770
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__mirror_pad_grad_outputs": {
  "data": {
   "lineno": 1484
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__mirror_pad_outputs": {
  "data": {
   "lineno": 1431
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__one_hot_outputs": {
  "data": {
   "lineno": 1526
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__pack_outputs": {
  "data": {
   "lineno": 1643
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__pad_outputs": {
  "data": {
   "lineno": 1684
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__placeholder_outputs": {
  "data": {
   "lineno": 1726
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__ref_identity_outputs": {
  "data": {
   "lineno": 1887
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__slice_outputs": {
  "data": {
   "lineno": 2205
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__space_to_batch_outputs": {
  "data": {
   "lineno": 2238
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__split_outputs": {
  "data": {
   "lineno": 2581
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__tile_grad_outputs": {
  "data": {
   "lineno": 2863
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__unpack_outputs": {
  "data": {
   "lineno": 2990
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops.__zeros_like_outputs": {
  "data": {
   "lineno": 3076
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._batch_matrix_band_part_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._batch_matrix_diag_outputs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._batch_matrix_diag_part_outputs": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._batch_matrix_set_diag_outputs": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._batch_to_space": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._batch_to_space_nd_outputs": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._bitcast_outputs": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops._BroadcastGradientArgsOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._check_numerics_outputs": {
  "data": {
   "lineno": 392
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._concat": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._concat_offset": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._const": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._copy_host_outputs": {
  "data": {
   "lineno": 519
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._copy_outputs": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._debug_identity_outputs": {
  "data": {
   "lineno": 544
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._debug_nan_count_outputs": {
  "data": {
   "lineno": 571
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._depth_to_space_outputs": {
  "data": {
   "lineno": 598
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._diag_outputs": {
  "data": {
   "lineno": 697
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._diag_part_outputs": {
  "data": {
   "lineno": 733
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._edit_distance": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._expand_dims_outputs": {
  "data": {
   "lineno": 851
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._extract_image_patches_outputs": {
  "data": {
   "lineno": 904
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._fill_outputs": {
  "data": {
   "lineno": 946
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._gather_nd_outputs": {
  "data": {
   "lineno": 1014
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._gather_outputs": {
  "data": {
   "lineno": 975
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._identity_outputs": {
  "data": {
   "lineno": 1115
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._immutable_const_outputs": {
  "data": {
   "lineno": 1132
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._invert_permutation_outputs": {
  "data": {
   "lineno": 1157
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._list_diff_outputs": {
  "data": {
   "lineno": 1190
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._matrix_band_part_outputs": {
  "data": {
   "lineno": 1237
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._matrix_diag_outputs": {
  "data": {
   "lineno": 1302
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._matrix_diag_part_outputs": {
  "data": {
   "lineno": 1347
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._matrix_set_diag_outputs": {
  "data": {
   "lineno": 1396
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._mirror_pad": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._mirror_pad_grad": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._one_hot": {
  "data": {
   "lineno": 1529
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._op_def_lib": {
  "data": {
   "lineno": 5178
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._pack": {
  "data": {
   "lineno": 1646
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._pad": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._placeholder": {
  "data": {
   "lineno": 1729
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._placeholder_with_default_outputs": {
  "data": {
   "lineno": 1752
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._quantize_and_dequantize_outputs": {
  "data": {
   "lineno": 1773
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._rank_outputs": {
  "data": {
   "lineno": 1856
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._ref_identity": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._reshape_outputs": {
  "data": {
   "lineno": 1904
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._reverse_outputs": {
  "data": {
   "lineno": 1981
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._reverse_sequence_outputs": {
  "data": {
   "lineno": 2046
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._shape_n_outputs": {
  "data": {
   "lineno": 2155
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._shape_outputs": {
  "data": {
   "lineno": 2127
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._size_outputs": {
  "data": {
   "lineno": 2176
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._slice": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "input",
    "tensorflow.python.ops.gen_array_ops.size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._space_to_batch": {
  "data": {
   "lineno": 2241,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._space_to_batch_nd_outputs": {
  "data": {
   "lineno": 2352
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._space_to_depth_outputs": {
  "data": {
   "lineno": 2490
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._split": {
  "data": {
   "lineno": 2584
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._squeeze_outputs": {
  "data": {
   "lineno": 2608
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._stop_gradient_outputs": {
  "data": {
   "lineno": 2650
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._strided_slice_assign_outputs": {
  "data": {
   "lineno": 2754
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._strided_slice_grad_outputs": {
  "data": {
   "lineno": 2795
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._strided_slice_outputs": {
  "data": {
   "lineno": 2687
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._tile_grad": {
  "data": {
   "lineno": 2866,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._tile_outputs": {
  "data": {
   "lineno": 2837
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._transpose_outputs": {
  "data": {
   "lineno": 2886
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._unique_outputs": {
  "data": {
   "lineno": 2907
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._unique_with_counts_outputs": {
  "data": {
   "lineno": 2946
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._unpack": {
  "data": {
   "lineno": 2993
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops._where_outputs": {
  "data": {
   "lineno": 3027
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_array_ops._zeros_like": {
  "data": {
   "lineno": 3079
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.batch_matrix_band_part": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.batch_matrix_diag": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.batch_matrix_diag_part": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.batch_matrix_set_diag": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.batch_to_space_nd": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.bitcast": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "input",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.check_numerics": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_array_ops.copy": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.copy_host": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.debug_identity": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.debug_nan_count": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.depth_to_space": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.diag": {
  "data": {
   "lineno": 700
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.diag_part": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.expand_dims": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.extract_image_patches": {
  "data": {
   "lineno": 907
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.fill": {
  "data": {
   "lineno": 949
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.gather": {
  "data": {
   "lineno": 978
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.gather_nd": {
  "data": {
   "lineno": 1017
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.identity": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.immutable_const": {
  "data": {
   "lineno": 1135
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.invert_permutation": {
  "data": {
   "lineno": 1160
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.list_diff": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops._ListDiffOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.matrix_band_part": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.matrix_diag": {
  "data": {
   "lineno": 1305
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.matrix_diag_part": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.matrix_set_diag": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_array_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_array_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_array_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_array_ops.placeholder_with_default": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.quantize_and_dequantize": {
  "data": {
   "lineno": 1776,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.rank": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.reshape": {
  "data": {
   "lineno": 1907
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.reverse": {
  "data": {
   "lineno": 1984
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.reverse_sequence": {
  "data": {
   "lineno": 2049,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.shape": {
  "data": {
   "lineno": 2130,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.shape_n": {
  "data": {
   "lineno": 2158,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.size": {
  "data": {
   "lineno": 2179,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.space_to_batch_nd": {
  "data": {
   "lineno": 2355,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.space_to_depth": {
  "data": {
   "lineno": 2493,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.squeeze": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.stop_gradient": {
  "data": {
   "lineno": 2653,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.strided_slice": {
  "data": {
   "lineno": 2690,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.strided_slice_assign": {
  "data": {
   "lineno": 2757
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.strided_slice_grad": {
  "data": {
   "lineno": 2798,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_array_ops.tile": {
  "data": {
   "lineno": 2840,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.transpose": {
  "data": {
   "lineno": 2889
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.unique": {
  "data": {
   "lineno": 2913,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops._UniqueOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.unique_with_counts": {
  "data": {
   "lineno": 2953,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_array_ops._UniqueWithCountsOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_array_ops.where": {
  "data": {
   "lineno": 3030,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_candidate_sampling_ops.__all_candidate_sampler_outputs",
    "tensorflow.python.ops.gen_candidate_sampling_ops.__compute_accidental_hits_outputs",
    "tensorflow.python.ops.gen_candidate_sampling_ops.__fixed_unigram_candidate_sampler_outputs",
    "tensorflow.python.ops.gen_candidate_sampling_ops.__learned_unigram_candidate_sampler_outputs",
    "tensorflow.python.ops.gen_candidate_sampling_ops.__log_uniform_candidate_sampler_outputs",
    "tensorflow.python.ops.gen_candidate_sampling_ops.__thread_unsafe_unigram_candidate_sampler_outputs",
    "tensorflow.python.ops.gen_candidate_sampling_ops.__uniform_candidate_sampler_outputs",
    "tensorflow.python.ops.gen_candidate_sampling_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._AllCandidateSamplerOutput": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._ComputeAccidentalHitsOutput": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._FixedUnigramCandidateSamplerOutput": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._LearnedUnigramCandidateSamplerOutput": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._LogUniformCandidateSamplerOutput": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._ThreadUnsafeUnigramCandidateSamplerOutput": {
  "data": {
   "lineno": 364
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._UniformCandidateSamplerOutput": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.__all_candidate_sampler_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.__compute_accidental_hits_outputs": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.__fixed_unigram_candidate_sampler_outputs": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.__learned_unigram_candidate_sampler_outputs": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.__log_uniform_candidate_sampler_outputs": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.__thread_unsafe_unigram_candidate_sampler_outputs": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.__uniform_candidate_sampler_outputs": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._all_candidate_sampler": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._AllCandidateSamplerOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._compute_accidental_hits": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._ComputeAccidentalHitsOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._fixed_unigram_candidate_sampler": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._FixedUnigramCandidateSamplerOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._learned_unigram_candidate_sampler": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._LearnedUnigramCandidateSamplerOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._log_uniform_candidate_sampler": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._LogUniformCandidateSamplerOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._op_def_lib": {
  "data": {
   "lineno": 912
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._thread_unsafe_unigram_candidate_sampler": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._ThreadUnsafeUnigramCandidateSamplerOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops._uniform_candidate_sampler": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_candidate_sampling_ops._UniformCandidateSamplerOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_candidate_sampling_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_control_flow_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_control_flow_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_control_flow_ops.__merge_outputs",
    "tensorflow.python.ops.gen_control_flow_ops.__ref_merge_outputs",
    "tensorflow.python.ops.gen_control_flow_ops.__switch_outputs",
    "tensorflow.python.ops.gen_control_flow_ops._ref_switch_outputs",
    "tensorflow.python.ops.gen_control_flow_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_control_flow_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops._MergeOutput": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._RefMergeOutput": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._RefSwitchOutput": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._SwitchOutput": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops.__exit_outputs": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops.__merge_outputs": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops.__ref_exit_outputs": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops.__ref_merge_outputs": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops.__switch_outputs": {
  "data": {
   "lineno": 341
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._abort_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._control_trigger_outputs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._enter_outputs": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._exit": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops._loop_cond_outputs": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._merge": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_control_flow_ops._MergeOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops._next_iteration_outputs": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._no_op_outputs": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._op_def_lib": {
  "data": {
   "lineno": 673
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._ref_enter_outputs": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._ref_exit": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops._ref_merge": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_control_flow_ops._RefMergeOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops._ref_next_iteration_outputs": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._ref_select_outputs": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._ref_switch_outputs": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_control_flow_ops._switch": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_control_flow_ops._SwitchOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.abort": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_control_flow_ops.control_trigger": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.enter": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.loop_cond": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.next_iteration": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.no_op": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_control_flow_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_control_flow_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_control_flow_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_control_flow_ops.ref_enter": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.ref_next_iteration": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.ref_select": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.ref_switch": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_control_flow_ops._RefSwitchOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_control_flow_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_ctc_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_ctc_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_ctc_ops.__ctc_beam_search_decoder_outputs",
    "tensorflow.python.ops.gen_ctc_ops.__ctc_greedy_decoder_outputs",
    "tensorflow.python.ops.gen_ctc_ops.__ctc_loss_outputs",
    "tensorflow.python.ops.gen_ctc_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_ctc_ops._CTCBeamSearchDecoderOutput": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_ctc_ops._CTCGreedyDecoderOutput": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_ctc_ops._CTCLossOutput": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_ctc_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_ctc_ops.__ctc_beam_search_decoder_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_ctc_ops.__ctc_greedy_decoder_outputs": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_ctc_ops.__ctc_loss_outputs": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_ctc_ops._ctc_beam_search_decoder": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_ctc_ops._CTCBeamSearchDecoderOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_ctc_ops._ctc_greedy_decoder": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_ctc_ops._CTCGreedyDecoderOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_ctc_ops._ctc_loss": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_ctc_ops._CTCLossOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_ctc_ops._op_def_lib": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_ctc_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_ctc_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_ctc_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_ctc_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_ctc_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_ctc_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_data_flow_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_data_flow_ops.__barrier_take_many_outputs",
    "tensorflow.python.ops.gen_data_flow_ops.__lookup_table_export_outputs",
    "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_concat_outputs",
    "tensorflow.python.ops.gen_data_flow_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_data_flow_ops._BarrierTakeManyOutput": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._LookupTableExportOutput": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops._TensorArrayConcatOutput": {
  "data": {
   "lineno": 1226
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__barrier_close_outputs": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__barrier_incomplete_size_outputs": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__barrier_insert_many_outputs": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__barrier_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__barrier_ready_size_outputs": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__barrier_take_many_outputs": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__delete_session_tensor_outputs": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__fifo_queue_outputs": {
  "data": {
   "lineno": 346
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__get_session_handle_outputs": {
  "data": {
   "lineno": 382
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__get_session_tensor_outputs": {
  "data": {
   "lineno": 400
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__hash_table_outputs": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__initialize_table_from_text_file_outputs": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__initialize_table_outputs": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__lookup_table_export_outputs": {
  "data": {
   "lineno": 522
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__lookup_table_find_outputs": {
  "data": {
   "lineno": 549
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__lookup_table_import_outputs": {
  "data": {
   "lineno": 578
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__lookup_table_insert_outputs": {
  "data": {
   "lineno": 602
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__lookup_table_size_outputs": {
  "data": {
   "lineno": 626
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__mutable_hash_table_of_tensors_outputs": {
  "data": {
   "lineno": 682
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__mutable_hash_table_outputs": {
  "data": {
   "lineno": 645
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__padding_fifo_queue_outputs": {
  "data": {
   "lineno": 719
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__priority_queue_outputs": {
  "data": {
   "lineno": 764
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__queue_close_outputs": {
  "data": {
   "lineno": 806
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__queue_dequeue_many_outputs": {
  "data": {
   "lineno": 867
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__queue_dequeue_outputs": {
  "data": {
   "lineno": 834
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__queue_dequeue_up_to_outputs": {
  "data": {
   "lineno": 909
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__queue_enqueue_many_outputs": {
  "data": {
   "lineno": 986
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__queue_enqueue_outputs": {
  "data": {
   "lineno": 955
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__queue_size_outputs": {
  "data": {
   "lineno": 1022
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__random_shuffle_queue_outputs": {
  "data": {
   "lineno": 1039
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__stack_close_outputs": {
  "data": {
   "lineno": 1108
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__stack_outputs": {
  "data": {
   "lineno": 1087
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__stack_pop_outputs": {
  "data": {
   "lineno": 1125
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__stack_push_outputs": {
  "data": {
   "lineno": 1145
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_close_outputs": {
  "data": {
   "lineno": 1203
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_concat_outputs": {
  "data": {
   "lineno": 1223
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_gather_outputs": {
  "data": {
   "lineno": 1273
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_grad_outputs": {
  "data": {
   "lineno": 1306
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_outputs": {
  "data": {
   "lineno": 1167
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_pack_outputs": {
  "data": {
   "lineno": 1367
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_read_outputs": {
  "data": {
   "lineno": 1402
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_scatter_outputs": {
  "data": {
   "lineno": 1424
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_size_outputs": {
  "data": {
   "lineno": 1451
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_split_outputs": {
  "data": {
   "lineno": 1472
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_unpack_outputs": {
  "data": {
   "lineno": 1516
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops.__tensor_array_write_outputs": {
  "data": {
   "lineno": 1543
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops._barrier": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._barrier_close": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._barrier_incomplete_size": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._barrier_insert_many": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._barrier_ready_size": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._barrier_take_many": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._BarrierTakeManyOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._delete_session_tensor": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._dynamic_partition_outputs": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops._dynamic_stitch_outputs": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops._fifo_queue": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._get_session_handle": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._get_session_tensor": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._hash_table": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._initialize_table": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._initialize_table_from_text_file": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._lookup_table_export": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._LookupTableExportOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._lookup_table_find": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._lookup_table_import": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._lookup_table_insert": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._lookup_table_size": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._mutable_hash_table": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._mutable_hash_table_of_tensors": {
  "data": {
   "lineno": 685
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._op_def_lib": {
  "data": {
   "lineno": 2868
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_data_flow_ops._padding_fifo_queue": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._priority_queue": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._queue_close": {
  "data": {
   "lineno": 809
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._queue_dequeue": {
  "data": {
   "lineno": 837
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._queue_dequeue_many": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._queue_dequeue_up_to": {
  "data": {
   "lineno": 912
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._queue_enqueue": {
  "data": {
   "lineno": 958
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._queue_enqueue_many": {
  "data": {
   "lineno": 989
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._queue_size": {
  "data": {
   "lineno": 1025
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._random_shuffle_queue": {
  "data": {
   "lineno": 1042
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._stack": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._stack_close": {
  "data": {
   "lineno": 1111
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._stack_pop": {
  "data": {
   "lineno": 1128
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._stack_push": {
  "data": {
   "lineno": 1148
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array": {
  "data": {
   "lineno": 1170
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_close": {
  "data": {
   "lineno": 1206
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_concat": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._TensorArrayConcatOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_gather": {
  "data": {
   "lineno": 1276
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_grad": {
  "data": {
   "lineno": 1309
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_pack": {
  "data": {
   "lineno": 1370
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_read": {
  "data": {
   "lineno": 1405
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_scatter": {
  "data": {
   "lineno": 1427
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_size": {
  "data": {
   "lineno": 1454
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_split": {
  "data": {
   "lineno": 1475
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_unpack": {
  "data": {
   "lineno": 1519
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops._tensor_array_write": {
  "data": {
   "lineno": 1546
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_data_flow_ops.dynamic_partition": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops.dynamic_stitch": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_data_flow_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_data_flow_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_data_flow_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_data_flow_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_data_flow_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_functional_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.ops.gen_functional_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_functional_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_functional_ops.__symbolic_gradient_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_functional_ops._op_def_lib": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_functional_ops._symbolic_gradient": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_functional_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_functional_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_functional_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_functional_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_functional_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_functional_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_image_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_image_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_image_ops._sample_distorted_bounding_box_outputs",
    "tensorflow.python.ops.gen_image_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_image_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops._SampleDistortedBoundingBoxOutput": {
  "data": {
   "lineno": 825
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops.__adjust_contrastv2_outputs": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops.__random_crop_outputs": {
  "data": {
   "lineno": 617
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops.__resize_bilinear_grad_outputs": {
  "data": {
   "lineno": 736
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops.__resize_nearest_neighbor_grad_outputs": {
  "data": {
   "lineno": 794
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._adjust_contrast_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._adjust_contrastv2": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops._crop_and_resize_grad_boxes_outputs": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._crop_and_resize_grad_image_outputs": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._crop_and_resize_outputs": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._decode_gif_outputs": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._decode_jpeg_outputs": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._decode_png_outputs": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._draw_bounding_boxes_outputs": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._encode_jpeg_outputs": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._encode_png_outputs": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._extract_glimpse_outputs": {
  "data": {
   "lineno": 452
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._hsv_to_rgb_outputs": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._non_max_suppression_outputs": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._op_def_lib": {
  "data": {
   "lineno": 1861
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._random_crop": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops._resize_area_outputs": {
  "data": {
   "lineno": 652
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._resize_bicubic_outputs": {
  "data": {
   "lineno": 680
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._resize_bilinear_grad": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops._resize_bilinear_outputs": {
  "data": {
   "lineno": 708
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._resize_nearest_neighbor_grad": {
  "data": {
   "lineno": 797
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops._resize_nearest_neighbor_outputs": {
  "data": {
   "lineno": 767
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._rgb_to_hsv_outputs": {
  "data": {
   "lineno": 591
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops._sample_distorted_bounding_box_outputs": {
  "data": {
   "lineno": 822
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_image_ops.adjust_contrast": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_image_ops.crop_and_resize": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.crop_and_resize_grad_boxes": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.crop_and_resize_grad_image": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.decode_gif": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.decode_jpeg": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.decode_png": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.draw_bounding_boxes": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.encode_jpeg": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "format"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.encode_png": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.extract_glimpse": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.hsv_to_rgb": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.non_max_suppression": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_image_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_image_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_image_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_image_ops.resize_area": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.resize_bicubic": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.resize_bilinear": {
  "data": {
   "lineno": 711
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.resize_nearest_neighbor": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.rgb_to_hsv": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.sample_distorted_bounding_box": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_image_ops._SampleDistortedBoundingBoxOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_image_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_io_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_io_ops.__reader_read_outputs",
    "tensorflow.python.ops.gen_io_ops.__reader_read_up_to_outputs",
    "tensorflow.python.ops.gen_io_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_io_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._ReaderReadOutput": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops._ReaderReadUpToOutput": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__fixed_length_record_reader_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__identity_reader_outputs": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__reader_num_records_produced_outputs": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__reader_num_work_units_completed_outputs": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__reader_read_outputs": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__reader_read_up_to_outputs": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__reader_reset_outputs": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__reader_restore_state_outputs": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__reader_serialize_state_outputs": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__restore_outputs": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__restore_slice_outputs": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__save_outputs": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__save_slices_outputs": {
  "data": {
   "lineno": 392
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__sharded_filename_outputs": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__sharded_filespec_outputs": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__text_line_reader_outputs": {
  "data": {
   "lineno": 509
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__tf_record_reader_outputs": {
  "data": {
   "lineno": 483
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops.__whole_file_reader_outputs": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops._fixed_length_record_reader": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._identity_reader": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._matching_files_outputs": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops._op_def_lib": {
  "data": {
   "lineno": 982
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops._read_file_outputs": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_io_ops._reader_num_records_produced": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._reader_num_work_units_completed": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._reader_read": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._ReaderReadOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._reader_read_up_to": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._ReaderReadUpToOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._reader_reset": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._reader_restore_state": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._reader_serialize_state": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._restore": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._restore_slice": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._save": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._save_slices": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._sharded_filename": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._sharded_filespec": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._text_line_reader": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._tf_record_reader": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops._whole_file_reader": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_io_ops.matching_files": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_io_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_io_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_io_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_io_ops.read_file": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_io_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_linalg_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_linalg_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_linalg_ops.__batch_self_adjoint_eig_v2_outputs",
    "tensorflow.python.ops.gen_linalg_ops.__batch_svd_outputs",
    "tensorflow.python.ops.gen_linalg_ops.__self_adjoint_eig_v2_outputs",
    "tensorflow.python.ops.gen_linalg_ops.__svd_outputs",
    "tensorflow.python.ops.gen_linalg_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_linalg_ops._BatchSelfAdjointEigV2Output": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._BatchSvdOutput": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._SelfAdjointEigV2Output": {
  "data": {
   "lineno": 487
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._SvdOutput": {
  "data": {
   "lineno": 526
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_cholesky_grad_outputs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_cholesky_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_matrix_determinant_outputs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_matrix_inverse_outputs": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_matrix_solve_ls_outputs": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_matrix_solve_outputs": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_matrix_triangular_solve_outputs": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_self_adjoint_eig_outputs": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_self_adjoint_eig_v2_outputs": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__batch_svd_outputs": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__matrix_solve_ls_outputs": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__self_adjoint_eig_outputs": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__self_adjoint_eig_v2_outputs": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops.__svd_outputs": {
  "data": {
   "lineno": 523
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_cholesky": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_cholesky_grad": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_matrix_determinant": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_matrix_inverse": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_matrix_solve": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_matrix_solve_ls": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_matrix_triangular_solve": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_self_adjoint_eig": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_self_adjoint_eig_v2": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "input",
    "tensorflow.python.ops.gen_linalg_ops._BatchSelfAdjointEigV2Output"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._batch_svd": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "input",
    "tensorflow.python.ops.gen_linalg_ops._BatchSvdOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._cholesky_grad_outputs": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._cholesky_outputs": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._matrix_determinant_outputs": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._matrix_inverse_outputs": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._matrix_solve_ls": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._matrix_solve_outputs": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._matrix_triangular_solve_outputs": {
  "data": {
   "lineno": 415
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._op_def_lib": {
  "data": {
   "lineno": 1229
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_linalg_ops._self_adjoint_eig": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._self_adjoint_eig_v2": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "input",
    "tensorflow.python.ops.gen_linalg_ops._SelfAdjointEigV2Output"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops._svd": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "input",
    "tensorflow.python.ops.gen_linalg_ops._SvdOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops.cholesky": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops.cholesky_grad": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_linalg_ops.matrix_determinant": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops.matrix_inverse": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops.matrix_solve": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops.matrix_triangular_solve": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_linalg_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_linalg_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_linalg_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_linalg_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_linalg_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_logging_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_logging_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_logging_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops.__assert_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops.__audio_summary_outputs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops.__histogram_summary_outputs": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops.__image_summary_outputs": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops.__merge_summary_outputs": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops.__print_outputs": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops.__scalar_summary_outputs": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops.__tensor_summary_outputs": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops._assert": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops._audio_summary": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops._histogram_summary": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops._image_summary": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops._merge_summary": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops._op_def_lib": {
  "data": {
   "lineno": 565
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_logging_ops._print": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops._scalar_summary": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops._tensor_summary": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_logging_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_logging_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_logging_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_logging_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_logging_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_logging_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_math_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_math_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 2523,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.__abs_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__add_n_outputs": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__all_outputs": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__any_outputs": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__batch_mat_mul_outputs": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__complex_outputs": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__conj_outputs": {
  "data": {
   "lineno": 505
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__inv_grad_outputs": {
  "data": {
   "lineno": 1079
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__mat_mul_outputs": {
  "data": {
   "lineno": 1321
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__max_outputs": {
  "data": {
   "lineno": 1352
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__mean_outputs": {
  "data": {
   "lineno": 1402
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__min_outputs": {
  "data": {
   "lineno": 1431
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__pow_outputs": {
  "data": {
   "lineno": 1588
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__prod_outputs": {
  "data": {
   "lineno": 1615
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__range_outputs": {
  "data": {
   "lineno": 1644
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__rsqrt_grad_outputs": {
  "data": {
   "lineno": 1728
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__sigmoid_grad_outputs": {
  "data": {
   "lineno": 2002
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__sigmoid_outputs": {
  "data": {
   "lineno": 1983
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__sparse_mat_mul_outputs": {
  "data": {
   "lineno": 2061
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__sqrt_grad_outputs": {
  "data": {
   "lineno": 2290
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__sum_outputs": {
  "data": {
   "lineno": 2372
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__tanh_grad_outputs": {
  "data": {
   "lineno": 2435
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.__tanh_outputs": {
  "data": {
   "lineno": 2418
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._abs": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._acos_outputs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._add_n": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._add_outputs": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._all": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._any": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._arg_max_outputs": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._arg_min_outputs": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._asin_outputs": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._atan_outputs": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._batch_fft2d_outputs": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._batch_fft3d_outputs": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._batch_fft_outputs": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._batch_ifft2d_outputs": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._batch_ifft3d_outputs": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._batch_ifft_outputs": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._batch_mat_mul": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._betainc_outputs": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._cast_outputs": {
  "data": {
   "lineno": 405
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._ceil_outputs": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._complex": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._complex_abs_outputs": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._conj": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._cos_outputs": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._cross_outputs": {
  "data": {
   "lineno": 553
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._cumprod_outputs": {
  "data": {
   "lineno": 578
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._cumsum_outputs": {
  "data": {
   "lineno": 624
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._digamma_outputs": {
  "data": {
   "lineno": 669
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._div_outputs": {
  "data": {
   "lineno": 688
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._equal_outputs": {
  "data": {
   "lineno": 709
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._erf_outputs": {
  "data": {
   "lineno": 730
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._erfc_outputs": {
  "data": {
   "lineno": 747
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._exp_outputs": {
  "data": {
   "lineno": 764
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._fft2d_outputs": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._fft3d_outputs": {
  "data": {
   "lineno": 823
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._fft_outputs": {
  "data": {
   "lineno": 781
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._floor_outputs": {
  "data": {
   "lineno": 844
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._greater_equal_outputs": {
  "data": {
   "lineno": 882
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._greater_outputs": {
  "data": {
   "lineno": 861
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._ifft2d_outputs": {
  "data": {
   "lineno": 924
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._ifft3d_outputs": {
  "data": {
   "lineno": 945
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._ifft_outputs": {
  "data": {
   "lineno": 903
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._igamma_outputs": {
  "data": {
   "lineno": 966
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._igammac_outputs": {
  "data": {
   "lineno": 998
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._imag_outputs": {
  "data": {
   "lineno": 1030
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._inv_grad": {
  "data": {
   "lineno": 1082
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._inv_outputs": {
  "data": {
   "lineno": 1060
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._is_finite_outputs": {
  "data": {
   "lineno": 1100
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._is_inf_outputs": {
  "data": {
   "lineno": 1117
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._is_nan_outputs": {
  "data": {
   "lineno": 1134
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._less_equal_outputs": {
  "data": {
   "lineno": 1172
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._less_outputs": {
  "data": {
   "lineno": 1151
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._lgamma_outputs": {
  "data": {
   "lineno": 1193
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._lin_space_outputs": {
  "data": {
   "lineno": 1210
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._log_outputs": {
  "data": {
   "lineno": 1243
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._logical_and_outputs": {
  "data": {
   "lineno": 1262
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._logical_not_outputs": {
  "data": {
   "lineno": 1283
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._logical_or_outputs": {
  "data": {
   "lineno": 1300
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._mat_mul": {
  "data": {
   "lineno": 1324
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._max": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._maximum_outputs": {
  "data": {
   "lineno": 1381
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._mean": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._min": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._minimum_outputs": {
  "data": {
   "lineno": 1460
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._mod_outputs": {
  "data": {
   "lineno": 1481
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._mul_outputs": {
  "data": {
   "lineno": 1502
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._neg_outputs": {
  "data": {
   "lineno": 1523
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._not_equal_outputs": {
  "data": {
   "lineno": 1542
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._op_def_lib": {
  "data": {
   "lineno": 5710
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._polygamma_outputs": {
  "data": {
   "lineno": 1563
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._pow": {
  "data": {
   "lineno": 1591
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._prod": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._range": {
  "data": {
   "lineno": 1647
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._real_outputs": {
  "data": {
   "lineno": 1679
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._rsqrt_grad": {
  "data": {
   "lineno": 1731
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._rsqrt_outputs": {
  "data": {
   "lineno": 1709
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._segment_max_outputs": {
  "data": {
   "lineno": 1749
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._segment_mean_outputs": {
  "data": {
   "lineno": 1783
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._segment_min_outputs": {
  "data": {
   "lineno": 1819
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._segment_prod_outputs": {
  "data": {
   "lineno": 1854
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._segment_sum_outputs": {
  "data": {
   "lineno": 1889
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._select_outputs": {
  "data": {
   "lineno": 1923
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sigmoid": {
  "data": {
   "lineno": 1986
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._sigmoid_grad": {
  "data": {
   "lineno": 2005
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._sign_outputs": {
  "data": {
   "lineno": 2023
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sin_outputs": {
  "data": {
   "lineno": 2044
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sparse_mat_mul": {
  "data": {
   "lineno": 2064
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._sparse_segment_mean_grad_outputs": {
  "data": {
   "lineno": 2125
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sparse_segment_mean_outputs": {
  "data": {
   "lineno": 2093
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sparse_segment_sqrt_n_grad_outputs": {
  "data": {
   "lineno": 2186
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sparse_segment_sqrt_n_outputs": {
  "data": {
   "lineno": 2155
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sparse_segment_sum_outputs": {
  "data": {
   "lineno": 2216
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sqrt_grad": {
  "data": {
   "lineno": 2293
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._sqrt_outputs": {
  "data": {
   "lineno": 2271
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._square_outputs": {
  "data": {
   "lineno": 2311
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._squared_difference_outputs": {
  "data": {
   "lineno": 2330
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sub_outputs": {
  "data": {
   "lineno": 2351
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._sum": {
  "data": {
   "lineno": 2375,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._tan_outputs": {
  "data": {
   "lineno": 2401
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._tanh": {
  "data": {
   "lineno": 2421
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._tanh_grad": {
  "data": {
   "lineno": 2438
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops._unsorted_segment_sum_outputs": {
  "data": {
   "lineno": 2456
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops._zeta_outputs": {
  "data": {
   "lineno": 2499
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_math_ops.acos": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.add": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.arg_max": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.arg_min": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.asin": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.atan": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.batch_fft": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.batch_fft2d": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.batch_fft3d": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.batch_ifft": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.batch_ifft2d": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.batch_ifft3d": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.betainc": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.cast": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.ceil": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_math_ops.complex_abs": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.cos": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.cross": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.cumprod": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.cumsum": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.digamma": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.div": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.equal": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.erf": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.erfc": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.exp": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.fft": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.fft2d": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.fft3d": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.floor": {
  "data": {
   "lineno": 847
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.greater": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.greater_equal": {
  "data": {
   "lineno": 885
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.ifft": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.ifft2d": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.ifft3d": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.igamma": {
  "data": {
   "lineno": 969
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.igammac": {
  "data": {
   "lineno": 1001
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.imag": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.inv": {
  "data": {
   "lineno": 1063
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.is_finite": {
  "data": {
   "lineno": 1103
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.is_inf": {
  "data": {
   "lineno": 1120
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.is_nan": {
  "data": {
   "lineno": 1137
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.less": {
  "data": {
   "lineno": 1154
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.less_equal": {
  "data": {
   "lineno": 1175
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.lgamma": {
  "data": {
   "lineno": 1196
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.lin_space": {
  "data": {
   "lineno": 1213
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.log": {
  "data": {
   "lineno": 1246
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.logical_and": {
  "data": {
   "lineno": 1265
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.logical_not": {
  "data": {
   "lineno": 1286
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.logical_or": {
  "data": {
   "lineno": 1303
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.maximum": {
  "data": {
   "lineno": 1384
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.minimum": {
  "data": {
   "lineno": 1463
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.mod": {
  "data": {
   "lineno": 1484
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.mul": {
  "data": {
   "lineno": 1505
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.neg": {
  "data": {
   "lineno": 1526
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.not_equal": {
  "data": {
   "lineno": 1545
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_math_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_math_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_math_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_math_ops.polygamma": {
  "data": {
   "lineno": 1566
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.real": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.rsqrt": {
  "data": {
   "lineno": 1712
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.segment_max": {
  "data": {
   "lineno": 1752
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.segment_mean": {
  "data": {
   "lineno": 1786
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.segment_min": {
  "data": {
   "lineno": 1822
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.segment_prod": {
  "data": {
   "lineno": 1857
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.segment_sum": {
  "data": {
   "lineno": 1892
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.select": {
  "data": {
   "lineno": 1926
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sign": {
  "data": {
   "lineno": 2026
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sin": {
  "data": {
   "lineno": 2047
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sparse_segment_mean": {
  "data": {
   "lineno": 2096
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sparse_segment_mean_grad": {
  "data": {
   "lineno": 2128
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sparse_segment_sqrt_n": {
  "data": {
   "lineno": 2158
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sparse_segment_sqrt_n_grad": {
  "data": {
   "lineno": 2189
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sparse_segment_sum": {
  "data": {
   "lineno": 2219
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sqrt": {
  "data": {
   "lineno": 2274
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.square": {
  "data": {
   "lineno": 2314
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.squared_difference": {
  "data": {
   "lineno": 2333
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.sub": {
  "data": {
   "lineno": 2354
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.tan": {
  "data": {
   "lineno": 2404
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_math_ops.unsorted_segment_sum": {
  "data": {
   "lineno": 2459
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_math_ops.zeta": {
  "data": {
   "lineno": 2502
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_nn_ops.__batch_norm_with_global_normalization_grad_outputs",
    "tensorflow.python.ops.gen_nn_ops.__softmax_cross_entropy_with_logits_outputs",
    "tensorflow.python.ops.gen_nn_ops.__sparse_softmax_cross_entropy_with_logits_outputs",
    "tensorflow.python.ops.gen_nn_ops.__top_k_outputs",
    "tensorflow.python.ops.gen_nn_ops.__top_kv2_outputs",
    "tensorflow.python.ops.gen_nn_ops._fractional_avg_pool_outputs",
    "tensorflow.python.ops.gen_nn_ops._fractional_max_pool_outputs",
    "tensorflow.python.ops.gen_nn_ops._max_pool_with_argmax_outputs",
    "tensorflow.python.ops.gen_nn_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_nn_ops._BatchNormWithGlobalNormalizationGradOutput": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._FractionalAvgPoolOutput": {
  "data": {
   "lineno": 944
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._FractionalMaxPoolOutput": {
  "data": {
   "lineno": 1065
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._MaxPoolWithArgmaxOutput": {
  "data": {
   "lineno": 1580
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._SoftmaxCrossEntropyWithLogitsOutput": {
  "data": {
   "lineno": 1720
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._SparseSoftmaxCrossEntropyWithLogitsOutput": {
  "data": {
   "lineno": 1829
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._TopKOutput": {
  "data": {
   "lineno": 1864
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._TopKV2Output": {
  "data": {
   "lineno": 1907
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__avg_pool_grad_outputs": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__avg_pool_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__batch_norm_with_global_normalization_grad_outputs": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__batch_norm_with_global_normalization_outputs": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__bias_add_outputs": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__bias_add_v1_outputs": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__elu_grad_outputs": {
  "data": {
   "lineno": 917
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__fractional_avg_pool_grad_outputs": {
  "data": {
   "lineno": 1010
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__fractional_max_pool_grad_outputs": {
  "data": {
   "lineno": 1156
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__log_softmax_outputs": {
  "data": {
   "lineno": 1389
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__lrn_grad_outputs": {
  "data": {
   "lineno": 1356
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__max_pool_grad_outputs": {
  "data": {
   "lineno": 1503
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__max_pool_grad_with_argmax_outputs": {
  "data": {
   "lineno": 1543
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__max_pool_outputs": {
  "data": {
   "lineno": 1411
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__relu6_grad_outputs": {
  "data": {
   "lineno": 1650
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__relu6_outputs": {
  "data": {
   "lineno": 1633
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__relu_grad_outputs": {
  "data": {
   "lineno": 1672
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__softmax_cross_entropy_with_logits_outputs": {
  "data": {
   "lineno": 1717
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__softmax_outputs": {
  "data": {
   "lineno": 1695
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__softplus_grad_outputs": {
  "data": {
   "lineno": 1765
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__softsign_grad_outputs": {
  "data": {
   "lineno": 1804
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__sparse_softmax_cross_entropy_with_logits_outputs": {
  "data": {
   "lineno": 1826
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__top_k_outputs": {
  "data": {
   "lineno": 1861
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops.__top_kv2_outputs": {
  "data": {
   "lineno": 1904
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._avg_pool": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._avg_pool3d_grad_outputs": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._avg_pool3d_outputs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._avg_pool_grad": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._batch_norm_with_global_normalization": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._batch_norm_with_global_normalization_grad": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._BatchNormWithGlobalNormalizationGradOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._bias_add": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._bias_add_grad_outputs": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._bias_add_v1": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._conv2d_backprop_filter_outputs": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._conv2d_backprop_input_outputs": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._conv2d_outputs": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._conv3d_backprop_filter_outputs": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._conv3d_backprop_filter_v2_outputs": {
  "data": {
   "lineno": 556
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._conv3d_backprop_input_outputs": {
  "data": {
   "lineno": 591
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._conv3d_backprop_input_v2_outputs": {
  "data": {
   "lineno": 623
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._conv3d_outputs": {
  "data": {
   "lineno": 491
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._depthwise_conv2d_native_backprop_filter_outputs": {
  "data": {
   "lineno": 700
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._depthwise_conv2d_native_backprop_input_outputs": {
  "data": {
   "lineno": 736
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._depthwise_conv2d_native_outputs": {
  "data": {
   "lineno": 658
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._dilation2d_backprop_filter_outputs": {
  "data": {
   "lineno": 827
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._dilation2d_backprop_input_outputs": {
  "data": {
   "lineno": 862
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._dilation2d_outputs": {
  "data": {
   "lineno": 772
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._elu_grad": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._elu_outputs": {
  "data": {
   "lineno": 897
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._fractional_avg_pool_grad": {
  "data": {
   "lineno": 1013
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._fractional_avg_pool_outputs": {
  "data": {
   "lineno": 940
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._fractional_max_pool_grad": {
  "data": {
   "lineno": 1159
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._fractional_max_pool_outputs": {
  "data": {
   "lineno": 1061
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._fused_resize_and_pad_conv2d_outputs": {
  "data": {
   "lineno": 1204
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._in_top_k_outputs": {
  "data": {
   "lineno": 1257
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._l2_loss_outputs": {
  "data": {
   "lineno": 1294
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._log_softmax": {
  "data": {
   "lineno": 1392
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._lrn_grad": {
  "data": {
   "lineno": 1359
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._lrn_outputs": {
  "data": {
   "lineno": 1316
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._max_pool": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._max_pool3d_grad_outputs": {
  "data": {
   "lineno": 1471
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._max_pool3d_outputs": {
  "data": {
   "lineno": 1444
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._max_pool_grad": {
  "data": {
   "lineno": 1506
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._max_pool_grad_with_argmax": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._max_pool_with_argmax_outputs": {
  "data": {
   "lineno": 1577
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._op_def_lib": {
  "data": {
   "lineno": 4587
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._relu6": {
  "data": {
   "lineno": 1636
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._relu6_grad": {
  "data": {
   "lineno": 1653
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._relu_grad": {
  "data": {
   "lineno": 1675
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._relu_outputs": {
  "data": {
   "lineno": 1616
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._softmax": {
  "data": {
   "lineno": 1698
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._softmax_cross_entropy_with_logits": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._SoftmaxCrossEntropyWithLogitsOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._softplus_grad": {
  "data": {
   "lineno": 1768
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._softplus_outputs": {
  "data": {
   "lineno": 1748
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._softsign_grad": {
  "data": {
   "lineno": 1807
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._softsign_outputs": {
  "data": {
   "lineno": 1787
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_nn_ops._sparse_softmax_cross_entropy_with_logits": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._SparseSoftmaxCrossEntropyWithLogitsOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._top_k": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": [
    "input",
    "sorted",
    "tensorflow.python.ops.gen_nn_ops._TopKOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops._top_kv2": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "input",
    "sorted",
    "tensorflow.python.ops.gen_nn_ops._TopKV2Output"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.avg_pool3d": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.avg_pool3d_grad": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.bias_add_grad": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_nn_ops.conv2d": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.conv2d_backprop_filter": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.conv2d_backprop_input": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "filter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.conv3d": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.conv3d_backprop_filter": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.conv3d_backprop_filter_v2": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.conv3d_backprop_input": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.conv3d_backprop_input_v2": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "filter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.depthwise_conv2d_native": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.depthwise_conv2d_native_backprop_filter": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.depthwise_conv2d_native_backprop_input": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "filter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.dilation2d": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.dilation2d_backprop_filter": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.dilation2d_backprop_input": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.elu": {
  "data": {
   "lineno": 900
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.fractional_avg_pool": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._FractionalAvgPoolOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.fractional_max_pool": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._FractionalMaxPoolOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.fused_resize_and_pad_conv2d": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "filter",
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.in_top_k": {
  "data": {
   "lineno": 1260
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.l2_loss": {
  "data": {
   "lineno": 1297
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.lrn": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.max_pool3d": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.max_pool3d_grad": {
  "data": {
   "lineno": 1474
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.max_pool_with_argmax": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "input",
    "tensorflow.python.ops.gen_nn_ops._MaxPoolWithArgmaxOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_nn_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_nn_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_nn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_nn_ops.relu": {
  "data": {
   "lineno": 1619
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.softplus": {
  "data": {
   "lineno": 1751
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.softsign": {
  "data": {
   "lineno": 1790
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_nn_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_parsing_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_parsing_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_parsing_ops.__parse_example_outputs",
    "tensorflow.python.ops.gen_parsing_ops.__parse_single_sequence_example_outputs",
    "tensorflow.python.ops.gen_parsing_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_parsing_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops._ParseExampleOutput": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops._ParseSingleSequenceExampleOutput": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops.__parse_example_outputs": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops.__parse_single_sequence_example_outputs": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops._decode_csv_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops._decode_json_example_outputs": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops._decode_raw_outputs": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops._op_def_lib": {
  "data": {
   "lineno": 737
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops._parse_example": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_parsing_ops._ParseExampleOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops._parse_single_sequence_example": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_parsing_ops._ParseSingleSequenceExampleOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops._parse_tensor_outputs": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops._string_to_number_outputs": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_parsing_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_parsing_ops.decode_csv": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops.decode_json_example": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops.decode_raw": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_parsing_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_parsing_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_parsing_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_parsing_ops.parse_tensor": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops.string_to_number": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_parsing_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_random_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_random_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_random_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops.__parameterized_truncated_normal_outputs": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops.__random_gamma_outputs": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops.__random_shuffle_outputs": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops.__random_standard_normal_outputs": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops.__random_uniform_int_outputs": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops.__random_uniform_outputs": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops.__truncated_normal_outputs": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops._multinomial_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops._op_def_lib": {
  "data": {
   "lineno": 693
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_random_ops._parameterized_truncated_normal": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops._random_gamma": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops._random_shuffle": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops._random_standard_normal": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops._random_uniform": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops._random_uniform_int": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops._truncated_normal": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_random_ops.multinomial": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_random_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_random_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_random_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_random_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_random_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_script_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_script_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_script_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_script_ops.__py_func_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_script_ops.__py_func_stateless_outputs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_script_ops._op_def_lib": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_script_ops._py_func": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_script_ops._py_func_stateless": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_script_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_script_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_script_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_script_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_script_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_script_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_sparse_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_sparse_ops.__deserialize_many_sparse_outputs",
    "tensorflow.python.ops.gen_sparse_ops.__sparse_add_grad_outputs",
    "tensorflow.python.ops.gen_sparse_ops.__sparse_add_outputs",
    "tensorflow.python.ops.gen_sparse_ops.__sparse_concat_outputs",
    "tensorflow.python.ops.gen_sparse_ops.__sparse_reorder_outputs",
    "tensorflow.python.ops.gen_sparse_ops.__sparse_reshape_outputs",
    "tensorflow.python.ops.gen_sparse_ops.__sparse_split_outputs",
    "tensorflow.python.ops.gen_sparse_ops._sparse_reduce_sum_sparse_outputs",
    "tensorflow.python.ops.gen_sparse_ops._sparse_sparse_maximum_outputs",
    "tensorflow.python.ops.gen_sparse_ops._sparse_sparse_minimum_outputs",
    "tensorflow.python.ops.gen_sparse_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_sparse_ops._DeserializeManySparseOutput": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseAddGradOutput": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseAddOutput": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseConcatOutput": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseReduceSumSparseOutput": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseReorderOutput": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseReshapeOutput": {
  "data": {
   "lineno": 568
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseSparseMaximumOutput": {
  "data": {
   "lineno": 660
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseSparseMinimumOutput": {
  "data": {
   "lineno": 701
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._SparseSplitOutput": {
  "data": {
   "lineno": 742
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__deserialize_many_sparse_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__serialize_many_sparse_outputs": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__serialize_sparse_outputs": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_add_grad_outputs": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_add_outputs": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_concat_outputs": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_reorder_outputs": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_reshape_outputs": {
  "data": {
   "lineno": 565
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_split_outputs": {
  "data": {
   "lineno": 739
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_tensor_dense_add_outputs": {
  "data": {
   "lineno": 795
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_tensor_dense_mat_mul_outputs": {
  "data": {
   "lineno": 823
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops.__sparse_to_dense_outputs": {
  "data": {
   "lineno": 867
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._deserialize_many_sparse": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._DeserializeManySparseOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._op_def_lib": {
  "data": {
   "lineno": 1799
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._serialize_many_sparse": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._serialize_sparse": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_add": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseAddOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_add_grad": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseAddGradOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_concat": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseConcatOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_dense_cwise_add_outputs": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_dense_cwise_div_outputs": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_dense_cwise_mul_outputs": {
  "data": {
   "lineno": 388
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_reduce_sum_outputs": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_reduce_sum_sparse_outputs": {
  "data": {
   "lineno": 470
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_reorder": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseReorderOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_reshape": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseReshapeOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_softmax_outputs": {
  "data": {
   "lineno": 615
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_sparse_maximum_outputs": {
  "data": {
   "lineno": 657
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_sparse_minimum_outputs": {
  "data": {
   "lineno": 698
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_split": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseSplitOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_tensor_dense_add": {
  "data": {
   "lineno": 798
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_tensor_dense_mat_mul": {
  "data": {
   "lineno": 826
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops._sparse_to_dense": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_sparse_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_sparse_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_sparse_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_sparse_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_add": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_div": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_mul": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_reduce_sum": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_reduce_sum_sparse": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseReduceSumSparseOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_softmax": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_sparse_maximum": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseSparseMaximumOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.sparse_sparse_minimum": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._SparseSparseMinimumOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_sparse_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_state_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_state_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_state_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.__destroy_temporary_variable_outputs": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops.__temporary_variable_outputs": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops.__variable_outputs": {
  "data": {
   "lineno": 463
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._assign_add_outputs": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._assign_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._assign_sub_outputs": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._count_up_to_outputs": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._destroy_temporary_variable": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops._is_variable_initialized_outputs": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._op_def_lib": {
  "data": {
   "lineno": 1034
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._scatter_add_outputs": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._scatter_div_outputs": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._scatter_mul_outputs": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._scatter_sub_outputs": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._scatter_update_outputs": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_state_ops._temporary_variable": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops._variable": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.assign": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.assign_add": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.assign_sub": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_state_ops.count_up_to": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.is_variable_initialized": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_state_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_state_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_state_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_state_ops.scatter_add": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.scatter_div": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.scatter_mul": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.scatter_sub": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.scatter_update": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_state_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_string_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_string_ops._InitOpDefLibrary",
    "tensorflow.python.ops.gen_string_ops.__string_split_outputs",
    "tensorflow.python.ops.gen_string_ops.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_string_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops._StringSplitOutput": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops.__string_split_outputs": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._as_string_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._decode_base64_outputs": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._encode_base64_outputs": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._op_def_lib": {
  "data": {
   "lineno": 552
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._reduce_join_outputs": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._string_join_outputs": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._string_split": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "input",
    "tensorflow.python.ops.gen_string_ops._StringSplitOutput"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops._string_to_hash_bucket_fast_outputs": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._string_to_hash_bucket_outputs": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops._string_to_hash_bucket_strong_outputs": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_string_ops.as_string": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_string_ops.decode_base64": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.encode_base64": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_string_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_string_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_string_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_string_ops.reduce_join": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.string_join": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.string_to_hash_bucket": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.string_to_hash_bucket_fast": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.string_to_hash_bucket_strong": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_string_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_user_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.ops.gen_user_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gen_user_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_user_ops.__fact_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_user_ops._fact": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.ops.gen_user_ops._op_def_lib": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gen_user_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_user_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_user_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_user_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_user_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gen_user_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.gradient_checker._compute_dx_and_dy": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.gradients.gradients"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker._compute_gradient": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "list",
    "numpy.asfarray",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.random_sample",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.gradient_checker._compute_numeric_jacobian",
    "tensorflow.python.ops.gradient_checker._compute_theoretical_jacobian"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker._compute_gradient_list": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "tensorflow.python.ops.gradient_checker._compute_dx_and_dy",
    "tensorflow.python.ops.gradient_checker._compute_gradient",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker._compute_numeric_jacobian": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.zeros",
    "range",
    "tensorflow.python.ops.gradient_checker._product",
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker._compute_theoretical_jacobian": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.any",
    "numpy.zeros",
    "range",
    "str",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.get_default_session",
    "tensorflow.python.ops.gradient_checker._product",
    "tensorflow.python.platform.tf_logging.vlog",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker._product": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.compute_gradient": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.ops.gradient_checker._compute_dx_and_dy",
    "tensorflow.python.ops.gradient_checker._compute_gradient",
    "tensorflow.python.ops.gradient_checker._compute_gradient_list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker.compute_gradient_error": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "isinstance",
    "numpy.fabs",
    "numpy.maximum",
    "tensorflow.python.ops.gradient_checker.compute_gradient",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradient_checker.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.gradients": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradient_checker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.register_tensor_conversion_function",
    "tensorflow.python.ops.gradients._IndexedSlicesToTensor"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.gradients.AggregationMethod": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.gradients._AccumulatorShape": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_shape.unknown_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._AggregatedGrads": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "enumerate",
    "isinstance",
    "len",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape",
    "tensorflow.python.framework.tensor_shape.is_fully_defined",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.control_flow_ops.IsLoopSwitch",
    "tensorflow.python.ops.gradients.AggregationMethod",
    "tensorflow.python.ops.gradients._AccumulatorShape",
    "tensorflow.python.ops.gradients._GetGrads",
    "tensorflow.python.ops.gradients._HandleNestedIndexedSlices",
    "tensorflow.python.ops.gradients._MultiDeviceAddN",
    "tensorflow.python.ops.gradients.collections",
    "tensorflow.python.ops.math_ops._as_indexed_slices_list",
    "tensorflow.python.ops.math_ops.accumulate_n",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._AsList": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._DefaultGradYs": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "_maybe_colocate_with",
    "len",
    "six.moves.xrange",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._GatherInputs": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.python.ops.gradients.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._GetGrad": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._GetGrads": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "len",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._HandleNestedIndexedSlices": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.array_ops.gather"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._HasAnyNotNoneGrads": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "_GetGrads",
    "any",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.gradients.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._IndexedSlicesToTensor": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.prod",
    "str",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.gradients._LARGE_SPARSE_NUM_ELEMENTS",
    "tensorflow.python.ops.gradients.warnings",
    "tensorflow.python.ops.math_ops.unsorted_segment_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._IsTrainable": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._LARGE_SPARSE_NUM_ELEMENTS": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tensorflow.python.ops.gradients._LogOpGradients": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "_FilterGrad",
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._LogOpGradients._FilterGrad": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._MarkReachedOps": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.python.ops.gradients.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._MultiDeviceAddN": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "sorted",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.gradients.collections",
    "tensorflow.python.ops.gradients.six",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._MultiDeviceAddN.DeviceKey": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._PendingCount": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.MaybeCreateControlFlowState",
    "tensorflow.python.ops.gradients._MarkReachedOps",
    "tensorflow.python.ops.gradients.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._SetGrad": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "six.moves.xrange",
    "tensorflow.python.ops.control_flow_ops.IsLoopSwitch"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._StopOps": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._UpdatePendingAndEnqueueReady": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "_SetGrad",
    "tensorflow.python.ops.control_flow_ops.IsLoopExit",
    "tensorflow.python.ops.control_flow_ops.IsLoopSwitch",
    "tensorflow.python.ops.gradients._HasAnyNotNoneGrads",
    "tensorflow.python.ops.gradients._IsTrainable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._VerifyGeneratedGradients": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.as_dtype"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._hessian_vector_product": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.ops.array_ops.stop_gradient",
    "tensorflow.python.ops.gradients.gradients",
    "tensorflow.python.ops.math_ops.mul",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients._maybe_colocate_with": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.gradients.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.array_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.array_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.control_flow_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.functional_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.functional_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.gradients": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "LookupError",
    "_AggregatedGrads",
    "_GetGrad",
    "_LogOpGradients",
    "_SetGrad",
    "_UpdatePendingAndEnqueueReady",
    "any",
    "enumerate",
    "grad_fn",
    "isinstance",
    "len",
    "set",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.get_gradient_function",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.ZerosLikeOutsideLoop",
    "tensorflow.python.ops.control_flow_ops.tuple",
    "tensorflow.python.ops.functional_ops._symbolic_gradient",
    "tensorflow.python.ops.gradients._AsList",
    "tensorflow.python.ops.gradients._DefaultGradYs",
    "tensorflow.python.ops.gradients._IsTrainable",
    "tensorflow.python.ops.gradients._PendingCount",
    "tensorflow.python.ops.gradients._StopOps",
    "tensorflow.python.ops.gradients._VerifyGeneratedGradients",
    "tensorflow.python.ops.gradients._maybe_colocate_with",
    "tensorflow.python.ops.gradients.collections",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.gradients.image_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.image_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.linalg_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.math_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.math_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tensorflow.python.ops.gradients.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.histogram_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops.histogram_fixed_width": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.clip_ops.clip_by_value",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.to_float",
    "tensorflow.python.ops.math_ops.truediv",
    "tensorflow.python.ops.math_ops.unsorted_segment_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.histogram_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.histogram_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.image_grad._CropAndResizeGrad": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_image_ops.crop_and_resize_grad_boxes",
    "tensorflow.python.ops.gen_image_ops.crop_and_resize_grad_image"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_grad._CropAndResizeGradImageShape": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_grad._ResizeBilinearGrad": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_image_ops._resize_bilinear_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_grad._ResizeNearestNeighborGrad": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_image_ops._resize_nearest_neighbor_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_grad._ResizeShape": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad.gen_image_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_image_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.ops.image_ops.__all__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.image_ops.ResizeMethod": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.image_ops._Check3DImage": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.check_ops.assert_positive"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops._CheckAtLeast3DImage": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops._ImageDimensions": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.unpack",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops._ResizeShape": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.__all__": {
  "data": {
   "lineno": 1339
  },
  "type": "constant"
 },
 "tensorflow.python.ops.image_ops._assert": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_is_tensor",
    "ex_type",
    "tensorflow.python.ops.control_flow_ops.Assert"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops._crop_and_resize_shape": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops._extract_glimpse_shape": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops._is_tensor": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops._random_crop_shape": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.adjust_brightness": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "convert_image_dtype",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.adjust_contrast": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "convert_image_dtype",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_image_ops._adjust_contrastv2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.adjust_hue": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.gen_image_ops.hsv_to_rgb",
    "tensorflow.python.ops.gen_image_ops.rgb_to_hsv",
    "tensorflow.python.ops.image_ops.convert_image_dtype",
    "tensorflow.python.ops.math_ops.mod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.adjust_saturation": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.clip_ops.clip_by_value",
    "tensorflow.python.ops.gen_image_ops.hsv_to_rgb",
    "tensorflow.python.ops.gen_image_ops.rgb_to_hsv",
    "tensorflow.python.ops.image_ops.convert_image_dtype"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.central_crop": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.math_ops.div"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.convert_image_dtype": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.saturate_cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.crop_to_bounding_box": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.image_ops._ImageDimensions",
    "tensorflow.python.ops.image_ops._assert",
    "tensorflow.python.ops.image_ops._is_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.flip_left_right": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.image_ops._Check3DImage"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.flip_up_down": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.image_ops._Check3DImage"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.gen_image_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_image_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.gen_nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.grayscale_to_rgb": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.tile"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.pad_to_bounding_box": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.pad",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.image_ops._ImageDimensions",
    "tensorflow.python.ops.image_ops._assert",
    "tensorflow.python.ops.image_ops._is_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.per_image_whitening": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_nn_ops.relu",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.math_ops.rsqrt",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.random_brightness": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "ValueError",
    "adjust_brightness",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.random_contrast": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ValueError",
    "adjust_contrast",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.random_flip_left_right": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.random_flip_up_down": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.random_hue": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "ValueError",
    "adjust_hue",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.random_saturation": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "ValueError",
    "adjust_saturation",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.resize_image_with_crop_or_pad": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "ValueError",
    "equal_",
    "max_",
    "min_",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.image_ops._ImageDimensions",
    "tensorflow.python.ops.image_ops._assert",
    "tensorflow.python.ops.image_ops._is_tensor",
    "tensorflow.python.ops.image_ops.crop_to_bounding_box",
    "tensorflow.python.ops.image_ops.pad_to_bounding_box"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.resize_image_with_crop_or_pad.equal_": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "tensorflow.python.ops.image_ops._is_tensor",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.resize_image_with_crop_or_pad.max_": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "max",
    "tensorflow.python.ops.image_ops._is_tensor",
    "tensorflow.python.ops.math_ops.maximum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.resize_image_with_crop_or_pad.min_": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "min",
    "tensorflow.python.ops.image_ops._is_tensor",
    "tensorflow.python.ops.math_ops.minimum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.resize_images": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.tensor_util.constant_value_as_shape",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.gen_image_ops.resize_area",
    "tensorflow.python.ops.gen_image_ops.resize_bicubic",
    "tensorflow.python.ops.gen_image_ops.resize_bilinear",
    "tensorflow.python.ops.gen_image_ops.resize_nearest_neighbor",
    "tensorflow.python.ops.image_ops.ResizeMethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.rgb_to_grayscale": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.image_ops.convert_image_dtype",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.rot90": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.case",
    "tensorflow.python.ops.image_ops._Check3DImage",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.mod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.rot90._rot180": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reverse"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.rot90._rot270": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.array_ops.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.rot90._rot90": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.array_ops.transpose"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.image_ops.transpose_image": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.image_ops._Check3DImage"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.image_ops.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.init_ops._RandomWalkInitializer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.init_ops._RandomWalkInitializer.__call__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.random_ops._random_walk"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops._RandomWalkInitializer.__init__": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops._assert_float_dtype": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops._random_walk": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "float",
    "len",
    "max",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.init_ops.math",
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.random_ops.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.constant_initializer": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.constant_initializer._initializer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.ones_initializer": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.random_normal_initializer": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.random_normal_initializer._initializer": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops._assert_float_dtype",
    "tensorflow.python.ops.random_ops.random_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.init_ops.random_uniform_initializer": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.random_uniform_initializer._initializer": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.truncated_normal_initializer": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.truncated_normal_initializer._initializer": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops._assert_float_dtype",
    "tensorflow.python.ops.random_ops.truncated_normal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.uniform_unit_scaling_initializer": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.uniform_unit_scaling_initializer._initializer": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "float",
    "max",
    "tensorflow.python.ops.init_ops._assert_float_dtype",
    "tensorflow.python.ops.init_ops.math",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.init_ops.zeros_initializer": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.io_ops.FixedLengthRecordReader": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops.ReaderBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.io_ops.FixedLengthRecordReader.__init__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.ops.gen_io_ops._fixed_length_record_reader",
    "tensorflow.python.ops.io_ops.FixedLengthRecordReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.IdentityReader": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops.ReaderBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.io_ops.IdentityReader.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.ops.gen_io_ops._identity_reader",
    "tensorflow.python.ops.io_ops.IdentityReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.__init__": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.num_records_produced": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._reader_num_records_produced"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.num_work_units_completed": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._reader_num_work_units_completed"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.read": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.gen_io_ops._reader_read"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.read_up_to": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.gen_io_ops._reader_read_up_to"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.reader_ref": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.reset": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._reader_reset"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.restore_state": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._reader_restore_state"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.serialize_state": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._reader_serialize_state"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.ReaderBase.supports_serialize": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.TFRecordReader": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops.ReaderBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.io_ops.TFRecordReader.__init__": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.lib.io.python_io.TFRecordOptions.get_compression_type_string",
    "tensorflow.python.ops.gen_io_ops._tf_record_reader",
    "tensorflow.python.ops.io_ops.TFRecordReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.TextLineReader": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops.ReaderBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.io_ops.TextLineReader.__init__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.ops.gen_io_ops._text_line_reader",
    "tensorflow.python.ops.io_ops.TextLineReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.WholeFileReader": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops.ReaderBase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.io_ops.WholeFileReader.__init__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.ops.gen_io_ops._whole_file_reader",
    "tensorflow.python.ops.io_ops.WholeFileReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops._restore_slice": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.ops.gen_io_ops._restore_slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops._save": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._save",
    "tensorflow.python.ops.gen_io_ops._save_slices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.io_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.io_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.io_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.io_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.io_ops.gen_io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_io_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.io_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.io_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.io_ops.python_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.python_io"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.linalg_grad._CholeskyGrad": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.linalg_ops.cholesky_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_grad._MatrixDeterminantGrad": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.linalg_ops.matrix_inverse"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_grad._MatrixInverseGrad": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_grad._MatrixSolveGrad": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.linalg_ops.matrix_solve",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_grad._MatrixTriangularSolveGrad": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.linalg_ops.matrix_triangular_solve",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_grad._SelfAdjointEigV2Grad": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.matrix_band_part",
    "tensorflow.python.ops.array_ops.matrix_diag",
    "tensorflow.python.ops.array_ops.matrix_diag_part",
    "tensorflow.python.ops.array_ops.matrix_set_diag",
    "tensorflow.python.ops.array_ops.matrix_transpose",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.batch_matmul",
    "tensorflow.python.ops.math_ops.inv"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad.linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.linalg_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops.cholesky_solve": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_linalg_ops.matrix_triangular_solve"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops.gen_linalg_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_linalg_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops.matrix_solve_ls": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_linalg_ops._matrix_solve_ls"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.linalg_ops.self_adjoint_eig": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_linalg_ops._self_adjoint_eig_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_ops.self_adjoint_eigvals": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_linalg_ops._self_adjoint_eig_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.linalg_ops.svd": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_linalg_ops._svd",
    "tensorflow.python.ops.math_ops.real"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.logging_ops.Print": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_logging_ops._print"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops._Collect": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.add_to_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops._PrintGrad": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "list",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.logging_ops.audio_summary": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_logging_ops._audio_summary",
    "tensorflow.python.ops.logging_ops._Collect"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.logging_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.logging_ops.gen_logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_logging_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.logging_ops.get_summary_op": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARY_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.logging_ops.merge_all_summaries"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops.histogram_summary": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_logging_ops._histogram_summary",
    "tensorflow.python.ops.logging_ops._Collect"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops.image_summary": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_logging_ops._image_summary",
    "tensorflow.python.ops.logging_ops._Collect"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops.merge_all_summaries": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.logging_ops.merge_summary"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops.merge_summary": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_logging_ops._merge_summary",
    "tensorflow.python.ops.logging_ops._Collect"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.logging_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.logging_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.logging_ops.scalar_summary": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_logging_ops._scalar_summary",
    "tensorflow.python.ops.logging_ops._Collect"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.NotDifferentiable"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.math_grad._AbsGrad": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.sign"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._AcosGrad": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.inv",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._AddGrad": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._AddNGrad": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._AsinGrad": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.inv",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._AtanGrad": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.inv",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._BatchMatMul": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.batch_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._CastGrad": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.bfloat16",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ComplexAbsGrad": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.complex",
    "tensorflow.python.ops.math_ops.sign"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ComplexGrad": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.imag",
    "tensorflow.python.ops.math_ops.real",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ConjGrad": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._CosGrad": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.sin"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._CrossGrad": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.cross"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._CumprodGrad": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.cumprod",
    "tensorflow.python.ops.math_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._CumsumGrad": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._DigammaGrad": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.polygamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._DivGrad": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ErfGrad": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ErfcGrad": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ExpGrad": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._FFT2DGrad": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._FFTSizeForGrad",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.complex",
    "tensorflow.python.ops.math_ops.ifft2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._FFT3DGrad": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._FFTSizeForGrad",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.complex",
    "tensorflow.python.ops.math_ops.ifft3d"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._FFTGrad": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._FFTSizeForGrad",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.complex",
    "tensorflow.python.ops.math_ops.ifft"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._FFTSizeForGrad": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.reduce_prod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._FloorGrad": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._IFFT2DGrad": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._FFTSizeForGrad",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.complex",
    "tensorflow.python.ops.math_ops.fft2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._IFFT3DGrad": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._FFTSizeForGrad",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.complex",
    "tensorflow.python.ops.math_ops.fft3d"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._IFFTGrad": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._FFTSizeForGrad",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.complex",
    "tensorflow.python.ops.math_ops.fft"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._IgammaGrad": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._IgammacGrad": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._IgammaGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ImagGrad": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.complex"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._InvGrad": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_math_ops._inv_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._InvGradGrad": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.gen_math_ops._inv_grad",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._LgammaGrad": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.digamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._LogGrad": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.inv"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MatMulGrad": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MaxGrad": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._MinOrMaxGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MaximumGrad": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._MaximumMinimumGrad",
    "tensorflow.python.ops.math_ops.greater_equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MaximumMinimumGrad": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "selector_op",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MeanGrad": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_grad._SumGrad",
    "tensorflow.python.ops.math_grad._safe_shape_div",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_prod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MinGrad": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._MinOrMaxGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MinOrMaxGrad": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.reduced_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MinimumGrad": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._MaximumMinimumGrad",
    "tensorflow.python.ops.math_ops.less_equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._MulGrad": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._NegGrad": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._PolygammaGrad": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.polygamma",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._PowGrad": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.not_equal",
    "tensorflow.python.ops.math_ops.pow",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ProdGrad": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.invert_permutation",
    "tensorflow.python.ops.array_ops.listdiff",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_grad._safe_shape_div",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.cumprod",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.math_ops.reduced_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._RealGrad": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.complex"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._RsqrtGrad": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_math_ops._rsqrt_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._RsqrtGradGrad": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.gen_math_ops._rsqrt_grad",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SegmentMaxGrad": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._SegmentMinOrMaxGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SegmentMeanGrad": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.segment_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SegmentMinGrad": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_grad._SegmentMinOrMaxGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SegmentMinOrMaxGrad": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.segment_sum",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SegmentSumGrad": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.gather"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SelectGrad": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SigmoidGrad": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.gen_math_ops._sigmoid_grad",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SigmoidGradGrad": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.gen_math_ops._sigmoid_grad",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SignGrad": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SinGrad": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.cos"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SparseMatMulGrad": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "_SparseMatMul",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SparseMatMulGrad._SparseMatMul": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SparseSegmentMeanGrad": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.sparse_segment_mean_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SparseSegmentSqrtNGrad": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.sparse_segment_sqrt_n_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SparseSegmentSumGrad": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.unsorted_segment_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SqrtGrad": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_math_ops._sqrt_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SqrtGradGrad": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SquareGrad": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SquaredDifferenceGrad": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.scalar_mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SubGrad": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._SumGrad": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array_equal",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.tensor_util.MakeNdarray",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.math_grad._safe_shape_div",
    "tensorflow.python.ops.math_ops.reduced_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._TanGrad": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.cos",
    "tensorflow.python.ops.math_ops.inv",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._TanhGrad": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.gen_math_ops._tanh_grad",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._TanhGradGrad": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.gen_math_ops._tanh_grad",
    "tensorflow.python.ops.math_ops.conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._UnsortedSegmentSumGrad": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.gather"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._ZetaGrad": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_array_ops._broadcast_gradient_args",
    "tensorflow.python.ops.math_ops.conj",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.zeta"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad._safe_shape_div": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.maximum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.gen_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.gen_math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_grad.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.int8",
    "tensorflow.python.framework.dtypes.uint16",
    "tensorflow.python.framework.dtypes.uint8",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor._override_operator",
    "tensorflow.python.ops.gen_math_ops._batch_mat_mul",
    "tensorflow.python.ops.gen_math_ops._sparse_mat_mul",
    "tensorflow.python.ops.gen_math_ops.add",
    "tensorflow.python.ops.gen_math_ops.arg_max",
    "tensorflow.python.ops.gen_math_ops.arg_min",
    "tensorflow.python.ops.gen_math_ops.div",
    "tensorflow.python.ops.gen_math_ops.greater",
    "tensorflow.python.ops.gen_math_ops.greater_equal",
    "tensorflow.python.ops.gen_math_ops.less",
    "tensorflow.python.ops.gen_math_ops.less_equal",
    "tensorflow.python.ops.gen_math_ops.lin_space",
    "tensorflow.python.ops.gen_math_ops.logical_and",
    "tensorflow.python.ops.gen_math_ops.logical_not",
    "tensorflow.python.ops.gen_math_ops.logical_or",
    "tensorflow.python.ops.gen_math_ops.mod",
    "tensorflow.python.ops.gen_math_ops.neg",
    "tensorflow.python.ops.gen_math_ops.sub",
    "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_div",
    "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_mul",
    "tensorflow.python.ops.math_ops._OverrideBinaryOperatorHelper",
    "tensorflow.python.ops.math_ops._mul_dispatch",
    "tensorflow.python.ops.math_ops._sparse_dense_truediv",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.floordiv",
    "tensorflow.python.ops.math_ops.logical_xor",
    "tensorflow.python.ops.math_ops.pow",
    "tensorflow.python.ops.math_ops.truediv"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.math_ops._ArgOpShape": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._BroadcastShape": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.broadcast_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._LinspaceShape": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._OverrideBinaryOperatorHelper": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "AttributeError",
    "func.__doc__",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._OverrideBinaryOperatorHelper.binary_op_wrapper": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._OverrideBinaryOperatorHelper.binary_op_wrapper_sparse": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "func",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._OverrideBinaryOperatorHelper.r_binary_op_wrapper": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "func",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._RangeShape": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._ReductionDims": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._ReductionShape": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._SparseSegmentReductionGradShape": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._TRUEDIV_TABLE": {
  "data": {
   "lineno": 786
  },
  "type": "constant"
 },
 "tensorflow.python.ops.math_ops._UnsortedSegmentSumShape": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._as_indexed_slices": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.array_ops.shape_internal",
    "tensorflow.python.ops.math_ops.range",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._as_indexed_slices_list": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.math_ops._as_indexed_slices",
    "tensorflow.python.ops.math_ops.cast",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._calc_mat_mul_flops": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._calc_mat_mul_weight_parameters": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._mul_dispatch": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.gen_math_ops.mul",
    "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops._sparse_dense_truediv": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_div",
    "tensorflow.python.ops.math_ops._TRUEDIV_TABLE",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.abs": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._abs",
    "tensorflow.python.ops.gen_math_ops.complex_abs"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.accumulate_n": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "len",
    "list",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.framework.tensor_shape.vector",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.gen_control_flow_ops._merge",
    "tensorflow.python.ops.gen_state_ops._destroy_temporary_variable",
    "tensorflow.python.ops.gen_state_ops._temporary_variable",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.state_ops.assign_add",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.add_n": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "len",
    "list",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.gen_math_ops._add_n",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.argmax": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "tensorflow.python.ops.math_ops.argmin": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "tensorflow.python.ops.math_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.batch_matmul": {
  "data": {
   "lineno": 1401
  },
  "type": "constant"
 },
 "tensorflow.python.ops.math_ops.cast": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.complex": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.complex128",
    "tensorflow.python.framework.dtypes.complex64",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._complex"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.complex_abs": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops.complex_abs"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.conj": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._conj"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.cumprod": {
  "data": {
   "lineno": 1678,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.cumprod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.cumsum": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.erf": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.erf"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.floordiv": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.div",
    "tensorflow.python.ops.gen_math_ops.floor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.gen_control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.gen_data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.gen_math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.gen_sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.gen_state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.graph_util": {
  "data": {
   "shadows": "tensorflow.python.framework.graph_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.imag": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "input",
    "input.dtype.real_dtype",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.imag"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.linspace": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "tensorflow.python.ops.math_ops.logical_xor": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops.logical_and",
    "tensorflow.python.ops.gen_math_ops.logical_not",
    "tensorflow.python.ops.gen_math_ops.logical_or"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.matmul": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "sparse_matmul",
    "tensorflow.python.framework.dtypes.bfloat16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._mat_mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.neg": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.neg"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.pow": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._pow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.range": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.real": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "input",
    "input.dtype.base_dtype",
    "input.dtype.real_dtype",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.real"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_all": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._all",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_any": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._any",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_logsumexp": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.stop_gradient",
    "tensorflow.python.ops.gen_math_ops.exp",
    "tensorflow.python.ops.gen_math_ops.log",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_max": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._max",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_mean": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._mean",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_min": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._min",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_prod": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._prod",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduce_sum": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_math_ops._sum",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.reduced_shape": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.gen_data_flow_ops.dynamic_stitch",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.to_int32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.round": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.gen_math_ops.floor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.saturate_cast": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.maximum",
    "tensorflow.python.ops.gen_math_ops.minimum",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.scalar_mul": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.sigmoid": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._sigmoid"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.sign": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.sign"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.sparse_matmul": {
  "data": {
   "lineno": 1400
  },
  "type": "constant"
 },
 "tensorflow.python.ops.math_ops.sqrt": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.square": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.tanh": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops._tanh"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.math_ops.to_bfloat16": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.bfloat16",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.to_double": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.to_float": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.to_int32": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.to_int64": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.trace": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.diag_part",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.math_ops.truediv": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_math_ops.div",
    "tensorflow.python.ops.math_ops._TRUEDIV_TABLE",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.ops.nn.__all__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.nn.__all__": {
  "data": {
   "lineno": 1273
  },
  "type": "constant"
 },
 "tensorflow.python.ops.nn._compute_sampled_logits": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.candidate_sampling_ops.compute_accidental_hits",
    "tensorflow.python.ops.candidate_sampling_ops.log_uniform_candidate_sampler",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.nn._sum_rows",
    "tensorflow.python.ops.sparse_ops.sparse_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn._sum_rows": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.batch_norm_with_global_normalization": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn.batch_normalization"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.batch_normalization": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.rsqrt"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.candidate_sampling_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.candidate_sampling_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.depthwise_conv2d": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "filter",
    "input",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn_ops.depthwise_conv2d_native"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.embedding_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.embedding_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.l2_normalize": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.rsqrt",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.log_poisson_loss": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.ops.nn.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.moments": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.nn.normalize_moments",
    "tensorflow.python.ops.nn.sufficient_statistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.nce_loss": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn._compute_sampled_logits",
    "tensorflow.python.ops.nn._sum_rows",
    "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.nn_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.normalize_moments": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.inv",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.numerics": {
  "data": {
   "shadows": "tensorflow.python.ops.numerics"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.relu_layer": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.nn_ops.bias_add",
    "tensorflow.python.ops.nn_ops.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.sampled_softmax_loss": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn._compute_sampled_logits",
    "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.separable_conv2d": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "input",
    "input.get_shape",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn_ops.conv2d",
    "tensorflow.python.ops.nn_ops.depthwise_conv2d_native"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.seq2seq": {
  "data": {
   "shadows": "tensorflow.python.ops.seq2seq"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.sigmoid": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops.sigmoid"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.sufficient_statistics": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "list",
    "set",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.squared_difference",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.tanh": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops.tanh"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.weighted_cross_entropy_with_logits": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.nn_ops.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn.zero_fraction": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_mean"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.nn_grad._AvgPool3DGrad": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.avg_pool3d_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._AvgPoolGrad": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_nn_ops._avg_pool_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._BatchNormWithGlobalNormalizationGrad": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._batch_norm_with_global_normalization_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._BiasAddGrad": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops.bias_add_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._BiasAddGradV1": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._BroadcastMul": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Conv2DBackpropFilterGrad": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.conv2d",
    "tensorflow.python.ops.nn_ops.conv2d_backprop_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Conv2DBackpropInputGrad": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.conv2d",
    "tensorflow.python.ops.nn_ops.conv2d_backprop_filter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Conv2DGrad": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.conv2d_backprop_filter",
    "tensorflow.python.ops.nn_ops.conv2d_backprop_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Conv3DBackpropFilterGrad": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.conv3d",
    "tensorflow.python.ops.nn_ops.conv3d_backprop_input_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Conv3DBackpropInputGrad": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.conv3d",
    "tensorflow.python.ops.nn_ops.conv3d_backprop_filter_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Conv3DGrad": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.conv3d_backprop_filter_v2",
    "tensorflow.python.ops.nn_ops.conv3d_backprop_input_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._DepthwiseConv2dNativeGrad": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_filter",
    "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Dilation2DGrad": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.nn_ops.dilation2d_backprop_filter",
    "tensorflow.python.ops.nn_ops.dilation2d_backprop_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._EluGrad": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._elu_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._FractionalAvgPoolGrad": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._fractional_avg_pool_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._FractionalMaxPoolGrad": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._fractional_max_pool_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._L2LossGrad": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._LRNGrad": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._lrn_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._LogSoftmaxGrad": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._MaxPool3DGrad": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.nn_ops.max_pool3d_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._MaxPoolGrad": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._max_pool_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._Relu6Grad": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._relu6_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._ReluGrad": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._relu_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._ReluGradGrad": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.gen_nn_ops._relu_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._SoftmaxCrossEntropyWithLogitsGrad": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.nn_grad._BroadcastMul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._SoftmaxGrad": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._SoftplusGrad": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._softplus_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._SoftsignGrad": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_nn_ops._softsign_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._SparseSoftmaxCrossEntropyWithLogitsGrad": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.nn_grad._BroadcastMul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad._TopKGrad": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.sparse_ops.sparse_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.gen_nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_grad.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.ops.gen_nn_ops.lrn"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.nn_ops._AvgPoolGradShape": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._Conv2DBackpropFilterShape": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._Conv2DBackpropInputShape": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._DepthwiseConv2dNativeBackpropFilterShape": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._DepthwiseConv2dNativeBackpropInputShape": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._FusedResizeAndPadConv2DShape": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "tensorflow.python.framework.common_shapes.get2d_conv_output_size",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.matrix",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.framework.tensor_util.constant_value"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._TopKV2Shape": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_bias_add_flops": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.prod",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_bias_add_weight_params": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "numpy.prod",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_conv_flops": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_conv_weight_params": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_depthwise_conv_flops": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_depthwise_conv_weight_params": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_dilation2d_flops": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._calc_dilation2d_weight_params": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.framework.graph_util.tensor_shape_from_node_def_name",
    "tensorflow.python.framework.ops.OpStats",
    "tensorflow.python.framework.ops.RegisterStatistics"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._flatten_outer_dims": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._fractional_avg_pool_grad_shape": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._softmax": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "_swap_axis",
    "compute_op",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.nn_ops._flatten_outer_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops._softmax._swap_axis": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.atrous_conv2d": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.batch_to_space",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.space_to_batch",
    "tensorflow.python.ops.gen_nn_ops.conv2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.avg_pool": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_nn_ops._avg_pool"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.bias_add": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_nn_ops._bias_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.bias_add_v1": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_nn_ops._bias_add_v1"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.conv1d": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.gen_nn_ops.conv2d"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.conv2d_transpose": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "filter",
    "filter.get_shape",
    "isinstance",
    "list",
    "numpy.ndarray",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.vector",
    "tensorflow.python.ops.gen_nn_ops.conv2d_backprop_input"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.conv3d_transpose": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "filter",
    "filter.get_shape",
    "isinstance",
    "list",
    "numpy.ndarray",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.vector",
    "tensorflow.python.ops.gen_nn_ops.conv3d_backprop_input_v2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.crelu": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.gen_nn_ops.relu"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.dropout": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.scalar",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.nn_ops.numbers",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.erosion2d": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reverse",
    "tensorflow.python.ops.gen_nn_ops.dilation2d",
    "tensorflow.python.ops.math_ops.neg"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.gen_nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.graph_util": {
  "data": {
   "shadows": "tensorflow.python.framework.graph_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.local_response_normalization": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tensorflow.python.ops.nn_ops.log_softmax": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._log_softmax",
    "tensorflow.python.ops.nn_ops._softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.max_pool": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_nn_ops._max_pool"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.relu6": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_nn_ops._relu6"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.softmax": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_nn_ops._softmax",
    "tensorflow.python.ops.nn_ops._softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "_move_dim_to_end",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.gen_nn_ops._softmax_cross_entropy_with_logits",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.sub",
    "tensorflow.python.ops.nn_ops._flatten_outer_dims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits._move_dim_to_end": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.sparse_softmax_cross_entropy_with_logits": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.gen_nn_ops._sparse_softmax_cross_entropy_with_logits",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.nn_ops.top_k": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "input",
    "sorted",
    "tensorflow.python.ops.gen_nn_ops._top_kv2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.xw_plus_b": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.nn_ops.bias_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.nn_ops.xw_plus_b_v1": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.nn_ops.bias_add_v1"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.numerics": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.numerics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.numerics.add_check_numerics_ops": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.array_ops.check_numerics",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.numerics.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.numerics.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.numerics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.numerics.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.numerics.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.numerics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.numerics.verify_tensor_all_finite": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.check_numerics",
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.FixedLenSequenceFeature"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.parsing_ops.FixedLenFeature": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.ops.parsing_ops.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.parsing_ops.FixedLenSequenceFeature": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.ops.parsing_ops.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.parsing_ops.VarLenFeature": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.python.ops.parsing_ops.collections"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.parsing_ops._features_to_raw_params": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sorted",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.FixedLenSequenceFeature",
    "tensorflow.python.ops.parsing_ops.VarLenFeature"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops._parse_example_raw": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "set",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.gen_parsing_ops._parse_example",
    "tensorflow.python.ops.parsing_ops.re",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops._parse_single_example_raw": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.parsing_ops._parse_example_raw",
    "tensorflow.python.ops.parsing_ops.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops._parse_single_sequence_example_raw": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "set",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.gen_parsing_ops._parse_single_sequence_example",
    "tensorflow.python.ops.parsing_ops.re",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.gen_parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_parsing_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.parse_example": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "_parse_example_raw",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tensorflow.python.ops.parsing_ops._features_to_raw_params"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops.parse_single_example": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "_parse_single_example_raw",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tensorflow.python.ops.parsing_ops._features_to_raw_params"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops.parse_single_sequence_example": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "_parse_single_sequence_example_raw",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.FixedLenSequenceFeature",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tensorflow.python.ops.parsing_ops._features_to_raw_params"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.parsing_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.ops.parsing_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.partitioned_variables.__all__": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tensorflow.python.ops.partitioned_variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables.create_partitioned_variables": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variable_scope._get_partitioned_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.partitioned_variables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner._partitioner": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.partitioned_variables.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables.min_max_variable_partitioner": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "tensorflow.python.ops.partitioned_variables.min_max_variable_partitioner._partitioner": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "max",
    "min",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.partitioned_variables.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.partitioned_variables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.partitioned_variables.variable_axis_size_partitioner": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.partitioned_variables.variable_axis_size_partitioner._partitioner": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "max",
    "min",
    "tensorflow.python.framework.dtypes.DType",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.partitioned_variables.math"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.partitioned_variables.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.unchanged_shape",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.random_ops._MultinomialShape": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops._RandomGammaShape": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops._RandomShape": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops._ShapeTensor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.gen_random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_random_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.multinomial": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_random_ops.multinomial"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.parameterized_truncated_normal": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_random_ops._parameterized_truncated_normal",
    "tensorflow.python.ops.random_ops._ShapeTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.random_crop": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.reduce_all",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.random_gamma": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.gen_random_ops._random_gamma"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.random_normal": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_random_ops._random_standard_normal",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.random_ops._ShapeTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tensorflow.python.ops.random_ops.random_shuffle": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_random_ops._random_shuffle"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.random_uniform": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_random_ops._random_uniform",
    "tensorflow.python.ops.gen_random_ops._random_uniform_int",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.random_ops._ShapeTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.random_ops.truncated_normal": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.random_seed.get_seed",
    "tensorflow.python.ops.gen_random_ops._truncated_normal",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.random_ops._ShapeTensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell._state_size_with_prefix"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.rnn._dynamic_rnn_loop": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "ValueError",
    "_create_ta",
    "_create_zero_arrays",
    "cell.output_size",
    "cell.state_size",
    "int",
    "isinstance",
    "len",
    "range",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.rnn._infer_state_dtype",
    "tensorflow.python.ops.rnn._state_size_with_prefix",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._dynamic_rnn_loop._create_ta": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._dynamic_rnn_loop._create_zero_arrays": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.rnn._infer_state_dtype",
    "tensorflow.python.ops.rnn._state_size_with_prefix"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._dynamic_rnn_loop._time_step": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "call_cell",
    "cell",
    "tensorflow.python.ops.rnn._rnn_step",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._infer_state_dtype": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._reverse_seq": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "reversed",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reverse_sequence",
    "tensorflow.python.ops.array_ops.unpack",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._rnn_step": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "_copy_some_through",
    "call_cell",
    "len",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.util.nest.assert_same_structure",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._rnn_step._copy_one_through": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.select"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._rnn_step._copy_some_through": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "_copy_one_through",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._rnn_step._maybe_copy_some_through": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "_copy_some_through",
    "call_cell",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.util.nest.assert_same_structure",
    "tensorflow.python.util.nest.flatten"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn._state_size_with_prefix": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.python.ops.rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.bidirectional_dynamic_rnn": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "TypeError",
    "dynamic_rnn",
    "isinstance",
    "tensorflow.python.ops.array_ops.reverse_sequence",
    "tensorflow.python.ops.rnn_cell.RNNCell",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.bidirectional_rnn": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.rnn._reverse_seq",
    "tensorflow.python.ops.rnn.rnn",
    "tensorflow.python.ops.rnn_cell.RNNCell",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.dynamic_rnn": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_assert_has_shape",
    "_dynamic_rnn_loop",
    "cell",
    "cell.zero_state",
    "isinstance",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.to_int32",
    "tensorflow.python.ops.rnn_cell.RNNCell",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.dynamic_rnn._assert_has_shape": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.raw_rnn": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "cell",
    "cell.output_size",
    "cell.state_size",
    "enumerate",
    "isinstance",
    "len",
    "loop_fn",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.rnn._state_size_with_prefix",
    "tensorflow.python.ops.rnn_cell.RNNCell",
    "tensorflow.python.ops.tensor_array_ops.TensorArray",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.assert_same_structure",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.raw_rnn.body": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "_copy_some_through",
    "cell",
    "cell.output_size",
    "loop_fn",
    "tensorflow.python.ops.math_ops.logical_or",
    "tensorflow.python.util.nest.assert_same_structure",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.raw_rnn.body._copy_some_through": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.select",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.raw_rnn.condition": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.reduce_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.rnn": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_create_zero_output",
    "_rnn_step",
    "call_cell",
    "cell",
    "cell.state_size",
    "enumerate",
    "isinstance",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.math_ops.to_int32",
    "tensorflow.python.ops.rnn_cell.RNNCell",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.rnn._create_zero_output": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.rnn._infer_state_dtype",
    "tensorflow.python.ops.rnn._state_size_with_prefix"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.state_saving_rnn": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "cell",
    "cell.state_size",
    "len",
    "str",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.rnn.rnn",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn.tensor_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.tensor_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.rnn_cell.BasicLSTMCell": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.BasicLSTMCell.__call__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "_linear",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.BasicLSTMCell.__init__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.BasicLSTMCell.output_size": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.BasicLSTMCell.state_size": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "property",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.BasicRNNCell": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.BasicRNNCell.__call__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "_linear",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.BasicRNNCell.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.BasicRNNCell.output_size": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.BasicRNNCell.state_size": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.DropoutWrapper": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.DropoutWrapper.__call__": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "tensorflow.python.ops.nn_ops.dropout"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.DropoutWrapper.__init__": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "isinstance",
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.DropoutWrapper.output_size": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.DropoutWrapper.state_size": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.EmbeddingWrapper": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.EmbeddingWrapper.__call__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.init_ops.random_uniform_initializer",
    "tensorflow.python.ops.rnn_cell.math",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.EmbeddingWrapper.__init__": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.EmbeddingWrapper.output_size": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.EmbeddingWrapper.state_size": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.GRUCell": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.GRUCell.__call__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "_linear",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.GRUCell.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.GRUCell.output_size": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.GRUCell.state_size": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.InputProjectionWrapper": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.InputProjectionWrapper.__call__": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "_linear",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.InputProjectionWrapper.__init__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.ops.rnn_cell.RNNCell",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.InputProjectionWrapper.output_size": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.InputProjectionWrapper.state_size": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.LSTMCell": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.LSTMCell.__call__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.clip_ops.clip_by_value",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.sigmoid",
    "tensorflow.python.ops.nn_ops.bias_add",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple",
    "tensorflow.python.ops.rnn_cell._get_concat_variable",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.LSTMCell.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.ops.rnn_cell.LSTMStateTuple",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.LSTMCell.output_size": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.LSTMCell.state_size": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.LSTMStateTuple": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell._LSTMStateTuple"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.LSTMStateTuple.dtype": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "TypeError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.MultiRNNCell": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.MultiRNNCell.__call__": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "ValueError",
    "cell",
    "enumerate",
    "len",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.is_sequence",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.MultiRNNCell.__init__": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "str",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.MultiRNNCell.output_size": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.MultiRNNCell.state_size": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "property",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper.__call__": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "_linear",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper.__init__": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper.output_size": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper.state_size": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.RNNCell": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell.RNNCell.__call__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.RNNCell.output_size": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.RNNCell.state_size": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.RNNCell.zero_state": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.rnn_cell._state_size_with_prefix",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._LSTMStateTuple": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "tensorflow.python.ops.rnn_cell._SlimRNNCell": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.rnn_cell._SlimRNNCell.__call__": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._SlimRNNCell.__init__": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._SlimRNNCell.output_size": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._SlimRNNCell.state_size": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._get_concat_variable": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "_get_sharded_variable",
    "len",
    "tensorflow.python.framework.ops.GraphKeys.CONCATENATED_VARIABLES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._get_sharded_variable": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "range",
    "tensorflow.python.ops.rnn_cell.math",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._linear": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "str",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell._state_size_with_prefix": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "tensorflow.python.framework.tensor_shape.as_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.rnn_cell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.embedding_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.embedding_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.sigmoid": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops.sigmoid"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.tanh": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops.tanh"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.rnn_cell.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape",
    "tensorflow.python.ops.script_ops.FuncRegistry",
    "tensorflow.python.ops.script_ops._py_funcs",
    "tensorflow.python.pywrap_tensorflow.InitializePyTrampoline"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.script_ops.CleanupFunc": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.script_ops.CleanupFunc.__del__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.ops.script_ops._py_funcs"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.CleanupFunc.__init__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry.__call__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry._convert": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.asarray",
    "object",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry._next_unique_token": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry.insert": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry.remove": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.FuncRegistry.size": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops._py_funcs": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "tensorflow.python.ops.script_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops.gen_script_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_script_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.script_ops.py_func": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.gen_script_ops._py_func",
    "tensorflow.python.ops.gen_script_ops._py_func_stateless",
    "tensorflow.python.ops.script_ops.CleanupFunc",
    "tensorflow.python.ops.script_ops._py_funcs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.script_ops.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.rnn_cell._linear"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.seq2seq._extract_argmax_and_embed": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq._extract_argmax_and_embed.loop_function": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.stop_gradient",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.nn_ops.xw_plus_b"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.attention_decoder": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError",
    "attention",
    "cell",
    "cell.output_size",
    "enumerate",
    "loop_function",
    "six.moves.xrange",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.nn_ops.conv2d",
    "tensorflow.python.ops.seq2seq.linear",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.attention_decoder.attention": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.tanh",
    "tensorflow.python.ops.nn_ops.softmax",
    "tensorflow.python.ops.seq2seq.linear",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.basic_rnn_seq2seq": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "cell",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.rnn.rnn",
    "tensorflow.python.ops.seq2seq.rnn_decoder",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.embedding_attention_decoder": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "cell",
    "cell.output_size",
    "loop_function",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.seq2seq._extract_argmax_and_embed",
    "tensorflow.python.ops.seq2seq.attention_decoder",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.embedding_attention_seq2seq": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "bool",
    "cell",
    "cell.output_size",
    "decoder",
    "isinstance",
    "len",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.rnn.rnn",
    "tensorflow.python.ops.rnn_cell.EmbeddingWrapper",
    "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper",
    "tensorflow.python.ops.seq2seq.embedding_attention_decoder",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.embedding_attention_seq2seq.decoder": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "cell",
    "tensorflow.python.ops.seq2seq.embedding_attention_decoder",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.embedding_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.embedding_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.embedding_rnn_decoder": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "cell",
    "loop_function",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.seq2seq._extract_argmax_and_embed",
    "tensorflow.python.ops.seq2seq.rnn_decoder",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.embedding_rnn_seq2seq": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "bool",
    "cell",
    "decoder",
    "isinstance",
    "len",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.rnn.rnn",
    "tensorflow.python.ops.rnn_cell.EmbeddingWrapper",
    "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper",
    "tensorflow.python.ops.seq2seq.embedding_rnn_decoder",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.embedding_rnn_seq2seq.decoder": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "cell",
    "tensorflow.python.ops.seq2seq.embedding_rnn_decoder",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.embedding_tied_rnn_seq2seq": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "bool",
    "cell",
    "cell.zero_state",
    "decoder",
    "isinstance",
    "len",
    "loop_function",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.embedding_ops.embedding_lookup",
    "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper",
    "tensorflow.python.ops.seq2seq._extract_argmax_and_embed",
    "tensorflow.python.ops.seq2seq.tied_rnn_seq2seq",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.embedding_tied_rnn_seq2seq.decoder": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "cell",
    "loop_function",
    "tensorflow.python.ops.seq2seq._extract_argmax_and_embed",
    "tensorflow.python.ops.seq2seq.tied_rnn_seq2seq",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.linear": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "tensorflow.python.ops.seq2seq.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.model_with_buckets": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "seq2seq",
    "softmax_loss_function",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.seq2seq.sequence_loss",
    "tensorflow.python.ops.seq2seq.sequence_loss_by_example",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.one2many_rnn_seq2seq": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "bool",
    "cell",
    "filled_embedding_rnn_decoder",
    "isinstance",
    "len",
    "str",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.rnn.rnn",
    "tensorflow.python.ops.rnn_cell.EmbeddingWrapper",
    "tensorflow.python.ops.rnn_cell.OutputProjectionWrapper",
    "tensorflow.python.ops.seq2seq.embedding_rnn_decoder",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.pack_sequence_as"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.one2many_rnn_seq2seq.filled_embedding_rnn_decoder": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "tensorflow.python.ops.seq2seq.embedding_rnn_decoder",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.rnn": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.rnn_cell": {
  "data": {
   "shadows": "tensorflow.python.ops.rnn_cell"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.rnn_decoder": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "cell",
    "enumerate",
    "loop_function",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.sequence_loss": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "softmax_loss_function",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.seq2seq.sequence_loss_by_example"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.sequence_loss_by_example": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "six.moves.zip",
    "softmax_loss_function",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.ops.nn_ops.sparse_softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.shape": {
  "data": {
   "shadows": "tensorflow.python.shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.tied_rnn_seq2seq": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "cell",
    "loop_function",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.rnn.rnn",
    "tensorflow.python.ops.seq2seq.rnn_decoder",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.seq2seq.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.seq2seq.zip": {
  "data": {
   "shadows": "six.moves.zip"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.session_ops.TensorHandle": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.session_ops.TensorHandle.__del__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.util.compat.as_str_any"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle.__str__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle._get_deleter_key": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle._get_device_name": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.framework.device.canonical_name",
    "tensorflow.python.util.compat.as_str_any"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle._get_mover_key": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.ops.session_ops.TensorHandle"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle._get_reader_key": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle.delete": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "_get_handle_deleter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle.eval": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "_get_handle_reader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle.get_raw_handle": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.TensorHandle.handle": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops._get_handle_deleter": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.gen_data_flow_ops._delete_session_tensor",
    "tensorflow.python.ops.session_ops.TensorHandle"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops._get_handle_feeder": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops._get_handle_mover": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_data_flow_ops._get_session_handle",
    "tensorflow.python.ops.session_ops.TensorHandle",
    "tensorflow.python.ops.session_ops._get_handle_feeder",
    "tensorflow.python.ops.session_ops._get_handle_reader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops._get_handle_reader": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.gen_data_flow_ops._get_session_tensor",
    "tensorflow.python.ops.session_ops.TensorHandle",
    "tensorflow.python.ops.session_ops._register_handle_feeder"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops._register_handle_feeder": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.delete_session_tensor": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.gen_data_flow_ops._delete_session_tensor",
    "tensorflow.python.ops.session_ops.TensorHandle"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.gen_data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.get_session_handle": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.gen_data_flow_ops._get_session_handle"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.get_session_tensor": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_register_handle_feeder",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.gen_data_flow_ops._get_session_tensor",
    "tensorflow.python.ops.session_ops.TensorHandle"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.session_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.session_ops.pydev": {
  "data": {
   "shadows": "tensorflow.python.framework.device"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.NotDifferentiable"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.sparse_grad._SparseAddGrad": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.gen_sparse_ops._sparse_add_grad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseDenseCwiseAddGrad": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseDenseCwiseDivGrad": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.sparse_grad._SparseDenseCwiseMulOrDivGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseDenseCwiseMulGrad": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.sparse_grad._SparseDenseCwiseMulOrDivGrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseDenseCwiseMulOrDivGrad": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.dtypes.int64",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.gather_nd",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.sparse_ops.sparse_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseReduceSumGrad": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.gather_nd",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.reduced_shape",
    "tensorflow.python.ops.math_ops.to_int64"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseReorderGrad": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.invert_permutation",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.sparse_ops.sparse_reorder"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseSoftmaxGrad": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.sparse_ops.sparse_dense_cwise_add",
    "tensorflow.python.ops.sparse_ops.sparse_reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseSparseMaximumGrad": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseSparseMinimumGrad": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.python.framework.ops.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseTensorDenseAddGrad": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.array_ops.gather_nd"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad._SparseTensorDenseMatMulGrad": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.dtypes.complex128",
    "tensorflow.python.framework.ops.dtypes.complex64",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_dense_matmul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad.gen_sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_grad.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.sparse_ops._SparseToDenseShape": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensor.from_value",
    "tensorflow.python.framework.ops.SparseTensorValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensors": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.deserialize_many_sparse": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.gen_sparse_ops._deserialize_many_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.gen_sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.sparse_ops.serialize_many_sparse": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._serialize_many_sparse",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.serialize_sparse": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._serialize_sparse",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_add": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "any",
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.SparseTensorValue",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.gen_sparse_ops._sparse_add",
    "tensorflow.python.ops.gen_sparse_ops._sparse_tensor_dense_add",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_concat": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.gen_sparse_ops._sparse_concat",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensors"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_dense_cwise_add": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.gen_sparse_ops.sparse_dense_cwise_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_fill_empty_rows": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.list_diff",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor",
    "tensorflow.python.ops.sparse_ops.sparse_reorder",
    "tensorflow.python.ops.sparse_ops.sparse_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_maximum": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_sparse_ops.sparse_sparse_maximum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_merge": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor",
    "tensorflow.python.ops.sparse_ops.sparse_reorder"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_minimum": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_sparse_ops.sparse_sparse_minimum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_reduce_sum": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops.sparse_reduce_sum",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_reduce_sum_sparse": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.gen_sparse_ops.sparse_reduce_sum_sparse",
    "tensorflow.python.ops.math_ops._ReductionDims"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_reorder": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.gen_sparse_ops._sparse_reorder",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_reset_shape": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.check_ops.assert_equal",
    "tensorflow.python.ops.check_ops.assert_less_equal",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_reshape": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.gen_sparse_ops._sparse_reshape",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_retain": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_softmax": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_sparse_ops.sparse_softmax"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_split": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.gen_sparse_ops._sparse_split",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_tensor_dense_matmul": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_sparse_ops._sparse_tensor_dense_mat_mul",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor",
    "tensorflow.python.ops.sparse_ops.sparse_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_to_dense": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_sparse_ops._sparse_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_to_indicator": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "sparse_merge",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.sparse_ops._convert_to_sparse_tensor",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.sparse_ops.sparse_transpose": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.op_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.sparse_ops.sparse_reorder"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.special_math_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.special_math_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.einsum": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "set",
    "sorted",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.special_math_ops.re",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.special_math_ops.lbeta": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "empty_lbeta",
    "nonempty_lbeta",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.check_ops.assert_rank_at_least",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.special_math_ops.lbeta.empty_lbeta": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.check_ops.assert_rank_at_least"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.special_math_ops.lbeta.nonempty_lbeta": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.lgamma",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.special_math_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.special_math_ops.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.standard_ops.Assert": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.Assert"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.array_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.array_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.assign": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.assign"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.assign_add": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.assign_add"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.assign_sub": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.assign_sub"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.case": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.case"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.cond": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.cond"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.count_up_to": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.count_up_to"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.data_flow_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.group": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.group"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.math_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.math_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.no_op": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.no_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.py_func": {
  "data": {
   "shadows": "tensorflow.python.ops.script_ops.py_func"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.scatter_add": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.scatter_add"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.scatter_div": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.scatter_div"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.scatter_mul": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.scatter_mul"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.scatter_sub": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.scatter_sub"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.scatter_update": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops.scatter_update"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.sparse_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.state_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.state_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.tensor_array_grad": {
  "data": {
   "shadows": "tensorflow.python.ops.tensor_array_grad"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.tuple": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.tuple"
  },
  "type": "import"
 },
 "tensorflow.python.ops.standard_ops.while_loop": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops.while_loop"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.NotDifferentiable"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.state_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_grad.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.state_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_ops.gen_state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_ops.init_variable": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "callable",
    "init",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_state_ops.assign"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.state_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.state_ops.variable_op": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_state_ops._variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.string_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.string_ops._ReduceJoinShape": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.string_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.gen_string_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_string_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.ops.string_ops.string_split": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.gen_string_ops._string_split",
    "tensorflow.python.ops.string_ops.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.summary_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.NotDifferentiable",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.summary_ops._Collect": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.add_to_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.summary_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.summary_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.summary_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.summary_ops.gen_logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_logging_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.summary_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.summary_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.summary_ops.tensor_summary": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_logging_ops._tensor_summary",
    "tensorflow.python.ops.summary_ops._Collect"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.template": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.template.Template": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.template.Template.__call__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.template.Template.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.template.traceback",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.template.Template._call_func": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "len",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.template._skip_common_stack_elements",
    "tensorflow.python.ops.template.traceback",
    "tensorflow.python.platform.tf_logging.info",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.template.Template.var_scope": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.template.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.python.ops.template._skip_common_stack_elements": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.template.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.template.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.template.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.python.ops.template.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.template.make_template": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Template",
    "tensorflow.python.ops.template.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.template.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.template.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.template.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "tensorflow.python.ops.template.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_grad": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.NotDifferentiable"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.tensor_array_grad._GetGradSource": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArrayConcatGrad": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArrayGatherGrad": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArrayPackGrad": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArrayReadGrad": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArrayScatterGrad": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArraySplitGrad": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArrayUnpackGrad": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad._TensorArrayWriteGrad": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.RegisterGradient",
    "tensorflow.python.ops.tensor_array_grad._GetGradSource",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_grad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_grad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_grad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_grad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_grad.tensor_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.tensor_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray._legacy_pack": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_pack"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray._legacy_unpack": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_unpack",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.close": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_close"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.concat": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_concat"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.dtype": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.flow": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.gather": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_gather"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.grad": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_grad",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.handle": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.pack": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.read": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_read"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.scatter": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_scatter",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.size": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.split": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_shape.unknown_shape",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_split",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.unpack": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops.TensorArray.write": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.gen_data_flow_ops._tensor_array_write",
    "tensorflow.python.ops.tensor_array_ops.TensorArray"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.tensor_array_ops._dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.gen_data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.tensor_array_ops.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.ops.variable_scope.VariableScope": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.__init__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "custom_getter",
    "initializer",
    "partitioner",
    "regularizer",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope._get_partitioned_variable": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "ValueError",
    "collections",
    "initializer",
    "partitioner",
    "regularizer",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.caching_device": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.custom_getter": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.dtype": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.get_variable": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "collections",
    "custom_getter",
    "initializer",
    "partitioner",
    "regularizer",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.initializer": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.name": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.original_name_scope": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.partitioner": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.regularizer": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.reuse": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.reuse_variables": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.set_caching_device": {
  "data": {
   "lineno": 792
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.set_custom_getter": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "custom_getter"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.set_dtype": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.set_initializer": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "initializer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.set_partitioner": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "partitioner"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.VariableScope.set_regularizer": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "regularizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._PartitionInfo": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.variable_scope._PartitionInfo.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.Sequence",
    "isinstance",
    "len",
    "six.moves.xrange",
    "tensorflow.python.ops.variable_scope.six",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._PartitionInfo.full_shape": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._PartitionInfo.single_offset": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._PartitionInfo.single_slice_dim": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.Sequence",
    "isinstance",
    "len",
    "six.moves.xrange",
    "tensorflow.python.ops.variable_scope.six",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._PartitionInfo.var_offset": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VARSCOPE_KEY": {
  "data": {
   "lineno": 909
  },
  "type": "constant"
 },
 "tensorflow.python.ops.variable_scope._VARSTORE_KEY": {
  "data": {
   "lineno": 908
  },
  "type": "constant"
 },
 "tensorflow.python.ops.variable_scope._VariableStore": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.variable_scope._VariableStore.__init__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VariableStore._get_partitioned_variable": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ValueError",
    "_compute_slice_dim_and_shape",
    "any",
    "callable",
    "collections",
    "collections.Sequence",
    "isinstance",
    "len",
    "partitioner",
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.init_ops.uniform_unit_scaling_initializer",
    "tensorflow.python.ops.variable_scope._PartitionInfo",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.python.ops.variables.Variable.SaveSliceInfo"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VariableStore._get_single_variable": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "collections",
    "format",
    "initializer",
    "regularizer",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.as_shape",
    "tensorflow.python.ops.init_ops.uniform_unit_scaling_initializer",
    "tensorflow.python.ops.variable_scope.traceback",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VariableStore.close_variable_subscopes": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VariableStore.get_variable": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "_true_getter",
    "callable",
    "collections",
    "custom_getter",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VariableStore.get_variable._true_getter": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "collections",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VariableStore.open_variable_scope": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._VariableStore.variable_scope_count": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.python.ops.variable_scope._compute_slice_dim_and_shape": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._get_default_variable_store": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variable_scope._VARSTORE_KEY",
    "tensorflow.python.ops.variable_scope._VariableStore"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._get_partitioned_variable": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "ValueError",
    "collections",
    "initializer",
    "partitioner",
    "regularizer",
    "tensorflow.python.ops.variable_scope._get_default_variable_store",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._get_unique_variable_scope": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope._get_default_variable_store",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope._pure_variable_scope": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "custom_getter",
    "initializer",
    "isinstance",
    "partitioner",
    "regularizer",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.get_collection_ref",
    "tensorflow.python.ops.variable_scope.VariableScope",
    "tensorflow.python.ops.variable_scope._VARSCOPE_KEY",
    "tensorflow.python.ops.variable_scope._get_default_variable_store",
    "tensorflow.python.ops.variable_scope.contextlib",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.collections_lib": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.get_local_variable": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.ops.variable_scope.functools",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.get_variable": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "collections",
    "custom_getter",
    "initializer",
    "partitioner",
    "regularizer",
    "tensorflow.python.ops.variable_scope._get_default_variable_store",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.get_variable_scope": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variable_scope.VariableScope",
    "tensorflow.python.ops.variable_scope._VARSCOPE_KEY"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.no_regularizer": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.variable_op_scope": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "custom_getter",
    "initializer",
    "partitioner",
    "regularizer",
    "tensorflow.python.ops.variable_scope.contextlib",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.variable_scope": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "custom_getter",
    "initializer",
    "isinstance",
    "partitioner",
    "regularizer",
    "tensorflow.python.framework.ops._get_graph_from_inputs",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.variable_scope.VariableScope",
    "tensorflow.python.ops.variable_scope._get_unique_variable_scope",
    "tensorflow.python.ops.variable_scope._pure_variable_scope",
    "tensorflow.python.ops.variable_scope.contextlib",
    "tensorflow.python.ops.variable_scope.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variable_scope.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variable_scope.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.core.framework.variable_pb2.VariableDef",
    "tensorflow.python.framework.ops.GraphKeys.MOVING_AVERAGE_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.register_dense_tensor_like_type",
    "tensorflow.python.framework.ops.register_proto_function",
    "tensorflow.python.framework.ops.register_tensor_conversion_function",
    "tensorflow.python.ops.variables.PartitionedVariable",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.ops.variables.PartitionedVariable": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.PartitionedVariableIterator": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.PartitionedVariableIterator.__init__": {
  "data": {
   "lineno": 786
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.PartitionedVariableIterator.__iter__": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.PartitionedVariableIterator.__next__": {
  "data": {
   "lineno": 793
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.PartitionedVariableIterator.next": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "StopIteration",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable._TensorConversionFunction": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.__init__": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "len",
    "list",
    "sorted",
    "str",
    "tensorflow.python.ops.variables.Variable",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.__iter__": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.__len__": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable._concat": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "str",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable._get_partitions": {
  "data": {
   "lineno": 951
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable._get_variable_list": {
  "data": {
   "lineno": 948
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable._partition_axes": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "all",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.as_tensor": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.control_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.assign": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.dtype": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.get_shape": {
  "data": {
   "lineno": 945
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.PartitionedVariable.name": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.variables.Variable.SaveSliceInfo": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.ops.variables.Variable.SaveSliceInfo.__init__": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.core.framework.variable_pb2.SaveSliceInfoDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.SaveSliceInfo.spec": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.SaveSliceInfo.to_proto": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "tensorflow.core.framework.variable_pb2.SaveSliceInfoDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._AsTensor": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._OverloadAllOperators": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "setattr",
    "staticmethod",
    "tensorflow.python.framework.ops.Tensor.OVERLOADABLE_OPERATORS",
    "tensorflow.python.ops.array_ops._SliceHelperVar",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._OverloadOperator": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "setattr",
    "staticmethod",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._OverloadOperator._run_op": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "getattr",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._TensorConversionFunction": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.__iter__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._as_graph_element": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._get_save_slice_info": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._init_from_args": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "initial_value",
    "isinstance",
    "list",
    "set",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.state_ops.variable_op",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._init_from_proto": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.core.framework.variable_pb2.VariableDef",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable._set_save_slice_info": {
  "data": {
   "lineno": 762
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.assign": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "tensorflow.python.ops.state_ops.assign"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.assign_add": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "tensorflow.python.ops.state_ops.assign_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.assign_sub": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "tensorflow.python.ops.state_ops.assign_sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.count_up_to": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "tensorflow.python.ops.state_ops.count_up_to"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.device": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.dtype": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.eval": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.from_proto": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.get_shape": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.graph": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.initial_value": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.initialized_value": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.identity"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.initializer": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.name": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.op": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.ref": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.scatter_sub": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.state_ops.scatter_sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.to_proto": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "tensorflow.core.framework.variable_pb2.VariableDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.Variable.value": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables._all_saveable_objects": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SAVEABLE_OBJECTS",
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.all_variables": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.assert_variables_initialized": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.array_ops.rank_internal",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.ops.variables.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.initialize_all_variables": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.ops.variables.initialize_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.initialize_local_variables": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.initialize_variables",
    "tensorflow.python.ops.variables.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.initialize_variables": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.control_flow_ops.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.is_variable_initialized": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "tensorflow.python.ops.state_ops.is_variable_initialized"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.local_variables": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.model_variables": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.moving_average_variables": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.MOVING_AVERAGE_VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.report_uninitialized_variables": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.boolean_mask",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.pack",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.state_ops.is_variable_initialized",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.ops.variables.local_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.ops.variables.trainable_variables": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.ops.variables.variable_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.variable_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.platform": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.platform.app": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.platform.app.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app.run": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "main",
    "tensorflow.python.platform.app.sys",
    "tensorflow.python.platform.flags.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.app.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.app.run",
    "tensorflow.python.platform.app_test.sys",
    "tensorflow.python.platform.flags.DEFINE_boolean",
    "tensorflow.python.platform.flags.FLAGS"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.app_test.FLAGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.python.platform.app_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app_test.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app_test.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app_test.main": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "print",
    "tensorflow.python.platform.app_test.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.app_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.app_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.benchmark.Benchmark": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "object",
    "tensorflow.python.platform.benchmark._BenchmarkRegistrar",
    "tensorflow.python.platform.benchmark.six"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.benchmark.Benchmark._get_name": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.platform.benchmark.Benchmark",
    "tensorflow.python.platform.benchmark.inspect",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark.Benchmark.is_abstract": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark.Benchmark.report_benchmark": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.python.platform.benchmark._global_report_benchmark"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark.GLOBAL_BENCHMARK_REGISTRY": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.python.platform.benchmark.TEST_REPORTER_TEST_ENV": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.python.platform.benchmark.TensorFlowBenchmark": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.python.platform.benchmark.Benchmark"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.benchmark.TensorFlowBenchmark.is_abstract": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark.TensorFlowBenchmark.run_op_benchmark": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "_median",
    "range",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.core.protobuf.config_pb2.RunOptions.FULL_TRACE",
    "tensorflow.python.client.timeline.Timeline",
    "tensorflow.python.platform.benchmark.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark.TensorFlowBenchmark.run_op_benchmark._median": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark._BenchmarkRegistrar": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.benchmark._BenchmarkRegistrar.__new__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.platform.benchmark.GLOBAL_BENCHMARK_REGISTRY",
    "tensorflow.python.platform.benchmark._BenchmarkRegistrar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark._global_report_benchmark": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "dict",
    "isinstance",
    "str",
    "tensorflow.core.util.test_log_pb2.BenchmarkEntries",
    "tensorflow.python.platform.benchmark.TEST_REPORTER_TEST_ENV",
    "tensorflow.python.platform.benchmark.numbers",
    "tensorflow.python.platform.benchmark.os",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.GFile",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark._run_benchmarks": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "benchmark",
    "callable",
    "dir",
    "getattr",
    "instance_benchmark_fn",
    "list",
    "tensorflow.python.platform.benchmark.GLOBAL_BENCHMARK_REGISTRY",
    "tensorflow.python.platform.benchmark.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.benchmarks_main": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "tensorflow.python.platform.app.run",
    "tensorflow.python.platform.benchmark._run_benchmarks",
    "tensorflow.python.platform.benchmark.sys",
    "true_main"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.benchmark.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.test_log_pb2": {
  "data": {
   "shadows": "tensorflow.core.util.test_log_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.platform.benchmark.timeline": {
  "data": {
   "shadows": "tensorflow.python.client.timeline"
  },
  "type": "import"
 },
 "tensorflow.python.platform.control_imports": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.platform.control_imports.OSS_APP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.python.platform.control_imports.OSS_FLAGS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tensorflow.python.platform.control_imports.OSS_GFILE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.python.platform.control_imports.OSS_GOOGLETEST": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.python.platform.control_imports.OSS_LOGGING": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.python.platform.control_imports.OSS_PARAMETERIZED": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tensorflow.python.platform.control_imports.USE_OSS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.python.platform.flags": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.platform.flags.DEFINE_boolean",
    "tensorflow.python.platform.flags._FlagValues",
    "tensorflow.python.platform.flags.argparse"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.flags.DEFINE_bool": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "tensorflow.python.platform.flags.DEFINE_boolean": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags._global_parser"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags.DEFINE_boolean.str2bool": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags.DEFINE_float": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "float",
    "tensorflow.python.platform.flags._define_helper"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags.DEFINE_integer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int",
    "tensorflow.python.platform.flags._define_helper"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags.DEFINE_string": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "str",
    "tensorflow.python.platform.flags._define_helper"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags.FLAGS": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "tensorflow.python.platform.flags._FlagValues": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.flags._FlagValues.__getattr__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags._FlagValues.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags._FlagValues.__setattr__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags._FlagValues._parse_flags": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags._global_parser",
    "vars"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags._define_helper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags._global_parser"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags._global_parser": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.python.platform.flags.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.app.run",
    "tensorflow.python.platform.flags.DEFINE_bool",
    "tensorflow.python.platform.flags.DEFINE_boolean",
    "tensorflow.python.platform.flags.DEFINE_float",
    "tensorflow.python.platform.flags.DEFINE_integer",
    "tensorflow.python.platform.flags.DEFINE_string",
    "tensorflow.python.platform.flags.FLAGS",
    "tensorflow.python.platform.flags_test.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.flags_test.FLAGS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tensorflow.python.platform.flags_test.FlagsTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags_test.unittest"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.flags_test.FlagsTest.testBool": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags_test.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags_test.FlagsTest.testBoolCommandLines": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags_test.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags_test.FlagsTest.testFloat": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags_test.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags_test.FlagsTest.testInt": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags_test.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags_test.FlagsTest.testString": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags_test.FLAGS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags_test.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags_test.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags_test.main": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.python.platform.flags_test.FlagsTest",
    "tensorflow.python.platform.flags_test.unittest"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.flags_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.flags_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tensorflow.python.platform.gfile": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.copy",
    "tensorflow.python.lib.io.file_io.create_dir",
    "tensorflow.python.lib.io.file_io.delete_file",
    "tensorflow.python.lib.io.file_io.delete_recursively",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.get_matching_files",
    "tensorflow.python.lib.io.file_io.is_directory",
    "tensorflow.python.lib.io.file_io.list_directory",
    "tensorflow.python.lib.io.file_io.recursive_create_dir",
    "tensorflow.python.lib.io.file_io.rename",
    "tensorflow.python.lib.io.file_io.stat",
    "tensorflow.python.lib.io.file_io.walk",
    "tensorflow.python.platform.gfile.GFile"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.gfile.Copy": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.DeleteRecursively": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.Exists": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.FastGFile": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.gfile.FastGFile.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.platform.gfile.FastGFile"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.gfile.GFile": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.FileIO"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.gfile.GFile.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.platform.gfile.GFile"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.gfile.Glob": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.IsDirectory": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.ListDirectory": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.MakeDirs": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.MkDir": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.Open": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.Remove": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.Rename": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.Stat": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.Walk": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tensorflow.python.platform.gfile.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.gfile.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.gfile.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.python.platform.gfile.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.platform.benchmark.TensorFlowBenchmark"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.googletest.Benchmark": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.python.platform.googletest.GetTempDir": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.inspect",
    "tensorflow.python.platform.googletest.os",
    "tensorflow.python.platform.googletest.tempfile"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StatefulSessionAvailable": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.CleanUp": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.Set": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "setattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.SmartSet": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "list",
    "setattr",
    "staticmethod",
    "tensorflow.python.platform.googletest.inspect"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.SmartUnsetAll": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "reversed",
    "setattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.UnsetAll": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "reversed",
    "setattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.__del__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.__enter__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.__exit__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.StubOutForTesting.__init__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.benchmark": {
  "data": {
   "shadows": "tensorflow.python.platform.benchmark"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.g_main": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "IOError",
    "TestLoader",
    "int",
    "open",
    "range",
    "tensorflow.python.platform.googletest.itertools",
    "tensorflow.python.platform.googletest.os",
    "tensorflow.python.platform.googletest.sys",
    "tensorflow.python.platform.googletest.unittest_main"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.g_main.getShardedTestCaseNames": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "delegate_get_names",
    "next",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.main": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.python.platform.benchmark.benchmarks_main",
    "tensorflow.python.platform.googletest.g_main"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.python.platform.googletest.test_src_dir_path": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.googletest.unittest_main": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.python.platform.logging_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.logging_test.EventLoaderTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.logging_test.EventLoaderTest.test_log": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.error"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.logging_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.logging_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.logging_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.platform.logging_test.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.platform.logging_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.parameterized": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.parameterized.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.parameterized.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.parameterized.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.platform.resource_loader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader.get_data_files_path": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.python.platform.resource_loader.inspect",
    "tensorflow.python.platform.resource_loader.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.resource_loader.get_path_to_datafile": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.python.platform.resource_loader.inspect",
    "tensorflow.python.platform.resource_loader.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.resource_loader.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader.load_resource": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.resource_loader.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader.readahead_file_path": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "tensorflow.python.platform.resource_loader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.resource_loader_test.DefaultResourceLoaderTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.platform.resource_loader_test.DefaultResourceLoaderTest.test_exception": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "IOError",
    "tensorflow.python.platform.resource_loader.load_resource"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.resource_loader_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader_test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.resource_loader_test.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.python.platform.status_bar": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.platform.status_bar.SetupStatusBarInsideGoogle": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "tensorflow.python.platform.status_bar.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.status_bar.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.status_bar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.sysconfig": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.platform.sysconfig.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.sysconfig.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.sysconfig.get_include": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tensorflow.__file__"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.sysconfig.get_lib": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.__file__"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.sysconfig.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.python.platform.sysconfig.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.sysconfig.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.googletest.Benchmark",
    "tensorflow.python.platform.test.__all__",
    "tensorflow.python.platform.test.sys",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.test.Benchmark": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "tensorflow.python.platform.test.TestCase": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util.TensorFlowTestCase"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.__all__": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "tensorflow.python.platform.test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.assert_equal_graph_def": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util.assert_equal_graph_def"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.compute_gradient": {
  "data": {
   "shadows": "tensorflow.python.ops.gradient_checker.compute_gradient"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.compute_gradient_error": {
  "data": {
   "shadows": "tensorflow.python.ops.gradient_checker.compute_gradient_error"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.device_lib": {
  "data": {
   "shadows": "tensorflow.python.client.device_lib"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.get_temp_dir": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.GetTempDir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.test.googletest": {
  "data": {
   "shadows": "tensorflow.python.platform.googletest"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.is_built_with_cuda": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.python.framework.test_util.IsGoogleCudaEnabled"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.test.is_gpu_available": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "any",
    "tensorflow.python.client.device_lib.list_local_devices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.test.main": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.main"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.test.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.test.test_src_dir_path": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.python.platform.googletest.test_src_dir_path"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.test.test_util": {
  "data": {
   "shadows": "tensorflow.python.framework.test_util"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging": {
  "data": {
   "symbols_in_volume": [
    "logging.DEBUG",
    "logging.ERROR",
    "logging.FATAL",
    "logging.INFO",
    "logging.WARN",
    "tensorflow.python.platform.tf_logging._handler",
    "tensorflow.python.platform.tf_logging._logger",
    "tensorflow.python.platform.tf_logging.google2_log_prefix",
    "tensorflow.python.platform.tf_logging.logging",
    "tensorflow.python.platform.tf_logging.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.platform.tf_logging.DEBUG": {
  "data": {
   "shadows": "logging.DEBUG"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.ERROR": {
  "data": {
   "shadows": "logging.ERROR"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.FATAL": {
  "data": {
   "shadows": "logging.FATAL"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.INFO": {
  "data": {
   "shadows": "logging.INFO"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.TaskLevelStatusMessage": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.error"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.WARN": {
  "data": {
   "shadows": "logging.WARN"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging._GetFileAndLine": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.sys"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging._GetNextLogCountPerToken": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging._log_counter_per_token"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging._THREAD_ID_MASK": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging._get_thread_id": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging._THREAD_ID_MASK",
    "tensorflow.python.platform.tf_logging.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging._handler": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging._level_names": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging._log_counter_per_token": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging._log_prefix": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging._logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.debug": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.error": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.fatal": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.flush": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.get_verbosity": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging._logger"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.google2_log_prefix": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "_get_thread_id",
    "int",
    "tensorflow.python.platform.tf_logging._GetFileAndLine",
    "tensorflow.python.platform.tf_logging._level_names",
    "tensorflow.python.platform.tf_logging.os",
    "tensorflow.python.platform.tf_logging.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.info": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.log": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.log_every_n": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_GetFileAndLine",
    "log_if",
    "tensorflow.python.platform.tf_logging._GetNextLogCountPerToken"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.log_first_n": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_GetFileAndLine",
    "log_if",
    "tensorflow.python.platform.tf_logging._GetNextLogCountPerToken"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.log_if": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.vlog"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.set_verbosity": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging._logger"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.platform.tf_logging.vlog": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging._logger"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.platform.tf_logging.warn": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.python.platform.tf_logging.warning": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.python.python_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.python_io"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow.AppendToFile": {
  "data": {
   "lineno": 494
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.Basename": {
  "data": {
   "lineno": 545
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.BufferedInputStream": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.BufferedInputStream.ReadLineAsString": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.BufferedInputStream.__init__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.BufferedInputStream_swigregister": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader._HasTensor": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader.debug_string": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader.get_tensor": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.CheckpointReader_GetTensor",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader.get_variable_to_shape_map": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader.has_tensor": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader_GetTensor": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CheckpointReader_swigregister": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CleanPath": {
  "data": {
   "lineno": 553
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CopyFile": {
  "data": {
   "lineno": 466
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CreateBufferedInputStream": {
  "data": {
   "lineno": 486
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CreateDir": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CreateWritableFile": {
  "data": {
   "lineno": 490
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.CudaSupportsHalfMatMulAndConv": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.DeleteFile": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.DeleteRecursively": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.Dirname": {
  "data": {
   "lineno": 541
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.DoQuantizeTrainingOnGraphDefHelper": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.EqualGraphDefWrapper": {
  "data": {
   "lineno": 403
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.Event": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2.Event"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter.Close": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter.FileName": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter.Flush": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter.WriteEvent": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "tensorflow.core.util.event_pb2.Event",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter._WriteSerializedEvent": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.EventsWriter_swigregister": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.Extension": {
  "data": {
   "lineno": 549
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.FileExists": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.FileStatistics": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._newclass",
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_property",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.FileStatistics.__init__": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.FileStatistics_swigregister": {
  "data": {
   "lineno": 581
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.FlushWritableFile": {
  "data": {
   "lineno": 498
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_CONSUMER": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.GRAPH_DEF_VERSION_MIN_PRODUCER": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.GetMatchingFiles": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.GetPythonWrappers": {
  "data": {
   "lineno": 620
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.GraphDef": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2.GraphDef"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow.InitializePyTrampoline": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.IsAbsolutePath": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.IsDirectory": {
  "data": {
   "lineno": 478
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.IsGoogleCudaEnabled": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.JoinPathImpl": {
  "data": {
   "lineno": 533
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.ListDevices": {
  "data": {
   "lineno": 407
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.NewCheckpointReader": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "CheckpointReader",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PickUnusedPortOrDie": {
  "data": {
   "lineno": 418
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.pywrap_tensorflow._newclass",
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader.Close": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader.GetNext": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader.offset": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader.record": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader_New": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordReader_swigregister": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordWriter": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.pywrap_tensorflow._newclass",
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordWriter.Close": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordWriter.WriteRecord": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordWriter.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordWriter_New": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyRecordWriter_swigregister": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyServer_Join": {
  "data": {
   "lineno": 599
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyServer_New": {
  "data": {
   "lineno": 587
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyServer_Start": {
  "data": {
   "lineno": 591
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.PyServer_Stop": {
  "data": {
   "lineno": 595
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.ReadFileToString": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.RecursivelyCreateDir": {
  "data": {
   "lineno": 462
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.RenameFile": {
  "data": {
   "lineno": 470
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.RunCppShapeInference": {
  "data": {
   "lineno": 624
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.ServerInterface": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.ServerInterface.__init__": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.ServerInterface.target": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.ServerInterface_swigregister": {
  "data": {
   "lineno": 614
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.Stat": {
  "data": {
   "lineno": 482
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_Buffer": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.TF_Buffer.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.TF_Buffer_swigregister": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_CloseSession": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_DeleteBuffer": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_DeleteSession": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_DeleteSessionOptions": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_DeleteStatus": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_ExtendGraph": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_GetBuffer": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_GetCode": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_GetOpList": {
  "data": {
   "lineno": 360
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_LoadLibrary": {
  "data": {
   "lineno": 356
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_Message": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_NewBuffer": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_NewBufferFromString": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_NewSession": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_NewSessionOptions": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow._TF_NewSessionOptions",
    "tensorflow.python.pywrap_tensorflow._TF_SetConfig",
    "tensorflow.python.pywrap_tensorflow._TF_SetTarget"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.TF_NewStatus": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_PRun": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_PRunSetup": {
  "data": {
   "lineno": 391
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_Reset": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "TF_Reset_wrapper",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.TF_DeleteSessionOptions",
    "tensorflow.python.pywrap_tensorflow.TF_NewSessionOptions"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.TF_Reset_wrapper": {
  "data": {
   "lineno": 399
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.TF_Run": {
  "data": {
   "lineno": 387
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.WritableFile": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._object",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow._swig_getattr",
    "tensorflow.python.pywrap_tensorflow._swig_repr",
    "tensorflow.python.pywrap_tensorflow._swig_setattr"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow.WritableFile.__init__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.WritableFile_swigregister": {
  "data": {
   "lineno": 510
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.WriteStringToFile": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow._TF_NewSessionOptions": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow._TF_SetConfig": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow._TF_SetTarget": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.__compiler_version__": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.__git_version__": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow.__version__": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow._newclass": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow._object": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow": {
  "data": {
   "shadows": "_pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow._swig_getattr": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._swig_getattr_nondynamic"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow._swig_getattr_nondynamic": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AttributeError",
    "method",
    "object.__getattr__"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow._swig_property": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.python.pywrap_tensorflow._swig_repr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow._swig_setattr": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow._swig_setattr_nondynamic"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow._swig_setattr_nondynamic": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AttributeError",
    "method",
    "object.__setattr__",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow.do_quantize_training_on_graphdef": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.DoQuantizeTrainingOnGraphDefHelper"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "tensorflow.python.pywrap_tensorflow.list_devices": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.ListDevices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.swig_import_helper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImportError",
    "os.path.dirname",
    "tensorflow.python.pywrap_tensorflow._pywrap_tensorflow",
    "tensorflow.python.pywrap_tensorflow.imp"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.pywrap_tensorflow.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "tensorflow.python.remove_undocumented": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.remove_undocumented"
  },
  "type": "import"
 },
 "tensorflow.python.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.saved_model.builder": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.saved_model.builder.Any": {
  "data": {
   "shadows": "google.protobuf.any_pb2.Any"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.saved_model_pb2.SavedModel",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.recursive_create_dir",
    "tensorflow.python.saved_model.constants.SAVED_MODEL_SCHEMA_VERSION"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder._add_asset_to_collection": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "google.protobuf.any_pb2.Any",
    "tensorflow.core.protobuf.meta_graph_pb2.AssetFileDef",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.saved_model.constants.ASSETS_KEY"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder._asset_path_from_tensor": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder._save_and_write_assets": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.lib.io.file_io.copy",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.recursive_create_dir",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.saved_model.builder.os",
    "tensorflow.python.saved_model.constants.ASSETS_DIRECTORY",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder._save_assets": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.saved_model.builder.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder._tag_and_add_meta_graph": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder.add_meta_graph": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "AssertionError",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.export_meta_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder.add_meta_graph_and_variables": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "AssertionError",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.saved_model.builder.os",
    "tensorflow.python.saved_model.constants.VARIABLES_FILENAME",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.export_meta_graph",
    "tensorflow.python.training.saver.save",
    "tensorflow.python.util.compat.as_text"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.SavedModelBuilder.save": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "str",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.recursive_create_dir",
    "tensorflow.python.lib.io.file_io.write_string_to_file",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.saved_model.builder.os",
    "tensorflow.python.saved_model.constants.SAVED_MODEL_FILENAME_PB",
    "tensorflow.python.saved_model.constants.SAVED_MODEL_FILENAME_PBTXT",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.builder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.constants": {
  "data": {
   "shadows": "tensorflow.python.saved_model.constants"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.meta_graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.meta_graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.saved_model_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.saved_model_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.tf_logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.builder.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.constants": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.saved_model.constants.ASSETS_DIRECTORY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.ASSETS_KEY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.SAVED_MODEL_FILENAME_PB": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.SAVED_MODEL_FILENAME_PBTXT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.SAVED_MODEL_SCHEMA_VERSION": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.TAG_SERVING": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.TAG_TRAINING": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.VARIABLES_FILENAME": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tensorflow.python.saved_model.constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.constants.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.constants.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.saved_model.loader._parse_saved_model": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "google.protobuf.text_format.Merge",
    "google.protobuf.text_format.ParseError",
    "str",
    "tensorflow.core.protobuf.saved_model_pb2.SavedModel",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.read_file_to_string",
    "tensorflow.python.saved_model.constants.SAVED_MODEL_FILENAME_PB",
    "tensorflow.python.saved_model.constants.SAVED_MODEL_FILENAME_PBTXT",
    "tensorflow.python.saved_model.loader.os",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.loader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.constants": {
  "data": {
   "shadows": "tensorflow.python.saved_model.constants"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.load": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "RuntimeError",
    "set",
    "str",
    "tensorflow.python.saved_model.constants.VARIABLES_FILENAME",
    "tensorflow.python.saved_model.loader._parse_saved_model",
    "tensorflow.python.saved_model.loader.os",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.import_meta_graph",
    "tensorflow.python.training.saver.restore",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.loader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.saved_model_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.saved_model_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.loader.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testAssets": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.GraphKeys.ASSET_FILEPATHS",
    "tensorflow.Variable",
    "tensorflow.add_to_collection",
    "tensorflow.constant",
    "tensorflow.core.protobuf.meta_graph_pb2.AssetFileDef",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.read_file_to_string",
    "tensorflow.python.lib.io.file_io.write_string_to_file",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.builder.save",
    "tensorflow.python.saved_model.constants.ASSETS_DIRECTORY",
    "tensorflow.python.saved_model.constants.ASSETS_KEY.any_list.value",
    "tensorflow.python.saved_model.loader.load",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.as_text",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testCollections": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.add_to_collection",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.builder.save",
    "tensorflow.python.saved_model.loader.load",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testOp": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.Variable",
    "tensorflow.add",
    "tensorflow.add_to_collection",
    "tensorflow.assign",
    "tensorflow.core.protobuf.config_pb2.ConfigProto",
    "tensorflow.get_collection",
    "tensorflow.group",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.builder.save",
    "tensorflow.python.saved_model.loader.load",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testSaveAsText": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.Variable",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.builder.save",
    "tensorflow.python.saved_model.loader.load",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testSequence": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "AssertionError",
    "tensorflow.Graph",
    "tensorflow.Variable",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testSignatureDefs": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "dict",
    "len",
    "tensorflow.Graph",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.Variable",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.builder.save",
    "tensorflow.python.saved_model.loader.load",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.python.saved_model.utils.build_signature_def",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testTags": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.Graph",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.Variable",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.builder.save",
    "tensorflow.python.saved_model.constants.TAG_SERVING",
    "tensorflow.python.saved_model.constants.TAG_TRAINING",
    "tensorflow.python.saved_model.loader.load",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.SavedModelTest.testVariables": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "tensorflow.Graph",
    "tensorflow.GraphKeys.VARIABLES",
    "tensorflow.Variable",
    "tensorflow.get_collection",
    "tensorflow.initialize_all_variables",
    "tensorflow.python.framework.errors.NotFoundError",
    "tensorflow.python.saved_model.builder",
    "tensorflow.python.saved_model.builder.SavedModelBuilder",
    "tensorflow.python.saved_model.builder.add_meta_graph",
    "tensorflow.python.saved_model.builder.add_meta_graph_and_variables",
    "tensorflow.python.saved_model.builder.save",
    "tensorflow.python.saved_model.loader.load",
    "tensorflow.python.saved_model.saved_model_test.os",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.constants": {
  "data": {
   "shadows": "tensorflow.python.saved_model.constants"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.loader": {
  "data": {
   "shadows": "tensorflow.python.saved_model.loader"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.meta_graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.meta_graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.saved_model_builder": {
  "data": {
   "shadows": "tensorflow.python.saved_model.builder"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.tearDownModule": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.delete_recursively",
    "tensorflow.test.get_temp_dir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.saved_model_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.saved_model_test.utils": {
  "data": {
   "shadows": "tensorflow.python.saved_model.utils"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.utils": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.saved_model.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.utils.build_signature_def": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.meta_graph_pb2.SignatureDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.utils.build_tensor_info": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.meta_graph_pb2.TensorInfo"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.saved_model.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.utils.meta_graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.meta_graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.saved_model.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.script_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.script_ops"
  },
  "type": "import"
 },
 "tensorflow.python.session_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.session_ops"
  },
  "type": "import"
 },
 "tensorflow.python.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.string_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.string_ops"
  },
  "type": "import"
 },
 "tensorflow.python.summary": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.summary.event_accumulator": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.AUDIO",
    "tensorflow.python.summary.event_accumulator.COMPRESSED_HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.IMAGES",
    "tensorflow.python.summary.event_accumulator.SCALARS",
    "tensorflow.python.summary.event_accumulator.collections",
    "tensorflow.python.summary.event_accumulator.namedtuple"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.summary.event_accumulator.AUDIO": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.AudioEvent": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.COMPRESSED_HISTOGRAMS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.CompressedHistogramEvent": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.CompressedHistogramValue": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.DEFAULT_SIZE_GUIDANCE": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.Audio": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.CompressedHistograms": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.FirstEventTimestamp": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "next"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.Graph": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.core.framework.graph_pb2.GraphDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.Histograms": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.Images": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.Reload": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.RunMetadata": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.core.protobuf.config_pb2.RunMetadata"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.Scalars": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.Tags": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.summary.event_accumulator.AUDIO",
    "tensorflow.python.summary.event_accumulator.COMPRESSED_HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.GRAPH",
    "tensorflow.python.summary.event_accumulator.HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.IMAGES",
    "tensorflow.python.summary.event_accumulator.RUN_METADATA",
    "tensorflow.python.summary.event_accumulator.SCALARS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._CheckForOutOfOrderStepAndMaybePurge": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._CheckForRestartAndMaybePurge": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.SessionLog.START"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._ConvertHistogramProtoToTuple": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.summary.event_accumulator.HistogramValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._MaybePurgeOrphanedData": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._ProcessAudio": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.AudioEvent"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._ProcessEvent": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "_ParseFileVersion",
    "getattr",
    "tensorflow.python.platform.tf_logging.warn",
    "tensorflow.python.summary.event_accumulator.SUMMARY_TYPES"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._ProcessHistogram": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "_CompressHistogram",
    "tensorflow.python.summary.event_accumulator.CompressedHistogramEvent",
    "tensorflow.python.summary.event_accumulator.HistogramEvent"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._ProcessImage": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.ImageEvent"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._ProcessScalar": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.ScalarEvent"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._Purge": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "_ExpiredPerTag",
    "_GetPurgeMessage",
    "getattr",
    "sum",
    "tensorflow.python.platform.tf_logging.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator._Purge._ExpiredPerTag": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.EventAccumulator.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "_GeneratorFromPath",
    "tensorflow.python.summary.event_accumulator.AUDIO",
    "tensorflow.python.summary.event_accumulator.COMPRESSED_HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.DEFAULT_SIZE_GUIDANCE",
    "tensorflow.python.summary.event_accumulator.HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.IMAGES",
    "tensorflow.python.summary.event_accumulator.NORMAL_HISTOGRAM_BPS",
    "tensorflow.python.summary.event_accumulator.SCALARS",
    "tensorflow.python.summary.event_accumulator.threading",
    "tensorflow.python.summary.impl.reservoir.Reservoir"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.GRAPH": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.HISTOGRAMS": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.HistogramEvent": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.HistogramValue": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.IMAGES": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.ImageEvent": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.IsTensorFlowEventsFile": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.python.util.compat.as_str_any"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.NORMAL_HISTOGRAM_BPS": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.RUN_METADATA": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.RunMetadata": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2.RunMetadata"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.SCALARS": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.STORE_EVERYTHING_SIZE_GUIDANCE": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.SUMMARY_TYPES": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.ScalarEvent": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.SessionLog": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2.SessionLog"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator._CompressHistogram": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "_Remap",
    "len",
    "max",
    "min",
    "numpy.array",
    "numpy.searchsorted",
    "tensorflow.python.summary.event_accumulator.CompressedHistogramValue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator._GeneratorFromPath": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.IsTensorFlowEventsFile",
    "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher",
    "tensorflow.python.summary.impl.io_wrapper.CreateFileLoader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator._GetPurgeMessage": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator._ParseFileVersion": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator._Remap": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_accumulator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.directory_watcher": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.directory_watcher"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.io_wrapper": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.io_wrapper"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.namedtuple": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_accumulator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.reservoir": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.reservoir"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_accumulator.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "tensorflow.python.platform.app.run",
    "tensorflow.python.platform.flags.FLAGS",
    "tensorflow.python.summary.event_accumulator.SUMMARY_TYPES",
    "tensorflow.python.summary.event_file_inspector.LONG_FIELDS",
    "tensorflow.python.summary.event_file_inspector.SHORT_FIELDS",
    "tensorflow.python.summary.event_file_inspector.SUMMARY_TYPE_TO_FIELD",
    "tensorflow.python.summary.event_file_inspector.TAG_FIELDS",
    "tensorflow.python.summary.event_file_inspector.collections"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.summary.event_file_inspector.FLAGS": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.InspectionUnit": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.LONG_FIELDS": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.Observation": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.PRINT_SEPARATOR": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.SHORT_FIELDS": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.SUMMARY_TYPE_TO_FIELD": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.SessionLog": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2.SessionLog"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.TAG_FIELDS": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.TRACKED_FIELDS": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "tensorflow.python.summary.event_file_inspector.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.event_accumulator": {
  "data": {
   "shadows": "tensorflow.python.summary.event_accumulator"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.event_file_loader": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.event_file_loader"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.event_multiplexer": {
  "data": {
   "shadows": "tensorflow.python.summary.event_multiplexer"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.generator_from_event_file": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tensorflow.python.summary.impl.event_file_loader.EventFileLoader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.generators_from_logdir": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "generator_from_event_file",
    "tensorflow.python.platform.gfile.ListDirectory",
    "tensorflow.python.summary.event_accumulator.IsTensorFlowEventsFile",
    "tensorflow.python.summary.event_file_inspector.itertools",
    "tensorflow.python.summary.event_file_inspector.os",
    "tensorflow.python.summary.event_multiplexer.GetLogdirSubdirectories"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_dict_to_print": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "compressed_steps",
    "full_steps",
    "tensorflow.python.summary.event_file_inspector.LONG_FIELDS",
    "tensorflow.python.summary.event_file_inspector.SHORT_FIELDS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_dict_to_print.compressed_steps": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "get_out_of_order",
    "len",
    "max",
    "min",
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_dict_to_print.full_steps": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "get_out_of_order"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_field_to_observations_map": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dict",
    "increment",
    "tensorflow.core.util.event_pb2.SessionLog.CHECKPOINT",
    "tensorflow.core.util.event_pb2.SessionLog.START",
    "tensorflow.core.util.event_pb2.SessionLog.STOP",
    "tensorflow.python.summary.event_file_inspector.SUMMARY_TYPE_TO_FIELD",
    "tensorflow.python.summary.event_file_inspector.TRACKED_FIELDS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_field_to_observations_map.increment": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.python.summary.event_file_inspector.Observation",
    "tensorflow.python.summary.event_file_inspector.TRACKED_FIELDS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_inspection_units": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "print",
    "tensorflow.python.platform.gfile.ListDirectory",
    "tensorflow.python.summary.event_accumulator.IsTensorFlowEventsFile",
    "tensorflow.python.summary.event_file_inspector.InspectionUnit",
    "tensorflow.python.summary.event_file_inspector.generator_from_event_file",
    "tensorflow.python.summary.event_file_inspector.get_field_to_observations_map",
    "tensorflow.python.summary.event_file_inspector.itertools",
    "tensorflow.python.summary.event_file_inspector.os",
    "tensorflow.python.summary.event_multiplexer.GetLogdirSubdirectories"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_out_of_order": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.get_unique_tags": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "set",
    "sorted",
    "tensorflow.python.summary.event_file_inspector.TAG_FIELDS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.inspect": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "tensorflow.python.summary.event_file_inspector.PRINT_SEPARATOR",
    "tensorflow.python.summary.event_file_inspector.get_dict_to_print",
    "tensorflow.python.summary.event_file_inspector.get_inspection_units",
    "tensorflow.python.summary.event_file_inspector.get_unique_tags",
    "tensorflow.python.summary.event_file_inspector.print_dict"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_file_inspector.print_dict": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_file_inspector.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.AddRun": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.summary.event_accumulator.EventAccumulator"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.AddRunsFromDirectory": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "GetLogdirSubdirectories",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.summary.event_multiplexer.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.Audio": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.CompressedHistograms": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.FirstEventTimestamp": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.Graph": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.Histograms": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.Images": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.Reload": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "list",
    "set",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.summary.impl.directory_watcher.DirectoryDeletedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.RunMetadata": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.RunPaths": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.Runs": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.summary.event_multiplexer.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.Scalars": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer._GetAccumulator": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.EventMultiplexer.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.DEFAULT_SIZE_GUIDANCE",
    "tensorflow.python.summary.event_multiplexer.six",
    "tensorflow.python.summary.event_multiplexer.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.GetLogdirSubdirectories": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "filter",
    "list",
    "tensorflow.python.summary.event_accumulator.IsTensorFlowEventsFile",
    "tensorflow.python.summary.impl.io_wrapper.Exists",
    "tensorflow.python.summary.impl.io_wrapper.IsDirectory",
    "tensorflow.python.summary.impl.io_wrapper.ListRecursively"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.event_multiplexer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.directory_watcher": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.directory_watcher"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.event_accumulator": {
  "data": {
   "shadows": "tensorflow.python.summary.event_accumulator"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.io_wrapper": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.io_wrapper"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.summary.event_multiplexer.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.summary.impl.directory_watcher": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryDeletedError": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher.Load": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "DirectoryDeletedError",
    "tensorflow.python.framework.errors.OpError",
    "tensorflow.python.summary.impl.io_wrapper.Exists"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher.OutOfOrderWritesDetected": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher._GetNextPath": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "list",
    "max",
    "min",
    "sorted",
    "tensorflow.python.summary.impl.directory_watcher.bisect",
    "tensorflow.python.summary.impl.gcs.IsGCSPath",
    "tensorflow.python.summary.impl.io_wrapper.ListDirectoryAbsolute"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher._HasOOOWrite": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.summary.impl.io_wrapper.Size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher._InitializeLoader": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher._LoadInternal": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher._SetPath": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.OpError",
    "tensorflow.python.platform.tf_logging.debug",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.summary.impl.gcs.IsGCSPath",
    "tensorflow.python.summary.impl.io_wrapper.Size"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.DirectoryWatcher.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.directory_watcher.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.directory_watcher.bisect": {
  "data": {
   "shadows": "bisect"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.directory_watcher.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.directory_watcher.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.directory_watcher.gcs": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.gcs"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.directory_watcher.io_wrapper": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.io_wrapper"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.directory_watcher.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.directory_watcher.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.summary.impl.event_file_loader.EventFileLoader": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.impl.event_file_loader.EventFileLoader.Load": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.python.platform.tf_logging.debug"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.event_file_loader.EventFileLoader.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.platform.resource_loader.readahead_file_path",
    "tensorflow.python.platform.tf_logging.debug",
    "tensorflow.python.pywrap_tensorflow.PyRecordReader_New",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.event_file_loader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.event_pb2": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.main": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "print",
    "tensorflow.python.summary.impl.event_file_loader.EventFileLoader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.event_file_loader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.event_file_loader.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.summary.impl.gcs.CheckIsSupported": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "OSError",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.summary.impl.gcs.subprocess"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs.CopyContents": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.summary.impl.gcs.subprocess"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs.Exists": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.python.summary.impl.gcs.ListDirectory",
    "tensorflow.python.summary.impl.gcs.subprocess"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs.IsDirectory": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.summary.impl.gcs.ListDirectory",
    "tensorflow.python.summary.impl.gcs.subprocess"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs.IsGCSPath": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.summary.impl.gcs.PATH_PREFIX"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs.ListDirectory": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.python.summary.impl.gcs.subprocess"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs.ListRecursively": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.summary.impl.gcs.ListDirectory",
    "tensorflow.python.summary.impl.gcs.os",
    "tensorflow.python.summary.impl.gcs.subprocess"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs.PATH_PREFIX": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tensorflow.python.summary.impl.gcs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.app.run"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.GCSFileLoader": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.GCSFileLoader.Load": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.platform.tf_logging.debug",
    "tensorflow.python.pywrap_tensorflow.PyRecordReader_New",
    "tensorflow.python.summary.impl.gcs.CopyContents",
    "tensorflow.python.summary.impl.gcs_file_loader.tempfile",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.GCSFileLoader.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.summary.impl.gcs.IsGCSPath"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.event_pb2": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.gcs": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.gcs"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.main": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "print",
    "tensorflow.python.summary.impl.gcs_file_loader.GCSFileLoader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.gcs_file_loader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.summary.impl.io_wrapper.CreateFileLoader": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.python.summary.impl.event_file_loader.EventFileLoader",
    "tensorflow.python.summary.impl.gcs.IsGCSPath",
    "tensorflow.python.summary.impl.gcs_file_loader.GCSFileLoader"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.io_wrapper.Exists": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.summary.impl.gcs.Exists",
    "tensorflow.python.summary.impl.gcs.IsGCSPath"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.io_wrapper.IsDirectory": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.IsDirectory",
    "tensorflow.python.summary.impl.gcs.IsDirectory",
    "tensorflow.python.summary.impl.gcs.IsGCSPath"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.io_wrapper.ListDirectoryAbsolute": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.ListDirectory",
    "tensorflow.python.summary.impl.gcs.IsGCSPath",
    "tensorflow.python.summary.impl.gcs.ListDirectory",
    "tensorflow.python.summary.impl.io_wrapper.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.io_wrapper.ListRecursively": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.python.platform.gfile.Walk",
    "tensorflow.python.summary.impl.gcs.IsGCSPath",
    "tensorflow.python.summary.impl.gcs.ListRecursively",
    "tensorflow.python.summary.impl.io_wrapper.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.io_wrapper.Size": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.python.platform.gfile.Open",
    "tensorflow.python.summary.impl.gcs.IsGCSPath"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.io_wrapper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper.event_file_loader": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.event_file_loader"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper.gcs": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.gcs"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper.gcs_file_loader": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.gcs_file_loader"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.io_wrapper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.reservoir": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.summary.impl.reservoir.Reservoir": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.impl.reservoir.Reservoir.AddItem": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir.Reservoir.FilterItems": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir.Reservoir.Items": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir.Reservoir.Keys": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir.Reservoir.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "_ReservoirBucket",
    "round",
    "tensorflow.python.summary.impl.reservoir.collections",
    "tensorflow.python.summary.impl.reservoir.random",
    "tensorflow.python.summary.impl.reservoir.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir._ReservoirBucket": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.summary.impl.reservoir._ReservoirBucket.AddItem": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir._ReservoirBucket.FilterItems": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "filter",
    "float",
    "int",
    "len",
    "list",
    "round"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir._ReservoirBucket.Items": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir._ReservoirBucket.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "round",
    "tensorflow.python.summary.impl.reservoir.random",
    "tensorflow.python.summary.impl.reservoir.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.impl.reservoir.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.reservoir.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.reservoir.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.reservoir.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.reservoir.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "tensorflow.python.summary.impl.reservoir.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.summary.summary.SCALAR_SUMMARY_LABEL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.python.summary.summary.__all__": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "tensorflow.python.summary.summary.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary.as_dtype": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes.as_dtype"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary.scalar": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.as_dtype",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.tensor_shape.scalar",
    "tensorflow.python.ops.summary_ops.tensor_summary",
    "tensorflow.python.summary.summary.SCALAR_SUMMARY_LABEL"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.summary.summary.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.summary.summary.tensor_summary": {
  "data": {
   "shadows": "tensorflow.python.ops.summary_ops.tensor_summary"
  },
  "type": "import"
 },
 "tensorflow.python.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.sysconfig": {
  "data": {
   "shadows": "tensorflow.python.platform.sysconfig"
  },
  "type": "import"
 },
 "tensorflow.python.tensor_array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.tensor_array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tensorflow.python.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "tensorflow.python.train": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tensorflow.python.training": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.adadelta": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.adadelta.AdadeltaOptimizer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.adadelta.AdadeltaOptimizer.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.adadelta.AdadeltaOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adadelta.AdadeltaOptimizer._apply_dense": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_adadelta"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adadelta.AdadeltaOptimizer._apply_sparse": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.sparse_apply_adadelta"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adadelta.AdadeltaOptimizer._create_slots": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "tensorflow.python.training.adadelta.AdadeltaOptimizer._prepare": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adadelta.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.adadelta.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.adadelta.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adadelta.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adadelta.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.adadelta.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.adadelta.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.adagrad.AdagradOptimizer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.adagrad.AdagradOptimizer.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.python.training.adagrad.AdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad.AdagradOptimizer._apply_dense": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_adagrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad.AdagradOptimizer._apply_sparse": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.sparse_apply_adagrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad.AdagradOptimizer._create_slots": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad.AdagradOptimizer._prepare": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.adagrad_da.AdagradDAOptimizer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.adagrad_da.AdagradDAOptimizer.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.python.training.adagrad_da.AdagradDAOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad_da.AdagradDAOptimizer._apply_dense": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_adagrad_da"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad_da.AdagradDAOptimizer._apply_sparse": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.sparse_apply_adagrad_da"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad_da.AdagradDAOptimizer._create_slots": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad_da.AdagradDAOptimizer._prepare": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adagrad_da.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.adagrad_da.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.adam.AdamOptimizer": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.adam.AdamOptimizer.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.adam.AdamOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adam.AdamOptimizer._apply_dense": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_adam"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adam.AdamOptimizer._apply_sparse": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.state_ops.assign_sub",
    "tensorflow.python.ops.state_ops.scatter_add"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adam.AdamOptimizer._create_slots": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adam.AdamOptimizer._finish": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adam.AdamOptimizer._get_beta_accumulators": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "tensorflow.python.training.adam.AdamOptimizer._prepare": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.adam.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.adam.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.basic_loops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.basic_loops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.basic_loops.basic_train_loop": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.AbortedError",
    "train_step_fn"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.basic_loops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.basic_loops.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.training.basic_loops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.checkpoint_state_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "tensorflow.python.training.checkpoint_state_pb2.CheckpointState",
    "tensorflow.python.training.checkpoint_state_pb2.DESCRIPTOR",
    "tensorflow.python.training.checkpoint_state_pb2._CHECKPOINTSTATE",
    "tensorflow.python.training.checkpoint_state_pb2._b",
    "tensorflow.python.training.checkpoint_state_pb2._sym_db",
    "tensorflow.python.training.checkpoint_state_pb2.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.checkpoint_state_pb2.CheckpointState": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "tensorflow.python.training.checkpoint_state_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tensorflow.python.training.checkpoint_state_pb2._CHECKPOINTSTATE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.python.training.checkpoint_state_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorflow.python.training.checkpoint_state_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.python.training.checkpoint_state_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.python.training.checkpoint_state_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "tensorflow.python.training.checkpoint_state_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorflow.python.training.checkpoint_state_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "tensorflow.python.training.checkpoint_state_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.checkpoint_state_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.coordinator.Coordinator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.coordinator.Coordinator.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.training.coordinator.threading",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator._filter_exception": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.clear_stop": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.join": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "list",
    "max",
    "min",
    "set",
    "tensorflow.python.training.coordinator.six",
    "tensorflow.python.training.coordinator.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.joined": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.register_thread": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.request_stop": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.coordinator.six",
    "tensorflow.python.training.coordinator.sys",
    "tensorflow.python.util.compat.as_str_any",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.should_stop": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.stop_on_exception": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.python.training.coordinator.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.Coordinator.wait_for_stop": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.LooperThread": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "tensorflow.python.training.coordinator.threading"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.coordinator.LooperThread.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super",
    "tensorflow.python.training.coordinator.Coordinator",
    "tensorflow.python.training.coordinator.LooperThread"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.LooperThread.loop": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.training.coordinator.LooperThread"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.LooperThread.run": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "tensorflow.python.training.coordinator.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.LooperThread.run_loop": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.LooperThread.start_loop": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.LooperThread.stop_loop": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "tensorflow.python.training.coordinator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.training.coordinator.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.training.device_setter": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.device_setter._ReplicaDeviceChooser": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.device_setter._ReplicaDeviceChooser.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "tensorflow.python.training.device_setter._ReplicaDeviceChooser._next_task": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "tensorflow.python.training.device_setter._ReplicaDeviceChooser.device_function": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.core.framework.node_def_pb2.NodeDef",
    "tensorflow.python.framework.device.DeviceSpec",
    "tensorflow.python.framework.device.DeviceSpec.from_string"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.device_setter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.device_setter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.device_setter.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.device_setter.node_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.node_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.device_setter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.device_setter.pydev": {
  "data": {
   "shadows": "tensorflow.python.framework.device"
  },
  "type": "import"
 },
 "tensorflow.python.training.device_setter.replica_device_setter": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tensorflow.python.framework.device.DeviceSpec.from_string",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.device_setter._ReplicaDeviceChooser",
    "tensorflow.python.training.server_lib.ClusterSpec"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.device_setter.server_lib": {
  "data": {
   "shadows": "tensorflow.python.training.server_lib"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.ftrl.FtrlOptimizer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.ftrl.FtrlOptimizer.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.python.training.ftrl.FtrlOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.ftrl.FtrlOptimizer._apply_dense": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_ftrl"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.ftrl.FtrlOptimizer._apply_sparse": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.sparse_apply_ftrl"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.ftrl.FtrlOptimizer._create_slots": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.ftrl.FtrlOptimizer._prepare": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.ftrl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.ftrl.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.gen_training_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.training.gen_training_ops._InitOpDefLibrary"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.gen_training_ops._InitOpDefLibrary": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_library.OpDefLibrary",
    "tensorflow.python.framework.op_def_registry.register_op_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops._apply_adadelta_outputs": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_adagrad_da_outputs": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_adagrad_outputs": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_adam_outputs": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_ftrl_outputs": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_gradient_descent_outputs": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_momentum_outputs": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_proximal_adagrad_outputs": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_proximal_gradient_descent_outputs": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._apply_rms_prop_outputs": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._op_def_lib": {
  "data": {
   "lineno": 2058
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_adadelta_outputs": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_adagrad_da_outputs": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_adagrad_outputs": {
  "data": {
   "lineno": 448
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_ftrl_outputs": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_momentum_outputs": {
  "data": {
   "lineno": 575
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_proximal_adagrad_outputs": {
  "data": {
   "lineno": 621
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_proximal_gradient_descent_outputs": {
  "data": {
   "lineno": 663
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops._sparse_apply_rms_prop_outputs": {
  "data": {
   "lineno": 701
  },
  "type": "constant"
 },
 "tensorflow.python.training.gen_training_ops.apply_adadelta": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_adagrad": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_adagrad_da": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_adam": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_ftrl": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_gradient_descent": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_momentum": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_proximal_adagrad": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_proximal_gradient_descent": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.apply_rms_prop": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.training.gen_training_ops.op_def_library": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_library"
  },
  "type": "import"
 },
 "tensorflow.python.training.gen_training_ops.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.gen_training_ops.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.training.gen_training_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_adadelta": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_adagrad": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_adagrad_da": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_ftrl": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_momentum": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_proximal_adagrad": {
  "data": {
   "lineno": 624
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_proximal_gradient_descent": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.sparse_apply_rms_prop": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "tensorflow.python.training.gen_training_ops.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.training.gradient_descent": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.gradient_descent.GradientDescentOptimizer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.gradient_descent.GradientDescentOptimizer.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.gradient_descent.GradientDescentOptimizer._apply_dense": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_gradient_descent"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.gradient_descent.GradientDescentOptimizer._apply_sparse": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.gradient_descent.GradientDescentOptimizer._prepare": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.gradient_descent.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.gradient_descent.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.gradient_descent.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.gradient_descent.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.gradient_descent.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.gradient_descent.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.gradient_descent.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.input._SparseMetaData": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.input._SparseMetaData.__eq__": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "tensorflow.python.training.input._SparseMetaData.__init__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "tensorflow.python.training.input._SparseMetaData.__ne__": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "tensorflow.python.training.input._SparseMetaData.__str__": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "tensorflow.python.training.input._SparseMetaData.dtype": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._SparseMetaData.merge_with": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._SparseMetaData.rank": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._SparseMetaData.sparse": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._as_original_type": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._as_tensor_list": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._as_tensor_list_list": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "set",
    "tensorflow.python.training.input._as_tensor_list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._deserialize_sparse_tensors": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.ops.sparse_ops.deserialize_many_sparse",
    "tensorflow.python.training.input.collections",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._dtypes": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._enqueue": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._enqueue_join": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._flatten": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "tensorflow.python.training.input._merge_shapes": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.as_shape"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._serialize_sparse_tensors": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "_maybe_serialize",
    "_sparse_meta_data"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._serialize_sparse_tensors._maybe_serialize": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.ops.sparse_ops.serialize_many_sparse",
    "tensorflow.python.ops.sparse_ops.serialize_sparse"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._serialize_sparse_tensors._sparse_meta_data": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.SparseTensor",
    "tensorflow.python.training.input._SparseMetaData"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._serialize_sparse_tensors_join": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.training.input._serialize_sparse_tensors",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._shapes": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "six.moves.xrange",
    "tensorflow.python.training.input._merge_shapes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._validate": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._validate_join": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input._which_queue": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.data_flow_ops.PaddingFIFOQueue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.batch": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.input._as_original_type",
    "tensorflow.python.training.input._as_tensor_list",
    "tensorflow.python.training.input._deserialize_sparse_tensors",
    "tensorflow.python.training.input._dtypes",
    "tensorflow.python.training.input._enqueue",
    "tensorflow.python.training.input._serialize_sparse_tensors",
    "tensorflow.python.training.input._shapes",
    "tensorflow.python.training.input._validate",
    "tensorflow.python.training.input._which_queue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.batch_join": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.input._as_original_type",
    "tensorflow.python.training.input._as_tensor_list_list",
    "tensorflow.python.training.input._deserialize_sparse_tensors",
    "tensorflow.python.training.input._dtypes",
    "tensorflow.python.training.input._enqueue_join",
    "tensorflow.python.training.input._flatten",
    "tensorflow.python.training.input._serialize_sparse_tensors_join",
    "tensorflow.python.training.input._shapes",
    "tensorflow.python.training.input._validate_join",
    "tensorflow.python.training.input._which_queue"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.input_producer": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.random_ops.random_shuffle",
    "tensorflow.python.training.input.limit_epochs",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.limit_epochs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.match_filenames_once": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.io_ops.matching_files",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.range_input_producer": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.training.input.input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.shuffle_batch": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.training.input._as_original_type",
    "tensorflow.python.training.input._as_tensor_list",
    "tensorflow.python.training.input._deserialize_sparse_tensors",
    "tensorflow.python.training.input._dtypes",
    "tensorflow.python.training.input._enqueue",
    "tensorflow.python.training.input._serialize_sparse_tensors",
    "tensorflow.python.training.input._shapes",
    "tensorflow.python.training.input._validate"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.shuffle_batch_join": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue",
    "tensorflow.python.ops.logging_ops.scalar_summary",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.training.input._as_original_type",
    "tensorflow.python.training.input._as_tensor_list_list",
    "tensorflow.python.training.input._deserialize_sparse_tensors",
    "tensorflow.python.training.input._dtypes",
    "tensorflow.python.training.input._enqueue_join",
    "tensorflow.python.training.input._flatten",
    "tensorflow.python.training.input._serialize_sparse_tensors_join",
    "tensorflow.python.training.input._shapes",
    "tensorflow.python.training.input._validate_join"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.slice_input_producer": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.training.input.range_input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.string_input_producer": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.training.input.input_producer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.input.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.input.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.python.training.learning_rate_decay": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.learning_rate_decay.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.learning_rate_decay.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.learning_rate_decay.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.learning_rate_decay.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.learning_rate_decay.exponential_decay": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.pow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.learning_rate_decay.inverse_time_decay": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.mul"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.learning_rate_decay.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.learning_rate_decay.natural_exp_decay": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.floor",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.neg"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.learning_rate_decay.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.learning_rate_decay.piecewise_constant": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "tensorflow.python.framework.ops.convert_n_to_tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.case",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.learning_rate_decay.polynomial_decay": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.ceil",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.math_ops.mul",
    "tensorflow.python.ops.math_ops.pow"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.learning_rate_decay.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.momentum": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.momentum.MomentumOptimizer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.momentum.MomentumOptimizer.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.momentum.MomentumOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.momentum.MomentumOptimizer._apply_dense": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_momentum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.momentum.MomentumOptimizer._apply_sparse": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.sparse_apply_momentum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.momentum.MomentumOptimizer._create_slots": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "tensorflow.python.training.momentum.MomentumOptimizer._prepare": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.momentum.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.momentum.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.momentum.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.momentum.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.momentum.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.momentum.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.momentum.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.moving_averages.ExponentialMovingAverage": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.moving_averages.ExponentialMovingAverage.__init__": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "tensorflow.python.training.moving_averages.ExponentialMovingAverage.apply": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.GraphKeys.MOVING_AVERAGE_VARIABLES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.trainable_variables",
    "tensorflow.python.training.moving_averages.assign_moving_average",
    "tensorflow.python.training.slot_creator.create_slot",
    "tensorflow.python.training.slot_creator.create_zeros_slot"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.moving_averages.ExponentialMovingAverage.average": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "tensorflow.python.training.moving_averages.ExponentialMovingAverage.average_name": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.moving_averages.ExponentialMovingAverage.variables_to_restore": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "list",
    "set",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.ops.variables.moving_average_variables",
    "tensorflow.python.ops.variables.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.moving_averages.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.assign_moving_average": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.state_ops.assign_sub"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.moving_averages.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.slot_creator": {
  "data": {
   "shadows": "tensorflow.python.training.slot_creator"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.moving_averages.weighted_moving_average": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.VARIABLES",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.truediv",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.training.moving_averages.assign_moving_average"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.optimizer.Optimizer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.optimizer.Optimizer.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._apply_dense": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._apply_sparse": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._assert_valid_dtypes": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._create_slots": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._finish": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._get_or_make_slot": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "tensorflow.python.training.slot_creator.create_slot"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._prepare": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._slot_dict": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._valid_dtypes": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer._zeros_slot": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "tensorflow.python.training.slot_creator.create_zeros_slot"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer.apply_gradients": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor_or_indexed_slices",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.variables.Variable",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer.compute_gradients": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "tensorflow.python.ops.control_flow_ops.tuple",
    "tensorflow.python.ops.gradients.gradients",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.trainable_variables",
    "tensorflow.python.training.optimizer.Optimizer",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer.get_name": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer.get_slot": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer.get_slot_names": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.Optimizer.minimize": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "tensorflow.python.training.optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.gradients": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.slot_creator": {
  "data": {
   "shadows": "tensorflow.python.training.slot_creator"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.optimizer.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_adagrad": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer._apply_dense": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.python.training.training_ops.apply_proximal_adagrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer._apply_sparse": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.training.training_ops.sparse_apply_proximal_adagrad"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer._create_slots": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.colocate_with"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer._prepare": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_adagrad.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_adagrad.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_adagrad.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_adagrad.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_adagrad.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_adagrad.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_adagrad.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_gradient_descent": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer._apply_dense": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.python.training.training_ops.apply_proximal_gradient_descent"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer._apply_sparse": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.python.training.training_ops.sparse_apply_proximal_gradient_descent"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer._prepare": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.proximal_gradient_descent.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_gradient_descent.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_gradient_descent.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_gradient_descent.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_gradient_descent.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_gradient_descent.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.proximal_gradient_descent.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef",
    "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
    "tensorflow.python.framework.ops.register_proto_function",
    "tensorflow.python.training.queue_runner.QueueRunner"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.queue_runner.QueueRunner": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.training.queue_runner.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner._close_on_stop": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "Exception",
    "str",
    "tensorflow.python.platform.tf_logging.vlog",
    "tensorflow.python.training.queue_runner.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner._init_from_args": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "issubclass",
    "tensorflow.python.framework.errors.OpError",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner._init_from_proto": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.framework.errors.exception_type_from_error_code",
    "tensorflow.python.framework.ops.get_default_graph",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner._run": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Exception",
    "str",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.vlog",
    "tensorflow.python.training.queue_runner.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.cancel_op": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.close_op": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.create_threads": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.training.queue_runner.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.enqueue_ops": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.exceptions_raised": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.from_proto": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.training.queue_runner.QueueRunner"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.name": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.queue": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.queue_closed_exception_types": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.QueueRunner.to_proto": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef",
    "tensorflow.python.framework.errors.error_code_from_exception_type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner.add_queue_runner": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
    "tensorflow.python.framework.ops.add_to_collection"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner.queue_runner_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.queue_runner_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.queue_runner.start_queue_runners": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.get_default_session"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.queue_runner.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.rmsprop.RMSPropOptimizer": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.rmsprop.RMSPropOptimizer.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.rmsprop.RMSPropOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.rmsprop.RMSPropOptimizer._apply_dense": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.apply_rms_prop"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.rmsprop.RMSPropOptimizer._apply_sparse": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.training.training_ops.sparse_apply_rms_prop"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.rmsprop.RMSPropOptimizer._create_slots": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.rmsprop.RMSPropOptimizer._prepare": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.rmsprop.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.rmsprop.training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.core.protobuf.saver_pb2.SaverDef",
    "tensorflow.python.framework.ops.GraphKeys.SAVERS",
    "tensorflow.python.framework.ops.register_proto_function",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.saver.Any": {
  "data": {
   "shadows": "google.protobuf.any_pb2.Any"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "object",
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V1"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.OpListToDict": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "set",
    "staticmethod",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.training.saver.BaseSaverBuilder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.SaveSpec": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.SaveSpec.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.SaveableObject": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.SaveableObject.__init__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.SaveableObject.restore": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.VariableSaveable": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.VariableSaveable.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.saver.BaseSaverBuilder"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.VariableSaveable.restore": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.state_ops.assign"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._AddRestoreOps": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tensorflow.python.framework.graph_util.set_cpu0",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._AddSaveOps": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.with_dependencies"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._AddSaveable": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._AddShardedRestoreOps": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.framework.device",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._AddShardedSaveOps": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.device",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.gen_io_ops._sharded_filespec"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._GroupByDevices": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "sorted",
    "tensorflow.python.framework.device.canonical_name",
    "tensorflow.python.training.saver.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._IsVariable": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder._ValidateAndSliceInputs": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "set",
    "sorted",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.training.saver.BaseSaverBuilder",
    "tensorflow.python.training.saver.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.__init__": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.build": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.saver_pb2.SaverDef",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.name_scope"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.restore_op": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops._restore_slice"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.save_op": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "tensorflow.python.ops.io_ops._save"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.BaseSaverBuilder.sharded_filename": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_io_ops._sharded_filename"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.CheckpointState": {
  "data": {
   "shadows": "tensorflow.python.training.checkpoint_state_pb2.CheckpointState"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.Saver": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.saver.Saver._CheckpointFilename": {
  "data": {
   "lineno": 1033
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver._MaybeDeleteOldCheckpoints": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "Exception",
    "len",
    "str",
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V2",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.saver.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver._MetaGraphFilename": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "tensorflow.python.training.saver.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.__init__": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver._add_collection_def": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "_add_collection_def",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver._check_saver_def": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str",
    "tensorflow.core.protobuf.saver_pb2.SaverDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver._delete_file_if_exists": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "tensorflow.python.lib.io.file_io.delete_file",
    "tensorflow.python.lib.io.file_io.get_matching_files"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.as_saver_def": {
  "data": {
   "lineno": 1116
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.build": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.variables._all_saveable_objects",
    "tensorflow.python.training.saver.BaseSaverBuilder",
    "tensorflow.python.training.saver.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.export_meta_graph": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "export_meta_graph",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.from_proto": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.last_checkpoints": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.recover_last_checkpoints": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "_prefix_to_checkpoint_path",
    "int",
    "tensorflow.python.lib.io.file_io.get_matching_files",
    "tensorflow.python.lib.io.file_io.stat"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.restore": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "ValueError",
    "_prefix_to_checkpoint_path",
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
    "tensorflow.python.lib.io.file_io.get_matching_files"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.save": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.python.client.session.SessionInterface",
    "tensorflow.python.platform.gfile.IsDirectory",
    "tensorflow.python.training.saver.update_checkpoint_state",
    "tensorflow.python.training.training_util.global_step",
    "tensorflow.python.util.compat.as_str",
    "tensorflow.python.util.compat.integral_types"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.set_last_checkpoints": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.set_last_checkpoints_with_time": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.Saver.to_proto": {
  "data": {
   "lineno": 1124
  },
  "type": "function"
 },
 "tensorflow.python.training.saver._GetCheckpointFilename": {
  "data": {
   "lineno": 644
  },
  "type": "function"
 },
 "tensorflow.python.training.saver._add_collection_def": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "getattr",
    "isinstance",
    "str",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.get_collection_proto_type",
    "tensorflow.python.framework.ops.get_to_proto_function",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.saver._get_kind_name",
    "tensorflow.python.training.saver.six",
    "tensorflow.python.util.compat.as_bytes",
    "to_proto",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver._as_meta_graph_def": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef",
    "tensorflow.core.protobuf.saver_pb2.SaverDef",
    "tensorflow.python.framework.ops.get_all_collection_keys",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.training.saver._add_collection_def",
    "tensorflow.python.training.saver.stripped_op_list_for_graph",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver._get_kind_name": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "float",
    "google.protobuf.any_pb2.Any",
    "isinstance",
    "tensorflow.python.training.saver.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver._import_meta_graph_def": {
  "data": {
   "lineno": 1570,
   "symbols_in_volume": [
    "from_proto",
    "getattr",
    "int",
    "proto_type",
    "tensorflow.python.framework.importer.import_graph_def",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection_proto_type",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.get_from_proto_function",
    "tensorflow.python.ops.variables._all_saveable_objects",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver._prefix_to_checkpoint_path": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V2"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.export_meta_graph": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "tensorflow.python.training.saver._as_meta_graph_def",
    "tensorflow.python.training.training_util.write_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.gen_io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_io_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.generate_checkpoint_state_proto": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.checkpoint_state_pb2.CheckpointState"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.get_checkpoint_state": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "google.protobuf.text_format.Merge",
    "google.protobuf.text_format.ParseError",
    "len",
    "range",
    "str",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.read_file_to_string",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.checkpoint_state_pb2.CheckpointState",
    "tensorflow.python.training.saver._GetCheckpointFilename"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.graph_util": {
  "data": {
   "shadows": "tensorflow.python.framework.graph_util"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.import_meta_graph": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "tensorflow.python.training.saver._import_meta_graph_def",
    "tensorflow.python.training.saver.read_meta_graph_file"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.importer": {
  "data": {
   "shadows": "tensorflow.python.framework.importer"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.latest_checkpoint": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V2",
    "tensorflow.python.lib.io.file_io.get_matching_files",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.training.saver._prefix_to_checkpoint_path",
    "tensorflow.python.training.saver.get_checkpoint_state"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.meta_graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.meta_graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.op_def_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.op_def_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.op_def_registry": {
  "data": {
   "shadows": "tensorflow.python.framework.op_def_registry"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.ops_used_by_graph_def": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mark_op_as_used",
    "set"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.ops_used_by_graph_def.mark_op_as_used": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.pydev": {
  "data": {
   "shadows": "tensorflow.python.framework.device"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.read_meta_graph_file": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "google.protobuf.text_format.Merge",
    "google.protobuf.text_format.ParseError",
    "str",
    "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.read_file_to_string"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.saver_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.saver_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.stripped_op_list_for_graph": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "sorted",
    "tensorflow.core.framework.op_def_pb2.OpList",
    "tensorflow.python.framework.op_def_registry.get_registered_ops",
    "tensorflow.python.training.saver.ops_used_by_graph_def"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.update_checkpoint_state": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "RuntimeError",
    "google.protobuf.text_format.MessageToString",
    "tensorflow.python.lib.io.file_io.rename",
    "tensorflow.python.lib.io.file_io.write_string_to_file",
    "tensorflow.python.training.saver._GetCheckpointFilename",
    "tensorflow.python.training.saver.generate_checkpoint_state_proto",
    "tensorflow.python.training.saver.uuid"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.saver.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "tensorflow.python.training.saver.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.server_lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.server_lib.ClusterSpec": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.__eq__": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "tensorflow.core.protobuf.tensorflow_server_pb2.ClusterDef",
    "tensorflow.python.training.server_lib.ClusterSpec",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.__ne__": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.__nonzero__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec._make_cluster_def": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "TypeError",
    "sorted",
    "tensorflow.core.protobuf.tensorflow_server_pb2.ClusterDef",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.as_cluster_def": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.as_dict": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.job_tasks": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.jobs": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.num_tasks": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.task_address": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.ClusterSpec.task_indices": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.Server": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.server_lib.Server.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.PyServer_New",
    "tensorflow.python.training.server_lib._make_server_def"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.Server.create_local_server": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.python.training.server_lib.Server"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.Server.join": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.PyServer_Join"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.Server.server_def": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.Server.start": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.python.framework.errors.raise_exception_on_not_ok_status",
    "tensorflow.python.pywrap_tensorflow.PyServer_Start"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.Server.target": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib._make_server_def": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ClusterSpec",
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.server_lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.server_lib.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.training.server_lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.server_lib.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.training.server_lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.server_lib.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.training.server_lib.tensorflow_server_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.tensorflow_server_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.session_manager.SessionManager": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.session_manager.SessionManager.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager._model_ready": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager._model_ready_for_local_init": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager._ready": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.int32",
    "str",
    "tensorflow.python.framework.errors.FailedPreconditionError",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager._restore_checkpoint": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.python.client.session.Session",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.get_checkpoint_state",
    "tensorflow.python.training.saver.recover_last_checkpoints",
    "tensorflow.python.training.saver.restore",
    "tensorflow.python.training.session_manager.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager._safe_close": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager._try_run_local_init_op": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager.prepare_session": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "RuntimeError",
    "init_fn",
    "tensorflow.python.training.saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager.recover_session": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.saver"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.SessionManager.wait_for_session": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "_CountDownTimer",
    "float",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.errors.DeadlineExceededError",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.session_manager.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager._CountDownTimer": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.session_manager._CountDownTimer.__init__": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "tensorflow.python.training.session_manager.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager._CountDownTimer.secs_remaining": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "max",
    "tensorflow.python.training.session_manager.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.session_manager.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.saver_mod": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tensorflow.python.training.session_manager.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.training.slot_creator": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.slot_creator._create_slot_var": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.Variable.SaveSliceInfo"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.slot_creator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.slot_creator.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.slot_creator.create_slot": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.colocate_with",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.training.slot_creator._create_slot_var"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.slot_creator.create_zeros_slot": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.training.slot_creator.create_slot"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.slot_creator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.slot_creator.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.slot_creator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.slot_creator.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.summary_io.SummaryWriter": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_EventLoggerThread",
    "tensorflow.python.platform.gfile.IsDirectory",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.python.pywrap_tensorflow.EventsWriter",
    "tensorflow.python.training.summary_io.six",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter._add_graph_def": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "int",
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.python.training.summary_io.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.add_event": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.add_graph": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.add_run_metadata": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.core.util.event_pb2.TaggedRunMetadata",
    "tensorflow.python.training.summary_io.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.add_session_log": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "int",
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.python.training.summary_io.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.add_summary": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bytes",
    "int",
    "isinstance",
    "tensorflow.core.framework.summary_pb2.Summary",
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.python.training.summary_io.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.close": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.flush": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.get_logdir": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.SummaryWriter.reopen": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io._EventLoggerThread": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "tensorflow.python.training.summary_io.threading"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.summary_io._EventLoggerThread.__init__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "tensorflow.python.training.summary_io.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io._EventLoggerThread.run": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.python.training.summary_io.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.event_pb2": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.summary_iterator": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.Event.FromString",
    "tensorflow.python.lib.io.tf_record.tf_record_iterator"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.summary_io.summary_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.tf_record": {
  "data": {
   "shadows": "tensorflow.python.lib.io.tf_record"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.python.training.summary_io.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor": {
  "data": {
   "symbols_in_volume": [
    "setattr",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.supervisor.SVStepCounterThread": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "tensorflow.python.training.coordinator.LooperThread"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.supervisor.SVStepCounterThread.__init__": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.supervisor.SVStepCounterThread"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.SVStepCounterThread.run_loop": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "tensorflow.core.framework.summary_pb2.Summary",
    "tensorflow.core.framework.summary_pb2.Summary.Value",
    "tensorflow.python.platform.tf_logging.INFO",
    "tensorflow.python.platform.tf_logging.log_first_n",
    "tensorflow.python.training.supervisor.time",
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.SVStepCounterThread.start_loop": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "tensorflow.python.training.supervisor.time",
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.SVSummaryThread": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "tensorflow.python.training.coordinator.LooperThread"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.supervisor.SVSummaryThread.__init__": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.supervisor.SVSummaryThread"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.SVSummaryThread.run_loop": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.SVTimerCheckpointThread": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "tensorflow.python.training.coordinator.LooperThread"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.supervisor.SVTimerCheckpointThread.__init__": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.training.supervisor.SVTimerCheckpointThread"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.SVTimerCheckpointThread.run_loop": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.SessionLog",
    "tensorflow.core.util.event_pb2.SessionLog.CHECKPOINT",
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.SessionLog": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2.SessionLog"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.Summary": {
  "data": {
   "shadows": "tensorflow.core.framework.summary_pb2.Summary"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.Supervisor": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.supervisor.Supervisor.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.training.coordinator.Coordinator",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.session_manager",
    "tensorflow.python.training.summary_io.SummaryWriter",
    "tensorflow.python.training.supervisor.Supervisor",
    "tensorflow.python.training.supervisor.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._default_global_step_tensor": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "KeyError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._get_first_op_from_collection": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "LookupError",
    "len",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.platform.tf_logging.info"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._init_global_step": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._init_init_op": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.INIT_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.variables.initialize_all_variables",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._init_local_init_op": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_INIT_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.data_flow_ops.initialize_all_tables",
    "tensorflow.python.ops.variables.initialize_local_variables",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._init_ready_op": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.READY_FOR_LOCAL_INIT_OP",
    "tensorflow.python.framework.ops.GraphKeys.READY_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.variables.report_uninitialized_variables",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._init_saver": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SAVERS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.variables.all_variables",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._init_session_manager": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "tensorflow.python.training.session_manager",
    "tensorflow.python.training.session_manager.SessionManager"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._init_summary_op": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARY_OP",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.logging_ops.merge_all_summaries",
    "tensorflow.python.training.supervisor.Supervisor"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._verify_setup": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor._write_graph": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "tensorflow.python.training.training_util.write_graph"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.coord": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.global_step": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.init_feed_dict": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.init_op": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.is_chief": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.loop": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "tensorflow.python.training.coordinator.LooperThread"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.managed_session": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "Exception",
    "tensorflow.python.training.supervisor.contextlib"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.prepare_or_wait_for_session": {
  "data": {
   "lineno": 678
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.ready_for_local_init_op": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.ready_op": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.request_stop": {
  "data": {
   "lineno": 807
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.save_model_secs": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.save_path": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.save_summaries_secs": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.saver": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.session_manager": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.should_stop": {
  "data": {
   "lineno": 819
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.start_queue_runners": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.start_standard_services": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "RuntimeError",
    "SVStepCounterThread",
    "SVSummaryThread",
    "SVTimerCheckpointThread",
    "tensorflow.core.util.event_pb2.SessionLog",
    "tensorflow.core.util.event_pb2.SessionLog.START",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.stop": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.SessionLog",
    "tensorflow.core.util.event_pb2.SessionLog.STOP"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.stop_on_exception": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.summary_computed": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.summary_op": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.summary_writer": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.Supervisor.wait_for_stop": {
  "data": {
   "lineno": 839
  },
  "type": "function"
 },
 "tensorflow.python.training.supervisor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.coordinator": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.saver_mod": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.session_manager_mod": {
  "data": {
   "shadows": "tensorflow.python.training.session_manager"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.summary_io": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tensorflow.python.training.supervisor.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "max",
    "super",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer._aggregate_sparse_grad": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.core.framework.types_pb2.DT_INT32",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.unique",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.math_ops.unsorted_segment_sum"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.apply_gradients": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "tensorflow.core.framework.types_pb2.DT_INT32",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.control_flow_ops.abort",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.math_ops.less",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.state_ops.scatter_update",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.compute_gradients": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.get_chief_queue_runner": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.get_clean_up_op": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.get_init_tokens_op": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.fill",
    "tensorflow.python.ops.control_flow_ops.no_op"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.get_slot": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer.get_slot_names": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "tensorflow.python.training.sync_replicas_optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.types_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.types_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.sync_replicas_optimizer.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tensorflow.python.training.tensorboard_logging": {
  "data": {
   "symbols_in_volume": [
    "object",
    "tensorflow.core.util.event_pb2.LogMessage.DEBUG",
    "tensorflow.core.util.event_pb2.LogMessage.ERROR",
    "tensorflow.core.util.event_pb2.LogMessage.FATAL",
    "tensorflow.core.util.event_pb2.LogMessage.INFO",
    "tensorflow.core.util.event_pb2.LogMessage.WARN",
    "tensorflow.python.platform.tf_logging.DEBUG",
    "tensorflow.python.platform.tf_logging.ERROR",
    "tensorflow.python.platform.tf_logging.FATAL",
    "tensorflow.python.platform.tf_logging.INFO",
    "tensorflow.python.platform.tf_logging.WARN",
    "tensorflow.python.training.tensorboard_logging.DEBUG",
    "tensorflow.python.training.tensorboard_logging.ERROR",
    "tensorflow.python.training.tensorboard_logging.FATAL",
    "tensorflow.python.training.tensorboard_logging.INFO",
    "tensorflow.python.training.tensorboard_logging.WARN",
    "tensorflow.python.training.tensorboard_logging._sentinel_summary_writer"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.tensorboard_logging.DEBUG": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging.ERROR": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging.FATAL": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging.INFO": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging.WARN": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging._LEVEL_PROTO_MAP": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging._PLATFORM_LOGGING_LEVEL_MAP": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging._check_verbosity": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.training.tensorboard_logging._LEVEL_PROTO_MAP"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging._clear_summary_writer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging._sentinel_summary_writer",
    "tensorflow.python.training.tensorboard_logging._summary_writer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging._sentinel_summary_writer": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging._summary_writer": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging._verbosity": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "tensorflow.python.training.tensorboard_logging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.tensorboard_logging.debug": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging.DEBUG",
    "tensorflow.python.training.tensorboard_logging.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.tensorboard_logging.error": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging.ERROR",
    "tensorflow.python.training.tensorboard_logging.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.event_pb2": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.training.tensorboard_logging.fatal": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging.FATAL",
    "tensorflow.python.training.tensorboard_logging.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.get_verbosity": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging._verbosity"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.info": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging.INFO",
    "tensorflow.python.training.tensorboard_logging.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.log": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.core.util.event_pb2.LogMessage",
    "tensorflow.python.platform.tf_logging.log",
    "tensorflow.python.training.tensorboard_logging._LEVEL_PROTO_MAP",
    "tensorflow.python.training.tensorboard_logging._PLATFORM_LOGGING_LEVEL_MAP",
    "tensorflow.python.training.tensorboard_logging._check_verbosity",
    "tensorflow.python.training.tensorboard_logging._sentinel_summary_writer",
    "tensorflow.python.training.tensorboard_logging._summary_writer",
    "tensorflow.python.training.tensorboard_logging._verbosity",
    "tensorflow.python.training.tensorboard_logging.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.python.training.tensorboard_logging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.tensorboard_logging.set_summary_writer": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging._summary_writer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.set_verbosity": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "_check_verbosity",
    "tensorflow.python.training.tensorboard_logging._verbosity"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.tensorboard_logging.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.python.training.tensorboard_logging.warn": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.python.training.tensorboard_logging.WARN",
    "tensorflow.python.training.tensorboard_logging.log"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.training": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.ops.io_ops",
    "tensorflow.python.ops.state_ops",
    "tensorflow.python.training.training.__all__",
    "tensorflow.python.training.training.sys",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.training.AdadeltaOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.adadelta.AdadeltaOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.AdagradDAOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad_da.AdagradDAOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.AdagradOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.adagrad.AdagradOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.AdamOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.adam.AdamOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.ClusterDef": {
  "data": {
   "shadows": "tensorflow.core.protobuf.tensorflow_server_pb2.ClusterDef"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.ClusterSpec": {
  "data": {
   "shadows": "tensorflow.python.training.server_lib.ClusterSpec"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.Coordinator": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator.Coordinator"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.ExponentialMovingAverage": {
  "data": {
   "shadows": "tensorflow.python.training.moving_averages.ExponentialMovingAverage"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.FtrlOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.ftrl.FtrlOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.GradientDescentOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.gradient_descent.GradientDescentOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.JobDef": {
  "data": {
   "shadows": "tensorflow.core.protobuf.tensorflow_server_pb2.JobDef"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.LooperThread": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator.LooperThread"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.MomentumOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.momentum.MomentumOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.NewCheckpointReader": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow.NewCheckpointReader"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.Optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer.Optimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.ProximalAdagradOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.proximal_adagrad.ProximalAdagradOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.ProximalGradientDescentOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.RMSPropOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.rmsprop.RMSPropOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.Saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver.Saver"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.Server": {
  "data": {
   "shadows": "tensorflow.python.training.server_lib.Server"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.ServerDef": {
  "data": {
   "shadows": "tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.SessionManager": {
  "data": {
   "shadows": "tensorflow.python.training.session_manager.SessionManager"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.SummaryWriter": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io.SummaryWriter"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.Supervisor": {
  "data": {
   "shadows": "tensorflow.python.training.supervisor.Supervisor"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.SyncReplicasOptimizer": {
  "data": {
   "shadows": "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.__all__": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "tensorflow.python.training.training._input": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.basic_train_loop": {
  "data": {
   "shadows": "tensorflow.python.training.basic_loops.basic_train_loop"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.do_quantize_training_on_graphdef": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow.do_quantize_training_on_graphdef"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.export_meta_graph": {
  "data": {
   "shadows": "tensorflow.python.training.saver.export_meta_graph"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.generate_checkpoint_state_proto": {
  "data": {
   "shadows": "tensorflow.python.training.saver.generate_checkpoint_state_proto"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.get_checkpoint_state": {
  "data": {
   "shadows": "tensorflow.python.training.saver.get_checkpoint_state"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.global_step": {
  "data": {
   "shadows": "tensorflow.python.training.training_util.global_step"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.gradients": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.import_meta_graph": {
  "data": {
   "shadows": "tensorflow.python.training.saver.import_meta_graph"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.latest_checkpoint": {
  "data": {
   "shadows": "tensorflow.python.training.saver.latest_checkpoint"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.replica_device_setter": {
  "data": {
   "shadows": "tensorflow.python.training.device_setter.replica_device_setter"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.summary_iterator": {
  "data": {
   "shadows": "tensorflow.python.training.summary_io.summary_iterator"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.update_checkpoint_state": {
  "data": {
   "shadows": "tensorflow.python.training.saver.update_checkpoint_state"
  },
  "type": "import"
 },
 "tensorflow.python.training.training.write_graph": {
  "data": {
   "shadows": "tensorflow.python.training.training_util.write_graph"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_ops": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.common_shapes.call_cpp_shape_fn",
    "tensorflow.python.framework.ops.RegisterShape"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.training.training_ops._AssertInputIsScalar": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.scalar"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.training_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_ops.common_shapes": {
  "data": {
   "shadows": "tensorflow.python.framework.common_shapes"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_ops.gen_training_ops": {
  "data": {
   "shadows": "tensorflow.python.training.gen_training_ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_ops.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.training.training_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_util.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_util.global_step": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.training.training_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_util.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.training.training_util.write_graph": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "str",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.recursive_create_dir",
    "tensorflow.python.lib.io.file_io.write_string_to_file",
    "tensorflow.python.training.training_util.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.user_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.user_ops.user_ops": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.user_ops.user_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.user_ops.user_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.user_ops.user_ops.gen_user_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.gen_user_ops"
  },
  "type": "import"
 },
 "tensorflow.python.user_ops.user_ops.my_fact": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.python.ops.gen_user_ops._fact"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.user_ops.user_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.util.all_util": {
  "data": {
   "symbols_in_volume": [
    "re.MULTILINE",
    "re.compile"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.util.all_util._HIDDEN_ATTRIBUTES": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tensorflow.python.util.all_util.__all__": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "tensorflow.python.util.all_util._inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tensorflow.python.util.all_util._re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.python.util.all_util._reference_pattern": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tensorflow.python.util.all_util._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.python.util.all_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.util.all_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.util.all_util.make_all": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "inspect.getmembers",
    "list",
    "set",
    "sys.modules",
    "tensorflow.python.util.all_util._reference_pattern"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.all_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util.all_util.remove_undocumented": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "delattr",
    "dir",
    "getattr",
    "set",
    "sys.modules",
    "tensorflow.python.util.all_util._HIDDEN_ATTRIBUTES",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.all_util.reveal_undocumented": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "LookupError",
    "setattr",
    "tensorflow.python.util.all_util._HIDDEN_ATTRIBUTES"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.compat": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bytes",
    "numbers.Complex",
    "numbers.Integral",
    "numbers.Real",
    "numpy.floating",
    "numpy.integer",
    "numpy.number",
    "six.PY2",
    "six.text_type",
    "tensorflow.python.util.all_util.remove_undocumented",
    "tensorflow.python.util.compat._allowed_symbols",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.python.util.compat.as_text"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.util.compat._allowed_symbols": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "tensorflow.python.util.compat._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorflow.python.util.compat._numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "tensorflow.python.util.compat._six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.util.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.util.compat.as_bytes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.compat.as_str": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "tensorflow.python.util.compat.as_str_any": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "str",
    "tensorflow.python.util.compat.as_str"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.compat.as_text": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.compat.bytes_or_text_types": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "tensorflow.python.util.compat.complex_types": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "tensorflow.python.util.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.util.compat.integral_types": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "tensorflow.python.util.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util.compat.real_types": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "tensorflow.python.util.compat.remove_undocumented": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.remove_undocumented"
  },
  "type": "import"
 },
 "tensorflow.python.util.example_parser_configuration": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.util.example_parser_configuration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.util.example_parser_configuration.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.util.example_parser_configuration.example_parser_configuration_pb2": {
  "data": {
   "shadows": "tensorflow.core.example.example_parser_configuration_pb2"
  },
  "type": "import"
 },
 "tensorflow.python.util.example_parser_configuration.extract_example_parser_configuration": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range",
    "tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.framework.tensor_util.make_tensor_proto"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.example_parser_configuration.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util.example_parser_configuration.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tensorflow.python.util.example_parser_configuration.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tensorflow.python.util.future_api": {
  "data": {
   "symbols_in_volume": [
    "delattr",
    "tensorflow"
   ]
  },
  "type": "module"
 },
 "tensorflow.python.util.future_api.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.util.future_api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.util.future_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util.future_api.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.util.nest": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.util.nest._packed_nest_with_indices": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.python.util.nest._sequence_like",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest._recursive_assert_same_structure": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "tensorflow.python.util.nest.is_sequence",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest._sequence_like": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "all",
    "hasattr",
    "isinstance",
    "tensorflow.python.util.nest.collections",
    "tensorflow.python.util.nest.six",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest._yield_flat_nest": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.util.nest.assert_same_structure": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.util.nest._recursive_assert_same_structure",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.util.nest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.util.nest.flatten": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.util.nest._yield_flat_nest",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest.flatten_dict_items": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence",
    "tensorflow.python.util.nest.six",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest.is_sequence": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.util.nest.collections",
    "tensorflow.python.util.nest.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest.pack_sequence_as": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "tensorflow.python.util.nest._packed_nest_with_indices",
    "tensorflow.python.util.nest._sequence_like",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.is_sequence"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.nest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util.nest.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.util.net_lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.util.net_lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.util.net_lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.util.net_lib.pick_unused_port_or_die": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow.PickUnusedPortOrDie"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.net_lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util.net_lib.pywrap_tensorflow": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.util.protobuf.compare": {
  "data": {},
  "type": "module"
 },
 "tensorflow.python.util.protobuf.compare.NormalizeNumberFields": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "float",
    "getattr",
    "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_DOUBLE",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_ENUM",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_FLOAT",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_GROUP",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_INT32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_INT64",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_MESSAGE",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_SINT64",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT32",
    "google.protobuf.descriptor.FieldDescriptor.TYPE_UINT64",
    "int",
    "round",
    "setattr",
    "tensorflow.python.util.protobuf.compare.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.protobuf.compare.ProtoAssertions": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.python.util.protobuf.compare.ProtoAssertions.assertProtoEqual": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tensorflow.python.util.protobuf.compare.assertProtoEqual"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.protobuf.compare.ProtoEq": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Format",
    "dict",
    "isinstance",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.protobuf.compare.ProtoEq.Format": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "google.protobuf.message.Message",
    "isinstance",
    "list",
    "tensorflow.python.util.protobuf.compare._IsMap",
    "tensorflow.python.util.protobuf.compare._IsRepeatedContainer"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.protobuf.compare._IsMap": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.util.protobuf.compare.collections"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.protobuf.compare._IsRepeatedContainer": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "iter",
    "tensorflow.python.util.protobuf.compare.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.protobuf.compare.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf.compare.assertProtoEqual": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NormalizeNumberFields",
    "google.protobuf.text_format.Merge",
    "google.protobuf.text_format.MessageToString",
    "isinstance",
    "tensorflow.python.util.protobuf.compare.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.python.util.protobuf.compare.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf.compare.descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf.compare.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf.compare.message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf.compare.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf.compare.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.python.util.protobuf.compare.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.tensorboard": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.tensorboard.__main__.sys",
    "tensorflow.tensorboard.tensorboard.main"
   ]
  },
  "type": "module"
 },
 "tensorflow.tensorboard.__main__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.__main__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.__main__.main": {
  "data": {
   "shadows": "tensorflow.tensorboard.tensorboard.main"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.__main__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.backend.handler": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.AUDIO",
    "tensorflow.python.summary.event_accumulator.COMPRESSED_HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.GRAPH",
    "tensorflow.python.summary.event_accumulator.HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.IMAGES",
    "tensorflow.python.summary.event_accumulator.RUN_METADATA",
    "tensorflow.python.summary.event_accumulator.SCALARS",
    "tensorflow.tensorboard.backend.handler.re"
   ]
  },
  "type": "module"
 },
 "tensorflow.tensorboard.backend.handler.AUDIO_ROUTE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.BaseHTTPServer": {
  "data": {
   "shadows": "six.moves.BaseHTTPServer"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.BytesIO": {
  "data": {
   "shadows": "six.BytesIO"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.COMPRESSED_HISTOGRAMS_ROUTE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.DATA_PREFIX": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.GRAPH_ROUTE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.HISTOGRAMS_ROUTE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.IMAGES_ROUTE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.INDIVIDUAL_AUDIO_ROUTE": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.INDIVIDUAL_IMAGE_ROUTE": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.PLUGIN_PREFIX": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.REGISTERED_PLUGINS": {
  "data": {
   "shadows": "tensorflow.tensorboard.plugins.REGISTERED_PLUGINS"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.RUNS_ROUTE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.RUN_METADATA_ROUTE": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.SCALARS_ROUTE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.StringIO": {
  "data": {
   "shadows": "six.StringIO"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.TAB_ROUTES": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler"
   ]
  },
  "type": "class"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler.__init__"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._audio_response_for_run": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._image_response_for_run": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._is_gzip_accepted": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tensorflow.tensorboard.backend.handler._ALLOWS_GZIP_PATTERN"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._path_is_safe": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.tensorboard.backend.handler.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._query_for_individual_audio": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._query_for_individual_image": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._respond": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_audio": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_compressed_histograms": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "len",
    "six.StringIO",
    "six.moves.xrange",
    "tensorflow.tensorboard.backend.handler._OutputFormat",
    "tensorflow.tensorboard.backend.handler.csv"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_graph": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str",
    "tensorflow.tensorboard.backend.process_graph.prepare_graph_for_ui"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_histograms": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_image": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "int",
    "tensorflow.tensorboard.backend.handler._content_type_for_image"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_images": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_index": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_individual_audio": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_js": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_run_metadata": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_runs": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.platform.tf_logging.warning"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_scalars": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "_uniform_sample",
    "int",
    "six.StringIO",
    "tensorflow.tensorboard.backend.handler._OutputFormat",
    "tensorflow.tensorboard.backend.handler.csv"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler._serve_static_file": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "IOError",
    "tensorflow.python.platform.resource_loader.load_resource",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.tensorboard.backend.handler.mimetypes",
    "tensorflow.tensorboard.backend.handler.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler.do_GET": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "len",
    "six.moves.urllib.parse.parse_qs",
    "six.moves.urllib.parse.urlparse",
    "tensorflow.tensorboard.backend.handler.AUDIO_ROUTE",
    "tensorflow.tensorboard.backend.handler.COMPRESSED_HISTOGRAMS_ROUTE",
    "tensorflow.tensorboard.backend.handler.DATA_PREFIX",
    "tensorflow.tensorboard.backend.handler.GRAPH_ROUTE",
    "tensorflow.tensorboard.backend.handler.HISTOGRAMS_ROUTE",
    "tensorflow.tensorboard.backend.handler.IMAGES_ROUTE",
    "tensorflow.tensorboard.backend.handler.INDIVIDUAL_AUDIO_ROUTE",
    "tensorflow.tensorboard.backend.handler.INDIVIDUAL_IMAGE_ROUTE",
    "tensorflow.tensorboard.backend.handler.PLUGIN_PREFIX",
    "tensorflow.tensorboard.backend.handler.RUNS_ROUTE",
    "tensorflow.tensorboard.backend.handler.RUN_METADATA_ROUTE",
    "tensorflow.tensorboard.backend.handler.SCALARS_ROUTE",
    "tensorflow.tensorboard.backend.handler.TAB_ROUTES",
    "tensorflow.tensorboard.backend.handler.six",
    "tensorflow.tensorboard.plugins.REGISTERED_PLUGINS"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler.send_csv_response": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler.send_gzip_response": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "six.BytesIO",
    "tensorflow.python.util.compat.as_bytes",
    "tensorflow.tensorboard.backend.handler.gzip"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.TensorboardHandler.send_json_response": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.tensorboard.backend.handler.json",
    "tensorflow.tensorboard.lib.python.json_util.WrapSpecialFloats"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler._ALLOWS_GZIP_PATTERN": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler._DEFAULT_IMAGE_MIMETYPE": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler._IMGHDR_TO_MIMETYPE": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.handler._OutputFormat": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.tensorboard.backend.handler._content_type_for_image": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.tensorboard.backend.handler._DEFAULT_IMAGE_MIMETYPE",
    "tensorflow.tensorboard.backend.handler._IMGHDR_TO_MIMETYPE",
    "tensorflow.tensorboard.backend.handler.imghdr"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler._uniform_sample": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.handler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.event_accumulator": {
  "data": {
   "shadows": "tensorflow.python.summary.event_accumulator"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.imghdr": {
  "data": {
   "shadows": "imghdr"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.json_util": {
  "data": {
   "shadows": "tensorflow.tensorboard.lib.python.json_util"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.mimetypes": {
  "data": {
   "shadows": "mimetypes"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.process_graph": {
  "data": {
   "shadows": "tensorflow.tensorboard.backend.process_graph"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.handler.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.process_graph": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.backend.process_graph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.process_graph.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.process_graph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.process_graph.prepare_graph_for_ui": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "tensorflow.python.util.compat.as_bytes"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.process_graph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.summary.event_accumulator.AUDIO",
    "tensorflow.python.summary.event_accumulator.COMPRESSED_HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.HISTOGRAMS",
    "tensorflow.python.summary.event_accumulator.IMAGES",
    "tensorflow.python.summary.event_accumulator.SCALARS"
   ]
  },
  "type": "module"
 },
 "tensorflow.tensorboard.backend.server.BaseHTTPServer": {
  "data": {
   "shadows": "six.moves.BaseHTTPServer"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.BuildServer": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.tensorboard.backend.handler.TensorboardHandler",
    "tensorflow.tensorboard.backend.server.ThreadedHTTPServer",
    "tensorflow.tensorboard.backend.server.functools"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.server.ParseEventFilesSpec": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.python.summary.impl.gcs.IsGCSPath",
    "tensorflow.tensorboard.backend.server.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.server.ReloadMultiplexer": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.tensorboard.backend.server.six",
    "tensorflow.tensorboard.backend.server.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.server.StartMultiplexerReloadingThread": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.summary.impl.gcs.CheckIsSupported",
    "tensorflow.python.summary.impl.gcs.IsGCSPath",
    "tensorflow.python.summary.impl.gcs.PATH_PREFIX",
    "tensorflow.tensorboard.backend.server.threading"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.server.StartMultiplexerReloadingThread._ReloadForever": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tensorflow.tensorboard.backend.server.ReloadMultiplexer",
    "tensorflow.tensorboard.backend.server.time"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.backend.server.TENSORBOARD_SIZE_GUIDANCE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.backend.server.ThreadedHTTPServer": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "six.moves.BaseHTTPServer.HTTPServer",
    "six.moves.socketserver.ThreadingMixIn"
   ]
  },
  "type": "class"
 },
 "tensorflow.tensorboard.backend.server.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.event_accumulator": {
  "data": {
   "shadows": "tensorflow.python.summary.event_accumulator"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.gcs": {
  "data": {
   "shadows": "tensorflow.python.summary.impl.gcs"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.handler": {
  "data": {
   "shadows": "tensorflow.tensorboard.backend.handler"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.socketserver": {
  "data": {
   "shadows": "six.moves.socketserver"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.backend.server.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.lib": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.lib.python": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.lib.python.json_util": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.lib.python.json_util.WrapSpecialFloats": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dict",
    "float",
    "isinstance",
    "list",
    "map",
    "tensorflow.tensorboard.lib.python.json_util.math",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.lib.python.json_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.lib.python.json_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.lib.python.json_util.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.lib.python.json_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin"
   ]
  },
  "type": "module"
 },
 "tensorflow.tensorboard.plugins.ProjectorPlugin": {
  "data": {
   "shadows": "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.REGISTERED_PLUGINS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.plugins.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.base_plugin": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.plugins.base_plugin.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.base_plugin.TBPlugin": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "tensorflow.tensorboard.plugins.base_plugin.TBPlugin.get_plugin_handlers": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.base_plugin.TBPlugin.initialize": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.base_plugin.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.base_plugin.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.base_plugin.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.base_plugin.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.plugins.projector.plugin": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.INFO_ROUTE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.LIMIT_NUM_POINTS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.METADATA_ROUTE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.NewCheckpointReader": {
  "data": {
   "shadows": "tensorflow.python.pywrap_tensorflow.NewCheckpointReader"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.PROJECTOR_FILENAME": {
  "data": {
   "shadows": "tensorflow.contrib.tensorboard.plugins.projector.PROJECTOR_FILENAME"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorConfig": {
  "data": {
   "shadows": "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.ProjectorConfig"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.tensorboard.plugins.base_plugin.TBPlugin"
   ]
  },
  "type": "class"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin._get_metadata_file_for_tensor": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin._get_reader_for_run": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.python.pywrap_tensorflow.NewCheckpointReader"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin._read_config_files": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "google.protobuf.text_format.Merge",
    "tensorflow.contrib.tensorboard.plugins.projector.PROJECTOR_FILENAME",
    "tensorflow.contrib.tensorboard.plugins.projector.projector_config_pb2.ProjectorConfig",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.read_file_to_string",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.saver.latest_checkpoint",
    "tensorflow.tensorboard.plugins.projector.plugin.os",
    "tensorflow.tensorboard.plugins.projector.plugin.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin._serve_info": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "tensorflow.tensorboard.plugins.projector.plugin.six"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin._serve_metadata": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.lib.io.file_io.FileIO",
    "tensorflow.python.lib.io.file_io.file_exists",
    "tensorflow.python.lib.io.file_io.is_directory",
    "tensorflow.tensorboard.plugins.projector.plugin.LIMIT_NUM_POINTS"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin._serve_runs": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin._serve_tensor": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "str",
    "tensorflow.tensorboard.plugins.projector.plugin.LIMIT_NUM_POINTS"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.ProjectorPlugin.get_plugin_handlers": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.tensorboard.plugins.projector.plugin.INFO_ROUTE",
    "tensorflow.tensorboard.plugins.projector.plugin.METADATA_ROUTE",
    "tensorflow.tensorboard.plugins.projector.plugin.RUNS_ROUTE",
    "tensorflow.tensorboard.plugins.projector.plugin.TENSOR_ROUTE"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.RUNS_ROUTE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.TBPlugin": {
  "data": {
   "shadows": "tensorflow.tensorboard.plugins.base_plugin.TBPlugin"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.TENSOR_ROUTE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.latest_checkpoint": {
  "data": {
   "shadows": "tensorflow.python.training.saver.latest_checkpoint"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.plugins.projector.plugin.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.app.run",
    "tensorflow.python.platform.flags.DEFINE_boolean",
    "tensorflow.python.platform.flags.DEFINE_integer",
    "tensorflow.python.platform.flags.DEFINE_string",
    "tensorflow.python.platform.flags.FLAGS"
   ]
  },
  "type": "module"
 },
 "tensorflow.tensorboard.tensorboard.FLAGS": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "tensorflow.tensorboard.tensorboard.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.app": {
  "data": {
   "shadows": "tensorflow.python.platform.app"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.efi": {
  "data": {
   "shadows": "tensorflow.python.summary.event_file_inspector"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.event_multiplexer": {
  "data": {
   "shadows": "tensorflow.python.summary.event_multiplexer"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.main": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "IOError",
    "print",
    "tensorflow.python.platform.resource_loader.load_resource",
    "tensorflow.python.platform.status_bar.SetupStatusBarInsideGoogle",
    "tensorflow.python.platform.tf_logging.DEBUG",
    "tensorflow.python.platform.tf_logging.error",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.platform.tf_logging.set_verbosity",
    "tensorflow.python.summary.event_file_inspector.inspect",
    "tensorflow.python.summary.event_multiplexer.EventMultiplexer",
    "tensorflow.tensorboard.backend.server.BuildServer",
    "tensorflow.tensorboard.backend.server.ParseEventFilesSpec",
    "tensorflow.tensorboard.backend.server.StartMultiplexerReloadingThread",
    "tensorflow.tensorboard.backend.server.TENSORBOARD_SIZE_GUIDANCE",
    "tensorflow.tensorboard.tensorboard.FLAGS",
    "tensorflow.tensorboard.tensorboard.os",
    "tensorflow.tensorboard.tensorboard.socket"
   ]
  },
  "type": "function"
 },
 "tensorflow.tensorboard.tensorboard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.resource_loader": {
  "data": {
   "shadows": "tensorflow.python.platform.resource_loader"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.server": {
  "data": {
   "shadows": "tensorflow.tensorboard.backend.server"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "tensorflow.tensorboard.tensorboard.status_bar": {
  "data": {
   "shadows": "tensorflow.python.platform.status_bar"
  },
  "type": "import"
 },
 "tensorflow.tools": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tools.pip_package": {
  "data": {},
  "type": "module"
 },
 "tensorflow.tools.pip_package.setup": {
  "data": {
   "symbols_in_volume": [
    "list",
    "setuptools.find_packages",
    "setuptools.setup",
    "tensorflow.tools.pip_package.setup.BinaryDistribution",
    "tensorflow.tools.pip_package.setup.CONSOLE_SCRIPTS",
    "tensorflow.tools.pip_package.setup.InstallCommand",
    "tensorflow.tools.pip_package.setup.InstallHeaders",
    "tensorflow.tools.pip_package.setup.REQUIRED_PACKAGES",
    "tensorflow.tools.pip_package.setup.TEST_PACKAGES",
    "tensorflow.tools.pip_package.setup._VERSION",
    "tensorflow.tools.pip_package.setup.find_files",
    "tensorflow.tools.pip_package.setup.headers",
    "tensorflow.tools.pip_package.setup.matches",
    "tensorflow.tools.pip_package.setup.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.tools.pip_package.setup.BinaryDistribution": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "setuptools.dist.Distribution"
   ]
  },
  "type": "class"
 },
 "tensorflow.tools.pip_package.setup.BinaryDistribution.is_pure": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.CONSOLE_SCRIPTS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tensorflow.tools.pip_package.setup.Command": {
  "data": {
   "shadows": "setuptools.Command"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.Distribution": {
  "data": {
   "shadows": "setuptools.dist.Distribution"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.InstallCommand": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "setuptools.command.install.install"
   ]
  },
  "type": "class"
 },
 "tensorflow.tools.pip_package.setup.InstallCommand.finalize_options": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "setuptools.command.install.install.finalize_options",
    "tensorflow.tools.pip_package.setup.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.InstallCommandBase": {
  "data": {
   "shadows": "setuptools.command.install.install"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.InstallHeaders": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "setuptools.Command"
   ]
  },
  "type": "class"
 },
 "tensorflow.tools.pip_package.setup.InstallHeaders.finalize_options": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.InstallHeaders.get_inputs": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.InstallHeaders.get_outputs": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.InstallHeaders.initialize_options": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.InstallHeaders.mkdir_and_copy_file": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.tools.pip_package.setup.os",
    "tensorflow.tools.pip_package.setup.re"
   ]
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.InstallHeaders.run": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.REQUIRED_PACKAGES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tensorflow.tools.pip_package.setup.TEST_PACKAGES": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tensorflow.tools.pip_package.setup._VERSION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tensorflow.tools.pip_package.setup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.find_files": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.tools.pip_package.setup.fnmatch",
    "tensorflow.tools.pip_package.setup.os"
   ]
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.setup.find_packages": {
  "data": {
   "shadows": "setuptools.find_packages"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.headers": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "tensorflow.tools.pip_package.setup.matches": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "tensorflow.tools.pip_package.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.setup": {
  "data": {
   "shadows": "setuptools.setup"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.simple_console": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.tools.pip_package.simple_console.main",
    "tensorflow.tools.pip_package.simple_console.sys"
   ]
  },
  "type": "module"
 },
 "tensorflow.tools.pip_package.simple_console.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.simple_console.code": {
  "data": {
   "shadows": "code"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.simple_console.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.simple_console.main": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.tools.pip_package.simple_console.code"
   ]
  },
  "type": "function"
 },
 "tensorflow.tools.pip_package.simple_console.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tensorflow.tools.pip_package.simple_console.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}