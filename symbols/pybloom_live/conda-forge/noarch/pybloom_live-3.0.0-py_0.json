{
 "pybloom_live": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pybloom_live.pybloom": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "pybloom_live.pybloom.BloomFilter": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pybloom_live.pybloom.BloomFilter.__and__": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.__contains__": {
  "lineno": 111,
  "symbols_in_volume": [
   "bitarray"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.__getstate__": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.__init__": {
  "lineno": 72,
  "symbols_in_volume": [
   "bitarray.bitarray",
   "math.ceil",
   "math.log"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.__len__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.__or__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.__setstate__": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter._setup": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.add": {
  "lineno": 128,
  "symbols_in_volume": [
   "bitarray"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.copy": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.fromfile": {
  "lineno": 198,
  "symbols_in_volume": [
   "bitarray.bitarray",
   "pybloom_live.utils.is_string_io",
   "struct.calcsize",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.intersection": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.tofile": {
  "lineno": 189,
  "symbols_in_volume": [
   "pybloom_live.utils.is_string_io",
   "struct.pack"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.BloomFilter.union": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.__contains__": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.__init__": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.__len__": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.__or__": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter._setup": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.add": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.capacity": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.count": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.fromfile": {
  "lineno": 357,
  "symbols_in_volume": [
   "struct.calcsize",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.tofile": {
  "lineno": 333,
  "symbols_in_volume": [
   "struct.calcsize",
   "struct.pack"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.ScalableBloomFilter.union": {
  "lineno": 296,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.make_hashfuncs": {
  "lineno": 20,
  "symbols_in_volume": [
   "hashlib.md5",
   "hashlib.sha1",
   "hashlib.sha256",
   "hashlib.sha384",
   "hashlib.sha512",
   "pybloom_live.utils.range_fn",
   "struct.pack"
  ],
  "type": "function"
 },
 "pybloom_live.pybloom.make_hashfuncs._hash_maker": {
  "lineno": 45,
  "symbols_in_volume": [
   "pybloom_live.utils.running_python_3",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "pybloom_live.test_pybloom.TestMakeHashFuncs": {
  "lineno": 21,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pybloom_live.test_pybloom.TestMakeHashFuncs.test_make_hashfuncs_returns_hashfn": {
  "lineno": 22,
  "symbols_in_volume": [
   "pybloom_live.pybloom.make_hashfuncs"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestSerialization": {
  "lineno": 104,
  "symbols_in_volume": [
   "pybloom_live.utils.range_fn",
   "random.randint"
  ],
  "type": "class"
 },
 "pybloom_live.test_pybloom.TestSerialization.test_serialization": {
  "lineno": 108,
  "symbols_in_volume": [
   "StringIO.StringIO",
   "cStringIO.StringIO",
   "io.BytesIO",
   "pybloom_live.pybloom.BloomFilter",
   "pybloom_live.pybloom.ScalableBloomFilter",
   "pybloom_live.utils.running_python_3",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "pytest.param",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection": {
  "lineno": 35,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_intersection": {
  "lineno": 48,
  "symbols_in_volume": [
   "pybloom_live.pybloom.BloomFilter",
   "pybloom_live.utils.range_fn"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_intersection_capacity_fail": {
  "lineno": 62,
  "symbols_in_volume": [
   "pybloom_live.pybloom.BloomFilter"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_intersection_capacity_fail._run": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_intersection_k_fail": {
  "lineno": 76,
  "symbols_in_volume": [
   "pybloom_live.pybloom.BloomFilter"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_intersection_k_fail._run": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_union": {
  "lineno": 36,
  "symbols_in_volume": [
   "pybloom_live.pybloom.BloomFilter",
   "pybloom_live.utils.range_fn"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_union_capacity_fail": {
  "lineno": 69,
  "symbols_in_volume": [
   "pybloom_live.pybloom.BloomFilter"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_union_capacity_fail._run": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_union_k_fail": {
  "lineno": 83,
  "symbols_in_volume": [
   "pybloom_live.pybloom.BloomFilter"
  ],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_union_k_fail._run": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pybloom_live.test_pybloom.TestUnionIntersection.test_union_scalable_bloom_filter": {
  "lineno": 90,
  "symbols_in_volume": [
   "pybloom_live.pybloom.ScalableBloomFilter",
   "pybloom_live.pybloom.ScalableBloomFilter.SMALL_SET_GROWTH",
   "pybloom_live.utils.range_fn"
  ],
  "type": "function"
 },
 "pybloom_live.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "pybloom_live.utils.is_string_io": {
  "lineno": 22,
  "symbols_in_volume": [
   "StringIO.StringIO",
   "cStringIO.InputType",
   "cStringIO.OutputType",
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pybloom_live.utils.range_fn": {
  "lineno": 15,
  "symbols_in_volume": [
   "itertools.count"
  ],
  "type": "function"
 }
}