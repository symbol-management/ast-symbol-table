{
 "lfpykit": {
  "data": {},
  "type": "module"
 },
 "lfpykit.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "lfpykit.cellgeometry": {
  "data": {},
  "type": "module"
 },
 "lfpykit.cellgeometry.CellGeometry": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lfpykit.cellgeometry.CellGeometry.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "lfpykit.cellgeometry.CellGeometry._set_area": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.cellgeometry.CellGeometry._set_length": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.cellgeometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc": {
  "data": {},
  "type": "module"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "float",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_c1n": {
  "data": {
   "lineno": 746
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_c2n": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_c3n": {
  "data": {
   "lineno": 764
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_c4n": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_csf_term1": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_csf_term2": {
  "data": {
   "lineno": 794
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_d2n": {
  "data": {
   "lineno": 759
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_d3n": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_d4n": {
  "data": {
   "lineno": 783
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_phi": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.abs",
    "numpy.arccos",
    "numpy.cross",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.outer",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_rad_potential": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_tan_potential": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.sin",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_theta": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_vn": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_yn": {
  "data": {
   "lineno": 729
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._calc_zn": {
  "data": {
   "lineno": 740
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._check_params": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._decompose_dipole": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.expand_dims"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_brain_rad": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_brain_tan": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_csf_rad": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_csf_tan": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_scalp_rad": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_scalp_tan": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_skull_rad": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._potential_skull_tan": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._rz_params": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "numpy.errstate",
    "numpy.sqrt",
    "numpy.sum",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor._sign_rad_dipole": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor.get_dipole_potential": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.FourSphereVolumeConductor.get_transformation_matrix": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.InfiniteVolumeConductor": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lfpykit.eegmegcalc.InfiniteVolumeConductor.__init__": {
  "data": {
   "lineno": 839
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.InfiniteVolumeConductor.get_dipole_potential": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.InfiniteVolumeConductor.get_transformation_matrix": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.MEG": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lfpykit.eegmegcalc.MEG.__init__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.MEG.calculate_H": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "enumerate",
    "numpy.allclose",
    "numpy.cross",
    "numpy.empty",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.MEG.get_transformation_matrix": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.NYHeadModel": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lfpykit.eegmegcalc.NYHeadModel.__init__": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.NYHeadModel._load_head_model": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "input",
    "lfpykit.eegmegcalc.h5py",
    "lfpykit.eegmegcalc.os",
    "lfpykit.eegmegcalc.ssl",
    "lfpykit.eegmegcalc.sys",
    "numpy.array",
    "open",
    "print",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.NYHeadModel.find_closest_electrode": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.argmin",
    "numpy.array",
    "numpy.min",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.NYHeadModel.get_transformation_matrix": {
  "data": {
   "lineno": 1309
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.NYHeadModel.return_closest_idx": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "numpy.argmin"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.NYHeadModel.rotate_dipole_to_surface_normal": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "RuntimeError",
    "lfpykit.eegmegcalc.math",
    "numpy.cos",
    "numpy.cross",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.NYHeadModel.set_dipole_pos": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "len",
    "list",
    "numpy.ndarray",
    "numpy.sqrt",
    "numpy.sum",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "lfpykit.eegmegcalc.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.lpmv": {
  "data": {
   "shadows": "scipy.special.lpmv"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "lfpykit.eegmegcalc.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "lfpykit.lfpcalc": {
  "data": {},
  "type": "module"
 },
 "lfpykit.lfpcalc._anisotropic_line_source_case_i": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._anisotropic_line_source_case_iia": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._anisotropic_line_source_case_iib": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.sign",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._anisotropic_line_source_case_iii": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._anisotropic_line_source_case_iiii": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.arcsinh",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._check_rlimit_point": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._deltaS_calc": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._h_calc": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._linesource_calc_case1": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._linesource_calc_case2": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._linesource_calc_case3": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._r2_calc": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc._r_root_calc": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_linesource": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "_deltaS_calc",
    "_h_calc",
    "_linesource_calc_case1",
    "_linesource_calc_case2",
    "_linesource_calc_case3",
    "_r2_calc",
    "len",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_linesource_anisotropic": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "RuntimeError",
    "_anisotropic_line_source_case_i",
    "_anisotropic_line_source_case_iia",
    "_anisotropic_line_source_case_iib",
    "_anisotropic_line_source_case_iii",
    "_anisotropic_line_source_case_iiii",
    "len",
    "lfpykit.lfpcalc.return_dist_from_segments",
    "numpy.abs",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.isnan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_linesource_moi": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "RuntimeError",
    "_omega",
    "lfpykit.lfpcalc._deltaS_calc",
    "lfpykit.lfpcalc.return_dist_from_segments",
    "numpy.abs",
    "numpy.array",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_linesource_moi._omega": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.log",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_pointsource": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "_check_rlimit_point",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_pointsource_anisotropic": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_pointsource_moi": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "_omega",
    "numpy.arange",
    "numpy.pi",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_pointsource_moi._omega": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_root_as_point": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "_deltaS_calc",
    "_h_calc",
    "_linesource_calc_case1",
    "_linesource_calc_case2",
    "_linesource_calc_case3",
    "_r2_calc",
    "_r_root_calc",
    "numpy.any",
    "numpy.array",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_root_as_point_anisotropic": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "RuntimeError",
    "_anisotropic_line_source_case_i",
    "_anisotropic_line_source_case_iia",
    "_anisotropic_line_source_case_iib",
    "_anisotropic_line_source_case_iii",
    "_anisotropic_line_source_case_iiii",
    "len",
    "lfpykit.lfpcalc.return_dist_from_segments",
    "numpy.abs",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.isnan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_root_as_point_moi": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "RuntimeError",
    "_omega",
    "lfpykit.lfpcalc._deltaS_calc",
    "lfpykit.lfpcalc.return_dist_from_segments",
    "numpy.abs",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.calc_lfp_root_as_point_moi._omega": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lfpykit.lfpcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lfpykit.lfpcalc.return_dist_from_segments": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "lfpykit.models": {
  "data": {},
  "type": "module"
 },
 "lfpykit.models.CurrentDipoleMoment": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "lfpykit.models.LinearModel"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.CurrentDipoleMoment.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.CurrentDipoleMoment.get_transformation_matrix": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.LaminarCurrentSourceDensity": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "lfpykit.models.LinearModel"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.LaminarCurrentSourceDensity.__init__": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.diff",
    "numpy.ndarray",
    "super",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.LaminarCurrentSourceDensity.get_transformation_matrix": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "AttributeError",
    "_PrPz",
    "enumerate",
    "numpy.array",
    "numpy.diff",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.LineSourcePotential": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "lfpykit.models.LinearModel"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.LineSourcePotential.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.LineSourcePotential.get_transformation_matrix": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.LinearModel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.LinearModel.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "lfpykit.models.LinearModel.get_transformation_matrix": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.OneSphereVolumeConductor": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "lfpykit.models.LinearModel"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.OneSphereVolumeConductor.__init__": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.OneSphereVolumeConductor.calc_potential": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "numpy.all",
    "numpy.cos",
    "numpy.dot",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.isreal",
    "numpy.ndarray",
    "numpy.pi",
    "numpy.polynomial.legendre.Legendre",
    "numpy.shape",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "poly_i",
    "poly_o",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.OneSphereVolumeConductor.get_transformation_matrix": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "AttributeError",
    "enumerate",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.array",
    "numpy.copy",
    "numpy.sqrt",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.PointSourcePotential": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "lfpykit.models.LinearModel"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.PointSourcePotential.__init__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.PointSourcePotential.get_transformation_matrix": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecExtElectrode": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "lfpykit.models.LinearModel"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.RecExtElectrode.__init__": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "Exception",
    "MEAutility.MEA",
    "MEAutility.core.MEA",
    "TypeError",
    "ValueError",
    "copy.deepcopy",
    "float",
    "int",
    "isinstance",
    "len",
    "lfpykit.models.sys",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.ndarray",
    "print",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecExtElectrode._lfp_el_pos_calc_dist": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "enumerate",
    "loop_over_points",
    "numpy.array",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecExtElectrode._lfp_el_pos_calc_dist.loop_over_points": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecExtElectrode._loop_over_contacts": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecExtElectrode.get_transformation_matrix": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecMEAElectrode": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "lfpykit.models.RecExtElectrode"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.RecMEAElectrode.__init__": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecMEAElectrode._return_comp_outside_slice": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecMEAElectrode._squeeze_cell_in_depth_direction": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecMEAElectrode._test_cell_extent": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "RuntimeError",
    "print"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecMEAElectrode.distort_cell_geometry": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.RecMEAElectrode.get_transformation_matrix": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.VolumetricCurrentSourceDensity": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": [
    "lfpykit.models.LinearModel"
   ]
  },
  "type": "class"
 },
 "lfpykit.models.VolumetricCurrentSourceDensity.__init__": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.VolumetricCurrentSourceDensity.get_transformation_matrix": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "AttributeError",
    "int",
    "numpy.c_",
    "numpy.ceil",
    "numpy.histogramdd",
    "numpy.linspace",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.models._PrPz": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "lfpykit.models.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "lfpykit.models.mu": {
  "data": {
   "shadows": "MEAutility"
  },
  "type": "import"
 },
 "lfpykit.models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lfpykit.models.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lfpykit.tests.test_eegmegcalc": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "ImportError",
    "lfpykit.tests.test_eegmegcalc.h5py",
    "lfpykit.tests.test_eegmegcalc.nyhead_file",
    "lfpykit.tests.test_eegmegcalc.os",
    "lfpykit.tests.test_eegmegcalc.test_folder"
   ]
  },
  "type": "module"
 },
 "lfpykit.tests.test_eegmegcalc.decompose_dipole": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "lfpykit.tests.test_eegmegcalc.make_class_object",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.eegmegcalc": {
  "data": {
   "shadows": "lfpykit.eegmegcalc"
  },
  "type": "import"
 },
 "lfpykit.tests.test_eegmegcalc.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "lfpykit.tests.test_eegmegcalc.head_data": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "lfpykit.tests.test_eegmegcalc.lfpykit": {
  "data": {
   "shadows": "lfpykit"
  },
  "type": "import"
 },
 "lfpykit.tests.test_eegmegcalc.make_class_object": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.FourSphereVolumeConductor"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.make_simple_class_object": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lfpykit.tests.test_eegmegcalc.nyhead_file": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "lfpykit.tests.test_eegmegcalc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "lfpykit.tests.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_phi_00": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "make_class_object",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_phi_01": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.isnan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_theta_00": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "make_class_object",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_vn_00": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "make_simple_class_object",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_yn_00": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "make_simple_class_object",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_zn_00": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "make_simple_class_object",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params_00": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "RuntimeError",
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params_01": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params_02": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_decompose_dipole_00": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "decompose_dipole",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_decompose_dipole_01": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_get_dipole_potential_00": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "lfpykit.eegmegcalc.InfiniteVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_get_dipole_potential_01": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "len",
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "lfpykit.tests.test_eegmegcalc.lfpykit",
    "lfpykit.tests.test_eegmegcalc.os",
    "numpy.abs",
    "numpy.load",
    "numpy.max",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_get_dipole_potential_02": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "len",
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_get_transformation_matrix_00": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "len",
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_rad_dipole_00": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "decompose_dipole",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_rad_sign_00": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "make_class_object",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_rz_params_00": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "RuntimeError",
    "lfpykit.eegmegcalc.FourSphereVolumeConductor",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testFourSphereVolumeConductor.test_tan_dipole_00": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "decompose_dipole",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testInfiniteVolumeConductor": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "lfpykit.tests.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_eegmegcalc.testInfiniteVolumeConductor.test_get_dipole_potential_00": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.InfiniteVolumeConductor",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testInfiniteVolumeConductor.test_get_transformation_matrix_00": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.InfiniteVolumeConductor",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "lfpykit.tests.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG.test_MEG_00": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.MEG",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG.test_MEG_01": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.MEG",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG.test_MEG_02": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.MEG",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG.test_MEG_03": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.MEG",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG.test_MEG_04": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.MEG",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG.test_MEG_05": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.MEG",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testMEG.test_MEG_06": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.MEG",
    "numpy.array",
    "numpy.c_",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testNYHeadModel": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "lfpykit.tests.test_eegmegcalc.test_NYHeadModel",
    "lfpykit.tests.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_eegmegcalc.testNYHeadModel.test_NYH_dip_rotations": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.NYHeadModel",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_less",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testNYHeadModel.test_NYH_locations": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "lfpykit.eegmegcalc.NYHeadModel",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testNYHeadModel.test_lead_field_dim": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.NYHeadModel",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testNYHeadModel.test_transformation_matrix_shape": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "lfpykit.eegmegcalc.NYHeadModel",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testOneSphereVolumeConductor": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "lfpykit.tests.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_00": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "abs",
    "lfpykit.tests.test_eegmegcalc.lfpykit",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_01": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "abs",
    "lfpykit.tests.test_eegmegcalc.lfpykit",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_eegmegcalc.test_NYHeadModel": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "lfpykit.tests.test_eegmegcalc.test_folder": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "lfpykit.tests.test_eegmegcalc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "lfpykit.tests.test_lfpcalc": {
  "data": {},
  "type": "module"
 },
 "lfpykit.tests.test_lfpcalc.CellGeometry": {
  "data": {
   "shadows": "lfpykit.CellGeometry"
  },
  "type": "import"
 },
 "lfpykit.tests.test_lfpcalc.DummyCell": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "lfpykit.CellGeometry"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_lfpcalc.DummyCell.__init__": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.lfpcalc": {
  "data": {
   "shadows": "lfpykit.lfpcalc"
  },
  "type": "import"
 },
 "lfpykit.tests.test_lfpcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "lfpykit.tests.test_lfpcalc.unittest"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_deltaS_calc": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc._deltaS_calc",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_linesource_00": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_linesource",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_linesource_moi_00": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_linesource",
    "lfpykit.lfpcalc.calc_lfp_linesource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_linesource_moi_01": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_linesource",
    "lfpykit.lfpcalc.calc_lfp_linesource_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_linesource_moi_20steps": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_linesource_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_linesource_moi_infinite_slice": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_linesource_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_linesource_moi_saline_effect": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_linesource_moi",
    "numpy.array",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_00": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource",
    "numpy.pi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_anisotropic": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource_anisotropic",
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_00": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource",
    "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_01": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.abs",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_02": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource",
    "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_03": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_root_as_point",
    "lfpykit.lfpcalc.calc_lfp_root_as_point_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_04": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource",
    "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_20steps": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_infinite_slice": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_pointsource_moi_saline_effect": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.array",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_root_as_point_moi_20steps": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_root_as_point_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_root_as_point_moi_doubling": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_root_as_point",
    "lfpykit.lfpcalc.calc_lfp_root_as_point_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_root_as_point_moi_infinite_slice": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_root_as_point_moi",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_calc_lfp_root_as_point_moi_saline_effect": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.calc_lfp_root_as_point_moi",
    "numpy.array",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.testLfpCalc.test_lfpcalc_return_dist_from_segments_00": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DummyCell",
    "lfpykit.lfpcalc.return_dist_from_segments",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_lfpcalc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "lfpykit.tests.test_module": {
  "data": {},
  "type": "module"
 },
 "lfpykit.tests.test_module.TestSuite": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "lfpykit.tests.test_module.unittest"
   ]
  },
  "type": "class"
 },
 "lfpykit.tests.test_module.TestSuite.test_CurrentDipoleMoment_00": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "lfpykit.CurrentDipoleMoment",
    "lfpykit.tests.test_module.get_cell",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LaminarCurrentSourceDensity_00": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "lfpykit.LaminarCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LaminarCurrentSourceDensity_01": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "lfpykit.LaminarCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LaminarCurrentSourceDensity_02": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "lfpykit.LaminarCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LaminarCurrentSourceDensity_05": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "lfpykit.LaminarCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LaminarCurrentSourceDensity_06": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "lfpykit.LaminarCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LaminarCurrentSourceDensity_3": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "lfpykit.LaminarCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LaminarCurrentSourceDensity_4": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "lfpykit.LaminarCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LineSourcePotential_00": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "lfpykit.LineSourcePotential",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LineSourcePotential_01": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "lfpykit.LineSourcePotential",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LineSourcePotential_02": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "lfpykit.LineSourcePotential",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LineSourcePotential_03": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "lfpykit.LineSourcePotential",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_LinearModel_00": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "lfpykit.LinearModel",
    "lfpykit.tests.test_module.get_cell",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_PointSoucePotential_00": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "enumerate",
    "lfpykit.PointSourcePotential",
    "lfpykit.tests.test_module.get_cell",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.r_.T",
    "zip"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_PointSoucePotential_01": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "lfpykit.PointSourcePotential",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_PointSoucePotential_02": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "lfpykit.PointSourcePotential",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecExtElectrode_00": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "lfpykit.RecExtElectrode",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecExtElectrode_01": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "lfpykit.RecExtElectrode",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecExtElectrode_02": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "lfpykit.RecExtElectrode",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecExtElectrode_03": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "lfpykit.RecExtElectrode",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecExtElectrode_04": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "bool",
    "lfpykit.LineSourcePotential",
    "lfpykit.PointSourcePotential",
    "lfpykit.RecExtElectrode",
    "lfpykit.tests.test_module.get_cell",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecMEAElectrode_00": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "lfpykit.RecMEAElectrode",
    "lfpykit.tests.test_module.get_cell",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecMEAElectrode_01": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "RuntimeError",
    "lfpykit.CellGeometry",
    "lfpykit.RecMEAElectrode",
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecMEAElectrode_02": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "RuntimeError",
    "lfpykit.CellGeometry",
    "lfpykit.RecMEAElectrode",
    "numpy.array",
    "numpy.linspace",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_RecMEAElectrode_03": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "lfpykit.CellGeometry",
    "lfpykit.RecMEAElectrode",
    "numpy.array",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_TestSuite_00": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_VolumetricCurrentSourceDensity_00": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "lfpykit.VolumetricCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_VolumetricCurrentSourceDensity_01": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "lfpykit.VolumetricCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_VolumetricCurrentSourceDensity_02": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "lfpykit.VolumetricCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_VolumetricCurrentSourceDensity_03": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "lfpykit.VolumetricCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.TestSuite.test_VolumetricCurrentSourceDensity_04": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "lfpykit.VolumetricCurrentSourceDensity",
    "lfpykit.tests.test_module.get_cell",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.get_cell": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "lfpykit.CellGeometry",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "lfpykit.tests.test_module.lfp": {
  "data": {
   "shadows": "lfpykit"
  },
  "type": "import"
 },
 "lfpykit.tests.test_module.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lfpykit.tests.test_module.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "lfpykit.version": {
  "data": {},
  "type": "module"
 },
 "lfpykit.version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 }
}