{
 "flake8_simplify": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.Constant",
   "ast.NameConstant",
   "ast.Num",
   "ast.Str",
   "sys.version_info"
  ],
  "type": "module"
 },
 "flake8_simplify.Call": {
  "lineno": 32,
  "symbols_in_volume": [
   "ast.Call"
  ],
  "type": "class"
 },
 "flake8_simplify.Call.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Expr"
  ],
  "type": "function"
 },
 "flake8_simplify.Plugin": {
  "lineno": 1446,
  "symbols_in_volume": [
   "importlib.metadata.version"
  ],
  "type": "class"
 },
 "flake8_simplify.Plugin.__init__": {
  "lineno": 1450,
  "symbols_in_volume": [
   "ast.AST"
  ],
  "type": "function"
 },
 "flake8_simplify.Plugin.run": {
  "lineno": 1453,
  "symbols_in_volume": [
   "ast.iter_child_nodes",
   "ast.walk",
   "typing.Any",
   "typing.Generator",
   "typing.Tuple",
   "typing.Type"
  ],
  "type": "function"
 },
 "flake8_simplify.UnaryOp": {
  "lineno": 22,
  "symbols_in_volume": [
   "ast.UnaryOp"
  ],
  "type": "class"
 },
 "flake8_simplify.UnaryOp.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.UnaryOp"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor": {
  "lineno": 1382,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "flake8_simplify.Visitor.__init__": {
  "lineno": 1383,
  "symbols_in_volume": [
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_BoolOp": {
  "lineno": 1394,
  "symbols_in_volume": [
   "ast.BoolOp"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_Call": {
  "lineno": 1386,
  "symbols_in_volume": [
   "ast.Call",
   "typing.Any"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_Compare": {
  "lineno": 1441,
  "symbols_in_volume": [
   "ast.Compare"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_Expr": {
  "lineno": 1390,
  "symbols_in_volume": [
   "ast.Expr"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_For": {
  "lineno": 1412,
  "symbols_in_volume": [
   "ast.For"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_If": {
  "lineno": 1403,
  "symbols_in_volume": [
   "ast.If"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_IfExp": {
  "lineno": 1435,
  "symbols_in_volume": [
   "ast.IfExp"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_Try": {
  "lineno": 1418,
  "symbols_in_volume": [
   "ast.Try"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_UnaryOp": {
  "lineno": 1423,
  "symbols_in_volume": [
   "ast.UnaryOp"
  ],
  "type": "function"
 },
 "flake8_simplify._get_duplicated_isinstance_call_by_node": {
  "lineno": 132,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Call",
   "collections.defaultdict",
   "typing.DefaultDict",
   "typing.List"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim101": {
  "lineno": 163,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Or",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim102": {
  "lineno": 176,
  "symbols_in_volume": [
   "ast.If",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim103": {
  "lineno": 203,
  "symbols_in_volume": [
   "ast.If",
   "ast.Return",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim104": {
  "lineno": 252,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.For",
   "ast.Name",
   "ast.Yield",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim105": {
  "lineno": 294,
  "symbols_in_volume": [
   "ast.ExceptHandler",
   "ast.Pass",
   "ast.Try",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim106": {
  "lineno": 348,
  "symbols_in_volume": [
   "ast.If",
   "ast.Raise",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim107": {
  "lineno": 399,
  "symbols_in_volume": [
   "ast.Return",
   "ast.Try",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim108": {
  "lineno": 433,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.If",
   "ast.Name",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim109": {
  "lineno": 481,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Compare",
   "ast.Eq",
   "ast.List",
   "ast.Name",
   "ast.Or",
   "ast.expr",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim110_sim111": {
  "lineno": 542,
  "symbols_in_volume": [
   "ast.For",
   "ast.If",
   "ast.Return",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim112": {
  "lineno": 602,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Call",
   "ast.Constant",
   "ast.Expr",
   "ast.Index",
   "ast.Name",
   "ast.Str",
   "ast.Subscript",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim113": {
  "lineno": 705,
  "symbols_in_volume": [
   "ast.AugAssign",
   "ast.For",
   "ast.Name",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim114": {
  "lineno": 747,
  "symbols_in_volume": [
   "ast.If",
   "itertools.combinations",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim115": {
  "lineno": 792,
  "symbols_in_volume": [
   "ast.Name",
   "ast.withitem",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim116": {
  "lineno": 831,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Eq",
   "ast.If",
   "ast.Name",
   "ast.Num",
   "ast.Return",
   "ast.Str",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim201": {
  "lineno": 962,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Eq",
   "ast.If",
   "ast.Not",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim202": {
  "lineno": 994,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.If",
   "ast.Not",
   "ast.NotEq",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim203": {
  "lineno": 1020,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.If",
   "ast.In",
   "ast.Not",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim204": {
  "lineno": 1046,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.If",
   "ast.Lt",
   "ast.Not",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim205": {
  "lineno": 1069,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.If",
   "ast.LtE",
   "ast.Not",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim206": {
  "lineno": 1092,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Gt",
   "ast.If",
   "ast.Not",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim207": {
  "lineno": 1115,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.GtE",
   "ast.If",
   "ast.Not",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim208": {
  "lineno": 1138,
  "symbols_in_volume": [
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim210": {
  "lineno": 1152,
  "symbols_in_volume": [
   "ast.IfExp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim211": {
  "lineno": 1167,
  "symbols_in_volume": [
   "ast.IfExp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim212": {
  "lineno": 1190,
  "symbols_in_volume": [
   "ast.IfExp",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim220": {
  "lineno": 1216,
  "symbols_in_volume": [
   "ast.And",
   "ast.BoolOp",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim221": {
  "lineno": 1257,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Not",
   "ast.Or",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim222": {
  "lineno": 1298,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Or",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim223": {
  "lineno": 1324,
  "symbols_in_volume": [
   "ast.And",
   "ast.BoolOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim300": {
  "lineno": 1350,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Constant",
   "ast.Eq",
   "ast.Str",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify.get_if_body_pairs": {
  "lineno": 913,
  "symbols_in_volume": [
   "ast.If",
   "ast.expr",
   "ast.stmt",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify.is_body_same": {
  "lineno": 926,
  "symbols_in_volume": [
   "ast.stmt",
   "typing.List"
  ],
  "type": "function"
 },
 "flake8_simplify.is_constant_increase": {
  "lineno": 956,
  "symbols_in_volume": [
   "ast.Add",
   "ast.AugAssign",
   "ast.Constant",
   "ast.Num"
  ],
  "type": "function"
 },
 "flake8_simplify.is_exception_check": {
  "lineno": 988,
  "symbols_in_volume": [
   "ast.If",
   "ast.Raise"
  ],
  "type": "function"
 },
 "flake8_simplify.is_same_expression": {
  "lineno": 1182,
  "symbols_in_volume": [
   "ast.Name",
   "ast.expr"
  ],
  "type": "function"
 },
 "flake8_simplify.is_stmt_equal": {
  "lineno": 940,
  "symbols_in_volume": [
   "ast.AST",
   "ast.stmt",
   "itertools.starmap"
  ],
  "type": "function"
 },
 "flake8_simplify.strip_parenthesis": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "flake8_simplify.strip_triple_quotes": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "flake8_simplify.to_source": {
  "lineno": 123,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.expr",
   "astor.to_source",
   "typing.Union"
  ],
  "type": "function"
 }
}