{
 "flake8_simplify": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.Constant",
   "ast.NameConstant",
   "ast.Num",
   "ast.Str",
   "sys.version_info"
  ],
  "type": "module"
 },
 "flake8_simplify.Plugin": {
  "lineno": 1145,
  "symbols_in_volume": [
   "importlib.metadata.version"
  ],
  "type": "class"
 },
 "flake8_simplify.Plugin.__init__": {
  "lineno": 1149,
  "symbols_in_volume": [
   "ast.AST"
  ],
  "type": "function"
 },
 "flake8_simplify.Plugin.run": {
  "lineno": 1152,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Generator",
   "typing.Tuple",
   "typing.Type"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor": {
  "lineno": 1088,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "flake8_simplify.Visitor.__init__": {
  "lineno": 1089,
  "symbols_in_volume": [
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_BoolOp": {
  "lineno": 1096,
  "symbols_in_volume": [
   "ast.BoolOp"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_Compare": {
  "lineno": 1140,
  "symbols_in_volume": [
   "ast.Compare"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_Expr": {
  "lineno": 1092,
  "symbols_in_volume": [
   "ast.Expr"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_For": {
  "lineno": 1112,
  "symbols_in_volume": [
   "ast.For"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_If": {
  "lineno": 1105,
  "symbols_in_volume": [
   "ast.If"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_IfExp": {
  "lineno": 1134,
  "symbols_in_volume": [
   "ast.IfExp"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_Try": {
  "lineno": 1118,
  "symbols_in_volume": [
   "ast.Try"
  ],
  "type": "function"
 },
 "flake8_simplify.Visitor.visit_UnaryOp": {
  "lineno": 1123,
  "symbols_in_volume": [
   "ast.UnaryOp"
  ],
  "type": "function"
 },
 "flake8_simplify._get_duplicated_isinstance_call_by_node": {
  "lineno": 91,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Call",
   "collections.defaultdict",
   "typing.DefaultDict",
   "typing.List"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim101": {
  "lineno": 122,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Or",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim102": {
  "lineno": 135,
  "symbols_in_volume": [
   "ast.If",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim103": {
  "lineno": 162,
  "symbols_in_volume": [
   "ast.If",
   "ast.Return",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim104": {
  "lineno": 211,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.For",
   "ast.Name",
   "ast.Yield",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim105": {
  "lineno": 253,
  "symbols_in_volume": [
   "ast.ExceptHandler",
   "ast.Pass",
   "ast.Try",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim106": {
  "lineno": 307,
  "symbols_in_volume": [
   "ast.If",
   "ast.Raise",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim107": {
  "lineno": 358,
  "symbols_in_volume": [
   "ast.Return",
   "ast.Try",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim108": {
  "lineno": 392,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.If",
   "ast.Name",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim109": {
  "lineno": 440,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Compare",
   "ast.Eq",
   "ast.List",
   "ast.Name",
   "ast.Or",
   "ast.expr",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim110_sim111": {
  "lineno": 501,
  "symbols_in_volume": [
   "ast.For",
   "ast.If",
   "ast.Return",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim112": {
  "lineno": 561,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Call",
   "ast.Expr",
   "ast.Index",
   "ast.Name",
   "ast.Str",
   "ast.Subscript",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim113": {
  "lineno": 654,
  "symbols_in_volume": [
   "ast.AugAssign",
   "ast.For",
   "ast.Name",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim201": {
  "lineno": 702,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Eq",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim202": {
  "lineno": 724,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Not",
   "ast.NotEq",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim203": {
  "lineno": 746,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.In",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim204": {
  "lineno": 768,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Lt",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim205": {
  "lineno": 787,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.LtE",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim206": {
  "lineno": 806,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Gt",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim207": {
  "lineno": 825,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.GtE",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim208": {
  "lineno": 844,
  "symbols_in_volume": [
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim210": {
  "lineno": 858,
  "symbols_in_volume": [
   "ast.IfExp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim211": {
  "lineno": 873,
  "symbols_in_volume": [
   "ast.IfExp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim212": {
  "lineno": 896,
  "symbols_in_volume": [
   "ast.IfExp",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim220": {
  "lineno": 922,
  "symbols_in_volume": [
   "ast.And",
   "ast.BoolOp",
   "ast.Not",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim221": {
  "lineno": 963,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Not",
   "ast.Or",
   "ast.UnaryOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim222": {
  "lineno": 1004,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Or",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim223": {
  "lineno": 1030,
  "symbols_in_volume": [
   "ast.And",
   "ast.BoolOp",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify._get_sim300": {
  "lineno": 1056,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Constant",
   "ast.Eq",
   "ast.Str",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "flake8_simplify.is_constant_increase": {
  "lineno": 696,
  "symbols_in_volume": [
   "ast.Add",
   "ast.AugAssign",
   "ast.Constant",
   "ast.Num"
  ],
  "type": "function"
 },
 "flake8_simplify.is_same_expression": {
  "lineno": 888,
  "symbols_in_volume": [
   "ast.Name",
   "ast.expr"
  ],
  "type": "function"
 },
 "flake8_simplify.strip_parenthesis": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "flake8_simplify.strip_triple_quotes": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "flake8_simplify.to_source": {
  "lineno": 84,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.expr",
   "astor.to_source",
   "typing.Union"
  ],
  "type": "function"
 }
}