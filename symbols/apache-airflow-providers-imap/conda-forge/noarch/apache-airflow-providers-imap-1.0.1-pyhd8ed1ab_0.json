{
 "airflow.providers.imap": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.imap.get_provider_info": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.imap.get_provider_info.get_provider_info": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.imap.hooks.imap": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.imap.hooks.imap.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.ImapHook": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.imap.hooks.imap.ImapHook.__enter__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook.__exit__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "airflow.providers.imap.hooks.imap.imaplib",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._check_mail_body": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Mail",
    "bool",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._correct_path": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._create_file": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "open",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._create_files": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._fetch_mail_body": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "Exception",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._handle_not_found_mode": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._is_escaping_current_directory": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._is_symlink": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "airflow.providers.imap.hooks.imap.os",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._list_mail_ids_desc": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Exception",
    "reversed",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook._retrieve_mails_attachments_by_name": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook.download_mail_attachments": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook.get_conn": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "airflow.providers.imap.hooks.imap.imaplib"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook.has_mail_attachment": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.ImapHook.retrieve_mail_attachments": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.LoggingMixin": {
  "data": {
   "shadows": "airflow.utils.log.logging_mixin.LoggingMixin"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.Mail": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "airflow.utils.log.logging_mixin.LoggingMixin"
   ]
  },
  "type": "class"
 },
 "airflow.providers.imap.hooks.imap.Mail.__init__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "airflow.providers.imap.hooks.imap.email",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.Mail._iterate_attachments": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "MailPart",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.Mail.get_attachments_by_name": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.Mail.has_attachments": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.MailPart": {
  "data": {
   "lineno": 333
  },
  "type": "class"
 },
 "airflow.providers.imap.hooks.imap.MailPart.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.MailPart.get_file": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.MailPart.has_equal_name": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.MailPart.has_matching_name": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "airflow.providers.imap.hooks.imap.re",
    "str",
    "typing.Any",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.MailPart.is_attachment": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.hooks.imap.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.email": {
  "data": {
   "shadows": "email"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.imaplib": {
  "data": {
   "shadows": "imaplib"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "airflow.providers.imap.hooks.imap.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "airflow.providers.imap.sensors": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.imap.sensors.imap_attachment": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.imap.sensors.imap_attachment.BaseSensorOperator": {
  "data": {
   "shadows": "airflow.sensors.base.BaseSensorOperator"
  },
  "type": "import"
 },
 "airflow.providers.imap.sensors.imap_attachment.ImapAttachmentSensor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "airflow.sensors.base.BaseSensorOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.imap.sensors.imap_attachment.ImapAttachmentSensor.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "airflow.utils.decorators.apply_defaults",
    "super"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.sensors.imap_attachment.ImapAttachmentSensor.poke": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "airflow.providers.imap.hooks.imap.ImapHook",
    "bool",
    "dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.imap.sensors.imap_attachment.ImapHook": {
  "data": {
   "shadows": "airflow.providers.imap.hooks.imap.ImapHook"
  },
  "type": "import"
 },
 "airflow.providers.imap.sensors.imap_attachment.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 }
}