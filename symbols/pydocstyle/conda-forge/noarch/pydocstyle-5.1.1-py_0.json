{
 "pydocstyle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pydocstyle.__main__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pydocstyle.__main__.main": {
  "lineno": 13,
  "symbols_in_volume": [
   "pydocstyle.cli.main"
  ],
  "type": "function"
 },
 "pydocstyle.checker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pydocstyle.checker.ConventionChecker": {
  "lineno": 32,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "class"
 },
 "pydocstyle.checker.ConventionChecker._check_args_section": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_blanks_and_section_underline": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_common_section": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_ends_with": {
  "lineno": 405,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_google_section": {
  "lineno": 785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_google_sections": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_missing_args": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_numpy_section": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_numpy_sections": {
  "lineno": 867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._check_parameters_section": {
  "lineno": 698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._get_docstring_indent": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._get_section_contexts": {
  "lineno": 811,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._get_section_contexts._suspected_as_section": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker._is_docstring_section": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_backslashes": {
  "lineno": 369,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_blank_after_summary": {
  "lineno": 243,
  "symbols_in_volume": [
   "ast.literal_eval",
   "itertools.takewhile"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_blank_before_after_class": {
  "lineno": 210,
  "symbols_in_volume": [
   "itertools.takewhile"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_capitalized": {
  "lineno": 487,
  "symbols_in_volume": [
   "ast.literal_eval",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_docstring_missing": {
  "lineno": 143,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_docstring_sections": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_ends_with_period": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_ends_with_punctuation": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_imperative_mood": {
  "lineno": 438,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_indent": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_multi_line_summary_start": {
  "lineno": 318,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_newline_after_last_paragraph": {
  "lineno": 294,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_no_blank_before": {
  "lineno": 185,
  "symbols_in_volume": [
   "itertools.takewhile",
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_no_signature": {
  "lineno": 474,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_one_liners": {
  "lineno": 170,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_source": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_starts_with_this": {
  "lineno": 504,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_surrounding_whitespaces": {
  "lineno": 309,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_triple_double_quotes": {
  "lineno": 342,
  "symbols_in_volume": [
   "ast.literal_eval",
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.check_unicode_docstring": {
  "lineno": 388,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "pydocstyle.checker.ConventionChecker.checks": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.check": {
  "lineno": 935,
  "symbols_in_volume": [
   "tokenize.TokenError",
   "tokenize.open"
  ],
  "type": "function"
 },
 "pydocstyle.checker.check_for": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.check_for.decorator": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.get_function_args": {
  "lineno": 1015,
  "symbols_in_volume": [
   "ast.parse",
   "itertools.chain"
  ],
  "type": "function"
 },
 "pydocstyle.checker.get_leading_words": {
  "lineno": 1002,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.checker.is_ascii": {
  "lineno": 992,
  "symbols_in_volume": [
   "string"
  ],
  "type": "function"
 },
 "pydocstyle.checker.is_def_arg_private": {
  "lineno": 1011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.checker.leading_space": {
  "lineno": 997,
  "symbols_in_volume": [
   "re.compile",
   "string"
  ],
  "type": "function"
 },
 "pydocstyle.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pydocstyle.cli.ReturnCode": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.cli.main": {
  "lineno": 65,
  "symbols_in_volume": [
   "sys.exit"
  ],
  "type": "function"
 },
 "pydocstyle.cli.run_pydocstyle": {
  "lineno": 20,
  "symbols_in_volume": [
   "logging.DEBUG",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "pydocstyle.cli.setup_stream_handlers": {
  "lineno": 73,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.Formatter",
   "logging.INFO",
   "logging.StreamHandler",
   "logging.WARNING",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "pydocstyle.cli.setup_stream_handlers.StdoutFilter": {
  "lineno": 75,
  "symbols_in_volume": [
   "logging.Filter"
  ],
  "type": "class"
 },
 "pydocstyle.cli.setup_stream_handlers.StdoutFilter.filter": {
  "lineno": 76,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.INFO"
  ],
  "type": "function"
 },
 "pydocstyle.config": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pydocstyle.config.ConfigurationParser": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.config.ConfigurationParser.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._create_check_config": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._create_option_parser": {
  "lineno": 544,
  "symbols_in_volume": [
   "optparse.OptionGroup",
   "optparse.OptionParser"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._create_run_config": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._expand_error_codes": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._fix_set_options": {
  "lineno": 509,
  "symbols_in_volume": [
   "collections.abc.Set"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._fix_set_options._get_set": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._get_checked_errors": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._get_config": {
  "lineno": 213,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._get_config_by_discovery": {
  "lineno": 171,
  "symbols_in_volume": [
   "os.path.split"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._get_config_file_in_folder": {
  "lineno": 405,
  "symbols_in_volume": [
   "configparser.RawConfigParser",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._get_exclusive_error_codes": {
  "lineno": 421,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._get_node_dir": {
  "lineno": 281,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._get_section_name": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._has_exclusive_option": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._merge_configuration": {
  "lineno": 342,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._parse_args": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._read_configuration_file": {
  "lineno": 287,
  "symbols_in_volume": [
   "configparser.RawConfigParser"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._set_add_options": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser._validate_options": {
  "lineno": 481,
  "symbols_in_volume": [
   "itertools.permutations"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser.get_default_run_configuration": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser.get_files_to_check": {
  "lineno": 123,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser.get_files_to_check._get_ignore_decorators": {
  "lineno": 142,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser.get_files_to_check._get_matches": {
  "lineno": 136,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser.get_user_run_configuration": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.ConfigurationParser.parse": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.IllegalConfiguration": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.config.check_initialized": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.config.check_initialized._decorator": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pydocstyle.parser.AllError": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.AllError.__init__": {
  "lineno": 277,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Class": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Decorator": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Definition": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Definition.__iter__": {
  "lineno": 74,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Definition.__str__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Definition._publicity": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Definition.error_lineno": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Definition.source": {
  "lineno": 88,
  "symbols_in_volume": [
   "itertools.dropwhile"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Definition.source.is_empty_or_comment": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Docstring": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Docstring.__init__": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Docstring.__new__": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Function": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Function.is_public": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Function.is_test": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Method": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Method.is_init": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Method.is_magic": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Method.is_public": {
  "lineno": 208,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Method.is_static": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Module": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Module.__str__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Module._is_inside_private_package": {
  "lineno": 128,
  "symbols_in_volume": [
   "pathlib.Path",
   "sys.path"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Module._is_private_name": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Module._is_public_name": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Module.is_public": {
  "lineno": 116,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pydocstyle.parser.NestedClass": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.NestedClass.is_public": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.NestedFunction": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Package": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.ParseError": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.ParseError.__str__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Parser": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Parser.__call__": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Parser._parse_from_import_names": {
  "lineno": 678,
  "symbols_in_volume": [
   "tokenize.ENDMARKER",
   "tokenize.NAME",
   "tokenize.NEWLINE",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser._parse_from_import_source": {
  "lineno": 658,
  "symbols_in_volume": [
   "tokenize.DOT",
   "tokenize.NAME",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.check_current": {
  "lineno": 634,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.consume": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Parser.leapfrog": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse": {
  "lineno": 352,
  "symbols_in_volume": [
   "io.StringIO",
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_decorators": {
  "lineno": 413,
  "symbols_in_volume": [
   "tokenize.NAME",
   "tokenize.NEWLINE",
   "tokenize.NL",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_definition": {
  "lineno": 564,
  "symbols_in_volume": [
   "tokenize.COMMENT",
   "tokenize.INDENT",
   "tokenize.NAME",
   "tokenize.NEWLINE",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_definitions": {
  "lineno": 458,
  "symbols_in_volume": [
   "tokenize.DEDENT",
   "tokenize.INDENT",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_docstring": {
  "lineno": 396,
  "symbols_in_volume": [
   "tokenize.COMMENT",
   "tokenize.NEWLINE",
   "tokenize.NL",
   "tokenize.STRING"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_dunder_all": {
  "lineno": 485,
  "symbols_in_volume": [
   "tokenize.COMMENT",
   "tokenize.ENDMARKER",
   "tokenize.NAME",
   "tokenize.NEWLINE",
   "tokenize.NL",
   "tokenize.OP",
   "tokenize.STRING"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_from_import_statement": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_module": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Parser.parse_skip_comment": {
  "lineno": 615,
  "symbols_in_volume": [
   "tokenize.COMMENT",
   "tokenize.NEWLINE",
   "tokenize.NL"
  ],
  "type": "function"
 },
 "pydocstyle.parser.Token": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Token.__init__": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Token.__str__": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.TokenKind": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.TokenKind.__repr__": {
  "lineno": 334,
  "symbols_in_volume": [
   "tokenize.tok_name"
  ],
  "type": "function"
 },
 "pydocstyle.parser.TokenStream": {
  "lineno": 289,
  "symbols_in_volume": [
   "tokenize.DEDENT",
   "tokenize.INDENT",
   "tokenize.NEWLINE"
  ],
  "type": "class"
 },
 "pydocstyle.parser.TokenStream.__init__": {
  "lineno": 297,
  "symbols_in_volume": [
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "pydocstyle.parser.TokenStream.__iter__": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.TokenStream._next_from_generator": {
  "lineno": 317,
  "symbols_in_volume": [
   "tokenize.TokenError"
  ],
  "type": "function"
 },
 "pydocstyle.parser.TokenStream.move": {
  "lineno": 304,
  "symbols_in_volume": [
   "tokenize.COMMENT",
   "tokenize.NL"
  ],
  "type": "function"
 },
 "pydocstyle.parser.UnexpectedTokenError": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.UnexpectedTokenError.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.UnexpectedTokenError.__str__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Value": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.parser.Value.__eq__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Value.__hash__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Value.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.Value.__repr__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.parser.humanize": {
  "lineno": 35,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pydocstyle.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "re.compile"
  ],
  "type": "module"
 },
 "pydocstyle.utils.common_prefix_length": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.utils.is_blank": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.utils.pairwise": {
  "lineno": 22,
  "symbols_in_volume": [
   "itertools.tee",
   "itertools.zip_longest",
   "typing.Any",
   "typing.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pydocstyle.utils.strip_non_alphanumeric": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pydocstyle.violations.AttrDict": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.violations.AttrDict.__getattr__": {
  "lineno": 259,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "pydocstyle.violations.Error": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.violations.Error.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "pydocstyle.violations.Error.__lt__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations.Error.__repr__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations.Error.__str__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations.Error.lines": {
  "lineno": 61,
  "symbols_in_volume": [
   "itertools.dropwhile"
  ],
  "type": "function"
 },
 "pydocstyle.violations.Error.message": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations.Error.set_context": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations.ErrorRegistry": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.violations.ErrorRegistry.ErrorGroup": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydocstyle.violations.ErrorRegistry.ErrorGroup.__init__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations.ErrorRegistry.ErrorGroup.create_error": {
  "lineno": 124,
  "symbols_in_volume": [
   "functools.partial",
   "typing.Callable",
   "typing.Iterable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pydocstyle.violations.ErrorRegistry.create_group": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.violations.ErrorRegistry.get_error_codes": {
  "lineno": 145,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "pydocstyle.violations.ErrorRegistry.to_rst": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydocstyle.wordlists": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "snowballstemmer.stemmer"
  ],
  "type": "module"
 },
 "pydocstyle.wordlists.load_wordlist": {
  "lineno": 20,
  "symbols_in_volume": [
   "pkgutil.get_data",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "pydocstyle.wordlists.make_imperative_verbs_dict": {
  "lineno": 38,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Iterator",
   "typing.Set"
  ],
  "type": "function"
 }
}