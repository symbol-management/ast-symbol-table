{
 "symopt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.base.SymOptBase": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symopt.base.SymOptBase.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "symopt.util.chain_scalars",
   "symopt.util.depends_only_on",
   "symopt.util.squeezed",
   "sympy.ImmutableMatrix",
   "sympy.MatrixSymbol",
   "sympy.SympifyError",
   "sympy.flatten",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "symopt.base.SymOptBase.__init__._wrap": {
  "lineno": 92,
  "symbols_in_volume": [
   "symopt.util.reshape_args",
   "sympy.lambdify",
   "sympy.utilities.autowrap.autowrap"
  ],
  "type": "function"
 },
 "symopt.base.SymOptBase.is_linear": {
  "lineno": 106,
  "symbols_in_volume": [
   "symopt.util.is_linear"
  ],
  "type": "function"
 },
 "symopt.base.SymOptBase.is_quadratic": {
  "lineno": 111,
  "symbols_in_volume": [
   "symopt.util.is_quadratic"
  ],
  "type": "function"
 },
 "symopt.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.constraint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.constraint.Constraint": {
  "lineno": 83,
  "symbols_in_volume": [
   "symopt.base.SymOptBase"
  ],
  "type": "class"
 },
 "symopt.constraint.Constraint.__init__": {
  "lineno": 86,
  "symbols_in_volume": [
   "sympy.SympifyError",
   "sympy.Unequality",
   "sympy.core.relational.Relational",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "symopt.constraint.Constraint.__str__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.Constraint.as_scipy_dict": {
  "lineno": 138,
  "symbols_in_volume": [
   "symopt.util.negated",
   "sympy.Equality",
   "sympy.LessThan",
   "sympy.StrictLessThan"
  ],
  "type": "function"
 },
 "symopt.constraint.Constraint.type": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection": {
  "lineno": 11,
  "symbols_in_volume": [
   "collections.abc.Sequence"
  ],
  "type": "class"
 },
 "symopt.constraint.ConstraintCollection.__contains__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.__getitem__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.__iter__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.__len__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.__reversed__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.__str__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.all_linear": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.constraint.ConstraintCollection.all_quadratic": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.objective": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.objective.ObjectiveFunction": {
  "lineno": 4,
  "symbols_in_volume": [
   "symopt.base.SymOptBase"
  ],
  "type": "class"
 },
 "symopt.objective.ObjectiveFunction.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.objective.ObjectiveFunction.__str__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.problem": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.problem.OptimizationProblem": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symopt.problem.OptimizationProblem.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "symopt.constraint.ConstraintCollection",
   "symopt.objective.ObjectiveFunction"
  ],
  "type": "function"
 },
 "symopt.problem.OptimizationProblem._fill_in_params": {
  "lineno": 163,
  "symbols_in_volume": [
   "sympy.Matrix",
   "sympy.MatrixSymbol"
  ],
  "type": "function"
 },
 "symopt.problem.OptimizationProblem._process_bounds": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "symopt.util.chain_scalars",
   "symopt.util.depends_only_on",
   "sympy.SympifyError",
   "sympy.oo",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "symopt.problem.OptimizationProblem._process_params": {
  "lineno": 121,
  "symbols_in_volume": [
   "orderedset.OrderedSet",
   "sympy.MatrixSymbol",
   "sympy.Symbol",
   "sympy.SympifyError",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "symopt.problem.OptimizationProblem._process_vars": {
  "lineno": 108,
  "symbols_in_volume": [
   "orderedset.OrderedSet",
   "sympy.MatrixSymbol",
   "sympy.Symbol",
   "sympy.SympifyError",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "symopt.problem.OptimizationProblem.eval_bounds": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.asarray",
   "sympy.Matrix"
  ],
  "type": "function"
 },
 "symopt.problem.OptimizationProblem.solve": {
  "lineno": 188,
  "symbols_in_volume": [
   "symopt.solvers.solve"
  ],
  "type": "function"
 },
 "symopt.solvers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.solvers.ipopt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.solvers.ipopt.solve_ipopt": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.triu_indices",
   "scipy.optimize.OptimizeResult",
   "symopt.config.HAS_IPOPT",
   "sympy.GreaterThan",
   "sympy.LessThan",
   "sympy.StrictGreaterThan",
   "sympy.StrictLessThan"
  ],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem": {
  "lineno": 37,
  "symbols_in_volume": [
   "ipopt.problem"
  ],
  "type": "class"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.constraints": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.gradient": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.hessian": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.hessianstructure": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.intermediate": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.jacobian": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "symopt.solvers.ipopt.solve_ipopt.IpoptProblem.objective": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.solvers.scipy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.solvers.scipy.prepare_scipy": {
  "lineno": 15,
  "symbols_in_volume": [
   "symopt.util.negated"
  ],
  "type": "function"
 },
 "symopt.solvers.scipy.solve_cobyla": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.logical_and",
   "scipy.optimize.minimize",
   "sympy.Equality",
   "sympy.oo"
  ],
  "type": "function"
 },
 "symopt.solvers.scipy.solve_slsqp": {
  "lineno": 45,
  "symbols_in_volume": [
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "symopt.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.tests.test_symopt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.tests.test_symopt.needs_ipopt": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.tests.test_symopt.needs_ipopt.new_test_func": {
  "lineno": 16,
  "symbols_in_volume": [
   "pytest.skip",
   "symopt.config.HAS_IPOPT"
  ],
  "type": "function"
 },
 "symopt.tests.test_symopt.test_prob18": {
  "lineno": 27,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.allclose",
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.skip",
   "symopt.config.HAS_IPOPT",
   "symopt.problem.OptimizationProblem",
   "sympy.MatrixSymbol",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "symopt.tests.test_symopt.test_prob64": {
  "lineno": 92,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.allclose",
   "numpy.array",
   "numpy.ones",
   "pytest.mark.parametrize",
   "symopt.problem.OptimizationProblem",
   "sympy.MatrixSymbol",
   "sympy.symarray"
  ],
  "type": "function"
 },
 "symopt.tests.test_symopt.test_prob71": {
  "lineno": 58,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.abs",
   "numpy.allclose",
   "numpy.array",
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.skip",
   "symopt.config.HAS_IPOPT",
   "symopt.problem.OptimizationProblem",
   "sympy.Eq",
   "sympy.MatrixSymbol"
  ],
  "type": "function"
 },
 "symopt.tests.test_symopt.test_prob77": {
  "lineno": 114,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.allclose",
   "numpy.array",
   "numpy.ones",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "pytest.skip",
   "symopt.config.HAS_IPOPT",
   "symopt.problem.OptimizationProblem",
   "sympy.sin",
   "sympy.symarray"
  ],
  "type": "function"
 },
 "symopt.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symopt.util.as_scalars": {
  "lineno": 86,
  "symbols_in_volume": [
   "sympy.MatrixSymbol",
   "sympy.flatten"
  ],
  "type": "function"
 },
 "symopt.util.chain_scalars": {
  "lineno": 107,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "symopt.util.depends_only_on": {
  "lineno": 44,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "symopt.util.is_linear": {
  "lineno": 125,
  "symbols_in_volume": [
   "itertools.combinations_with_replacement",
   "sympy.Eq",
   "sympy.diff"
  ],
  "type": "function"
 },
 "symopt.util.is_quadratic": {
  "lineno": 148,
  "symbols_in_volume": [
   "itertools.combinations_with_replacement",
   "orderedset.OrderedSet",
   "sympy.diff"
  ],
  "type": "function"
 },
 "symopt.util.negated": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.util.negated.wrapped": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.util.reshape_args": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.util.reshape_args.wrapped": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.util.reshape_like": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.asfarray",
   "sympy",
   "sympy.DeferredVector",
   "sympy.MatrixSymbol",
   "sympy.Symbol",
   "sympy.shape"
  ],
  "type": "function"
 },
 "symopt.util.squeezed": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symopt.util.squeezed.wrapped": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 }
}