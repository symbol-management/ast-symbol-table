{
 "aiormq": {
  "data": {},
  "type": "module"
 },
 "aiormq.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "aiormq.auth": {
  "data": {},
  "type": "module"
 },
 "aiormq.auth.AuthBase": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "aiormq.auth.AuthBase.__init__": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "aiormq.auth.AuthBase.encode": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "NotImplementedError",
    "aiormq.auth.abc",
    "bytes"
   ]
  },
  "type": "function"
 },
 "aiormq.auth.AuthBase.marshal": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "aiormq.auth.AuthMechanism": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "aiormq.auth.PlainAuth",
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "aiormq.auth.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "aiormq.auth.PlainAuth": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "aiormq.auth.AuthBase"
   ]
  },
  "type": "class"
 },
 "aiormq.auth.PlainAuth.encode": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "aiormq.auth.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "aiormq.base": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "aiormq.base.Base": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Exception",
    "aiormq.base.abc",
    "aiormq.base.asyncio",
    "contextlib.suppress"
   ]
  },
  "type": "class"
 },
 "aiormq.base.Base.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "aiormq.base.FutureStore"
   ]
  },
  "type": "function"
 },
 "aiormq.base.Base.__repr__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.base.Base.__str__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "NotImplementedError",
    "aiormq.base.abc"
   ]
  },
  "type": "function"
 },
 "aiormq.base.Base._cancel_tasks": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Exception",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "aiormq.base.Base._create_closing_future": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "aiormq.base.Base._future_store_child": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "aiormq.base.Base.create_future": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "aiormq.base.asyncio"
   ]
  },
  "type": "function"
 },
 "aiormq.base.Base.create_task": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "aiormq.base.asyncio"
   ]
  },
  "type": "function"
 },
 "aiormq.base.Base.is_closed": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.base.FutureStore": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "aiormq.base.TaskWrapper",
    "aiormq.base.asyncio",
    "isinstance"
   ]
  },
  "type": "class"
 },
 "aiormq.base.FutureStore.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "aiormq.base.asyncio",
    "set"
   ]
  },
  "type": "function"
 },
 "aiormq.base.FutureStore.__on_task_done": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "aiormq.base.FutureStore.__on_task_done.remover": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "aiormq.base.FutureStore.add": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "aiormq.base.TaskWrapper",
    "aiormq.base.asyncio",
    "aiormq.base.typing"
   ]
  },
  "type": "function"
 },
 "aiormq.base.FutureStore.create_future": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "aiormq.base.FutureStore.create_task": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "aiormq.base.T",
    "aiormq.base.TaskWrapper"
   ]
  },
  "type": "function"
 },
 "aiormq.base.FutureStore.get_child": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "aiormq.base.FutureStore"
   ]
  },
  "type": "function"
 },
 "aiormq.base.T": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "aiormq.base.TaskWrapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "aiormq.base.asyncio"
   ]
  },
  "type": "class"
 },
 "aiormq.base.TaskWrapper.__await__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "aiormq.base.TaskWrapper.__getattr__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "aiormq.base.TaskWrapper.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "aiormq.base.asyncio"
   ]
  },
  "type": "function"
 },
 "aiormq.base.TaskWrapper.__repr__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "aiormq.base.TaskWrapper.cancel": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "aiormq.base.asyncio"
   ]
  },
  "type": "function"
 },
 "aiormq.base.TaskWrapper.throw": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "aiormq.base.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "aiormq.base.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "aiormq.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "aiormq.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "aiormq.base.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiormq.base.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "aiormq.base.task": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "aiormq.base.T",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "aiormq.base.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "aiormq.base.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "aiormq.channel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "aiormq.channel.logging"
   ]
  },
  "type": "module"
 },
 "aiormq.channel.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "aiormq.channel.Channel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "DeliveredMessage",
    "Exception",
    "aiormq.channel.asyncio",
    "aiormq.channel.log",
    "aiormq.channel.os",
    "aiormq.channel.typing",
    "aiormq.tools.awaitable",
    "binascii.hexlify",
    "bool",
    "bytes",
    "cb",
    "consumer",
    "contextlib.suppress",
    "dict",
    "functools.partial",
    "getattr",
    "int",
    "io.BytesIO",
    "isinstance",
    "iter",
    "len",
    "object",
    "pamqp.ContentHeader",
    "pamqp.body.ContentBody",
    "pamqp.specification.AMQPFrameError",
    "pamqp.specification.Basic.Ack",
    "pamqp.specification.Basic.Cancel",
    "pamqp.specification.Basic.CancelOk",
    "pamqp.specification.Basic.Consume",
    "pamqp.specification.Basic.ConsumeOk",
    "pamqp.specification.Basic.Deliver",
    "pamqp.specification.Basic.Get",
    "pamqp.specification.Basic.GetEmpty",
    "pamqp.specification.Basic.GetOk",
    "pamqp.specification.Basic.Nack",
    "pamqp.specification.Basic.Properties",
    "pamqp.specification.Basic.Publish",
    "pamqp.specification.Basic.Qos",
    "pamqp.specification.Basic.QosOk",
    "pamqp.specification.Basic.Recover",
    "pamqp.specification.Basic.RecoverAsync",
    "pamqp.specification.Basic.RecoverOk",
    "pamqp.specification.Basic.Reject",
    "pamqp.specification.Basic.Return",
    "pamqp.specification.Channel.Close",
    "pamqp.specification.Channel.CloseOk",
    "pamqp.specification.Channel.Flow",
    "pamqp.specification.Channel.FlowOk",
    "pamqp.specification.Channel.Open",
    "pamqp.specification.Confirm.Select",
    "pamqp.specification.Exchange.Bind",
    "pamqp.specification.Exchange.BindOk",
    "pamqp.specification.Exchange.Declare",
    "pamqp.specification.Exchange.DeclareOk",
    "pamqp.specification.Exchange.Unbind",
    "pamqp.specification.Exchange.UnbindOk",
    "pamqp.specification.Frame",
    "pamqp.specification.Queue.Bind",
    "pamqp.specification.Queue.BindOk",
    "pamqp.specification.Queue.Declare",
    "pamqp.specification.Queue.DeclareOk",
    "pamqp.specification.Queue.Delete",
    "pamqp.specification.Queue.DeleteOk",
    "pamqp.specification.Queue.Purge",
    "pamqp.specification.Queue.PurgeOk",
    "pamqp.specification.Queue.Unbind",
    "pamqp.specification.Queue.UnbindOk",
    "pamqp.specification.REPLY_SUCCESS",
    "pamqp.specification.Tx.Commit",
    "pamqp.specification.Tx.CommitOk",
    "pamqp.specification.Tx.Rollback",
    "pamqp.specification.Tx.RollbackOk",
    "pamqp.specification.Tx.Select",
    "pamqp.specification.Tx.SelectOk",
    "str"
   ]
  },
  "type": "class"
 },
 "aiormq.channel.Channel.__clean_up_when_writer_close": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "aiormq.channel.Channel.__exception_by_code": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pamqp.specification.Channel.Close",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "aiormq.channel.asyncio",
    "collections.OrderedDict",
    "dict",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel.__str__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel._confirm_delivery": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "aiormq.channel.log",
    "isinstance",
    "pamqp.specification.Basic.Ack"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel.basic_ack": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "aiormq.tools.LazyCoroutine",
    "pamqp.specification.Basic.Ack"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel.basic_nack": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "aiormq.tools.LazyCoroutine",
    "bool",
    "pamqp.specification.Basic.Nack",
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel.basic_reject": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "aiormq.tools.LazyCoroutine",
    "pamqp.specification.Basic.Reject"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel.exchange_delete": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "bool",
    "pamqp.specification.Exchange.Delete",
    "pamqp.specification.Exchange.DeleteOk",
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.Channel.lock": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.channel.ContentBody": {
  "data": {
   "shadows": "pamqp.body.ContentBody"
  },
  "type": "import"
 },
 "aiormq.channel.ContentHeader": {
  "data": {
   "shadows": "pamqp.ContentHeader"
  },
  "type": "import"
 },
 "aiormq.channel.LazyCoroutine": {
  "data": {
   "shadows": "aiormq.tools.LazyCoroutine"
  },
  "type": "import"
 },
 "aiormq.channel.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "aiormq.channel.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiormq.channel.awaitable": {
  "data": {
   "shadows": "aiormq.tools.awaitable"
  },
  "type": "import"
 },
 "aiormq.channel.exc": {
  "data": {
   "shadows": "exceptions"
  },
  "type": "import"
 },
 "aiormq.channel.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "aiormq.channel.log": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "aiormq.channel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "aiormq.channel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "aiormq.channel.pamqp.frame": {
  "data": {
   "shadows": "pamqp.frame"
  },
  "type": "import"
 },
 "aiormq.channel.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "aiormq.channel.spec": {
  "data": {
   "shadows": "pamqp.specification"
  },
  "type": "import"
 },
 "aiormq.channel.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "aiormq.channel.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "aiormq.connection": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "__name__",
    "aiormq.connection.Connection",
    "aiormq.connection.connection",
    "aiormq.connection.logging",
    "aiormq.connection.platform",
    "pamqp.specification.Channel.Close",
    "pamqp.specification.Channel.CloseOk",
    "yarl.DEFAULT_PORTS"
   ]
  },
  "type": "module"
 },
 "aiormq.connection.CHANNEL_CLOSE_RESPONSES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "aiormq.connection.Connection": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Channel",
    "ConnectionError",
    "EOFError",
    "Exception",
    "OSError",
    "RuntimeError",
    "ValueError",
    "aiormq.connection.CHANNEL_CLOSE_RESPONSES",
    "aiormq.connection.asyncio",
    "aiormq.connection.log",
    "aiormq.connection.typing",
    "dict",
    "hasattr",
    "int",
    "isinstance",
    "max",
    "pamqp.ProtocolHeader",
    "pamqp.heartbeat.Heartbeat",
    "pamqp.specification.AMQPFrameError",
    "pamqp.specification.AMQPInternalError",
    "pamqp.specification.AMQPSyntaxError",
    "pamqp.specification.Connection.Close",
    "pamqp.specification.Connection.CloseOk",
    "pamqp.specification.Connection.Open",
    "pamqp.specification.Connection.StartOk",
    "pamqp.specification.Connection.TuneOk",
    "pamqp.specification.Frame",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "aiormq.connection.Connection.__exception_by_code": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "pamqp.specification.Connection.Close",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "SSLCerts",
    "aiormq.connection.asyncio",
    "aiormq.connection.parse_bool",
    "aiormq.connection.parse_int",
    "super",
    "yarl.URL"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.__str__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "censor_url",
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection._client_properties": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "aiormq.connection.PLATFORM",
    "aiormq.connection.PRODUCT",
    "aiormq.connection.parse_connection_name"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection._credentials_class": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "KeyError",
    "contextlib.suppress",
    "pamqp.specification.Connection.Start",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection._get_ssl_context": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "aiormq.connection.ssl"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection._on_heartbeat_done": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ConnectionError"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection._parse_ca_data": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "aiormq.connection.typing",
    "base64.b64decode",
    "bytes",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.basic_nack": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.consumer_cancel_notify": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.exchange_exchange_bindings": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.is_opened": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.lock": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.publisher_confirms": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.Connection.server_capabilities": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.DEFAULT_PORTS": {
  "data": {
   "shadows": "yarl.DEFAULT_PORTS"
  },
  "type": "import"
 },
 "aiormq.connection.Heartbeat": {
  "data": {
   "shadows": "pamqp.heartbeat.Heartbeat"
  },
  "type": "import"
 },
 "aiormq.connection.PLATFORM": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "aiormq.connection.PRODUCT": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "aiormq.connection.ProtocolHeader": {
  "data": {
   "shadows": "pamqp.ProtocolHeader"
  },
  "type": "import"
 },
 "aiormq.connection.URL": {
  "data": {
   "shadows": "yarl.URL"
  },
  "type": "import"
 },
 "aiormq.connection.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiormq.connection.b64decode": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "aiormq.connection.connection": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "aiormq.connection.exc": {
  "data": {
   "shadows": "exceptions"
  },
  "type": "import"
 },
 "aiormq.connection.log": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "aiormq.connection.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "aiormq.connection.pamqp.frame": {
  "data": {
   "shadows": "pamqp.frame"
  },
  "type": "import"
 },
 "aiormq.connection.parse_bool": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.parse_connection_name": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.parse_int": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "aiormq.connection.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "aiormq.connection.spec": {
  "data": {
   "shadows": "pamqp.specification"
  },
  "type": "import"
 },
 "aiormq.connection.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "aiormq.connection.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "aiormq.connection.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "aiormq.exceptions": {
  "data": {
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPError"
   ]
  },
  "type": "module"
 },
 "aiormq.exceptions.AMQPChannelError": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.AMQPConnectionError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.AMQPError": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.AMQPError.__repr__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "aiormq.exceptions.AMQPException": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "aiormq.exceptions.AuthenticationError": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPConnectionError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ChannelAccessRefused": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "aiormq.exceptions.ChannelClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ChannelClosed": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPChannelError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ChannelInvalidStateError": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ChannelLockedResource": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "aiormq.exceptions.ChannelClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ChannelNotFoundEntity": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "aiormq.exceptions.ChannelClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ChannelPreconditionFailed": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "aiormq.exceptions.ChannelClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionChannelError": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionClosed": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPConnectionError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionCommandInvalid": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionFrameError": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionInternalError": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionNotAllowed": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionNotImplemented": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionResourceError": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionSyntaxError": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ConnectionUnexpectedFrame": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "aiormq.exceptions.ConnectionClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.DeliveryError": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.DeliveryError.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pamqp.specification.Frame",
    "super"
   ]
  },
  "type": "function"
 },
 "aiormq.exceptions.DuplicateConsumerTag": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "aiormq.exceptions.ChannelClosed"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.IncompatibleProtocolError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPConnectionError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.InvalidFrameError": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "aiormq.exceptions.ProtocolSyntaxError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.MethodNotImplemented": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ProbableAuthenticationError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPConnectionError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.ProtocolSyntaxError": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "aiormq.exceptions.AMQPError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.PublishError": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "aiormq.exceptions.DeliveryError"
   ]
  },
  "type": "class"
 },
 "aiormq.exceptions.PublishError.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "aiormq.exceptions.DeliveryError",
    "isinstance",
    "pamqp.specification.Basic.Return",
    "pamqp.specification.Frame",
    "super"
   ]
  },
  "type": "function"
 },
 "aiormq.exceptions.spec": {
  "data": {
   "shadows": "pamqp.specification"
  },
  "type": "import"
 },
 "aiormq.spec": {
  "data": {
   "shadows": "pamqp.specification"
  },
  "type": "import"
 },
 "aiormq.tools": {
  "data": {
   "symbols_in_volume": [
    "aiormq.tools._inspect_await_method"
   ]
  },
  "type": "module"
 },
 "aiormq.tools.HAS_AWAIT_METHOD": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "aiormq.tools.LazyCoroutine": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "aiormq.tools.HAS_AWAIT_METHOD"
   ]
  },
  "type": "class"
 },
 "aiormq.tools.LazyCoroutine.__await__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "aiormq.tools.LazyCoroutine.__call__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "aiormq.tools.LazyCoroutine.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "aiormq.tools.LazyCoroutine.__iter__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "aiormq.tools.LazyCoroutine.__repr__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "aiormq.tools.URL": {
  "data": {
   "shadows": "yarl.URL"
  },
  "type": "import"
 },
 "aiormq.tools._inspect_await_method": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "_test",
    "bool",
    "getattr"
   ]
  },
  "type": "function"
 },
 "aiormq.tools.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "aiormq.tools.awaitable": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "aiormq.tools.asyncio",
    "func",
    "functools.wraps",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "aiormq.tools.censor_url": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "yarl.URL"
   ]
  },
  "type": "function"
 },
 "aiormq.tools.shield": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "aiormq.tools.shield.wrap": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "aiormq.tools.asyncio",
    "aiormq.tools.awaitable",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "aiormq.tools.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "aiormq.types": {
  "data": {
   "symbols_in_volume": [
    "aiormq.types.CallbackCoro",
    "aiormq.types.DeliveredMessage",
    "aiormq.types.GetResultType",
    "aiormq.types.typing",
    "bool",
    "bytes",
    "int",
    "pamqp.ContentHeader",
    "pamqp.specification.Basic.Ack",
    "pamqp.specification.Basic.Deliver",
    "pamqp.specification.Basic.GetEmpty",
    "pamqp.specification.Basic.GetOk",
    "pamqp.specification.Basic.Nack",
    "pamqp.specification.Basic.Reject",
    "pamqp.specification.Channel.OpenOk",
    "str",
    "yarl.URL"
   ]
  },
  "type": "module"
 },
 "aiormq.types.ArgumentsType": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "aiormq.types.CallbackCoro": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "aiormq.types.ChannelRType": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "aiormq.types.ConfirmationFrameType": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "aiormq.types.ConsumerCallback": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "aiormq.types.ContentHeader": {
  "data": {
   "shadows": "pamqp.ContentHeader"
  },
  "type": "import"
 },
 "aiormq.types.DeliveredMessage": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "aiormq.types.DrainResult": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "aiormq.types.FrameReceived": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "aiormq.types.GetResultType": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "aiormq.types.ReturnCallback": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "aiormq.types.SSLCerts": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "aiormq.types.URL": {
  "data": {
   "shadows": "yarl.URL"
  },
  "type": "import"
 },
 "aiormq.types.URLorStr": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "aiormq.types.spec": {
  "data": {
   "shadows": "pamqp.specification"
  },
  "type": "import"
 },
 "aiormq.types.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "aiormq.version": {
  "data": {
   "symbols_in_volume": [
    "aiormq.version.author_info",
    "aiormq.version.version_info",
    "map",
    "str"
   ]
  },
  "type": "module"
 },
 "aiormq.version.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "aiormq.version.__version__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "aiormq.version.author_info": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "aiormq.version.package_info": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "aiormq.version.package_license": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "aiormq.version.team_email": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "aiormq.version.version_info": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 }
}