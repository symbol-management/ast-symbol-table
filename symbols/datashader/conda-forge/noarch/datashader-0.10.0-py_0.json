{
 "*": {
  "data": {
   "imports": [
    "pandas.tests.extension.conftest"
   ]
  },
  "type": "star-import"
 },
 "datashader": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader._missing_cmd",
    "datashader.err",
    "datashader.param",
    "distutils.version.LooseVersion",
    "functools.partial",
    "pandas.__version__",
    "pyct.cmd.copy_examples",
    "pyct.cmd.examples",
    "pyct.cmd.fetch_data",
    "str"
   ]
  },
  "type": "module"
 },
 "datashader.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datashader.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datashader.__main__.main"
   ]
  },
  "type": "module"
 },
 "datashader.__main__.main": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "ImportError",
    "_missing_cmd",
    "datashader.__main__.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "datashader.__main__.pyct.cmd": {
  "data": {
   "shadows": "pyct.cmd"
  },
  "type": "import"
 },
 "datashader.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datashader.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "datashader._copy": {
  "data": {
   "shadows": "pyct.cmd.copy_examples"
  },
  "type": "import"
 },
 "datashader._examples": {
  "data": {
   "shadows": "pyct.cmd.examples"
  },
  "type": "import"
 },
 "datashader._fetch": {
  "data": {
   "shadows": "pyct.cmd.fetch_data"
  },
  "type": "import"
 },
 "datashader._missing_cmd": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "datashader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.bokeh_ext": {
  "data": {
   "symbols_in_volume": [
    "datashader.bokeh_ext.bokeh",
    "datashader.bokeh_ext.bokeh_version",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "module"
 },
 "datashader.bokeh_ext.Circle": {
  "data": {
   "shadows": "bokeh.models.Circle"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.ColumnDataSource": {
  "data": {
   "shadows": "bokeh.models.ColumnDataSource"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.CommsHandle": {
  "data": {
   "shadows": "bokeh.io._CommsHandle"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.CustomJS": {
  "data": {
   "shadows": "bokeh.models.CustomJS"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.Document": {
  "data": {
   "shadows": "bokeh.document.Document"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.GlyphRenderer": {
  "data": {
   "shadows": "bokeh.models.GlyphRenderer"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.HoverLayer": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.bokeh_ext.HoverLayer.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "bokeh.models.ColumnDataSource",
    "bokeh.models.CustomJS",
    "bokeh.models.GlyphRenderer",
    "bokeh.models.HoverTool",
    "bokeh.models.Square",
    "dict"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.HoverLayer.agg": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "datashader.bokeh_ext.HoverLayer.compute": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "downsample_aggregate",
    "enumerate",
    "numpy.linspace",
    "numpy.meshgrid",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.HoverLayer.size": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "datashader.bokeh_ext.HoverTool": {
  "data": {
   "shadows": "bokeh.models.HoverTool"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.InteractiveImage": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.bokeh_ext.InteractiveImage.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "datashader.bokeh_ext.uuid",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.InteractiveImage._init_callback": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "bokeh.models.CustomJS",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.InteractiveImage._init_image": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "bokeh.models.ColumnDataSource",
    "dict"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.InteractiveImage._repr_html_": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "bokeh.document.Document",
    "datashader.bokeh_ext.bokeh_notebook_div"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.InteractiveImage.get_update_event": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "datashader.bokeh_ext.patch_event"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.InteractiveImage.update": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "bokeh.io._CommsHandle",
    "bokeh.util.notebook.get_comms",
    "datashader.bokeh_ext.bokeh_version",
    "datashader.bokeh_ext.send_patch"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.InteractiveImage.update_image": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.NOTEBOOK_DIV": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datashader.bokeh_ext.Plot": {
  "data": {
   "shadows": "bokeh.models.Plot"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.Protocol": {
  "data": {
   "shadows": "bokeh.protocol.Protocol"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.Range1d": {
  "data": {
   "shadows": "bokeh.models.Range1d"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.Square": {
  "data": {
   "shadows": "bokeh.models.Square"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.Text": {
  "data": {
   "shadows": "bokeh.models.Text"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.bokeh": {
  "data": {
   "shadows": "bokeh"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.bokeh_notebook_div": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bokeh.embed.notebook.encode_utf8",
    "bokeh.embed.notebook.notebook_content",
    "bokeh.embed.notebook_div",
    "datashader.bokeh_ext.NOTEBOOK_DIV",
    "datashader.bokeh_ext.bokeh_version"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.bokeh_version": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datashader.bokeh_ext.create_categorical_legend": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "aliases",
    "bokeh.models.Circle",
    "bokeh.models.Plot",
    "bokeh.models.Range1d",
    "bokeh.models.Text",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.create_ramp_legend": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "bokeh.plotting.Figure",
    "summarize_aggregate_values"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.encode_utf8": {
  "data": {
   "shadows": "bokeh.embed.notebook.encode_utf8"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.get_comms": {
  "data": {
   "shadows": "bokeh.util.notebook.get_comms"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.notebook_content": {
  "data": {
   "shadows": "bokeh.embed.notebook.notebook_content"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.notebook_div": {
  "data": {
   "shadows": "bokeh.embed.notebook_div"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.patch_event": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bokeh.protocol.Protocol",
    "datashader.bokeh_ext.bokeh_version",
    "datashader.bokeh_ext.json",
    "dict",
    "events",
    "list"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.send_patch": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datashader.bokeh_ext.bokeh_version",
    "datashader.bokeh_ext.json"
   ]
  },
  "type": "function"
 },
 "datashader.bokeh_ext.tf": {
  "data": {
   "shadows": "transfer_functions"
  },
  "type": "import"
 },
 "datashader.bokeh_ext.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "datashader.bundling": {
  "data": {
   "symbols_in_volume": [
    "datashader.bundling.connect_edges"
   ]
  },
  "type": "module"
 },
 "datashader.bundling.BaseSegment": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.bundling.BaseSegment.create_delimiter": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "classmethod",
    "numpy.full",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "datashader.bundling.EdgelessUnweightedSegment": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "datashader.bundling.BaseSegment"
   ]
  },
  "type": "class"
 },
 "datashader.bundling.EdgelessUnweightedSegment.accumulate": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.EdgelessUnweightedSegment.create_segment": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.EdgelessUnweightedSegment.get_columns": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.EdgelessUnweightedSegment.get_merged_columns": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.EdgelessWeightedSegment": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datashader.bundling.BaseSegment"
   ]
  },
  "type": "class"
 },
 "datashader.bundling.EdgelessWeightedSegment.accumulate": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.EdgelessWeightedSegment.create_segment": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.EdgelessWeightedSegment.get_columns": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.EdgelessWeightedSegment.get_merged_columns": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.UnweightedSegment": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "datashader.bundling.BaseSegment"
   ]
  },
  "type": "class"
 },
 "datashader.bundling.UnweightedSegment.accumulate": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.UnweightedSegment.create_segment": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.UnweightedSegment.get_columns": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.UnweightedSegment.get_merged_columns": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.WeightedSegment": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datashader.bundling.BaseSegment"
   ]
  },
  "type": "class"
 },
 "datashader.bundling.WeightedSegment.accumulate": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.WeightedSegment.create_segment": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.WeightedSegment.get_columns": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.WeightedSegment.get_merged_columns": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.bundling._convert_edge_segments_to_dataframe": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "edge_iterator",
    "list",
    "numpy.concatenate",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.bundling._convert_edge_segments_to_dataframe.edge_iterator": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "datashader.bundling._convert_graph_to_edge_segments": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "datashader.bundling.EdgelessUnweightedSegment",
    "datashader.bundling.EdgelessWeightedSegment",
    "datashader.bundling.UnweightedSegment",
    "datashader.bundling.WeightedSegment",
    "pandas.merge"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.bundling.advect_and_resample": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "datashader.bundling.advect_segments",
    "datashader.bundling.resample_edge",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.advect_resample_all": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "dask.delayed",
    "datashader.bundling.advect_and_resample"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.advect_segments": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.batches": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.calculate_length": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datashader.bundling.distance_between",
    "int",
    "len",
    "math.ceil",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "datashader.bundling.compute": {
  "data": {
   "shadows": "dask.compute"
  },
  "type": "import"
 },
 "datashader.bundling.connect_edges": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "datashader.bundling.param"
   ]
  },
  "type": "class"
 },
 "datashader.bundling.connect_edges.__call__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "datashader.bundling._convert_edge_segments_to_dataframe",
    "datashader.bundling._convert_graph_to_edge_segments",
    "datashader.bundling.param"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.delayed": {
  "data": {
   "shadows": "dask.delayed"
  },
  "type": "import"
 },
 "datashader.bundling.directly_connect_edges": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "datashader.bundling.distance_between": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "datashader.bundling.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.bundling.draw_to_surface": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "accumulator",
    "dask.delayed",
    "numpy.zeros",
    "skimage.filters.gaussian"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.gaussian": {
  "data": {
   "shadows": "skimage.filters.gaussian"
  },
  "type": "import"
 },
 "datashader.bundling.get_gradients": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dask.delayed",
    "numpy.max",
    "numpy.sqrt",
    "skimage.filters.sobel_h",
    "skimage.filters.sobel_v"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.hammer_bundle": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "datashader.bundling.connect_edges",
    "datashader.bundling.param"
   ]
  },
  "type": "class"
 },
 "datashader.bundling.hammer_bundle.__call__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "dask.compute",
    "datashader.bundling._convert_edge_segments_to_dataframe",
    "datashader.bundling._convert_graph_to_edge_segments",
    "datashader.bundling.advect_resample_all",
    "datashader.bundling.batches",
    "datashader.bundling.draw_to_surface",
    "datashader.bundling.get_gradients",
    "datashader.bundling.minmax_denormalize",
    "datashader.bundling.minmax_normalize",
    "datashader.bundling.param",
    "datashader.bundling.resample_edges",
    "datashader.bundling.smooth",
    "list",
    "numpy.max",
    "numpy.min",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.minmax_denormalize": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "datashader.bundling.minmax_normalize": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "datashader.bundling.nb": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "datashader.bundling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.bundling.param": {
  "data": {
   "shadows": "param"
  },
  "type": "import"
 },
 "datashader.bundling.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.bundling.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.bundling.resample_edge": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datashader.bundling.calculate_length",
    "datashader.bundling.resample_segment",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.resample_edges": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dask.delayed",
    "datashader.bundling.resample_edge"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.resample_segment": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datashader.bundling.distance_between",
    "int",
    "len",
    "math.ceil",
    "numba.jit",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.smooth": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "datashader.bundling.smooth_segment"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.smooth_segment": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.bundling.sobel_h": {
  "data": {
   "shadows": "skimage.filters.sobel_h"
  },
  "type": "import"
 },
 "datashader.bundling.sobel_v": {
  "data": {
   "shadows": "skimage.filters.sobel_v"
  },
  "type": "import"
 },
 "datashader.colors": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "datashader.colors.Set1",
    "datashader.colors.Set2",
    "datashader.colors.Set3",
    "datashader.colors._inferno_data",
    "datashader.colors._mpl_cmdata_to_bokeh_palette",
    "datashader.colors._viridis_data",
    "str"
   ]
  },
  "type": "module"
 },
 "datashader.colors.Elevation": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "datashader.colors.Greys9": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "datashader.colors.Hot": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "datashader.colors.Set1": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "datashader.colors.Set2": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "datashader.colors.Set3": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "datashader.colors.Sets1to3": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "datashader.colors._inferno_data": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "datashader.colors._mpl_cmdata_to_bokeh_palette": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "datashader.colors._viridis_data": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "datashader.colors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.colors.basestring": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "datashader.colors.color_lookup": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.colors.colormap_select": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "datashader.colors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.colors.hex_to_rgb": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.colors.inferno": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "datashader.colors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.colors.rgb": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datashader.colors.basestring",
    "datashader.colors.color_lookup",
    "datashader.colors.hex_to_rgb",
    "isinstance",
    "len",
    "max",
    "min",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.colors.viridis": {
  "data": {
   "lineno": 676
  },
  "type": "constant"
 },
 "datashader.compatibility": {
  "data": {
   "symbols_in_volume": [
    "compile",
    "datashader.compatibility.PY3",
    "datashader.compatibility.sys",
    "eval"
   ]
  },
  "type": "module"
 },
 "datashader.compatibility.PY3": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "datashader.compatibility._exec": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "exec"
   ]
  },
  "type": "function"
 },
 "datashader.compatibility.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.compatibility.apply": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datashader.compatibility.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.compatibility.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.compatibility.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datashader.compiler": {
  "data": {},
  "type": "module"
 },
 "datashader.compiler.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.compiler._get_call_tuples": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "datashader.compiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.compiler.compile_components": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "datashader.compiler._get_call_tuples",
    "datashader.compiler.make_append",
    "datashader.compiler.make_combine",
    "datashader.compiler.make_create",
    "datashader.compiler.make_finalize",
    "datashader.compiler.make_info",
    "datashader.compiler.traverse_aggregation",
    "list",
    "toolz.concat",
    "toolz.memoize",
    "toolz.pluck",
    "toolz.unique",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.concat": {
  "data": {
   "shadows": "toolz.concat"
  },
  "type": "import"
 },
 "datashader.compiler.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "datashader.compiler.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "datashader.compiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.compiler.get": {
  "data": {
   "shadows": "toolz.get"
  },
  "type": "import"
 },
 "datashader.compiler.make_append": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_exec",
    "dict",
    "itertools.count",
    "list",
    "next",
    "ngjit",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.make_combine": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.make_combine.combine": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "f",
    "numpy.stack",
    "toolz.get",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.make_create": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "c",
    "datashader.compiler.cupy",
    "numpy",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.make_finalize": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "enumerate",
    "f",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.make_finalize.finalize": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "finalizer",
    "toolz.get",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.make_info": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "c",
    "c.apply",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.memoize": {
  "data": {
   "shadows": "toolz.memoize"
  },
  "type": "import"
 },
 "datashader.compiler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.compiler.pluck": {
  "data": {
   "shadows": "toolz.pluck"
  },
  "type": "import"
 },
 "datashader.compiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.compiler.traverse_aggregation": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.compiler.unique": {
  "data": {
   "shadows": "toolz.unique"
  },
  "type": "import"
 },
 "datashader.compiler.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.composite": {
  "data": {
   "symbols_in_volume": [
    "datashader.composite.combine_scaled",
    "datashader.composite.extract_scaled",
    "datashader.composite.jit_enabled",
    "datashader.composite.os"
   ]
  },
  "type": "module"
 },
 "datashader.composite.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datashader.composite.add": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datashader.composite.combine_scaled",
    "datashader.composite.extract_scaled",
    "datashader.composite.operator",
    "min",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "datashader.composite.combine_scaled": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "min",
    "numba.jit",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "datashader.composite.composite_op_lookup": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datashader.composite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.composite.extract_scaled": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "datashader.composite.jit_enabled": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datashader.composite.nb": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "datashader.composite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.composite.operator": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datashader.composite.composite_op_lookup",
    "datashader.composite.jit_enabled",
    "numba.types.uint32",
    "numba.vectorize",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "datashader.composite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.composite.over": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datashader.composite.combine_scaled",
    "datashader.composite.extract_scaled",
    "datashader.composite.operator",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "datashader.composite.saturate": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datashader.composite.combine_scaled",
    "datashader.composite.extract_scaled",
    "datashader.composite.operator",
    "min",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "datashader.composite.source": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datashader.composite.operator"
   ]
  },
  "type": "function"
 },
 "datashader.copy_examples": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datashader.data_libraries": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "datashader.data_libraries._cudf": {
  "data": {
   "shadows": "cudf"
  },
  "type": "import"
 },
 "datashader.data_libraries._cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "datashader.data_libraries._dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "datashader.data_libraries._dask_cudf": {
  "data": {
   "shadows": "dask_cudf"
  },
  "type": "import"
 },
 "datashader.data_libraries.cudf": {
  "data": {},
  "type": "module"
 },
 "datashader.data_libraries.cudf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.data_libraries.cudf.bypixel": {
  "data": {
   "shadows": "datashader.core.bypixel"
  },
  "type": "import"
 },
 "datashader.data_libraries.cudf.cudf": {
  "data": {
   "shadows": "cudf"
  },
  "type": "import"
 },
 "datashader.data_libraries.cudf.cudf_pipeline": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "datashader.core.bypixel.pipeline.register",
    "datashader.data_libraries.cudf.cudf",
    "datashader.data_libraries.pandas.default"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.cudf.default": {
  "data": {
   "shadows": "datashader.data_libraries.pandas.default"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask": {
  "data": {
   "symbols_in_volume": [
    "datashader.utils.Dispatcher"
   ]
  },
  "type": "module"
 },
 "datashader.data_libraries.dask.Dispatcher": {
  "data": {
   "shadows": "datashader.utils.Dispatcher"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.Glyph": {
  "data": {
   "shadows": "datashader.glyphs.Glyph"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.LineAxis0": {
  "data": {
   "shadows": "datashader.glyphs.LineAxis0"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.data_libraries.dask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.apply": {
  "data": {
   "shadows": "datashader.compatibility.apply"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.bypixel": {
  "data": {
   "shadows": "datashader.core.bypixel"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.compile_components": {
  "data": {
   "shadows": "datashader.compiler.compile_components"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.compute": {
  "data": {
   "shadows": "dask.base.compute"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.dask_pipeline": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "datashader.core.bypixel.pipeline.register",
    "datashader.data_libraries.dask.dask",
    "datashader.data_libraries.dask.glyph_dispatch",
    "optimize",
    "scheduler"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.dask.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.default": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dask.base.tokenize",
    "datashader.compatibility.apply",
    "datashader.compiler.compile_components",
    "datashader.data_libraries.dask.glyph_dispatch",
    "datashader.data_libraries.dask.shape_bounds_st_and_axis",
    "datashader.glyphs.Glyph",
    "dict",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.dask.default.chunk": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "create",
    "extend"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.dask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask.glyph_dispatch": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "datashader.data_libraries.dask.line": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "create",
    "dask.base.tokenize",
    "datashader.compatibility.apply",
    "datashader.compiler.compile_components",
    "datashader.data_libraries.dask.glyph_dispatch",
    "datashader.data_libraries.dask.shape_bounds_st_and_axis",
    "datashader.glyphs.LineAxis0",
    "dict",
    "extend",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.dask.line.chunk": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "create",
    "extend",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.dask.shape_bounds_st_and_axis": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dask.base.compute"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.dask.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask_cudf": {
  "data": {},
  "type": "module"
 },
 "datashader.data_libraries.dask_cudf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask_cudf.bypixel": {
  "data": {
   "shadows": "datashader.core.bypixel"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask_cudf.dask_cudf": {
  "data": {
   "shadows": "dask_cudf"
  },
  "type": "import"
 },
 "datashader.data_libraries.dask_cudf.dask_cudf_pipeline": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "datashader.core.bypixel.pipeline.register",
    "datashader.data_libraries.dask.dask_pipeline",
    "datashader.data_libraries.dask_cudf.dask_cudf"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.dask_cudf.dask_pipeline": {
  "data": {
   "shadows": "datashader.data_libraries.dask.dask_pipeline"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas": {
  "data": {
   "symbols_in_volume": [
    "datashader.utils.Dispatcher"
   ]
  },
  "type": "module"
 },
 "datashader.data_libraries.pandas.Dispatcher": {
  "data": {
   "shadows": "datashader.utils.Dispatcher"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas._AreaToLineLike": {
  "data": {
   "shadows": "datashader.glyphs.area._AreaToLineLike"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas._GeometryLike": {
  "data": {
   "shadows": "datashader.glyphs.points._GeometryLike"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas._PointLike": {
  "data": {
   "shadows": "datashader.glyphs.points._PointLike"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.data_libraries.pandas.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas.bypixel": {
  "data": {
   "shadows": "datashader.core.bypixel"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas.compile_components": {
  "data": {
   "shadows": "datashader.compiler.compile_components"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas.default": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "create",
    "datashader.compiler.compile_components",
    "datashader.data_libraries.pandas.glyph_dispatch",
    "datashader.glyphs.area._AreaToLineLike",
    "datashader.glyphs.points._GeometryLike",
    "datashader.glyphs.points._PointLike",
    "extend",
    "finalize"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.pandas.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.data_libraries.pandas.glyph_dispatch": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datashader.data_libraries.pandas.pandas_pipeline": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "datashader.core.bypixel.pipeline.register",
    "datashader.data_libraries.pandas.glyph_dispatch",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.data_libraries.xarray": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader.data_libraries.pandas.default",
    "datashader.data_libraries.xarray.glyph_dispatch",
    "datashader.glyphs.quadmesh._QuadMeshLike",
    "datashader.utils.Dispatcher"
   ]
  },
  "type": "module"
 },
 "datashader.data_libraries.xarray.Dispatcher": {
  "data": {
   "shadows": "datashader.utils.Dispatcher"
  },
  "type": "import"
 },
 "datashader.data_libraries.xarray._QuadMeshLike": {
  "data": {
   "shadows": "datashader.glyphs.quadmesh._QuadMeshLike"
  },
  "type": "import"
 },
 "datashader.data_libraries.xarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.data_libraries.xarray.bypixel": {
  "data": {
   "shadows": "datashader.core.bypixel"
  },
  "type": "import"
 },
 "datashader.data_libraries.xarray.cupy": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.data_libraries.xarray.default": {
  "data": {
   "shadows": "datashader.data_libraries.pandas.default"
  },
  "type": "import"
 },
 "datashader.data_libraries.xarray.glyph_dispatch": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datashader.data_libraries.xarray.xarray_pipeline": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "datashader.core.bypixel.pipeline.register",
    "datashader.data_libraries.xarray.cupy",
    "datashader.data_libraries.xarray.glyph_dispatch",
    "isinstance",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "datashader.data_libraries.xarray.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.datatypes": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.dataframe.extensions.make_array_nonempty",
    "dask.dataframe.extensions.make_array_nonempty.register",
    "datashader.datatypes.RaggedDtype",
    "datashader.datatypes.ragged_array_non_empty"
   ]
  },
  "type": "module"
 },
 "datashader.datatypes.ExtensionArray": {
  "data": {
   "shadows": "pandas.api.extensions.ExtensionArray"
  },
  "type": "import"
 },
 "datashader.datatypes.ExtensionDtype": {
  "data": {
   "shadows": "pandas.api.extensions.ExtensionDtype"
  },
  "type": "import"
 },
 "datashader.datatypes.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "datashader.datatypes.RaggedArray": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pandas.api.extensions.ExtensionArray"
   ]
  },
  "type": "class"
 },
 "datashader.datatypes.RaggedArray.__eq__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes._eq_ragged_ndarray1d",
    "datashader.datatypes._eq_ragged_ndarray2d",
    "datashader.datatypes._eq_ragged_ragged",
    "datashader.datatypes._eq_ragged_scalar",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.ndarray",
    "repr"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.__getitem__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "IndexError",
    "datashader.datatypes.RaggedArray",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numbers.Integral",
    "numpy.arange",
    "numpy.nan",
    "numpy.ndarray",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "all",
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes.RaggedDtype",
    "datashader.datatypes._validate_ragged_properties",
    "datashader.datatypes.missing",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "numpy.atleast_1d",
    "numpy.iinfo",
    "numpy.result_type",
    "numpy.zeros",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.__len__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.__ne__": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray._as_ragged_element_array": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "datashader.datatypes._RaggedElement",
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray._concat_same_type": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "classmethod",
    "datashader.datatypes.RaggedArray",
    "dict",
    "len",
    "numpy.cumsum",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray._from_factorized": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "classmethod",
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes._RaggedElement"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray._from_sequence": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "classmethod",
    "datashader.datatypes.RaggedArray"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray._values_for_argsort": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray._values_for_factorize": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.astype": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedDtype",
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "pandas.api.types.pandas_dtype",
    "pandas.core.dtypes.common.is_extension_array_dtype"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.copy": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "dict"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.dtype": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.fillna": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ValueError",
    "datashader.datatypes.RaggedArray",
    "func",
    "isinstance",
    "len",
    "list",
    "numpy.where",
    "object",
    "pandas.core.missing.backfill_1d",
    "pandas.core.missing.pad_1d",
    "pandas.util._validators.validate_fillna_kwargs"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.flat_array": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.isna": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "len",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.nbytes": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.searchsorted": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes._RaggedElement",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.shift": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "abs",
    "len",
    "min",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.start_indices": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.take": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "datashader.datatypes.RaggedArray",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedArray.unique": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "datashader.datatypes._RaggedElement",
    "pandas.unique"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedDtype": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "datashader.datatypes.re",
    "numpy.dtype",
    "numpy.ndarray",
    "pandas.api.extensions.ExtensionDtype",
    "pandas.api.extensions.register_extension_dtype",
    "type"
   ]
  },
  "type": "class"
 },
 "datashader.datatypes.RaggedDtype.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedDtype",
    "isinstance",
    "numpy.dtype",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedDtype.__repr__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedDtype._parse_subtype": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedDtype.construct_array_type": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedDtype.construct_from_string": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "classmethod",
    "datashader.datatypes.RaggedDtype"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedDtype.name": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.RaggedDtype.subtype": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._RaggedElement": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "functools.total_ordering",
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.datatypes._RaggedElement.__eq__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "datashader.datatypes._RaggedElement",
    "isinstance",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._RaggedElement.__hash__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._RaggedElement.__init__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "datashader.datatypes._RaggedElement.__lt__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplemented",
    "datashader.datatypes._RaggedElement",
    "datashader.datatypes._lexograph_lt",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._RaggedElement.__repr__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._RaggedElement.array_or_nan": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.isscalar",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._RaggedElement.ragged_or_nan": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "datashader.datatypes._RaggedElement",
    "numpy.isnan",
    "numpy.isscalar",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._eq_ragged_ndarray1d": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "numpy.bool_",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._eq_ragged_ndarray2d": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numba.jit",
    "numpy.bool_",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._eq_ragged_ragged": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "numpy.bool_",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._eq_ragged_scalar": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numba.jit",
    "numpy.bool_",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._lexograph_lt": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes._validate_ragged_properties": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.ndarray",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.datatypes.backfill_1d": {
  "data": {
   "shadows": "pandas.core.missing.backfill_1d"
  },
  "type": "import"
 },
 "datashader.datatypes.is_extension_array_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_extension_array_dtype"
  },
  "type": "import"
 },
 "datashader.datatypes.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "datashader.datatypes.make_array_nonempty": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datashader.datatypes.missing": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.datatypes.pad_1d": {
  "data": {
   "shadows": "pandas.core.missing.pad_1d"
  },
  "type": "import"
 },
 "datashader.datatypes.pandas_dtype": {
  "data": {
   "shadows": "pandas.api.types.pandas_dtype"
  },
  "type": "import"
 },
 "datashader.datatypes.ragged_array_non_empty": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray"
   ]
  },
  "type": "function"
 },
 "datashader.datatypes.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datashader.datatypes.register_extension_dtype": {
  "data": {
   "shadows": "pandas.api.extensions.register_extension_dtype"
  },
  "type": "import"
 },
 "datashader.datatypes.total_ordering": {
  "data": {
   "shadows": "functools.total_ordering"
  },
  "type": "import"
 },
 "datashader.datatypes.unique": {
  "data": {
   "shadows": "pandas.unique"
  },
  "type": "import"
 },
 "datashader.datatypes.validate_fillna_kwargs": {
  "data": {
   "shadows": "pandas.util._validators.validate_fillna_kwargs"
  },
  "type": "import"
 },
 "datashader.err": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "datashader._missing_cmd"
   ]
  },
  "type": "function"
 },
 "datashader.examples": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datashader.examples.filetimes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict",
    "dask.dataframe.from_bcolz",
    "dask.dataframe.read_hdf",
    "dask.dataframe.read_parquet",
    "dask.dataframe.to_parquet",
    "datashader.examples.filetimes.Kwargs",
    "datashader.examples.filetimes.Parameters",
    "datashader.examples.filetimes.bcolz",
    "datashader.examples.filetimes.benchmark",
    "datashader.examples.filetimes.feather",
    "datashader.examples.filetimes.main",
    "datashader.examples.filetimes.p",
    "datashader.examples.filetimes.read",
    "datashader.examples.filetimes.read_bcolz_pandas",
    "datashader.examples.filetimes.read_csv_dask",
    "datashader.examples.filetimes.read_csv_pandas",
    "datashader.examples.filetimes.read_feather_dask",
    "datashader.examples.filetimes.read_parq_pandas",
    "datashader.examples.filetimes.sys",
    "datashader.examples.filetimes.time",
    "datashader.examples.filetimes.write",
    "datashader.examples.filetimes.write_bcolz_dask",
    "datashader.examples.filetimes.write_feather_dask",
    "fastparquet.write",
    "pandas.read_hdf"
   ]
  },
  "type": "module"
 },
 "datashader.examples.filetimes.CACHED_RANGES": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.Cache": {
  "data": {
   "shadows": "dask.cache.Cache"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.DASK_CLIENT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.DD_FORCE_LOAD": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.DEBUG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.Kwargs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "datashader.examples.filetimes.Parameters": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datashader.examples.filetimes.multiprocessing",
    "dict",
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.examples.filetimes.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.bcolz": {
  "data": {
   "shadows": "bcolz"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.benchmark": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dask.distributed.wait",
    "datashader.examples.filetimes.DASK_CLIENT",
    "datashader.examples.filetimes.DD_FORCE_LOAD",
    "datashader.examples.filetimes.DEBUG",
    "datashader.examples.filetimes.Kwargs",
    "datashader.examples.filetimes.filetypes_storing_categories",
    "datashader.examples.filetimes.p",
    "datashader.examples.filetimes.time",
    "fn",
    "hasattr",
    "isinstance",
    "list",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.distributed": {
  "data": {
   "shadows": "dask.distributed"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.export_image": {
  "data": {
   "shadows": "datashader.utils.export_image"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.feather": {
  "data": {
   "shadows": "feather"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.filetypes_storing_categories": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.fp": {
  "data": {
   "shadows": "fastparquet"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.get_proc_mem": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "datashader.examples.filetimes.resource"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.get_size": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datashader.examples.filetimes.glob",
    "datashader.examples.filetimes.os",
    "fastparquet"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.global_start": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.main": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "__doc__",
    "dask.cache.Cache",
    "dask.distributed.Client",
    "dask.distributed.LocalCluster",
    "datashader.examples.filetimes.DASK_CLIENT",
    "datashader.examples.filetimes.DD_FORCE_LOAD",
    "datashader.examples.filetimes.DEBUG",
    "datashader.examples.filetimes.argparse",
    "datashader.examples.filetimes.get_proc_mem",
    "datashader.examples.filetimes.get_size",
    "datashader.examples.filetimes.global_start",
    "datashader.examples.filetimes.os",
    "datashader.examples.filetimes.p",
    "datashader.examples.filetimes.time",
    "datashader.examples.filetimes.timed_agg",
    "datashader.examples.filetimes.timed_read",
    "int",
    "print"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.odict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.p": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.read": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.read_bcolz_pandas": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "datashader.examples.filetimes.bcolz",
    "datashader.examples.filetimes.p"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.read_csv_dask": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dask.dataframe.read_csv",
    "datashader.examples.filetimes.os"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.read_csv_pandas": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "datashader.examples.filetimes.glob",
    "datashader.examples.filetimes.os",
    "pandas.concat",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.read_feather_dask": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "datashader.examples.filetimes.feather",
    "datashader.examples.filetimes.p"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.read_parq_pandas": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "fastparquet.ParquetFile"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.resource": {
  "data": {
   "shadows": "resource"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.tf": {
  "data": {
   "shadows": "datashader.transfer_functions"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datashader.examples.filetimes.timed_agg": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.examples.filetimes.CACHED_RANGES",
    "datashader.examples.filetimes.p",
    "datashader.examples.filetimes.time",
    "datashader.transfer_functions.shade",
    "datashader.utils.export_image",
    "int"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.timed_read": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "code",
    "datashader.examples.filetimes.os",
    "datashader.examples.filetimes.p",
    "datashader.examples.filetimes.read"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.timed_write": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "code",
    "datashader.examples.filetimes.filetypes_storing_categories",
    "datashader.examples.filetimes.os",
    "datashader.examples.filetimes.p",
    "datashader.examples.filetimes.timed_read",
    "datashader.examples.filetimes.write",
    "numpy.float32",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.write": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "datashader.examples.filetimes.write_bcolz_dask": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datashader.examples.filetimes.bcolz"
   ]
  },
  "type": "function"
 },
 "datashader.examples.filetimes.write_feather_dask": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "datashader.examples.filetimes.feather"
   ]
  },
  "type": "function"
 },
 "datashader.examples.pcap_to_parquet": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datashader.examples.pcap_to_parquet.sys",
    "datashader.examples.pcap_to_parquet.to_parquet",
    "len"
   ]
  },
  "type": "module"
 },
 "datashader.examples.pcap_to_parquet.fp": {
  "data": {
   "shadows": "fastparquet"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.get_ip_protocol": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "datashader.examples.pcap_to_parquet.ip_to_integer": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datashader.examples.pcap_to_parquet.socket",
    "datashader.examples.pcap_to_parquet.struct"
   ]
  },
  "type": "function"
 },
 "datashader.examples.pcap_to_parquet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datashader.examples.pcap_to_parquet.to_parquet": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datashader.examples.pcap_to_parquet.get_ip_protocol",
    "datashader.examples.pcap_to_parquet.ip_to_integer",
    "datashader.examples.pcap_to_parquet.re",
    "dict",
    "enumerate",
    "fastparquet.write",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "open",
    "pandas.DataFrame",
    "pandas.to_numeric",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datashader.examples.raster": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bokeh.io.curdoc",
    "bokeh.models.ColumnDataSource",
    "bokeh.models.CustomJS",
    "bokeh.plotting.Figure",
    "bokeh.tile_providers.get_provider",
    "datashader.examples.raster.dims",
    "datashader.examples.raster.dims_jscode",
    "datashader.examples.raster.fig",
    "datashader.examples.raster.image_source",
    "datashader.examples.raster.on_dims_change",
    "datashader.examples.raster.path",
    "datashader.examples.raster.xmax",
    "datashader.examples.raster.xmin",
    "datashader.examples.raster.ymax",
    "datashader.examples.raster.ymin",
    "dict",
    "rasterio.open"
   ]
  },
  "type": "module"
 },
 "datashader.examples.raster.ColumnDataSource": {
  "data": {
   "shadows": "bokeh.models.ColumnDataSource"
  },
  "type": "import"
 },
 "datashader.examples.raster.CustomJS": {
  "data": {
   "shadows": "bokeh.models.CustomJS"
  },
  "type": "import"
 },
 "datashader.examples.raster.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "datashader.examples.raster.Hot": {
  "data": {
   "shadows": "datashader.colors.Hot"
  },
  "type": "import"
 },
 "datashader.examples.raster.curdoc": {
  "data": {
   "shadows": "bokeh.io.curdoc"
  },
  "type": "import"
 },
 "datashader.examples.raster.dims": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datashader.examples.raster.dims_jscode": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datashader.examples.raster.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.examples.raster.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.examples.raster.fig": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "datashader.examples.raster.get_provider": {
  "data": {
   "shadows": "bokeh.tile_providers.get_provider"
  },
  "type": "import"
 },
 "datashader.examples.raster.image_source": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "datashader.examples.raster.on_dims_change": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "datashader.examples.raster.update_image"
   ]
  },
  "type": "function"
 },
 "datashader.examples.raster.path": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "datashader.examples.raster.raster_data": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datashader.examples.raster.rio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "datashader.examples.raster.tf": {
  "data": {
   "shadows": "datashader.transfer_functions"
  },
  "type": "import"
 },
 "datashader.examples.raster.update_image": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.colors.Hot",
    "datashader.transfer_functions.shade",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "datashader.examples.raster.xmax": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "datashader.examples.raster.xmin": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "datashader.examples.raster.ymax": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "datashader.examples.raster.ymin": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "datashader.examples.streaming": {
  "data": {
   "symbols_in_volume": [
    "bokeh.io.curdoc",
    "bokeh.models.ColumnDataSource",
    "bokeh.models.CustomJS",
    "bokeh.models.HBox",
    "bokeh.models.Paragraph",
    "bokeh.models.Select.create",
    "bokeh.models.VBox",
    "bokeh.plotting.Figure",
    "bokeh.tile_providers.get_provider",
    "collections.OrderedDict",
    "datashader.examples.streaming.bin_data",
    "datashader.examples.streaming.cols",
    "datashader.examples.streaming.controls",
    "datashader.examples.streaming.datetime_field",
    "datashader.examples.streaming.df",
    "datashader.examples.streaming.dims",
    "datashader.examples.streaming.dims_jscode",
    "datashader.examples.streaming.fig",
    "datashader.examples.streaming.image_source",
    "datashader.examples.streaming.layout",
    "datashader.examples.streaming.on_time_select_change",
    "datashader.examples.streaming.path",
    "datashader.examples.streaming.time_select",
    "datashader.examples.streaming.time_select_options",
    "datashader.examples.streaming.time_text",
    "datashader.examples.streaming.update_data",
    "datashader.examples.streaming.xmax",
    "datashader.examples.streaming.xmin",
    "datashader.examples.streaming.ymax",
    "datashader.examples.streaming.ymin",
    "dict",
    "list",
    "pandas.DatetimeIndex",
    "pandas.read_csv"
   ]
  },
  "type": "module"
 },
 "datashader.examples.streaming.BuGn9": {
  "data": {
   "shadows": "bokeh.palettes.BuGn9"
  },
  "type": "import"
 },
 "datashader.examples.streaming.ColumnDataSource": {
  "data": {
   "shadows": "bokeh.models.ColumnDataSource"
  },
  "type": "import"
 },
 "datashader.examples.streaming.CustomJS": {
  "data": {
   "shadows": "bokeh.models.CustomJS"
  },
  "type": "import"
 },
 "datashader.examples.streaming.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "datashader.examples.streaming.HBox": {
  "data": {
   "shadows": "bokeh.models.HBox"
  },
  "type": "import"
 },
 "datashader.examples.streaming.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.examples.streaming.Paragraph": {
  "data": {
   "shadows": "bokeh.models.Paragraph"
  },
  "type": "import"
 },
 "datashader.examples.streaming.Select": {
  "data": {
   "shadows": "bokeh.models.Select"
  },
  "type": "import"
 },
 "datashader.examples.streaming.VBox": {
  "data": {
   "shadows": "bokeh.models.VBox"
  },
  "type": "import"
 },
 "datashader.examples.streaming.bin_data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datashader.examples.streaming.cols": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "datashader.examples.streaming.controls": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "datashader.examples.streaming.counter": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datashader.examples.streaming.curdoc": {
  "data": {
   "shadows": "bokeh.io.curdoc"
  },
  "type": "import"
 },
 "datashader.examples.streaming.datetime_field": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "datashader.examples.streaming.df": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "datashader.examples.streaming.dims": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "datashader.examples.streaming.dims_jscode": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "datashader.examples.streaming.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.examples.streaming.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.examples.streaming.fig": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "datashader.examples.streaming.get_provider": {
  "data": {
   "shadows": "bokeh.tile_providers.get_provider"
  },
  "type": "import"
 },
 "datashader.examples.streaming.image_source": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "datashader.examples.streaming.layout": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "datashader.examples.streaming.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "datashader.examples.streaming.on_time_select_change": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "datashader.examples.streaming.bin_data"
   ]
  },
  "type": "function"
 },
 "datashader.examples.streaming.path": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "datashader.examples.streaming.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.examples.streaming.tf": {
  "data": {
   "shadows": "datashader.transfer_functions"
  },
  "type": "import"
 },
 "datashader.examples.streaming.time_period": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "datashader.examples.streaming.time_select": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "datashader.examples.streaming.time_select_options": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "datashader.examples.streaming.time_text": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "datashader.examples.streaming.times": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "datashader.examples.streaming.update_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datashader.examples.streaming.counter",
    "datashader.examples.streaming.update_image",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.examples.streaming.update_image": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bokeh.palettes.BuGn9",
    "datashader.Canvas",
    "datashader.count",
    "datashader.examples.streaming.math",
    "datashader.transfer_functions.shade",
    "int"
   ]
  },
  "type": "function"
 },
 "datashader.examples.streaming.xmax": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "datashader.examples.streaming.xmin": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "datashader.examples.streaming.ymax": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "datashader.examples.streaming.ymin": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "datashader.examples.taxi_preprocessing_example": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "datashader.examples.taxi_preprocessing_example._download_dataset",
    "datashader.examples.taxi_preprocessing_example.data_dir",
    "datashader.examples.taxi_preprocessing_example.df",
    "datashader.examples.taxi_preprocessing_example.examples_dir",
    "datashader.examples.taxi_preprocessing_example.latlng_to_meters",
    "datashader.examples.taxi_preprocessing_example.sys",
    "datashader.examples.taxi_preprocessing_example.taxi_path",
    "datashader.examples.taxi_preprocessing_example.url",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.path.realpath",
    "os.remove",
    "pandas.read_csv",
    "print"
   ]
  },
  "type": "module"
 },
 "datashader.examples.taxi_preprocessing_example._download_dataset": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datashader.examples.taxi_preprocessing_example.requests",
    "download_sample_data.bar",
    "int",
    "open",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datashader.examples.taxi_preprocessing_example.data_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datashader.examples.taxi_preprocessing_example.df": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datashader.examples.taxi_preprocessing_example.examples_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datashader.examples.taxi_preprocessing_example.latlng_to_meters": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "datashader.examples.taxi_preprocessing_example.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.progressbar": {
  "data": {
   "shadows": "download_sample_data.bar"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datashader.examples.taxi_preprocessing_example.taxi_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datashader.examples.taxi_preprocessing_example.url": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datashader.fetch_data": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datashader.glyphs": {
  "data": {},
  "type": "module"
 },
 "datashader.glyphs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "datashader.glyphs.glyph.Expr": {
  "data": {
   "shadows": "datashader.utils.Expr"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.Glyph": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "datashader.utils.Expr"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.glyph.Glyph._compute_bounds": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.Glyph",
    "datashader.glyphs.glyph.cudf",
    "isinstance",
    "pandas.Series",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.Glyph._compute_bounds_2d": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "numpy.inf",
    "numpy.isnan",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.Glyph._compute_bounds_numba": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "math.isnan",
    "numpy.inf",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.Glyph._expand_aggs_and_cols": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "datashader.glyphs.glyph.inspect",
    "datashader.glyphs.glyph.os",
    "datashader.glyphs.glyph.warnings",
    "datashader.macros.expand_varargs",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.Glyph.expand_aggs_and_cols": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.Glyph.maybe_expand_bounds": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.isfinite",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.Glyph.ndims": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.Glyph.to_gpu_matrix": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.cudf",
    "enumerate",
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.cudf": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datashader.glyphs.glyph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.expand_varargs": {
  "data": {
   "shadows": "datashader.macros.expand_varargs"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.isnan": {
  "data": {
   "shadows": "math.isnan"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.isnull": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datashader.utils.ngjit"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.glyph.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.glyphs.glyph.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datashader.glyphs.points": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "datashader.glyphs.points.GeometryDtype": {
  "data": {
   "shadows": "spatialpandas.geometry.GeometryDtype"
  },
  "type": "import"
 },
 "datashader.glyphs.points.Glyph": {
  "data": {
   "shadows": "datashader.glyphs.glyph.Glyph"
  },
  "type": "import"
 },
 "datashader.glyphs.points.MultiPointDtype": {
  "data": {
   "shadows": "spatialpandas.geometry.MultiPointDtype"
  },
  "type": "import"
 },
 "datashader.glyphs.points.MultiPointGeometry": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "datashader.glyphs.points._GeometryLike"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.points.MultiPointGeometry._build_extend": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.MultiPointGeometry._build_extend._perform_extend_points": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "append",
    "datashader.glyphs.points.values",
    "datashader.utils.ngjit",
    "int",
    "x_mapper",
    "y_mapper"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.MultiPointGeometry._build_extend.extend": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "datashader.glyphs.points.values",
    "extend_multipoint_cpu",
    "extend_point_cpu",
    "info",
    "isinstance",
    "spatialpandas.geometry.PointArray"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.MultiPointGeometry._build_extend.extend_multipoint_cpu": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_perform_extend_points",
    "append",
    "datashader.glyphs.points.values",
    "datashader.utils.ngjit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.MultiPointGeometry._build_extend.extend_point_cpu": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "_perform_extend_points",
    "append",
    "datashader.glyphs.points.values",
    "datashader.utils.ngjit"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.MultiPointGeometry.geom_dtypes": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property",
    "spatialpandas.geometry.MultiPointDtype",
    "spatialpandas.geometry.PointDtype"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.Point": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "datashader.glyphs.points._PointLike"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.points.Point._build_extend": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.Point._build_extend._perform_extend_points": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "int",
    "x_mapper",
    "y_mapper"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.Point._build_extend.extend": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "datashader.glyphs.points.cuda_args",
    "datashader.glyphs.points.cudf",
    "do_extend",
    "info",
    "isinstance",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.Point._build_extend.extend_cpu": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_perform_extend_points",
    "append",
    "datashader.utils.ngjit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.Point._build_extend.extend_cuda": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "_perform_extend_points",
    "append",
    "numba.cuda.grid",
    "numba.cuda.jit"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.PointArray": {
  "data": {
   "shadows": "spatialpandas.geometry.PointArray"
  },
  "type": "import"
 },
 "datashader.glyphs.points.PointDtype": {
  "data": {
   "shadows": "spatialpandas.geometry.PointDtype"
  },
  "type": "import"
 },
 "datashader.glyphs.points._GeometryLike": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.Glyph"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.points._GeometryLike.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.compute_bounds_dask": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.compute_x_bounds": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.compute_y_bounds": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.geom_dtypes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property",
    "spatialpandas.geometry.GeometryDtype"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.inputs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.ndims": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.required_columns": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.validate": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.x_label": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._GeometryLike.y_label": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.Glyph"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.points._PointLike.__init__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.compute_bounds_dask": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nanmax",
    "numpy.nanmin",
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.compute_x_bounds": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.compute_y_bounds": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.inputs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.ndims": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.required_columns": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.validate": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "datashader.utils.isreal",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.x_label": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points._PointLike.y_label": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.points.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.glyphs.points.cuda": {
  "data": {
   "shadows": "numba.cuda"
  },
  "type": "import"
 },
 "datashader.glyphs.points.cuda_args": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.glyphs.points.cudf": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.glyphs.points.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.glyphs.points.isreal": {
  "data": {
   "shadows": "datashader.utils.isreal"
  },
  "type": "import"
 },
 "datashader.glyphs.points.memoize": {
  "data": {
   "shadows": "toolz.memoize"
  },
  "type": "import"
 },
 "datashader.glyphs.points.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.glyphs.points.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.glyphs.points.values": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datashader.glyphs.points.cudf",
    "isinstance",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.polygon": {
  "data": {},
  "type": "module"
 },
 "datashader.glyphs.polygon.MultiPolygonDtype": {
  "data": {
   "shadows": "spatialpandas.geometry.MultiPolygonDtype"
  },
  "type": "import"
 },
 "datashader.glyphs.polygon.PolygonDtype": {
  "data": {
   "shadows": "spatialpandas.geometry.PolygonDtype"
  },
  "type": "import"
 },
 "datashader.glyphs.polygon.PolygonGeom": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "datashader.glyphs.points._GeometryLike"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.polygon.PolygonGeom._build_extend": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "datashader.glyphs.line._build_map_onto_pixel_for_line",
    "datashader.glyphs.polygon._build_draw_polygon",
    "datashader.glyphs.polygon._build_extend_polygon_geometry",
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.polygon.PolygonGeom._build_extend.extend": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "info",
    "perform_extend_cpu"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.polygon.PolygonGeom.geom_dtypes": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "property",
    "spatialpandas.geometry.MultiPolygonDtype",
    "spatialpandas.geometry.PolygonDtype"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.polygon._GeometryLike": {
  "data": {
   "shadows": "datashader.glyphs.points._GeometryLike"
  },
  "type": "import"
 },
 "datashader.glyphs.polygon._build_draw_polygon": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "datashader.glyphs.polygon._build_draw_polygon.draw_polygon": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "len",
    "map_onto_pixel",
    "max",
    "min",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "range",
    "x_mapper",
    "y_mapper"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.polygon._build_extend_polygon_geometry": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "datashader.glyphs.polygon._build_extend_polygon_geometry.extend_cpu": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "extend_cpu_numba",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.polygon._build_extend_polygon_geometry.extend_cpu_numba": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "draw_polygon",
    "len",
    "max",
    "numpy.float32",
    "numpy.full",
    "numpy.int8",
    "numpy.nan",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.polygon._build_map_onto_pixel_for_line": {
  "data": {
   "shadows": "datashader.glyphs.line._build_map_onto_pixel_for_line"
  },
  "type": "import"
 },
 "datashader.glyphs.polygon.memoize": {
  "data": {
   "shadows": "toolz.memoize"
  },
  "type": "import"
 },
 "datashader.glyphs.polygon.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.glyphs.polygon.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader.transfer_functions._cuda_utils.cuda_args"
   ]
  },
  "type": "module"
 },
 "datashader.glyphs.quadmesh.Glyph": {
  "data": {
   "shadows": "datashader.glyphs.glyph.Glyph"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.LinearAxis": {
  "data": {
   "shadows": "datashader.core.LinearAxis"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datashader.glyphs.quadmesh._QuadMeshLike"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear._build_extend": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear._build_extend.extend": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datashader.core.LinearAxis.mapper",
    "datashader.glyphs.quadmesh._cuda_mapper",
    "datashader.glyphs.quadmesh.cupy",
    "datashader.resampling.infer_interval_breaks",
    "datashader.transfer_functions._cuda_utils.cuda_args",
    "do_extend",
    "info",
    "int",
    "isinstance",
    "x_mapper2",
    "y_mapper2"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear._build_extend.extend_cpu": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "numpy.int32",
    "numpy.int8",
    "numpy.ones",
    "numpy.zeros",
    "perform_extend",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear._build_extend.extend_cuda": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "append",
    "datashader.glyphs.quadmesh.numba",
    "numba.cuda.grid",
    "numba.cuda.jit",
    "numba.cuda.local.array",
    "perform_extend"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear._build_extend.perform_extend": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear.compute_x_bounds": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.Glyph._compute_bounds_2d",
    "datashader.resampling.infer_interval_breaks"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshCurvialinear.compute_y_bounds": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.Glyph._compute_bounds_2d",
    "datashader.resampling.infer_interval_breaks"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datashader.glyphs.quadmesh._QuadMeshLike"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear._build_extend": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear._build_extend.extend": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "datashader.core.LinearAxis.mapper",
    "datashader.glyphs.quadmesh._cuda_mapper",
    "datashader.glyphs.quadmesh.cupy",
    "datashader.resampling.infer_interval_breaks",
    "datashader.transfer_functions._cuda_utils.cuda_args",
    "do_extend",
    "info",
    "int",
    "isinstance",
    "max",
    "numpy.where",
    "tuple",
    "x_mapper2",
    "y_mapper2"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear._build_extend.extend_cpu": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "len",
    "perform_extend",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear._build_extend.extend_cuda": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "append",
    "numba.cuda.grid",
    "numba.cuda.jit",
    "perform_extend"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear._build_extend.perform_extend": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear._compute_bounds_from_1d_centers": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear.compute_x_bounds": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.QuadMeshRectilinear.compute_y_bounds": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._QuadMeshLike": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.Glyph"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.quadmesh._QuadMeshLike.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._QuadMeshLike.inputs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._QuadMeshLike.ndims": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._QuadMeshLike.validate": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "datashader.utils.isreal",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._QuadMeshLike.x_label": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._QuadMeshLike.y_label": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._cuda_mapper": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._cuda_mapper.cuda_map": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datashader.glyphs.quadmesh.cupy",
    "datashader.transfer_functions._cuda_utils.cuda_args",
    "numba.cuda.to_device"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh._cuda_mapper.kernel": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mapper",
    "numba.cuda.grid",
    "numba.cuda.jit"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.quadmesh.cuda": {
  "data": {
   "shadows": "numba.cuda"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.cuda_args": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.glyphs.quadmesh.cupy": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.glyphs.quadmesh.infer_interval_breaks": {
  "data": {
   "shadows": "datashader.resampling.infer_interval_breaks"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.isreal": {
  "data": {
   "shadows": "datashader.utils.isreal"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.memoize": {
  "data": {
   "shadows": "toolz.memoize"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.glyphs.quadmesh.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "datashader.glyphs.trimesh": {
  "data": {},
  "type": "module"
 },
 "datashader.glyphs.trimesh.Triangles": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datashader.glyphs.trimesh._PolygonLike"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.trimesh.Triangles._build_extend": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datashader.glyphs.trimesh._build_draw_triangle",
    "datashader.glyphs.trimesh._build_extend_triangles",
    "datashader.glyphs.trimesh._build_map_onto_pixel_for_triangle",
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh.Triangles._build_extend.extend": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "extend_triangles",
    "info"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._PointLike": {
  "data": {
   "shadows": "datashader.glyphs.points._PointLike"
  },
  "type": "import"
 },
 "datashader.glyphs.trimesh._PolygonLike": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "datashader.glyphs.points._PointLike"
   ]
  },
  "type": "class"
 },
 "datashader.glyphs.trimesh._PolygonLike.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datashader.glyphs.trimesh._PolygonLike",
    "super"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._PolygonLike.compute_x_bounds": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._PolygonLike.compute_y_bounds": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._PolygonLike.inputs": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "list",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._PolygonLike.ndims": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._PolygonLike.required_columns": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._PolygonLike.validate": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "datashader.utils.isreal",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_draw_triangle": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_draw_triangle.draw_triangle": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "edge_func",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_draw_triangle.draw_triangle_interp": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "append",
    "datashader.utils.ngjit",
    "edge_func",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_draw_triangle.edge_func": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datashader.utils.ngjit"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_extend_triangles": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "extend_triangles"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_extend_triangles.extend_triangles": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "draw_triangle",
    "draw_triangle_interp",
    "map_onto_pixel",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_map_onto_pixel_for_triangle": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "map_onto_pixel"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh._build_map_onto_pixel_for_triangle.map_onto_pixel": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "int",
    "x_mapper",
    "y_mapper"
   ]
  },
  "type": "function"
 },
 "datashader.glyphs.trimesh.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.glyphs.trimesh.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.glyphs.trimesh.isreal": {
  "data": {
   "shadows": "datashader.utils.isreal"
  },
  "type": "import"
 },
 "datashader.glyphs.trimesh.memoize": {
  "data": {
   "shadows": "toolz.memoize"
  },
  "type": "import"
 },
 "datashader.glyphs.trimesh.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.glyphs.trimesh.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.layout": {
  "data": {},
  "type": "module"
 },
 "datashader.layout.LayoutAlgorithm": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "datashader.layout.param",
    "id"
   ]
  },
  "type": "class"
 },
 "datashader.layout.LayoutAlgorithm.__call__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datashader.layout._convert_graph_to_sparse_matrix": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dict",
    "format",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.layout._extract_points_from_nodes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "datashader.layout._merge_points_with_nodes": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "datashader.layout.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.layout.circular_layout": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datashader.layout.LayoutAlgorithm",
    "datashader.layout.param"
   ]
  },
  "type": "class"
 },
 "datashader.layout.circular_layout.__call__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datashader.layout.param",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "datashader.layout.cooling": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.log",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.layout.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.layout.forceatlas2_layout": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "datashader.layout.LayoutAlgorithm",
    "datashader.layout.param"
   ]
  },
  "type": "class"
 },
 "datashader.layout.forceatlas2_layout.__call__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "datashader.layout._convert_graph_to_sparse_matrix",
    "datashader.layout._extract_points_from_nodes",
    "datashader.layout._merge_points_with_nodes",
    "datashader.layout.cooling",
    "datashader.layout.param",
    "len",
    "numpy.random.seed",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "datashader.layout.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.layout.param": {
  "data": {
   "shadows": "param"
  },
  "type": "import"
 },
 "datashader.layout.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.layout.random_layout": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datashader.layout.LayoutAlgorithm"
   ]
  },
  "type": "class"
 },
 "datashader.layout.random_layout.__call__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datashader.layout.param",
    "len",
    "numpy.asarray",
    "numpy.random.random",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "datashader.layout.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "datashader.macros": {
  "data": {},
  "type": "module"
 },
 "datashader.macros.ExpandVarargTransformer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datashader.macros.ast"
   ]
  },
  "type": "class"
 },
 "datashader.macros.ExpandVarargTransformer.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datashader.macros.ExpandVarargTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "datashader.macros.ExpandVarargTransformerCallArg": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datashader.macros.ExpandVarargTransformer"
   ]
  },
  "type": "class"
 },
 "datashader.macros.ExpandVarargTransformerCallArg.visit_Call": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datashader.macros.ast",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datashader.macros.ExpandVarargTransformerStarred": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datashader.macros.ExpandVarargTransformer"
   ]
  },
  "type": "class"
 },
 "datashader.macros.ExpandVarargTransformerStarred.visit_Starred": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datashader.macros.ast"
   ]
  },
  "type": "function"
 },
 "datashader.macros.NameVisitor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "datashader.macros.ast"
   ]
  },
  "type": "class"
 },
 "datashader.macros.NameVisitor.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "datashader.macros.NameVisitor",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "datashader.macros.NameVisitor.get_new_names": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datashader.macros.re",
    "int",
    "max",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.macros.NameVisitor.visit_Name": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "datashader.macros.NameVisitor.visit_arg": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datashader.macros._build_arg": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "AttributeError",
    "datashader.macros.ast"
   ]
  },
  "type": "function"
 },
 "datashader.macros.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "datashader.macros.ast_to_source": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datashader.macros.ast",
    "datashader.macros.astor"
   ]
  },
  "type": "function"
 },
 "datashader.macros.astor": {
  "data": {
   "shadows": "astor"
  },
  "type": "import"
 },
 "datashader.macros.compile_function_ast": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "compile",
    "datashader.macros.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.macros.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "datashader.macros.expand_function_ast_varargs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "datashader.macros.ExpandVarargTransformerCallArg",
    "datashader.macros.ExpandVarargTransformerStarred",
    "datashader.macros.NameVisitor",
    "datashader.macros._build_arg",
    "datashader.macros.ast",
    "datashader.macros.copy",
    "expand_transformer",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.macros.expand_varargs": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.macros.expand_varargs._expand_varargs": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "datashader.macros.expand_function_ast_varargs",
    "datashader.macros.function_ast_to_function",
    "datashader.macros.function_to_ast"
   ]
  },
  "type": "function"
 },
 "datashader.macros.function_ast_to_function": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "datashader.macros.ast",
    "datashader.macros.compile_function_ast",
    "datashader.macros.copy",
    "datashader.macros.inspect",
    "eval",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.macros.function_to_ast": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datashader.macros.ast",
    "datashader.macros.inspect",
    "datashader.macros.textwrap"
   ]
  },
  "type": "function"
 },
 "datashader.macros.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datashader.macros.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datashader.macros.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datashader.pandas_version": {
  "data": {
   "shadows": "pandas.__version__"
  },
  "type": "import"
 },
 "datashader.param": {
  "data": {
   "shadows": "param"
  },
  "type": "import"
 },
 "datashader.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datashader.pipeline": {
  "data": {},
  "type": "module"
 },
 "datashader.pipeline.Pipeline": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.pipeline.Pipeline.__call__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "datashader.pipeline.Pipeline.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "toolz.identity"
   ]
  },
  "type": "function"
 },
 "datashader.pipeline.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.pipeline.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.pipeline.identity": {
  "data": {
   "shadows": "toolz.identity"
  },
  "type": "import"
 },
 "datashader.pipeline.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.pipeline.tf": {
  "data": {
   "shadows": "transfer_functions"
  },
  "type": "import"
 },
 "datashader.reductions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader.reductions.FloatingReduction",
    "datashader.reductions.OptionalFieldReduction",
    "datashader.reductions.Reduction",
    "datashader.reductions.m2",
    "datashader.reductions.summary",
    "isinstance",
    "issubclass",
    "list",
    "locals",
    "set",
    "type"
   ]
  },
  "type": "module"
 },
 "datashader.reductions.FloatingReduction": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "datashader.reductions.Reduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.FloatingReduction._create": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.nan",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.FloatingReduction._finalize": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.Option": {
  "data": {
   "shadows": "datashape.Option"
  },
  "type": "import"
 },
 "datashader.reductions.OptionalFieldReduction": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datashader.reductions.Reduction"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.OptionalFieldReduction.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "datashader.reductions.OptionalFieldReduction._finalize": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.OptionalFieldReduction.inputs": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datashader.reductions.extract",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.OptionalFieldReduction.validate": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "datashader.reductions.Preprocess": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "datashader.reductions.Preprocess.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "datashader.reductions.Preprocess.inputs": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.Record": {
  "data": {
   "shadows": "datashape.Record"
  },
  "type": "import"
 },
 "datashader.reductions.Reduction": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "datashader.reductions.Reduction.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "datashader.reductions.Reduction._build_append": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numba.cuda"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.Reduction._build_bases": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "datashader.reductions.Reduction._build_combine": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "datashader.reductions.Reduction._build_create": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "datashader.reductions.Reduction._build_finalize": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "datashader.reductions.Reduction._build_temps": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "datashader.reductions.Reduction.inputs": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datashader.reductions.extract",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.Reduction.out_dshape": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "datashader.reductions.Reduction.validate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "datashape.isnumeric"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.__all__": {
  "data": {
   "lineno": 644
  },
  "type": "constant"
 },
 "datashader.reductions._sum_zero": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "datashader.reductions.FloatingReduction"
   ]
  },
  "type": "class"
 },
 "datashader.reductions._sum_zero._append": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions._sum_zero._append_cuda": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "numba.cuda.atomic.add",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions._sum_zero._combine": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions._sum_zero._create": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.reductions.any": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datashader.reductions.OptionalFieldReduction",
    "datashape.coretypes.bool_",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.any._append": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.any._append_no_field": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.any._combine": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.any._create": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.category_codes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datashader.reductions.Preprocess"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.category_codes.apply": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datashader.reductions.cudf",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.concat": {
  "data": {
   "shadows": "toolz.concat"
  },
  "type": "import"
 },
 "datashader.reductions.count": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datashader.reductions.OptionalFieldReduction",
    "datashape.coretypes.int32",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.count._append": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count._append_cuda": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "numba.cuda.atomic.add",
    "numba.cuda.jit",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count._append_no_field": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count._append_no_field_cuda": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numba.cuda.atomic.add",
    "numba.cuda.jit",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count._combine": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count._create": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "datashader.reductions.Reduction"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.count_cat._append": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat._append_cuda": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "numba.cuda.atomic.add",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat._build_create": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat._build_finalize": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "datashape.dshape.categories",
    "list"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat._build_finalize.finalize": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat._combine": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat.inputs": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "datashader.reductions.category_codes",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat.out_dshape": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "datashape.Record",
    "datashape.coretypes.int32",
    "datashape.dshape"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.count_cat.validate": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "datashape.coretypes.Categorical",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.ct": {
  "data": {
   "shadows": "datashape.coretypes"
  },
  "type": "import"
 },
 "datashader.reductions.cudf": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datashader.reductions.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "datashader.reductions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.reductions.dshape": {
  "data": {
   "shadows": "datashape.dshape"
  },
  "type": "import"
 },
 "datashader.reductions.extract": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datashader.reductions.Preprocess"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.extract.apply": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datashader.reductions.cudf",
    "datashader.reductions.cupy",
    "isinstance",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.first": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "datashader.reductions.Reduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.first._append": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.first._combine": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.first._create": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.first._finalize": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.isnull": {
  "data": {
   "shadows": "datashader.glyphs.glyph.isnull"
  },
  "type": "import"
 },
 "datashader.reductions.isnumeric": {
  "data": {
   "shadows": "datashape.isnumeric"
  },
  "type": "import"
 },
 "datashader.reductions.last": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "datashader.reductions.Reduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.last._append": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.last._combine": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.last._create": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.last._finalize": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.m2": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datashader.reductions.FloatingReduction"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.m2._append": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "datashader.reductions.count",
    "datashader.reductions.m2",
    "datashader.reductions.sum",
    "numpy.float64",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.m2._build_append": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "datashader.reductions.m2",
    "datashape.dshape",
    "numba.cuda",
    "super"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.m2._build_temps": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "datashader.reductions._sum_zero",
    "datashader.reductions.count"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.m2._combine": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.nansum",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.m2._create": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.max": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "datashader.reductions.FloatingReduction"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.max._append": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.max._append_cuda": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numba.cuda.atomic.max",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.max._combine": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.nanmax",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.mean": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "datashader.reductions.Reduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.mean._build_bases": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "datashader.reductions._sum_zero",
    "datashader.reductions.count"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.mean._finalize": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.nan",
    "numpy.where",
    "staticmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.min": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "datashader.reductions.FloatingReduction"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.min._append": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.min._append_cuda": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numba.cuda.atomic.min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.min._combine": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.nanmin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.mode": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "datashader.reductions.Reduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.mode._append": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.mode._combine": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.mode._create": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.mode._finalize": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.nb_cuda": {
  "data": {
   "shadows": "numba.cuda"
  },
  "type": "import"
 },
 "datashader.reductions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.reductions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.reductions.std": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "datashader.reductions.Reduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.std._build_bases": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "datashader.reductions._sum_zero",
    "datashader.reductions.count",
    "datashader.reductions.m2"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.std._finalize": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.where",
    "staticmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.sum": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "datashader.reductions.FloatingReduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.sum._append": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "datashader.glyphs.glyph.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.sum._build_bases": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datashader.reductions._sum_zero",
    "datashader.reductions.any",
    "numba.cuda"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.sum._combine": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.bitwise_and.reduce",
    "numpy.isnan",
    "numpy.where",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.sum._finalize": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numba.cuda",
    "numpy.nan",
    "numpy.where",
    "staticmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.summary": {
  "data": {
   "lineno": 608
  },
  "type": "class"
 },
 "datashader.reductions.summary.__hash__": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "hash",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.summary.__init__": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.summary.inputs": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "property",
    "toolz.concat",
    "toolz.unique",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.summary.out_dshape": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "datashape.Record",
    "datashape.dshape",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.summary.validate": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "datashader.reductions.unique": {
  "data": {
   "shadows": "toolz.unique"
  },
  "type": "import"
 },
 "datashader.reductions.var": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "datashader.reductions.Reduction",
    "datashape.Option",
    "datashape.coretypes.float64",
    "datashape.dshape"
   ]
  },
  "type": "class"
 },
 "datashader.reductions.var._build_bases": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "datashader.reductions._sum_zero",
    "datashader.reductions.count",
    "datashader.reductions.m2"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.var._finalize": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.nan",
    "numpy.where",
    "staticmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.reductions.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.spatial": {
  "data": {},
  "type": "module"
 },
 "datashader.spatial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.spatial.euclidean_distance": {
  "data": {
   "shadows": "datashader.spatial.proximity.euclidean_distance"
  },
  "type": "import"
 },
 "datashader.spatial.great_circle_distance": {
  "data": {
   "shadows": "datashader.spatial.proximity.great_circle_distance"
  },
  "type": "import"
 },
 "datashader.spatial.hilbert_curve": {
  "data": {
   "symbols_in_volume": [
    "datashader.spatial.hilbert_curve.NUMBA_DISABLE_JIT",
    "datashader.spatial.hilbert_curve.os",
    "numba.int64",
    "numba.vectorize",
    "numpy.vectorize"
   ]
  },
  "type": "module"
 },
 "datashader.spatial.hilbert_curve.NUMBA_DISABLE_JIT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.spatial.hilbert_curve._binary_2_int": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.hilbert_curve._hilbert_integer_to_transpose": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "datashader.spatial.hilbert_curve._binary_2_int",
    "datashader.spatial.hilbert_curve._int_2_binary",
    "datashader.utils.ngjit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.hilbert_curve._int_2_binary": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "numpy.uint8",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.hilbert_curve._transpose_to_hilbert_integer": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datashader.spatial.hilbert_curve._binary_2_int",
    "datashader.spatial.hilbert_curve._int_2_binary",
    "datashader.utils.ngjit",
    "numpy.uint8",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.hilbert_curve.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.spatial.hilbert_curve.coordinates_from_distance": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "datashader.spatial.hilbert_curve._hilbert_integer_to_transpose",
    "datashader.utils.ngjit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.hilbert_curve.distance_from_coordinates": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datashader.spatial.hilbert_curve._transpose_to_hilbert_integer",
    "datashader.spatial.hilbert_curve.vect",
    "numpy.array",
    "numpy.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.hilbert_curve.int64": {
  "data": {
   "shadows": "numba.int64"
  },
  "type": "import"
 },
 "datashader.spatial.hilbert_curve.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.spatial.hilbert_curve.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.spatial.hilbert_curve.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.spatial.hilbert_curve.vect": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "datashader.spatial.hilbert_curve.vectorize": {
  "data": {
   "shadows": "numba.vectorize"
  },
  "type": "import"
 },
 "datashader.spatial.manhattan_distance": {
  "data": {
   "shadows": "datashader.spatial.proximity.manhattan_distance"
  },
  "type": "import"
 },
 "datashader.spatial.points": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "fastparquet",
    "str"
   ]
  },
  "type": "module"
 },
 "datashader.spatial.points.SpatialPointsFrame": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame"
   ]
  },
  "type": "class"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.__init__": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "datashader.spatial.points._build_partition_grid",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.distance_divisions": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.distances": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "datashader.spatial.points._compute_distance",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.frame": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.nrows": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.p": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.partitions": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.x": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.x_bin_edges": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.linspace",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.x_range": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.y": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.y_bin_edges": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.linspace",
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.SpatialProperties.y_range": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.__init__": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "datashader.spatial.points.SpatialPointsFrame",
    "super"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame._set_spatial_props": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.persist": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "datashader.spatial.points.SpatialPointsFrame",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.spatial": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.SpatialPointsFrame.spatial_query": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "RuntimeError",
    "dask.dataframe.concat",
    "datashader.spatial.points._data2coord",
    "numpy.unique",
    "slice",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points._build_distance_grid": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "datashader.spatial.hilbert_curve.distance_from_coordinates",
    "datashader.utils.ngjit",
    "int",
    "numpy.int64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points._build_partition_grid": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "datashader.spatial.points._build_distance_grid",
    "datashader.utils.ngjit",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.searchsorted",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points._compute_distance": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datashader.spatial.hilbert_curve.distance_from_coordinates",
    "datashader.spatial.points._data2coord",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points._compute_extents": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points._data2coord": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.int64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points._validate_fastparquet": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ImportError",
    "fastparquet"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.spatial.points.basestring": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datashader.spatial.points.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "datashader.spatial.points.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "datashader.spatial.points.fp": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datashader.spatial.points.get_fs_token_paths": {
  "data": {
   "shadows": "dask.bytes.core.get_fs_token_paths"
  },
  "type": "import"
 },
 "datashader.spatial.points.hc": {
  "data": {
   "shadows": "datashader.spatial.hilbert_curve"
  },
  "type": "import"
 },
 "datashader.spatial.points.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datashader.spatial.points.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.spatial.points.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.spatial.points.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.spatial.points.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.spatial.points.read_parquet": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "dask.bytes.core.get_fs_token_paths",
    "dask.dataframe.read_parquet",
    "datashader.spatial.points.SpatialPointsFrame",
    "datashader.spatial.points._validate_fastparquet",
    "datashader.spatial.points.json",
    "fastparquet.ParquetFile"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.points.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datashader.spatial.points.to_parquet": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "dask.bytes.core.get_fs_token_paths",
    "dask.dataframe.DataFrame",
    "dask.dataframe.from_pandas",
    "dask.dataframe.to_parquet",
    "datashader.spatial.points._compute_distance",
    "datashader.spatial.points._compute_extents",
    "datashader.spatial.points._validate_fastparquet",
    "datashader.spatial.points.basestring",
    "datashader.spatial.points.copy",
    "datashader.spatial.points.json",
    "datashader.spatial.points.os",
    "datashader.spatial.points.shutil",
    "dict",
    "fastparquet.ParquetFile",
    "fastparquet.parquet_thrift.KeyValue",
    "fastparquet.writer.write_common_metadata",
    "float",
    "int",
    "isinstance",
    "len",
    "max",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity": {
  "data": {
   "shadows": "datashader.spatial.proximity.proximity"
  },
  "type": "import"
 },
 "datashader.spatial.proximity.DISTANCE_METRICS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datashader.spatial.proximity.EUCLIDEAN": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "datashader.spatial.proximity.GREAT_CIRCLE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "datashader.spatial.proximity.MANHATTAN": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "datashader.spatial.proximity.NAN": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "datashader.spatial.proximity._distance": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datashader.spatial.proximity.EUCLIDEAN",
    "datashader.spatial.proximity.GREAT_CIRCLE",
    "datashader.spatial.proximity.MANHATTAN",
    "datashader.spatial.proximity.euclidean_distance",
    "datashader.spatial.proximity.great_circle_distance",
    "datashader.spatial.proximity.manhattan_distance",
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity._distance_metric_mapping": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "datashader.spatial.proximity.EUCLIDEAN",
    "datashader.spatial.proximity.GREAT_CIRCLE",
    "datashader.spatial.proximity.MANHATTAN"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity._process_proximity_line": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "datashader.spatial.proximity._distance",
    "len",
    "math.sqrt",
    "numba.njit",
    "numba.prange",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity._proximity": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "datashader.spatial.proximity._process_proximity_line",
    "numba.njit",
    "numba.prange",
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity.euclidean_distance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity.great_circle_distance": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numba.njit",
    "numpy.arcsin",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity.manhattan_distance": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numba.njit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "datashader.spatial.proximity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.spatial.proximity.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "datashader.spatial.proximity.proximity": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "datashader.spatial.proximity.DISTANCE_METRICS",
    "datashader.spatial.proximity._proximity",
    "datashader.spatial.proximity.xarray",
    "numpy.asarray",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.proximity.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "datashader.spatial.proximity.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.spatial.read_parquet": {
  "data": {
   "shadows": "datashader.spatial.points.read_parquet"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed": {
  "data": {
   "shadows": "datashader.spatial.viewshed.viewshed"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.AE_ANG_ID": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.AE_ELEV_0": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.AE_ELEV_1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.AE_ELEV_2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.CENTER_EVENT": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.ENTERING_EVENT": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.EXITING_EVENT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.E_ANG_ID": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.E_COL_ID": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.E_ELEV_0": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.E_ELEV_1": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.E_ELEV_2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.E_ROW_ID": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.E_TYPE_ID": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.INVISIBLE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.NIL_ID": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.OBS_ELEV": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.PI": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.RB_BLACK": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.RB_RED": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.SMALLEST_GRAD": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TARGET_ELEV": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_ANG_0": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_ANG_1": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_ANG_2": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_COLOR_ID": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_GRAD_0": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_GRAD_1": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_GRAD_2": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_KEY_ID": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_LEFT_ID": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_MAX_GRAD_ID": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_PARENT_ID": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed.TN_RIGHT_ID": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datashader.spatial.viewshed._calc_dist_n_grad": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "math.atan",
    "math.pi",
    "math.sqrt",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numba.types.Tuple"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._calc_event_elev": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "datashader.spatial.viewshed._calculate_event_row_col",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._calc_event_grad": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "math.atan",
    "math.pi",
    "math.sqrt",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._calc_event_pos": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "abs",
    "datashader.spatial.viewshed.CENTER_EVENT",
    "datashader.spatial.viewshed.ENTERING_EVENT",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numba.types.Tuple"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._calculate_angle": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "math.atan",
    "math.fabs",
    "math.pi",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._calculate_event_row_col": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "datashader.spatial.viewshed.CENTER_EVENT",
    "datashader.spatial.viewshed.ENTERING_EVENT",
    "numba.i8",
    "numba.jit",
    "numba.types.Tuple"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._col_to_east": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "numba.f8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._compare": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._create_status_struct": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.RB_BLACK",
    "datashader.spatial.viewshed.SMALLEST_GRAD",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._create_tree_nodes",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._create_tree_nodes": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.RB_RED",
    "datashader.spatial.viewshed.SMALLEST_GRAD",
    "datashader.spatial.viewshed.TN_ANG_0",
    "datashader.spatial.viewshed.TN_ANG_1",
    "datashader.spatial.viewshed.TN_ANG_2",
    "datashader.spatial.viewshed.TN_COLOR_ID",
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_MAX_GRAD_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numba.void"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._delete_from_tree": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.RB_BLACK",
    "datashader.spatial.viewshed.TN_ANG_0",
    "datashader.spatial.viewshed.TN_ANG_1",
    "datashader.spatial.viewshed.TN_ANG_2",
    "datashader.spatial.viewshed.TN_COLOR_ID",
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_MAX_GRAD_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._find_max_value",
    "datashader.spatial.viewshed._find_value_min_value",
    "datashader.spatial.viewshed._rb_delete_fixup",
    "datashader.spatial.viewshed._search_for_node",
    "datashader.spatial.viewshed._tree_successor",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numba.types.Tuple"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._find_max_value": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.TN_MAX_GRAD_ID",
    "numba.f8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._find_max_value_within_key": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ValueError",
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.SMALLEST_GRAD",
    "datashader.spatial.viewshed.TN_ANG_0",
    "datashader.spatial.viewshed.TN_ANG_1",
    "datashader.spatial.viewshed.TN_ANG_2",
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._find_max_value",
    "datashader.spatial.viewshed._find_value_min_value",
    "datashader.spatial.viewshed._search_for_node",
    "max",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "print"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._find_value_min_value": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "min",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._g_distance": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "datashader.spatial.viewshed._hypot",
    "numba.f8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._get_vertical_ang": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "abs",
    "math.atan",
    "math.pi",
    "math.sqrt",
    "numba.f8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._hypot": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "math.sqrt",
    "numba.f8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._init_event_list": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.CENTER_EVENT",
    "datashader.spatial.viewshed.ENTERING_EVENT",
    "datashader.spatial.viewshed.EXITING_EVENT",
    "datashader.spatial.viewshed.E_ANG_ID",
    "datashader.spatial.viewshed.E_COL_ID",
    "datashader.spatial.viewshed.E_ELEV_0",
    "datashader.spatial.viewshed.E_ELEV_1",
    "datashader.spatial.viewshed.E_ELEV_2",
    "datashader.spatial.viewshed.E_ROW_ID",
    "datashader.spatial.viewshed.E_TYPE_ID",
    "datashader.spatial.viewshed._calc_event_elev",
    "datashader.spatial.viewshed._calc_event_pos",
    "datashader.spatial.viewshed._calculate_angle",
    "datashader.spatial.viewshed._set_visibility",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numba.void",
    "numpy.empty",
    "numpy.float64",
    "numpy.nan",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._init_status_node": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.TN_ANG_0",
    "datashader.spatial.viewshed.TN_ANG_1",
    "datashader.spatial.viewshed.TN_ANG_2",
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "numba.f8",
    "numba.jit",
    "numba.void",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._insert_into_tree": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.RB_RED",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_MAX_GRAD_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._compare",
    "datashader.spatial.viewshed._create_tree_nodes",
    "datashader.spatial.viewshed._find_value_min_value",
    "datashader.spatial.viewshed._rb_insert_fixup",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._left_rotate": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_MAX_GRAD_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._find_value_min_value",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._max_grad_in_status_struct": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.SMALLEST_GRAD",
    "datashader.spatial.viewshed._find_max_value_within_key",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._pop": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._print_event": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.E_ANG_ID",
    "datashader.spatial.viewshed.E_COL_ID",
    "datashader.spatial.viewshed.E_ELEV_0",
    "datashader.spatial.viewshed.E_ELEV_1",
    "datashader.spatial.viewshed.E_ELEV_2",
    "datashader.spatial.viewshed.E_ROW_ID",
    "datashader.spatial.viewshed.E_TYPE_ID",
    "print"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._print_status_node": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.TN_ANG_0",
    "datashader.spatial.viewshed.TN_ANG_1",
    "datashader.spatial.viewshed.TN_ANG_2",
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "print"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._print_tree": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._print_tv": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.TN_ANG_0",
    "datashader.spatial.viewshed.TN_ANG_1",
    "datashader.spatial.viewshed.TN_ANG_2",
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "datashader.spatial.viewshed.TN_MAX_GRAD_ID",
    "print"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._push": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "numba.i8",
    "numba.jit",
    "numba.void"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._radian": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "math.pi",
    "numba.f8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._rb_delete_fixup": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.RB_BLACK",
    "datashader.spatial.viewshed.RB_RED",
    "datashader.spatial.viewshed.TN_COLOR_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._left_rotate",
    "datashader.spatial.viewshed._right_rotate",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._rb_insert_fixup": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.RB_BLACK",
    "datashader.spatial.viewshed.RB_RED",
    "datashader.spatial.viewshed.TN_COLOR_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._left_rotate",
    "datashader.spatial.viewshed._right_rotate",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._right_rotate": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_MAX_GRAD_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._find_value_min_value",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._row_to_north": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numba.f8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._search_for_node": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._compare",
    "numba.f8",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._set_visibility": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numba.void"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._tree_minimum": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.TN_LEFT_ID",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._tree_successor": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.NIL_ID",
    "datashader.spatial.viewshed.TN_PARENT_ID",
    "datashader.spatial.viewshed.TN_RIGHT_ID",
    "datashader.spatial.viewshed._tree_minimum",
    "numba.i8",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed._viewshed": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "datashader.spatial.viewshed.AE_ANG_ID",
    "datashader.spatial.viewshed.AE_ELEV_0",
    "datashader.spatial.viewshed.AE_ELEV_1",
    "datashader.spatial.viewshed.AE_ELEV_2",
    "datashader.spatial.viewshed.CENTER_EVENT",
    "datashader.spatial.viewshed.ENTERING_EVENT",
    "datashader.spatial.viewshed.EXITING_EVENT",
    "datashader.spatial.viewshed.E_COL_ID",
    "datashader.spatial.viewshed.E_ROW_ID",
    "datashader.spatial.viewshed.E_TYPE_ID",
    "datashader.spatial.viewshed.TN_ANG_0",
    "datashader.spatial.viewshed.TN_ANG_1",
    "datashader.spatial.viewshed.TN_ANG_2",
    "datashader.spatial.viewshed.TN_GRAD_0",
    "datashader.spatial.viewshed.TN_GRAD_1",
    "datashader.spatial.viewshed.TN_GRAD_2",
    "datashader.spatial.viewshed.TN_KEY_ID",
    "datashader.spatial.viewshed._calc_dist_n_grad",
    "datashader.spatial.viewshed._calc_event_grad",
    "datashader.spatial.viewshed._calc_event_pos",
    "datashader.spatial.viewshed._calculate_angle",
    "datashader.spatial.viewshed._create_status_struct",
    "datashader.spatial.viewshed._delete_from_tree",
    "datashader.spatial.viewshed._get_vertical_ang",
    "datashader.spatial.viewshed._init_status_node",
    "datashader.spatial.viewshed._insert_into_tree",
    "datashader.spatial.viewshed._max_grad_in_status_struct",
    "datashader.spatial.viewshed._pop",
    "datashader.spatial.viewshed._push",
    "datashader.spatial.viewshed._set_visibility",
    "id",
    "len",
    "math.pi",
    "max",
    "numba.f8",
    "numba.i8",
    "numba.jit",
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed.atan": {
  "data": {
   "shadows": "math.atan"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.fabs": {
  "data": {
   "shadows": "math.fabs"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.nb": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "datashader.spatial.viewshed.viewshed": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "ValueError",
    "datashader.spatial.viewshed.E_ANG_ID",
    "datashader.spatial.viewshed.E_TYPE_ID",
    "datashader.spatial.viewshed.INVISIBLE",
    "datashader.spatial.viewshed.OBS_ELEV",
    "datashader.spatial.viewshed.TARGET_ELEV",
    "datashader.spatial.viewshed._init_event_list",
    "datashader.spatial.viewshed._viewshed",
    "datashader.spatial.viewshed.xarray",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.int64",
    "numpy.lexsort",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.viewshed.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.spatial.zonal": {
  "data": {},
  "type": "module"
 },
 "datashader.spatial.zonal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.spatial.zonal.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.spatial.zonal.zonal_stats": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "dict",
    "int",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "numpy.float",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.integer",
    "numpy.ma.masked_invalid",
    "numpy.ma.masked_where",
    "numpy.nan_to_num",
    "numpy.unique",
    "pandas.DataFrame",
    "stat_func",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.spatial.zonal_stats": {
  "data": {
   "shadows": "datashader.spatial.zonal.zonal_stats"
  },
  "type": "import"
 },
 "datashader.tests": {
  "data": {},
  "type": "module"
 },
 "datashader.tests.test_bokeh_ext": {
  "data": {
   "symbols_in_volume": [
    "datashader.core.LinearAxis",
    "datashader.tests.test_bokeh_ext.axis",
    "datashader.tests.test_bokeh_ext.lincoords",
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_bokeh_ext.Document": {
  "data": {
   "shadows": "bokeh.plotting.Document"
  },
  "type": "import"
 },
 "datashader.tests.test_bokeh_ext.InteractiveImage": {
  "data": {
   "shadows": "datashader.bokeh_ext.InteractiveImage"
  },
  "type": "import"
 },
 "datashader.tests.test_bokeh_ext.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_bokeh_ext.axis": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "datashader.tests.test_bokeh_ext.coords": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.tests.test_bokeh_ext.create_image": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_bokeh_ext.df",
    "datashader.transfer_functions.shade"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bokeh_ext.df": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.tests.test_bokeh_ext.dims": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datashader.tests.test_bokeh_ext.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_bokeh_ext.figure": {
  "data": {
   "shadows": "bokeh.plotting.figure"
  },
  "type": "import"
 },
 "datashader.tests.test_bokeh_ext.lincoords": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.tests.test_bokeh_ext.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_bokeh_ext.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_bokeh_ext.test_interactive_image_initialize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bokeh.plotting.figure",
    "datashader.bokeh_ext.InteractiveImage",
    "datashader.tests.test_bokeh_ext.create_image",
    "numpy.array",
    "numpy.array_equal",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bokeh_ext.test_interactive_image_update": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bokeh.plotting.Document",
    "bokeh.plotting.figure",
    "datashader.bokeh_ext.InteractiveImage",
    "datashader.tests.test_bokeh_ext.create_image",
    "isinstance",
    "numpy.array",
    "numpy.array_equal",
    "numpy.uint32",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bokeh_ext.tf": {
  "data": {
   "shadows": "datashader.transfer_functions"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling": {
  "data": {
   "symbols_in_volume": [
    "datashader.tests.test_bundling.pytest"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_bundling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.circular_layout": {
  "data": {
   "shadows": "datashader.layout.circular_layout"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.directly_connect_edges": {
  "data": {
   "shadows": "datashader.bundling.directly_connect_edges"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.edges": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datashader.tests.test_bundling.pytest",
    "numpy.arange",
    "numpy.int",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.forceatlas2_layout": {
  "data": {
   "shadows": "datashader.layout.forceatlas2_layout"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.hammer_bundle": {
  "data": {
   "shadows": "datashader.bundling.hammer_bundle"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.nodes": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "datashader.tests.test_bundling.pytest",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.random_layout": {
  "data": {
   "shadows": "datashader.layout.random_layout"
  },
  "type": "import"
 },
 "datashader.tests.test_bundling.skimage": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "datashader.tests.test_bundling.test_directly_connect_with_weights": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datashader.bundling.directly_connect_edges",
    "datashader.tests.test_bundling.nodes",
    "datashader.tests.test_bundling.pytest",
    "datashader.tests.test_bundling.weighted_edges",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.test_directly_connect_without_weights": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datashader.bundling.directly_connect_edges",
    "datashader.tests.test_bundling.edges",
    "datashader.tests.test_bundling.nodes",
    "datashader.tests.test_bundling.pytest",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.test_hammer_bundle_with_weights": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "datashader.bundling.hammer_bundle",
    "datashader.tests.test_bundling.nodes",
    "datashader.tests.test_bundling.pytest",
    "datashader.tests.test_bundling.weighted_edges",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.test_hammer_bundle_without_weights": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "datashader.bundling.hammer_bundle",
    "datashader.tests.test_bundling.edges",
    "datashader.tests.test_bundling.nodes",
    "datashader.tests.test_bundling.pytest",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.test_immutable_nodes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datashader.bundling.directly_connect_edges",
    "datashader.tests.test_bundling.edges",
    "datashader.tests.test_bundling.nodes"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.test_renamed_columns": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bundle",
    "datashader.bundling.directly_connect_edges",
    "datashader.bundling.hammer_bundle",
    "datashader.tests.test_bundling.edges",
    "datashader.tests.test_bundling.nodes",
    "datashader.tests.test_bundling.pytest",
    "datashader.tests.test_bundling.weighted_edges"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.test_same_path_endpoints": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bundle",
    "datashader.bundling.directly_connect_edges",
    "datashader.bundling.hammer_bundle",
    "datashader.layout.circular_layout",
    "datashader.layout.forceatlas2_layout",
    "datashader.layout.random_layout",
    "datashader.tests.test_bundling.edges",
    "datashader.tests.test_bundling.nodes",
    "datashader.tests.test_bundling.pytest",
    "layout",
    "len",
    "numpy.allclose",
    "numpy.unique",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_bundling.weighted_edges": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datashader.tests.test_bundling.pytest",
    "numpy.arange",
    "numpy.int",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_colors": {
  "data": {},
  "type": "module"
 },
 "datashader.tests.test_colors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_colors.hex_to_rgb": {
  "data": {
   "shadows": "datashader.colors.hex_to_rgb"
  },
  "type": "import"
 },
 "datashader.tests.test_colors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_colors.rgb": {
  "data": {
   "shadows": "datashader.colors.rgb"
  },
  "type": "import"
 },
 "datashader.tests.test_colors.test_hex_to_rgb": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "datashader.colors.hex_to_rgb",
    "datashader.tests.test_colors.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_colors.test_rgb": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "datashader.colors.rgb",
    "datashader.tests.test_colors.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_compatibility": {
  "data": {},
  "type": "module"
 },
 "datashader.tests.test_compatibility._exec": {
  "data": {
   "shadows": "datashader.compatibility._exec"
  },
  "type": "import"
 },
 "datashader.tests.test_compatibility.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_compatibility.apply": {
  "data": {
   "shadows": "datashader.compatibility.apply"
  },
  "type": "import"
 },
 "datashader.tests.test_compatibility.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "datashader.tests.test_compatibility.test__exec": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "NameError",
    "datashader.compatibility._exec",
    "foo",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_compatibility.test_apply": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datashader.compatibility.apply",
    "dict"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_composite": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint32"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_composite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_composite.add": {
  "data": {
   "shadows": "datashader.composite.add"
  },
  "type": "import"
 },
 "datashader.tests.test_composite.blue": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datashader.tests.test_composite.clear": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "datashader.tests.test_composite.clear_white": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.tests.test_composite.half_blue": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.tests.test_composite.half_purple": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.tests.test_composite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_composite.over": {
  "data": {
   "shadows": "datashader.composite.over"
  },
  "type": "import"
 },
 "datashader.tests.test_composite.saturate": {
  "data": {
   "shadows": "datashader.composite.saturate"
  },
  "type": "import"
 },
 "datashader.tests.test_composite.source": {
  "data": {
   "shadows": "datashader.composite.source"
  },
  "type": "import"
 },
 "datashader.tests.test_composite.src": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "datashader.tests.test_composite.test_add": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datashader.composite.add",
    "datashader.tests.test_composite.blue",
    "datashader.tests.test_composite.clear",
    "datashader.tests.test_composite.clear_white",
    "datashader.tests.test_composite.half_blue",
    "datashader.tests.test_composite.half_purple",
    "datashader.tests.test_composite.src",
    "datashader.tests.test_composite.white",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_composite.test_over": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datashader.composite.over",
    "datashader.tests.test_composite.blue",
    "datashader.tests.test_composite.clear",
    "datashader.tests.test_composite.clear_white",
    "datashader.tests.test_composite.half_blue",
    "datashader.tests.test_composite.half_purple",
    "datashader.tests.test_composite.src",
    "datashader.tests.test_composite.white",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_composite.test_saturate": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datashader.composite.saturate",
    "datashader.tests.test_composite.blue",
    "datashader.tests.test_composite.clear",
    "datashader.tests.test_composite.clear_white",
    "datashader.tests.test_composite.half_blue",
    "datashader.tests.test_composite.half_purple",
    "datashader.tests.test_composite.src",
    "datashader.tests.test_composite.white",
    "numpy.array",
    "numpy.full",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_composite.test_source": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datashader.composite.source",
    "datashader.tests.test_composite.clear",
    "datashader.tests.test_composite.clear_white",
    "datashader.tests.test_composite.half_blue",
    "datashader.tests.test_composite.src",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_composite.white": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.tests.test_dask": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "dask.context.config.set",
    "dask.dataframe.from_pandas",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.tests.test_dask._ddf",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.cudf",
    "datashader.tests.test_dask.cupy",
    "datashader.tests.test_dask.dask_DataFrame",
    "datashader.tests.test_dask.dask_cudf",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.line_autorange_params",
    "datashader.tests.test_dask.line_manual_range_params",
    "datashader.tests.test_dask.os",
    "datashader.tests.test_dask.test_gpu",
    "dict",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "spatialpandas"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_dask.DataFrames": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "datashader.tests.test_dask._ddf": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.assert_eq": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "datashader.tests.test_dask.assert_eq_ndarray": {
  "data": {
   "shadows": "datashader.tests.test_pandas.assert_eq_ndarray"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.assert_eq_xr": {
  "data": {
   "shadows": "datashader.tests.test_pandas.assert_eq_xr"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.axis": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.c": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.c_logx": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.c_logxy": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.c_logy": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.config": {
  "data": {
   "shadows": "dask.context.config"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.coords": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.cudf": {
  "data": {
   "shadows": "cudf"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.dask_DataFrame": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "pandas.DataFrame",
    "spatialpandas.GeoDataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.dask_cudf": {
  "data": {
   "shadows": "dask_cudf"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.dask_cudf_DataFrame": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.ddfs": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.df_pd": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.dims": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.du": {
  "data": {
   "shadows": "datashader.utils"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.floats": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.spacing"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.lincoords": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.line_autorange_params": {
  "data": {
   "lineno": 488
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.line_manual_range_params": {
  "data": {
   "lineno": 402
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.sp": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.spatialpandas.dask": {
  "data": {
   "shadows": "spatialpandas.dask"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.test_any": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "datashader.any",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_area_to_line_autorange": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "dict",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_area_to_line_autorange_gap": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "dict",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_area_to_zero_autorange": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "dict",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_area_to_zero_autorange_gap": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "dict",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_area_to_zero_fixedrange": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "dict",
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_auto_range_line": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_auto_range_points": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_ndarray",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.fill_diagonal",
    "numpy.zeros",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_count": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datashader.count",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_count_cat": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "datashader.count_cat",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_gpu": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datashader.tests.test_dask.test_gpu_dependencies": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "datashader.tests.test_dask.cudf",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_dask.test_gpu"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_line": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_line_autorange": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.line_autorange_params",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_line_manual_range": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.dask_cudf_DataFrame",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.line_manual_range_params",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_line_x_constant_autorange": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_log_axis_line": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "datashader.core.LinearAxis",
    "datashader.core.LogAxis",
    "datashader.count",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.c_logx",
    "datashader.tests.test_dask.c_logxy",
    "datashader.tests.test_dask.c_logy",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_log_axis_points": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datashader.core.LinearAxis",
    "datashader.core.LogAxis",
    "datashader.count",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.c_logx",
    "datashader.tests.test_dask.c_logxy",
    "datashader.tests.test_dask.c_logy",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_max": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "datashader.max",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.values",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_mean": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datashader.mean",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.values",
    "numpy.nanmean",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_min": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datashader.min",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.values",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_multiple_aggregates": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "datashader.count",
    "datashader.mean",
    "datashader.std",
    "datashader.sum",
    "datashader.summary",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.dask_cudf",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.values",
    "f",
    "isinstance",
    "numpy.array",
    "numpy.nanmean",
    "numpy.nanstd",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_points_geometry": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.sum",
    "datashader.tests.test_dask.axis",
    "datashader.tests.test_dask.lincoords",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "spatialpandas",
    "spatialpandas.GeoDataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_std": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "datashader.std",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.dask_cudf",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.values",
    "isinstance",
    "numpy.nanstd",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_sum": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datashader.sum",
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.values",
    "numpy.nansum",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_trimesh_dask_partitions": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dask.dataframe.from_pandas",
    "datashader.Canvas",
    "datashader.tests.test_dask.pytest",
    "datashader.utils.mesh",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.ceil",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_trimesh_no_double_edge": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "datashader.Canvas",
    "multiprocessing.cpu_count",
    "numpy.array",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_uniform_diagonal_points": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "DataFrame",
    "abs",
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "sum"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_uniform_points": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_dask.DataFrames",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_ndarray",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.test_var": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "datashader.tests.test_dask.c",
    "datashader.tests.test_dask.coords",
    "datashader.tests.test_dask.dask_cudf",
    "datashader.tests.test_dask.ddfs",
    "datashader.tests.test_dask.df_pd",
    "datashader.tests.test_dask.dims",
    "datashader.tests.test_dask.pytest",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.values",
    "datashader.var",
    "isinstance",
    "numpy.nanvar",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_dask.values": {
  "data": {
   "shadows": "datashader.tests.test_pandas.values"
  },
  "type": "import"
 },
 "datashader.tests.test_dask.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes": {
  "data": {},
  "type": "module"
 },
 "datashader.tests.test_datatypes.RaggedArray": {
  "data": {
   "shadows": "datashader.datatypes.RaggedArray"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes.RaggedDtype": {
  "data": {
   "shadows": "datashader.datatypes.RaggedDtype"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes.TestRaggedConstructors": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseConstructorsTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedDtype": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseDtypeTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedGetitem": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGetitemTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedGetitem.test_get": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.data",
    "len",
    "list",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedGetitem.test_take": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "IndexError",
    "datashader.tests.test_datatypes.data",
    "datashader.tests.test_datatypes.na_cmp",
    "datashader.tests.test_datatypes.na_value",
    "datashader.tests.test_datatypes.pytest",
    "len",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedGetitem.test_take_sequence": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.data",
    "numpy.testing.assert_array_equal",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedGroupby": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGroupbyTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedGroupby.test_groupby_extension_apply": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.data_for_grouping",
    "datashader.tests.test_datatypes.pytest",
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedInterface": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseInterfaceTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedInterface.test_array_interface": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.data",
    "list",
    "numpy.array",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.testing.assert_array_equal",
    "object",
    "pandas.util.testing.assert_numpy_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedInterface.test_copy": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMethodsTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods.test_combine_add": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods.test_combine_first": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods.test_combine_le": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods.test_fillna_copy_frame": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods.test_fillna_copy_series": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods.test_unique": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "box",
    "datashader.tests.test_datatypes.data",
    "datashader.tests.test_datatypes.pytest",
    "isinstance",
    "len",
    "method",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "pandas.unique",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMethods.test_value_counts": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMissing": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMissingTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedMissing.test_fillna_frame": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedMissing.test_fillna_series": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.TestRaggedPrinting": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BasePrintingTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedReshaping": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseReshapingTests"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_datatypes.TestRaggedReshaping.test_ravel": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes.all_data": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.data",
    "datashader.tests.test_datatypes.data_missing",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.assert_ragged_arrays_equal": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.data": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.data_for_grouping": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.data_for_sorting": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.data_missing": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.data_missing_for_sorting": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.data_repeated": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.data_repeated.gen": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.data",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.dtype": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedDtype",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.eb": {
  "data": {
   "shadows": "pandas.tests.extension.base"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes.na_cmp": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest",
    "numpy.isnan",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.na_value": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "datashader.tests.test_datatypes.pytest",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_datatypes.test_array_eq_numpy1": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_array_eq_numpy2d": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_array_eq_ragged": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_array_eq_scalar": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_concat_same_type": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes.RaggedArray._concat_same_type",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_concat_series": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "pandas.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_construct_ragged_array": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes.RaggedDtype",
    "len",
    "numpy.array",
    "numpy.array_equal",
    "numpy.int32",
    "numpy.uint8",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_construct_ragged_array_fastpath": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "dict",
    "len",
    "numpy.array",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_construct_ragged_array_from_ragged_array": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_construct_ragged_dtype": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedDtype",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_copy": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray._from_sequence",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_equality_validation": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_factorization": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_flat_array_type_inference": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest",
    "numpy.array",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_from_sequence": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes.RaggedArray._from_sequence",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_get_item_list": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal",
    "datashader.tests.test_datatypes.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_get_item_mask": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal",
    "datashader.tests.test_datatypes.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_get_item_scalar": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "enumerate",
    "isinstance",
    "numpy.array",
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_get_item_scalar_out_of_bounds": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "IndexError",
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_get_item_slice": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_isna": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_pandas_array_construction": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal",
    "pandas.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_series_construction": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_start_indices_dtype": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "numpy.dtype",
    "numpy.iinfo",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_take": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedArray",
    "datashader.datatypes.RaggedArray._from_sequence",
    "datashader.tests.test_datatypes.assert_ragged_arrays_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.test_validate_ragged_array_fastpath": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "datashader.datatypes.RaggedArray",
    "datashader.tests.test_datatypes.pytest",
    "dict",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_datatypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "datashader.tests.test_geo": {
  "data": {
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.geo.generate_terrain",
    "datashader.tests.test_geo.H",
    "datashader.tests.test_geo.W",
    "datashader.tests.test_geo.X_RANGE",
    "datashader.tests.test_geo.Y_RANGE",
    "datashader.tests.test_geo._do_gaussian_array",
    "datashader.tests.test_geo._do_sparse_array",
    "datashader.tests.test_geo.csv",
    "datashader.tests.test_geo.data_random",
    "numpy.random.random_sample"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_geo.H": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.W": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.X_RANGE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.Y_RANGE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datashader.tests.test_geo._do_gaussian_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo._do_sparse_array": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datashader.tests.test_geo.random",
    "list",
    "numpy.asarray",
    "numpy.where",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo._raster_aggregate_default": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datashader.tests.test_geo.terrain"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_geo.csv": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.data_gaussian": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.data_random": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.data_random_sparse": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_geo.geo": {
  "data": {
   "shadows": "datashader.geo"
  },
  "type": "import"
 },
 "datashader.tests.test_geo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_geo.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_geo.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datashader.tests.test_geo.terrain": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datashader.tests.test_geo.test_aspect_transfer_function": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "datashader.geo.aspect",
    "datashader.tests.test_geo.data_gaussian",
    "datashader.tests.test_geo.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.test_bump": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "datashader.geo.bump"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.test_generate_terrain": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.geo.generate_terrain",
    "datashader.tests.test_geo.H",
    "datashader.tests.test_geo.W",
    "datashader.tests.test_geo.X_RANGE",
    "datashader.tests.test_geo.Y_RANGE",
    "datashader.tests.test_geo.csv",
    "datashader.tests.test_geo.terrain"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.test_hillshade_simple_transfer_function": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datashader.geo.hillshade",
    "datashader.tests.test_geo.data_gaussian",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.test_mean_transfer_function": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "abs",
    "datashader.geo.mean",
    "datashader.tests.test_geo.data_random",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.test_ndvi_transfer_function": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "datashader.geo.ndvi",
    "numpy.meshgrid",
    "numpy.mgrid",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.test_slope_transfer_function": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datashader.geo.slope",
    "datashader.tests.test_geo.data_gaussian",
    "numpy.where",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_geo.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs": {
  "data": {
   "symbols_in_volume": [
    "datashader.glyphs.Glyph._expand_aggs_and_cols",
    "datashader.glyphs.area._build_draw_trapezoid_y",
    "datashader.glyphs.line._build_draw_segment",
    "datashader.glyphs.line._build_extend_line_axis0",
    "datashader.glyphs.line._build_map_onto_pixel_for_line",
    "datashader.glyphs.trimesh._build_draw_triangle",
    "datashader.glyphs.trimesh._build_extend_triangles",
    "datashader.glyphs.trimesh._build_map_onto_pixel_for_triangle",
    "datashader.tests.test_glyphs._draw_segment",
    "datashader.tests.test_glyphs.append",
    "datashader.tests.test_glyphs.expand_aggs_and_cols",
    "datashader.tests.test_glyphs.map_onto_pixel_for_line",
    "datashader.tests.test_glyphs.map_onto_pixel_for_triangle",
    "datashader.tests.test_glyphs.mapper",
    "datashader.tests.test_glyphs.tri_append",
    "datashader.utils.ngjit"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_glyphs.Glyph": {
  "data": {
   "shadows": "datashader.glyphs.Glyph"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.LinesAxis1": {
  "data": {
   "shadows": "datashader.glyphs.LinesAxis1"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.Point": {
  "data": {
   "shadows": "datashader.glyphs.Point"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._build_draw_segment": {
  "data": {
   "shadows": "datashader.glyphs.line._build_draw_segment"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._build_draw_trapezoid_y": {
  "data": {
   "shadows": "datashader.glyphs.area._build_draw_trapezoid_y"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._build_draw_triangle": {
  "data": {
   "shadows": "datashader.glyphs.trimesh._build_draw_triangle"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._build_extend_line_axis0": {
  "data": {
   "shadows": "datashader.glyphs.line._build_extend_line_axis0"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._build_extend_triangles": {
  "data": {
   "shadows": "datashader.glyphs.trimesh._build_extend_triangles"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._build_map_onto_pixel_for_line": {
  "data": {
   "shadows": "datashader.glyphs.line._build_map_onto_pixel_for_line"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._build_map_onto_pixel_for_triangle": {
  "data": {
   "shadows": "datashader.glyphs.trimesh._build_map_onto_pixel_for_triangle"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs._draw_segment": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs._draw_trapezoid": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.append": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datashader.utils.ngjit"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.bounds": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs.draw_segment": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs._draw_segment"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.draw_trapezoid": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs._draw_trapezoid"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.dshape": {
  "data": {
   "shadows": "datashape.dshape"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.expand_aggs_and_cols": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs.extend_triangles": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs.map_onto_pixel_for_line": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs.map_onto_pixel_for_triangle": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs.mapper": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datashader.tests.test_glyphs.new_agg": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_glyphs.test_draw_line": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_segment",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_line_same_point": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_segment",
    "datashader.tests.test_glyphs.new_agg"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_line_vertical_horizontal": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_segment",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_acute": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_acute_not_stacked": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_clipped": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_diagonal_line": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_horizontal_line": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_intersecting": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_obtuse": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_point": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_right": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_vertical_line_not_start_and_clipped": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_vertical_line_not_start_and_not_clipped": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_trapezoid_vertical_line_start_and_not_clipped": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.draw_trapezoid",
    "datashader.tests.test_glyphs.new_agg",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_triangle_interp": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "draw_triangle_interp",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_triangle_nointerp": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "draw_triangle",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_draw_triangle_subpixel": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "draw_triangle",
    "draw_triangle_interp",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_extend_lines": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.bounds",
    "datashader.tests.test_glyphs.new_agg",
    "datashader.tests.test_glyphs.vt",
    "extend_line",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_extend_lines_all_out_of_bounds": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.bounds",
    "datashader.tests.test_glyphs.new_agg",
    "datashader.tests.test_glyphs.vt",
    "extend_line",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_extend_lines_exact_bounds": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.bounds",
    "datashader.tests.test_glyphs.vt",
    "extend_line",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_extend_lines_nan": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.bounds",
    "datashader.tests.test_glyphs.new_agg",
    "datashader.tests.test_glyphs.vt",
    "extend_line",
    "numpy.array",
    "numpy.diag",
    "numpy.nan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_line_awkward_point_on_upper_bound_maps_to_last_pixel": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "datashader.tests.test_glyphs.map_onto_pixel_for_line",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_lines_xy_validate": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "datashader.glyphs.LinesAxis1",
    "datashader.tests.test_glyphs.pytest",
    "datashape.dshape"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_point_bounds_check": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datashader.glyphs.Point",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.test_point_validate": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "datashader.glyphs.Point",
    "datashader.tests.test_glyphs.pytest",
    "datashape.dshape"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.tri_append": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datashader.utils.ngjit"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_glyphs.vt": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "datashader.tests.test_layout": {
  "data": {
   "symbols_in_volume": [
    "datashader.tests.test_layout.pytest"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_layout.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.circular_layout": {
  "data": {
   "shadows": "datashader.layout.circular_layout"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.directly_connect_edges": {
  "data": {
   "shadows": "datashader.bundling.directly_connect_edges"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.edges": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datashader.tests.test_layout.pytest",
    "numpy.arange",
    "numpy.int64",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.forceatlas2_layout": {
  "data": {
   "shadows": "datashader.layout.forceatlas2_layout"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.hammer_bundle": {
  "data": {
   "shadows": "datashader.bundling.hammer_bundle"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.nodes": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "datashader.tests.test_layout.pytest",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.nodes_without_positions": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datashader.tests.test_layout.pytest",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.random_layout": {
  "data": {
   "shadows": "datashader.layout.random_layout"
  },
  "type": "import"
 },
 "datashader.tests.test_layout.skimage": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "datashader.tests.test_layout.test_forceatlas2_positioned_nodes_with_unweighted_edges": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datashader.layout.forceatlas2_layout",
    "datashader.tests.test_layout.edges",
    "datashader.tests.test_layout.nodes",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.test_forceatlas2_positioned_nodes_with_weighted_edges": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datashader.layout.forceatlas2_layout",
    "datashader.tests.test_layout.nodes",
    "datashader.tests.test_layout.weighted_edges",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.test_forceatlas2_unpositioned_nodes_with_unweighted_edges": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datashader.layout.forceatlas2_layout",
    "datashader.tests.test_layout.edges",
    "datashader.tests.test_layout.nodes_without_positions",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.test_forceatlas2_unpositioned_nodes_with_weighted_edges": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datashader.layout.forceatlas2_layout",
    "datashader.tests.test_layout.nodes_without_positions",
    "datashader.tests.test_layout.weighted_edges",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.test_random_circular_layout": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datashader.layout.circular_layout",
    "datashader.tests.test_layout.edges",
    "datashader.tests.test_layout.nodes_without_positions",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.test_random_layout": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datashader.layout.random_layout",
    "datashader.tests.test_layout.edges",
    "datashader.tests.test_layout.nodes_without_positions",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.test_renamed_columns": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bundle",
    "datashader.bundling.directly_connect_edges",
    "datashader.bundling.hammer_bundle",
    "datashader.layout.circular_layout",
    "datashader.layout.forceatlas2_layout",
    "datashader.layout.random_layout",
    "datashader.tests.test_layout.edges",
    "datashader.tests.test_layout.nodes",
    "datashader.tests.test_layout.pytest",
    "datashader.tests.test_layout.weighted_edges",
    "layout"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.test_uniform_circular_layout": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datashader.layout.circular_layout",
    "datashader.tests.test_layout.edges",
    "datashader.tests.test_layout.nodes_without_positions",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_layout.weighted_edges": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datashader.tests.test_layout.pytest",
    "numpy.arange",
    "numpy.int64",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros": {
  "data": {},
  "type": "module"
 },
 "datashader.tests.test_macros.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_macros.expand_varargs": {
  "data": {
   "shadows": "datashader.macros.expand_varargs"
  },
  "type": "import"
 },
 "datashader.tests.test_macros.function_no_vararg": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "datashader.tests.test_macros.function_no_vararg_numba": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.function_with_unsupported_vararg_use": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datashader.tests.test_macros.function_with_vararg",
    "print"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.function_with_vararg": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "datashader.tests.test_macros.function_no_vararg"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.function_with_vararg_call_numba": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datashader.tests.test_macros.function_no_vararg_numba"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.get_args": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datashader.tests.test_macros.inspect",
    "datashader.tests.test_macros.warnings"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datashader.tests.test_macros.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "datashader.tests.test_macros.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_macros.test_expand_varargs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datashader.macros.expand_varargs",
    "datashader.tests.test_macros.function_with_vararg",
    "datashader.tests.test_macros.get_args",
    "function_with_vararg_expanded"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.test_invalid_expand_number": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "datashader.macros.expand_varargs",
    "datashader.tests.test_macros.function_no_vararg",
    "datashader.tests.test_macros.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.test_no_varargs_error": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "datashader.macros.expand_varargs",
    "datashader.tests.test_macros.function_no_vararg",
    "datashader.tests.test_macros.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.test_numba_jit_expanded_function": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "datashader.macros.expand_varargs",
    "datashader.tests.test_macros.function_with_vararg_call_numba",
    "jit_fn",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.test_unsupported_vararg_use": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "datashader.macros.expand_varargs",
    "datashader.tests.test_macros.function_with_unsupported_vararg_use",
    "datashader.tests.test_macros.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_macros.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "collections.OrderedDict",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.cudf_DataFrame",
    "datashader.tests.test_pandas.cupy",
    "datashader.tests.test_pandas.df_cuda",
    "datashader.tests.test_pandas.df_pd",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.line_autorange_params",
    "datashader.tests.test_pandas.line_manual_range_params",
    "datashader.tests.test_pandas.os",
    "datashader.tests.test_pandas.pd_DataFrame",
    "datashader.tests.test_pandas.test_gpu",
    "dict",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.array",
    "spatialpandas",
    "spatialpandas.geometry.LineDtype"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_pandas.DataFrames": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.LineDtype": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.RaggedDtype": {
  "data": {
   "shadows": "datashader.datatypes.RaggedDtype"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.assert_eq_ndarray": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.cupy",
    "isinstance",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.assert_eq_xr": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.cupy",
    "isinstance",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.axis": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.c": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.c_logx": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.c_logxy": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.c_logy": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.coords": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.cudf": {
  "data": {
   "shadows": "cudf"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.cudf_DataFrame": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.cudf",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.df_cuda": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.df_pd": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.dfs": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.dfs_pd": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.dims": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.floats": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.spacing"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.lincoords": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.line_autorange_params": {
  "data": {
   "lineno": 883
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.line_manual_range_params": {
  "data": {
   "lineno": 786
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.pd_DataFrame": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "spatialpandas.GeoDataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_pandas.sp": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.test_any": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datashader.any",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_area_to_line_autorange": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.datatypes.RaggedDtype",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.cudf_DataFrame",
    "datashader.tests.test_pandas.pytest",
    "dict",
    "getattr",
    "isinstance",
    "numpy.array",
    "pandas.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_area_to_line_autorange_gap": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_area_to_zero_autorange": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.datatypes.RaggedDtype",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.cudf_DataFrame",
    "datashader.tests.test_pandas.pytest",
    "dict",
    "getattr",
    "isinstance",
    "numpy.array",
    "pandas.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_area_to_zero_autorange_gap": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.datatypes.RaggedDtype",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.cudf_DataFrame",
    "datashader.tests.test_pandas.pytest",
    "dict",
    "getattr",
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_area_to_zero_fixedrange": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.datatypes.RaggedDtype",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.cudf_DataFrame",
    "datashader.tests.test_pandas.pytest",
    "dict",
    "getattr",
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_auto_range_line": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.lincoords",
    "numpy.array",
    "pandas.DataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_auto_range_points": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_ndarray",
    "datashader.tests.test_pandas.pytest",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.fill_diagonal",
    "numpy.zeros",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_bug_570": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.count",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.where",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_closed_ring_line": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "spatialpandas",
    "spatialpandas.GeoDataFrame",
    "spatialpandas.GeoSeries",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_count": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_count_cat": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datashader.count_cat",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_gpu": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datashader.tests.test_pandas.test_gpu_dependencies": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.test_gpu"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_line": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.lincoords",
    "numpy.array",
    "pandas.DataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_line_agg_sum_axis1_none_constant": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.sum",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_line_autorange": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.datatypes.RaggedDtype",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.cudf_DataFrame",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.line_autorange_params",
    "datashader.tests.test_pandas.pytest",
    "getattr",
    "isinstance",
    "numpy.array",
    "spatialpandas",
    "spatialpandas.geometry.LineDtype",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_line_autorange_axis1_ragged": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.lincoords",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_line_autorange_axis1_x_constant": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_line_manual_range": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.datatypes.RaggedDtype",
    "datashader.tests.test_pandas.DataFrames",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.cudf",
    "datashader.tests.test_pandas.cudf_DataFrame",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.line_manual_range_params",
    "datashader.tests.test_pandas.pytest",
    "getattr",
    "isinstance",
    "numpy.array",
    "spatialpandas",
    "spatialpandas.geometry.LineDtype",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_lines_on_edge": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "dict",
    "numpy.array",
    "pandas.DataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_log_axis_line": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "datashader.core.LinearAxis",
    "datashader.core.LogAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.c_logx",
    "datashader.tests.test_pandas.c_logxy",
    "datashader.tests.test_pandas.c_logy",
    "datashader.tests.test_pandas.dfs_pd",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_log_axis_points": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "datashader.core.LinearAxis",
    "datashader.core.LogAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.c_logx",
    "datashader.tests.test_pandas.c_logxy",
    "datashader.tests.test_pandas.c_logy",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_max": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "datashader.max",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.values",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_mean": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "datashader.mean",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.values",
    "numpy.nanmean",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_min": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "datashader.min",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.values",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_multiple_aggregates": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datashader.count",
    "datashader.mean",
    "datashader.sum",
    "datashader.summary",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.values",
    "f",
    "numpy.array",
    "numpy.nanmean",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_points_geometry_multipoint": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "spatialpandas",
    "spatialpandas.GeoDataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_points_geometry_point": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "datashader.tests.test_pandas.lincoords",
    "datashader.tests.test_pandas.pytest",
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "spatialpandas",
    "spatialpandas.GeoDataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_points_on_edge": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "dict",
    "numpy.array",
    "pandas.DataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_std": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "datashader.std",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.df_pd",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.values",
    "numpy.nanstd",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_subpixel_line_start": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.axis",
    "dict",
    "numpy.array",
    "pandas.DataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_sum": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.dfs",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.values",
    "numpy.nansum",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_trimesh_agg_api": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.mean",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_trimesh_interp": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "datashader.Canvas",
    "numpy.array",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_trimesh_mesharg": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.utils.mesh",
    "numpy.array",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_trimesh_no_double_edge": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "datashader.Canvas",
    "numpy.array",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_trimesh_simplex_weights": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "datashader.Canvas",
    "numpy.array",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_trimesh_vertex_weights": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "datashader.Canvas",
    "numpy.array",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_trimesh_winding_detect": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "datashader.Canvas",
    "numpy.array",
    "numpy.flipud",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_uniform_diagonal_points": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "abs",
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_pandas.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "pandas.DataFrame",
    "sum"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_uniform_points": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_ndarray",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.test_var": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_pandas.c",
    "datashader.tests.test_pandas.coords",
    "datashader.tests.test_pandas.df_pd",
    "datashader.tests.test_pandas.dims",
    "datashader.tests.test_pandas.pytest",
    "datashader.tests.test_pandas.values",
    "datashader.var",
    "numpy.nanvar",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.values": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.cudf",
    "isinstance",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pandas.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_pipeline": {
  "data": {
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_pipeline.df",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_pipeline.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_pipeline.cvs": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datashader.tests.test_pipeline.df": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "datashader.tests.test_pipeline.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_pipeline.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_pipeline.test_pipeline": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "color_fn",
    "datashader.Pipeline",
    "datashader.Point",
    "datashader.count",
    "datashader.sum",
    "datashader.tests.test_pipeline.cvs",
    "datashader.tests.test_pipeline.df",
    "datashader.transfer_functions.shade",
    "pipeline",
    "pipeline.color_fn",
    "pipeline.transform_fn",
    "transform_fn"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_pipeline.tf": {
  "data": {
   "shadows": "datashader.transfer_functions"
  },
  "type": "import"
 },
 "datashader.tests.test_polygons": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader.tests.test_polygons.dask_GeoDataFrame",
    "spatialpandas.GeoDataFrame",
    "spatialpandas.geometry.MultiPolygonArray"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_polygons.DataFrames": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datashader.tests.test_polygons.GeoDataFrame": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datashader.tests.test_polygons.MultiPolygonArray": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datashader.tests.test_polygons.assert_eq_xr": {
  "data": {
   "shadows": "datashader.tests.test_pandas.assert_eq_xr"
  },
  "type": "import"
 },
 "datashader.tests.test_polygons.dask_GeoDataFrame": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "spatialpandas.GeoDataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_polygons.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "datashader.tests.test_polygons.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_polygons.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_polygons.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_polygons.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_polygons.spatialpandas": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.tests.test_polygons.test_multiple_polygons_auto_range": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_polygons.DataFrames",
    "datashader.tests.test_polygons.pytest",
    "datashader.tests.test_polygons.spatialpandas",
    "numpy.array",
    "pandas.Series",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_polygons.test_multipolygon_manual_range": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_polygons.DataFrames",
    "datashader.tests.test_polygons.pytest",
    "datashader.tests.test_polygons.spatialpandas",
    "numpy.array",
    "pandas.Series",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_polygons.test_multipolygon_subpixel_horizontal": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_polygons.DataFrames",
    "datashader.tests.test_polygons.pytest",
    "datashader.tests.test_polygons.spatialpandas",
    "numpy.array",
    "numpy.int32",
    "spatialpandas.GeoDataFrame",
    "spatialpandas.geometry.MultiPolygonArray",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_polygons.test_multipolygon_subpixel_vertical": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_polygons.DataFrames",
    "datashader.tests.test_polygons.pytest",
    "datashader.tests.test_polygons.spatialpandas",
    "numpy.array",
    "numpy.int32",
    "spatialpandas.GeoDataFrame",
    "spatialpandas.geometry.MultiPolygonArray",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_polygons.test_no_overlap": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.count",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_polygons.DataFrames",
    "datashader.tests.test_polygons.pytest",
    "datashader.tests.test_polygons.spatialpandas",
    "numpy.array",
    "pandas.Series",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_polygons.test_no_overlap_agg": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "DataFrame",
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_polygons.DataFrames",
    "datashader.tests.test_polygons.pytest",
    "datashader.tests.test_polygons.spatialpandas",
    "numpy.array",
    "pandas.Series",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_polygons.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity": {
  "data": {
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_proximity.cvs",
    "datashader.tests.test_proximity.df",
    "datashader.tests.test_proximity.height",
    "datashader.tests.test_proximity.nonzeros_raster",
    "datashader.tests.test_proximity.raster",
    "datashader.tests.test_proximity.raster_image",
    "datashader.tests.test_proximity.width",
    "numpy.count_nonzero",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_proximity.cvs": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datashader.tests.test_proximity.df": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datashader.tests.test_proximity.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity.great_circle_distance": {
  "data": {
   "shadows": "datashader.spatial.great_circle_distance"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity.height": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.tests.test_proximity.nonzeros_raster": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datashader.tests.test_proximity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity.proximity": {
  "data": {
   "shadows": "datashader.spatial.proximity"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity.raster": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datashader.tests.test_proximity.raster_image": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datashader.tests.test_proximity.test_greate_circle_invalid_x_coords": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.great_circle_distance",
    "datashader.tests.test_proximity.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_proximity.test_proximity_default": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datashader.spatial.proximity",
    "datashader.tests.test_proximity.height",
    "datashader.tests.test_proximity.nonzeros_raster",
    "datashader.tests.test_proximity.pytest",
    "datashader.tests.test_proximity.raster",
    "datashader.tests.test_proximity.width",
    "isinstance",
    "numpy.float64",
    "numpy.ndarray",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_proximity.test_proximity_distance_metric": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datashader.spatial.proximity",
    "datashader.tests.test_proximity.height",
    "datashader.tests.test_proximity.pytest",
    "datashader.tests.test_proximity.raster",
    "datashader.tests.test_proximity.width",
    "isinstance",
    "numpy.float64",
    "numpy.ndarray",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_proximity.test_proximity_invalid_y_coords": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.great_circle_distance",
    "datashader.tests.test_proximity.pytest"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_proximity.test_proximity_manhattan": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "datashader.spatial.proximity",
    "datashader.tests.test_proximity.height",
    "datashader.tests.test_proximity.pytest",
    "datashader.tests.test_proximity.raster",
    "datashader.tests.test_proximity.width",
    "isinstance",
    "numpy.float64",
    "numpy.ndarray",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_proximity.test_proximity_target_value": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datashader.spatial.proximity",
    "datashader.tests.test_proximity.height",
    "datashader.tests.test_proximity.pytest",
    "datashader.tests.test_proximity.raster",
    "datashader.tests.test_proximity.width",
    "isinstance",
    "numpy.float64",
    "numpy.ndarray",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_proximity.width": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.tests.test_proximity.xa": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_proximity.zeros_raster": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datashader.tests.test_quadmesh": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.cupy",
    "numpy"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_quadmesh.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.tests.test_quadmesh.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_quadmesh.array_modules": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.tests.test_quadmesh.assert_eq_xr": {
  "data": {
   "shadows": "datashader.tests.test_pandas.assert_eq_xr"
  },
  "type": "import"
 },
 "datashader.tests.test_quadmesh.cupy": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datashader.tests.test_quadmesh.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_quadmesh.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "datashader.tests.test_quadmesh.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_quadmesh.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_quadmesh.test_curve_quadmesh_autorange": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.test_curve_quadmesh_manual_range": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.test_curve_quadmesh_manual_range_subpixel": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.test_curve_quadmesh_rect_autorange": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.test_rect_quadmesh_autorange": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.test_rect_quadmesh_autorange_reversed": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.test_rect_quadmesh_manual_range": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.linspace",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.test_subpixel_quads_represented": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.sum",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_quadmesh.array_modules",
    "datashader.tests.test_quadmesh.pytest",
    "numpy.linspace",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_quadmesh.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_raster": {
  "data": {
   "symbols_in_volume": [
    "datashader.tests.test_raster.BASE_PATH",
    "datashader.tests.test_raster.DATA_PATH",
    "datashader.tests.test_raster.pytest",
    "datashader.tests.test_raster.rasterio",
    "os.path.abspath",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_raster.BASE_PATH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datashader.tests.test_raster.DATA_PATH": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datashader.tests.test_raster.TEST_RASTER_PATH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datashader.tests.test_raster.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.compute_chunksize": {
  "data": {
   "shadows": "datashader.resampling.compute_chunksize"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.cvs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.pytest",
    "datashader.utils.calc_bbox",
    "datashader.utils.calc_res",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_raster.rasterio": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "datashader.tests.test_raster.rasterio_available": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "datashader.tests.test_raster.test_calc_bbox": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.rasterio",
    "datashader.tests.test_raster.rasterio_available",
    "datashader.utils.calc_bbox",
    "datashader.utils.calc_res",
    "numpy.allclose",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_calc_res": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.rasterio",
    "datashader.tests.test_raster.rasterio_available",
    "datashader.utils.calc_res",
    "numpy.allclose",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_out_of_bounds_return_correct_size": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "datashader.Canvas",
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.rasterio_available",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_partial_extent_returns_correct_size": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.rasterio_available",
    "datashader.utils.calc_bbox",
    "datashader.utils.calc_res",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_partial_extent_with_layer_returns_correct_size": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.rasterio_available",
    "datashader.utils.calc_bbox",
    "datashader.utils.calc_res",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_aggregate_default": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.rasterio_available",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_aggregate_nearest": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.rasterio_available",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_aggregate_with_overviews": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.pytest",
    "datashader.tests.test_raster.rasterio_available",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_aggregate_without_overviews": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.pytest",
    "datashader.tests.test_raster.rasterio_available",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_both_ascending": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_both_ascending_partial_range": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_both_descending": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_both_descending_partial_range": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_distributed_downsample": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "dask.array.from_array",
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.pytest",
    "itertools.product",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.sin",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_distributed_regrid_chunksize": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "dask.array.from_array",
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.sin",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_distributed_upsample": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dask.array.from_array",
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.pytest",
    "itertools.product",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.sin",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_float_nan_value": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.NaN",
    "numpy.allclose",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_float_nan_value_padding": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.array",
    "numpy.linspace",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_integer_nan_value": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_integer_nan_value_padding": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_single_pixel_range": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_single_pixel_range_with_padding": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.NaN",
    "numpy.allclose",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_x_ascending_y_descending": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_x_ascending_y_descending_partial_range": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_x_descending_y_ascending": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_raster_x_descending_y_ascending_partial_range": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_raster.cvs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.newaxis.T",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_resample_compute_chunksize": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "dask.array.from_array",
    "datashader.resampling.compute_chunksize",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.test_resample_methods": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "datashader.tests.test_raster.TEST_RASTER_PATH",
    "datashader.tests.test_raster.cvs",
    "datashader.tests.test_raster.rasterio_available",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_raster.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial": {
  "data": {
   "symbols_in_volume": [
    "datashader.tests.test_spatial.pytest"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_spatial.Canvas": {
  "data": {
   "shadows": "datashader.Canvas"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.df": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "datashader.tests.test_spatial.pytest",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_spatial.dsp": {
  "data": {
   "shadows": "datashader.spatial.points"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_spatial.s_points_frame": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datashader.spatial.points.read_parquet",
    "datashader.spatial.points.to_parquet",
    "datashader.tests.test_spatial.df",
    "datashader.tests.test_spatial.os",
    "datashader.tests.test_spatial.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_spatial.test_aggregation_partitions": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_spatial.df",
    "datashader.tests.test_spatial.pytest",
    "datashader.tests.test_spatial.s_points_frame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_spatial.test_filesystem_protocol": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "datashader.spatial.points.SpatialPointsFrame",
    "datashader.spatial.points.read_parquet",
    "datashader.spatial.points.to_parquet",
    "datashader.tests.test_spatial.df",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_spatial.test_query_partitions": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datashader.tests.test_spatial.df",
    "datashader.tests.test_spatial.pytest",
    "datashader.tests.test_spatial.s_points_frame",
    "len",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_spatial.test_spatial_points_frame_properties": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datashader.tests.test_spatial.s_points_frame",
    "len",
    "numpy.linspace",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_spatial.test_validate_parquet_file": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "datashader.spatial.points.read_parquet",
    "datashader.tests.test_spatial.df",
    "datashader.tests.test_spatial.os",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles": {
  "data": {},
  "type": "module"
 },
 "datashader.tests.test_tiles.ImageDraw": {
  "data": {
   "shadows": "PIL.ImageDraw"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.MERCATOR_CONST": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datashader.tests.test_tiles.TOLERANCE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.tests.test_tiles._get_super_tile_min_max": {
  "data": {
   "shadows": "datashader.tiles._get_super_tile_min_max"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.assert_is_numeric": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "any",
    "float",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.calculate_zoom_level_stats": {
  "data": {
   "shadows": "datashader.tiles.calculate_zoom_level_stats"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.df": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datashader.tests.test_tiles.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.mock_load_data_func": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datashader.tests.test_tiles.df",
    "dict",
    "numpy.random.normal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.mock_post_render_func": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "PIL.ImageDraw.Draw"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.mock_rasterize_func": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_tiles.df"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.mock_shader_func": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datashader.colors.viridis",
    "datashader.transfer_functions.set_background",
    "datashader.transfer_functions.shade"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.render_tiles": {
  "data": {
   "shadows": "datashader.tiles.render_tiles"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.test_calculate_zoom_level_stats_with_fullscan_ranging_strategy": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datashader.tests.test_tiles.MERCATOR_CONST",
    "datashader.tests.test_tiles.assert_is_numeric",
    "datashader.tests.test_tiles.mock_load_data_func",
    "datashader.tests.test_tiles.mock_rasterize_func",
    "datashader.tiles.calculate_zoom_level_stats",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.test_get_super_tile_min_max": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datashader.tests.test_tiles.MERCATOR_CONST",
    "datashader.tests.test_tiles.assert_is_numeric",
    "datashader.tests.test_tiles.mock_load_data_func",
    "datashader.tests.test_tiles.mock_rasterize_func",
    "datashader.tiles._get_super_tile_min_max",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.test_render_tiles": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datashader.tests.test_tiles.mock_load_data_func",
    "datashader.tests.test_tiles.mock_post_render_func",
    "datashader.tests.test_tiles.mock_rasterize_func",
    "datashader.tests.test_tiles.mock_shader_func",
    "datashader.tiles.render_tiles",
    "dict",
    "isinstance",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_tiles.tf": {
  "data": {
   "shadows": "datashader.transfer_functions"
  },
  "type": "import"
 },
 "datashader.tests.test_tiles.viridis": {
  "data": {
   "shadows": "datashader.colors.viridis"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "collections.OrderedDict",
    "datashader.tests.test_transfer_functions.build_agg",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.coords2",
    "datashader.tests.test_transfer_functions.cupy",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.eq_hist_sol",
    "datashader.tests.test_transfer_functions.solution_lists",
    "datashader.transfer_functions.Image",
    "numpy",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_transfer_functions.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.PIL": {
  "data": {
   "shadows": "PIL"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.aggs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.arrays": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.assert_eq_xr": {
  "data": {
   "shadows": "datashader.tests.test_pandas.assert_eq_xr"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.build_agg": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "dict",
    "numpy",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.check_eq_hist_cdf_slope": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.histogram",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.polyfit"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.check_span": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_transfer_functions.float_span",
    "datashader.transfer_functions.shade",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.coords": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.coords2": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.cupy": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.dims": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.eq_hist_sol": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.float_span": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.img1": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.img2": {
  "data": {
   "lineno": 309
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.int_span": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.solution_lists": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.solutions": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datashader.tests.test_transfer_functions.test_Image_to_bytesio": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "bytes",
    "bytes.tell",
    "datashader.tests.test_transfer_functions.img1",
    "io.BytesIO",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_Image_to_pil": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.PIL",
    "datashader.tests.test_transfer_functions.img1",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_density": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "datashader.transfer_functions._density",
    "numpy.allclose",
    "numpy.full",
    "numpy.inf",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_dynspread": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.transfer_functions.Image",
    "datashader.transfer_functions.dynspread",
    "datashader.transfer_functions.spread",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_eq_hist": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.check_eq_hist_cdf_slope",
    "datashader.transfer_functions.eq_hist",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmin",
    "numpy.random.normal",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_masks": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "datashader.transfer_functions._circle_mask",
    "datashader.transfer_functions._square_mask",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_set_background": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.coords2",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.img1",
    "datashader.transfer_functions.Image",
    "datashader.transfer_functions.set_background",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.eq_hist_sol",
    "datashader.tests.test_transfer_functions.float_span",
    "datashader.tests.test_transfer_functions.int_span",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.tests.test_transfer_functions.solutions",
    "datashader.transfer_functions.shade",
    "getattr",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.where",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade_bool": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.transfer_functions.shade",
    "numpy.eye",
    "numpy.where",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade_category": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "array",
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_transfer_functions.arrays",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.transfer_functions.Image",
    "datashader.transfer_functions.shade",
    "dict",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.where",
    "xarray.DataArray",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade_cmap": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.transfer_functions.shade",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade_cmap_errors": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.transfer_functions.shade"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade_cmap_non_categorical_alpha": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.transfer_functions.shade",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade_mpl_cmap": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datashader.tests.test_pandas.assert_eq_xr",
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.transfer_functions.shade",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_shade_should_handle_zeros_array": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "datashader.transfer_functions.shade",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_span_cmap_list": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.check_span",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.tests.test_transfer_functions.solutions",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_span_cmap_mpl": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.check_span",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_span_cmap_single": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.aggs",
    "datashader.tests.test_transfer_functions.check_span",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_spread": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "ValueError",
    "datashader.tests.test_transfer_functions.coords",
    "datashader.tests.test_transfer_functions.dims",
    "datashader.tests.test_transfer_functions.pytest",
    "datashader.transfer_functions.Image",
    "datashader.transfer_functions.spread",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.test_stack": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "datashader.tests.test_transfer_functions.img1",
    "datashader.tests.test_transfer_functions.img2",
    "datashader.transfer_functions.stack",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_transfer_functions.tf": {
  "data": {
   "shadows": "datashader.transfer_functions"
  },
  "type": "import"
 },
 "datashader.tests.test_transfer_functions.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "datashader.tests.test_utils.Dispatcher": {
  "data": {
   "shadows": "datashader.utils.Dispatcher"
  },
  "type": "import"
 },
 "datashader.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_utils.dshape": {
  "data": {
   "shadows": "datashape.dshape"
  },
  "type": "import"
 },
 "datashader.tests.test_utils.isreal": {
  "data": {
   "shadows": "datashader.utils.isreal"
  },
  "type": "import"
 },
 "datashader.tests.test_utils.test_Dispatcher": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Bar",
    "datashader.utils.Dispatcher",
    "float",
    "foo",
    "int",
    "object"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_utils.test_Dispatcher.Bar": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.tests.test_utils.test_isreal": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datashader.utils.isreal",
    "datashape.dshape"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_viewshed": {
  "data": {
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.tests.test_viewshed.H",
    "datashader.tests.test_viewshed.W",
    "datashader.tests.test_viewshed.canvas",
    "datashader.tests.test_viewshed.empty_agg",
    "datashader.tests.test_viewshed.empty_df",
    "numpy.random.normal",
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_viewshed.H": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.OBS_ELEVS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.TERRAIN_ELEV_AT_VP": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.W": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.canvas": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_viewshed.empty_agg": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.empty_df": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_viewshed.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_viewshed.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_viewshed.test_viewshed": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abs",
    "check_symmetric",
    "datashader.spatial.viewshed",
    "datashader.tests.test_viewshed.H",
    "datashader.tests.test_viewshed.OBS_ELEVS",
    "datashader.tests.test_viewshed.TERRAIN_ELEV_AT_VP",
    "datashader.tests.test_viewshed.W",
    "datashader.tests.test_viewshed.empty_agg",
    "datashader.tests.test_viewshed.pytest",
    "datashader.tests.test_viewshed.xs",
    "datashader.tests.test_viewshed.ys",
    "enumerate",
    "get_matrices"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_viewshed.test_viewshed.check_symmetric": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_viewshed.test_viewshed.get_matrices": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_viewshed.test_viewshed_invalid_x_view": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.viewshed",
    "datashader.tests.test_viewshed.empty_agg",
    "datashader.tests.test_viewshed.pytest",
    "datashader.tests.test_viewshed.xs"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_viewshed.test_viewshed_invalid_y_view": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.viewshed",
    "datashader.tests.test_viewshed.empty_agg",
    "datashader.tests.test_viewshed.pytest",
    "datashader.tests.test_viewshed.ys"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_viewshed.test_viewshed_output_properties": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datashader.spatial.viewshed",
    "datashader.tests.test_viewshed.OBS_ELEVS",
    "datashader.tests.test_viewshed.empty_agg",
    "datashader.tests.test_viewshed.pytest",
    "datashader.tests.test_viewshed.xs",
    "datashader.tests.test_viewshed.ys",
    "isinstance",
    "numpy.float64",
    "numpy.ndarray",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_viewshed.viewshed": {
  "data": {
   "shadows": "datashader.spatial.viewshed"
  },
  "type": "import"
 },
 "datashader.tests.test_viewshed.xa": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_viewshed.xs": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datashader.tests.test_viewshed.ys": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray": {
  "data": {
   "symbols_in_volume": [
    "datashader.Canvas",
    "datashader.core.LinearAxis",
    "datashader.tests.test_xarray.axis",
    "datashader.tests.test_xarray.lincoords",
    "datashader.tests.test_xarray.xda",
    "datashader.tests.test_xarray.xds",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_xarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.tests.test_xarray.assert_eq": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "datashader.tests.test_xarray.axis": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.c": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.coords": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.dims": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.ds": {
  "data": {
   "shadows": "datashader"
  },
  "type": "import"
 },
 "datashader.tests.test_xarray.lincoords": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_xarray.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_xarray.test_count": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datashader.count",
    "datashader.tests.test_xarray.assert_eq",
    "datashader.tests.test_xarray.c",
    "datashader.tests.test_xarray.coords",
    "datashader.tests.test_xarray.dims",
    "datashader.tests.test_xarray.pytest",
    "datashader.tests.test_xarray.xda",
    "datashader.tests.test_xarray.xdda",
    "datashader.tests.test_xarray.xdds",
    "datashader.tests.test_xarray.xds",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_xarray.xda": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.xdda": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.xdds": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.xds": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datashader.tests.test_xarray.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_zonal": {
  "data": {
   "symbols_in_volume": [
    "datashader.tests.test_zonal.masked_values",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.values_val",
    "datashader.tests.test_zonal.zone_vals_1",
    "datashader.tests.test_zonal.zone_vals_2",
    "datashader.tests.test_zonal.zone_vals_3",
    "datashader.tests.test_zonal.zones",
    "datashader.tests.test_zonal.zones_val",
    "numpy.array",
    "numpy.inf",
    "numpy.ma.masked_invalid",
    "numpy.ma.masked_where",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "module"
 },
 "datashader.tests.test_zonal.masked_values": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.tests.test_zonal.num_zones": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.tests.test_zonal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "datashader.tests.test_zonal.test_zonal_stats_custom_stat": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "cal_double_sum",
    "cal_sum",
    "datashader.spatial.zonal_stats",
    "datashader.tests.test_zonal.pytest",
    "datashader.tests.test_zonal.unique_values",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.zone_vals_1",
    "datashader.tests.test_zonal.zone_vals_2",
    "datashader.tests.test_zonal.zone_vals_3",
    "datashader.tests.test_zonal.zones",
    "isinstance",
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.test_zonal_stats_custom_stat.cal_double_sum": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "datashader.tests.test_zonal.values"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.test_zonal_stats_default": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datashader.spatial.zonal_stats",
    "datashader.tests.test_zonal.pytest",
    "datashader.tests.test_zonal.unique_values",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.zone_maxes",
    "datashader.tests.test_zonal.zone_means",
    "datashader.tests.test_zonal.zone_mins",
    "datashader.tests.test_zonal.zone_stds",
    "datashader.tests.test_zonal.zone_vars",
    "datashader.tests.test_zonal.zones",
    "isinstance",
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.test_zonal_stats_invalid_custom_stat": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "cal_sum",
    "datashader.spatial.zonal_stats",
    "datashader.tests.test_zonal.pytest",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.zones"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.test_zonal_stats_invalid_stat_list": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.zonal_stats",
    "datashader.tests.test_zonal.pytest",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.zones"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.test_zonal_stats_invalid_values": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.zonal_stats",
    "datashader.tests.test_zonal.pytest",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.zones",
    "numpy.array",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.test_zonal_stats_invalid_zones": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.zonal_stats",
    "datashader.tests.test_zonal.pytest",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.zones",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.test_zonal_stats_mismatch_zones_values_shape": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Exception",
    "datashader.spatial.zonal_stats",
    "datashader.tests.test_zonal.pytest",
    "datashader.tests.test_zonal.values",
    "datashader.tests.test_zonal.zones",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "datashader.tests.test_zonal.unique_values": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.values": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.values_val": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.xa": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.tests.test_zonal.zonal_stats": {
  "data": {
   "shadows": "datashader.spatial.zonal_stats"
  },
  "type": "import"
 },
 "datashader.tests.test_zonal.zone_maxes": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zone_means": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zone_mins": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zone_stds": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zone_vals_1": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zone_vals_2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zone_vals_3": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zone_vars": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zones": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datashader.tests.test_zonal.zones_val": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "datashader.tf": {
  "data": {
   "shadows": "transfer_functions"
  },
  "type": "import"
 },
 "datashader.transfer_functions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader.transfer_functions._circle_mask",
    "datashader.transfer_functions._square_mask",
    "datashader.transfer_functions.eq_hist",
    "numpy.log1p",
    "numpy.nan",
    "numpy.where"
   ]
  },
  "type": "module"
 },
 "datashader.transfer_functions.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "datashader.transfer_functions.Image": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "class"
 },
 "datashader.transfer_functions.Image._repr_html_": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "base64.b64encode",
    "io.BytesIO",
    "str"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.Image._repr_png_": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "datashader.transfer_functions.Image.to_bytesio": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "format",
    "io.BytesIO"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.Image.to_pil": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "PIL.Image.fromarray",
    "datashader.transfer_functions.cupy",
    "numpy.flipud"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.Images": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.transfer_functions.Images.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.Images._repr_html_": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.Images.cols": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "datashader.transfer_functions.Iterator": {
  "data": {
   "shadows": "collections.Iterator"
  },
  "type": "import"
 },
 "datashader.transfer_functions.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datashader.transfer_functions.Sets1to3": {
  "data": {
   "shadows": "datashader.colors.Sets1to3"
  },
  "type": "import"
 },
 "datashader.transfer_functions.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datashader.transfer_functions._build_spread_kernel": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "datashader.composite.composite_op_lookup",
    "kernel",
    "toolz.memoize"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._build_spread_kernel.kernel": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "op",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._circle_mask": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._colorize": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "collections.OrderedDict",
    "datashader.colors.rgb",
    "datashader.transfer_functions.Image",
    "datashader.transfer_functions._normalize_interpolate_how",
    "datashader.transfer_functions.cupy",
    "datashader.utils.orient_array",
    "dict",
    "interp",
    "isinstance",
    "len",
    "map",
    "numpy.array",
    "numpy.dstack",
    "numpy.errstate",
    "numpy.interp",
    "numpy.isnan",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.uint32",
    "numpy.uint8",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._cpu_utils": {
  "data": {},
  "type": "module"
 },
 "datashader.transfer_functions._cpu_utils.masked_clip_2d": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._cpu_utils.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.transfer_functions._cuda_utils": {
  "data": {
   "symbols_in_volume": [
    "datashader.transfer_functions._cuda_utils.cupy",
    "isinstance",
    "numpy.result_type"
   ]
  },
  "type": "module"
 },
 "datashader.transfer_functions._cuda_utils.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "datashader.transfer_functions._cuda_utils.cuda": {
  "data": {
   "shadows": "numba.cuda"
  },
  "type": "import"
 },
 "datashader.transfer_functions._cuda_utils.cuda_args": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "math.ceil",
    "numba.cuda.get_current_device",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._cuda_utils.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "datashader.transfer_functions._cuda_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.transfer_functions._cuda_utils.interp": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datashader.transfer_functions._cuda_utils.cuda_args",
    "datashader.transfer_functions._cuda_utils.cupy",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._cuda_utils.interp2d_kernel": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "math.isnan",
    "math.nan",
    "numba.cuda.grid",
    "numba.cuda.jit"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._cuda_utils.isnan": {
  "data": {
   "shadows": "math.isnan"
  },
  "type": "import"
 },
 "datashader.transfer_functions._cuda_utils.masked_clip_2d": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datashader.transfer_functions._cuda_utils.cuda_args"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._cuda_utils.masked_clip_2d_kernel": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numba.cuda.atomic.max",
    "numba.cuda.atomic.min",
    "numba.cuda.grid",
    "numba.cuda.jit"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._cuda_utils.nan": {
  "data": {
   "shadows": "math.nan"
  },
  "type": "import"
 },
 "datashader.transfer_functions._cuda_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.transfer_functions._density": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.inf",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._interpolate": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "cmap",
    "collections.Iterator",
    "datashader.colors.rgb",
    "datashader.transfer_functions.Image",
    "datashader.transfer_functions._normalize_interpolate_how",
    "datashader.transfer_functions.cupy",
    "datashader.transfer_functions.masked_clip_2d",
    "datashader.utils.orient_array",
    "interp",
    "interpolater",
    "isinstance",
    "len",
    "list",
    "map",
    "numpy.arange",
    "numpy.array",
    "numpy.bool_",
    "numpy.dstack",
    "numpy.errstate",
    "numpy.full",
    "numpy.int8",
    "numpy.integer",
    "numpy.interp",
    "numpy.isnan",
    "numpy.issubdtype",
    "numpy.linspace",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.where",
    "numpy.zeros",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._interpolate_lookup": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "datashader.transfer_functions._mask_lookup": {
  "data": {
   "lineno": 558
  },
  "type": "constant"
 },
 "datashader.transfer_functions._normalize_interpolate_how": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "datashader.transfer_functions._interpolate_lookup"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions._square_mask": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.transfer_functions.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "datashader.transfer_functions.composite_op_lookup": {
  "data": {
   "shadows": "datashader.composite.composite_op_lookup"
  },
  "type": "import"
 },
 "datashader.transfer_functions.cupy": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datashader.transfer_functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.transfer_functions.dynspread": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ValueError",
    "datashader.transfer_functions._density",
    "datashader.transfer_functions.spread",
    "int",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.eq_hist": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "datashader.transfer_functions.cupy",
    "float",
    "int",
    "interp",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.bincount",
    "numpy.histogram",
    "numpy.integer",
    "numpy.interp",
    "numpy.issubdtype",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.nonzero",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.fromarray": {
  "data": {
   "shadows": "PIL.Image.fromarray"
  },
  "type": "import"
 },
 "datashader.transfer_functions.masked_clip_2d": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datashader.utils.ngjit",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.nb": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "datashader.transfer_functions.ngjit": {
  "data": {
   "shadows": "datashader.utils.ngjit"
  },
  "type": "import"
 },
 "datashader.transfer_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.transfer_functions.orient_array": {
  "data": {
   "shadows": "datashader.utils.orient_array"
  },
  "type": "import"
 },
 "datashader.transfer_functions.over": {
  "data": {
   "shadows": "datashader.composite.over"
  },
  "type": "import"
 },
 "datashader.transfer_functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.transfer_functions.rgb": {
  "data": {
   "shadows": "datashader.colors.rgb"
  },
  "type": "import"
 },
 "datashader.transfer_functions.set_background": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "TypeError",
    "datashader.colors.rgb",
    "datashader.composite.over",
    "datashader.transfer_functions.Image",
    "isinstance",
    "numpy.uint8",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.shade": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "cmap",
    "datashader.colors.Sets1to3",
    "datashader.transfer_functions._colorize",
    "datashader.transfer_functions._interpolate",
    "isinstance",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.spread": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datashader.transfer_functions.Image",
    "datashader.transfer_functions._build_spread_kernel",
    "int",
    "isinstance",
    "kernel",
    "numpy.ndarray",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.stack": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datashader.composite.composite_op_lookup",
    "datashader.transfer_functions.Image",
    "isinstance",
    "len",
    "numpy.errstate",
    "toolz.flip",
    "toolz.reduce",
    "type",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "datashader.transfer_functions.tz": {
  "data": {
   "shadows": "toolz"
  },
  "type": "import"
 },
 "datashader.transfer_functions.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "datashader.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datashader.datatypes.RaggedDtype",
    "numba.jit",
    "spatialpandas.geometry.GeometryDtype",
    "type"
   ]
  },
  "type": "module"
 },
 "datashader.utils.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "datashader.utils.Dispatcher": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.utils.Dispatcher.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "inspect.getmro",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.utils.Dispatcher.__init__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "datashader.utils.Dispatcher.register": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.utils.Expr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datashader.utils.Expr.__eq__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.utils.Expr.__hash__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "hash",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.utils.Expr.__ne__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "datashader.utils.Expr._hashable_inputs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.utils.GeometryDtype": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datashader.utils.RaggedDtype": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datashader.utils._dd_mesh": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "datashader.utils._pd_mesh",
    "int",
    "len",
    "max",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "datashader.utils._pd_mesh": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "numpy.cross",
    "numpy.int64",
    "numpy.prod",
    "numpy.take",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datashader.utils.calc_bbox": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "datashader.utils.calc_res": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "datashader.utils.compute_coords": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "abs",
    "float",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "datashader.utils.cudf": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datashader.utils.dataframe_from_multiple_sequences": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.tile",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "datashader.utils.datashape": {
  "data": {
   "shadows": "datashape"
  },
  "type": "import"
 },
 "datashader.utils.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "datashader.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datashader.utils.downsample_aggregate": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.concatenate",
    "numpy.nanmax",
    "numpy.nanmean",
    "numpy.nanmedian",
    "numpy.nanmin",
    "numpy.nanstd",
    "numpy.nansum",
    "numpy.nanvar",
    "range"
   ]
  },
  "type": "function"
 },
 "datashader.utils.dshape_from_dask": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "datashader.utils.datashape",
    "datashader.utils.dshape_from_pandas_helper",
    "getattr",
    "isinstance",
    "pandas.Categorical.dtype",
    "pandas.api.types.CategoricalDtype",
    "toolz.memoize",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.utils.dshape_from_pandas": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "datashader.utils.datashape",
    "datashader.utils.dshape_from_pandas_helper",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.utils.dshape_from_pandas_helper": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datashader.datatypes.RaggedDtype",
    "datashader.utils.cudf",
    "datashader.utils.datashape",
    "getattr",
    "isinstance",
    "len",
    "numpy.array",
    "pandas.Categorical.dtype",
    "pandas.api.types.CategoricalDtype",
    "spatialpandas.geometry.GeometryDtype",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "datashader.utils.dshape_from_xarray_dataset": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "datashader.utils.datashape",
    "datashader.utils.dshape_from_pandas_helper",
    "list"
   ]
  },
  "type": "function"
 },
 "datashader.utils.export_image": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "datashader.transfer_functions.set_background",
    "datashader.utils.os"
   ]
  },
  "type": "function"
 },
 "datashader.utils.get_indices": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "abs",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "datashader.utils.getmro": {
  "data": {
   "shadows": "inspect.getmro"
  },
  "type": "import"
 },
 "datashader.utils.hold": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "datashader.utils.hold._": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "datashader.utils.isreal": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datashader.utils.datashape",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.utils.isrealfloat": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datashader.utils.datashape",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datashader.utils.lnglat_to_meters": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.log",
    "numpy.pi",
    "numpy.tan",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datashader.utils.memoize": {
  "data": {
   "shadows": "toolz.memoize"
  },
  "type": "import"
 },
 "datashader.utils.mesh": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "datashader.utils._dd_mesh",
    "datashader.utils._pd_mesh",
    "isinstance",
    "len",
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "datashader.utils.nb": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "datashader.utils.ngjit": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datashader.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datashader.utils.orient_array": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "datashader.utils.calc_res",
    "isinstance",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "datashader.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datashader.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "datashader.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datashader.utils.set_background": {
  "data": {
   "shadows": "datashader.transfer_functions.set_background"
  },
  "type": "import"
 },
 "datashader.utils.summarize_aggregate_values": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.e",
    "numpy.linspace",
    "numpy.log1p",
    "numpy.logspace",
    "numpy.nanmax",
    "numpy.nanmin",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 }
}