{
 "pycomlink": {
  "data": {},
  "type": "module"
 },
 "pycomlink.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.core": {
  "data": {},
  "type": "module"
 },
 "pycomlink.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.core.comlink": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "pandas.plotting.register_matplotlib_converters"
   ]
  },
  "type": "module"
 },
 "pycomlink.core.comlink.Comlink": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.core.comlink.Comlink.__copy__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__deepcopy__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "copy.deepcopy",
    "id"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__dir__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "list",
    "pycomlink.core.comlink.Comlink"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__getattr__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "AttributeError",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "Processor",
    "_channels_list_to_dict",
    "abs",
    "list",
    "pycomlink.core.comlink.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink._repr_html_": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.append_data": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.calc_length": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "distance"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.get_center_lon_lat": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.get_coordinates": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pycomlink.core.comlink.Coords"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.get_length": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.plot_data": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "TypeError",
    "builtins.zip",
    "enumerate",
    "len",
    "matplotlib.pyplot.subplots"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.plot_line": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.plot_map": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pycomlink.core.comlink.folium"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.Coords": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycomlink.core.comlink._channels_list_to_dict": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "builtins.str",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.folium": {
  "data": {
   "shadows": "folium"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.pandas.plotting": {
  "data": {
   "shadows": "pandas.plotting"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pycomlink.core.comlink.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "pycomlink.core.comlink_channel": {
  "data": {},
  "type": "module"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__copy__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__deepcopy__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "id",
    "pycomlink.core.comlink_channel.copy"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__eq__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__getattr__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__getitem__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__getstate__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_parse_kwargs_to_dataframe",
    "pycomlink.core.comlink_channel.copy"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__len__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__setstate__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__str__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel._repr_html_": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "builtins.str"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.append_data": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.copy": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.resample": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "numpy.mean",
    "pycomlink.core.comlink_channel.copy"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel._parse_kwargs_to_dataframe": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.core.comlink_channel.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycomlink.core.comlink_channel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.core.comlink_channel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.core.comlink_channel.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "pycomlink.core.comlink_channel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.core.comlink_channel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycomlink.core.comlink_channel.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "pycomlink.io": {
  "data": {},
  "type": "module"
 },
 "pycomlink.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5": {
  "data": {
   "symbols_in_volume": [
    "float",
    "pycomlink.io.cmlh5.cml_ch_time_dict",
    "str"
   ]
  },
  "type": "module"
 },
 "pycomlink.io.cmlh5.CMLH5_VERSION": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pycomlink.io.cmlh5.Comlink": {
  "data": {
   "shadows": "pycomlink.Comlink"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.ComlinkChannel": {
  "data": {
   "shadows": "pycomlink.ComlinkChannel"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5._get_first_and_last_timestamp_in_cml_list": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._missing_attribute": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "int",
    "numpy.nan",
    "str"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_channel": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "pycomlink.ComlinkChannel",
    "pycomlink.io.cmlh5._read_cml_channel_data",
    "pycomlink.io.cmlh5._read_cml_channel_metadata"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_channel_data": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "print",
    "pycomlink.io.cmlh5.cml_ch_data_names_dict_tx_rx",
    "pycomlink.io.cmlh5.cml_ch_data_names_dict_tx_rx_min_max",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_channel_metadata": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "pycomlink.io.cmlh5.cml_ch_metadata_dict"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_metadata": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "pycomlink.io.cmlh5.cml_metadata_dict"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_one_cml": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "_read_cml_channel",
    "_read_cml_metadata",
    "list",
    "pycomlink.Comlink"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_channel_attributes": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "_missing_attribute",
    "pycomlink.io.cmlh5.cml_ch_metadata_dict",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_channel_data": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "dict",
    "isinstance",
    "list",
    "print",
    "pycomlink.io.cmlh5.cml_ch_data_names_dict_tx_rx",
    "pycomlink.io.cmlh5.cml_ch_data_names_dict_tx_rx_min_max",
    "pycomlink.io.cmlh5.cml_ch_time_dict"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_cml_attributes": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pycomlink.io.cmlh5.cml_metadata_dict"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_product": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5.cml_ch_data_names_dict_tx_rx": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pycomlink.io.cmlh5.cml_ch_data_names_dict_tx_rx_min_max": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pycomlink.io.cmlh5.cml_ch_metadata_dict": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycomlink.io.cmlh5.cml_ch_time_dict": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pycomlink.io.cmlh5.cml_metadata_dict": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pycomlink.io.cmlh5.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.read_from_cmlh5": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "_read_one_cml",
    "len",
    "print",
    "pycomlink.io.cmlh5.h5py"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5.read_from_multiple_cmlh5": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "list",
    "pandas.to_datetime",
    "pycomlink.io.cmlh5.h5py",
    "pycomlink.io.cmlh5.read_from_cmlh5"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pycomlink.io.cmlh5.write_to_cmlh5": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_get_first_and_last_timestamp_in_cml_list",
    "_write_channel_attributes",
    "_write_channel_data",
    "_write_cml_attributes",
    "_write_product",
    "builtins.zip",
    "enumerate",
    "pandas.Timedelta",
    "pandas.date_range",
    "pycomlink.io.cmlh5.CMLH5_VERSION",
    "pycomlink.io.cmlh5.h5py",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.cmlh5.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "pycomlink.io.csv": {
  "data": {},
  "type": "module"
 },
 "pycomlink.io.csv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.io.csv.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.io.csv.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pycomlink.io.csv.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "pycomlink.io.csv.write_to_wasim_input_file": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "builtins.str",
    "numpy.char.mod",
    "open",
    "pandas.DataFrame",
    "pycomlink.io.csv.pyproj"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.examples": {
  "data": {},
  "type": "module"
 },
 "pycomlink.io.examples.get_75_cmls": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "os.path.join",
    "pycomlink.io.cmlh5.read_from_cmlh5",
    "pycomlink.io.examples.get_example_data_path"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.examples.get_75_cmls_min_max": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "os.path.join",
    "pycomlink.io.cmlh5.read_from_cmlh5",
    "pycomlink.io.examples.get_example_data_path"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.examples.get_example_data_path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pycomlink.io.examples.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.examples.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycomlink.io.examples.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pycomlink.io.examples.read_cml_list": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "deprecated",
    "os.path.join",
    "pycomlink.io.cmlh5.read_from_cmlh5",
    "pycomlink.io.examples.get_example_data_path"
   ]
  },
  "type": "function"
 },
 "pycomlink.io.examples.read_from_cmlh5": {
  "data": {
   "shadows": "pycomlink.io.cmlh5.read_from_cmlh5"
  },
  "type": "import"
 },
 "pycomlink.io.examples.read_one_cml": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "os.path.join",
    "pycomlink.io.cmlh5.read_from_cmlh5",
    "pycomlink.io.examples.get_example_data_path"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.A_R_relation": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.A_R_relation.A_R_relation": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.ITU_table": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.a_b": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "f_a",
    "f_b",
    "numpy.asarray",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "a_b",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.nan",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A_min_max": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "a_b",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.log",
    "numpy.nan",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.processing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.processing.baseline": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.baseline.baseline": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.baseline.baseline._numba_baseline_constant": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "builtins.range",
    "len",
    "numba.decorators.jit",
    "numpy.NaN",
    "numpy.float64",
    "numpy.isnan",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.baseline.baseline._numba_baseline_linear": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "builtins.range",
    "len",
    "numba.decorators.jit",
    "numpy.NaN",
    "numpy.float64",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.baseline.baseline.baseline_constant": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_numba_baseline_constant",
    "numpy.float64",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.baseline.baseline.baseline_linear": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_numba_baseline_linear",
    "numpy.float64",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.baseline.baseline.jit": {
  "data": {
   "shadows": "numba.decorators.jit"
  },
  "type": "import"
 },
 "pycomlink.processing.baseline.baseline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.processing.baseline.baseline.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.processing.baseline.baseline.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "pycomlink.processing.processor": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.processor.A_R": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.processing.processor.A_R.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "cml_wrapper",
    "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A",
    "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A_min_max"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.Baseline": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.processing.processor.Baseline.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "cml_wrapper",
    "pycomlink.processing.baseline.baseline.baseline_constant",
    "pycomlink.processing.baseline.baseline.baseline_linear",
    "pycomlink.processing.wet_antenna.wet_antenna.waa_adjust_baseline"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.Processor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.processing.processor.Processor.__copy__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pycomlink.processing.processor.Processor.__deepcopy__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pycomlink.processing.processor.Processor"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.Processor.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "A_R",
    "Baseline",
    "QualityControl",
    "WetDry"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.QualityControl": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.processing.processor.QualityControl.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pass_cml_wrapper",
    "pycomlink.processing.quality_control.simple.set_to_nan_if"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.WetDry": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.processing.processor.WetDry.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cml_wrapper",
    "pycomlink.processing.wet_dry.std_dev.std_dev_classification",
    "pycomlink.processing.wet_dry.stft.stft_classification"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor._calc_A": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pycomlink.processing.processor._calc_A_min_max": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.full",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanmean",
    "numpy.rint",
    "range"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.baseline_constant": {
  "data": {
   "shadows": "pycomlink.processing.baseline.baseline.baseline_constant"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.baseline_linear": {
  "data": {
   "shadows": "pycomlink.processing.baseline.baseline.baseline_linear"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.calc_R_from_A": {
  "data": {
   "shadows": "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.calc_R_from_A_min_max": {
  "data": {
   "shadows": "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A_min_max"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.cml_wrapper": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "pycomlink.processing.processor.cml_wrapper.func_wrapper": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "AttributeError",
    "copy.deepcopy",
    "func",
    "functools.wraps",
    "list",
    "reversed",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.pass_cml_wrapper": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pycomlink.processing.processor.pass_cml_wrapper.func_wrapper": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.processor.set_to_nan_if": {
  "data": {
   "shadows": "pycomlink.processing.quality_control.simple.set_to_nan_if"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.std_dev": {
  "data": {
   "shadows": "pycomlink.processing.wet_dry.std_dev"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.stft": {
  "data": {
   "shadows": "pycomlink.processing.wet_dry.stft"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.waa_adjust_baseline": {
  "data": {
   "shadows": "pycomlink.processing.wet_antenna.wet_antenna.waa_adjust_baseline"
  },
  "type": "import"
 },
 "pycomlink.processing.processor.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pycomlink.processing.quality_control": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.quality_control.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.processing.quality_control.simple": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.quality_control.simple.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.processing.quality_control.simple.set_to_nan_if": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.quality_control.simple.set_to_nan_if.func": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pycomlink.processing.wet_antenna": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.wet_antenna.wet_antenna": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.A_R_relation": {
  "data": {
   "shadows": "pycomlink.processing.A_R_relation.A_R_relation"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_antenna.wet_antenna._numba_waa_schleiss": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "builtins.range",
    "len",
    "min",
    "numba.decorators.jit",
    "numpy.float64",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.eps_water": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.jit": {
  "data": {
   "shadows": "numba.decorators.jit"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.scipy.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.waa_adjust_baseline": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.Series",
    "pycomlink.processing.wet_antenna.wet_antenna._numba_waa_schleiss",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "eps_water",
    "numpy.abs",
    "numpy.asanyarray",
    "numpy.complex",
    "numpy.exp",
    "numpy.log10",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008_from_A_obs": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "mapping",
    "numpy.complex",
    "numpy.logspace",
    "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A",
    "waa_leijnse_2008"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_dry": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.wet_dry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.std_dev": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.wet_dry.std_dev.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.std_dev.rolling_std_dev": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.NaN",
    "numpy.concatenate",
    "numpy.std",
    "numpy.zeros",
    "pycomlink.processing.wet_dry.std_dev.rolling_window"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_dry.std_dev.rolling_window": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_dry.std_dev.std_dev_classification": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.isnan",
    "numpy.zeros_like",
    "rolling_std_dev"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_dry.stft": {
  "data": {},
  "type": "module"
 },
 "pycomlink.processing.wet_dry.stft.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.stft.find_lowest_std_dev_period": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "matplotlib.mlab.find",
    "numpy.nanmin",
    "pycomlink.processing.wet_dry.std_dev.rolling_std_dev"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_dry.stft.mlab": {
  "data": {
   "shadows": "matplotlib.mlab"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.stft.nans": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.asarray",
    "numpy.empty",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pycomlink.processing.wet_dry.stft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.stft.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.stft.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.stft.rolling_std_dev": {
  "data": {
   "shadows": "pycomlink.processing.wet_dry.std_dev.rolling_std_dev"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.stft.specg": {
  "data": {
   "shadows": "matplotlib.mlab.specgram"
  },
  "type": "import"
 },
 "pycomlink.processing.wet_dry.stft.stft_classification": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "builtins.range",
    "find_lowest_std_dev_period",
    "len",
    "matplotlib.mlab.specgram",
    "nans",
    "numpy.append",
    "numpy.array",
    "numpy.bool",
    "numpy.concatenate",
    "numpy.floor",
    "numpy.hamming",
    "numpy.isnan",
    "numpy.mean",
    "numpy.nanmean",
    "numpy.where",
    "numpy.zeros_like",
    "print"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial": {
  "data": {},
  "type": "module"
 },
 "pycomlink.spatial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.spatial.coverage": {
  "data": {},
  "type": "module"
 },
 "pycomlink.spatial.coverage.calc_coverage_mask": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "builtins.zip",
    "numpy.array",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "shapely.ops.cascaded_union",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.coverage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.spatial.coverage.ops": {
  "data": {
   "shadows": "shapely.ops"
  },
  "type": "import"
 },
 "pycomlink.spatial.coverage.sh": {
  "data": {
   "shadows": "shapely"
  },
  "type": "import"
 },
 "pycomlink.spatial.coverage.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "pycomlink.spatial.coverage.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "pycomlink.spatial.helper": {
  "data": {},
  "type": "module"
 },
 "pycomlink.spatial.helper.asin": {
  "data": {
   "shadows": "math.asin"
  },
  "type": "import"
 },
 "pycomlink.spatial.helper.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "pycomlink.spatial.helper.distance": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "haversine"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.spatial.helper.haversine": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "builtins.map",
    "list",
    "math.asin",
    "math.cos",
    "math.radians",
    "math.sin",
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.helper.label_loc": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pycomlink.spatial.helper.map": {
  "data": {
   "shadows": "builtins.map"
  },
  "type": "import"
 },
 "pycomlink.spatial.helper.radians": {
  "data": {
   "shadows": "math.radians"
  },
  "type": "import"
 },
 "pycomlink.spatial.helper.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "pycomlink.spatial.helper.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pycomlink.spatial.idw": {
  "data": {},
  "type": "module"
 },
 "pycomlink.spatial.idw.Invdisttree": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.spatial.idw.Invdisttree.__call__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "_numba_idw_loop",
    "hasattr",
    "len",
    "numpy.array",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.inf",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.idw.Invdisttree.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.idw.KDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "pycomlink.spatial.idw._numba_idw_loop": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "builtins.range",
    "len",
    "numba.decorators.jit",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.idw.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.spatial.idw.jit": {
  "data": {
   "shadows": "numba.decorators.jit"
  },
  "type": "import"
 },
 "pycomlink.spatial.idw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.spatial.idw.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "pycomlink.spatial.idw.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol": {
  "data": {},
  "type": "module"
 },
 "pycomlink.spatial.interpol.Interpolator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "builtins.object",
    "deprecated"
   ]
  },
  "type": "class"
 },
 "pycomlink.spatial.interpol.Interpolator.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.meshgrid",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpol.Interpolator._fields_to_dataset": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.moveaxis",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpol.Interpolator.idw_kdtree": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Invdisttree",
    "idw_tree",
    "len",
    "numpy.array",
    "numpy.reshape",
    "pandas.isnull",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpol.Interpolator.kriging": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "numpy.reshape",
    "numpy.zeros_like",
    "pandas.isnull",
    "print",
    "pykrige.ok.OrdinaryKriging",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpol.OrdinaryKriging": {
  "data": {
   "shadows": "pykrige.ok.OrdinaryKriging"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpol.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator": {
  "data": {},
  "type": "module"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "_parse_grid_kwargs",
    "get_dataframe_for_cml_variable",
    "get_lon_lat_list_from_cml_list",
    "numpy.mean",
    "pycomlink.spatial.interpolator.IdwKdtreeInterpolator"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator._fields_to_dataset": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator.interpolate_for_i": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.zeros_like",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator.loop_over_time": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "builtins.range",
    "len",
    "list",
    "numpy.nan",
    "numpy.ones_like",
    "print",
    "pycomlink.spatial.interpolator.scipy",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.IdwKdtreeInterpolator": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pycomlink.spatial.interpolator.PointsToGridInterpolator"
   ]
  },
  "type": "class"
 },
 "pycomlink.spatial.interpolator.IdwKdtreeInterpolator.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.IdwKdtreeInterpolator._interpol_func": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Invdisttree",
    "builtins.zip",
    "idw",
    "list",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.OrdinaryKriging": {
  "data": {
   "shadows": "pykrige.OrdinaryKriging"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pycomlink.spatial.interpolator.PointsToGridInterpolator"
   ]
  },
  "type": "class"
 },
 "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator.__init__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator._interpol_func": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pykrige.OrdinaryKriging"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "builtins.object",
    "future.utils.with_metaclass",
    "pycomlink.spatial.interpolator.abc"
   ]
  },
  "type": "class"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator.__call__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_parse_grid_kwargs",
    "len",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pycomlink.spatial.interpolator.abc"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator._interpol_func": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pycomlink.spatial.interpolator.abc"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator._parse_grid_kwargs": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min",
    "numpy.arange",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.get_dataframe_for_cml_variable": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "aggregate_df_onto_DatetimeIndex",
    "numpy.mean",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.get_lon_lat_list_from_cml_list": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pycomlink.spatial.interpolator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.with_metaclass": {
  "data": {
   "shadows": "future.utils.with_metaclass"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pycomlink.spatial.interpolator.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "pycomlink.tests": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.test_cmlh5": {
  "data": {
   "symbols_in_volume": [
    "pycomlink.io.examples.get_75_cmls",
    "pycomlink.io.examples.get_75_cmls_min_max"
   ]
  },
  "type": "module"
 },
 "pycomlink.tests.test_cmlh5.TemporaryDirectory": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_cmlh5.TemporaryDirectory.__enter__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pycomlink.tests.test_cmlh5.tempfile"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TemporaryDirectory.__exit__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pycomlink.tests.test_cmlh5.shutil"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pycomlink.tests.test_cmlh5.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pycomlink.tests.test_cmlh5.cml_list_instantaneous"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.testWithMultiFilesTwoCmls": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "glob.glob",
    "len",
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.io.cmlh5.read_from_multiple_cmlh5",
    "pycomlink.io.write_to_cmlh5",
    "pycomlink.tests.test_cmlh5.TemporaryDirectory",
    "pycomlink.tests.test_cmlh5.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.testWithOneFileOneCml": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.io.read_from_cmlh5",
    "pycomlink.io.write_to_cmlh5",
    "pycomlink.tests.test_cmlh5.TemporaryDirectory",
    "pycomlink.tests.test_cmlh5.os"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.testWithOneFileThreeCmls": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.io.read_from_cmlh5",
    "pycomlink.io.write_to_cmlh5",
    "pycomlink.tests.test_cmlh5.TemporaryDirectory",
    "pycomlink.tests.test_cmlh5.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5MinMax": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5MinMax.setUp": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pycomlink.tests.test_cmlh5.cml_list_min_max"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.cml_list_instantaneous": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pycomlink.tests.test_cmlh5.cml_list_min_max": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycomlink.tests.test_cmlh5.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pycomlink.tests.test_cmlh5.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycomlink.tests.test_cmlh5.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.tests.test_cmlh5.pycml": {
  "data": {
   "shadows": "pycomlink"
  },
  "type": "import"
 },
 "pycomlink.tests.test_cmlh5.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pycomlink.tests.test_cmlh5.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pycomlink.tests.test_cmlh5.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink": {
  "data": {
   "symbols_in_volume": [
    "builtins.str",
    "len",
    "list",
    "numpy.cos",
    "numpy.linspace",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.date_range",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink.df",
    "pycomlink.tests.test_comlink.f",
    "pycomlink.tests.test_comlink.rx_list",
    "pycomlink.tests.test_comlink.t_date_range",
    "pycomlink.tests.test_comlink.t_list",
    "pycomlink.tests.test_comlink.tx_list"
   ]
  },
  "type": "module"
 },
 "pycomlink.tests.test_comlink.Comlink": {
  "data": {
   "shadows": "pycomlink.core.Comlink"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.ComlinkChannel": {
  "data": {
   "shadows": "pycomlink.core.ComlinkChannel"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.TestComlinkChannelAppendData": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink.TestComlinkChannelAppendData.test_append_no_kwargs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "assert_comlink_equal",
    "generate_standard_cml",
    "pycomlink.tests.test_comlink.cml_ch"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink.TestComlinkChannelAppendData.test_append_wrong_cml": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "generate_standard_cml"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink.TestComlinkCopy": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink.TestComlinkCopy.test_copy": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "copy.deepcopy",
    "generate_standard_cml",
    "list",
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.core.Comlink",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink.TestComlinkInit": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink.TestComlinkInit.testWithOneComlinkChannel": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "generate_standard_cml",
    "numpy.testing.assert_almost_equal",
    "pycomlink.tests.test_comlink.f",
    "pycomlink.tests.test_comlink.rx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink.assert_comlink_channel_equal": {
  "data": {
   "shadows": "pycomlink.tests.test_comlink_channel.assert_comlink_channel_equal"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.assert_comlink_equal": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink_channel.assert_comlink_channel_equal"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink.cml_ch": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.cml_ch2": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.df": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.f": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.generate_standard_cml": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pycomlink.core.Comlink",
    "pycomlink.tests.test_comlink.cml_ch"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.rx_list": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink.t_date_range": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.t_list": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.tx_list": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink_channel": {
  "data": {
   "symbols_in_volume": [
    "builtins.str",
    "len",
    "list",
    "numpy.cos",
    "numpy.linspace",
    "numpy.sin",
    "pandas.date_range",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.t_list"
   ]
  },
  "type": "module"
 },
 "pycomlink.tests.test_comlink_channel.ComlinkChannel": {
  "data": {
   "shadows": "pycomlink.core.ComlinkChannel"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink_channel.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_max_age": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_max_length": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_no_kwargs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "assert_comlink_channel_equal",
    "len",
    "pandas.DataFrame",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_wrong_cml_ch": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAttributes": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink_channel.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAttributes.test_len": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelCopy": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink_channel.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelCopy.test_copy": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelCopy.test_deepcopy": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink_channel.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit.test_kwargs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_list",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit.test_with_DataFrame_rx_and_tx": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_almost_equal",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit.test_with_list_rx_tx_data": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_list",
    "pycomlink.tests.test_comlink_channel.tx_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelTypeAfterManipulation": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pycomlink.tests.test_comlink_channel.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelTypeAfterManipulation.test_index_slicing": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelTypeAfterManipulation.test_resampling": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "assert_comlink_channel_equal",
    "numpy.mean",
    "pandas.DataFrame",
    "pycomlink.core.ComlinkChannel",
    "pycomlink.tests.test_comlink_channel.f",
    "pycomlink.tests.test_comlink_channel.rx_list",
    "pycomlink.tests.test_comlink_channel.t_date_range",
    "pycomlink.tests.test_comlink_channel.tx_list",
    "type"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.assert_comlink_channel_equal": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.tests.test_comlink_channel.f"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink_channel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink_channel.f": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink_channel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink_channel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink_channel.rx2_list": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink_channel.rx_list": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink_channel.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "pycomlink.tests.test_comlink_channel.t_date_range": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink_channel.t_list": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink_channel.tx2_list": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink_channel.tx_list": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycomlink.tests.test_comlink_channel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_interpolator": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pycomlink.tests.test_interpolator.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator.test_default_idw": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "pycomlink.spatial.interpolator.ComlinkGridInterpolator",
    "pycomlink.spatial.interpolator.IdwKdtreeInterpolator",
    "pycomlink.tests.utils.load_processed_cml_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator.test_default_idw_aggregated_to_new_index": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.testing.assert_array_almost_equal",
    "pandas.to_datetime",
    "pycomlink.spatial.interpolator.ComlinkGridInterpolator",
    "pycomlink.spatial.interpolator.IdwKdtreeInterpolator",
    "pycomlink.tests.utils.load_processed_cml_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator.test_default_kriging": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "pycomlink.spatial.interpolator.ComlinkGridInterpolator",
    "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator",
    "pycomlink.tests.utils.load_processed_cml_list"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestGetDataFrameForCmlVariable": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pycomlink.tests.test_interpolator.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestGetDataFrameForCmlVariable.test_cml_id_order": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pycomlink.spatial.interpolator.get_dataframe_for_cml_variable",
    "pycomlink.tests.test_interpolator.copy",
    "pycomlink.tests.utils.load_processed_cml_list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestIdwKdtreeInterpolator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pycomlink.tests.test_interpolator.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestIdwKdtreeInterpolator.test_with_nans": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestIdwKdtreeInterpolator.test_without_nans": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestOrdiniaryKrigingInterpolator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pycomlink.tests.test_interpolator.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestOrdiniaryKrigingInterpolator.test_with_nans": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestOrdiniaryKrigingInterpolator.test_without_nans": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_interpolator.load_processed_cml_list": {
  "data": {
   "shadows": "pycomlink.tests.utils.load_processed_cml_list"
  },
  "type": "import"
 },
 "pycomlink.tests.test_interpolator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_interpolator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.tests.test_interpolator.pycml": {
  "data": {
   "shadows": "pycomlink"
  },
  "type": "import"
 },
 "pycomlink.tests.test_interpolator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_processor": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.test_processor.TestWetDryStdDev": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pycomlink.tests.test_processor.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_processor.TestWetDryStdDev.test_processing_for_selected_time_period": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pycomlink.tests.utils.load_and_clean_example_cml"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_processor.TestWetDryStdDev.test_standrad_processing": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A",
    "pycomlink.tests.utils.load_and_clean_example_cml"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_processor.load_and_clean_example_cml": {
  "data": {
   "shadows": "pycomlink.tests.utils.load_and_clean_example_cml"
  },
  "type": "import"
 },
 "pycomlink.tests.test_processor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_processor.pycml": {
  "data": {
   "shadows": "pycomlink"
  },
  "type": "import"
 },
 "pycomlink.tests.test_processor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.test_stats.TestWetDryandRainErrorfunctions": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pycomlink.tests.test_stats.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_stats.TestWetDryandRainErrorfunctions.test_RainError_with_simple_arrays": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "RainError_reference",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_almost_equal",
    "pycomlink.tests.test_stats.collections",
    "pycomlink.validation.stats.calc_rain_error_performance_metrics"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_stats.TestWetDryandRainErrorfunctions.test_WetDryError_with_simple_arrays": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "WetDryError_reference",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal",
    "pycomlink.tests.test_stats.collections",
    "pycomlink.validation.stats.calc_wet_dry_performance_metrics"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_stats.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pycomlink.tests.test_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_stats.pycml": {
  "data": {
   "shadows": "pycomlink"
  },
  "type": "import"
 },
 "pycomlink.tests.test_stats.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_util": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.test_util.TestAggregateDfToNewIndex": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pycomlink.tests.test_util.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_util.TestAggregateDfToNewIndex.test_short_new_hourly_index_left_edge": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pycomlink.tests.test_util.t_str_list",
    "pycomlink.tests.utils.load_processed_cml_list",
    "pycomlink.util.temporal.aggregate_df_onto_DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_util.load_processed_cml_list": {
  "data": {
   "shadows": "pycomlink.tests.utils.load_processed_cml_list"
  },
  "type": "import"
 },
 "pycomlink.tests.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_util.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.tests.test_util.pycml": {
  "data": {
   "shadows": "pycomlink"
  },
  "type": "import"
 },
 "pycomlink.tests.test_util.t_str_list": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pycomlink.tests.test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_validator": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.test_validator.TestIntersectWeights": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pycomlink.tests.test_validator.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_validator.TestIntersectWeights.test_with_simple_grid": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.meshgrid",
    "numpy.testing.assert_array_almost_equal",
    "pycomlink.validation.validator.calc_intersect_weights"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_validator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_validator.pycml": {
  "data": {
   "shadows": "pycomlink"
  },
  "type": "import"
 },
 "pycomlink.tests.test_validator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_wet_antenna": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.test_wet_antenna.TestEpswater": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pycomlink.tests.test_wet_antenna.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_wet_antenna.TestEpswater.test_with_f_array": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pycomlink.processing.wet_antenna.wet_antenna.eps_water"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pycomlink.tests.test_wet_antenna.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008.test_with_R_array": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.logspace",
    "numpy.testing.assert_almost_equal",
    "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008FromAobs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pycomlink.tests.test_wet_antenna.unittest"
   ]
  },
  "type": "class"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008FromAobs.test_with_R_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008_from_A_obs"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.test_wet_antenna.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pycomlink.tests.test_wet_antenna.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.tests.test_wet_antenna.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pycomlink.tests.test_wet_antenna.wet_antenna": {
  "data": {
   "shadows": "pycomlink.processing.wet_antenna.wet_antenna"
  },
  "type": "import"
 },
 "pycomlink.tests.utils": {
  "data": {},
  "type": "module"
 },
 "pycomlink.tests.utils.get_test_data_path": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pycomlink.tests.utils.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.utils.load_and_clean_example_cml": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pycomlink.io.examples.read_one_cml"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.utils.load_processed_cml_list": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pycomlink.io.read_from_cmlh5",
    "pycomlink.tests.utils.get_test_data_path"
   ]
  },
  "type": "function"
 },
 "pycomlink.tests.utils.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycomlink.tests.utils.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pycomlink.tests.utils.pycml": {
  "data": {
   "shadows": "pycomlink"
  },
  "type": "import"
 },
 "pycomlink.util": {
  "data": {},
  "type": "module"
 },
 "pycomlink.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.util.maintenance": {
  "data": {},
  "type": "module"
 },
 "pycomlink.util.maintenance.DeprecatedWarning": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pycomlink.util.maintenance.deprecated": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "pycomlink.util.maintenance.deprecated.decorator": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pycomlink.util.maintenance.deprecated.decorator.wrapper": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "func",
    "pycomlink.util.maintenance.DeprecatedWarning",
    "pycomlink.util.maintenance.functools",
    "pycomlink.util.maintenance.inspect",
    "pycomlink.util.maintenance.warnings"
   ]
  },
  "type": "function"
 },
 "pycomlink.util.maintenance.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pycomlink.util.maintenance.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pycomlink.util.maintenance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pycomlink.util.temporal": {
  "data": {},
  "type": "module"
 },
 "pycomlink.util.temporal.aggregate_df_onto_DatetimeIndex": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "NotImplementedError",
    "max",
    "min",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pycomlink.util.temporal.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.validation": {
  "data": {},
  "type": "module"
 },
 "pycomlink.validation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.validation.stats": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pycomlink.validation.stats.RainError": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "pycomlink.validation.stats.WetDryError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "pycomlink.validation.stats.WetError": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "pycomlink.validation.stats.calc_rain_error_performance_metrics": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.isnan",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.std",
    "pycomlink.validation.stats.RainError"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.stats.calc_wet_dry_performance_metrics": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len",
    "numpy.isnan",
    "numpy.sqrt",
    "pycomlink.validation.stats.WetDryError"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.stats.calc_wet_error_rates": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "WetError",
    "float",
    "pycomlink.util.maintenance.deprecated"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.stats.deprecated": {
  "data": {
   "shadows": "pycomlink.util.maintenance.deprecated"
  },
  "type": "import"
 },
 "pycomlink.validation.stats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.validation.stats.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pycomlink.validation.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.validation.validator": {
  "data": {},
  "type": "module"
 },
 "pycomlink.validation.validator.GridValidator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pycomlink.validation.validator.Validator"
   ]
  },
  "type": "class"
 },
 "pycomlink.validation.validator.GridValidator.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator._get_cml_intersection_weights": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "calc_intersect_weights"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator.get_time_series": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.unique",
    "numpy.where",
    "slice"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator.plot_intersections": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_calc_grid_corners_for_center_location",
    "calc_intersect_weights",
    "matplotlib.pyplot.cm.gray_r",
    "matplotlib.pyplot.subplots",
    "numpy.array",
    "numpy.stack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator.resample_to_grid_time_series": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.PointValidator": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pycomlink.validation.validator.Validator"
   ]
  },
  "type": "class"
 },
 "pycomlink.validation.validator.PointValidator.__init__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pycomlink.validation.validator.PointValidator._get_cml_pair_indices": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pycomlink.validation.validator.PointValidator.get_time_series": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pycomlink.validation.validator.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.Validator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "builtins.object"
   ]
  },
  "type": "class"
 },
 "pycomlink.validation.validator.Validator.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pycomlink.validation.validator.Validator.calc_stats": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator._calc_grid_corners_for_center_location": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "GridCorners",
    "collections.namedtuple",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.calc_intersect_weights": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "_calc_grid_corners_for_center_location",
    "builtins.zip",
    "max",
    "min",
    "numpy.stack",
    "numpy.where",
    "numpy.zeros",
    "shapely.geometry.LineString",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.calc_wet_dry_error": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "float",
    "pycomlink.util.maintenance.deprecated"
   ]
  },
  "type": "function"
 },
 "pycomlink.validation.validator.deprecated": {
  "data": {
   "shadows": "pycomlink.util.maintenance.deprecated"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pycomlink.validation.validator.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "pycomlink.vis": {
  "data": {},
  "type": "module"
 },
 "pycomlink.vis.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycomlink.vis.interactive_maps": {
  "data": {},
  "type": "module"
 },
 "pycomlink.vis.interactive_maps.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycomlink.vis.interactive_maps.folium": {
  "data": {
   "shadows": "folium"
  },
  "type": "import"
 },
 "pycomlink.vis.interactive_maps.plot_cml_paths": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "max",
    "min",
    "pycomlink.vis.interactive_maps.folium"
   ]
  },
  "type": "function"
 },
 "pycomlink.vis.maps": {
  "data": {},
  "type": "module"
 },
 "pycomlink.vis.maps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycomlink.vis.maps.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pycomlink.vis.maps.xarray_pcolor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.viridis",
    "matplotlib.pyplot.subplots",
    "numpy.isnan",
    "numpy.ma.array",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycomlink.vis.maps.xarray_update_pcolor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.ma.array",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 }
}