{
 "pycomlink": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.core.comlink": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pandas.plotting.register_matplotlib_converters"
  ],
  "type": "module"
 },
 "pycomlink.core.comlink.Comlink": {
  "lineno": 43,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.core.comlink.Comlink.__copy__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__deepcopy__": {
  "lineno": 162,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__dir__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__getattr__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink._repr_html_": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.append_data": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.calc_length": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.get_center_lon_lat": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.get_coordinates": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.get_length": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.plot_data": {
  "lineno": 259,
  "symbols_in_volume": [
   "builtins.zip",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.plot_line": {
  "lineno": 232,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink.Comlink.plot_map": {
  "lineno": 203,
  "symbols_in_volume": [
   "folium.Map",
   "folium.PolyLine"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink._channels_list_to_dict": {
  "lineno": 362,
  "symbols_in_volume": [
   "builtins.str"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink_channel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel": {
  "lineno": 24,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__copy__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__deepcopy__": {
  "lineno": 134,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__eq__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__getattr__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__getitem__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__getstate__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__len__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__setstate__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.__str__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel._repr_html_": {
  "lineno": 142,
  "symbols_in_volume": [
   "builtins.str"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.append_data": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.copy": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.core.comlink_channel.ComlinkChannel.resample": {
  "lineno": 155,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.mean"
  ],
  "type": "function"
 },
 "pycomlink.core.comlink_channel._parse_kwargs_to_dataframe": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pycomlink.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.io.cmlh5": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.io.cmlh5._get_first_and_last_timestamp_in_cml_list": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.io.cmlh5._missing_attribute": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_channel": {
  "lineno": 695,
  "symbols_in_volume": [
   "pycomlink.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_channel_data": {
  "lineno": 636,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_channel_metadata": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_cml_metadata": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.io.cmlh5._read_one_cml": {
  "lineno": 559,
  "symbols_in_volume": [
   "pycomlink.Comlink"
  ],
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_channel_attributes": {
  "lineno": 264,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_channel_data": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_cml_attributes": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.io.cmlh5._write_product": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.io.cmlh5.read_from_cmlh5": {
  "lineno": 452,
  "symbols_in_volume": [
   "h5py.File"
  ],
  "type": "function"
 },
 "pycomlink.io.cmlh5.read_from_multiple_cmlh5": {
  "lineno": 489,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "h5py.File",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pycomlink.io.cmlh5.write_to_cmlh5": {
  "lineno": 85,
  "symbols_in_volume": [
   "builtins.zip",
   "h5py.File",
   "pandas.Timedelta",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pycomlink.io.csv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.io.csv.write_to_wasim_input_file": {
  "lineno": 7,
  "symbols_in_volume": [
   "builtins.str",
   "numpy.char.mod",
   "pandas.DataFrame",
   "pyproj.Proj",
   "pyproj.transform"
  ],
  "type": "function"
 },
 "pycomlink.io.examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.io.examples.get_75_cmls": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.path.join",
   "pycomlink.io.cmlh5.read_from_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.io.examples.get_75_cmls_min_max": {
  "lineno": 33,
  "symbols_in_volume": [
   "os.path.join",
   "pycomlink.io.cmlh5.read_from_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.io.examples.get_example_data_path": {
  "lineno": 10,
  "symbols_in_volume": [
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "pycomlink.io.examples.read_cml_list": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.path.join",
   "pycomlink.io.cmlh5.read_from_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.io.examples.read_one_cml": {
  "lineno": 14,
  "symbols_in_volume": [
   "os.path.join",
   "pycomlink.io.cmlh5.read_from_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.processing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.A_R_relation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.A_R_relation.A_R_relation": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.a_b": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.interpolate.interp1d"
  ],
  "type": "function"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.isnan",
   "numpy.nan",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A_min_max": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.isnan",
   "numpy.log",
   "numpy.nan",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.processing.baseline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.baseline.baseline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.baseline.baseline._numba_baseline_constant": {
  "lineno": 45,
  "symbols_in_volume": [
   "builtins.range",
   "numba.decorators.jit",
   "numpy.NaN",
   "numpy.float64",
   "numpy.isnan",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.processing.baseline.baseline._numba_baseline_linear": {
  "lineno": 92,
  "symbols_in_volume": [
   "builtins.range",
   "numba.decorators.jit",
   "numpy.NaN",
   "numpy.float64",
   "numpy.isnan",
   "numpy.linspace",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.processing.baseline.baseline.baseline_constant": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pycomlink.processing.baseline.baseline.baseline_linear": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.processor.A_R": {
  "lineno": 158,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.processing.processor.A_R.__init__": {
  "lineno": 159,
  "symbols_in_volume": [
   "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A",
   "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A_min_max"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor.Baseline": {
  "lineno": 85,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.processing.processor.Baseline.__init__": {
  "lineno": 86,
  "symbols_in_volume": [
   "pycomlink.processing.baseline.baseline.baseline_constant",
   "pycomlink.processing.baseline.baseline.baseline_linear",
   "pycomlink.processing.wet_antenna.wet_antenna.waa_adjust_baseline"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor.Processor": {
  "lineno": 26,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.processing.processor.Processor.__copy__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.processing.processor.Processor.__deepcopy__": {
  "lineno": 45,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor.Processor.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.processing.processor.QualityControl": {
  "lineno": 65,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.processing.processor.QualityControl.__init__": {
  "lineno": 66,
  "symbols_in_volume": [
   "pycomlink.processing.quality_control.simple.set_to_nan_if"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor.WetDry": {
  "lineno": 70,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.processing.processor.WetDry.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "pycomlink.processing.wet_dry.std_dev.std_dev_classification",
   "pycomlink.processing.wet_dry.stft.stft_classification"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor._calc_A": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.processing.processor._calc_A_min_max": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.rint"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor.cml_wrapper": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.processing.processor.cml_wrapper.func_wrapper": {
  "lineno": 183,
  "symbols_in_volume": [
   "copy.deepcopy",
   "functools.wraps"
  ],
  "type": "function"
 },
 "pycomlink.processing.processor.pass_cml_wrapper": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.processing.processor.pass_cml_wrapper.func_wrapper": {
  "lineno": 244,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "pycomlink.processing.quality_control": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.quality_control.simple": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.quality_control.simple.set_to_nan_if": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pycomlink.processing.quality_control.simple.set_to_nan_if.func": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.processing.wet_antenna": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.wet_antenna.wet_antenna": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.wet_antenna.wet_antenna._numba_waa_schleiss": {
  "lineno": 26,
  "symbols_in_volume": [
   "builtins.range",
   "numba.decorators.jit",
   "numpy.float64",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.eps_water": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.waa_adjust_baseline": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asanyarray",
   "numpy.complex",
   "numpy.exp",
   "numpy.log10",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008_from_A_obs": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.complex",
   "numpy.logspace",
   "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_dry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.wet_dry.std_dev": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.wet_dry.std_dev.rolling_std_dev": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.concatenate",
   "numpy.std",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_dry.std_dev.rolling_window": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_dry.std_dev.std_dev_classification": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.isnan",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_dry.stft": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.processing.wet_dry.stft.find_lowest_std_dev_period": {
  "lineno": 189,
  "symbols_in_volume": [
   "matplotlib.mlab.find",
   "numpy.nanmin",
   "pycomlink.processing.wet_dry.std_dev.rolling_std_dev"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_dry.stft.nans": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pycomlink.processing.wet_dry.stft.stft_classification": {
  "lineno": 23,
  "symbols_in_volume": [
   "builtins.range",
   "matplotlib.mlab.specgram",
   "numpy.append",
   "numpy.array",
   "numpy.bool",
   "numpy.concatenate",
   "numpy.floor",
   "numpy.hamming",
   "numpy.isnan",
   "numpy.mean",
   "numpy.nanmean",
   "numpy.where",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.spatial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.spatial.coverage": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.spatial.coverage.calc_coverage_mask": {
  "lineno": 8,
  "symbols_in_volume": [
   "builtins.zip",
   "numpy.array",
   "shapely.geometry.LineString",
   "shapely.geometry.Point",
   "shapely.ops.cascaded_union",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "pycomlink.spatial.helper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.spatial.helper.distance": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.spatial.helper.haversine": {
  "lineno": 43,
  "symbols_in_volume": [
   "builtins.map",
   "math.asin",
   "math.cos",
   "math.radians",
   "math.sin",
   "math.sqrt"
  ],
  "type": "function"
 },
 "pycomlink.spatial.helper.label_loc": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.spatial.idw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.spatial.idw.Invdisttree": {
  "lineno": 9,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.spatial.idw.Invdisttree.__call__": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.inf",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycomlink.spatial.idw.Invdisttree.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "scipy.spatial.cKDTree"
  ],
  "type": "function"
 },
 "pycomlink.spatial.idw._numba_idw_loop": {
  "lineno": 138,
  "symbols_in_volume": [
   "builtins.range",
   "numba.decorators.jit",
   "numpy.dot",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpol": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.spatial.interpol.Interpolator": {
  "lineno": 28,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.spatial.interpol.Interpolator.__init__": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.meshgrid",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpol.Interpolator._fields_to_dataset": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.moveaxis",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpol.Interpolator.idw_kdtree": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.reshape",
   "pandas.isnull",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpol.Interpolator.kriging": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.reshape",
   "numpy.zeros_like",
   "pandas.isnull",
   "pykrige.ok.OrdinaryKriging",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator": {
  "lineno": 153,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator.__init__": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator._fields_to_dataset": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator.interpolate_for_i": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.zeros_like",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.ComlinkGridInterpolator.loop_over_time": {
  "lineno": 230,
  "symbols_in_volume": [
   "builtins.range",
   "numpy.nan",
   "numpy.ones_like",
   "scipy.linalg.LinAlgError",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.IdwKdtreeInterpolator": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycomlink.spatial.interpolator.IdwKdtreeInterpolator.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.IdwKdtreeInterpolator._interpol_func": {
  "lineno": 86,
  "symbols_in_volume": [
   "builtins.zip",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator.__init__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator._interpol_func": {
  "lineno": 134,
  "symbols_in_volume": [
   "pykrige.OrdinaryKriging"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator": {
  "lineno": 19,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "builtins.object",
   "future.utils.with_metaclass"
  ],
  "type": "class"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator.__call__": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.PointsToGridInterpolator._interpol_func": {
  "lineno": 70,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator._parse_grid_kwargs": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.meshgrid"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.get_dataframe_for_cml_variable": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pycomlink.spatial.interpolator.get_lon_lat_list_from_cml_list": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pycomlink.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.test_cmlh5": {
  "lineno": null,
  "symbols_in_volume": [
   "pycomlink.io.examples.get_75_cmls",
   "pycomlink.io.examples.get_75_cmls_min_max"
  ],
  "type": "module"
 },
 "pycomlink.tests.test_cmlh5.TemporaryDirectory": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycomlink.tests.test_cmlh5.TemporaryDirectory.__enter__": {
  "lineno": 20,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TemporaryDirectory.__exit__": {
  "lineno": 24,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5": {
  "lineno": 29,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.setUp": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.testWithMultiFilesTwoCmls": {
  "lineno": 65,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.io.cmlh5.read_from_multiple_cmlh5",
   "pycomlink.io.write_to_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.testWithOneFileOneCml": {
  "lineno": 33,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.io.read_from_cmlh5",
   "pycomlink.io.write_to_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5.testWithOneFileThreeCmls": {
  "lineno": 50,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.io.read_from_cmlh5",
   "pycomlink.io.write_to_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5MinMax": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycomlink.tests.test_cmlh5.TestRoundTripCmlh5MinMax.setUp": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_comlink": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins.str",
   "numpy.cos",
   "numpy.linspace",
   "numpy.sin",
   "pandas.DataFrame",
   "pandas.date_range",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "module"
 },
 "pycomlink.tests.test_comlink.TestComlinkChannelAppendData": {
  "lineno": 78,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink.TestComlinkChannelAppendData.test_append_no_kwargs": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_comlink.TestComlinkChannelAppendData.test_append_wrong_cml": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_comlink.TestComlinkCopy": {
  "lineno": 32,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink.TestComlinkCopy.test_copy": {
  "lineno": 34,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.core.Comlink"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink.TestComlinkInit": {
  "lineno": 24,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink.TestComlinkInit.testWithOneComlinkChannel": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink.assert_comlink_equal": {
  "lineno": 112,
  "symbols_in_volume": [
   "pycomlink.tests.test_comlink_channel.assert_comlink_channel_equal"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink.generate_standard_cml": {
  "lineno": 102,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pycomlink.core.Comlink"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins.str",
   "numpy.cos",
   "numpy.linspace",
   "numpy.sin",
   "pandas.date_range"
  ],
  "type": "module"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData": {
  "lineno": 151,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_max_age": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_max_length": {
  "lineno": 168,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_no_kwargs": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAppendData.test_append_wrong_cml_ch": {
  "lineno": 197,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAttributes": {
  "lineno": 50,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelAttributes.test_len": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelCopy": {
  "lineno": 60,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelCopy.test_copy": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelCopy.test_deepcopy": {
  "lineno": 86,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit": {
  "lineno": 22,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit.test_kwargs": {
  "lineno": 45,
  "symbols_in_volume": [
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit.test_with_DataFrame_rx_and_tx": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_almost_equal",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelInit.test_with_list_rx_tx_data": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelTypeAfterManipulation": {
  "lineno": 113,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelTypeAfterManipulation.test_index_slicing": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.TestComlinkChannelTypeAfterManipulation.test_resampling": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.DataFrame",
   "pycomlink.core.ComlinkChannel"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_comlink_channel.assert_comlink_channel_equal": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator": {
  "lineno": 25,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator.test_default_idw": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pycomlink.spatial.interpolator.ComlinkGridInterpolator",
   "pycomlink.spatial.interpolator.IdwKdtreeInterpolator",
   "pycomlink.tests.utils.load_processed_cml_list"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator.test_default_idw_aggregated_to_new_index": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.testing.assert_array_almost_equal",
   "pandas.to_datetime",
   "pycomlink.spatial.interpolator.ComlinkGridInterpolator",
   "pycomlink.spatial.interpolator.IdwKdtreeInterpolator",
   "pycomlink.tests.utils.load_processed_cml_list"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestComlinkGridInterpolator.test_default_kriging": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pycomlink.spatial.interpolator.ComlinkGridInterpolator",
   "pycomlink.spatial.interpolator.OrdinaryKrigingInterpolator",
   "pycomlink.tests.utils.load_processed_cml_list"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestGetDataFrameForCmlVariable": {
  "lineno": 128,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestGetDataFrameForCmlVariable.test_cml_id_order": {
  "lineno": 129,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pycomlink.spatial.interpolator.get_dataframe_for_cml_variable",
   "pycomlink.tests.utils.load_processed_cml_list"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestIdwKdtreeInterpolator": {
  "lineno": 9,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestIdwKdtreeInterpolator.test_with_nans": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestIdwKdtreeInterpolator.test_without_nans": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestOrdiniaryKrigingInterpolator": {
  "lineno": 17,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_interpolator.TestOrdiniaryKrigingInterpolator.test_with_nans": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_interpolator.TestOrdiniaryKrigingInterpolator.test_without_nans": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.tests.test_processor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.test_processor.TestWetDryStdDev": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_processor.TestWetDryStdDev.test_processing_for_selected_time_period": {
  "lineno": 62,
  "symbols_in_volume": [
   "pycomlink.tests.utils.load_and_clean_example_cml"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_processor.TestWetDryStdDev.test_standrad_processing": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pycomlink.processing.A_R_relation.A_R_relation.calc_R_from_A",
   "pycomlink.tests.utils.load_and_clean_example_cml"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_stats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.test_stats.TestWetDryandRainErrorfunctions": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_stats.TestWetDryandRainErrorfunctions.test_RainError_with_simple_arrays": {
  "lineno": 32,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_almost_equal",
   "pycomlink.validation.stats.calc_rain_error_performance_metrics"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_stats.TestWetDryandRainErrorfunctions.test_WetDryError_with_simple_arrays": {
  "lineno": 8,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_array_almost_equal",
   "pycomlink.validation.stats.calc_wet_dry_performance_metrics"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.test_util.TestAggregateDfToNewIndex": {
  "lineno": 23,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_util.TestAggregateDfToNewIndex.test_short_new_hourly_index_left_edge": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pycomlink.tests.utils.load_processed_cml_list",
   "pycomlink.util.temporal.aggregate_df_onto_DatetimeIndex"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_validator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.test_validator.TestIntersectWeights": {
  "lineno": 6,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_validator.TestIntersectWeights.test_with_simple_grid": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.meshgrid",
   "numpy.testing.assert_array_almost_equal",
   "pycomlink.validation.validator.calc_intersect_weights"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_wet_antenna": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.test_wet_antenna.TestEpswater": {
  "lineno": 43,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_wet_antenna.TestEpswater.test_with_f_array": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_almost_equal",
   "pycomlink.processing.wet_antenna.wet_antenna.eps_water"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008.test_with_R_array": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logspace",
   "numpy.testing.assert_almost_equal",
   "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008"
  ],
  "type": "function"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008FromAobs": {
  "lineno": 32,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pycomlink.tests.test_wet_antenna.TestWaaLeijnse2008FromAobs.test_with_R_array": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_almost_equal",
   "pycomlink.processing.wet_antenna.wet_antenna.waa_leijnse_2008_from_A_obs"
  ],
  "type": "function"
 },
 "pycomlink.tests.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.tests.utils.get_test_data_path": {
  "lineno": 6,
  "symbols_in_volume": [
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "pycomlink.tests.utils.load_and_clean_example_cml": {
  "lineno": 10,
  "symbols_in_volume": [
   "pycomlink.io.examples.read_one_cml"
  ],
  "type": "function"
 },
 "pycomlink.tests.utils.load_processed_cml_list": {
  "lineno": 19,
  "symbols_in_volume": [
   "pycomlink.io.read_from_cmlh5"
  ],
  "type": "function"
 },
 "pycomlink.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.util.maintenance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.util.maintenance.DeprecatedWarning": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycomlink.util.maintenance.deprecated": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.util.maintenance.deprecated.decorator": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.util.maintenance.deprecated.decorator.wrapper": {
  "lineno": 25,
  "symbols_in_volume": [
   "functools.wraps",
   "inspect.currentframe",
   "inspect.getfile",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "pycomlink.util.temporal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.util.temporal.aggregate_df_onto_DatetimeIndex": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pycomlink.validation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.validation.stats": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pycomlink.validation.stats.RainError": {
  "lineno": 59,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "pycomlink.validation.stats.WetDryError": {
  "lineno": 8,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "pycomlink.validation.stats.calc_rain_error_performance_metrics": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.corrcoef",
   "numpy.isnan",
   "numpy.mean",
   "numpy.sqrt",
   "numpy.std"
  ],
  "type": "function"
 },
 "pycomlink.validation.stats.calc_wet_dry_performance_metrics": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pycomlink.validation.stats.calc_wet_error_rates": {
  "lineno": 303,
  "symbols_in_volume": [
   "pycomlink.util.maintenance.deprecated"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.validation.validator.GridValidator": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycomlink.validation.validator.GridValidator.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator._get_cml_intersection_weights": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator.get_time_series": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.unique",
   "numpy.where"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator.plot_intersections": {
  "lineno": 101,
  "symbols_in_volume": [
   "matplotlib.pyplot.cm.gray_r",
   "matplotlib.pyplot.subplots",
   "numpy.array",
   "numpy.stack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator.GridValidator.resample_to_grid_time_series": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator.PointValidator": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycomlink.validation.validator.PointValidator.__init__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.validation.validator.PointValidator._get_cml_pair_indices": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.validation.validator.PointValidator.get_time_series": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.validation.validator.Validator": {
  "lineno": 13,
  "symbols_in_volume": [
   "builtins.object"
  ],
  "type": "class"
 },
 "pycomlink.validation.validator.Validator.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycomlink.validation.validator.Validator.calc_stats": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator._calc_grid_corners_for_center_location": {
  "lineno": 279,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator.calc_intersect_weights": {
  "lineno": 164,
  "symbols_in_volume": [
   "builtins.zip",
   "numpy.stack",
   "numpy.where",
   "numpy.zeros",
   "shapely.geometry.LineString",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "pycomlink.validation.validator.calc_wet_dry_error": {
  "lineno": 336,
  "symbols_in_volume": [
   "pycomlink.util.maintenance.deprecated"
  ],
  "type": "function"
 },
 "pycomlink.vis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.vis.interactive_maps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.vis.interactive_maps.plot_cml_paths": {
  "lineno": 16,
  "symbols_in_volume": [
   "folium.Map",
   "folium.PolyLine"
  ],
  "type": "function"
 },
 "pycomlink.vis.maps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycomlink.vis.maps.xarray_pcolor": {
  "lineno": 16,
  "symbols_in_volume": [
   "matplotlib.pyplot.cm.viridis",
   "matplotlib.pyplot.subplots",
   "numpy.isnan",
   "numpy.ma.array",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycomlink.vis.maps.xarray_update_pcolor": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.ma.array",
   "numpy.zeros_like"
  ],
  "type": "function"
 }
}