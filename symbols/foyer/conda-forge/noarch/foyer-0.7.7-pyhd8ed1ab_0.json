{
 "foyer": {
  "data": {},
  "type": "module"
 },
 "foyer.Forcefield": {
  "data": {
   "shadows": "foyer.forcefield.Forcefield"
  },
  "type": "import"
 },
 "foyer.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "foyer.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "foyer.atomtyper": {
  "data": {},
  "type": "module"
 },
 "foyer.atomtyper.FoyerError": {
  "data": {
   "shadows": "foyer.exceptions.FoyerError"
  },
  "type": "import"
 },
 "foyer.atomtyper.SMARTSGraph": {
  "data": {
   "shadows": "foyer.smarts_graph.SMARTSGraph"
  },
  "type": "import"
 },
 "foyer.atomtyper._iterate_rules": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "foyer.atomtyper._load_rules": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dict",
    "foyer.smarts_graph.SMARTSGraph",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.atomtyper._resolve_atomtypes": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "foyer.exceptions.FoyerError",
    "len"
   ]
  },
  "type": "function"
 },
 "foyer.atomtyper.find_atomtypes": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "IndexError",
    "_iterate_rules",
    "_load_rules",
    "_resolve_atomtypes",
    "dict",
    "foyer.exceptions.FoyerError",
    "len",
    "list",
    "next",
    "parmed.periodic_table.Element",
    "parmed.periodic_table.KNOWN_ELEMENTS",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.atomtyper.pt": {
  "data": {
   "shadows": "parmed.periodic_table"
  },
  "type": "import"
 },
 "foyer.atomtyper.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "foyer.element": {
  "data": {},
  "type": "module"
 },
 "foyer.element.Element": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "simtk.openmm.app.element.Element"
   ]
  },
  "type": "class"
 },
 "foyer.element.Element.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "foyer.element.Element"
   ]
  },
  "type": "function"
 },
 "foyer.element.elem": {
  "data": {
   "shadows": "simtk.openmm.app.element"
  },
  "type": "import"
 },
 "foyer.examples.files.modify_oplsa_silica": {
  "data": {
   "symbols_in_volume": [
    "foyer.examples.files.modify_oplsa_silica.all_atomtypes",
    "foyer.examples.files.modify_oplsa_silica.atomtypes",
    "foyer.examples.files.modify_oplsa_silica.new_overrides",
    "foyer.examples.files.modify_oplsa_silica.out_string",
    "foyer.examples.files.modify_oplsa_silica.overrides",
    "foyer.examples.files.modify_oplsa_silica.overrides_list",
    "foyer.examples.files.modify_oplsa_silica.rbtorsion",
    "foyer.examples.files.modify_oplsa_silica.root",
    "foyer.examples.files.modify_oplsa_silica.to_remove",
    "foyer.examples.files.modify_oplsa_silica.torsion_types",
    "len",
    "lxml.etree.fromstring",
    "lxml.etree.tostring",
    "open",
    "set"
   ]
  },
  "type": "module"
 },
 "foyer.examples.files.modify_oplsa_silica.all_atomtypes": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.anglforce": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.atomtypes": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.bondforce": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "foyer.examples.files.modify_oplsa_silica.new_overrides": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.nonbonded": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.out_string": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.overrides": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.overrides_list": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.periodictorsion": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.possible_types": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.rbtorsion": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.remove_overrides": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.root": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.to_remove": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "foyer.examples.files.modify_oplsa_silica.torsion_types": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "foyer.exceptions": {
  "data": {},
  "type": "module"
 },
 "foyer.exceptions.FoyerError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "foyer.exceptions.FoyerWarning": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "foyer.exceptions.MultipleValidationError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "foyer.exceptions.FoyerError"
   ]
  },
  "type": "class"
 },
 "foyer.exceptions.MultipleValidationError.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "foyer.exceptions.MultipleValidationError.__str__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.exceptions.ValidationError": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "foyer.exceptions.FoyerError"
   ]
  },
  "type": "class"
 },
 "foyer.exceptions.ValidationError.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "foyer.exceptions.ValidationError",
    "super"
   ]
  },
  "type": "function"
 },
 "foyer.exceptions.ValidationWarning": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "foyer.exceptions.FoyerWarning"
   ]
  },
  "type": "class"
 },
 "foyer.exceptions.raise_collected": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "foyer.exceptions.MultipleValidationError",
    "len"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield": {
  "data": {
   "symbols_in_volume": [
    "foyer.xml_writer.write_foyer",
    "parmed.Structure.write_foyer"
   ]
  },
  "type": "module"
 },
 "foyer.forcefield.AllBonds": {
  "data": {
   "shadows": "simtk.openmm.app.forcefield.AllBonds"
  },
  "type": "import"
 },
 "foyer.forcefield.CutoffNonPeriodic": {
  "data": {
   "shadows": "simtk.openmm.app.forcefield.CutoffNonPeriodic"
  },
  "type": "import"
 },
 "foyer.forcefield.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "foyer.forcefield.Forcefield": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "simtk.openmm.app.ForceField"
   ]
  },
  "type": "class"
 },
 "foyer.forcefield.Forcefield.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "dict",
    "foyer.forcefield.Forcefield",
    "foyer.forcefield.os",
    "foyer.forcefield.preprocess_forcefield_files",
    "foyer.smarts.SMARTS",
    "foyer.validator.Validator",
    "isinstance",
    "list",
    "set",
    "str",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield._apply_typemap": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "ValueError",
    "all"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield._create_element": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "KeyError",
    "foyer.element.Element",
    "foyer.forcefield.warnings",
    "isinstance",
    "simtk.openmm.app.element.Element",
    "simtk.openmm.app.element.get_by_symbol"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield._parse_name": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "KeyError",
    "foyer.forcefield.warnings",
    "open",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield._parse_version_number": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "KeyError",
    "foyer.forcefield.warnings",
    "open",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield._prepare_structure": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "foyer.forcefield.generate_topology",
    "isinstance",
    "numpy.empty",
    "numpy.nan",
    "simtk.openmm.app.Topology"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield._write_references_to_file": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "KeyError",
    "foyer.forcefield.collections",
    "foyer.forcefield.warnings",
    "foyer.utils.external.get_ref",
    "list",
    "open",
    "sorted"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.apply": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "foyer.exceptions.FoyerError",
    "foyer.utils.io.import_",
    "isinstance",
    "parmed.Structure"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.createSystem": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dir",
    "exec",
    "foyer.forcefield.itertools",
    "isinstance",
    "len",
    "list",
    "locals",
    "range",
    "set",
    "simtk.openmm.CMMotionRemover",
    "simtk.openmm.LocalCoordinatesSite",
    "simtk.openmm.OutOfPlaneSite",
    "simtk.openmm.System",
    "simtk.openmm.ThreeParticleAverageSite",
    "simtk.openmm.TwoParticleAverageSite",
    "simtk.openmm.Vec3",
    "simtk.openmm.app.ForceField._SystemData",
    "simtk.openmm.app.element.hydrogen",
    "simtk.openmm.app.forcefield.AllBonds",
    "simtk.openmm.app.forcefield.CutoffNonPeriodic",
    "simtk.openmm.app.forcefield.HAngles",
    "simtk.openmm.app.forcefield.HBonds",
    "simtk.openmm.app.forcefield.NoCutoff",
    "simtk.openmm.app.forcefield.NonbondedGenerator",
    "simtk.unit.dalton",
    "simtk.unit.is_quantity",
    "simtk.unit.nanometer",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.included_forcefields": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "any",
    "foyer.forcefield.glob",
    "foyer.forcefield.os",
    "pkg_resources.resource_filename",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.name": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.parametrize_system": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "foyer.forcefield._check_angles",
    "foyer.forcefield._check_bonds",
    "foyer.forcefield._check_dihedrals",
    "foyer.forcefield._separate_urey_bradleys",
    "foyer.forcefield._topology_from_parmed",
    "foyer.forcefield.warnings",
    "numpy.allclose",
    "parmed.openmm.load_topology",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.registerAtomType": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "simtk.openmm.app.forcefield._convertParameterToNumber"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.run_atomtyping": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "foyer.atomtyper.find_atomtypes",
    "foyer.forcefield._check_independent_residues",
    "foyer.forcefield._structure_from_residue",
    "foyer.forcefield._unwrap_typemap"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.Forcefield.version": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.FoyerError": {
  "data": {
   "shadows": "foyer.exceptions.FoyerError"
  },
  "type": "import"
 },
 "foyer.forcefield.HAngles": {
  "data": {
   "shadows": "simtk.openmm.app.forcefield.HAngles"
  },
  "type": "import"
 },
 "foyer.forcefield.HBonds": {
  "data": {
   "shadows": "simtk.openmm.app.forcefield.HBonds"
  },
  "type": "import"
 },
 "foyer.forcefield.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "foyer.forcefield.NoCutoff": {
  "data": {
   "shadows": "simtk.openmm.app.forcefield.NoCutoff"
  },
  "type": "import"
 },
 "foyer.forcefield.NonbondedGenerator": {
  "data": {
   "shadows": "simtk.openmm.app.forcefield.NonbondedGenerator"
  },
  "type": "import"
 },
 "foyer.forcefield.Validator": {
  "data": {
   "shadows": "foyer.validator.Validator"
  },
  "type": "import"
 },
 "foyer.forcefield._check_angles": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "foyer.forcefield._error_or_warn",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._check_bonds": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "foyer.forcefield._error_or_warn",
    "len"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._check_dihedrals": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "foyer.forcefield._error_or_warn",
    "foyer.forcefield.warnings",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._check_independent_residues": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._convertParameterToNumber": {
  "data": {
   "shadows": "simtk.openmm.app.forcefield._convertParameterToNumber"
  },
  "type": "import"
 },
 "foyer.forcefield._error_or_warn": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Exception",
    "foyer.forcefield.warnings"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._separate_urey_bradleys": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "range",
    "simtk.openmm.HarmonicBondForce"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._structure_from_residue": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "min",
    "parmed.Structure"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._topology_from_parmed": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "numpy.any",
    "simtk.openmm.app.Topology",
    "simtk.openmm.app.element.Element.getByAtomicNumber",
    "simtk.openmm.app.element.Element.getBySymbol"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._topology_from_residue": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dict",
    "simtk.openmm.app.Topology"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield._unwrap_typemap": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "enumerate",
    "id",
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "foyer.forcefield.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "foyer.forcefield.custom_elem": {
  "data": {
   "shadows": "foyer.element"
  },
  "type": "import"
 },
 "foyer.forcefield.elem": {
  "data": {
   "shadows": "simtk.openmm.app.element"
  },
  "type": "import"
 },
 "foyer.forcefield.find_atomtypes": {
  "data": {
   "shadows": "foyer.atomtyper.find_atomtypes"
  },
  "type": "import"
 },
 "foyer.forcefield.generate_topology": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_topology_from_parmed",
    "foyer.exceptions.FoyerError",
    "foyer.utils.io.has_mbuild",
    "foyer.utils.io.import_",
    "isinstance",
    "parmed.Structure",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.get_ref": {
  "data": {
   "shadows": "foyer.utils.external.get_ref"
  },
  "type": "import"
 },
 "foyer.forcefield.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.forcefield.has_mbuild": {
  "data": {
   "shadows": "foyer.utils.io.has_mbuild"
  },
  "type": "import"
 },
 "foyer.forcefield.import_": {
  "data": {
   "shadows": "foyer.utils.io.import_"
  },
  "type": "import"
 },
 "foyer.forcefield.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "foyer.forcefield.mm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "foyer.forcefield.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "foyer.forcefield.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.forcefield.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.forcefield.preprocess_forcefield_files": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "foyer.forcefield.os",
    "foyer.forcefield.re",
    "foyer.forcefield.warnings",
    "hasattr",
    "len",
    "open",
    "sorted",
    "tempfile.NamedTemporaryFile",
    "xml.etree.ElementTree.ParseError",
    "xml.etree.ElementTree.fromstring",
    "xml.etree.ElementTree.tostring"
   ]
  },
  "type": "function"
 },
 "foyer.forcefield.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "foyer.forcefield.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "foyer.forcefield.smarts": {
  "data": {
   "shadows": "foyer.smarts"
  },
  "type": "import"
 },
 "foyer.forcefield.u": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "foyer.forcefield.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "foyer.forcefield.write_foyer": {
  "data": {
   "shadows": "foyer.xml_writer.write_foyer"
  },
  "type": "import"
 },
 "foyer.forcefields": {
  "data": {
   "symbols_in_volume": [
    "foyer.forcefields.ForceFields",
    "foyer.forcefields.forcefields",
    "pkg_resources.iter_entry_points",
    "setattr"
   ]
  },
  "type": "module"
 },
 "foyer.forcefields.ForceFields": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "foyer.forcefields.forcefields": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "foyer.forcefields.forcefields.Forcefield": {
  "data": {
   "shadows": "foyer.Forcefield"
  },
  "type": "import"
 },
 "foyer.forcefields.forcefields.get_ff_path": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pkg_resources.resource_filename"
   ]
  },
  "type": "function"
 },
 "foyer.forcefields.forcefields.get_forcefield": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "foyer.Forcefield",
    "foyer.forcefields.forcefields.get_ff_path",
    "foyer.forcefields.forcefields.get_forcefield_paths",
    "next"
   ]
  },
  "type": "function"
 },
 "foyer.forcefields.forcefields.get_forcefield_paths": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "foyer.forcefields.forcefields.get_ff_path",
    "foyer.forcefields.forcefields.glob",
    "foyer.forcefields.forcefields.os"
   ]
  },
  "type": "function"
 },
 "foyer.forcefields.forcefields.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.forcefields.forcefields.load_OPLSAA": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "foyer.forcefields.forcefields.get_forcefield"
   ]
  },
  "type": "function"
 },
 "foyer.forcefields.forcefields.load_TRAPPE_UA": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "foyer.forcefields.forcefields.get_forcefield"
   ]
  },
  "type": "function"
 },
 "foyer.forcefields.forcefields.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.forcefields.forcefields.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "foyer.forcefields.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "foyer.smarts": {
  "data": {},
  "type": "module"
 },
 "foyer.smarts.FoyerError": {
  "data": {
   "shadows": "foyer.exceptions.FoyerError"
  },
  "type": "import"
 },
 "foyer.smarts.GRAMMAR": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "foyer.smarts.SMARTS": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "foyer.smarts.SMARTS.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "foyer.exceptions.FoyerError",
    "foyer.smarts.GRAMMAR",
    "foyer.smarts.lark",
    "sorted"
   ]
  },
  "type": "function"
 },
 "foyer.smarts.SMARTS.parse": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "foyer.smarts.lark": {
  "data": {
   "shadows": "lark"
  },
  "type": "import"
 },
 "foyer.smarts_graph": {
  "data": {},
  "type": "module"
 },
 "foyer.smarts_graph.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "foyer.smarts_graph.SMARTS": {
  "data": {
   "shadows": "foyer.smarts.SMARTS"
  },
  "type": "import"
 },
 "foyer.smarts_graph.SMARTSGraph": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "networkx.Graph"
   ]
  },
  "type": "class"
 },
 "foyer.smarts_graph.SMARTSGraph.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "foyer.smarts.SMARTS",
    "foyer.smarts_graph.SMARTSGraph",
    "super"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._add_edges": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._add_label_edges": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "collections.defaultdict",
    "id",
    "list"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._add_nodes": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "enumerate",
    "id"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._atom_expr_matches": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._atom_id_matches": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "len",
    "parmed.periodic_table.AtomicNum",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._node_match": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph.find_matches": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "IndexError",
    "SMARTSMatcher",
    "_prepare_atoms",
    "any",
    "int",
    "len",
    "list",
    "networkx.Graph",
    "networkx.get_node_attributes",
    "next",
    "parmed.periodic_table.Element",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSMatcher": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "networkx.algorithms.isomorphism.vf2userfunc.GraphMatcher"
   ]
  },
  "type": "class"
 },
 "foyer.smarts_graph.SMARTSMatcher.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "foyer.smarts_graph.SMARTSMatcher",
    "super"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSMatcher.candidate_pairs_iter": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "min",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph._find_chordless_cycles": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "foyer.smarts_graph.itertools",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph._prepare_atoms": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "foyer.smarts_graph._find_chordless_cycles",
    "networkx.Graph",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "foyer.smarts_graph.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "foyer.smarts_graph.isomorphism": {
  "data": {
   "shadows": "networkx.algorithms.isomorphism"
  },
  "type": "import"
 },
 "foyer.smarts_graph.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "foyer.smarts_graph.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "foyer.smarts_graph.pt": {
  "data": {
   "shadows": "parmed.periodic_table"
  },
  "type": "import"
 },
 "foyer.tests": {
  "data": {},
  "type": "module"
 },
 "foyer.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "foyer.tests.conftest.initdir": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "foyer.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "foyer.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping": {
  "data": {
   "symbols_in_volume": [
    "pkg_resources.resource_filename"
   ]
  },
  "type": "module"
 },
 "foyer.tests.test_atomtyping.Forcefield": {
  "data": {
   "shadows": "foyer.Forcefield"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping.FoyerError": {
  "data": {
   "shadows": "foyer.exceptions.FoyerError"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping.OPLS_TESTFILES_DIR": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "foyer.tests.test_atomtyping.get_fn": {
  "data": {
   "shadows": "foyer.tests.utils.get_fn"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "foyer.tests.test_atomtyping.test_missing_definition": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.exceptions.FoyerError",
    "foyer.tests.test_atomtyping.pytest",
    "foyer.tests.utils.get_fn",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_atomtyping.test_missing_overrides": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.exceptions.FoyerError",
    "foyer.tests.test_atomtyping.OPLS_TESTFILES_DIR",
    "foyer.tests.test_atomtyping.os",
    "foyer.tests.test_atomtyping.pytest",
    "foyer.tests.utils.get_fn",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield": {
  "data": {
   "symbols_in_volume": [
    "foyer.tests.test_forcefield.FF_DIR",
    "foyer.tests.test_forcefield.glob",
    "foyer.tests.test_forcefield.os",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "module"
 },
 "foyer.tests.test_forcefield.ET": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.FF_DIR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "foyer.tests.test_forcefield.FORCEFIELDS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "foyer.tests.test_forcefield.Forcefield": {
  "data": {
   "shadows": "foyer.Forcefield"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.FoyerError": {
  "data": {
   "shadows": "foyer.exceptions.FoyerError"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.RESPONSE_BIB_ETHANE_JA962170": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "foyer.tests.test_forcefield.RESPONSE_BIB_ETHANE_JP0484579": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "foyer.tests.test_forcefield.ValidationWarning": {
  "data": {
   "shadows": "foyer.exceptions.ValidationWarning"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield._check_independent_residues": {
  "data": {
   "shadows": "foyer.forcefield._check_independent_residues"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.generate_topology": {
  "data": {
   "shadows": "foyer.forcefield.generate_topology"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.get_fn": {
  "data": {
   "shadows": "foyer.tests.utils.get_fn"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.has_mbuild": {
  "data": {
   "shadows": "foyer.utils.io.has_mbuild"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.mb": {
  "data": {
   "shadows": "mbuild"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.mbuild.recipes": {
  "data": {
   "shadows": "mbuild.recipes"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.register_mock_request": {
  "data": {
   "shadows": "foyer.tests.utils.register_mock_request"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "foyer.tests.test_forcefield.test_allow_empty_def": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.exceptions.ValidationWarning",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_apply_residues": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.utils.io.has_mbuild",
    "len",
    "mbuild.recipes.Alkane"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_apply_subfuncs": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn",
    "parmed.load_file",
    "zip"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_assert_bonds": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "Exception",
    "any",
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.utils.io.has_mbuild",
    "mbuild.Compound",
    "mbuild.Particle"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_charmm_improper": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "len",
    "mbuild.Compound",
    "mbuild.Particle"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_comb_rule": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_duplicate_type_definitions": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.FORCEFIELDS",
    "foyer.tests.test_forcefield.pytest"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_from_mbuild": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "all",
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "len",
    "mbuild.load",
    "sum"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_from_mbuild_customtype": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "all",
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "len",
    "mbuild.load",
    "sum"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_from_parmed": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "all",
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn",
    "len",
    "parmed.load_file",
    "sum"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_improper_dihedral": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn",
    "len",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_independent_residues_atoms": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "foyer.forcefield._check_independent_residues",
    "foyer.tests.test_forcefield.pytest",
    "foyer.utils.io.has_mbuild",
    "mbuild.Compound"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_independent_residues_molecules": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "foyer.forcefield._check_independent_residues",
    "foyer.tests.test_forcefield.pytest",
    "foyer.utils.io.has_mbuild",
    "mbuild.recipes.Alkane"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_load_files": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.FORCEFIELDS",
    "len"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_load_metadata": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_load_xml": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_missing_topo_params": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "Exception",
    "UserWarning",
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_missing_type_definitions": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.exceptions.FoyerError",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_non_zero_charge": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "UserWarning",
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_overrides_space": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_preserve_resname": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_residue_map": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "all",
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn",
    "parmed.load_file",
    "zip"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_topology_precedence": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "len",
    "mbuild.load",
    "round"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_urey_bradley": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "len",
    "mbuild.Compound",
    "mbuild.Particle"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_bad_ref": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "UserWarning",
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.tests.utils.register_mock_request",
    "foyer.utils.io.has_mbuild",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_refs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.RESPONSE_BIB_ETHANE_JA962170",
    "foyer.tests.test_forcefield.difflib",
    "foyer.tests.test_forcefield.os",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.tests.utils.register_mock_request",
    "foyer.utils.io.has_mbuild",
    "list",
    "mbuild.load",
    "open"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_refs_multiple": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.RESPONSE_BIB_ETHANE_JA962170",
    "foyer.tests.test_forcefield.RESPONSE_BIB_ETHANE_JP0484579",
    "foyer.tests.test_forcefield.difflib",
    "foyer.tests.test_forcefield.os",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.tests.utils.register_mock_request",
    "foyer.utils.io.has_mbuild",
    "list",
    "mbuild.load",
    "open"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_xml": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_xml_multiple_periodictorsions": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_forcefield.pytest",
    "foyer.tests.utils.get_fn",
    "len",
    "lxml.etree.parse",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_xml_overrides": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn",
    "lxml.etree.parse",
    "parmed.load_file",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_graph": {
  "data": {},
  "type": "module"
 },
 "foyer.tests.test_graph.SMARTSGraph": {
  "data": {
   "shadows": "foyer.smarts_graph.SMARTSGraph"
  },
  "type": "import"
 },
 "foyer.tests.test_graph.TEST_BANK": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "foyer.tests.test_graph._prepare_atoms": {
  "data": {
   "shadows": "foyer.smarts_graph._prepare_atoms"
  },
  "type": "import"
 },
 "foyer.tests.test_graph.get_fn": {
  "data": {
   "shadows": "foyer.tests.utils.get_fn"
  },
  "type": "import"
 },
 "foyer.tests.test_graph.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_graph.test_cycle_finding_multiple": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "all",
    "foyer.smarts_graph._prepare_atoms",
    "foyer.tests.utils.get_fn",
    "len",
    "list",
    "map",
    "parmed.load_file",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_graph.test_init": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "enumerate",
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.tests.test_graph.TEST_BANK"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_graph.test_lazy_cycle_finding": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "all",
    "any",
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.tests.utils.get_fn",
    "list",
    "parmed.load_file",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_opls": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "foyer.Forcefield",
    "foyer.tests.test_opls.TestOPLS",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "module"
 },
 "foyer.tests.test_opls.Forcefield": {
  "data": {
   "shadows": "foyer.Forcefield"
  },
  "type": "import"
 },
 "foyer.tests.test_opls.OPLSAA": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "foyer.tests.test_opls.OPLS_TESTFILES_DIR": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "foyer.tests.test_opls.TestOPLS": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "foyer.tests.test_opls.OPLS_TESTFILES_DIR",
    "foyer.tests.test_opls.glob",
    "foyer.tests.test_opls.os",
    "object",
    "open"
   ]
  },
  "type": "class"
 },
 "foyer.tests.test_opls.TestOPLS.find_correctly_implemented": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "foyer.tests.test_opls.os",
    "itertools.chain",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_opls.TestOPLS.initdir": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "foyer.tests.test_opls.pytest"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_opls.TestOPLS.test_atomtyping": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "foyer.tests.test_opls.OPLSAA",
    "foyer.tests.test_opls.OPLS_TESTFILES_DIR",
    "foyer.tests.test_opls.glob",
    "foyer.tests.test_opls.os",
    "foyer.tests.test_opls.pytest",
    "foyer.tests.utils.atomtype",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_opls.TestOPLS.test_full_parametrization": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "all",
    "foyer.tests.test_opls.OPLSAA",
    "foyer.tests.test_opls.OPLS_TESTFILES_DIR",
    "foyer.tests.test_opls.os",
    "len",
    "parmed.load_file",
    "sum"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_opls.atomtype": {
  "data": {
   "shadows": "foyer.tests.utils.atomtype"
  },
  "type": "import"
 },
 "foyer.tests.test_opls.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.tests.test_opls.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "foyer.tests.test_opls.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.tests.test_opls.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_opls.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_opls.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "foyer.tests.test_performance": {
  "data": {},
  "type": "module"
 },
 "foyer.tests.test_performance.Forcefield": {
  "data": {
   "shadows": "foyer.Forcefield"
  },
  "type": "import"
 },
 "foyer.tests.test_performance.get_fn": {
  "data": {
   "shadows": "foyer.tests.utils.get_fn"
  },
  "type": "import"
 },
 "foyer.tests.test_performance.has_mbuild": {
  "data": {
   "shadows": "foyer.utils.io.has_mbuild"
  },
  "type": "import"
 },
 "foyer.tests.test_performance.mb": {
  "data": {
   "shadows": "mbuild"
  },
  "type": "import"
 },
 "foyer.tests.test_performance.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_performance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_performance.test_fullerene": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_performance.pytest",
    "foyer.tests.utils.get_fn",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_performance.test_polymer": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_performance.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_performance.test_surface": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.test_performance.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.io.has_mbuild",
    "mbuild.load"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_plugin": {
  "data": {},
  "type": "module"
 },
 "foyer.tests.test_plugin.foyer": {
  "data": {
   "shadows": "foyer"
  },
  "type": "import"
 },
 "foyer.tests.test_plugin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_plugin.test_basic_import": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "dir",
    "foyer.tests.test_plugin.foyer"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_plugin.test_load_forcefield": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "foyer.tests.test_plugin.foyer",
    "foyer.tests.test_plugin.pytest"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_plugin.test_loading_forcefields": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dir",
    "eval",
    "foyer.tests.test_plugin.foyer"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts": {
  "data": {
   "symbols_in_volume": [
    "foyer.smarts.SMARTS"
   ]
  },
  "type": "module"
 },
 "foyer.tests.test_smarts.Forcefield": {
  "data": {
   "shadows": "foyer.forcefield.Forcefield"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts.FoyerError": {
  "data": {
   "shadows": "foyer.exceptions.FoyerError"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts.PARSER": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "foyer.tests.test_smarts.SMARTS": {
  "data": {
   "shadows": "foyer.smarts.SMARTS"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts.SMARTSGraph": {
  "data": {
   "shadows": "foyer.smarts_graph.SMARTSGraph"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts._rule_match": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.tests.test_smarts.PARSER",
    "list"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts._rule_match_count": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.tests.test_smarts.PARSER",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.get_fn": {
  "data": {
   "shadows": "foyer.tests.utils.get_fn"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts.lark": {
  "data": {
   "shadows": "lark"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_smarts.test_ast": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "foyer.tests.test_smarts.PARSER",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_fused_ring": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.tests.test_smarts.PARSER",
    "foyer.tests.utils.get_fn",
    "len",
    "list",
    "parmed.load_file",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_hexa_coordinated": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "all",
    "foyer.forcefield.Forcefield",
    "foyer.tests.utils.get_fn",
    "len",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_not": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "foyer.tests.test_smarts._rule_match_count",
    "foyer.tests.utils.get_fn",
    "parmed.load_file",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_not_ast": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "foyer.tests.test_smarts.PARSER",
    "foyer.tests.test_smarts.lark",
    "foyer.tests.test_smarts.pytest"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_optional_name_parser": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "foyer.smarts.SMARTS"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_optional_names_bad_syntax": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "foyer.exceptions.FoyerError",
    "foyer.smarts.SMARTS",
    "foyer.tests.test_smarts.pytest"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_optional_names_good_syntax": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "foyer.smarts.SMARTS"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_parse": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "foyer.tests.test_smarts.PARSER"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_precedence": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "foyer.tests.test_smarts._rule_match_count",
    "foyer.tests.utils.get_fn",
    "parmed.load_file",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_precedence_ast": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "foyer.tests.test_smarts.PARSER"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_ring_count": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.tests.test_smarts.PARSER",
    "foyer.tests.utils.get_fn",
    "len",
    "list",
    "parmed.load_file",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_ringness": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "foyer.tests.test_smarts._rule_match",
    "foyer.tests.utils.get_fn",
    "parmed.load_file",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_smarts.test_uniqueness": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "foyer.tests.test_smarts._rule_match",
    "foyer.tests.utils.get_fn",
    "parmed.load_file",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_trappe": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "foyer.Forcefield",
    "foyer.tests.test_trappe.TestTraPPE",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "module"
 },
 "foyer.tests.test_trappe.Forcefield": {
  "data": {
   "shadows": "foyer.Forcefield"
  },
  "type": "import"
 },
 "foyer.tests.test_trappe.TRAPPE_TESTFILES_DIR": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "foyer.tests.test_trappe.TRAPPE_UA": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "foyer.tests.test_trappe.TestTraPPE": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "foyer.tests.test_trappe.TRAPPE_TESTFILES_DIR",
    "foyer.tests.test_trappe.glob",
    "foyer.tests.test_trappe.os",
    "object",
    "open"
   ]
  },
  "type": "class"
 },
 "foyer.tests.test_trappe.TestTraPPE.find_correctly_implemented": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "foyer.tests.test_trappe.os",
    "itertools.chain",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_trappe.TestTraPPE.initdir": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "foyer.tests.test_trappe.pytest"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_trappe.TestTraPPE.test_atomtyping": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "foyer.tests.test_trappe.TRAPPE_TESTFILES_DIR",
    "foyer.tests.test_trappe.TRAPPE_UA",
    "foyer.tests.test_trappe.glob",
    "foyer.tests.test_trappe.os",
    "foyer.tests.test_trappe.pytest",
    "foyer.tests.utils.atomtype",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_trappe.atomtype": {
  "data": {
   "shadows": "foyer.tests.utils.atomtype"
  },
  "type": "import"
 },
 "foyer.tests.test_trappe.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.tests.test_trappe.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "foyer.tests.test_trappe.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.tests.test_trappe.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_trappe.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_trappe.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "foyer.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "foyer.tests.test_utils.Forcefield": {
  "data": {
   "shadows": "foyer.Forcefield"
  },
  "type": "import"
 },
 "foyer.tests.test_utils.apply_nbfix": {
  "data": {
   "shadows": "foyer.utils.nbfixes.apply_nbfix"
  },
  "type": "import"
 },
 "foyer.tests.test_utils.get_fn": {
  "data": {
   "shadows": "foyer.tests.utils.get_fn"
  },
  "type": "import"
 },
 "foyer.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "foyer.tests.test_utils.pmd": {
  "data": {
   "shadows": "parmed"
  },
  "type": "import"
 },
 "foyer.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_utils.test_apply_nbfix": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "foyer.Forcefield",
    "foyer.tests.utils.get_fn",
    "foyer.utils.nbfixes.apply_nbfix",
    "numpy.allclose",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_utils.test_apply_nbfix_bad_atom_type": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "foyer.Forcefield",
    "foyer.tests.test_utils.pytest",
    "foyer.tests.utils.get_fn",
    "foyer.utils.nbfixes.apply_nbfix",
    "parmed.load_file"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_validator": {
  "data": {
   "symbols_in_volume": [
    "foyer.exceptions.MultipleValidationError",
    "foyer.exceptions.ValidationError",
    "foyer.tests.test_validator.FF_DIR",
    "foyer.tests.test_validator.glob",
    "foyer.tests.test_validator.os",
    "foyer.tests.utils.glob_fn",
    "lxml.etree.DocumentInvalid",
    "lxml.etree.XMLSyntaxError",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "module"
 },
 "foyer.tests.test_validator.DocumentInvalid": {
  "data": {
   "shadows": "lxml.etree.DocumentInvalid"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.ERRORS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "foyer.tests.test_validator.FF_DIR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "foyer.tests.test_validator.FORCEFIELDS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "foyer.tests.test_validator.MultipleValidationError": {
  "data": {
   "shadows": "foyer.exceptions.MultipleValidationError"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.ValidationError": {
  "data": {
   "shadows": "foyer.exceptions.ValidationError"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.ValidationWarning": {
  "data": {
   "shadows": "foyer.exceptions.ValidationWarning"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.Validator": {
  "data": {
   "shadows": "foyer.validator.Validator"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.XMLS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "foyer.tests.test_validator.XMLSyntaxError": {
  "data": {
   "shadows": "lxml.etree.XMLSyntaxError"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.glob_fn": {
  "data": {
   "shadows": "foyer.tests.utils.glob_fn"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "foyer.tests.test_validator.test_forcefields": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "foyer.tests.test_validator.FORCEFIELDS",
    "foyer.tests.test_validator.pytest",
    "foyer.validator.Validator"
   ]
  },
  "type": "function"
 },
 "foyer.tests.test_validator.test_xmls": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "foyer.exceptions.ValidationWarning",
    "foyer.tests.test_validator.ERRORS",
    "foyer.tests.test_validator.XMLS",
    "foyer.tests.test_validator.os",
    "foyer.tests.test_validator.pytest",
    "foyer.validator.Validator"
   ]
  },
  "type": "function"
 },
 "foyer.tests.utils": {
  "data": {},
  "type": "module"
 },
 "foyer.tests.utils.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "foyer.tests.utils.atomtype": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "foyer.tests.utils.get_fn": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "os.path.abspath",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "foyer.tests.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.tests.utils.glob_fn": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "foyer.tests.utils.glob",
    "os.path.abspath",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "foyer.tests.utils.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "foyer.tests.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "foyer.tests.utils.parseurl": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "foyer.tests.utils.register_mock_request": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "foyer.tests.utils.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "foyer.utils": {
  "data": {},
  "type": "module"
 },
 "foyer.utils.external": {
  "data": {},
  "type": "module"
 },
 "foyer.utils.external.get_ref": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "foyer.utils.external.requests"
   ]
  },
  "type": "function"
 },
 "foyer.utils.external.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "foyer.utils.io": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "foyer.utils.io.MESSAGES",
    "foyer.utils.io.mbuild"
   ]
  },
  "type": "module"
 },
 "foyer.utils.io.DelayImportError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ImportError",
    "unittest.SkipTest"
   ]
  },
  "type": "class"
 },
 "foyer.utils.io.MESSAGES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "foyer.utils.io.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "foyer.utils.io.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "foyer.utils.io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "foyer.utils.io.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "foyer.utils.io.has_mbuild": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "foyer.utils.io.import_": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "foyer.utils.io.DelayImportError",
    "foyer.utils.io.MESSAGES",
    "foyer.utils.io.importlib",
    "foyer.utils.io.inspect",
    "foyer.utils.io.os",
    "foyer.utils.io.sys",
    "foyer.utils.io.textwrap",
    "len",
    "max",
    "print"
   ]
  },
  "type": "function"
 },
 "foyer.utils.io.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "foyer.utils.io.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "foyer.utils.io.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "foyer.utils.io.mbuild": {
  "data": {
   "shadows": "mbuild"
  },
  "type": "import"
 },
 "foyer.utils.io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "foyer.utils.io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.utils.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "foyer.utils.io.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "foyer.utils.io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "foyer.utils.io.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "foyer.utils.nbfixes": {
  "data": {},
  "type": "module"
 },
 "foyer.utils.nbfixes.apply_nbfix": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "NameError",
    "ValueError",
    "copy.deepcopy",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "foyer.utils.nbfixes.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "foyer.validator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "foyer.tests.utils.get_fn",
    "foyer.validator.Validator"
   ]
  },
  "type": "module"
 },
 "foyer.validator.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "foyer.validator.DocumentInvalid": {
  "data": {
   "shadows": "lxml.etree.DocumentInvalid"
  },
  "type": "import"
 },
 "foyer.validator.Forcefield": {
  "data": {
   "shadows": "foyer.forcefield.Forcefield"
  },
  "type": "import"
 },
 "foyer.validator.SMARTSGraph": {
  "data": {
   "shadows": "foyer.smarts_graph.SMARTSGraph"
  },
  "type": "import"
 },
 "foyer.validator.ValidationError": {
  "data": {
   "shadows": "foyer.exceptions.ValidationError"
  },
  "type": "import"
 },
 "foyer.validator.ValidationWarning": {
  "data": {
   "shadows": "foyer.exceptions.ValidationWarning"
  },
  "type": "import"
 },
 "foyer.validator.Validator": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "foyer.validator.Validator.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "foyer.forcefield.Forcefield",
    "foyer.forcefield.preprocess_forcefield_files",
    "foyer.validator.os",
    "lxml.etree.parse"
   ]
  },
  "type": "function"
 },
 "foyer.validator.Validator.validate_class_type_exclusivity": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "all",
    "collections.Counter",
    "foyer.exceptions.ValidationError",
    "foyer.exceptions.raise_collected",
    "len",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.validator.Validator.validate_overrides": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "foyer.exceptions.ValidationError",
    "foyer.exceptions.raise_collected"
   ]
  },
  "type": "function"
 },
 "foyer.validator.Validator.validate_smarts": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "foyer.exceptions.ValidationError",
    "foyer.exceptions.ValidationWarning",
    "foyer.exceptions.raise_collected",
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.validator.lark",
    "len",
    "networkx.get_node_attributes",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "foyer.validator.Validator.validate_xsd": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "create_error",
    "foyer.exceptions.ValidationError",
    "lxml.etree.DocumentInvalid",
    "lxml.etree.XMLSchema",
    "lxml.etree.parse",
    "os.path.abspath",
    "os.path.join",
    "os.path.split",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "foyer.validator.Validator.validate_xsd.create_error": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "foyer.exceptions.ValidationError"
   ]
  },
  "type": "function"
 },
 "foyer.validator.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "foyer.validator.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "foyer.validator.get_fn": {
  "data": {
   "shadows": "foyer.tests.utils.get_fn"
  },
  "type": "import"
 },
 "foyer.validator.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "foyer.validator.lark": {
  "data": {
   "shadows": "lark"
  },
  "type": "import"
 },
 "foyer.validator.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "foyer.validator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "foyer.validator.preprocess_forcefield_files": {
  "data": {
   "shadows": "foyer.forcefield.preprocess_forcefield_files"
  },
  "type": "import"
 },
 "foyer.validator.raise_collected": {
  "data": {
   "shadows": "foyer.exceptions.raise_collected"
  },
  "type": "import"
 },
 "foyer.validator.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "foyer.validator.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "foyer.xml_writer": {
  "data": {},
  "type": "module"
 },
 "foyer.xml_writer.ET": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "foyer.xml_writer.SMARTSGraph": {
  "data": {
   "shadows": "foyer.smarts_graph.SMARTSGraph"
  },
  "type": "import"
 },
 "foyer.xml_writer._elements_equal": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "all",
    "len",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._infer_coulomb14scale": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._infer_lj14scale": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.array",
    "numpy.isclose",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._remove_duplicate_elements": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "_elements_equal",
    "id",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._unique_periodictorsion_parameters": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._update_defs": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "enumerate",
    "foyer.smarts_graph.SMARTSGraph",
    "foyer.xml_writer.warnings",
    "list",
    "networkx.get_node_attributes",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._write_angles": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "id",
    "lxml.etree.SubElement",
    "numpy.pi",
    "range",
    "round",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._write_atoms": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "_infer_coulomb14scale",
    "_infer_lj14scale",
    "_update_defs",
    "eval",
    "foyer.xml_writer.collections",
    "len",
    "lxml.etree.Comment",
    "lxml.etree.SubElement",
    "round",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._write_bonds": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "id",
    "lxml.etree.SubElement",
    "range",
    "round",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._write_periodic_torsions": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "_unique_periodictorsion_parameters",
    "id",
    "lxml.etree.SubElement",
    "numpy.pi",
    "range",
    "round",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer._write_rb_torsions": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "getattr",
    "id",
    "lxml.etree.SubElement",
    "range",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "foyer.xml_writer.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "foyer.xml_writer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "foyer.xml_writer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "foyer.xml_writer.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "foyer.xml_writer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "foyer.xml_writer.write_foyer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "_remove_duplicate_elements",
    "_write_angles",
    "_write_atoms",
    "_write_bonds",
    "_write_periodic_torsions",
    "_write_rb_torsions",
    "len",
    "lxml.etree.Element",
    "lxml.etree.ElementTree"
   ]
  },
  "type": "function"
 }
}