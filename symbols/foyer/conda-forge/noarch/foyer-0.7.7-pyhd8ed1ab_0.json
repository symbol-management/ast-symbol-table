{
 "foyer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.atomtyper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.atomtyper._iterate_rules": {
  "lineno": 90,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.atomtyper._load_rules": {
  "lineno": 69,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph"
  ],
  "type": "function"
 },
 "foyer.atomtyper._resolve_atomtypes": {
  "lineno": 123,
  "symbols_in_volume": [
   "foyer.exceptions.FoyerError"
  ],
  "type": "function"
 },
 "foyer.atomtyper.find_atomtypes": {
  "lineno": 9,
  "symbols_in_volume": [
   "foyer.exceptions.FoyerError",
   "parmed.periodic_table.Element",
   "parmed.periodic_table.KNOWN_ELEMENTS"
  ],
  "type": "function"
 },
 "foyer.element": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.element.Element": {
  "lineno": 3,
  "symbols_in_volume": [
   "simtk.openmm.app.element.Element"
  ],
  "type": "class"
 },
 "foyer.element.Element.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.examples.files.modify_oplsa_silica": {
  "lineno": null,
  "symbols_in_volume": [
   "lxml.etree.fromstring",
   "lxml.etree.tostring"
  ],
  "type": "module"
 },
 "foyer.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.exceptions.FoyerError": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.exceptions.FoyerWarning": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.exceptions.MultipleValidationError": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.exceptions.MultipleValidationError.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.exceptions.MultipleValidationError.__str__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.exceptions.ValidationError": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.exceptions.ValidationError.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.exceptions.ValidationWarning": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.exceptions.raise_collected": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield": {
  "lineno": null,
  "symbols_in_volume": [
   "foyer.xml_writer.write_foyer",
   "parmed.Structure.write_foyer"
  ],
  "type": "module"
 },
 "foyer.forcefield.Forcefield": {
  "lineno": 359,
  "symbols_in_volume": [
   "simtk.openmm.app.ForceField"
  ],
  "type": "class"
 },
 "foyer.forcefield.Forcefield.__init__": {
  "lineno": 371,
  "symbols_in_volume": [
   "foyer.smarts.SMARTS",
   "foyer.validator.Validator",
   "os.remove"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield._apply_typemap": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield.Forcefield._create_element": {
  "lineno": 465,
  "symbols_in_volume": [
   "foyer.element.Element",
   "simtk.openmm.app.element.Element",
   "simtk.openmm.app.element.get_by_symbol",
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield._parse_name": {
  "lineno": 453,
  "symbols_in_volume": [
   "warnings.warn",
   "xml.etree.ElementTree.parse"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield._parse_version_number": {
  "lineno": 441,
  "symbols_in_volume": [
   "warnings.warn",
   "xml.etree.ElementTree.parse"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield._prepare_structure": {
  "lineno": 900,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "simtk.openmm.app.Topology"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield._write_references_to_file": {
  "lineno": 912,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict",
   "foyer.utils.external.get_ref",
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.apply": {
  "lineno": 523,
  "symbols_in_volume": [
   "foyer.exceptions.FoyerError",
   "foyer.utils.io.import_",
   "parmed.Structure"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.createSystem": {
  "lineno": 668,
  "symbols_in_volume": [
   "itertools.combinations",
   "simtk.openmm.CMMotionRemover",
   "simtk.openmm.LocalCoordinatesSite",
   "simtk.openmm.OutOfPlaneSite",
   "simtk.openmm.System",
   "simtk.openmm.ThreeParticleAverageSite",
   "simtk.openmm.TwoParticleAverageSite",
   "simtk.openmm.Vec3",
   "simtk.openmm.app.ForceField._SystemData",
   "simtk.openmm.app.element.hydrogen",
   "simtk.openmm.app.forcefield.AllBonds",
   "simtk.openmm.app.forcefield.CutoffNonPeriodic",
   "simtk.openmm.app.forcefield.HAngles",
   "simtk.openmm.app.forcefield.HBonds",
   "simtk.openmm.app.forcefield.NoCutoff",
   "simtk.openmm.app.forcefield.NonbondedGenerator",
   "simtk.unit.dalton",
   "simtk.unit.is_quantity",
   "simtk.unit.nanometer"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.included_forcefields": {
  "lineno": 427,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.join",
   "os.path.split",
   "os.path.splitext",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.name": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.parametrize_system": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.allclose",
   "parmed.openmm.load_topology",
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.registerAtomType": {
  "lineno": 483,
  "symbols_in_volume": [
   "simtk.openmm.app.forcefield._convertParameterToNumber"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.run_atomtyping": {
  "lineno": 583,
  "symbols_in_volume": [
   "foyer.atomtyper.find_atomtypes"
  ],
  "type": "function"
 },
 "foyer.forcefield.Forcefield.version": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield._check_angles": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield._check_bonds": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield._check_dihedrals": {
  "lineno": 304,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.forcefield._check_independent_residues": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield._error_or_warn": {
  "lineno": 254,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.forcefield._separate_urey_bradleys": {
  "lineno": 223,
  "symbols_in_volume": [
   "simtk.openmm.HarmonicBondForce"
  ],
  "type": "function"
 },
 "foyer.forcefield._structure_from_residue": {
  "lineno": 106,
  "symbols_in_volume": [
   "parmed.Structure"
  ],
  "type": "function"
 },
 "foyer.forcefield._topology_from_parmed": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.any",
   "simtk.openmm.app.Topology",
   "simtk.openmm.app.element.Element.getByAtomicNumber",
   "simtk.openmm.app.element.Element.getBySymbol"
  ],
  "type": "function"
 },
 "foyer.forcefield._topology_from_residue": {
  "lineno": 163,
  "symbols_in_volume": [
   "simtk.openmm.app.Topology"
  ],
  "type": "function"
 },
 "foyer.forcefield._unwrap_typemap": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefield.generate_topology": {
  "lineno": 86,
  "symbols_in_volume": [
   "foyer.exceptions.FoyerError",
   "foyer.utils.io.has_mbuild",
   "foyer.utils.io.import_",
   "parmed.Structure"
  ],
  "type": "function"
 },
 "foyer.forcefield.preprocess_forcefield_files": {
  "lineno": 32,
  "symbols_in_volume": [
   "os.path.split",
   "re.sub",
   "tempfile.NamedTemporaryFile",
   "warnings.warn",
   "xml.etree.ElementTree.ParseError",
   "xml.etree.ElementTree.fromstring",
   "xml.etree.ElementTree.tostring"
  ],
  "type": "function"
 },
 "foyer.forcefields": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.iter_entry_points"
  ],
  "type": "module"
 },
 "foyer.forcefields.ForceFields": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.forcefields.forcefields": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.forcefields.forcefields.get_ff_path": {
  "lineno": 8,
  "symbols_in_volume": [
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "foyer.forcefields.forcefields.get_forcefield": {
  "lineno": 19,
  "symbols_in_volume": [
   "foyer.Forcefield"
  ],
  "type": "function"
 },
 "foyer.forcefields.forcefields.get_forcefield_paths": {
  "lineno": 12,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.join"
  ],
  "type": "function"
 },
 "foyer.forcefields.forcefields.load_OPLSAA": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.forcefields.forcefields.load_TRAPPE_UA": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.smarts.SMARTS": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.smarts.SMARTS.__init__": {
  "lineno": 63,
  "symbols_in_volume": [
   "foyer.exceptions.FoyerError",
   "lark.Lark"
  ],
  "type": "function"
 },
 "foyer.smarts.SMARTS.parse": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.smarts_graph.SMARTSGraph": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "class"
 },
 "foyer.smarts_graph.SMARTSGraph.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "foyer.smarts.SMARTS"
  ],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._add_edges": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._add_label_edges": {
  "lineno": 78,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._add_nodes": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._atom_expr_matches": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._atom_id_matches": {
  "lineno": 120,
  "symbols_in_volume": [
   "parmed.periodic_table.AtomicNum"
  ],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph._node_match": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSGraph.find_matches": {
  "lineno": 153,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.get_node_attributes",
   "parmed.periodic_table.Element"
  ],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSMatcher": {
  "lineno": 211,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.vf2userfunc.GraphMatcher"
  ],
  "type": "class"
 },
 "foyer.smarts_graph.SMARTSMatcher.__init__": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts_graph.SMARTSMatcher.candidate_pairs_iter": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.smarts_graph._find_chordless_cycles": {
  "lineno": 244,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "foyer.smarts_graph._prepare_atoms": {
  "lineno": 308,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "foyer.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.tests.conftest.initdir": {
  "lineno": 3,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "foyer.tests.test_atomtyping": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "foyer.tests.test_atomtyping.test_missing_definition": {
  "lineno": 24,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.exceptions.FoyerError",
   "foyer.tests.utils.get_fn",
   "parmed.load_file",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_atomtyping.test_missing_overrides": {
  "lineno": 14,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.exceptions.FoyerError",
   "foyer.tests.utils.get_fn",
   "os.path.join",
   "parmed.load_file",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield": {
  "lineno": null,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.join",
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "foyer.tests.test_forcefield.test_allow_empty_def": {
  "lineno": 348,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.exceptions.ValidationWarning",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif",
   "pytest.warns"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_apply_residues": {
  "lineno": 181,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.utils.io.has_mbuild",
   "mbuild.recipes.Alkane",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_apply_subfuncs": {
  "lineno": 375,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_assert_bonds": {
  "lineno": 356,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.utils.io.has_mbuild",
   "mbuild.Compound",
   "mbuild.Particle",
   "pytest.mark.skipif",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_charmm_improper": {
  "lineno": 235,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.Compound",
   "mbuild.Particle",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_comb_rule": {
  "lineno": 108,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.parametrize",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_duplicate_type_definitions": {
  "lineno": 60,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_from_mbuild": {
  "lineno": 92,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_from_mbuild_customtype": {
  "lineno": 190,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_from_parmed": {
  "lineno": 71,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_improper_dihedral": {
  "lineno": 206,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_independent_residues_atoms": {
  "lineno": 286,
  "symbols_in_volume": [
   "foyer.forcefield._check_independent_residues",
   "foyer.utils.io.has_mbuild",
   "mbuild.Compound",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_independent_residues_molecules": {
  "lineno": 276,
  "symbols_in_volume": [
   "foyer.forcefield._check_independent_residues",
   "foyer.utils.io.has_mbuild",
   "mbuild.recipes.Alkane",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_load_files": {
  "lineno": 51,
  "symbols_in_volume": [
   "foyer.Forcefield"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_load_metadata": {
  "lineno": 508,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_load_xml": {
  "lineno": 478,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_missing_topo_params": {
  "lineno": 325,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_missing_type_definitions": {
  "lineno": 65,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.exceptions.FoyerError",
   "foyer.tests.utils.get_fn",
   "parmed.load_file",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_non_zero_charge": {
  "lineno": 402,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "mbuild.load",
   "pytest.warns"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_overrides_space": {
  "lineno": 340,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_preserve_resname": {
  "lineno": 173,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_residue_map": {
  "lineno": 256,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_topology_precedence": {
  "lineno": 295,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_urey_bradley": {
  "lineno": 214,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.Compound",
   "mbuild.Particle",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_bad_ref": {
  "lineno": 160,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.tests.utils.register_mock_request",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif",
   "pytest.warns"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_refs": {
  "lineno": 117,
  "symbols_in_volume": [
   "difflib.unified_diff",
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.tests.utils.register_mock_request",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "os.path.isfile",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_refs_multiple": {
  "lineno": 136,
  "symbols_in_volume": [
   "difflib.unified_diff",
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.tests.utils.register_mock_request",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "os.path.isfile",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_xml": {
  "lineno": 409,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_xml_multiple_periodictorsions": {
  "lineno": 458,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "lxml.etree.parse",
   "parmed.load_file",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "foyer.tests.test_forcefield.test_write_xml_overrides": {
  "lineno": 490,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "lxml.etree.parse",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.tests.test_graph.test_cycle_finding_multiple": {
  "lineno": 44,
  "symbols_in_volume": [
   "foyer.smarts_graph._prepare_atoms",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_graph.test_init": {
  "lineno": 17,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph"
  ],
  "type": "function"
 },
 "foyer.tests.test_graph.test_lazy_cycle_finding": {
  "lineno": 26,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_opls": {
  "lineno": null,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "foyer.tests.test_opls.TestOPLS": {
  "lineno": 16,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "class"
 },
 "foyer.tests.test_opls.TestOPLS.find_correctly_implemented": {
  "lineno": 33,
  "symbols_in_volume": [
   "itertools.chain",
   "os.path.split",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "foyer.tests.test_opls.TestOPLS.initdir": {
  "lineno": 18,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "foyer.tests.test_opls.TestOPLS.test_atomtyping": {
  "lineno": 47,
  "symbols_in_volume": [
   "foyer.tests.utils.atomtype",
   "glob.glob",
   "os.path.join",
   "os.path.splitext",
   "parmed.load_file",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "foyer.tests.test_opls.TestOPLS.test_full_parametrization": {
  "lineno": 63,
  "symbols_in_volume": [
   "os.path.join",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_performance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.tests.test_performance.test_fullerene": {
  "lineno": 9,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file",
   "pytest.mark.timeout"
  ],
  "type": "function"
 },
 "foyer.tests.test_performance.test_polymer": {
  "lineno": 25,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif",
   "pytest.mark.timeout"
  ],
  "type": "function"
 },
 "foyer.tests.test_performance.test_surface": {
  "lineno": 16,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.io.has_mbuild",
   "mbuild.load",
   "pytest.mark.skipif",
   "pytest.mark.timeout"
  ],
  "type": "function"
 },
 "foyer.tests.test_plugin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.tests.test_plugin.test_basic_import": {
  "lineno": 5,
  "symbols_in_volume": [
   "foyer"
  ],
  "type": "function"
 },
 "foyer.tests.test_plugin.test_load_forcefield": {
  "lineno": 16,
  "symbols_in_volume": [
   "foyer.forcefields.get_forcefield",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_plugin.test_loading_forcefields": {
  "lineno": 9,
  "symbols_in_volume": [
   "foyer.forcefields"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts": {
  "lineno": null,
  "symbols_in_volume": [
   "foyer.smarts.SMARTS"
  ],
  "type": "module"
 },
 "foyer.tests.test_smarts._rule_match": {
  "lineno": 15,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts._rule_match_count": {
  "lineno": 21,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_ast": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_fused_ring": {
  "lineno": 70,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_hexa_coordinated": {
  "lineno": 189,
  "symbols_in_volume": [
   "foyer.forcefield.Forcefield",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_not": {
  "lineno": 172,
  "symbols_in_volume": [
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_not_ast": {
  "lineno": 156,
  "symbols_in_volume": [
   "lark.UnexpectedInput",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_optional_name_parser": {
  "lineno": 219,
  "symbols_in_volume": [
   "foyer.smarts.SMARTS"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_optional_names_bad_syntax": {
  "lineno": 208,
  "symbols_in_volume": [
   "foyer.exceptions.FoyerError",
   "foyer.smarts.SMARTS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_optional_names_good_syntax": {
  "lineno": 214,
  "symbols_in_volume": [
   "foyer.smarts.SMARTS"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_parse": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_precedence": {
  "lineno": 140,
  "symbols_in_volume": [
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_precedence_ast": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_ring_count": {
  "lineno": 86,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph",
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_ringness": {
  "lineno": 54,
  "symbols_in_volume": [
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_smarts.test_uniqueness": {
  "lineno": 42,
  "symbols_in_volume": [
   "foyer.tests.utils.get_fn",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_trappe": {
  "lineno": null,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "foyer.tests.test_trappe.TestTraPPE": {
  "lineno": 16,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "class"
 },
 "foyer.tests.test_trappe.TestTraPPE.find_correctly_implemented": {
  "lineno": 32,
  "symbols_in_volume": [
   "itertools.chain",
   "os.path.split",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "foyer.tests.test_trappe.TestTraPPE.initdir": {
  "lineno": 18,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "foyer.tests.test_trappe.TestTraPPE.test_atomtyping": {
  "lineno": 46,
  "symbols_in_volume": [
   "foyer.tests.utils.atomtype",
   "glob.glob",
   "os.path.join",
   "os.path.splitext",
   "parmed.load_file",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "foyer.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.tests.test_utils.test_apply_nbfix": {
  "lineno": 10,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.nbfixes.apply_nbfix",
   "numpy.allclose",
   "parmed.load_file"
  ],
  "type": "function"
 },
 "foyer.tests.test_utils.test_apply_nbfix_bad_atom_type": {
  "lineno": 38,
  "symbols_in_volume": [
   "foyer.Forcefield",
   "foyer.tests.utils.get_fn",
   "foyer.utils.nbfixes.apply_nbfix",
   "parmed.load_file",
   "pytest.raises"
  ],
  "type": "function"
 },
 "foyer.tests.test_validator": {
  "lineno": null,
  "symbols_in_volume": [
   "foyer.exceptions.MultipleValidationError",
   "foyer.exceptions.ValidationError",
   "foyer.tests.utils.glob_fn",
   "glob.glob",
   "lxml.etree.DocumentInvalid",
   "lxml.etree.XMLSyntaxError",
   "os.path.join",
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "foyer.tests.test_validator.test_forcefields": {
  "lineno": 37,
  "symbols_in_volume": [
   "foyer.validator.Validator",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "foyer.tests.test_validator.test_xmls": {
  "lineno": 23,
  "symbols_in_volume": [
   "foyer.exceptions.ValidationWarning",
   "foyer.validator.Validator",
   "os.path.split",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "foyer.tests.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.tests.utils.atomtype": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "foyer.tests.utils.get_fn": {
  "lineno": 53,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "foyer.tests.utils.glob_fn": {
  "lineno": 69,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.abspath",
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "foyer.tests.utils.register_mock_request": {
  "lineno": 84,
  "symbols_in_volume": [
   "urllib.parse.urljoin"
  ],
  "type": "function"
 },
 "foyer.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.utils.external": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.utils.external.get_ref": {
  "lineno": 4,
  "symbols_in_volume": [
   "requests.get"
  ],
  "type": "function"
 },
 "foyer.utils.io": {
  "lineno": null,
  "symbols_in_volume": [
   "mbuild"
  ],
  "type": "module"
 },
 "foyer.utils.io.DelayImportError": {
  "lineno": 15,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "class"
 },
 "foyer.utils.io.import_": {
  "lineno": 35,
  "symbols_in_volume": [
   "importlib.import_module",
   "inspect.currentframe",
   "inspect.getouterframes",
   "os.linesep",
   "os.path.basename",
   "sys.stderr",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "foyer.utils.nbfixes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.utils.nbfixes.apply_nbfix": {
  "lineno": 4,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "foyer.validator": {
  "lineno": null,
  "symbols_in_volume": [
   "foyer.tests.utils.get_fn"
  ],
  "type": "module"
 },
 "foyer.validator.Validator": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "foyer.validator.Validator.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "foyer.forcefield.Forcefield",
   "foyer.forcefield.preprocess_forcefield_files",
   "lxml.etree.parse",
   "os.remove"
  ],
  "type": "function"
 },
 "foyer.validator.Validator.validate_class_type_exclusivity": {
  "lineno": 79,
  "symbols_in_volume": [
   "collections.Counter",
   "foyer.exceptions.ValidationError",
   "foyer.exceptions.raise_collected"
  ],
  "type": "function"
 },
 "foyer.validator.Validator.validate_overrides": {
  "lineno": 176,
  "symbols_in_volume": [
   "foyer.exceptions.ValidationError",
   "foyer.exceptions.raise_collected"
  ],
  "type": "function"
 },
 "foyer.validator.Validator.validate_smarts": {
  "lineno": 125,
  "symbols_in_volume": [
   "foyer.exceptions.ValidationError",
   "foyer.exceptions.ValidationWarning",
   "foyer.exceptions.raise_collected",
   "foyer.smarts_graph.SMARTSGraph",
   "lark.ParseError",
   "networkx.get_node_attributes",
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.validator.Validator.validate_xsd": {
  "lineno": 41,
  "symbols_in_volume": [
   "foyer.exceptions.ValidationError",
   "lxml.etree.DocumentInvalid",
   "lxml.etree.XMLSchema",
   "lxml.etree.parse",
   "os.path.abspath",
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "foyer.validator.Validator.validate_xsd.create_error": {
  "lineno": 59,
  "symbols_in_volume": [
   "foyer.exceptions.ValidationError"
  ],
  "type": "function"
 },
 "foyer.xml_writer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "foyer.xml_writer._elements_equal": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.xml_writer._infer_coulomb14scale": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.xml_writer._infer_lj14scale": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "numpy.unique"
  ],
  "type": "function"
 },
 "foyer.xml_writer._remove_duplicate_elements": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.xml_writer._unique_periodictorsion_parameters": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "foyer.xml_writer._update_defs": {
  "lineno": 132,
  "symbols_in_volume": [
   "foyer.smarts_graph.SMARTSGraph",
   "networkx.get_node_attributes",
   "warnings.warn"
  ],
  "type": "function"
 },
 "foyer.xml_writer._write_angles": {
  "lineno": 178,
  "symbols_in_volume": [
   "lxml.etree.SubElement",
   "numpy.pi"
  ],
  "type": "function"
 },
 "foyer.xml_writer._write_atoms": {
  "lineno": 72,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "lxml.etree.Comment",
   "lxml.etree.SubElement"
  ],
  "type": "function"
 },
 "foyer.xml_writer._write_bonds": {
  "lineno": 162,
  "symbols_in_volume": [
   "lxml.etree.SubElement"
  ],
  "type": "function"
 },
 "foyer.xml_writer._write_periodic_torsions": {
  "lineno": 198,
  "symbols_in_volume": [
   "lxml.etree.SubElement",
   "numpy.pi"
  ],
  "type": "function"
 },
 "foyer.xml_writer._write_rb_torsions": {
  "lineno": 294,
  "symbols_in_volume": [
   "lxml.etree.SubElement"
  ],
  "type": "function"
 },
 "foyer.xml_writer.write_foyer": {
  "lineno": 12,
  "symbols_in_volume": [
   "lxml.etree.Element",
   "lxml.etree.ElementTree"
  ],
  "type": "function"
 }
}