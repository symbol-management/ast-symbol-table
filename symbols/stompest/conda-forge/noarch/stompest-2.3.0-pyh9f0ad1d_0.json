{
 "stompest._backwards": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "chr",
    "stompest._backwards._PY2",
    "stompest._backwards.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "stompest._backwards._PY2": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "stompest._backwards.binaryType": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "stompest._backwards.characterType": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "stompest._backwards.makeBytesFromSequence": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "stompest._backwards._PY2",
    "stompest._backwards.binaryType"
   ]
  },
  "type": "function"
 },
 "stompest._backwards.nextMethod": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "getattr",
    "stompest._backwards._PY2"
   ]
  },
  "type": "function"
 },
 "stompest._backwards.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "stompest._backwards.textType": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "stompest.config": {
  "data": {},
  "type": "module"
 },
 "stompest.config.StompConfig": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "stompest.config.StompConfig.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "stompest.error": {
  "data": {},
  "type": "module"
 },
 "stompest.error.StompAlreadyRunningError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "KeyError",
    "stompest.error.StompExclusiveOperationError"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompCancelledError": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "stompest.error.StompExclusiveOperationError"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompConnectTimeout": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "stompest.error.StompConnectionError"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompConnectionError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "stompest.error.StompError"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompExclusiveOperationError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "stompest.error.StompError"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompFrameError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "stompest.error.StompError"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompNotRunningError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "KeyError",
    "stompest.error.StompExclusiveOperationError"
   ]
  },
  "type": "class"
 },
 "stompest.error.StompProtocolError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "stompest.error.StompError"
   ]
  },
  "type": "class"
 },
 "stompest.protocol": {
  "data": {},
  "type": "module"
 },
 "stompest.protocol.StompFailoverTransport": {
  "data": {
   "shadows": "stompest.protocol.failover.StompFailoverTransport"
  },
  "type": "import"
 },
 "stompest.protocol.StompFailoverUri": {
  "data": {
   "shadows": "stompest.protocol.failover.StompFailoverUri"
  },
  "type": "import"
 },
 "stompest.protocol.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.frame.StompFrame"
  },
  "type": "import"
 },
 "stompest.protocol.StompParser": {
  "data": {
   "shadows": "stompest.protocol.parser.StompParser"
  },
  "type": "import"
 },
 "stompest.protocol.StompSession": {
  "data": {
   "shadows": "stompest.protocol.session.StompSession"
  },
  "type": "import"
 },
 "stompest.protocol.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.spec.StompSpec"
  },
  "type": "import"
 },
 "stompest.protocol.failover": {
  "data": {},
  "type": "module"
 },
 "stompest.protocol.failover.StompConnectTimeout": {
  "data": {
   "shadows": "stompest.error.StompConnectTimeout"
  },
  "type": "import"
 },
 "stompest.protocol.failover.StompFailoverTransport": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object",
    "stompest.protocol.failover.re"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.failover.StompFailoverTransport.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "stompest.protocol.failover.StompFailoverUri"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverTransport.__iter__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverTransport._brokers": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "list",
    "stompest.protocol.failover.random"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverTransport._delay": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "max",
    "min",
    "stompest.error.StompConnectTimeout",
    "stompest.protocol.failover.random"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverTransport._reset": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverTransport.isLocalHost": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "alternative",
    "classmethod",
    "stompest.protocol.failover.socket"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverUri": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "_configurationOption",
    "float",
    "int",
    "object",
    "stompest.protocol.failover.collections",
    "stompest.protocol.failover.re"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.failover.StompFailoverUri.__init__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverUri.__repr__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverUri.__str__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverUri._parse": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "Exception",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverUri._setBrokers": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.failover.StompFailoverUri._setOptions": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "stompest.protocol.failover.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "stompest.protocol.failover.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "stompest.protocol.failover.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "stompest.protocol.failover.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "stompest.protocol.frame": {
  "data": {},
  "type": "module"
 },
 "stompest.protocol.frame.StompFrame": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object",
    "stompest.protocol.spec.StompSpec.DEFAULT_VERSION"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.frame.StompFrame.__bytes__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "stompest.protocol.spec.StompSpec.FRAME_DELIMITER",
    "stompest.protocol.spec.StompSpec.LINE_DELIMITER.join"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.__eq__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "stompest._backwards.binaryType"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.__init__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.__iter__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.__repr__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.__str__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame._escape": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "property",
    "stompest.protocol.util.escape"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame._headlines": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property",
    "sorted",
    "stompest._backwards.textType",
    "stompest.protocol.util.escape"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.headers": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.info": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.setContentLength": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "stompest._backwards.textType",
    "stompest.protocol.spec.StompSpec.CONTENT_LENGTH_HEADER"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.unraw": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompFrame.version": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "stompest.protocol.spec.StompSpec.codec",
    "stompest.protocol.spec.StompSpec.version"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompHeartBeat": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.frame.StompHeartBeat.__bool__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompHeartBeat.__bytes__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "stompest.protocol.spec.StompSpec.LINE_DELIMITER.encode"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompHeartBeat.__eq__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "isinstance",
    "stompest.protocol.frame.StompHeartBeat"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompHeartBeat.__nonzero__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompHeartBeat.__repr__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompHeartBeat.__str__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompHeartBeat.info": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "stompest.protocol.frame.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.spec.StompSpec"
  },
  "type": "import"
 },
 "stompest.protocol.frame.binaryType": {
  "data": {
   "shadows": "stompest._backwards.binaryType"
  },
  "type": "import"
 },
 "stompest.protocol.frame.escape": {
  "data": {
   "shadows": "stompest.protocol.util.escape"
  },
  "type": "import"
 },
 "stompest.protocol.frame.textType": {
  "data": {
   "shadows": "stompest._backwards.textType"
  },
  "type": "import"
 },
 "stompest.protocol.parser": {
  "data": {},
  "type": "module"
 },
 "stompest.protocol.parser.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.frame.StompFrame"
  },
  "type": "import"
 },
 "stompest.protocol.parser.StompFrameError": {
  "data": {
   "shadows": "stompest.error.StompFrameError"
  },
  "type": "import"
 },
 "stompest.protocol.parser.StompHeartBeat": {
  "data": {
   "shadows": "stompest.protocol.frame.StompHeartBeat"
  },
  "type": "import"
 },
 "stompest.protocol.parser.StompParser": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object",
    "ord",
    "stompest.protocol.spec.StompSpec.FRAME_DELIMITER.encode",
    "stompest.protocol.spec.StompSpec.LINE_DELIMITER.encode"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.parser.StompParser.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bytearray"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._append": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._flush": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._next": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._parse": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._parseBody": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "memoryview"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._parseEndOfFrame": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._parseHead": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "_unescape",
    "int",
    "stompest.protocol.frame.StompFrame",
    "stompest.protocol.spec.StompSpec.CONTENT_LENGTH_HEADER",
    "stompest.protocol.spec.StompSpec.HEADER_SEPARATOR",
    "stompest.protocol.spec.StompSpec.LINE_DELIMITER",
    "stompest.protocol.util.unescape"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._parseHeartBeat": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._raise": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "stompest.error.StompFrameError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser._truncate": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser.add": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser.canRead": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser.get": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser.reset": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "stompest.protocol.parser.collections"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompParser.version": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "stompest.protocol.frame.StompHeartBeat",
    "stompest.protocol.parser.re",
    "stompest.protocol.spec.StompSpec.COMMANDS",
    "stompest.protocol.spec.StompSpec.COMMANDS_BODY_ALLOWED",
    "stompest.protocol.spec.StompSpec.LINE_DELIMITER.encode",
    "stompest.protocol.spec.StompSpec.STRIP_LINE_DELIMITER.get",
    "stompest.protocol.spec.StompSpec.VERSION_1_0",
    "stompest.protocol.spec.StompSpec.codec",
    "stompest.protocol.spec.StompSpec.version"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.parser.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.spec.StompSpec"
  },
  "type": "import"
 },
 "stompest.protocol.parser.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "stompest.protocol.parser.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "stompest.protocol.parser.unescape": {
  "data": {
   "shadows": "stompest.protocol.util.unescape"
  },
  "type": "import"
 },
 "stompest.protocol.session": {
  "data": {},
  "type": "module"
 },
 "stompest.protocol.session.StompProtocolError": {
  "data": {
   "shadows": "stompest.error.StompProtocolError"
  },
  "type": "import"
 },
 "stompest.protocol.session.StompSession": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.session.StompSession.__check": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "map",
    "repr",
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "stompest._backwards.nextMethod",
    "stompest.protocol.session.itertools"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession._flush": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession._receipt": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession._reset": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession._versions": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "set",
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.abort": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "KeyError",
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.ack": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.beat": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.begin": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.clientHeartBeat": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.close": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.commit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "KeyError",
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.connect": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.connected": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.disconnect": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.id": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.lastReceived": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.lastSent": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.message": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.nack": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.receipt": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "KeyError",
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.received": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "stompest.protocol.session.time"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.replay": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.send": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.sent": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "stompest.protocol.session.time"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.server": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.serverHeartBeat": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.state": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.subscribe": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.session.copy"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.subscription": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.transaction": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "stompest.protocol.session.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.unsubscribe": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "KeyError",
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.StompSession.version": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.session.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "stompest.protocol.session.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "stompest.protocol.session.nextMethod": {
  "data": {
   "shadows": "stompest._backwards.nextMethod"
  },
  "type": "import"
 },
 "stompest.protocol.session.stompest.protocol.commands": {
  "data": {
   "shadows": "stompest.protocol.commands"
  },
  "type": "import"
 },
 "stompest.protocol.session.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "stompest.protocol.session.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "stompest.protocol.spec": {
  "data": {},
  "type": "module"
 },
 "stompest.protocol.spec.StompProtocolError": {
  "data": {
   "shadows": "stompest.error.StompProtocolError"
  },
  "type": "import"
 },
 "stompest.protocol.spec.StompSpec": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "dict",
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.spec.StompSpec.codec": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.spec.StompSpec.version": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "classmethod",
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.spec.StompSpec.versions": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util": {
  "data": {
   "symbols_in_volume": [
    "stompest.protocol.util._HeadersEscaper",
    "stompest.protocol.util._HeadersUnescaper"
   ]
  },
  "type": "module"
 },
 "stompest.protocol.util.StompFrameError": {
  "data": {
   "shadows": "stompest.error.StompFrameError"
  },
  "type": "import"
 },
 "stompest.protocol.util.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.spec.StompSpec"
  },
  "type": "import"
 },
 "stompest.protocol.util._HeadersEscaper": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "stompest.protocol.util._HeadersTransformer"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.util._HeadersEscaper._escapeSequences": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util._HeadersEscaper._regex": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "map",
    "property",
    "stompest.protocol.util.re"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util._HeadersTransformer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object",
    "stompest.protocol.spec.StompSpec.ESCAPE_CHARACTER"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.util._HeadersTransformer.__call__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception",
    "repr",
    "stompest.error.StompFrameError"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util._HeadersTransformer.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "stompest.protocol.spec.StompSpec.COMMANDS_ESCAPE_EXCLUDED",
    "stompest.protocol.spec.StompSpec.ESCAPED_CHARACTERS",
    "stompest.protocol.util.re"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util._HeadersTransformer._replace": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "stompest.protocol.util._HeadersTransformer.get": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "KeyError",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util._HeadersUnescaper": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "stompest.protocol.util._HeadersTransformer"
   ]
  },
  "type": "class"
 },
 "stompest.protocol.util._HeadersUnescaper._escapeSequences": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util._HeadersUnescaper._regex": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property",
    "stompest.protocol.util.re"
   ]
  },
  "type": "function"
 },
 "stompest.protocol.util.escape": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "stompest.protocol.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "stompest.protocol.util.unescape": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "stompest.sync": {
  "data": {},
  "type": "module"
 },
 "stompest.sync.Stomp": {
  "data": {
   "shadows": "stompest.sync.client.Stomp"
  },
  "type": "import"
 },
 "stompest.sync.client": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.util.checkattr"
   ]
  },
  "type": "module"
 },
 "stompest.sync.client.LOG_CATEGORY": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "stompest.sync.client.Stomp": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object",
    "stompest.protocol.StompFailoverTransport",
    "stompest.sync.transport.StompFrameTransport"
   ]
  },
  "type": "class"
 },
 "stompest.sync.client.Stomp.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "stompest.protocol.StompSession",
    "stompest.sync.client.LOG_CATEGORY",
    "stompest.sync.client.logging"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp._connect": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp._transport": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "stompest.sync.client.collections"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.abort": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.ack": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.beat": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.begin": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.canRead": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "stompest.protocol.StompFrame",
    "stompest.sync.client.connected",
    "stompest.sync.client.logging",
    "stompest.sync.client.time"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.clientHeartBeat": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.close": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.commit": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.connect": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "int",
    "stompest.error.StompConnectionError",
    "stompest.sync.client.time"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.disconnect": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.lastReceived": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.lastSent": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.message": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.nack": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.receipt": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.receiveFrame": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.send": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.sendFrame": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "stompest.sync.client.logging"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.serverHeartBeat": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.session": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.subscribe": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.transaction": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "stompest.sync.client.connected",
    "stompest.sync.client.contextlib"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.Stomp.unsubscribe": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "stompest.sync.client.connected"
   ]
  },
  "type": "function"
 },
 "stompest.sync.client.StompConnectionError": {
  "data": {
   "shadows": "stompest.error.StompConnectionError"
  },
  "type": "import"
 },
 "stompest.sync.client.StompFailoverTransport": {
  "data": {
   "shadows": "stompest.protocol.StompFailoverTransport"
  },
  "type": "import"
 },
 "stompest.sync.client.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.sync.client.StompFrameTransport": {
  "data": {
   "shadows": "stompest.sync.transport.StompFrameTransport"
  },
  "type": "import"
 },
 "stompest.sync.client.StompProtocolError": {
  "data": {
   "shadows": "stompest.error.StompProtocolError"
  },
  "type": "import"
 },
 "stompest.sync.client.StompSession": {
  "data": {
   "shadows": "stompest.protocol.StompSession"
  },
  "type": "import"
 },
 "stompest.sync.client.checkattr": {
  "data": {
   "shadows": "stompest.util.checkattr"
  },
  "type": "import"
 },
 "stompest.sync.client.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "stompest.sync.client.connected": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "stompest.sync.client.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "stompest.sync.client.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "stompest.sync.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "stompest.sync.examples": {
  "data": {},
  "type": "module"
 },
 "stompest.sync.examples.consumer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "stompest.config.StompConfig",
    "stompest.protocol.StompSpec.ACK_CLIENT_INDIVIDUAL",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.sync.Stomp",
    "stompest.sync.examples.consumer.CONFIG",
    "stompest.sync.examples.consumer.QUEUE",
    "stompest.sync.examples.consumer.client",
    "stompest.sync.examples.consumer.frame"
   ]
  },
  "type": "module"
 },
 "stompest.sync.examples.consumer.CONFIG": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "stompest.sync.examples.consumer.QUEUE": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "stompest.sync.examples.consumer.Stomp": {
  "data": {
   "shadows": "stompest.sync.Stomp"
  },
  "type": "import"
 },
 "stompest.sync.examples.consumer.StompConfig": {
  "data": {
   "shadows": "stompest.config.StompConfig"
  },
  "type": "import"
 },
 "stompest.sync.examples.consumer.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.sync.examples.consumer.client": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "stompest.sync.examples.consumer.frame": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "stompest.sync.examples.producer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.config.StompConfig",
    "stompest.sync.Stomp",
    "stompest.sync.examples.producer.CONFIG",
    "stompest.sync.examples.producer.QUEUE",
    "stompest.sync.examples.producer.client"
   ]
  },
  "type": "module"
 },
 "stompest.sync.examples.producer.CONFIG": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "stompest.sync.examples.producer.QUEUE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "stompest.sync.examples.producer.Stomp": {
  "data": {
   "shadows": "stompest.sync.Stomp"
  },
  "type": "import"
 },
 "stompest.sync.examples.producer.StompConfig": {
  "data": {
   "shadows": "stompest.config.StompConfig"
  },
  "type": "import"
 },
 "stompest.sync.examples.producer.client": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "stompest.sync.examples.ssl_consumer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "stompest.config.StompConfig",
    "stompest.protocol.StompSpec.ACK_CLIENT_INDIVIDUAL",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.sync.Stomp",
    "stompest.sync.examples.ssl_consumer.CONFIG",
    "stompest.sync.examples.ssl_consumer.QUEUE",
    "stompest.sync.examples.ssl_consumer.client",
    "stompest.sync.examples.ssl_consumer.context",
    "stompest.sync.examples.ssl_consumer.frame",
    "stompest.sync.examples.ssl_consumer.ssl"
   ]
  },
  "type": "module"
 },
 "stompest.sync.examples.ssl_consumer.CONFIG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "stompest.sync.examples.ssl_consumer.QUEUE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "stompest.sync.examples.ssl_consumer.Stomp": {
  "data": {
   "shadows": "stompest.sync.Stomp"
  },
  "type": "import"
 },
 "stompest.sync.examples.ssl_consumer.StompConfig": {
  "data": {
   "shadows": "stompest.config.StompConfig"
  },
  "type": "import"
 },
 "stompest.sync.examples.ssl_consumer.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.sync.examples.ssl_consumer.client": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "stompest.sync.examples.ssl_consumer.context": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "stompest.sync.examples.ssl_consumer.frame": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "stompest.sync.examples.ssl_consumer.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "stompest.sync.transport": {
  "data": {},
  "type": "module"
 },
 "stompest.sync.transport.StompConnectionError": {
  "data": {
   "shadows": "stompest.error.StompConnectionError"
  },
  "type": "import"
 },
 "stompest.sync.transport.StompFrameTransport": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object",
    "stompest.protocol.StompParser"
   ]
  },
  "type": "class"
 },
 "stompest.sync.transport.StompFrameTransport.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport.__str__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport._check": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "stompest.error.StompConnectionError"
   ]
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport._connected": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport._write": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "IOError",
    "stompest.error.StompConnectionError"
   ]
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport.canRead": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "max",
    "stompest.sync.transport.errno",
    "stompest.sync.transport.select",
    "stompest.sync.transport.time"
   ]
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport.connect": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "IOError",
    "stompest.error.StompConnectionError",
    "stompest.sync.transport.socket"
   ]
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport.disconnect": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "IOError",
    "stompest.error.StompConnectionError"
   ]
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport.receive": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "IOError",
    "stompest.error.StompConnectionError"
   ]
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport.send": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "stompest._backwards.binaryType"
   ]
  },
  "type": "function"
 },
 "stompest.sync.transport.StompFrameTransport.setVersion": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "stompest.sync.transport.StompParser": {
  "data": {
   "shadows": "stompest.protocol.StompParser"
  },
  "type": "import"
 },
 "stompest.sync.transport.binaryType": {
  "data": {
   "shadows": "stompest._backwards.binaryType"
  },
  "type": "import"
 },
 "stompest.sync.transport.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "stompest.sync.transport.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "stompest.sync.transport.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "stompest.sync.transport.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "stompest.sync.transport.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "stompest.tests": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "stompest.tests.BROKER"
   ]
  },
  "type": "module"
 },
 "stompest.tests.BROKER": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "stompest.tests.HOST": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "stompest.tests.PORT": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "stompest.tests.PORT_SSL": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "stompest.tests.VERSION": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "stompest.tests.commands_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.commands_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.commands_test.CommandsTest": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "stompest.tests.commands_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.commands_test.CommandsTest.test_ack": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "set",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ACK",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.protocol.StompSpec.CONNECTED",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER",
    "stompest.protocol.StompSpec.RECEIPT_HEADER",
    "stompest.protocol.StompSpec.SUBSCRIPTION_HEADER",
    "stompest.protocol.StompSpec.TRANSACTION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_1_2",
    "stompest.protocol.commands.ack"
   ]
  },
  "type": "function"
 },
 "stompest.tests.commands_test.CommandsTest.test_connect": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ACCEPT_VERSION_HEADER",
    "stompest.protocol.StompSpec.CONNECT",
    "stompest.protocol.StompSpec.HEART_BEAT_HEADER",
    "stompest.protocol.StompSpec.HOST_HEADER",
    "stompest.protocol.StompSpec.LOGIN_HEADER",
    "stompest.protocol.StompSpec.PASSCODE_HEADER",
    "stompest.protocol.StompSpec.STOMP",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.commands.connect",
    "stompest.protocol.commands.stomp"
   ]
  },
  "type": "function"
 },
 "stompest.tests.commands_test.CommandsTest.test_connected": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.CONNECTED",
    "stompest.protocol.StompSpec.HEART_BEAT_HEADER",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.SERVER_HEADER",
    "stompest.protocol.StompSpec.SESSION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_HEADER",
    "stompest.protocol.commands.connected"
   ]
  },
  "type": "function"
 },
 "stompest.tests.commands_test.CommandsTest.test_disconnect": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DISCONNECT",
    "stompest.protocol.StompSpec.RECEIPT_HEADER",
    "stompest.protocol.commands.disconnect"
   ]
  },
  "type": "function"
 },
 "stompest.tests.commands_test.CommandsTest.test_nack": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.CONNECTED",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER",
    "stompest.protocol.StompSpec.NACK",
    "stompest.protocol.StompSpec.RECEIPT_HEADER",
    "stompest.protocol.StompSpec.SUBSCRIPTION_HEADER",
    "stompest.protocol.StompSpec.TRANSACTION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.commands.nack"
   ]
  },
  "type": "function"
 },
 "stompest.tests.commands_test.CommandsTest.test_negotiateHeartBeat": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "stompest.protocol.commands.negotiateHeartBeat"
   ]
  },
  "type": "function"
 },
 "stompest.tests.commands_test.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.commands_test.StompProtocolError": {
  "data": {
   "shadows": "stompest.error.StompProtocolError"
  },
  "type": "import"
 },
 "stompest.tests.commands_test.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.commands_test.commands": {
  "data": {
   "shadows": "stompest.protocol.commands"
  },
  "type": "import"
 },
 "stompest.tests.commands_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.failover_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.failover_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.failover_test.StompConnectTimeout": {
  "data": {
   "shadows": "stompest.error.StompConnectTimeout"
  },
  "type": "import"
 },
 "stompest.tests.failover_test.StompFailoverTest": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "stompest.tests.failover_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.failover_test.StompFailoverTest._test_failover": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "nextBrokerAndDelay",
    "stompest._backwards.nextMethod",
    "stompest.error.StompConnectTimeout"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTest.test_jitter": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "abs",
    "iter",
    "nextProtocol",
    "stompest._backwards.nextMethod",
    "stompest.protocol.StompFailoverTransport",
    "stompest.tests.failover_test.itertools"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTest.test_priority_backup": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "iter",
    "stompest.protocol.StompFailoverTransport"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTest.test_priority_backup_broken_localhost_lookup": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "iter",
    "stompest.protocol.StompFailoverTransport",
    "stompest.tests.mock.patch"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTest.test_priority_backup_broken_localhost_lookup._broken_gethostbyname": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "stompest.tests.failover_test.socket"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTest.test_priority_backup_localhost_lookup": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "iter",
    "stompest.protocol.StompFailoverTransport",
    "stompest.tests.mock.patch"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTest.test_randomize": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "set",
    "stompest.protocol.StompFailoverTransport",
    "stompest.tests.failover_test.itertools"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTest.test_time_scales_and_reconnect_attempts": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "iter",
    "stompest.protocol.StompFailoverTransport"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverTransport": {
  "data": {
   "shadows": "stompest.protocol.StompFailoverTransport"
  },
  "type": "import"
 },
 "stompest.tests.failover_test.StompFailoverUri": {
  "data": {
   "shadows": "stompest.protocol.StompFailoverUri"
  },
  "type": "import"
 },
 "stompest.tests.failover_test.StompFailoverUriTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "stompest.tests.failover_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.failover_test.StompFailoverUriTest.test_configuration": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "stompest.protocol.StompFailoverUri"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.StompFailoverUriTest.test_configuration_invalid_uris": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "stompest.protocol.StompFailoverUri"
   ]
  },
  "type": "function"
 },
 "stompest.tests.failover_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "stompest.tests.failover_test.mock": {
  "data": {
   "shadows": "stompest.tests.mock"
  },
  "type": "import"
 },
 "stompest.tests.failover_test.nextMethod": {
  "data": {
   "shadows": "stompest._backwards.nextMethod"
  },
  "type": "import"
 },
 "stompest.tests.failover_test.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "stompest.tests.failover_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.frame_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.frame_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.frame_test.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.frame_test.StompFrameTest": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "stompest.tests.frame_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.frame_test.StompFrameTest.test_binary_body": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE",
    "str"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompFrameTest.test_duplicate_headers": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dict",
    "reversed",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.SEND"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompFrameTest.test_encoding": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "dict",
    "eval",
    "repr",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DISCONNECT",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompFrameTest.test_frame": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dict",
    "eval",
    "repr",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.DESTINATION_HEADER.encode",
    "stompest.protocol.StompSpec.SEND",
    "stompest.protocol.StompSpec.SEND.encode"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompFrameTest.test_frame_info": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.VERSION_1_1"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompFrameTest.test_frame_without_headers_and_body": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dict",
    "eval",
    "repr",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DISCONNECT",
    "stompest.protocol.StompSpec.DISCONNECT.encode"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompFrameTest.test_non_string_headers": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dict",
    "eval",
    "repr",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompFrameTest.test_unescape": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.CONNECT",
    "stompest.protocol.StompSpec.CONNECT.encode",
    "stompest.protocol.StompSpec.DISCONNECT",
    "stompest.protocol.StompSpec.DISCONNECT.encode",
    "stompest.protocol.StompSpec.VERSIONS",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_1_2"
   ]
  },
  "type": "function"
 },
 "stompest.tests.frame_test.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.frame_test.binaryType": {
  "data": {
   "shadows": "stompest._backwards.binaryType"
  },
  "type": "import"
 },
 "stompest.tests.frame_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bytearray",
    "dict",
    "memoryview",
    "random.choice",
    "random.randrange",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.CONTENT_LENGTH_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.frame.StompHeartBeat",
    "stompest.tests.parser_profile.BINARY_BLOCK",
    "stompest.tests.parser_profile.BLOCK_LENGTH",
    "stompest.tests.parser_profile.BODY_BLOCKS",
    "stompest.tests.parser_profile.HEADER_LENGTH",
    "stompest.tests.parser_profile.TEXT_BLOCK",
    "stompest.tests.parser_profile.cProfile",
    "stompest.tests.parser_profile.createRange",
    "stompest.tests.parser_profile.pstats",
    "string.printable"
   ]
  },
  "type": "module"
 },
 "stompest.tests.parser_profile.BINARY_BLOCK": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.BLOCK_LENGTH": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.BODY_BLOCKS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.HEADER_LENGTH": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.N": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.SLICE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.StompHeartBeat": {
  "data": {
   "shadows": "stompest.protocol.frame.StompHeartBeat"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.StompParser": {
  "data": {
   "shadows": "stompest.protocol.StompParser"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.TEXT_BLOCK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.binaryFrame": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.binaryType": {
  "data": {
   "shadows": "stompest._backwards.binaryType"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.choice": {
  "data": {
   "shadows": "random.choice"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.createRange": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "stompest.tests.parser_profile.heartBeatFrame": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "stompest.tests.parser_profile.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.main": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.VERSION_1_2",
    "stompest.tests.parser_profile.N",
    "stompest.tests.parser_profile.SLICE",
    "stompest.tests.parser_profile.binaryFrame",
    "stompest.tests.parser_profile.createRange",
    "stompest.tests.parser_profile.heartBeatFrame",
    "stompest.tests.parser_profile.itertools",
    "stompest.tests.parser_profile.textFrame"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_profile.printable": {
  "data": {
   "shadows": "string.printable"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.randrange": {
  "data": {
   "shadows": "random.randrange"
  },
  "type": "import"
 },
 "stompest.tests.parser_profile.testText": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "stompest.tests.parser_profile.textFrame": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "stompest.tests.parser_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.parser_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.parser_test.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.StompFrameError": {
  "data": {
   "shadows": "stompest.error.StompFrameError"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.StompHeartBeat": {
  "data": {
   "shadows": "stompest.protocol.frame.StompHeartBeat"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.StompParser": {
  "data": {
   "shadows": "stompest.protocol.StompParser"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.StompParserTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "stompest.tests.parser_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.parser_test.StompParserTest.test_add_multiple_frames_per_read": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_add_throws_FrameError_on_header_line_missing_separator": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "stompest.error.StompFrameError",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.SEND.encode"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_add_throws_FrameError_on_invalid_command": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "stompest.error.StompFrameError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.DISCONNECT",
    "stompest.protocol.StompSpec.DISCONNECT.encode"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_binary_body": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "stompest._backwards.binaryType",
    "stompest._backwards.textType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.CONTENT_LENGTH_HEADER",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_binary_body_invalid_eof": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.error.StompFrameError",
    "stompest.protocol.StompParser"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_body_allowed_commands": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.error.StompFrameError",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.FRAME_DELIMITER.encode",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_1_2",
    "stompest.protocol.commands.disconnect"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_colon_in_header_value": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.DISCONNECT.encode"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_decode": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.DISCONNECT",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_dont_unescape_bad_characters": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.error.StompFrameError",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.VERSION_1_2",
    "stompest.protocol.commands.send"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_duplicate_headers": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.SEND"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_frame_parse_succeeds": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.SEND"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_frame_without_header_or_body_succeeds": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompParser",
    "stompest.protocol.commands.disconnect"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_frames_with_heart_beats_succeeds": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.commands.disconnect",
    "stompest.protocol.frame.StompHeartBeat"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_frames_with_optional_newlines_succeeds": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "range",
    "stompest._backwards.binaryType",
    "stompest.protocol.StompParser",
    "stompest.protocol.commands.disconnect"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_get_returns_None_if_not_done": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.CONNECT.encode"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_invalid_command": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "stompest.error.StompFrameError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.RECEIPT",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_keep_first_of_repeated_headers": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.CONNECT.encode"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_no_newline": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_reset_succeeds": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.SEND"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_strip_line_delimiter": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_1_2",
    "stompest.protocol.commands.send"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompParserTest.test_unescape": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "stompest.error.StompFrameError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompParser",
    "stompest.protocol.StompSpec.DISCONNECT.encode",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_1_2"
   ]
  },
  "type": "function"
 },
 "stompest.tests.parser_test.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.binaryType": {
  "data": {
   "shadows": "stompest._backwards.binaryType"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.commands": {
  "data": {
   "shadows": "stompest.protocol.commands"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.textType": {
  "data": {
   "shadows": "stompest._backwards.textType"
  },
  "type": "import"
 },
 "stompest.tests.parser_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.session_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.session_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.session_test.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.session_test.StompProtocolError": {
  "data": {
   "shadows": "stompest.error.StompProtocolError"
  },
  "type": "import"
 },
 "stompest.tests.session_test.StompSession": {
  "data": {
   "shadows": "stompest.protocol.StompSession"
  },
  "type": "import"
 },
 "stompest.tests.session_test.StompSessionTest": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "stompest.tests.session_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.session_test.StompSessionTest.test_session_connect": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSession",
    "stompest.protocol.StompSession.CONNECTED",
    "stompest.protocol.StompSession.CONNECTING",
    "stompest.protocol.StompSession.DISCONNECTED",
    "stompest.protocol.StompSpec.CONNECTED",
    "stompest.protocol.StompSpec.HEART_BEAT_HEADER",
    "stompest.protocol.StompSpec.SERVER_HEADER",
    "stompest.protocol.StompSpec.SESSION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_HEADER",
    "stompest.protocol.commands.connect",
    "stompest.protocol.commands.disconnect"
   ]
  },
  "type": "function"
 },
 "stompest.tests.session_test.StompSessionTest.test_session_disconnect": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "list",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSession",
    "stompest.protocol.StompSpec.CONNECTED",
    "stompest.protocol.StompSpec.ID_HEADER",
    "stompest.protocol.StompSpec.SESSION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.commands.disconnect"
   ]
  },
  "type": "function"
 },
 "stompest.tests.session_test.StompSessionTest.test_session_init": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompSession",
    "stompest.protocol.StompSpec.DEFAULT_VERSION",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_1"
   ]
  },
  "type": "function"
 },
 "stompest.tests.session_test.StompSessionTest.test_session_nack": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "frame_",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSession",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER",
    "stompest.protocol.StompSpec.SUBSCRIPTION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.commands.nack"
   ]
  },
  "type": "function"
 },
 "stompest.tests.session_test.StompSessionTest.test_session_subscribe": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "dict",
    "list",
    "object",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSession",
    "stompest.protocol.StompSpec.CONNECTED",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.ID_HEADER",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER",
    "stompest.protocol.StompSpec.SERVER_HEADER",
    "stompest.protocol.StompSpec.SESSION_HEADER",
    "stompest.protocol.StompSpec.SUBSCRIPTION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.StompSpec.VERSION_HEADER",
    "stompest.protocol.commands.message",
    "stompest.protocol.commands.subscribe"
   ]
  },
  "type": "function"
 },
 "stompest.tests.session_test.StompSessionTest.test_session_transaction": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSession",
    "stompest.protocol.StompSpec.ABORT",
    "stompest.protocol.StompSpec.BEGIN",
    "stompest.protocol.StompSpec.COMMIT",
    "stompest.protocol.StompSpec.RECEIPT_HEADER",
    "stompest.protocol.StompSpec.TRANSACTION_HEADER",
    "stompest.protocol.commands.abort",
    "stompest.protocol.commands.begin",
    "stompest.protocol.commands.commit"
   ]
  },
  "type": "function"
 },
 "stompest.tests.session_test.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.session_test.commands": {
  "data": {
   "shadows": "stompest.protocol.commands"
  },
  "type": "import"
 },
 "stompest.tests.session_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.sync_client_integration_test.logging",
    "stompest.tests.sync_client_integration_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.sync_client_integration_test.BROKER": {
  "data": {
   "shadows": "stompest.tests.BROKER"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.HOST": {
  "data": {
   "shadows": "stompest.tests.HOST"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.LOGIN": {
  "data": {
   "shadows": "stompest.tests.LOGIN"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.LOG_CATEGORY": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "stompest.tests.sync_client_integration_test.PASSCODE": {
  "data": {
   "shadows": "stompest.tests.PASSCODE"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.PORT": {
  "data": {
   "shadows": "stompest.tests.PORT"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.PORT_SSL": {
  "data": {
   "shadows": "stompest.tests.PORT_SSL"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "stompest.tests.sync_client_integration_test.LOG_CATEGORY",
    "stompest.tests.sync_client_integration_test.logging",
    "stompest.tests.sync_client_integration_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest._test_4_integration_stomp": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "print",
    "stompest.error.StompConnectionError",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ACK_CLIENT_INDIVIDUAL",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.protocol.StompSpec.ID_HEADER",
    "stompest.protocol.StompSpec.RECEIPT",
    "stompest.protocol.StompSpec.RECEIPT_ID_HEADER",
    "stompest.sync.Stomp",
    "stompest.tests.VIRTUALHOST"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.getConfig": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "stompest.config.StompConfig",
    "stompest.tests.HOST",
    "stompest.tests.LOGIN",
    "stompest.tests.PASSCODE",
    "stompest.tests.PORT"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "stompest.protocol.StompSpec.ACK_AUTO",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.protocol.StompSpec.ID_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.sync.Stomp",
    "stompest.tests.VIRTUALHOST"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_1_integration": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "stompest.protocol.StompSpec.ACK_CLIENT_INDIVIDUAL",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.sync.Stomp",
    "stompest.tests.VIRTUALHOST"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_2_transaction": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "RuntimeError",
    "list",
    "range",
    "sorted",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ACK_CLIENT_INDIVIDUAL",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.protocol.StompSpec.RECEIPT",
    "stompest.protocol.StompSpec.RECEIPT_ID_HEADER",
    "stompest.protocol.StompSpec.TRANSACTION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.sync.Stomp",
    "stompest.tests.VIRTUALHOST",
    "str"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_3_socket_failure_and_replay": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "stompest.error.StompConnectionError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ACK_CLIENT_INDIVIDUAL",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.DISCONNECT",
    "stompest.protocol.StompSpec.ID_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.sync.Stomp",
    "stompest.tests.VIRTUALHOST"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_3_timeout": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "stompest.config.StompConfig",
    "stompest.error.StompConnectionError",
    "stompest.protocol.StompSpec.VERSION_1_0",
    "stompest.sync.Stomp",
    "stompest.tests.LOGIN",
    "stompest.tests.PASSCODE",
    "stompest.tests.VIRTUALHOST"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_4_integration_stomp_1_1": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "stompest.protocol.StompSpec.VERSION_1_1"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_4_integration_stomp_1_2": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "stompest.protocol.StompSpec.VERSION_1_2"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_5_integration_stomp_1_1_heartbeat": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "max",
    "min",
    "print",
    "stompest.error.StompConnectionError",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompSpec.ERROR",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.sync.Stomp",
    "stompest.tests.VIRTUALHOST",
    "stompest.tests.sync_client_integration_test.time"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest.test_6_integration_stomp_1_1_encoding_and_escaping_headers": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "print",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompSpec.ACK_CLIENT_INDIVIDUAL",
    "stompest.protocol.StompSpec.ACK_HEADER",
    "stompest.protocol.StompSpec.ID_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.sync.Stomp",
    "stompest.tests.BROKER",
    "stompest.tests.VIRTUALHOST"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTestSSL": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.sync_client_integration_test.SimpleStompIntegrationTestSSL.getConfig": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "stompest.config.StompConfig",
    "stompest.tests.HOST",
    "stompest.tests.LOGIN",
    "stompest.tests.PASSCODE",
    "stompest.tests.PORT_SSL",
    "stompest.tests.sync_client_integration_test.ssl"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_integration_test.Stomp": {
  "data": {
   "shadows": "stompest.sync.Stomp"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.StompConfig": {
  "data": {
   "shadows": "stompest.config.StompConfig"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.StompConnectionError": {
  "data": {
   "shadows": "stompest.error.StompConnectionError"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.StompProtocolError": {
  "data": {
   "shadows": "stompest.error.StompProtocolError"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.VIRTUALHOST": {
  "data": {
   "shadows": "stompest.tests.VIRTUALHOST"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_integration_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.config.StompConfig",
    "stompest.tests.sync_client_test.HOST",
    "stompest.tests.sync_client_test.PORT",
    "stompest.tests.sync_client_test.logging",
    "stompest.tests.sync_client_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.sync_client_test.CONFIG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "stompest.tests.sync_client_test.HOST": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "stompest.tests.sync_client_test.PORT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "stompest.tests.sync_client_test.SimpleStompTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "stompest.tests.sync_client_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.sync_client_test.SimpleStompTest._get_connect_mock": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "stompest.sync.Stomp",
    "stompest.tests.mock.Mock",
    "stompest.tests.sync_client_test.CONFIG"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest._get_transport_mock": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "stompest.sync.Stomp",
    "stompest.tests.mock.Mock",
    "stompest.tests.sync_client_test.CONFIG"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_ack_writes_correct_frame": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ACK",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_canRead_raises_exception_before_connect": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "stompest.sync.Stomp",
    "stompest.tests.sync_client_test.CONFIG"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_connect_raises_exception_for_bad_host": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "stompest.config.StompConfig",
    "stompest.sync.Stomp"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_connect_when_connected_raises_StompConnectionError": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "stompest.error.StompConnectionError"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_connect_writes_correct_frame": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.CONNECT",
    "stompest.protocol.StompSpec.CONNECTED",
    "stompest.protocol.StompSpec.LOGIN_HEADER",
    "stompest.protocol.StompSpec.PASSCODE_HEADER",
    "stompest.protocol.StompSpec.SESSION_HEADER"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_disconnect_raises_exception_before_connect": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "stompest.sync.Stomp",
    "stompest.tests.sync_client_test.CONFIG"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_error_frame_after_connect_raises_StompProtocolError": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ERROR"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_receiveFrame": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_send_raises_exception_before_connect": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "stompest.error.StompConnectionError",
    "stompest.sync.Stomp",
    "stompest.tests.sync_client_test.CONFIG"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_send_writes_correct_frame": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DESTINATION_HEADER"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_stomp_version_1_1": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "stompest.config.StompConfig",
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER",
    "stompest.protocol.StompSpec.SUBSCRIPTION_HEADER",
    "stompest.protocol.StompSpec.VERSION_1_1",
    "stompest.protocol.commands.nack",
    "stompest.tests.mock.Mock",
    "stompest.tests.sync_client_test.HOST",
    "stompest.tests.sync_client_test.PORT"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_subscribe_matching_and_corner_cases": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "stompest.error.StompProtocolError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_subscribe_raises_exception_before_connect": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception",
    "stompest.sync.Stomp",
    "stompest.tests.sync_client_test.CONFIG"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_subscribe_writes_correct_frame": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.SUBSCRIBE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.SimpleStompTest.test_transaction_writes_correct_frames": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "method",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.ABORT",
    "stompest.protocol.StompSpec.BEGIN",
    "stompest.protocol.StompSpec.COMMIT",
    "stompest.protocol.StompSpec.TRANSACTION_HEADER"
   ]
  },
  "type": "function"
 },
 "stompest.tests.sync_client_test.Stomp": {
  "data": {
   "shadows": "stompest.sync.Stomp"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.StompConfig": {
  "data": {
   "shadows": "stompest.config.StompConfig"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.StompConnectionError": {
  "data": {
   "shadows": "stompest.error.StompConnectionError"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.StompProtocolError": {
  "data": {
   "shadows": "stompest.error.StompProtocolError"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.commands": {
  "data": {
   "shadows": "stompest.protocol.commands"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.mock": {
  "data": {
   "shadows": "stompest.tests.mock"
  },
  "type": "import"
 },
 "stompest.tests.sync_client_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.transport_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.transport_test.logging",
    "stompest.tests.transport_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.transport_test.HOST": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "stompest.tests.transport_test.PORT": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "stompest.tests.transport_test.StompConnectionError": {
  "data": {
   "shadows": "stompest.error.StompConnectionError"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.StompFrame": {
  "data": {
   "shadows": "stompest.protocol.StompFrame"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.StompFrameTransport": {
  "data": {
   "shadows": "stompest.sync.transport.StompFrameTransport"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.StompFrameTransportTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "stompest.tests.transport_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.transport_test.StompFrameTransportTest._generate_bytes": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest._get_receive_mock": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "stompest._backwards.makeBytesFromSequence",
    "stompest.sync.transport.StompFrameTransport",
    "stompest.tests.mock.Mock",
    "stompest.tests.transport_test.HOST",
    "stompest.tests.transport_test.PORT",
    "stompest.tests.transport_test.itertools"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest._get_send_mock": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "stompest.sync.transport.StompFrameTransport",
    "stompest.tests.mock.Mock",
    "stompest.tests.transport_test.HOST",
    "stompest.tests.transport_test.PORT"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest._test_can_connect_eintr_retries_connection": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "stompest.tests.mock.Mock",
    "stompest.tests.mock.patch"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest._test_can_connect_eintr_retries_connection.raise_eintr_once": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "stompest.tests.transport_test.select"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest.test_receive": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.error.StompConnectionError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest.test_receive_binary": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "stompest._backwards.binaryType",
    "stompest.error.StompConnectionError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.CONTENT_LENGTH_HEADER",
    "stompest.protocol.StompSpec.MESSAGE",
    "stompest.tests.transport_test.binascii",
    "str"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest.test_receive_multiple_frames_extra_newlines": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.error.StompConnectionError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest.test_receive_multiple_frames_per_read": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.error.StompConnectionError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest.test_receive_not_connected_raises_and_removes_socket": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "stompest.error.StompConnectionError"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest.test_send": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "stompest._backwards.binaryType",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompFrameTransportTest.test_send_not_connected_raises": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "stompest.error.StompConnectionError",
    "stompest.protocol.StompFrame",
    "stompest.protocol.StompSpec.MESSAGE"
   ]
  },
  "type": "function"
 },
 "stompest.tests.transport_test.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.binaryType": {
  "data": {
   "shadows": "stompest._backwards.binaryType"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.makeBytesFromSequence": {
  "data": {
   "shadows": "stompest._backwards.makeBytesFromSequence"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.mock": {
  "data": {
   "shadows": "stompest.tests.mock"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "stompest.tests.transport_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.tests.util_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "stompest.tests.util_test.unittest"
   ]
  },
  "type": "module"
 },
 "stompest.tests.util_test.UtilTest": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "stompest.tests.util_test.unittest"
   ]
  },
  "type": "class"
 },
 "stompest.tests.util_test.UtilTest.test_filterReservedHeaders": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "stompest.util.filterReservedHeaders"
   ]
  },
  "type": "function"
 },
 "stompest.tests.util_test.filterReservedHeaders": {
  "data": {
   "shadows": "stompest.util.filterReservedHeaders"
  },
  "type": "import"
 },
 "stompest.tests.util_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "stompest.util": {
  "data": {
   "symbols_in_volume": [
    "set",
    "stompest.protocol.StompSpec.DESTINATION_HEADER",
    "stompest.protocol.StompSpec.MESSAGE_ID_HEADER"
   ]
  },
  "type": "module"
 },
 "stompest.util.StompSpec": {
  "data": {
   "shadows": "stompest.protocol.StompSpec"
  },
  "type": "import"
 },
 "stompest.util._RESERVED_HEADERS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "stompest.util.checkattr": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "stompest.util.checkattr._checkattr": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "stompest.util.checkattr._checkattr.__checkattr": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "f",
    "getattr",
    "stompest.util.functools"
   ]
  },
  "type": "function"
 },
 "stompest.util.cloneFrame": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "stompest._backwards.textType",
    "stompest.util.copy",
    "stompest.util.filterReservedHeaders"
   ]
  },
  "type": "function"
 },
 "stompest.util.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "stompest.util.filterReservedHeaders": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict",
    "stompest.util._RESERVED_HEADERS"
   ]
  },
  "type": "function"
 },
 "stompest.util.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "stompest.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "stompest.util.textType": {
  "data": {
   "shadows": "stompest._backwards.textType"
  },
  "type": "import"
 }
}