{
 "configs": {
  "data": {
   "symbols_in_volume": [
    "configs.logging"
   ]
  },
  "type": "module"
 },
 "configs.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "configs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf": {
  "data": {
   "symbols_in_volume": [
    "get_versions",
    "logging.NullHandler",
    "pyxrf.logger",
    "pyxrf.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.NullHandler": {
  "data": {
   "shadows": "logging.NullHandler"
  },
  "type": "import"
 },
 "pyxrf.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyxrf._version": {
  "data": {},
  "type": "module"
 },
 "pyxrf._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pyxrf._version.json",
    "pyxrf._version.version_json"
   ]
  },
  "type": "function"
 },
 "pyxrf._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyxrf._version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyxrf._version.version_json": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyxrf.api": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyxrf.api.formatter",
    "pyxrf.api.logger",
    "pyxrf.api.logging",
    "pyxrf.api.pyxrf_api",
    "pyxrf.api.stream_handler"
   ]
  },
  "type": "module"
 },
 "pyxrf.api.db": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyxrf.api.db_analysis": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyxrf.api.formatter": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyxrf.api.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyxrf.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.api.pyxrf_api": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyxrf.api.stream_handler": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyxrf.core": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.core.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.core.fitting": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.fitting._fitting_admm": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "float",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.linalg.norm",
    "numpy.matmul",
    "numpy.ones",
    "numpy.transpose",
    "numpy.zeros",
    "pyxrf.core.fitting.rfactor_compute",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.fitting._fitting_nnls": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxrf.core.fitting.rfactor_compute",
    "range",
    "scipy.optimize.nnls"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.fitting.fit_spectrum": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_fitting_admm",
    "_fitting_nnls",
    "len",
    "numpy.asarray",
    "numpy.expand_dims",
    "numpy.insert",
    "numpy.moveaxis",
    "numpy.prod",
    "numpy.reshape",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.fitting.nnls": {
  "data": {
   "shadows": "scipy.optimize.nnls"
  },
  "type": "import"
 },
 "pyxrf.core.fitting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.core.fitting.rfactor_compute": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.clip",
    "numpy.matmul",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyxrf.core.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation": {
  "data": {
   "lineno": 670
  },
  "type": "class"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.__init__": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "Exception",
    "pyxrf.core.quant_analysis.logger",
    "pyxrf.core.quant_analysis.os",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation._find_standard_built_in": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation._find_standard_custom": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.clear_standards": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.fill_fluorescence_data_dict": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.fill_quant_fluor_data_dict"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.find_standard": {
  "data": {
   "lineno": 817
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.gen_fluorescence_data_dict": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "float",
    "max",
    "pyxrf.core.quant_analysis.get_quant_fluor_data_dict",
    "pyxrf.core.quant_analysis.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.get_fluorescence_data_dict_text_preview": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.prune_quant_fluor_data_dict",
    "pyxrf.core.quant_analysis.yaml"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.get_suggested_json_fln": {
  "data": {
   "lineno": 1024
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.is_standard_custom": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.load_standards": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "Exception",
    "pyxrf.core.quant_analysis.load_included_xrf_standard_yaml_file",
    "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file",
    "pyxrf.core.quant_analysis.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.save_fluorescence_data_dict": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.prune_quant_fluor_data_dict",
    "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file",
    "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_time"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.set_detector_channel_in_data_dict": {
  "data": {
   "lineno": 962
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.set_distance_to_sample_in_data_dict": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "float",
    "max"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.set_optional_parameters": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_optional"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantEstimation.set_selected_standard": {
  "data": {
   "lineno": 856
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis": {
  "data": {
   "lineno": 1113
  },
  "type": "class"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.__init__": {
  "data": {
   "lineno": 1170
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.add_entry": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "any",
    "pyxrf.core.quant_analysis.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.apply_quantitative_normalization": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "normalize_data_by_scaler",
    "pyxrf.core.quant_analysis.logger",
    "pyxrf.core.quant_analysis.math"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.find_entry_index": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.get_calibrations_selected": {
  "data": {
   "lineno": 1507
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.get_eline_calibration": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.get_eline_info_complete": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "Exception",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.get_entry_text_preview": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.yaml"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.get_file_path_list": {
  "data": {
   "lineno": 1286
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.get_n_entries": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.load_entry": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.remove_entry": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.set_experiment_detector_channel": {
  "data": {
   "lineno": 1530
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.set_experiment_distance_to_sample": {
  "data": {
   "lineno": 1562
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.set_experiment_incident_energy": {
  "data": {
   "lineno": 1546
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis.update_emission_line_list": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis._xrf_quant_fluor_schema": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "pyxrf.core.quant_analysis._xrf_standard_schema": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyxrf.core.quant_analysis._xrf_standard_schema_instructions": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyxrf.core.quant_analysis.compute_standard_element_densities": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "split_compound_mass"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.fill_quant_fluor_data_dict": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "_get_range",
    "float",
    "map",
    "normalize_data_by_scaler",
    "numpy.mean",
    "pyxrf.core.quant_analysis.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.fill_quant_fluor_data_dict._get_range": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.get_quant_fluor_data_dict": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "float",
    "generate_eline_list",
    "max",
    "split_compound_mass"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.jsonschema": {
  "data": {
   "shadows": "jsonschema"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.load_included_xrf_standard_yaml_file": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file",
    "pyxrf.core.quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "IOError",
    "open",
    "pyxrf.core.quant_analysis._xrf_quant_fluor_schema",
    "pyxrf.core.quant_analysis.json",
    "pyxrf.core.quant_analysis.jsonschema",
    "pyxrf.core.quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "list",
    "numpy.sum",
    "open",
    "pyxrf.core.quant_analysis._xrf_standard_schema",
    "pyxrf.core.quant_analysis.jsonschema",
    "pyxrf.core.quant_analysis.math",
    "pyxrf.core.quant_analysis.os",
    "pyxrf.core.quant_analysis.yaml"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyxrf.core.quant_analysis.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.prune_quant_fluor_data_dict": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "IOError",
    "open",
    "pyxrf.core.quant_analysis._xrf_quant_fluor_schema",
    "pyxrf.core.quant_analysis.json",
    "pyxrf.core.quant_analysis.jsonschema",
    "pyxrf.core.quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "IOError",
    "open",
    "pyxrf.core.quant_analysis._xrf_standard_schema_instructions",
    "pyxrf.core.quant_analysis.os",
    "pyxrf.core.quant_analysis.yaml"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_optional": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "int",
    "isinstance",
    "set_quant_fluor_data_dict_time",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_time": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "convert_time_to_nexus_string",
    "time.localtime"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.quant_analysis.ttime": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyxrf.core.quant_analysis.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "pyxrf.core.tests": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.tests.test_fitting": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.tests.test_fitting.DataForFittingTest": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "pyxrf.core.tests.test_fitting.DataForFittingTest.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.DataForFittingTest.generate_dataset": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.insert",
    "numpy.matmul",
    "numpy.mgrid",
    "numpy.moveaxis",
    "numpy.prod",
    "numpy.random.rand",
    "numpy.reshape",
    "numpy.squeeze",
    "pyxrf.core.tests.test_fitting._generate_gaussian_spectra"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.DataForFittingTest.validate_output_weights": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting._fitting_admm": {
  "data": {
   "shadows": "pyxrf.core.fitting._fitting_admm"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_fitting._fitting_nnls": {
  "data": {
   "shadows": "pyxrf.core.fitting._fitting_nnls"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_fitting._generate_gaussian_spectra": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "numpy.exp",
    "numpy.square",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.fit_spectrum": {
  "data": {
   "shadows": "pyxrf.core.fitting.fit_spectrum"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_fitting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_fitting.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_fitting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_fitting.rfactor_compute": {
  "data": {
   "shadows": "pyxrf.core.fitting.rfactor_compute"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_fitting.test_fit_spectrum": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "pyxrf.core.fitting.fit_spectrum",
    "pyxrf.core.tests.test_fitting.DataForFittingTest",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fit_spectrum_arguments": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "AssertionError",
    "pyxrf.core.fitting.fit_spectrum",
    "pyxrf.core.tests.test_fitting.DataForFittingTest",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fit_spectrum_fail": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.zeros",
    "pyxrf.core.fitting.fit_spectrum",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fitting_admm": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.matmul",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.transpose",
    "pyxrf.core.fitting._fitting_admm",
    "pyxrf.core.tests.test_fitting.DataForFittingTest",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fitting_admm_arguments": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "AssertionError",
    "pyxrf.core.fitting._fitting_admm",
    "pyxrf.core.tests.test_fitting.DataForFittingTest",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fitting_admm_fail": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.zeros",
    "pyxrf.core.fitting._fitting_admm",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fitting_nnls": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.matmul",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.transpose",
    "pyxrf.core.fitting._fitting_nnls",
    "pyxrf.core.tests.test_fitting.DataForFittingTest",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fitting_nnls_arguments": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "AssertionError",
    "pyxrf.core.fitting._fitting_nnls",
    "pyxrf.core.tests.test_fitting.DataForFittingTest",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_fitting_nnls_fail": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.zeros",
    "pyxrf.core.fitting._fitting_nnls",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_rfactor_compute_fail": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.delete",
    "numpy.zeros",
    "pyxrf.core.fitting.rfactor_compute",
    "pyxrf.core.tests.test_fitting.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_rfactor_compute_testing_multiple_spectra": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abs",
    "numpy.matmul",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "pyxrf.core.fitting.rfactor_compute"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_fitting.test_rfactor_compute_testing_single_spectrum": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abs",
    "numpy.matmul",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "pyxrf.core.fitting.rfactor_compute",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.tests.test_quant_analysis.ParamQuantEstimation": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.ParamQuantEstimation"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.ParamQuantitativeAnalysis": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis._create_file_with_ref_standards": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.gen_xrf_map_dict",
    "pyxrf.core.tests.test_quant_analysis.os",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis._create_files_with_ref_calib": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "enumerate",
    "pyxrf.core.quant_analysis.ParamQuantEstimation",
    "pyxrf.core.tests.test_quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis._get_data_and_json_path": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_quant_analysis._xrf_standard_fluor_sample",
    "pyxrf.core.tests.test_quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis._standard_data_sample": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyxrf.core.tests.test_quant_analysis._xrf_quant_fluor_schema": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis._xrf_quant_fluor_schema"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis._xrf_standard_fluor_sample": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "pyxrf.core.tests.test_quant_analysis._xrf_standard_schema": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis._xrf_standard_schema"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.compute_standard_element_densities": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.compute_standard_element_densities"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.convert_time_from_nexus_string": {
  "data": {
   "shadows": "pyxrf.core.utils.convert_time_from_nexus_string"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.create_ref_calib_data": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_quant_analysis._create_file_with_ref_standards",
    "pyxrf.core.tests.test_quant_analysis._create_files_with_ref_calib"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.fill_quant_fluor_data_dict": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.fill_quant_fluor_data_dict"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.gen_xrf_map_dict": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "float",
    "map",
    "numpy.ones",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.generate_eline_list": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.generate_eline_list"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.get_quant_fluor_data_dict": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.get_quant_fluor_data_dict"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.jsonschema": {
  "data": {
   "shadows": "jsonschema"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.load_included_xrf_standard_yaml_file": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.load_included_xrf_standard_yaml_file"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.load_xrf_quant_fluor_json_file": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.load_xrf_standard_yaml_file": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.prune_quant_fluor_data_dict": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.prune_quant_fluor_data_dict"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.save_xrf_quant_fluor_json_file": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.save_xrf_standard_yaml_file": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.set_quant_fluor_data_dict_optional": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_optional"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.set_quant_fluor_data_dict_time": {
  "data": {
   "shadows": "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_time"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.split_compound_mass": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.split_compound_mass"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.test_ParamQuantEstimation_1": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.ParamQuantEstimation",
    "pyxrf.core.tests.test_quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_ParamQuantEstimation_2": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "len",
    "pyxrf.core.quant_analysis.ParamQuantEstimation",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.tests.test_quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_ParamQuantEstimation_3": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.ParamQuantEstimation",
    "pyxrf.core.quant_analysis.fill_quant_fluor_data_dict",
    "pyxrf.core.quant_analysis.get_quant_fluor_data_dict",
    "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file",
    "pyxrf.core.quant_analysis.prune_quant_fluor_data_dict",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file",
    "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_optional",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.gen_xrf_map_dict",
    "pyxrf.core.tests.test_quant_analysis.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_ParamQuantitativeAnalysis": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "check_selection",
    "enumerate",
    "len",
    "list",
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "pyxrf.core.quant_analysis.ParamQuantitativeAnalysis",
    "pyxrf.core.tests.test_quant_analysis.create_ref_calib_data",
    "set",
    "set_selection"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_ParamQuantitativeAnalysis.check_selection": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_ParamQuantitativeAnalysis.set_selection": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_compute_standard_element_densities": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "all",
    "list",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "pyxrf.core.quant_analysis.compute_standard_element_densities",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.xrf_utils.validate_element_str"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_fill_quant_fluor_data_dict": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.testing.assert_almost_equal",
    "pyxrf.core.quant_analysis.fill_quant_fluor_data_dict",
    "pyxrf.core.tests.test_quant_analysis._xrf_standard_fluor_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.gen_xrf_map_dict",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_get_quant_fluor_data_dict": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "list",
    "pyxrf.core.quant_analysis._xrf_quant_fluor_schema",
    "pyxrf.core.quant_analysis.get_quant_fluor_data_dict",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.tests.test_quant_analysis.jsonschema",
    "pyxrf.core.xrf_utils.generate_eline_list",
    "pyxrf.core.xrf_utils.split_compound_mass",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_load_included_xrf_standard_yaml_file": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "pyxrf.core.quant_analysis.load_included_xrf_standard_yaml_file"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_load_xrf_quant_fluor_json_file1": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "IOError",
    "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file",
    "pyxrf.core.tests.test_quant_analysis._get_data_and_json_path",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_load_xrf_quant_fluor_json_file2": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis._xrf_quant_fluor_schema",
    "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file",
    "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file",
    "pyxrf.core.tests.test_quant_analysis._get_data_and_json_path",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.jsonschema",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_load_xrf_standard_yaml_file1": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "IOError",
    "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file",
    "pyxrf.core.tests.test_quant_analysis.os",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_load_xrf_standard_yaml_file2": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis._xrf_standard_schema",
    "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.jsonschema",
    "pyxrf.core.tests.test_quant_analysis.os",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_prune_quant_fluor_data_dict": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pyxrf.core.quant_analysis.prune_quant_fluor_data_dict",
    "pyxrf.core.tests.test_quant_analysis._xrf_standard_fluor_sample",
    "pyxrf.core.tests.test_quant_analysis.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_save_xrf_quant_fluor_json_file1": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file",
    "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file",
    "pyxrf.core.tests.test_quant_analysis._get_data_and_json_path"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_save_xrf_quant_fluor_json_file2": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "IOError",
    "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file",
    "pyxrf.core.tests.test_quant_analysis._get_data_and_json_path",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_save_xrf_quant_fluor_json_file3": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file",
    "pyxrf.core.tests.test_quant_analysis._get_data_and_json_path",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.jsonschema",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_save_xrf_quant_fluor_json_file4": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.load_xrf_quant_fluor_json_file",
    "pyxrf.core.quant_analysis.save_xrf_quant_fluor_json_file",
    "pyxrf.core.tests.test_quant_analysis._get_data_and_json_path",
    "pyxrf.core.tests.test_quant_analysis.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_save_xrf_standard_yaml_file1": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.tests.test_quant_analysis.os",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_save_xrf_standard_yaml_file2": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "IOError",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file",
    "pyxrf.core.tests.test_quant_analysis.os",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_save_xrf_standard_yaml_file3": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxrf.core.quant_analysis.load_xrf_standard_yaml_file",
    "pyxrf.core.quant_analysis.save_xrf_standard_yaml_file",
    "pyxrf.core.tests.test_quant_analysis._standard_data_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.os",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_set_quant_fluor_data_dict_optional_1": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "abs",
    "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_optional",
    "pyxrf.core.tests.test_quant_analysis._xrf_standard_fluor_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.utils.convert_time_from_nexus_string",
    "time.localtime",
    "time.mktime"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_set_quant_fluor_data_dict_optional_2": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_optional",
    "pyxrf.core.tests.test_quant_analysis._xrf_standard_fluor_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.tests.test_quant_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.test_set_quant_fluor_data_dict_time": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "abs",
    "pyxrf.core.quant_analysis.set_quant_fluor_data_dict_time",
    "pyxrf.core.tests.test_quant_analysis._xrf_standard_fluor_sample",
    "pyxrf.core.tests.test_quant_analysis.copy",
    "pyxrf.core.utils.convert_time_from_nexus_string",
    "time.localtime",
    "time.mktime"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_quant_analysis.ttime": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_quant_analysis.validate_element_str": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.validate_element_str"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.tests.test_xrf_utils.check_if_eline_is_activated": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.check_if_eline_is_activated"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.check_if_eline_supported": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.check_if_eline_supported"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.generate_eline_list": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.generate_eline_list"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.get_element_atomic_number": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.get_element_atomic_number"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.get_supported_eline_list": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.get_supported_eline_list"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.parse_compound_formula": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.parse_compound_formula"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.split_compound_mass": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.split_compound_mass"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_xrf_utils.test_check_if_eline_is_activated": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.check_if_eline_is_activated"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_check_if_eline_supported": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.check_if_eline_supported"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_generate_eline_list1": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.generate_eline_list"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_generate_eline_list2": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.generate_eline_list"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_generate_eline_list3": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.generate_eline_list"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_get_element_atomic_number": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.get_element_atomic_number"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_get_supported_eline_list": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "pyxrf.core.tests.test_xrf_utils.re",
    "pyxrf.core.xrf_utils.get_supported_eline_list"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_parse_compound_formula1": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.parse_compound_formula",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_parse_compound_formula2": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.parse_compound_formula"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_parse_compound_formula_fail": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.parse_compound_formula"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_split_compound_mass": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.split_compound_mass",
    "set"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_split_compound_mass_fail": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.split_compound_mass"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.test_validate_element_str": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_xrf_utils.pytest",
    "pyxrf.core.xrf_utils.validate_element_str"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_xrf_utils.validate_element_str": {
  "data": {
   "shadows": "pyxrf.core.xrf_utils.validate_element_str"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set_schema": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set",
    "pyxrf.core.tests.test_yaml_param_files.jsonschema"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files._generate_sample_docstring": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.random.choice",
    "type"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files._parse_docstring_parameters": {
  "data": {
   "shadows": "pyxrf.core.yaml_param_files._parse_docstring_parameters"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files._verify_parsed_docstring": {
  "data": {
   "shadows": "pyxrf.core.yaml_param_files._verify_parsed_docstring"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files.create_yaml_parameter_file": {
  "data": {
   "shadows": "pyxrf.core.yaml_param_files.create_yaml_parameter_file"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files.jsonschema": {
  "data": {
   "shadows": "jsonschema"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files.read_yaml_parameter_file": {
  "data": {
   "shadows": "pyxrf.core.yaml_param_files.read_yaml_parameter_file"
  },
  "type": "import"
 },
 "pyxrf.core.tests.test_yaml_param_files.test_create_read_yaml_parameter_file": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set",
    "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set_schema",
    "pyxrf.core.tests.test_yaml_param_files._generate_sample_docstring",
    "pyxrf.core.tests.test_yaml_param_files.jsonschema",
    "pyxrf.core.tests.test_yaml_param_files.os",
    "pyxrf.core.yaml_param_files.create_yaml_parameter_file",
    "pyxrf.core.yaml_param_files.read_yaml_parameter_file"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files.test_create_yaml_parameter_file1": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "IOError",
    "assemble_path",
    "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set",
    "pyxrf.core.tests.test_yaml_param_files._generate_sample_docstring",
    "pyxrf.core.tests.test_yaml_param_files.os",
    "pyxrf.core.tests.test_yaml_param_files.pytest",
    "pyxrf.core.yaml_param_files.create_yaml_parameter_file",
    "pyxrf.core.yaml_param_files.read_yaml_parameter_file"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files.test_create_yaml_parameter_file1.assemble_path": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pyxrf.core.tests.test_yaml_param_files.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files.test_create_yaml_parameter_file2": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "IOError",
    "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set",
    "pyxrf.core.tests.test_yaml_param_files._generate_sample_docstring",
    "pyxrf.core.tests.test_yaml_param_files.os",
    "pyxrf.core.tests.test_yaml_param_files.pytest",
    "pyxrf.core.yaml_param_files.create_yaml_parameter_file"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files.test_parse_docstring_parameters": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AssertionError",
    "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set",
    "pyxrf.core.tests.test_yaml_param_files._generate_sample_docstring",
    "pyxrf.core.tests.test_yaml_param_files.pytest",
    "pyxrf.core.yaml_param_files._parse_docstring_parameters"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.tests.test_yaml_param_files.test_verify_parsed_docstring": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "list",
    "numpy.random.choice",
    "pyxrf.core.tests.test_yaml_param_files._generate_parameter_set",
    "pyxrf.core.tests.test_yaml_param_files._generate_sample_docstring",
    "pyxrf.core.tests.test_yaml_param_files.pytest",
    "pyxrf.core.yaml_param_files._verify_parsed_docstring"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.core.utils.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.core.utils._get_2_sqrt_2_log2": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils._get_sqrt_2_pi": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.convert_time_from_nexus_string": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "time.strptime"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.convert_time_to_nexus_string": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "time.strftime"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.gaussian_area_to_max": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "pyxrf.core.utils._get_sqrt_2_pi"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.gaussian_fwhm_to_sigma": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pyxrf.core.utils._get_2_sqrt_2_log2"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.gaussian_max_to_area": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pyxrf.core.utils._get_sqrt_2_pi"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.gaussian_sigma_to_fwhm": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pyxrf.core.utils._get_2_sqrt_2_log2"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.grid_interpolate": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "_get_range",
    "numpy.mgrid",
    "numpy.stack",
    "pyxrf.core.utils.logger",
    "pyxrf.core.utils.scipy"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.grid_interpolate._get_range": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abs",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyxrf.core.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.core.utils.normalize_data_by_scaler": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.count_nonzero",
    "numpy.mean",
    "numpy.sign",
    "pyxrf.core.utils.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.core.utils.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pyxrf.core.utils.ttime": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyxrf.core.xrf_utils": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.xrf_utils.Element": {
  "data": {
   "shadows": "skbeam.core.constants.XrfElement"
  },
  "type": "import"
 },
 "pyxrf.core.xrf_utils.K_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.K_LINE"
  },
  "type": "import"
 },
 "pyxrf.core.xrf_utils.L_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.L_LINE"
  },
  "type": "import"
 },
 "pyxrf.core.xrf_utils.M_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.M_LINE"
  },
  "type": "import"
 },
 "pyxrf.core.xrf_utils.check_if_eline_is_activated": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "pyxrf.core.xrf_utils.re",
    "skbeam.core.constants.XrfElement"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.check_if_eline_supported": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "pyxrf.core.xrf_utils.get_supported_eline_list",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.generate_eline_list": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxrf.core.xrf_utils.check_if_eline_is_activated",
    "pyxrf.core.xrf_utils.check_if_eline_supported",
    "pyxrf.core.xrf_utils.re"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.get_element_atomic_number": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyxrf.core.xrf_utils.xraylib"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.get_supported_eline_list": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "skbeam.core.fitting.xrf_model.K_LINE",
    "skbeam.core.fitting.xrf_model.L_LINE",
    "skbeam.core.fitting.xrf_model.M_LINE"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.parse_compound_formula": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError",
    "SystemError",
    "pyxrf.core.xrf_utils.xraylib",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.core.xrf_utils.split_compound_mass": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyxrf.core.xrf_utils.parse_compound_formula"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.validate_element_str": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyxrf.core.xrf_utils.get_element_atomic_number"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.xrf_utils.xraylib": {
  "data": {
   "shadows": "xraylib"
  },
  "type": "import"
 },
 "pyxrf.core.yaml_param_files": {
  "data": {},
  "type": "module"
 },
 "pyxrf.core.yaml_param_files._parse_docstring_parameters": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "list",
    "pyxrf.core.yaml_param_files.re",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.yaml_param_files._user_instructions_on_editing_yaml": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "pyxrf.core.yaml_param_files._verify_parsed_docstring": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pyxrf.core.yaml_param_files.create_yaml_parameter_file": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "IOError",
    "open",
    "pyxrf.core.yaml_param_files._parse_docstring_parameters",
    "pyxrf.core.yaml_param_files._user_instructions_on_editing_yaml",
    "pyxrf.core.yaml_param_files._verify_parsed_docstring",
    "pyxrf.core.yaml_param_files.os",
    "pyxrf.core.yaml_param_files.yaml"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.yaml_param_files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.core.yaml_param_files.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.core.yaml_param_files.read_yaml_parameter_file": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "IOError",
    "open",
    "pyxrf.core.yaml_param_files.os",
    "pyxrf.core.yaml_param_files.yaml"
   ]
  },
  "type": "function"
 },
 "pyxrf.core.yaml_param_files.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "pyxrf.db_config": {
  "data": {},
  "type": "module"
 },
 "pyxrf.db_config.hxn_db_config": {
  "data": {
   "symbols_in_volume": [
    "databroker.Broker.named",
    "hxntools.handlers.timepix.TimepixHDF5Handler",
    "hxntools.handlers.timepix.TimepixHDF5Handler._handler_name",
    "hxntools.handlers.xspress3.Xspress3HDF5Handler",
    "hxntools.handlers.xspress3.Xspress3HDF5Handler.HANDLER_NAME",
    "pyxrf.db_config.hxn_db_config.db"
   ]
  },
  "type": "module"
 },
 "pyxrf.db_config.hxn_db_config.Broker": {
  "data": {
   "shadows": "databroker.Broker"
  },
  "type": "import"
 },
 "pyxrf.db_config.hxn_db_config.TimepixHDF5Handler": {
  "data": {
   "shadows": "hxntools.handlers.timepix.TimepixHDF5Handler"
  },
  "type": "import"
 },
 "pyxrf.db_config.hxn_db_config.Xspress3HDF5Handler": {
  "data": {
   "shadows": "hxntools.handlers.xspress3.Xspress3HDF5Handler"
  },
  "type": "import"
 },
 "pyxrf.db_config.hxn_db_config.db": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyxrf.db_config.srx_db_config": {
  "data": {
   "symbols_in_volume": [
    "databroker.Broker.named",
    "databroker._core.register_builtin_handlers",
    "pyxrf.db_config.srx_db_config.BulkDexela",
    "pyxrf.db_config.srx_db_config.BulkMerlin",
    "pyxrf.db_config.srx_db_config.BulkXSPRESS",
    "pyxrf.db_config.srx_db_config.SISHDF5Handler",
    "pyxrf.db_config.srx_db_config.ZebraHDF5Handler",
    "pyxrf.db_config.srx_db_config.db"
   ]
  },
  "type": "module"
 },
 "pyxrf.db_config.srx_db_config.Broker": {
  "data": {
   "shadows": "databroker.Broker"
  },
  "type": "import"
 },
 "pyxrf.db_config.srx_db_config.BulkDexela": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.srx_db_config.BulkDexela.__call__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.BulkDexela.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyxrf.db_config.srx_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.BulkMerlin": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyxrf.db_config.srx_db_config.BulkXSPRESS"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.srx_db_config.BulkMerlin.__call__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.BulkXSPRESS": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.srx_db_config.BulkXSPRESS.__call__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.BulkXSPRESS.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pyxrf.db_config.srx_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.HandlerBase": {
  "data": {
   "shadows": "databroker.assets.handlers.HandlerBase"
  },
  "type": "import"
 },
 "pyxrf.db_config.srx_db_config.SISHDF5Handler": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.srx_db_config.SISHDF5Handler.__call__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.SISHDF5Handler.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyxrf.db_config.srx_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.ZebraHDF5Handler": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.srx_db_config.ZebraHDF5Handler.__call__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.ZebraHDF5Handler.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyxrf.db_config.srx_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.srx_db_config.db": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyxrf.db_config.srx_db_config.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyxrf.db_config.srx_db_config.register_builtin_handlers": {
  "data": {
   "shadows": "databroker._core.register_builtin_handlers"
  },
  "type": "import"
 },
 "pyxrf.db_config.tes_db_config": {
  "data": {
   "symbols_in_volume": [
    "databroker.Broker.named",
    "databroker._core.register_builtin_handlers",
    "pyxrf.db_config.tes_db_config.BulkXSPRESS",
    "pyxrf.db_config.tes_db_config.db"
   ]
  },
  "type": "module"
 },
 "pyxrf.db_config.tes_db_config.Broker": {
  "data": {
   "shadows": "databroker.Broker"
  },
  "type": "import"
 },
 "pyxrf.db_config.tes_db_config.BulkXSPRESS": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.tes_db_config.BulkXSPRESS.__call__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pyxrf.db_config.tes_db_config.BulkXSPRESS.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pyxrf.db_config.tes_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.tes_db_config.HandlerBase": {
  "data": {
   "shadows": "databroker.assets.handlers.HandlerBase"
  },
  "type": "import"
 },
 "pyxrf.db_config.tes_db_config.db": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyxrf.db_config.tes_db_config.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyxrf.db_config.tes_db_config.register_builtin_handlers": {
  "data": {
   "shadows": "databroker._core.register_builtin_handlers"
  },
  "type": "import"
 },
 "pyxrf.db_config.xfm_db_config": {
  "data": {
   "symbols_in_volume": [
    "databroker.Broker.named",
    "databroker._core.register_builtin_handlers",
    "pyxrf.db_config.xfm_db_config.BulkXSPRESS",
    "pyxrf.db_config.xfm_db_config.SISHDF5Handler",
    "pyxrf.db_config.xfm_db_config.ZebraHDF5Handler",
    "pyxrf.db_config.xfm_db_config.db"
   ]
  },
  "type": "module"
 },
 "pyxrf.db_config.xfm_db_config.Broker": {
  "data": {
   "shadows": "databroker.Broker"
  },
  "type": "import"
 },
 "pyxrf.db_config.xfm_db_config.BulkXSPRESS": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.xfm_db_config.BulkXSPRESS.__call__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pyxrf.db_config.xfm_db_config.BulkXSPRESS.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pyxrf.db_config.xfm_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.xfm_db_config.HandlerBase": {
  "data": {
   "shadows": "databroker.assets.handlers.HandlerBase"
  },
  "type": "import"
 },
 "pyxrf.db_config.xfm_db_config.SISHDF5Handler": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.xfm_db_config.SISHDF5Handler.__call__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyxrf.db_config.xfm_db_config.SISHDF5Handler.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyxrf.db_config.xfm_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.xfm_db_config.ZebraHDF5Handler": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "databroker.assets.handlers.HandlerBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.db_config.xfm_db_config.ZebraHDF5Handler.__call__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "pyxrf.db_config.xfm_db_config.ZebraHDF5Handler.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyxrf.db_config.xfm_db_config.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.db_config.xfm_db_config.db": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyxrf.db_config.xfm_db_config.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyxrf.db_config.xfm_db_config.register_builtin_handlers": {
  "data": {
   "shadows": "databroker._core.register_builtin_handlers"
  },
  "type": "import"
 },
 "pyxrf.gui": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyxrf.gui.enaml",
    "pyxrf.gui.logging",
    "pyxrf.gui.run"
   ]
  },
  "type": "module"
 },
 "pyxrf.gui.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.gui.GuiHandler": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyxrf.gui.logging"
   ]
  },
  "type": "class"
 },
 "pyxrf.gui.GuiHandler.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyxrf.gui.GuiHandler",
    "pyxrf.gui.LogModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyxrf.gui.GuiHandler.handle": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyxrf.gui.LogModel": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Str"
   ]
  },
  "type": "class"
 },
 "pyxrf.gui.QtApplication": {
  "data": {
   "shadows": "enaml.qt.qt_application.QtApplication"
  },
  "type": "import"
 },
 "pyxrf.gui.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.gui.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.gui.enaml": {
  "data": {
   "shadows": "enaml"
  },
  "type": "import"
 },
 "pyxrf.gui.get_defaults": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pyxrf.gui.logger",
    "pyxrf.gui.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.gui.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyxrf.gui.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.gui.run": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "DrawImageAdvanced",
    "DrawImageRGB",
    "FileIOModel",
    "Fit1D",
    "GuessParamModel",
    "LinePlotModel",
    "SettingModel",
    "XRFGui",
    "enaml.qt.qt_application.QtApplication",
    "pyxrf.gui.GuiHandler",
    "pyxrf.gui.get_defaults",
    "pyxrf.gui.logger",
    "pyxrf.gui.logging"
   ]
  },
  "type": "function"
 },
 "pyxrf.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyxrf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.command_tools": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyxrf.model.command_tools.formatter",
    "pyxrf.model.command_tools.logger",
    "pyxrf.model.command_tools.logging",
    "pyxrf.model.command_tools.pyxrf_batch",
    "pyxrf.model.command_tools.stream_handler"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.command_tools.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.define_range": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.define_range"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.fit_data_multi_files": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "pyxrf.model.command_tools.fit_pixel_per_file_no_multi",
    "pyxrf.model.command_tools.logger",
    "pyxrf.model.command_tools.multiprocessing",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.command_tools.fit_each_pixel_with_nnls": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "pyxrf.model.command_tools.copy",
    "skbeam.core.fitting.xrf_model.define_range",
    "skbeam.core.fitting.xrf_model.linear_spectrum_fitting"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.command_tools.fit_pixel_data_and_save": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ParamQuantitativeAnalysis",
    "RuntimeError",
    "get_positions_set",
    "get_scaler_set",
    "isinstance",
    "len",
    "list",
    "open",
    "output_data",
    "print",
    "pyxrf.model.command_tools.copy",
    "pyxrf.model.command_tools.json",
    "pyxrf.model.command_tools.logger",
    "pyxrf.model.command_tools.os",
    "pyxrf.model.command_tools.re",
    "pyxrf.model.command_tools.time",
    "range",
    "read_MAPS",
    "read_hdf_APS",
    "save_fitdata_to_hdf",
    "single_pixel_fitting_controller",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.command_tools.fit_pixel_data_and_save.get_positions_set": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "pyxrf.model.command_tools.fit_pixel_data_and_save.get_scaler_set": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "pyxrf.model.command_tools.fit_pixel_per_file_no_multi": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.sum",
    "numpy.zeros",
    "pyxrf.model.command_tools.h5py",
    "pyxrf.model.command_tools.os",
    "range",
    "skbeam.core.fitting.xrf_model.linear_spectrum_fitting"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.command_tools.formatter": {
  "data": {
   "lineno": 801
  },
  "type": "constant"
 },
 "pyxrf.model.command_tools.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.linear_spectrum_fitting": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.linear_spectrum_fitting"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.logger": {
  "data": {
   "lineno": 797
  },
  "type": "constant"
 },
 "pyxrf.model.command_tools.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.pyxrf_batch": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "any",
    "collections.abc.Iterable",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "print",
    "pyxrf.model.command_tools.fit_pixel_data_and_save",
    "pyxrf.model.command_tools.glob",
    "pyxrf.model.command_tools.os",
    "pyxrf.model.command_tools.re",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.command_tools.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.model.command_tools.stream_handler": {
  "data": {
   "lineno": 803
  },
  "type": "constant"
 },
 "pyxrf.model.command_tools.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyxrf.model.data_to_analysis_store": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.datum": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.descriptor": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.event": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.resource": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.start": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "event_model.compose_run"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.ComposeDataForDB.stop": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.compose_run": {
  "data": {
   "shadows": "event_model.compose_run"
  },
  "type": "import"
 },
 "pyxrf.model.data_to_analysis_store.db": {
  "data": {
   "shadows": "pyxrf.api.db"
  },
  "type": "import"
 },
 "pyxrf.model.data_to_analysis_store.db_analysis": {
  "data": {
   "shadows": "pyxrf.api.db_analysis"
  },
  "type": "import"
 },
 "pyxrf.model.data_to_analysis_store.fitting_result_sender": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "pyxrf.model.data_to_analysis_store.pyxrf",
    "pyxrf.model.data_to_analysis_store.time"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.get_analysis_result": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "list",
    "print",
    "pyxrf.api.db_analysis",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.data_to_analysis_store.pyxrf": {
  "data": {
   "shadows": "pyxrf"
  },
  "type": "import"
 },
 "pyxrf.model.data_to_analysis_store.save_data_to_db": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "next",
    "print",
    "processor",
    "pyxrf.api.db",
    "pyxrf.api.db_analysis",
    "pyxrf.api.db_analysis.insert",
    "pyxrf.model.data_to_analysis_store.ComposeDataForDB",
    "pyxrf.model.data_to_analysis_store.fitting_result_sender"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.simulated_result": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.data_to_analysis_store.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.draw_image.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.draw_image.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.Bool": {
  "data": {
   "shadows": "atom.api.Bool"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.Dict": {
  "data": {
   "shadows": "atom.api.Dict"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Dict",
    "atom.api.Float",
    "atom.api.Int",
    "atom.api.List",
    "atom.api.Str",
    "atom.api.Typed",
    "matplotlib.figure.Figure",
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ParamQuantitativeAnalysis",
    "matplotlib.pyplot.figure",
    "pyxrf.model.draw_image.matplotlib"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._change_image_plot_method": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._get_scaler_data": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "IndexError",
    "atom.api.observe",
    "numpy.max",
    "numpy.min",
    "pyxrf.model.draw_image.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._on_change_distance_to_sample": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._on_change_incident_energy": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._update_file": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "IndexError",
    "atom.api.observe",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._update_gi": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._update_pp": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._update_qn": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ParamQuantitativeAnalysis",
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced._update_scale": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.data_dict_update": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.format_img_wizard_limit": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "abs",
    "pyxrf.model.draw_image.math"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.get_activated_num": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "pyxrf.model.draw_image.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.get_default_items": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.get_detector_channel_name": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyxrf.model.draw_image.re"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.get_selected_scaler_name": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.init_plot_status": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "KeyError",
    "atom.api.observe",
    "len",
    "list",
    "pyxrf.model.draw_image.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.load_quantitative_calibration_data": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.plot_deselect_all": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.plot_select_all": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.record_selected": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "list",
    "pyxrf.model.draw_image.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.remove_quantitative_calibration_data": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "Exception",
    "pyxrf.model.draw_image.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.reset_low_high": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.reset_to_default": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.set_default_dict": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyxrf.model.draw_image.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.set_incident_energy": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.set_low_high_value": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "normalize_data_by_scaler",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.set_stat_for_all": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.show_image": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "_adjust_data_range_using_min_ratio",
    "_compute_equal_axes_ranges",
    "abs",
    "collections.OrderedDict",
    "enumerate",
    "float",
    "grid_interpolate",
    "int",
    "len",
    "matplotlib.colors.LogNorm",
    "matplotlib.ticker.LogFormatter",
    "matplotlib.ticker.MaxNLocator",
    "mpl_toolkits.axes_grid1.ImageGrid",
    "normalize_data_by_scaler",
    "numpy.ceil",
    "numpy.count_nonzero",
    "numpy.max",
    "numpy.min",
    "numpy.sqrt",
    "pyxrf.model.draw_image.logger",
    "pyxrf.model.draw_image.math",
    "pyxrf.model.draw_image.six",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.show_image._adjust_data_range_using_min_ratio": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.show_image._compute_equal_axes_ranges": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.update_img_wizard_items": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.DrawImageAdvanced.update_quant_calibration_gui": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "pyxrf.model.draw_image.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.Float": {
  "data": {
   "shadows": "atom.api.Float"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.ImageGrid": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.ImageGrid"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.Int": {
  "data": {
   "shadows": "atom.api.Int"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.List": {
  "data": {
   "shadows": "atom.api.List"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.LogNorm": {
  "data": {
   "shadows": "matplotlib.colors.LogNorm"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.Typed": {
  "data": {
   "shadows": "atom.api.Typed"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyxrf.model.draw_image.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.mticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.observe": {
  "data": {
   "shadows": "atom.api.observe"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb": {
  "data": {
   "symbols_in_volume": [
    "numpy.seterr",
    "pyxrf.model.draw_image_rgb.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.draw_image_rgb.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.Axes": {
  "data": {
   "shadows": "matplotlib.figure.Axes"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.Bool": {
  "data": {
   "shadows": "atom.api.Bool"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.Dict": {
  "data": {
   "shadows": "atom.api.Dict"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Dict",
    "atom.api.Int",
    "atom.api.List",
    "atom.api.Str",
    "atom.api.Typed",
    "matplotlib.figure.Axes",
    "matplotlib.figure.Figure",
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB._get_scaler_data": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.draw_image_rgb.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB._update_file": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "IndexError",
    "atom.api.observe",
    "list",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB._update_gi": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB._update_pp": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.data_dict_update": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.get_activated_num": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pyxrf.model.draw_image_rgb.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.init_plot_status": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "atom.api.observe",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.init_rgb": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.preprocess_data": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "len",
    "normalize_data_by_scaler",
    "numpy.count_nonzero",
    "pyxrf.model.draw_image_rgb.logger",
    "pyxrf.model.draw_image_rgb.six",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.set_stat_for_all": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.show_image": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "IndexError",
    "_adjust_data_range_using_min_ratio",
    "_compute_equal_axes_ranges",
    "_norm_data",
    "_stretch_range",
    "dict",
    "grid_interpolate",
    "len",
    "make_cube",
    "matplotlib.patches.Patch",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.setp",
    "matplotlib.ticker.MaxNLocator",
    "mpl_toolkits.axes_grid1.axes_rgb.make_rgb_axes",
    "numpy.asarray",
    "numpy.ones",
    "pyxrf.model.draw_image_rgb.logger",
    "pyxrf.model.draw_image_rgb.math"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.show_image._adjust_data_range_using_min_ratio": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.show_image._compute_equal_axes_ranges": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.show_image._norm_data": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.DrawImageRGB.show_image._stretch_range": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.Int": {
  "data": {
   "shadows": "atom.api.Int"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.List": {
  "data": {
   "shadows": "atom.api.List"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.Typed": {
  "data": {
   "shadows": "atom.api.Typed"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyxrf.model.draw_image_rgb.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.make_cube": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.draw_image_rgb.make_rgb_axes": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.axes_rgb.make_rgb_axes"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.mticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.observe": {
  "data": {
   "shadows": "atom.api.observe"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyxrf.model.draw_image_rgb.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyxrf.model.fileio": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.fileio.logging",
    "pyxrf.model.fileio.os",
    "pyxrf.model.fileio.pyxrf",
    "pyxrf.model.fileio.warnings"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.fileio.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.Bool": {
  "data": {
   "shadows": "atom.api.Bool"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.DataSelection": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Enum",
    "atom.api.Int",
    "atom.api.List",
    "atom.api.Str",
    "atom.api.Typed",
    "numpy.ndarray",
    "pyxrf.model.fileio.plot_as"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.fileio.DataSelection._update_roi": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "atom.api.observe",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.DataSelection.delete_points": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "pyxrf.model.fileio.DataSelection.get_sum": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "SpectrumCalculator",
    "len",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.Dict": {
  "data": {
   "shadows": "atom.api.Dict"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.Enum": {
  "data": {
   "shadows": "atom.api.Enum"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.FileIOModel": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Dict",
    "atom.api.Float",
    "atom.api.Int",
    "atom.api.List",
    "atom.api.Str",
    "atom.api.Typed",
    "collections.OrderedDict",
    "numpy.ndarray",
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.fileio.FileIOModel.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel._get_pyxrf_version_str": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Exception",
    "distutils.version.LooseVersion",
    "len",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.pyxrf_version",
    "pyxrf.model.fileio.requests"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel._metadata_update_program_state": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pyxrf.model.fileio.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel._update_fname": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "atom.api.observe",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.apply_mask": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "IOError",
    "PIL.Image.open",
    "len",
    "numpy.array",
    "numpy.load",
    "numpy.loadtxt",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.os",
    "pyxrf.model.fileio.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.choose_file": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "IndexError",
    "atom.api.observe",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.get_selected_detector_channel": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.load_data_runid": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "int",
    "list",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.os",
    "render_data_to_gui"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.update_more_data": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "atom.api.observe",
    "file_handler",
    "list",
    "pyxrf.model.fileio.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.window_title_clear": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.window_title_set_file_name": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "pyxrf.model.fileio.FileIOModel.window_title_set_run_id": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "pyxrf.model.fileio.Float": {
  "data": {
   "shadows": "atom.api.Float"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.Int": {
  "data": {
   "shadows": "atom.api.Int"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.List": {
  "data": {
   "shadows": "atom.api.List"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.SpectrumCalculator": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.fileio.SpectrumCalculator.__init__": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "pyxrf.model.fileio.SpectrumCalculator.get_spectrum": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.Typed": {
  "data": {
   "shadows": "atom.api.Typed"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.animation": {
  "data": {
   "shadows": "matplotlib.animation"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.combine_data_to_recon": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "helper_decode_list",
    "len",
    "max",
    "numpy.zeros",
    "print",
    "pyxrf.model.fileio.h5py",
    "pyxrf.model.fileio.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.create_movie": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "matplotlib.animation.FuncAnimation",
    "matplotlib.animation.writers",
    "matplotlib.pyplot.subplots",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.create_movie.update_img": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.export_to_view": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "helper_decode_list",
    "numpy.concatenate",
    "pandas.DataFrame",
    "print",
    "pyxrf.model.fileio.h5py",
    "pyxrf.model.fileio.os",
    "pyxrf.model.fileio.sep_v"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.file_handler": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.sys",
    "read_MAPS",
    "read_hdf_APS"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.get_data_from_folder_helper": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "PIL.Image.open",
    "numpy.array",
    "numpy.fliplr",
    "numpy.loadtxt",
    "pyxrf.model.fileio.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.get_data_from_multiple_folders_helper": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "pyxrf.model.fileio.get_data_from_folder_helper"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.get_fit_data": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "pyxrf.model.fileio.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.get_header": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.get_roi_sum": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.h5file_for_recon": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "numpy.asarray",
    "pyxrf.model.fileio.h5py"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyxrf.model.fileio.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.make_hdf_stitched": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "list",
    "open",
    "print",
    "pyxrf.model.fileio.json",
    "pyxrf.model.fileio.os",
    "pyxrf.model.fileio.read_hdf_to_stitch",
    "pyxrf.model.fileio.save_fitdata_to_hdf",
    "pyxrf.model.fileio.sep_v",
    "pyxrf.model.fileio.six",
    "write_db_to_hdf"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.observe": {
  "data": {
   "shadows": "atom.api.observe"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.output_data": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "RuntimeError",
    "grid_interpolate",
    "output_data_to_tiff",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.re"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.output_data_to_tiff": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_save_data",
    "normalize_data_by_scaler",
    "numpy.mean",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.output_data_to_tiff._save_data": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float32",
    "numpy.savetxt",
    "pyxrf.model.fileio.os",
    "skimage.io.imsave"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.plot_as": {
  "data": {
   "lineno": 412
  },
  "type": "constant"
 },
 "pyxrf.model.fileio.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.pyxrf": {
  "data": {
   "shadows": "pyxrf"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.pyxrf_version": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyxrf.model.fileio.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.read_MAPS": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "KeyError",
    "ScanMetadataXRF",
    "collections.OrderedDict",
    "enumerate",
    "numpy.flipud",
    "numpy.rot90",
    "numpy.sum",
    "print",
    "pyxrf.model.fileio.DataSelection",
    "pyxrf.model.fileio.h5py",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.read_hdf_APS": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "KeyError",
    "ScanMetadataXRF",
    "collections.OrderedDict",
    "enumerate",
    "get_fit_data",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.ndarray",
    "print",
    "pyxrf.model.fileio.DataSelection",
    "pyxrf.model.fileio.h5py",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.os",
    "pyxrf.model.fileio.six",
    "range",
    "retrieve_data_from_hdf_suitcase"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.read_hdf_to_stitch": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.array",
    "numpy.zeros",
    "pyxrf.model.fileio.copy",
    "pyxrf.model.fileio.read_hdf_APS",
    "pyxrf.model.fileio.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.read_xspress3_data": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sum",
    "pyxrf.model.fileio.h5py",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.render_data_to_gui": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "fetch_data_from_db",
    "len",
    "numpy.array",
    "numpy.copy",
    "pyxrf.model.fileio.DataSelection",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.retrieve_data_from_hdf_suitcase": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "flip_data",
    "isinstance",
    "len",
    "numpy.array",
    "open",
    "pyxrf.model.fileio.ast",
    "pyxrf.model.fileio.h5py",
    "pyxrf.model.fileio.json",
    "pyxrf.model.fileio.logger",
    "pyxrf.model.fileio.os",
    "pyxrf.model.fileio.sep_v",
    "pyxrf.model.fileio.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.save_fitdata_to_hdf": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "pyxrf.model.fileio.h5py",
    "pyxrf.model.fileio.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.sep_v": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyxrf.model.fileio.sio": {
  "data": {
   "shadows": "skimage.io"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.spec_to_hdf": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "helper_encode_list",
    "numpy.loadtxt",
    "numpy.reshape",
    "numpy.transpose",
    "numpy.zeros",
    "pandas.read_csv",
    "pyxrf.model.fileio.get_header",
    "pyxrf.model.fileio.h5py",
    "pyxrf.model.fileio.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.stitch_fitted_results": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "numpy.savetxt",
    "pyxrf.model.fileio.get_data_from_multiple_folders_helper",
    "pyxrf.model.fileio.glob",
    "pyxrf.model.fileio.os",
    "pyxrf.model.fileio.sep_v"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fileio.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pyxrf.model.fileio.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.fit_spectrum.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.Bool": {
  "data": {
   "shadows": "atom.api.Bool"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.Dict": {
  "data": {
   "shadows": "atom.api.Dict"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.Element": {
  "data": {
   "shadows": "skbeam.fluorescence.XrfElement"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.Fit1D": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ParamQuantEstimation",
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Dict",
    "atom.api.Float",
    "atom.api.Int",
    "atom.api.List",
    "atom.api.Str",
    "atom.api.Typed",
    "collections.OrderedDict",
    "numpy.ndarray",
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.fit_spectrum.Fit1D.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ElementController",
    "collections.OrderedDict",
    "collections.deque",
    "pyxrf.model.fit_spectrum.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D._compute_fwhm_base": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "gaussian_fwhm_to_sigma",
    "gaussian_sigma_to_fwhm",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D._qe_standard_distance_changed": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Exception",
    "atom.api.observe",
    "float"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D._selected_element_changed": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "atom.api.observe",
    "len",
    "list",
    "pyxrf.model.fit_spectrum.logger",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D._update_userpeak_energy": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D._update_userpeak_fwhm": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "gaussian_fwhm_to_sigma"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.apply_default_param": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.copy",
    "pyxrf.model.fit_spectrum.six",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.assign_fitting_result": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.calculate_roi_sum": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "int",
    "numpy.sum",
    "pyxrf.model.fit_spectrum.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.create_EC_list": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "PreFitStatus",
    "collections.OrderedDict",
    "float",
    "get_Z",
    "get_energy",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.data_sets_update": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.data_title_update": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.define_range": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "define_range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.dict_to_plot_update": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.energy_bound_high_update": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.energy_bound_low_update": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.exp_data_all_update": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.exp_data_update": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.filename_update": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.fit_data": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "skbeam.core.fitting.xrf_model.ModelSpectrum"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.fit_multiple": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "cal_r2",
    "combine_lines",
    "extract_strategy",
    "pyxrf.model.fit_spectrum.copy",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.six",
    "pyxrf.model.fit_spectrum.time",
    "skbeam.core.fitting.xrf_model.register_strategy",
    "skbeam.core.fitting.xrf_model.set_parameter_bound",
    "trim_escape_peak"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.fit_single_pixel": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "len",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.os",
    "pyxrf.model.fit_spectrum.time",
    "save_fitted_fig",
    "single_pixel_fitting_controller"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.get_background": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "skbeam.core.fitting.background.snip_method"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.get_latest_single_pixel_fitting_data": {
  "data": {
   "lineno": 1049
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.get_profile": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "calculate_profile",
    "len",
    "numpy.zeros",
    "pyxrf.model.fit_spectrum.six",
    "trim_escape_peak"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.get_qe_standard_distance_as_float": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "Exception",
    "float"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.img_dict_update": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.img_title_update": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.keep_size": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.output_2Dimage": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "list",
    "output_data",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.os",
    "pyxrf.model.fit_spectrum.re"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.output_summed_data_fit": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.savetxt",
    "pyxrf.model.fit_spectrum.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.param_quant_analysis_update": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.quantitative_normalization_update": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.read_param_from_file": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "open",
    "pyxrf.model.fit_spectrum.copy",
    "pyxrf.model.fit_spectrum.json"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.result_folder_changed": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.runid_update": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.save2Dmap_to_hdf": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "IOError",
    "len",
    "pyxrf.model.fit_spectrum.os",
    "pyxrf.model.fit_spectrum.re",
    "save_fitdata_to_hdf"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.save_pixel_fitting_to_db": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "save_data_to_db"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.save_result": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "FileNotFoundError",
    "list",
    "numpy.round",
    "numpy.sum",
    "open",
    "print",
    "pyxrf.model.fit_spectrum.lmfit",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.os",
    "pyxrf.model.fit_spectrum.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.scaler_index_update": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.select_index_by_eline_name": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "Exception",
    "float",
    "gaussian_sigma_to_fwhm"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_default_param": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_name_list": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "list",
    "pyxrf.model.fit_spectrum.logger",
    "update_param_from_element"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_param_with_result": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "skbeam.core.fitting.xrf_model.update_parameter_dict"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_strategy1": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.fit_spectrum.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_strategy2": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.fit_spectrum.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_strategy3": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.fit_spectrum.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_strategy4": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.fit_spectrum.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_strategy5": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.fit_spectrum.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Fit1D.update_userpeak": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "gaussian_area_to_max",
    "gaussian_fwhm_to_sigma",
    "gaussian_max_to_area",
    "max",
    "numpy.clip",
    "pyxrf.model.fit_spectrum.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.Float": {
  "data": {
   "shadows": "atom.api.Float"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.Int": {
  "data": {
   "shadows": "atom.api.Int"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.K_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.K_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.L_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.L_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.List": {
  "data": {
   "shadows": "atom.api.List"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.M_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.M_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.ModelSpectrum": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.ModelSpectrum"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.TRANSITIONS_LOOKUP": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.TRANSITIONS_LOOKUP"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.Typed": {
  "data": {
   "shadows": "atom.api.Typed"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.animation": {
  "data": {
   "shadows": "matplotlib.animation"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.bin_data_energy2D": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.bin_data_energy3D": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.bin_data_pixel": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.bin_data_spacial": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.cal_r2": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.calculate_area": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "dict",
    "get_branching_ratio",
    "len",
    "numpy.sum",
    "range",
    "skbeam.core.fitting.xrf_model.K_LINE",
    "skbeam.core.fitting.xrf_model.L_LINE",
    "skbeam.core.fitting.xrf_model.M_LINE"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.combine_lines": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "len",
    "pyxrf.model.fit_spectrum.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.construct_linear_model": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.construct_linear_model"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.conv_expdata_energy": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.convolve"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.define_param_bound_type": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "list",
    "pyxrf.model.fit_spectrum.copy",
    "pyxrf.model.fit_spectrum.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.extract_result": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.extract_strategy": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.copy",
    "pyxrf.model.fit_spectrum.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.fit_per_line_nnls": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.mean",
    "numpy.sum",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.math",
    "range",
    "skbeam.core.fitting.background.snip_method",
    "skbeam.core.fitting.xrf_model.nnls_fit"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.fit_pixel_multiprocess_nnls": {
  "data": {
   "lineno": 1776,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros",
    "pyxrf.model.fit_spectrum.fit_per_line_nnls",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.multiprocessing",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.fit_pixel_multiprocess_nonlinear": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.fit_pixel_nonlinear_per_line",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.multiprocessing",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.fit_pixel_nonlinear_per_line": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "list",
    "numpy.sum",
    "pyxrf.model.fit_spectrum.lmfit",
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.residual_nonlinear_fit",
    "range",
    "skbeam.core.fitting.background.snip_method",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.get_area_and_error_nonlinear_fit": {
  "data": {
   "lineno": 1932,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "len",
    "numpy.sum",
    "numpy.zeros",
    "pyxrf.model.fit_spectrum.six",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.get_branching_ratio": {
  "data": {
   "lineno": 2143,
   "symbols_in_volume": [
    "skbeam.core.fitting.xrf_model.TRANSITIONS_LOOKUP",
    "skbeam.fluorescence.XrfElement"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.get_cs": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": [
    "list",
    "numpy.around",
    "skbeam.fluorescence.XrfElement"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.get_cutted_spectrum_in3D": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "skbeam.core.fitting.xrf_model.trim"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.lmfit": {
  "data": {
   "shadows": "lmfit"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyxrf.model.fit_spectrum.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.nnls_fit": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.nnls_fit"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.observe": {
  "data": {
   "shadows": "atom.api.observe"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.register_strategy": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.register_strategy"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.residual_nonlinear_fit": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.spectrum_nonlinear_fit"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.roi_sum_calculation": {
  "data": {
   "lineno": 2175,
   "symbols_in_volume": [
    "dict",
    "numpy.sum",
    "pyxrf.model.fit_spectrum.h5py",
    "pyxrf.model.fit_spectrum.os",
    "pyxrf.model.fit_spectrum.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.roi_sum_multi_files": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "pyxrf.model.fit_spectrum.logger",
    "pyxrf.model.fit_spectrum.multiprocessing",
    "pyxrf.model.fit_spectrum.roi_sum_calculation",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.save_fitted_as_movie": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "matplotlib.animation.FuncAnimation",
    "matplotlib.animation.writers",
    "matplotlib.pyplot.subplots",
    "numpy.max",
    "pyxrf.model.fit_spectrum.os",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.save_fitted_as_movie.update_img": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "numpy.sum",
    "skbeam.core.fitting.background.snip_method"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.save_fitted_fig": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.subplots",
    "numpy.max",
    "numpy.sum",
    "pyxrf.model.fit_spectrum.os",
    "range",
    "skbeam.core.fitting.background.snip_method",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.set_parameter_bound": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.set_parameter_bound"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.single_pixel_fitting_controller": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "dict",
    "get_cutted_spectrum_in3D",
    "int",
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.zeros",
    "pyxrf.model.fit_spectrum.bin_data_spacial",
    "pyxrf.model.fit_spectrum.calculate_area",
    "pyxrf.model.fit_spectrum.conv_expdata_energy",
    "pyxrf.model.fit_spectrum.copy",
    "pyxrf.model.fit_spectrum.fit_pixel_multiprocess_nnls",
    "pyxrf.model.fit_spectrum.fit_pixel_multiprocess_nonlinear",
    "pyxrf.model.fit_spectrum.get_area_and_error_nonlinear_fit",
    "pyxrf.model.fit_spectrum.logger",
    "set",
    "skbeam.core.fitting.xrf_model.construct_linear_model"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.snip_method": {
  "data": {
   "shadows": "skbeam.core.fitting.background.snip_method"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.spectrum_nonlinear_fit": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "len",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.fit_spectrum.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.trim": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.trim"
  },
  "type": "import"
 },
 "pyxrf.model.fit_spectrum.update_parameter_dict": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.update_parameter_dict"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.guessparam.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.guessparam.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.Bool": {
  "data": {
   "shadows": "atom.api.Bool"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.Dict": {
  "data": {
   "shadows": "atom.api.Dict"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.Element": {
  "data": {
   "shadows": "skbeam.fluorescence.XrfElement"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.ElementController": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.guessparam.ElementController.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.add_to_dict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "list",
    "pyxrf.model.guessparam.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.delete_all": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.delete_item": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "KeyError",
    "pyxrf.model.guessparam.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.delete_unselected_items": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.delete_value_given_threshold": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.get_element_list": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.is_element_in_list": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.order": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyxrf.model.guessparam.six",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.turn_on_all": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.update_norm": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "bool",
    "numpy.max",
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.ElementController.update_peak_ratio": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.max",
    "pyxrf.model.guessparam.math",
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.Float": {
  "data": {
   "shadows": "atom.api.Float"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.GuessParamModel": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Dict",
    "atom.api.Float",
    "atom.api.Int",
    "atom.api.List",
    "atom.api.Str",
    "atom.api.Typed",
    "numpy.ndarray",
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.guessparam.GuessParamModel.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "get_element",
    "pyxrf.model.guessparam.ElementController",
    "pyxrf.model.guessparam.copy",
    "pyxrf.model.guessparam.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel._update_bound": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.guessparam.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel._update_energy_bound_high_buf": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel._update_energy_bound_high_low": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.add_pileup": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "Exception",
    "calculate_profile",
    "float",
    "get_Z",
    "get_energy",
    "numpy.max",
    "pyxrf.model.guessparam.PreFitStatus",
    "pyxrf.model.guessparam.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.create_full_param": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "pyxrf.model.guessparam.six",
    "update_param_from_element"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.create_spectrum_from_file": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "calculate_profile",
    "collections.OrderedDict",
    "float",
    "get_Z",
    "get_energy",
    "len",
    "numpy.around",
    "numpy.max",
    "numpy.sum",
    "pyxrf.model.guessparam.PreFitStatus",
    "pyxrf.model.guessparam.six",
    "str",
    "trim_escape_peak"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.data_for_plot": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "numpy.array",
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.default_param_update": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "get_element",
    "pyxrf.model.guessparam.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.define_range": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "define_range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.exp_data_update": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.find_peak": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "get_Z",
    "get_energy",
    "list",
    "numpy.around",
    "numpy.max",
    "pyxrf.model.guessparam.PreFitStatus",
    "pyxrf.model.guessparam.logger",
    "pyxrf.model.guessparam.six",
    "skbeam.core.fitting.xrf_model.linear_spectrum_fitting"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.generate_pileup_peak_name": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "float",
    "get_energy"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.get_new_param_from_file": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "get_element",
    "open",
    "pyxrf.model.guessparam.copy",
    "pyxrf.model.guessparam.json",
    "pyxrf.model.guessparam.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.get_user_peak_list": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "range",
    "skbeam.core.fitting.xrf_model.K_LINE",
    "skbeam.core.fitting.xrf_model.L_LINE",
    "skbeam.core.fitting.xrf_model.M_LINE",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.manual_input": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "Exception",
    "calculate_profile",
    "get_Z",
    "get_energy",
    "numpy.max",
    "pyxrf.model.guessparam.PreFitStatus"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.param_changed": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.param_from_db_update": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.update_name_list": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "len",
    "list",
    "pyxrf.model.guessparam.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.GuessParamModel.update_new_param": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "get_element",
    "pyxrf.model.guessparam.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.Int": {
  "data": {
   "shadows": "atom.api.Int"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.K_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.K_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.L_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.L_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.List": {
  "data": {
   "shadows": "atom.api.List"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.M_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.M_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.ParamController": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.ParamController"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.PreFitStatus": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Float",
    "atom.api.Str",
    "atom.api.Typed",
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.guessparam.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.Typed": {
  "data": {
   "shadows": "atom.api.Typed"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.autofit_param": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyxrf.model.guessparam.bound_options": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyxrf.model.guessparam.calculate_profile": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.copy",
    "skbeam.core.fitting.background.snip_method",
    "skbeam.core.fitting.xrf_model.construct_linear_model",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.compute_escape_peak": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.compute_escape_peak"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.construct_linear_model": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.construct_linear_model"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.create_full_dict": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.copy",
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.define_range": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.around",
    "skbeam.core.fitting.xrf_model.trim"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.fit_strategy_list": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyxrf.model.guessparam.get_Z": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.strip_line",
    "skbeam.fluorescence.XrfElement",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.get_element": {
  "data": {
   "lineno": 929
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.get_energy": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "numpy.around",
    "pyxrf.model.guessparam.strip_line",
    "skbeam.fluorescence.XrfElement",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.linear_spectrum_fitting": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.linear_spectrum_fitting"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyxrf.model.guessparam.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.observe": {
  "data": {
   "shadows": "atom.api.observe"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.param_dict_cleaner": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "len",
    "pyxrf.model.guessparam.copy",
    "pyxrf.model.guessparam.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.save_as": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "open",
    "pyxrf.model.guessparam.json"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.snip_method": {
  "data": {
   "shadows": "skbeam.core.fitting.background.snip_method"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.strip_line": {
  "data": {
   "lineno": 882
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.trim": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.trim"
  },
  "type": "import"
 },
 "pyxrf.model.guessparam.trim_escape_peak": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxrf.model.guessparam.logger",
    "skbeam.core.fitting.xrf_model.compute_escape_peak",
    "skbeam.core.fitting.xrf_model.trim"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.guessparam.update_param_from_element": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "pyxrf.model.guessparam.copy",
    "pyxrf.model.guessparam.create_full_dict",
    "pyxrf.model.guessparam.fit_strategy_list",
    "pyxrf.model.guessparam.param_dict_cleaner",
    "pyxrf.model.guessparam.six",
    "skbeam.core.fitting.xrf_model.ParamController"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.lineplot.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.lineplot.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Bool": {
  "data": {
   "shadows": "atom.api.Bool"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Dict": {
  "data": {
   "shadows": "atom.api.Dict"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Element": {
  "data": {
   "shadows": "skbeam.fluorescence.XrfElement"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Float": {
  "data": {
   "shadows": "atom.api.Float"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Int": {
  "data": {
   "shadows": "atom.api.Int"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.K_TRANSITIONS": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.K_TRANSITIONS"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.L_TRANSITIONS": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.L_TRANSITIONS"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Line2D": {
  "data": {
   "shadows": "matplotlib.lines.Line2D"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.LinePlotModel": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Dict",
    "atom.api.Float",
    "atom.api.Int",
    "atom.api.List",
    "atom.api.Str",
    "atom.api.Typed",
    "collections.OrderedDict",
    "matplotlib.axes.Axes",
    "matplotlib.figure.Figure",
    "matplotlib.lines.Line2D",
    "object"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.lineplot.LinePlotModel.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "AttributeError",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._color_config": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._new_exp_plot_opt": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._new_opt": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._set_allow_add_eline": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._set_allow_remove_eline": {
  "data": {
   "lineno": 558
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._set_allow_select_elines": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._set_eline_select_controls": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._show_hide_exp_plot": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._update_canvas": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._update_det_materials": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._update_energy": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._update_exp": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "atom.api.observe",
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._update_fit": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "atom.api.observe"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel._update_ylimit": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.add_peak_manual": {
  "data": {
   "lineno": 798
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.change_incident_energy": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.compute_manual_peak_intensity": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "abs",
    "float",
    "int",
    "len",
    "numpy.clip",
    "round"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.exp_data_update": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "AttributeError",
    "float",
    "len",
    "numpy.arange",
    "numpy.max",
    "pyxrf.model.lineplot.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.exp_label_update": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.get_element_line_name_by_id": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.is_element_line_id_valid": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.is_line_in_selected_list": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.log_linear_plot": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.plot_emission_line": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.plot_exp_data_update": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.plot_experiment": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.plot_fit": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "len",
    "pyxrf.model.lineplot.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.plot_multi_exp_data": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.max",
    "pyxrf.model.lineplot.get_color_name",
    "pyxrf.model.lineplot.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.plot_roi_bound": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyxrf.model.lineplot.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.remove_peak_manual": {
  "data": {
   "lineno": 819
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.set_element": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "_reset_eline_plot",
    "atom.api.observe",
    "len",
    "pyxrf.model.lineplot.logger",
    "range",
    "skbeam.core.fitting.xrf_model.K_TRANSITIONS",
    "skbeam.core.fitting.xrf_model.L_TRANSITIONS",
    "skbeam.core.fitting.xrf_model.M_TRANSITIONS",
    "skbeam.fluorescence.XrfElement"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.set_element._reset_eline_plot": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.set_incident_energy": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.LinePlotModel.show_roi_bound": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "atom.api.observe",
    "len",
    "pyxrf.model.lineplot.logger",
    "pyxrf.model.lineplot.six"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.List": {
  "data": {
   "shadows": "atom.api.List"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.M_TRANSITIONS": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.M_TRANSITIONS"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.Typed": {
  "data": {
   "shadows": "atom.api.Typed"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.get_color_name": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "list",
    "pyxrf.model.lineplot.matplotlib"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.lineplot.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyxrf.model.lineplot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.observe": {
  "data": {
   "shadows": "atom.api.observe"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyxrf.model.lineplot.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "open",
    "print",
    "pyxrf.db_config.tes_db_config.db",
    "pyxrf.model.load_data_from_db.beamline_config_pyxrf",
    "pyxrf.model.load_data_from_db.beamline_name",
    "pyxrf.model.load_data_from_db.config_path",
    "pyxrf.model.load_data_from_db.json",
    "pyxrf.model.load_data_from_db.logging",
    "pyxrf.model.load_data_from_db.os",
    "pyxrf.model.load_data_from_db.pyxrf",
    "pyxrf.model.load_data_from_db.warnings"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.load_data_from_db._extract_metadata_from_header": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ScanMetadataXRF",
    "convert_time_to_nexus_string",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "time.gmtime",
    "time.localtime"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db._get_fpath_not_existing": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "pyxrf.model.load_data_from_db.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db._get_metadata_from_descriptor_document": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db._is_scan_complete": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.assemble_data_SRX_stepscan": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "enumerate",
    "get_name_value_from_db",
    "len",
    "min",
    "numpy.abs",
    "numpy.array",
    "numpy.copy",
    "numpy.float32",
    "numpy.vstack",
    "numpy.zeros",
    "pyxrf.model.load_data_from_db.flip_data",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.beamline_config_pyxrf": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.beamline_name": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.config_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.db": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.db_analysis": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.export1d": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "pyxrf.db_config.tes_db_config.db",
    "pyxrf.db_config.tes_db_config.db.get_table",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.fetch_data_from_db": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "free_memory_from_handler",
    "map_data2D_hxn",
    "map_data2D_srx",
    "map_data2D_tes",
    "map_data2D_xfm",
    "print",
    "pyxrf.db_config.tes_db_config.db"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.flip_data": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.free_memory_from_handler": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "print",
    "pyxrf.db_config.tes_db_config.db.fs._handler_cache.values",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.get_data_parallel": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "print",
    "pyxrf.model.load_data_from_db.multiprocessing"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.get_data_per_event": {
  "data": {
   "lineno": 2017,
   "symbols_in_volume": [
    "pyxrf.db_config.tes_db_config.db.fill_event",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.get_name_value_from_db": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.get_total_scan_point": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.helper_decode_list": {
  "data": {
   "lineno": 2013
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.helper_encode_list": {
  "data": {
   "lineno": 2009
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.make_hdf": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "Exception",
    "print",
    "pyxrf.model.load_data_from_db.fetch_data_from_db",
    "pyxrf.model.load_data_from_db.os",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.map_data2D": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.copy",
    "numpy.float32",
    "numpy.vstack",
    "numpy.zeros",
    "pyxrf.model.load_data_from_db.flip_data",
    "pyxrf.model.load_data_from_db.get_name_value_from_db",
    "pyxrf.model.load_data_from_db.logger",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.map_data2D_hxn": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "Exception",
    "map_data2D",
    "open",
    "print",
    "pyxrf.db_config.tes_db_config.db",
    "pyxrf.db_config.tes_db_config.db.get_table",
    "pyxrf.model.load_data_from_db._extract_metadata_from_header",
    "pyxrf.model.load_data_from_db._get_metadata_from_descriptor_document",
    "pyxrf.model.load_data_from_db._is_scan_complete",
    "pyxrf.model.load_data_from_db.config_path",
    "pyxrf.model.load_data_from_db.json",
    "pyxrf.model.load_data_from_db.logger",
    "pyxrf.model.load_data_from_db.os",
    "pyxrf.model.load_data_from_db.sep_v",
    "write_db_to_hdf_base"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.map_data2D_srx": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "assemble_data_SRX_stepscan",
    "enumerate",
    "len",
    "min",
    "numpy.append",
    "numpy.arange",
    "numpy.diff",
    "numpy.float32",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.ones",
    "numpy.sum",
    "numpy.transpose",
    "numpy.vstack",
    "numpy.zeros",
    "open",
    "pandas.DataFrame",
    "print",
    "pyxrf.db_config.tes_db_config.db",
    "pyxrf.model.load_data_from_db._extract_metadata_from_header",
    "pyxrf.model.load_data_from_db._is_scan_complete",
    "pyxrf.model.load_data_from_db.config_path",
    "pyxrf.model.load_data_from_db.get_total_scan_point",
    "pyxrf.model.load_data_from_db.json",
    "pyxrf.model.load_data_from_db.logger",
    "pyxrf.model.load_data_from_db.math",
    "pyxrf.model.load_data_from_db.os",
    "pyxrf.model.load_data_from_db.sep_v",
    "pyxrf.model.load_data_from_db.six",
    "range",
    "str",
    "write_db_to_hdf_base",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.map_data2D_tes": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "float",
    "len",
    "numpy.array",
    "numpy.copy",
    "numpy.float32",
    "numpy.vstack",
    "numpy.zeros",
    "open",
    "print",
    "pyxrf.db_config.tes_db_config.db",
    "pyxrf.model.load_data_from_db._extract_metadata_from_header",
    "pyxrf.model.load_data_from_db._get_metadata_from_descriptor_document",
    "pyxrf.model.load_data_from_db._is_scan_complete",
    "pyxrf.model.load_data_from_db.config_path",
    "pyxrf.model.load_data_from_db.json",
    "pyxrf.model.load_data_from_db.logger",
    "pyxrf.model.load_data_from_db.os",
    "pyxrf.model.load_data_from_db.sep_v",
    "range",
    "write_db_to_hdf_base"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.map_data2D_xfm": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "Exception",
    "map_data2D",
    "open",
    "print",
    "pyxrf.db_config.tes_db_config.db",
    "pyxrf.db_config.tes_db_config.db.get_table",
    "pyxrf.model.load_data_from_db._extract_metadata_from_header",
    "pyxrf.model.load_data_from_db._is_scan_complete",
    "pyxrf.model.load_data_from_db.config_path",
    "pyxrf.model.load_data_from_db.json",
    "pyxrf.model.load_data_from_db.os",
    "pyxrf.model.load_data_from_db.sep_v",
    "write_db_to_hdf_base"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.pyxrf": {
  "data": {
   "shadows": "pyxrf"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.pyxrf_version": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.sep_v": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyxrf.model.load_data_from_db.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.ttime": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyxrf.model.load_data_from_db.write_db_to_hdf": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "IOError",
    "_get_fpath_not_existing",
    "enumerate",
    "get_name_value_from_db",
    "helper_encode_list",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.copy",
    "numpy.vstack",
    "numpy.zeros",
    "pyxrf.model.load_data_from_db.flip_data",
    "pyxrf.model.load_data_from_db.h5py",
    "pyxrf.model.load_data_from_db.logger",
    "pyxrf.model.load_data_from_db.os",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.write_db_to_hdf_base": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "IOError",
    "helper_encode_list",
    "incorrect_type_msg",
    "isinstance",
    "numpy.copy",
    "numpy.float32",
    "numpy.ndarray",
    "pyxrf.model.load_data_from_db._get_fpath_not_existing",
    "pyxrf.model.load_data_from_db.h5py",
    "pyxrf.model.load_data_from_db.os",
    "pyxrf.model.load_data_from_db.pyxrf_version",
    "time.localtime",
    "time.strftime"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.load_data_from_db.write_db_to_hdf_base.incorrect_type_msg": {
  "data": {
   "lineno": 1893,
   "symbols_in_volume": [
    "pyxrf.model.load_data_from_db.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyxrf.model.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.param_data": {
  "data": {},
  "type": "module"
 },
 "pyxrf.model.param_data.param_data": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyxrf.model.scan_metadata": {
  "data": {},
  "type": "module"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.__contains__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.__delitem__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.__getitem__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.__iter__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.__setitem__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase._gen_default_descriptions": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase._gen_default_print_order": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.get_formatted_output": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyxrf.model.scan_metadata.re",
    "pyxrf.model.scan_metadata.textwrap",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.get_metadata_dictionary": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.is_metadata_available": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.items": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.keys": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataBase.values": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataXRF": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyxrf.model.scan_metadata.ScanMetadataBase"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.scan_metadata.ScanMetadataXRF.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataXRF._gen_default_descriptions": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataXRF._gen_default_print_order": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataXRF.get_mono_incident_energy": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.ScanMetadataXRF.is_mono_incident_energy_available": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pyxrf.model.scan_metadata.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.model.scan_metadata.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pyxrf.model.setting": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.setting.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.setting.Atom": {
  "data": {
   "shadows": "atom.api.Atom"
  },
  "type": "import"
 },
 "pyxrf.model.setting.Bool": {
  "data": {
   "shadows": "atom.api.Bool"
  },
  "type": "import"
 },
 "pyxrf.model.setting.Dict": {
  "data": {
   "shadows": "atom.api.Dict"
  },
  "type": "import"
 },
 "pyxrf.model.setting.Element": {
  "data": {
   "shadows": "skbeam.fluorescence.XrfElement"
  },
  "type": "import"
 },
 "pyxrf.model.setting.Int": {
  "data": {
   "shadows": "atom.api.Int"
  },
  "type": "import"
 },
 "pyxrf.model.setting.K_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.K_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.setting.L_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.L_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.setting.List": {
  "data": {
   "shadows": "atom.api.List"
  },
  "type": "import"
 },
 "pyxrf.model.setting.M_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.M_LINE"
  },
  "type": "import"
 },
 "pyxrf.model.setting.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxrf.model.setting.ROIModel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Int",
    "atom.api.Str"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.setting.ROIModel._plot_opt": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.setting.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.ROIModel._value_update": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "atom.api.observe",
    "pyxrf.model.setting.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "atom.api.Atom",
    "atom.api.Bool",
    "atom.api.Dict",
    "atom.api.List",
    "atom.api.Str",
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "pyxrf.model.setting.SettingModel.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel._update_element": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Exception",
    "atom.api.observe",
    "len",
    "pyxrf.model.setting.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.clear_selected_elements": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.data_sets_update": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.data_title_update": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.filename_update": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyxrf.model.setting.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.get_roi_sum": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "calculate_roi",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "pyxrf.model.setting.logger",
    "pyxrf.model.setting.multiprocessing",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.get_sigma": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.img_dict_update": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.remove_all_roi": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.result_folder_changed": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.saveROImap_to_hdf": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "Exception",
    "pyxrf.model.setting.logger",
    "pyxrf.model.setting.re",
    "save_fitdata_to_hdf"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.select_elements_from_list": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.update_parameter": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pyxrf.model.setting.copy"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.update_roi": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyxrf.model.setting.ROIModel",
    "skbeam.core.fitting.xrf_model.K_LINE",
    "skbeam.core.fitting.xrf_model.L_LINE",
    "skbeam.core.fitting.xrf_model.M_LINE",
    "skbeam.fluorescence.XrfElement"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.SettingModel.use_all_elements": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "skbeam.core.fitting.xrf_model.K_LINE",
    "skbeam.core.fitting.xrf_model.L_LINE"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.Str": {
  "data": {
   "shadows": "atom.api.Str"
  },
  "type": "import"
 },
 "pyxrf.model.setting._subtract_background_one_line": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "numpy.copy",
    "range",
    "skbeam.core.fitting.background.snip_method"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyxrf.model.setting.calculate_roi": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "int",
    "numpy.asarray",
    "numpy.sum",
    "round"
   ]
  },
  "type": "function"
 },
 "pyxrf.model.setting.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyxrf.model.setting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyxrf.model.setting.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyxrf.model.setting.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.model.setting.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyxrf.model.setting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.model.setting.observe": {
  "data": {
   "shadows": "atom.api.observe"
  },
  "type": "import"
 },
 "pyxrf.model.setting.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.model.setting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyxrf.model.setting.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.model.setting.snip_method": {
  "data": {
   "shadows": "skbeam.core.fitting.background.snip_method"
  },
  "type": "import"
 },
 "pyxrf.model.tests": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.model.tests.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.model.tests.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyxrf.model.tests.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.simulation": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.simulation.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.simulation.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyxrf.simulation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.simulation.sim_xrf_scan_data.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.simulation.sim_xrf_scan_data.K_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.K_LINE"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.L_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.L_LINE"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.M_LINE": {
  "data": {
   "shadows": "skbeam.core.fitting.xrf_model.M_LINE"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.XrfElement": {
  "data": {
   "shadows": "skbeam.core.constants.xrf.XrfElement"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data._get_elemental_line_parameters": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "pyxrf.simulation.sim_xrf_scan_data.re",
    "skbeam.core.constants.xrf.XrfElement",
    "skbeam.core.fitting.xrf_model.K_LINE",
    "skbeam.core.fitting.xrf_model.L_LINE",
    "skbeam.core.fitting.xrf_model.M_LINE"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.create_hdf5_xrf_map_const": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pyxrf.simulation.sim_xrf_scan_data.create_xrf_map_data",
    "pyxrf.simulation.sim_xrf_scan_data.logger",
    "pyxrf.simulation.sim_xrf_scan_data.os",
    "write_db_to_hdf_base"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.create_xrf_map_data": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "_gen_rs",
    "float",
    "len",
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.ones",
    "numpy.sum",
    "numpy.transpose",
    "numpy.zeros",
    "pyxrf.simulation.sim_xrf_scan_data.gen_xrf_map_const",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.create_xrf_map_data._gen_rs": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "list",
    "numpy.random.choice",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.gaussian": {
  "data": {
   "shadows": "skbeam.core.fitting.lineshapes.gaussian"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.gen_hdf5_qa_dataset": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "ParamQuantEstimation",
    "RuntimeError",
    "generate_eline_list",
    "list",
    "open",
    "pyxrf.simulation.sim_xrf_scan_data.create_hdf5_xrf_map_const",
    "pyxrf.simulation.sim_xrf_scan_data.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.gen_hdf5_qa_dataset_preset_1": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "pyxrf.simulation.sim_xrf_scan_data.gen_hdf5_qa_dataset",
    "pyxrf.simulation.sim_xrf_scan_data.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.gen_xrf_map_const": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.broadcast_to",
    "numpy.float32",
    "pyxrf.simulation.sim_xrf_scan_data.gen_xrf_spectrum"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.gen_xrf_spectrum": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "isinstance",
    "numpy.asarray",
    "numpy.square",
    "numpy.zeros",
    "pyxrf.simulation.sim_xrf_scan_data._get_elemental_line_parameters",
    "pyxrf.simulation.sim_xrf_scan_data.math",
    "range",
    "skbeam.core.fitting.lineshapes.gaussian",
    "type"
   ]
  },
  "type": "function"
 },
 "pyxrf.simulation.sim_xrf_scan_data.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyxrf.simulation.sim_xrf_scan_data.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.simulation.sim_xrf_scan_data.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.view": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.view.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.view.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyxrf.view.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps": {
  "data": {
   "symbols_in_volume": [
    "pyxrf.xanes_maps.logging"
   ]
  },
  "type": "module"
 },
 "pyxrf.xanes_maps.logger": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyxrf.xanes_maps.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyxrf.xanes_maps.xanes_maps_api.build_xanes_map",
    "pyxrf.xanes_maps.xanes_maps_api.formatter",
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "pyxrf.xanes_maps.xanes_maps_api.logging",
    "pyxrf.xanes_maps.xanes_maps_api.stream_handler"
   ]
  },
  "type": "module"
 },
 "pyxrf.xanes_maps.xanes_maps_api.Button": {
  "data": {
   "shadows": "matplotlib.widgets.Button"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.FancyArrow": {
  "data": {
   "shadows": "matplotlib.patches.FancyArrow"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.Slider": {
  "data": {
   "shadows": "matplotlib.widgets.Slider"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.StackReg": {
  "data": {
   "shadows": "pystackreg.StackReg"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.TextBox": {
  "data": {
   "shadows": "matplotlib.widgets.TextBox"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api._align_stacks": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "_flip_stack",
    "pystackreg.StackReg",
    "pystackreg.StackReg.TRANSLATION"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._align_stacks._flip_stack": {
  "data": {
   "lineno": 1849,
   "symbols_in_volume": [
    "numpy.flip"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._build_xanes_map_api": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "_compute_xanes_maps",
    "_load_data_from_databroker",
    "_plot_processing_results",
    "_process_xrf_data",
    "_save_xanes_processing_results",
    "check_if_eline_supported",
    "enumerate",
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "pyxrf.xanes_maps.xanes_maps_api.os",
    "read_ref_data"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._build_xanes_map_param_default": {
  "data": {
   "lineno": 418
  },
  "type": "constant"
 },
 "pyxrf.xanes_maps.xanes_maps_api._build_xanes_map_param_schema": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "pyxrf.xanes_maps.xanes_maps_api._check_dataset_consistency": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_for_identical_eline_key_set",
    "_check_for_identical_image_size",
    "_check_for_positional_data",
    "_check_for_specific_elines",
    "_get_dataset_name",
    "_get_img_keys",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._check_dataset_consistency._check_for_identical_eline_key_set": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "RuntimeError",
    "_get_eline_keys",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._check_dataset_consistency._check_for_identical_image_size": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "_raise_error_exception",
    "any",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._check_dataset_consistency._check_for_positional_data": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "_raise_error_exception",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._check_dataset_consistency._check_for_specific_elines": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "_raise_error_exception",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._check_dataset_consistency._raise_error_exception": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._compute_xanes_maps": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "RuntimeError",
    "_align_stacks",
    "_check_dataset_consistency",
    "_get_eline_data",
    "_get_uniform_grid",
    "_interpolate_references",
    "_load_dataset_from_hdf5",
    "fit_spectrum",
    "grid_interpolate",
    "len",
    "list",
    "numpy.asarray",
    "numpy.sum",
    "numpy.zeros",
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "range",
    "sorted",
    "subtract_xanes_pre_edge_baseline",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._get_dataset_name": {
  "data": {
   "lineno": 2689,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxrf.xanes_maps.xanes_maps_api.re"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._get_eline_data": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "_get_eline_keys",
    "_get_img_data",
    "_get_img_keys",
    "normalize_data_by_scaler",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._get_eline_keys": {
  "data": {
   "lineno": 2664,
   "symbols_in_volume": [
    "pyxrf.xanes_maps.xanes_maps_api.re"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._get_img_data": {
  "data": {
   "lineno": 2633,
   "symbols_in_volume": [
    "_get_dataset_name"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._get_img_keys": {
  "data": {
   "lineno": 2657,
   "symbols_in_volume": [
    "_get_dataset_name",
    "list"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._get_uniform_grid": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": [
    "grid_interpolate",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._interpolate_references": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.interp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._load_data_from_databroker": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "len",
    "make_hdf",
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "pyxrf.xanes_maps.xanes_maps_api.os"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._load_dataset_from_hdf5": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "pyxrf.xanes_maps.xanes_maps_api.os",
    "read_hdf_APS"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._plot_processing_results": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "enumerate",
    "plot_absorption_references",
    "plot_xanes_map",
    "show_image_stack"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._process_xrf_data": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "IOError",
    "_load_dataset_from_hdf5",
    "adjust_incident_beam_energies",
    "enumerate",
    "len",
    "list",
    "pyxrf.xanes_maps.xanes_maps_api.os",
    "pyxrf_batch",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._save_xanes_maps_to_tiff": {
  "data": {
   "lineno": 2791,
   "symbols_in_volume": [
    "abs",
    "convert_time_to_nexus_string",
    "enumerate",
    "len",
    "numpy.float32",
    "open",
    "print",
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "pyxrf.xanes_maps.xanes_maps_api.os",
    "pyxrf.xanes_maps.xanes_maps_api.tifffile",
    "range",
    "time.localtime",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api._save_xanes_processing_results": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "_save_xanes_maps_to_tiff"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.adjust_incident_beam_energies": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "RuntimeError",
    "max",
    "min",
    "numpy.asarray",
    "numpy.min",
    "pyxrf.xanes_maps.xanes_maps_api.check_elines_activation_status"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.build_xanes_map": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "RuntimeError",
    "_build_xanes_map_api",
    "create_yaml_parameter_file",
    "isinstance",
    "pyxrf.xanes_maps.xanes_maps_api.jsonschema",
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "read_yaml_parameter_file",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.check_elines_activation_status": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "check_if_eline_is_activated"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.formatter": {
  "data": {
   "lineno": 2943
  },
  "type": "constant"
 },
 "pyxrf.xanes_maps.xanes_maps_api.jsonschema": {
  "data": {
   "shadows": "jsonschema"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.logger": {
  "data": {
   "lineno": 2939
  },
  "type": "constant"
 },
 "pyxrf.xanes_maps.xanes_maps_api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.plot_absorption_references": {
  "data": {
   "lineno": 2576,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.show",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.plot_xanes_map": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "int",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.imshow",
    "matplotlib.pyplot.show",
    "max",
    "numpy.max",
    "numpy.min",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.read_ref_data": {
  "data": {
   "lineno": 2722,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "len",
    "numpy.genfromtxt",
    "open",
    "pyxrf.xanes_maps.xanes_maps_api.csv",
    "pyxrf.xanes_maps.xanes_maps_api.os",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "EnergyMapPlot",
    "pyxrf.xanes_maps.xanes_maps_api.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot": {
  "data": {
   "lineno": 1929
  },
  "type": "class"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.__init__": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": [
    "int",
    "list",
    "max",
    "pyxrf.xanes_maps.xanes_maps_api.logger"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.btn_stack_clicked": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.btn_stack_next_clicked": {
  "data": {
   "lineno": 2273,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.btn_stack_prev_clicked": {
  "data": {
   "lineno": 2280
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.canvas_onpress": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.canvas_onrelease": {
  "data": {
   "lineno": 2458,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "round"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.create_buttons_each_label": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.axes",
    "matplotlib.widgets.Button",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.create_buttons_prev_next": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": [
    "matplotlib.pyplot.axes",
    "matplotlib.widgets.Button"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.display_btn_stack_label": {
  "data": {
   "lineno": 2255,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.draw_selection_mark": {
  "data": {
   "lineno": 2081,
   "symbols_in_volume": [
    "matplotlib.patches.FancyArrow",
    "matplotlib.patches.Rectangle"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.redraw_fluorescence_plot": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "fit_spectrum",
    "numpy.clip",
    "numpy.sum",
    "pyxrf.xanes_maps.xanes_maps_api._interpolate_references",
    "pyxrf.xanes_maps.xanes_maps_api.logger",
    "pyxrf.xanes_maps.xanes_maps_api.subtract_xanes_pre_edge_baseline",
    "range",
    "rfactor_compute"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.redraw_image": {
  "data": {
   "lineno": 2405
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.select_stack": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.set_cbar_range": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.set_slider_energy_title": {
  "data": {
   "lineno": 2260,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.show": {
  "data": {
   "lineno": 2108,
   "symbols_in_volume": [
    "abs",
    "len",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_current_fig_manager",
    "matplotlib.pyplot.show",
    "matplotlib.widgets.Slider",
    "matplotlib.widgets.TextBox",
    "max"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.show_fluor_point_coordinates": {
  "data": {
   "lineno": 2185
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.slider_update": {
  "data": {
   "lineno": 2411,
   "symbols_in_volume": [
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.switch_to_different_stack": {
  "data": {
   "lineno": 2286
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.show_image_stack.EnergyMapPlot.tb_energy_shift_onsubmit": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "Exception",
    "float"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.stream_handler": {
  "data": {
   "lineno": 2945
  },
  "type": "constant"
 },
 "pyxrf.xanes_maps.xanes_maps_api.subtract_xanes_pre_edge_baseline": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.asarray",
    "numpy.clip",
    "numpy.expand_dims",
    "numpy.median",
    "numpy.min",
    "numpy.squeeze",
    "numpy.sum",
    "pyxrf.xanes_maps.xanes_maps_api.check_elines_activation_status"
   ]
  },
  "type": "function"
 },
 "pyxrf.xanes_maps.xanes_maps_api.tifffile": {
  "data": {
   "shadows": "tifffile"
  },
  "type": "import"
 },
 "pyxrf.xanes_maps.xanes_maps_api.ttime": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 }
}