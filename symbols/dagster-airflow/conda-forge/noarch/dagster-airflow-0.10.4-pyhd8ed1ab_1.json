{
 "dagster_airflow": {
  "lineno": null,
  "symbols_in_volume": [
   "dagster.core.utils.check_dagster_package_version"
  ],
  "type": "module"
 },
 "dagster_airflow.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.cli.construct_environment_yaml": {
  "lineno": 12,
  "symbols_in_volume": [
   "click.UsageError",
   "dagster.cli.load_handle.recon_repo_for_cli_args",
   "dagster.seven.get_system_temp_directory",
   "dagster.utils.load_yaml_from_glob_list",
   "os.path.join"
  ],
  "type": "function"
 },
 "dagster_airflow.cli.construct_scaffolded_file_contents": {
  "lineno": 41,
  "symbols_in_volume": [
   "dagster.utils.indenting_printer.IndentingStringIoPrinter",
   "datetime.datetime.now",
   "datetime.timedelta",
   "yaml.dump"
  ],
  "type": "function"
 },
 "dagster_airflow.cli.main": {
  "lineno": 106,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "dagster_airflow.cli.scaffold": {
  "lineno": 111,
  "symbols_in_volume": [
   "click.Path",
   "click.STRING",
   "click.echo",
   "click.option",
   "dagster.check.invariant",
   "dagster.check.tuple_param",
   "os.getenv",
   "os.makedirs",
   "os.path.expanduser",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "dagster_airflow.compile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.compile._coalesce_solid_order": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.compile.coalesce_execution_steps": {
  "lineno": 19,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict",
   "dagster.check.invariant",
   "itertools.groupby"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.dagster_pipeline_factory.DagsterAirflowError": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dagster_airflow.dagster_pipeline_factory._get_pipeline_definition_args": {
  "lineno": 311,
  "symbols_in_volume": [
   "airflow.models.dag.DAG",
   "dagster.check.bool_param",
   "dagster.check.inst_param",
   "dagster.check.opt_int_param"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory._traverse_airflow_dag": {
  "lineno": 334,
  "symbols_in_volume": [
   "airflow.models.baseoperator.BaseOperator",
   "dagster.DependencyDefinition",
   "dagster.MultiDependencyDefinition",
   "dagster.SolidDefinition",
   "dagster.check.bool_param",
   "dagster.check.inst_param",
   "dagster.check.list_param",
   "dagster.check.opt_int_param"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.contains_duplicate_task_names": {
  "lineno": 36,
  "symbols_in_volume": [
   "airflow.models.dagbag.DagBag",
   "dagster.check.bool_param",
   "dagster.check.inst_param"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.dagster_get_template_context": {
  "lineno": 453,
  "symbols_in_volume": [
   "airflow.macros",
   "datetime.timedelta",
   "lazy_object_proxy.Proxy",
   "pendulum.instance"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.make_dagster_pipeline_from_airflow_dag": {
  "lineno": 222,
  "symbols_in_volume": [
   "airflow.models.dag.DAG",
   "dagster.PipelineDefinition",
   "dagster.check.bool_param",
   "dagster.check.inst_param",
   "dagster.check.opt_dict_param",
   "dagster.check.opt_int_param",
   "dagster.core.definitions.utils.validate_tags",
   "dagster.core.instance.IS_AIRFLOW_INGEST_PIPELINE_STR"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.make_dagster_repo_from_airflow_dag_bag": {
  "lineno": 53,
  "symbols_in_volume": [
   "airflow.models.dagbag.DagBag",
   "dagster.check.bool_param",
   "dagster.check.inst_param",
   "dagster.check.str_param"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.make_dagster_repo_from_airflow_dag_bag._repo": {
  "lineno": 113,
  "symbols_in_volume": [
   "dagster.repository"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.make_dagster_repo_from_airflow_dags_path": {
  "lineno": 162,
  "symbols_in_volume": [
   "airflow.models.dagbag.DagBag",
   "dagster.check.bool_param",
   "dagster.check.str_param"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.make_dagster_repo_from_airflow_example_dags": {
  "lineno": 120,
  "symbols_in_volume": [
   "airflow.models.dagbag.DagBag",
   "dagster_airflow.patch_airflow_example_dag.patch_airflow_example_dag"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.make_dagster_solid_from_airflow_task": {
  "lineno": 396,
  "symbols_in_volume": [
   "airflow.models.baseoperator.BaseOperator",
   "dagster.check.bool_param",
   "dagster.check.inst_param",
   "dagster.check.opt_int_param"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.make_dagster_solid_from_airflow_task._solid": {
  "lineno": 401,
  "symbols_in_volume": [
   "airflow.models.TaskInstance",
   "dagster.DagsterInvariantViolationError",
   "dagster.InputDefinition",
   "dagster.Nothing",
   "dagster.OutputDefinition",
   "dagster.check.inst_param",
   "dagster.check.str_param",
   "dagster.core.instance.AIRFLOW_EXECUTION_DATE_STR",
   "dagster.solid",
   "datetime.datetime",
   "dateutil.parser.parse"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.normalized_name": {
  "lineno": 303,
  "symbols_in_volume": [
   "dagster.core.definitions.utils.VALID_NAME_REGEX.match"
  ],
  "type": "function"
 },
 "dagster_airflow.dagster_pipeline_factory.replace_airflow_logger_handlers": {
  "lineno": 379,
  "symbols_in_volume": [
   "airflow.settings.LOG_FORMAT",
   "contextlib.contextmanager",
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.getLogger",
   "sys.stdout"
  ],
  "type": "function"
 },
 "dagster_airflow.factory": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta"
  ],
  "type": "module"
 },
 "dagster_airflow.factory.DagsterOperatorInvocationArgs": {
  "lineno": 51,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "dagster_airflow.factory.DagsterOperatorInvocationArgs.__new__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.factory.DagsterOperatorParameters": {
  "lineno": 84,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "dagster_airflow.factory.DagsterOperatorParameters.__new__": {
  "lineno": 94,
  "symbols_in_volume": [
   "airflow.DAG",
   "dagster.check.inst_param",
   "dagster.check.opt_dict_param",
   "dagster.check.opt_inst_param",
   "dagster.check.opt_list_param",
   "dagster.check.opt_str_param",
   "dagster.check.str_param",
   "dagster.core.definitions.reconstructable.ReconstructableRepository",
   "dagster.core.instance.ref.InstanceRef",
   "dagster.core.snap.ExecutionPlanSnapshot",
   "dagster.core.snap.PipelineSnapshot",
   "dagster_airflow.operators.util.check_storage_specified"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.DagsterOperatorParameters.invocation_args": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.factory._make_airflow_dag": {
  "lineno": 148,
  "symbols_in_volume": [
   "airflow.DAG",
   "airflow.operators.BaseOperator",
   "dagster.check.inst_param",
   "dagster.check.opt_dict_param",
   "dagster.check.opt_str_param",
   "dagster.check.str_param",
   "dagster.check.subclass_param",
   "dagster.core.definitions.reconstructable.ReconstructableRepository",
   "dagster.core.execution.api.create_execution_plan",
   "dagster.core.instance.DagsterInstance",
   "dagster.core.instance.DagsterInstance.get",
   "dagster.core.snap.snapshot_from_execution_plan",
   "dagster.seven.get_system_temp_directory"
  ],
  "type": "function"
 },
 "dagster_airflow.factory._make_dag_description": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.factory._rename_for_airflow": {
  "lineno": 41,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag": {
  "lineno": 231,
  "symbols_in_volume": [
   "dagster.check.str_param",
   "dagster.core.definitions.reconstructable.ReconstructableRepository.for_module"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_containerized": {
  "lineno": 378,
  "symbols_in_volume": [
   "dagster.check.opt_dict_param",
   "dagster.check.opt_str_param",
   "dagster.check.str_param",
   "dagster.core.definitions.reconstructable.ReconstructableRepository.for_module"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_containerized_for_recon_repo": {
  "lineno": 451,
  "symbols_in_volume": [
   "dagster.check.inst_param",
   "dagster.check.opt_dict_param",
   "dagster.check.opt_str_param",
   "dagster.check.str_param",
   "dagster.core.definitions.reconstructable.ReconstructableRepository"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_for_operator": {
  "lineno": 295,
  "symbols_in_volume": [
   "airflow.operators.BaseOperator",
   "dagster.check.subclass_param"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_for_recon_repo": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.format.format_dict_for_graphql": {
  "lineno": 5,
  "symbols_in_volume": [
   "dagster.check.dict_param",
   "dagster.check.failed"
  ],
  "type": "function"
 },
 "dagster_airflow.format.format_dict_for_graphql._format_item": {
  "lineno": 55,
  "symbols_in_volume": [
   "dagster.utils.indenting_printer.IndentingStringIoPrinter"
  ],
  "type": "function"
 },
 "dagster_airflow.format.format_dict_for_graphql._format_subdict": {
  "lineno": 8,
  "symbols_in_volume": [
   "dagster.check.dict_param",
   "dagster.utils.indenting_printer.IndentingStringIoPrinter"
  ],
  "type": "function"
 },
 "dagster_airflow.format.format_dict_for_graphql._format_sublist": {
  "lineno": 34,
  "symbols_in_volume": [
   "dagster.utils.indenting_printer.IndentingStringIoPrinter"
  ],
  "type": "function"
 },
 "dagster_airflow.operators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.docker_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator": {
  "lineno": 20,
  "symbols_in_volume": [
   "dagster_airflow.vendor.docker_operator.DockerOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.__get_tls_config": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "dagster.check.invariant",
   "dagster.core.instance.DagsterInstance.from_ref",
   "dagster.seven.get_system_temp_directory",
   "docker.from_env",
   "warnings.warn"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.execute": {
  "lineno": 250,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "airflow.exceptions.AirflowSkipException",
   "dagster.cli.api.StepExecutionSkipped",
   "dagster.core.instance.AIRFLOW_EXECUTION_DATE_STR",
   "dagster.serdes.deserialize_json_to_dagster_namedtuple"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.execute_raw": {
  "lineno": 133,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.seven.json.loads",
   "docker.APIClient"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_docker_command": {
  "lineno": 228,
  "symbols_in_volume": [
   "ast.literal_eval",
   "dagster.check.opt_str_param"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_hook": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_hook._DummyHook": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_hook._DummyHook.get_conn": {
  "lineno": 245,
  "symbols_in_volume": [
   "docker.from_env"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_host_tmp_dir": {
  "lineno": 129,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.query": {
  "lineno": 210,
  "symbols_in_volume": [
   "dagster.check.opt_str_param",
   "dagster.grpc.types.ExecuteStepArgs",
   "dagster.serdes.serialize_dagster_namedtuple",
   "json.dumps"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.run_id": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.python_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.python_operator.DagsterPythonOperator": {
  "lineno": 6,
  "symbols_in_volume": [
   "dagster_airflow.vendor.python_operator.PythonOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.operators.python_operator.DagsterPythonOperator.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.python_operator.DagsterPythonOperator.__init__.python_callable": {
  "lineno": 8,
  "symbols_in_volume": [
   "dagster_airflow.operators.util.invoke_steps_within_python_operator"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.util.airflow_tags_for_ts": {
  "lineno": 151,
  "symbols_in_volume": [
   "dagster.check.opt_str_param",
   "dagster.core.instance.AIRFLOW_EXECUTION_DATE_STR"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.check_events_for_failures": {
  "lineno": 12,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.check.list_param",
   "dagster.core.events.DagsterEvent"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.check_events_for_skips": {
  "lineno": 23,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowSkipException",
   "dagster.DagsterEventType.STEP_SKIPPED.value",
   "dagster.check.list_param",
   "dagster.core.events.DagsterEvent"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.check_storage_specified": {
  "lineno": 69,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.check.invariant"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.convert_airflow_datestr_to_epoch_ts": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.util.get_aws_environment": {
  "lineno": 38,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.invoke_steps_within_python_operator": {
  "lineno": 97,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowSkipException",
   "dagster.core.execution.api.create_execution_plan",
   "dagster.core.execution.api.execute_plan",
   "dagster.core.execution.plan.plan.should_skip_step",
   "dagster.core.instance.AIRFLOW_EXECUTION_DATE_STR",
   "dagster.core.instance.DagsterInstance.from_ref"
  ],
  "type": "function"
 },
 "dagster_airflow.patch_airflow_example_dag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.patch_airflow_example_dag.patch_airflow_example_dag": {
  "lineno": 8,
  "symbols_in_volume": [
   "pkg_resources.get_distribution"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.docker_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator": {
  "lineno": 35,
  "symbols_in_volume": [
   "airflow.models.BaseOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.__get_tls_config": {
  "lineno": 265,
  "symbols_in_volume": [
   "docker.tls.TLSConfig"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.__init__": {
  "lineno": 123,
  "symbols_in_volume": [
   "airflow.utils.decorators.apply_defaults"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.execute": {
  "lineno": 193,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "airflow.utils.file.TemporaryDirectory",
   "docker.APIClient",
   "json.loads"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.get_command": {
  "lineno": 253,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.get_hook": {
  "lineno": 185,
  "symbols_in_volume": [
   "airflow.hooks.docker_hook.DockerHook"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.on_kill": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator.KubernetesPodOperator": {
  "lineno": 30,
  "symbols_in_volume": [
   "airflow.models.BaseOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator.KubernetesPodOperator.__init__": {
  "lineno": 152,
  "symbols_in_volume": [
   "airflow.contrib.kubernetes.pod.Resources",
   "airflow.utils.decorators.apply_defaults"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator.KubernetesPodOperator.execute": {
  "lineno": 99,
  "symbols_in_volume": [
   "airflow.contrib.kubernetes.kube_client.get_kube_client",
   "airflow.contrib.kubernetes.pod_generator.PodGenerator",
   "airflow.contrib.kubernetes.pod_launcher.PodLauncher",
   "airflow.exceptions.AirflowException",
   "airflow.utils.state.State.SUCCESS"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.python_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator": {
  "lineno": 32,
  "symbols_in_volume": [
   "airflow.models.BaseOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "airflow.utils.decorators.apply_defaults"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator.execute": {
  "lineno": 94,
  "symbols_in_volume": [
   "airflow.utils.operator_helpers.context_to_airflow_vars",
   "os.environ.update"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator.execute_callable": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}