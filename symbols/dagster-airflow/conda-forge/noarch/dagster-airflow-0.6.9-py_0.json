{
 "dagster_airflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.cli.construct_environment_yaml": {
  "lineno": 14,
  "symbols_in_volume": [
   "click.UsageError",
   "dagster.cli.load_handle.handle_for_pipeline_cli_args",
   "dagster.seven.get_system_temp_directory",
   "dagster.utils.load_yaml_from_glob_list",
   "os.path.join",
   "six.ensure_str"
  ],
  "type": "function"
 },
 "dagster_airflow.cli.construct_scaffolded_file_contents": {
  "lineno": 43,
  "symbols_in_volume": [
   "dagster.utils.indenting_printer.IndentingStringIoPrinter",
   "datetime.datetime.now",
   "datetime.timedelta",
   "yaml.dump"
  ],
  "type": "function"
 },
 "dagster_airflow.cli.main": {
  "lineno": 108,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "dagster_airflow.cli.scaffold": {
  "lineno": 113,
  "symbols_in_volume": [
   "click.Path",
   "click.STRING",
   "click.echo",
   "click.option",
   "dagster.check.invariant",
   "os.getenv",
   "os.makedirs",
   "os.path.expanduser",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "dagster_airflow.compile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.compile._coalesce_solid_order": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.compile.coalesce_execution_steps": {
  "lineno": 17,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict",
   "dagster.check.invariant",
   "itertools.groupby"
  ],
  "type": "function"
 },
 "dagster_airflow.factory": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta"
  ],
  "type": "module"
 },
 "dagster_airflow.factory._make_airflow_dag": {
  "lineno": 47,
  "symbols_in_volume": [
   "airflow.DAG",
   "airflow.operators.BaseOperator",
   "dagster.ExecutionTargetHandle",
   "dagster.RunConfig",
   "dagster.check.inst_param",
   "dagster.check.opt_dict_param",
   "dagster.check.opt_str_param",
   "dagster.check.str_param",
   "dagster.check.subclass_param",
   "dagster.core.execution.api.create_execution_plan",
   "dagster.core.instance.DagsterInstance",
   "dagster.core.instance.DagsterInstance.get",
   "dagster.seven.get_system_temp_directory"
  ],
  "type": "function"
 },
 "dagster_airflow.factory._make_dag_description": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.factory._rename_for_airflow": {
  "lineno": 37,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag": {
  "lineno": 141,
  "symbols_in_volume": [
   "dagster.ExecutionTargetHandle.for_pipeline_module",
   "dagster.check.str_param"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_containerized": {
  "lineno": 227,
  "symbols_in_volume": [
   "dagster.ExecutionTargetHandle.for_pipeline_module",
   "dagster.check.opt_dict_param",
   "dagster.check.str_param"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_containerized_for_handle": {
  "lineno": 293,
  "symbols_in_volume": [
   "dagster.check.opt_dict_param"
  ],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_for_handle": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.factory.make_airflow_dag_kubernetized_for_handle": {
  "lineno": 320,
  "symbols_in_volume": [
   "dagster.check.opt_dict_param"
  ],
  "type": "function"
 },
 "dagster_airflow.format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.format.format_dict_for_graphql": {
  "lineno": 5,
  "symbols_in_volume": [
   "dagster.check.dict_param",
   "dagster.check.failed"
  ],
  "type": "function"
 },
 "dagster_airflow.format.format_dict_for_graphql._format_item": {
  "lineno": 55,
  "symbols_in_volume": [
   "dagster.utils.indenting_printer.IndentingStringIoPrinter"
  ],
  "type": "function"
 },
 "dagster_airflow.format.format_dict_for_graphql._format_subdict": {
  "lineno": 8,
  "symbols_in_volume": [
   "dagster.check.dict_param",
   "dagster.utils.indenting_printer.IndentingStringIoPrinter"
  ],
  "type": "function"
 },
 "dagster_airflow.format.format_dict_for_graphql._format_sublist": {
  "lineno": 34,
  "symbols_in_volume": [
   "dagster.utils.indenting_printer.IndentingStringIoPrinter"
  ],
  "type": "function"
 },
 "dagster_airflow.operators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.docker_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.__get_tls_config": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.__init__": {
  "lineno": 133,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.check.opt_dict_param",
   "dagster.check.opt_inst_param",
   "dagster.check.opt_list_param",
   "dagster.check.str_param",
   "dagster.core.instance.DagsterInstance.from_ref",
   "dagster.core.instance.InstanceRef",
   "dagster.seven.get_system_temp_directory",
   "docker.from_env",
   "warnings.warn"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.execute": {
  "lineno": 294,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.core.definitions.pipeline.ExecutionSelector",
   "dagster.core.storage.pipeline_run.PipelineRun",
   "dagster.core.storage.pipeline_run.PipelineRunStatus.MANAGED",
   "dagster.utils.error.serializable_error_info_from_exc_info",
   "dagster_graphql.client.mutations.DagsterGraphQLClientError",
   "dagster_graphql.client.mutations.handle_execute_plan_result_raw",
   "dagster_graphql.client.mutations.handle_execution_errors",
   "dagster_graphql.implementation.pipeline_execution_manager.build_synthetic_pipeline_error_record",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_command": {
  "lineno": 275,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_hook": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_hook._DummyHook": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_hook._DummyHook.get_conn": {
  "lineno": 289,
  "symbols_in_volume": [
   "docker.from_env"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.get_host_tmp_dir": {
  "lineno": 371,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.query": {
  "lineno": 250,
  "symbols_in_volume": [
   "dagster.seven.json.dumps",
   "dagster_graphql.client.query.RAW_EXECUTE_PLAN_MUTATION"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.DagsterDockerOperator.run_id": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.ModifiedDockerOperator": {
  "lineno": 29,
  "symbols_in_volume": [
   "dagster_airflow.vendor.docker_operator.DockerOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.operators.docker_operator.ModifiedDockerOperator.__get_tls_config": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.ModifiedDockerOperator.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.ModifiedDockerOperator.execute": {
  "lineno": 51,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.seven.json.loads",
   "docker.APIClient"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.docker_operator.ModifiedDockerOperator.get_host_tmp_dir": {
  "lineno": 45,
  "symbols_in_volume": [
   "airflow.utils.file.TemporaryDirectory",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.kubernetes_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.kubernetes_operator.DagsterKubernetesPodOperator": {
  "lineno": 30,
  "symbols_in_volume": [
   "dagster_airflow.vendor.kubernetes_pod_operator.KubernetesPodOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.operators.kubernetes_operator.DagsterKubernetesPodOperator.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.__version__",
   "dagster.check.invariant",
   "dagster.check.opt_dict_param",
   "dagster.check.opt_inst_param",
   "dagster.check.opt_list_param",
   "dagster.check.str_param",
   "dagster.core.instance.DagsterInstance.from_ref",
   "dagster.core.instance.InstanceRef"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.kubernetes_operator.DagsterKubernetesPodOperator.execute": {
  "lineno": 150,
  "symbols_in_volume": [
   "airflow.contrib.kubernetes.kube_client.get_kube_client",
   "airflow.contrib.kubernetes.pod_generator.PodGenerator",
   "airflow.contrib.kubernetes.pod_launcher.PodLauncher",
   "airflow.exceptions.AirflowException",
   "airflow.utils.state.State.SUCCESS",
   "dagster.core.definitions.pipeline.ExecutionSelector",
   "dagster.core.storage.pipeline_run.PipelineRun",
   "dagster.core.storage.pipeline_run.PipelineRunStatus.MANAGED",
   "dagster.utils.error.serializable_error_info_from_exc_info",
   "dagster_graphql.client.mutations.DagsterGraphQLClientError",
   "dagster_graphql.client.mutations.handle_execute_plan_result_raw",
   "dagster_graphql.client.mutations.handle_execution_errors",
   "dagster_graphql.implementation.pipeline_execution_manager.build_synthetic_pipeline_error_record",
   "sys.exc_info",
   "time.sleep"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.kubernetes_operator.DagsterKubernetesPodOperator.query": {
  "lineno": 121,
  "symbols_in_volume": [
   "dagster.seven.json.dumps",
   "dagster_graphql.client.query.RAW_EXECUTE_PLAN_MUTATION"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.kubernetes_operator.DagsterKubernetesPodOperator.run_id": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.python_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.python_operator.DagsterPythonOperator": {
  "lineno": 17,
  "symbols_in_volume": [
   "dagster_airflow.vendor.python_operator.PythonOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.operators.python_operator.DagsterPythonOperator.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.check.invariant"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.python_operator.DagsterPythonOperator.__init__.python_callable": {
  "lineno": 49,
  "symbols_in_volume": [
   "dagster.core.definitions.pipeline.ExecutionSelector",
   "dagster.core.instance.DagsterInstance.from_ref",
   "dagster.core.storage.pipeline_run.PipelineRun",
   "dagster.core.storage.pipeline_run.PipelineRunStatus.MANAGED",
   "dagster.seven.json.dumps",
   "dagster_graphql.client.mutations.execute_execute_plan_mutation",
   "dagster_graphql.client.query.EXECUTE_PLAN_MUTATION",
   "logging.info"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.operators.util.check_events_for_failures": {
  "lineno": 10,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "dagster.check.list_param",
   "dagster.core.events.DagsterEvent"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.check_events_for_skips": {
  "lineno": 21,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowSkipException",
   "dagster.DagsterEventType.STEP_SKIPPED.value",
   "dagster.check.list_param",
   "dagster.core.events.DagsterEvent"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.construct_variables": {
  "lineno": 28,
  "symbols_in_volume": [
   "dagster.check.list_param",
   "dagster.check.opt_str_param",
   "dagster.check.str_param"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.convert_airflow_datestr_to_epoch_ts": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.operators.util.get_aws_environment": {
  "lineno": 103,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "dagster_airflow.operators.util.parse_raw_res": {
  "lineno": 59,
  "symbols_in_volume": [
   "dagster.seven.JSONDecodeError",
   "dagster.seven.json.loads"
  ],
  "type": "function"
 },
 "dagster_airflow.test_fixtures": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.test_fixtures.dagster_airflow_docker_operator_pipeline": {
  "lineno": 86,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "dagster_airflow.test_fixtures.dagster_airflow_docker_operator_pipeline._pipeline_fn": {
  "lineno": 105,
  "symbols_in_volume": [
   "airflow.DAG",
   "airflow.utils.timezone.utcnow",
   "dagster.utils.load_yaml_from_glob_list",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "dagster_airflow.test_fixtures.dagster_airflow_k8s_operator_pipeline": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "dagster_airflow.test_fixtures.dagster_airflow_k8s_operator_pipeline._pipeline_fn": {
  "lineno": 157,
  "symbols_in_volume": [
   "airflow.DAG",
   "airflow.utils.timezone.utcnow",
   "dagster.utils.load_yaml_from_glob_list",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "dagster_airflow.test_fixtures.dagster_airflow_python_operator_pipeline": {
  "lineno": 41,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "dagster_airflow.test_fixtures.dagster_airflow_python_operator_pipeline._pipeline_fn": {
  "lineno": 59,
  "symbols_in_volume": [
   "airflow.DAG",
   "airflow.utils.timezone.utcnow",
   "dagster.utils.load_yaml_from_glob_list",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "dagster_airflow.test_fixtures.execute_tasks_in_dag": {
  "lineno": 15,
  "symbols_in_volume": [
   "airflow.DAG",
   "airflow.exceptions.AirflowSkipException",
   "airflow.models.TaskInstance",
   "airflow.settings.LOG_FORMAT",
   "logging.DEBUG",
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.getLogger",
   "sys.stdout"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.docker_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator": {
  "lineno": 35,
  "symbols_in_volume": [
   "airflow.models.BaseOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.__get_tls_config": {
  "lineno": 265,
  "symbols_in_volume": [
   "docker.tls.TLSConfig"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.__init__": {
  "lineno": 123,
  "symbols_in_volume": [
   "airflow.utils.decorators.apply_defaults"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.execute": {
  "lineno": 193,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "airflow.utils.file.TemporaryDirectory",
   "docker.APIClient",
   "json.loads"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.get_command": {
  "lineno": 253,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.get_hook": {
  "lineno": 185,
  "symbols_in_volume": [
   "airflow.hooks.docker_hook.DockerHook"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.docker_operator.DockerOperator.on_kill": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator.KubernetesPodOperator": {
  "lineno": 30,
  "symbols_in_volume": [
   "airflow.models.BaseOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator.KubernetesPodOperator.__init__": {
  "lineno": 152,
  "symbols_in_volume": [
   "airflow.contrib.kubernetes.pod.Resources",
   "airflow.utils.decorators.apply_defaults"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.kubernetes_pod_operator.KubernetesPodOperator.execute": {
  "lineno": 99,
  "symbols_in_volume": [
   "airflow.contrib.kubernetes.kube_client.get_kube_client",
   "airflow.contrib.kubernetes.pod_generator.PodGenerator",
   "airflow.contrib.kubernetes.pod_launcher.PodLauncher",
   "airflow.exceptions.AirflowException",
   "airflow.utils.state.State.SUCCESS"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.python_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator": {
  "lineno": 32,
  "symbols_in_volume": [
   "airflow.models.BaseOperator"
  ],
  "type": "class"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "airflow.exceptions.AirflowException",
   "airflow.utils.decorators.apply_defaults"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator.execute": {
  "lineno": 94,
  "symbols_in_volume": [
   "airflow.utils.operator_helpers.context_to_airflow_vars",
   "os.environ.update"
  ],
  "type": "function"
 },
 "dagster_airflow.vendor.python_operator.PythonOperator.execute_callable": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dagster_airflow.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}