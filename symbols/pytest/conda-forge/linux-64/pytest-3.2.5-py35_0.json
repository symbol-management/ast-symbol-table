{
 "_pytest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._argcomplete": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "sys.exit"
  ],
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "lineno": 72,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.dirname",
   "os.path.isdir",
   "os.path.sep"
  ],
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._code._py2traceback": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._code._py2traceback._format_final_exc_line": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code._py2traceback._some_str": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code._py2traceback.format_exception_only": {
  "lineno": 9,
  "symbols_in_volume": [
   "types.InstanceType"
  ],
  "type": "function"
 },
 "_pytest._code.code": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.PY35",
   "_pytest.compat._PY3",
   "py.builtin._tryimport"
  ],
  "type": "module"
 },
 "_pytest._code.code.Code": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Code.__eq__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Code.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Code.__ne__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Code.fullsource": {
  "lineno": 57,
  "symbols_in_volume": [
   "_pytest._code.source.findsource"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.getargs": {
  "lineno": 72,
  "symbols_in_volume": [
   "inspect.CO_VARARGS",
   "inspect.CO_VARKEYWORDS"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.path": {
  "lineno": 41,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.source": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ExceptionChainRepr.__init__": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr.toterminal": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo": {
  "lineno": 358,
  "symbols_in_volume": [
   "_pytest.compat._PY2"
  ],
  "type": "class"
 },
 "_pytest._code.code.ExceptionInfo.__init__": {
  "lineno": 365,
  "symbols_in_volume": [
   "py.io.saferepr",
   "sys.exc_info",
   "weakref.ref"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__repr__": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__str__": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__unicode__": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo._getreprcrash": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.errisinstance": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.exconly": {
  "lineno": 390,
  "symbols_in_volume": [
   "traceback.format_exception_only"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.getrepr": {
  "lineno": 416,
  "symbols_in_volume": [
   "py.std.traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.match": {
  "lineno": 447,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ExceptionRepr.__init__": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.addsection": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.toterminal": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.FormattedExcinfo.__init__": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._getentrysource": {
  "lineno": 490,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.deindent"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._getindent": {
  "lineno": 475,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.getstatement"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._makepath": {
  "lineno": 597,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._saferepr": {
  "lineno": 496,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._truncate_recursive_traceback": {
  "lineno": 625,
  "symbols_in_volume": [
   "_pytest.compat.safe_str"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_exconly": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_source": {
  "lineno": 506,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.lines",
   "_pytest._code.source.lines.strip"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_args": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_excinfo": {
  "lineno": 657,
  "symbols_in_volume": [
   "_pytest.compat._PY2",
   "py.std.traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_locals": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback_entry": {
  "lineno": 564,
  "symbols_in_volume": [
   "_pytest._code.source"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Frame.__init__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.eval": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.exec_": {
  "lineno": 117,
  "symbols_in_volume": [
   "py.builtin.exec_"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame.getargs": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.is_true": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.repr": {
  "lineno": 126,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame.statement": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprEntry.__init__": {
  "lineno": 797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.__str__": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.toterminal": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprEntryNative.__init__": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative.toterminal": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprExceptionInfo.__init__": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo.toterminal": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprFileLocation.__init__": {
  "lineno": 833,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation.toterminal": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprFuncArgs.__init__": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs.toterminal": {
  "lineno": 862,
  "symbols_in_volume": [
   "_pytest.compat.safe_str"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprLocals": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprLocals.__init__": {
  "lineno": 850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprLocals.toterminal": {
  "lineno": 853,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprTraceback.__init__": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback.toterminal": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprTracebackNative": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprTracebackNative.__init__": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.TerminalRepr.__repr__": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__str__": {
  "lineno": 693,
  "symbols_in_volume": [
   "_pytest.compat._PY2"
  ],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__unicode__": {
  "lineno": 699,
  "symbols_in_volume": [
   "py.io.TerminalWriter",
   "py.io.TextIO"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Traceback.__getitem__": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__.f": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.cut": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.filter": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.getcrashentry": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.recursionindex": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry": {
  "lineno": 149,
  "symbols_in_volume": [
   "_pytest._code.source"
  ],
  "type": "class"
 },
 "_pytest._code.code.TracebackEntry.__init__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__repr__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__str__": {
  "lineno": 243,
  "symbols_in_volume": [
   "py.error.Error"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.frame": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getfirstlinesource": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getlocals": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getsource": {
  "lineno": 195,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.getstatementrange_ast"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.ishidden": {
  "lineno": 221,
  "symbols_in_volume": [
   "py.builtin.callable"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.name": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.path": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.relline": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.set_repr_style": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.statement": {
  "lineno": 176,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.getstatement"
  ],
  "type": "function"
 },
 "_pytest._code.code.getrawcode": {
  "lineno": 881,
  "symbols_in_volume": [
   "py.std.inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest._code.code.is_recursion_error": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source": {
  "lineno": null,
  "symbols_in_volume": [
   "_ast",
   "_ast.PyCF_ONLY_AST"
  ],
  "type": "module"
 },
 "_pytest._code.source.Source": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.source.Source.__eq__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__getitem__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "py.builtin._basestring"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.__len__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__str__": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.compile": {
  "lineno": 161,
  "symbols_in_volume": [
   "__future__.generators.compiler_flag",
   "_ast.PyCF_ONLY_AST",
   "py.path.local",
   "py.std.linecache.cache",
   "sys._getframe",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.deindent": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.getstatement": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.getstatementrange": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.indent": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.isparseable": {
  "lineno": 132,
  "symbols_in_volume": [
   "parser.suite"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.isparseable.syntax_checker": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.putaround": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.strip": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.compile_": {
  "lineno": 205,
  "symbols_in_volume": [
   "__future__.generators.compiler_flag",
   "_ast",
   "_ast.AST",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest._code.source.deindent": {
  "lineno": 275,
  "symbols_in_volume": [
   "tokenize.TokenError",
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "_pytest._code.source.deindent.readline_generator": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.findsource": {
  "lineno": 252,
  "symbols_in_volume": [
   "py.builtin._sysex",
   "py.std.inspect.findsource"
  ],
  "type": "function"
 },
 "_pytest._code.source.get_statement_startend2": {
  "lineno": 318,
  "symbols_in_volume": [
   "_ast.ExceptHandler",
   "_ast.stmt",
   "ast.walk",
   "bisect.bisect_right"
  ],
  "type": "function"
 },
 "_pytest._code.source.getfslineno": {
  "lineno": 220,
  "symbols_in_volume": [
   "py.path.local",
   "py.std.inspect.getfile",
   "py.std.inspect.getsourcefile"
  ],
  "type": "function"
 },
 "_pytest._code.source.getsource": {
  "lineno": 264,
  "symbols_in_volume": [
   "inspect.getsource"
  ],
  "type": "function"
 },
 "_pytest._code.source.getstatementrange_ast": {
  "lineno": 341,
  "symbols_in_volume": [
   "inspect.BlockFinder",
   "inspect.EndOfBlock",
   "sys.version_info",
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "_pytest._code.source.getstatementrange_old": {
  "lineno": 384,
  "symbols_in_volume": [
   "codeop.compile_command"
  ],
  "type": "function"
 },
 "_pytest._pluggy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.assertion": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.assertion.util.assertrepr_compare"
  ],
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.install_importhook": {
  "lineno": 68,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook",
   "sys.meta_path.insert",
   "sys.platform.startswith",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "lineno": 81,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.meta_path.remove"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_addoption": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.pytest_collection": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup": {
  "lineno": 100,
  "symbols_in_volume": [
   "_pytest.assertion.util._reprcompare"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.callbinrepr": {
  "lineno": 108,
  "symbols_in_volume": [
   "_pytest.assertion.truncate.truncate_if_required",
   "py.builtin._totext"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_teardown": {
  "lineno": 136,
  "symbols_in_volume": [
   "_pytest.assertion.util._reprcompare"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "lineno": 28,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook",
   "sys.meta_path"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "lineno": null,
  "symbols_in_volume": [
   "ast",
   "ast.Add",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.BitXor",
   "ast.Call",
   "ast.Div",
   "ast.Eq",
   "ast.FloorDiv",
   "ast.Gt",
   "ast.GtE",
   "ast.In",
   "ast.Invert",
   "ast.Is",
   "ast.IsNot",
   "ast.LShift",
   "ast.Lt",
   "ast.LtE",
   "ast.MatMult",
   "ast.Mod",
   "ast.Mult",
   "ast.NameConstant",
   "ast.Not",
   "ast.NotEq",
   "ast.NotIn",
   "ast.Pow",
   "ast.RShift",
   "ast.Sub",
   "ast.UAdd",
   "ast.USub",
   "imp",
   "imp.get_tag",
   "re.compile",
   "sys",
   "sys.platform",
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "lineno": 532,
  "symbols_in_volume": [
   "ast.NodeVisitor",
   "sys.version_info"
  ],
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "lineno": 653,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Load",
   "ast.Name",
   "ast.Store"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "lineno": 669,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "lineno": 720,
  "symbols_in_volume": [
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "lineno": 663,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.is_rewrite_disabled": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "lineno": 701,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.BinOp",
   "ast.Dict",
   "ast.Load",
   "ast.Mod",
   "ast.Name",
   "ast.Store",
   "ast.Str"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "lineno": 589,
  "symbols_in_volume": [
   "ast.AST",
   "ast.Assert",
   "ast.Expr",
   "ast.Import",
   "ast.ImportFrom",
   "ast.Str",
   "ast.alias",
   "ast.expr",
   "ast.iter_fields",
   "py.builtin.builtins.__name__"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "lineno": 726,
  "symbols_in_volume": [
   "ast.Add",
   "ast.Assign",
   "ast.BinOp",
   "ast.If",
   "ast.Load",
   "ast.Name",
   "ast.Not",
   "ast.Raise",
   "ast.Store",
   "ast.Str",
   "ast.Tuple",
   "ast.UnaryOp",
   "itertools.count",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "lineno": 908,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "lineno": 829,
  "symbols_in_volume": [
   "ast.BinOp"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "lineno": 788,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Attribute",
   "ast.Expr",
   "ast.If",
   "ast.List",
   "ast.Load",
   "ast.Name",
   "ast.Not",
   "ast.Num",
   "ast.Or",
   "ast.Store",
   "ast.Str",
   "ast.UnaryOp"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_35": {
  "lineno": 837,
  "symbols_in_volume": [
   "ast.Call",
   "ast.keyword"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_legacy": {
  "lineno": 869,
  "symbols_in_volume": [
   "ast.Call",
   "ast.keyword"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "lineno": 918,
  "symbols_in_volume": [
   "_ast.BoolOp",
   "_ast.Compare",
   "ast.And",
   "ast.Assign",
   "ast.BoolOp",
   "ast.Compare",
   "ast.Load",
   "ast.Name",
   "ast.Store",
   "ast.Str",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "lineno": 778,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Compare",
   "ast.IfExp",
   "ast.In",
   "ast.Or",
   "ast.Str"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "lineno": 823,
  "symbols_in_volume": [
   "ast.UnaryOp"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._register_with_pkg_resources": {
  "lineno": 229,
  "symbols_in_volume": [
   "pkg_resources.DefaultProvider",
   "pkg_resources.__name__",
   "pkg_resources.register_loader_type"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_module": {
  "lineno": 61,
  "symbols_in_volume": [
   "errno.EACCES",
   "errno.EEXIST",
   "errno.ENOENT",
   "errno.ENOTDIR",
   "errno.EPERM",
   "errno.EROFS",
   "imp",
   "imp.PY_COMPILED",
   "imp.PY_SOURCE",
   "imp.find_module",
   "imp.source_from_cache",
   "os.mkdir",
   "os.path.join",
   "py.path.local",
   "sys.dont_write_bytecode",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.is_package": {
  "lineno": 219,
  "symbols_in_volume": [
   "imp.PKG_DIRECTORY",
   "imp.find_module"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.load_module": {
  "lineno": 195,
  "symbols_in_volume": [
   "imp.new_module",
   "py.builtin.exec_",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "lineno": 177,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite._NameConstant": {
  "lineno": 515,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "lineno": 459,
  "symbols_in_volume": [
   "_pytest.assertion.util._reprcompare"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "lineno": 418,
  "symbols_in_volume": [
   "py.builtin._isbytes",
   "py.builtin._istext",
   "py.builtin.bytes",
   "py.builtin.text",
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "lineno": 450,
  "symbols_in_volume": [
   "py.builtin._istext",
   "py.builtin.bytes",
   "py.builtin.text"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._make_rewritten_pyc": {
  "lineno": 344,
  "symbols_in_volume": [
   "os.getpid",
   "os.rename",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "lineno": 358,
  "symbols_in_volume": [
   "imp.get_magic",
   "marshal.load",
   "struct.unpack",
   "types.CodeType"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "lineno": 286,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "lineno": 396,
  "symbols_in_volume": [
   "py.builtin._istext",
   "py.builtin.bytes",
   "py.builtin.text",
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "lineno": 446,
  "symbols_in_volume": [
   "py.builtin.callable"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "lineno": 253,
  "symbols_in_volume": [
   "imp.get_magic",
   "marshal.dump",
   "struct.pack",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.ast_Call": {
  "lineno": 42,
  "symbols_in_volume": [
   "ast.Call"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "lineno": 521,
  "symbols_in_volume": [
   "ast.iter_child_nodes"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.assertion.truncate._running_on_ci": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate._should_truncate_item": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_by_char_count": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_explanation": {
  "lineno": 41,
  "symbols_in_volume": [
   "py.builtin._totext"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate.truncate_if_required": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.Sequence",
   "py.builtin._totext"
  ],
  "type": "module"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "lineno": 262,
  "symbols_in_volume": [
   "pprint.pformat",
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "lineno": 209,
  "symbols_in_volume": [
   "difflib.ndiff",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "lineno": 230,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "lineno": 247,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "lineno": 167,
  "symbols_in_volume": [
   "difflib.ndiff",
   "py.builtin.bytes"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "lineno": 291,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._split_explanation": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "lineno": 106,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isdict": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isiterable": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.issequence": {
  "lineno": 114,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isset": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.istext": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.ecu": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.format_explanation": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.cacheprovider.Cache": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.Cache.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.cache_dir_from_config": {
  "lineno": 26,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.expandvars",
   "os.path.isabs",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "lineno": 53,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.path.altsep",
   "os.path.sep"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "lineno": 73,
  "symbols_in_volume": [
   "json.dump",
   "py.error.EACCES",
   "py.error.EEXIST",
   "py.error.ENOTDIR"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_collectionfinish": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.cache": {
  "lineno": 204,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "lineno": 226,
  "symbols_in_volume": [
   "pprint.pprint",
   "py.io.TerminalWriter",
   "py.io.TextIO"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "lineno": 192,
  "symbols_in_volume": [
   "_pytest.main.wrap_session"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "lineno": 198,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "lineno": 220,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.capture": {
  "lineno": null,
  "symbols_in_volume": [
   "py.builtin.text"
  ],
  "type": "module"
 },
 "_pytest.capture.CaptureFixture": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.CaptureFixture.__init__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._start": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.close": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.disabled": {
  "lineno": 212,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.readouterr": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.CaptureManager.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager._getcapture": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.activate_funcargs": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.deactivate_funcargs": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.init_capturings": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_internalerror": {
  "lineno": 151,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_keyboard_interrupt": {
  "lineno": 147,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_make_collect_report": {
  "lineno": 113,
  "symbols_in_volume": [
   "pytest.File",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_call": {
  "lineno": 133,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_setup": {
  "lineno": 127,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_teardown": {
  "lineno": 141,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.reset_capturings": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resumecapture": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspendcapture": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspendcapture_item": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.DontReadFromInput.buffer": {
  "lineno": 474,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.close": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.fileno": {
  "lineno": 464,
  "symbols_in_volume": [
   "io.UnsupportedOperation"
  ],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.isatty": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.read": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.EncodedFile.__getattr__": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.__init__": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.name": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.write": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.writelines": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCapture": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.FDCapture.__init__": {
  "lineno": 337,
  "symbols_in_volume": [
   "os.devnull",
   "os.dup",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCapture.__repr__": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCapture.done": {
  "lineno": 386,
  "symbols_in_volume": [
   "os.close",
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCapture.resume": {
  "lineno": 399,
  "symbols_in_volume": [
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCapture.snap": {
  "lineno": 373,
  "symbols_in_volume": [
   "py.builtin._totext"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCapture.start": {
  "lineno": 364,
  "symbols_in_volume": [
   "os.dup2",
   "os.fstat"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCapture.suspend": {
  "lineno": 395,
  "symbols_in_volume": [
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCapture.writeorg": {
  "lineno": 403,
  "symbols_in_volume": [
   "os.write",
   "py.builtin._istext"
  ],
  "type": "function"
 },
 "_pytest.capture.MultiCapture": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.MultiCapture.__init__": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.pop_outerr_to_orig": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.readouterr": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.resume_capturing": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.start_capturing": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.stop_capturing": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.suspend_capturing": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.NoCapture": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCapture": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCapture.__init__": {
  "lineno": 411,
  "symbols_in_volume": [
   "_pytest.compat.CaptureIO",
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.done": {
  "lineno": 432,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.resume": {
  "lineno": 440,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.snap": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCapture.start": {
  "lineno": 422,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.suspend": {
  "lineno": 437,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.writeorg": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture._colorama_workaround": {
  "lineno": 482,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround": {
  "lineno": 527,
  "symbols_in_volume": [
   "io._WindowsConsoleIO",
   "sys.__stderr__",
   "sys.__stdin__",
   "sys.__stdout__",
   "sys.platform.startswith",
   "sys.stderr",
   "sys.stdin",
   "sys.stdout",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround._reopen_stdio": {
  "lineno": 562,
  "symbols_in_volume": [
   "io.TextIOWrapper",
   "os.dup"
  ],
  "type": "function"
 },
 "_pytest.capture._readline_workaround": {
  "lineno": 500,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.capture.capfd": {
  "lineno": 176,
  "symbols_in_volume": [
   "os",
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.capture.capsys": {
  "lineno": 164,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_addoption": {
  "lineno": 23,
  "symbols_in_volume": [
   "os"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests": {
  "lineno": 35,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "sys.stderr.write",
   "sys.stdout",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests.silence_logging_at_shutdown": {
  "lineno": 50,
  "symbols_in_volume": [
   "sys.modules",
   "sys.modules.raiseExceptions"
  ],
  "type": "function"
 },
 "_pytest.capture.safe_text_dupfile": {
  "lineno": 222,
  "symbols_in_volume": [
   "os.dup",
   "os.fdopen"
  ],
  "type": "function"
 },
 "_pytest.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "enum",
   "inspect",
   "inspect.isclass",
   "inspect.isfunction",
   "re.compile",
   "sys",
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.compat.CaptureIO": {
  "lineno": 308,
  "symbols_in_volume": [
   "io.TextIOWrapper"
  ],
  "type": "class"
 },
 "_pytest.compat.CaptureIO.__init__": {
  "lineno": 309,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "_pytest.compat.CaptureIO.encoding": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.CaptureIO.getvalue": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.FuncargnamesCompatAttr": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.compat.FuncargnamesCompatAttr.funcargnames": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat._ascii_escaped": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "lineno": 39,
  "symbols_in_volume": [
   "inspect.formatargspec",
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "_pytest.compat._is_unittest_unexpected_success_a_failure": {
  "lineno": 246,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.compat._setup_collect_fakemodule": {
  "lineno": 286,
  "symbols_in_volume": [
   "pytest",
   "pytest.collect",
   "pytest.collect.__all__",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.compat.get_real_func": {
  "lineno": 191,
  "symbols_in_volume": [
   "functools.partial",
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.compat.getfslineno": {
  "lineno": 212,
  "symbols_in_volume": [
   "_pytest._code.getfslineno"
  ],
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "lineno": 86,
  "symbols_in_volume": [
   "_pytest._code.getrawcode",
   "functools.partial",
   "inspect.getargs",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "lineno": 65,
  "symbols_in_volume": [
   "inspect.getfile",
   "py.builtin._getcode",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.compat.is_generator": {
  "lineno": 50,
  "symbols_in_volume": [
   "inspect.isgeneratorfunction"
  ],
  "type": "function"
 },
 "_pytest.compat.isclass": {
  "lineno": 123,
  "symbols_in_volume": [
   "types.ClassType"
  ],
  "type": "function"
 },
 "_pytest.compat.iscoroutinefunction": {
  "lineno": 55,
  "symbols_in_volume": [
   "inspect",
   "inspect.iscoroutinefunction"
  ],
  "type": "function"
 },
 "_pytest.compat.num_mock_patch_args": {
  "lineno": 74,
  "symbols_in_volume": [
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.compat.safe_getattr": {
  "lineno": 232,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME"
  ],
  "type": "function"
 },
 "_pytest.compat.safe_str": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest._pluggy.HookimplMarker",
   "_pytest._pluggy.HookspecMarker"
  ],
  "type": "module"
 },
 "_pytest.config.Argument": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Argument.__init__": {
  "lineno": 628,
  "symbols_in_volume": [
   "py.builtin._basestring",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.config.Argument.__repr__": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Argument._set_opt_strings": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Argument.attrs": {
  "lineno": 689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Argument.names": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.ArgumentError": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.ArgumentError.__init__": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.ArgumentError.__str__": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.CmdOptions": {
  "lineno": 862,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.CmdOptions.__init__": {
  "lineno": 865,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.CmdOptions.__repr__": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.CmdOptions.copy": {
  "lineno": 871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config": {
  "lineno": 896,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Config.__init__": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.__init__.do_setns": {
  "lineno": 920,
  "symbols_in_volume": [
   "pytest"
  ],
  "type": "function"
 },
 "_pytest.config.Config._checkversion": {
  "lineno": 1102,
  "symbols_in_volume": [
   "pytest.UsageError",
   "pytest.__version__",
   "pytest.__version__.split"
  ],
  "type": "function"
 },
 "_pytest.config.Config._consider_importhook": {
  "lineno": 1016,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._do_configure": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._ensure_unconfigure": {
  "lineno": 937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._get_override_ini_value": {
  "lineno": 1201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._getconftest_pathlist": {
  "lineno": 1187,
  "symbols_in_volume": [
   "py.path.local",
   "py.path.local.sep"
  ],
  "type": "function"
 },
 "_pytest.config.Config._getini": {
  "lineno": 1156,
  "symbols_in_volume": [
   "py.path.local",
   "shlex.split"
  ],
  "type": "function"
 },
 "_pytest.config.Config._initini": {
  "lineno": 1005,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.Config._mark_plugins_for_rewrite": {
  "lineno": 1034,
  "symbols_in_volume": [
   "pkg_resources.iter_entry_points"
  ],
  "type": "function"
 },
 "_pytest.config.Config._preparse": {
  "lineno": 1076,
  "symbols_in_volume": [
   "os.environ.get",
   "py.path.local",
   "shlex.split",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.config.Config._processopt": {
  "lineno": 993,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._warn_about_missing_assertion": {
  "lineno": 1059,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.config.Config.add_cleanup": {
  "lineno": 927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.addinivalue_line": {
  "lineno": 1137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.cwd_relative_nodeid": {
  "lineno": 976,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.fromdictargs": {
  "lineno": 983,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.get_terminal_writer": {
  "lineno": 952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getini": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getoption": {
  "lineno": 1217,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.config.Config.getvalue": {
  "lineno": 1240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getvalueorskip": {
  "lineno": 1244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.notify_exception": {
  "lineno": 960,
  "symbols_in_volume": [
   "py.builtin.any",
   "sys.stderr.flush",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.config.Config.parse": {
  "lineno": 1114,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.config.Config.pytest_cmdline_parse": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.pytest_load_initial_conftests": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.warn": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.ConftestImportFailure.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure.__str__": {
  "lineno": 32,
  "symbols_in_volume": [
   "traceback.format_tb"
  ],
  "type": "function"
 },
 "_pytest.config.DropShorterLongHelpFormatter": {
  "lineno": 805,
  "symbols_in_volume": [
   "argparse.HelpFormatter"
  ],
  "type": "class"
 },
 "_pytest.config.DropShorterLongHelpFormatter._format_action_invocation": {
  "lineno": 815,
  "symbols_in_volume": [
   "argparse.HelpFormatter._format_action_invocation"
  ],
  "type": "function"
 },
 "_pytest.config.MyOptionParser": {
  "lineno": 780,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "class"
 },
 "_pytest.config.MyOptionParser.__init__": {
  "lineno": 781,
  "symbols_in_volume": [
   "argparse.ArgumentParser.__init__"
  ],
  "type": "function"
 },
 "_pytest.config.MyOptionParser.parse_args": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Notset": {
  "lineno": 875,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Notset.__repr__": {
  "lineno": 876,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.OptionGroup": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.OptionGroup.__init__": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.OptionGroup._addoption": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.OptionGroup._addoption_instance": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.OptionGroup.addoption": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Parser.__init__": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser._getparser": {
  "lineno": 545,
  "symbols_in_volume": [
   "_pytest._argcomplete.filescompleter"
  ],
  "type": "function"
 },
 "_pytest.config.Parser.addini": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser.addoption": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser.getgroup": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser.parse": {
  "lineno": 539,
  "symbols_in_volume": [
   "_pytest._argcomplete.try_argcomplete"
  ],
  "type": "function"
 },
 "_pytest.config.Parser.parse_known_and_unknown_args": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser.parse_known_args": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser.parse_setoption": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Parser.processoption": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PrintHelp": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.PytestPluginManager": {
  "lineno": 174,
  "symbols_in_volume": [
   "_pytest._pluggy.PluginManager"
  ],
  "type": "class"
 },
 "_pytest.config.PytestPluginManager.__init__": {
  "lineno": 184,
  "symbols_in_volume": [
   "os.environ.get",
   "py.io.dupfile",
   "sys.stderr"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._getconftestmodules": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._import_plugin_specs": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._importconftest": {
  "lineno": 371,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._rget_with_confmod": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._set_initial_conftests": {
  "lineno": 303,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._try_load_conftest": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._verify_hook": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._warn": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.addhooks": {
  "lineno": 210,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_conftest": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_env": {
  "lineno": 417,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_module": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_pluginarg": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_preparse": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.getplugin": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.hasplugin": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.import_plugin": {
  "lineno": 428,
  "symbols_in_volume": [
   "_pytest.compat.safe_str",
   "py.builtin.text",
   "pytest",
   "pytest.skip.Exception",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookimpl_opts": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookspec_opts": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.pytest_configure": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.register": {
  "lineno": 263,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.config.UsageError": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config._ensure_removed_sysmodule": {
  "lineno": 855,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.config._get_plugin_specs_as_list": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config._iter_rewritable_modules": {
  "lineno": 884,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "_pytest.config._preloadplugins": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config._prepareconfig": {
  "lineno": 144,
  "symbols_in_volume": [
   "_pytest.deprecated.MAIN_STR_ARGS",
   "py.builtin._basestring",
   "py.path.local",
   "shlex.split",
   "sys.argv",
   "sys.platform"
  ],
  "type": "function"
 },
 "_pytest.config._strtobool": {
  "lineno": 1399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.cmdline": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.create_terminal_writer": {
  "lineno": 1386,
  "symbols_in_volume": [
   "py.io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.config.determine_setup": {
  "lineno": 1339,
  "symbols_in_volume": [
   "os.path.splitdrive",
   "py.iniconfig.IniConfig",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.directory_arg": {
  "lineno": 92,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.config.exists": {
  "lineno": 1249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.filename_arg": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.config.get_common_ancestor": {
  "lineno": 1290,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.get_config": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args": {
  "lineno": 1313,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args.get_dir_from_path": {
  "lineno": 1320,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args.get_file_part_from_node_id": {
  "lineno": 1317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args.is_option": {
  "lineno": 1314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.get_plugin_manager": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.getcfg": {
  "lineno": 1256,
  "symbols_in_volume": [
   "_pytest.deprecated.SETUP_CFG_PYTEST",
   "py.iniconfig.IniConfig",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.main": {
  "lineno": 39,
  "symbols_in_volume": [
   "py.io.TerminalWriter",
   "sys.stderr",
   "sys.stderr.write",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest.config.setns": {
  "lineno": 1365,
  "symbols_in_volume": [
   "pytest",
   "sys.modules",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.debugging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.debugging.PdbInvoke": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.PdbInvoke.pytest_exception_interact": {
  "lineno": 66,
  "symbols_in_volume": [
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.debugging.PdbInvoke.pytest_internalerror": {
  "lineno": 74,
  "symbols_in_volume": [
   "sys.stderr.flush",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.debugging._enter_pdb": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging._find_last_non_hidden_frame": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging._postmortem_traceback": {
  "lineno": 97,
  "symbols_in_volume": [
   "doctest.UnexpectedException"
  ],
  "type": "function"
 },
 "_pytest.debugging.post_mortem": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.post_mortem.Pdb": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.post_mortem.Pdb.get_stack": {
  "lineno": 116,
  "symbols_in_volume": [
   "pdb.Pdb.get_stack"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB": {
  "lineno": 43,
  "symbols_in_volume": [
   "pdb.Pdb"
  ],
  "type": "class"
 },
 "_pytest.debugging.pytestPDB.set_trace": {
  "lineno": 49,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytest_addoption": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytest_configure": {
  "lineno": 18,
  "symbols_in_volume": [
   "pdb.Pdb",
   "pdb.set_trace",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytest_configure.fin": {
  "lineno": 31,
  "symbols_in_volume": [
   "pdb.Pdb",
   "pdb.set_trace"
  ],
  "type": "function"
 },
 "_pytest.deprecated": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.deprecated.RemovedInPytest4Warning": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.doctest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.doctest.DoctestItem": {
  "lineno": 81,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestItem.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.reportinfo": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.repr_failure": {
  "lineno": 101,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest._code.code.ReprFileLocation",
   "doctest.DocTestFailure",
   "doctest.UnexpectedException",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.runtest": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.setup": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestModule": {
  "lineno": 203,
  "symbols_in_volume": [
   "pytest.Module"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestModule.collect": {
  "lineno": 204,
  "symbols_in_volume": [
   "doctest.DebugRunner",
   "doctest.DocTestFinder",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestTextfile": {
  "lineno": 168,
  "symbols_in_volume": [
   "pytest.Module"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestTextfile.collect": {
  "lineno": 171,
  "symbols_in_volume": [
   "doctest.DebugRunner",
   "doctest.DocTestParser"
  ],
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest": {
  "lineno": 69,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.doctest.ReprFailDoctest.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest.toterminal": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._check_all_skipped": {
  "lineno": 193,
  "symbols_in_volume": [
   "doctest.SKIP",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2": {
  "lineno": 331,
  "symbols_in_volume": [
   "_pytest.compat._PY2"
  ],
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof": {
  "lineno": 346,
  "symbols_in_volume": [
   "doctest._SpoofOut"
  ],
  "type": "class"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof.getvalue": {
  "lineno": 348,
  "symbols_in_volume": [
   "doctest._SpoofOut.getvalue"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_allow_bytes_flag": {
  "lineno": 307,
  "symbols_in_volume": [
   "doctest.register_optionflag"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_allow_unicode_flag": {
  "lineno": 299,
  "symbols_in_volume": [
   "doctest.register_optionflag"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_checker": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker": {
  "lineno": 259,
  "symbols_in_volume": [
   "doctest.OutputChecker",
   "re.UNICODE",
   "re.compile"
  ],
  "type": "class"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output": {
  "lineno": 270,
  "symbols_in_volume": [
   "doctest.OutputChecker.check_output"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output.remove_prefixes": {
  "lineno": 282,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_flag_lookup": {
  "lineno": 146,
  "symbols_in_volume": [
   "doctest.COMPARISON_FLAGS",
   "doctest.DONT_ACCEPT_BLANKLINE",
   "doctest.DONT_ACCEPT_TRUE_FOR_1",
   "doctest.ELLIPSIS",
   "doctest.IGNORE_EXCEPTION_DETAIL",
   "doctest.NORMALIZE_WHITESPACE"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_report_choice": {
  "lineno": 315,
  "symbols_in_volume": [
   "doctest.REPORT_CDIFF",
   "doctest.REPORT_NDIFF",
   "doctest.REPORT_ONLY_FIRST_FAILURE",
   "doctest.REPORT_UDIFF"
  ],
  "type": "function"
 },
 "_pytest.doctest._is_doctest": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures": {
  "lineno": 227,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest"
  ],
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures.func": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.doctest_namespace": {
  "lineno": 357,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.doctest.get_optionflags": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.pytest_addoption": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.pytest_collect_file": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.fixtures.FixtureDef": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureDef.__init__": {
  "lineno": 724,
  "symbols_in_volume": [
   "_pytest.compat.getfuncargnames"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.__repr__": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.addfinalizer": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.execute": {
  "lineno": 769,
  "symbols_in_volume": [
   "py.builtin._reraise"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.finish": {
  "lineno": 747,
  "symbols_in_volume": [
   "py.builtin._reraise",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureFunctionMarker": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureFunctionMarker.__call__": {
  "lineno": 839,
  "symbols_in_volume": [
   "_pytest.compat.isclass"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureFunctionMarker.__init__": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupError.__init__": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError.formatrepr": {
  "lineno": 629,
  "symbols_in_volume": [
   "_pytest.compat.get_real_func",
   "_pytest.compat.getfslineno",
   "inspect.getsourcelines"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr": {
  "lineno": 669,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.__init__": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.toterminal": {
  "lineno": 677,
  "symbols_in_volume": [
   "py._code.code.FormattedExcinfo.fail_marker",
   "py._code.code.FormattedExcinfo.flow_marker"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureManager.__init__": {
  "lineno": 953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._getautousenames": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._matchfactories": {
  "lineno": 1137,
  "symbols_in_volume": [
   "_pytest.nodes.ischildnode"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure": {
  "lineno": 1008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.merge": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixturedefs": {
  "lineno": 1122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureinfo": {
  "lineno": 962,
  "symbols_in_volume": [
   "_pytest.compat.getfuncargnames"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.parsefactories": {
  "lineno": 1065,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.compat.safe_getattr",
   "_pytest.deprecated.FUNCARG_PREFIX.format"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_collection_modifyitems": {
  "lineno": 1061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_generate_tests": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_plugin_registered": {
  "lineno": 976,
  "symbols_in_volume": [
   "_pytest.nodes.SEP",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest": {
  "lineno": 259,
  "symbols_in_volume": [
   "_pytest.compat.FuncargnamesCompatAttr"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureRequest.__init__": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.__repr__": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._addfinalizer": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._check_scope": {
  "lineno": 528,
  "symbols_in_volume": [
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._factorytraceback": {
  "lineno": 540,
  "symbols_in_volume": [
   "_pytest.compat._format_args",
   "_pytest.compat.getfslineno"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._fillfixtures": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_active_fixturedef": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_active_fixturedef.PseudoFixtureDef": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureRequest._get_fixturestack": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getfixturevalue": {
  "lineno": 472,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.compat.exc_clear",
   "_pytest.compat.getlocation",
   "_pytest.outcomes.fail",
   "inspect.getframeinfo",
   "inspect.stack",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getnextfixturedef": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getscopeitem": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.addfinalizer": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.applymarker": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cached_setup": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cached_setup.finalizer": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cls": {
  "lineno": 316,
  "symbols_in_volume": [
   "_pytest.python.Class"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.config": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fixturenames": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fspath": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.function": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfixturevalue": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfuncargvalue": {
  "lineno": 432,
  "symbols_in_volume": [
   "_pytest.deprecated.GETFUNCARGVALUE",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.instance": {
  "lineno": 323,
  "symbols_in_volume": [
   "py.builtin._getimself"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.keywords": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.module": {
  "lineno": 334,
  "symbols_in_volume": [
   "_pytest.python.Module"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.node": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.raiseerror": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.session": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FuncFixtureInfo": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FuncFixtureInfo.__init__": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.ScopeMismatchError": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.SubRequest": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.SubRequest.__init__": {
  "lineno": 570,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.__repr__": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.addfinalizer": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.add_funcarg_pseudo_fixture_def": {
  "lineno": 73,
  "symbols_in_volume": [
   "_pytest.python.Module"
  ],
  "type": "function"
 },
 "_pytest.fixtures.call_fixture_func": {
  "lineno": 700,
  "symbols_in_volume": [
   "_pytest.compat.is_generator"
  ],
  "type": "function"
 },
 "_pytest.fixtures.call_fixture_func.teardown": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.fail_fixturefunc": {
  "lineno": 692,
  "symbols_in_volume": [
   "_pytest._code.Source",
   "_pytest.compat.getfslineno",
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.fixtures.fillfixtures": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.fixture": {
  "lineno": 847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_direct_param_fixture_func": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_parametrized_fixture_keys": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_scope_node": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.getfixturemarker": {
  "lineno": 126,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytest_fixture_setup": {
  "lineno": 799,
  "symbols_in_volume": [
   "_pytest.compat.getimfunc",
   "_pytest.outcomes.TEST_OUTCOME",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytest_sessionstart": {
  "lineno": 30,
  "symbols_in_volume": [
   "_pytest.main.Item",
   "_pytest.python.Class",
   "_pytest.python.Module"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytestconfig": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.reorder_items": {
  "lineno": 166,
  "symbols_in_volume": [
   "collections.OrderedDict.fromkeys"
  ],
  "type": "function"
 },
 "_pytest.fixtures.reorder_items_atscope": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scope2index": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopemismatch": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope.provide": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.slice_items": {
  "lineno": 195,
  "symbols_in_volume": [
   "collections.OrderedDict.fromkeys"
  ],
  "type": "function"
 },
 "_pytest.fixtures.yield_fixture": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.freeze_support": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.path.join",
   "pkgutil.iter_modules"
  ],
  "type": "function"
 },
 "_pytest.freeze_support.freeze_includes": {
  "lineno": 8,
  "symbols_in_volume": [
   "_pytest",
   "py"
  ],
  "type": "function"
 },
 "_pytest.helpconfig": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.helpconfig.HelpAction": {
  "lineno": 12,
  "symbols_in_volume": [
   "argparse.Action"
  ],
  "type": "class"
 },
 "_pytest.helpconfig.HelpAction.__call__": {
  "lineno": 34,
  "symbols_in_volume": [
   "_pytest.config.PrintHelp"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.HelpAction.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "lineno": 91,
  "symbols_in_volume": [
   "py.path.local",
   "pytest.__file__",
   "pytest.__version__",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "py.__version__",
   "pytest.__version__",
   "pytest.hookimpl",
   "sys.stderr.write",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "lineno": 81,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "lineno": 165,
  "symbols_in_volume": [
   "py.__version__",
   "pytest.__version__"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest._pluggy.HookspecMarker"
  ],
  "type": "module"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_doctest_prepare_content": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemstart": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_logwarning": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_namespace": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_collectionfinish": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "sys.maxunicode",
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "lineno": 32,
  "symbols_in_volume": [
   "py.xml.Namespace"
  ],
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "lineno": 264,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.expanduser",
   "os.path.expandvars",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "lineno": 412,
  "symbols_in_volume": [
   "codecs.open",
   "os.makedirs",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "lineno": 409,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "lineno": 187,
  "symbols_in_volume": [
   "py.xml.raw"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.write_captured_output": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "lineno": 58,
  "symbols_in_volume": [
   "py.xml.escape",
   "py.xml.raw"
  ],
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.mangle_test_address": {
  "lineno": 248,
  "symbols_in_volume": [
   "_pytest.nodes.SEP"
  ],
  "type": "function"
 },
 "_pytest.junitxml.pytest_addoption": {
  "lineno": 214,
  "symbols_in_volume": [
   "_pytest.config.filename_arg",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.record_xml_property": {
  "lineno": 193,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.junitxml.record_xml_property.add_property_noop": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.__file__",
   "py.path.local"
  ],
  "type": "module"
 },
 "_pytest.main.Collector": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Collector.CollectError": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Collector._prunetraceback": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Collector.collect": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Collector.repr_failure": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.FSCollector": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.FSCollector.__init__": {
  "lineno": 513,
  "symbols_in_volume": [
   "_pytest.nodes.SEP",
   "os.sep",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.FSCollector._check_initialpaths_for_relpath": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.FSCollector._makeid": {
  "lineno": 529,
  "symbols_in_volume": [
   "_pytest.nodes.SEP",
   "os.sep"
  ],
  "type": "function"
 },
 "_pytest.main.FSHookProxy": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.FSHookProxy.__getattr__": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.FSHookProxy.__init__": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.File": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Item": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Item.__init__": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Item.add_report_section": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Item.location": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Item.reportinfo": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NoMatch": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Node": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Node.__hash__": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.__init__": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.__repr__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node._getcustomclass": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node._makeid": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node._memoizedcall": {
  "lineno": 367,
  "symbols_in_volume": [
   "py.builtin._reraise",
   "py.builtin._sysex",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.main.Node._prunetraceback": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node._repr_failure_py": {
  "lineno": 447,
  "symbols_in_volume": [
   "_pytest._code.Traceback",
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.main.Node.add_marker": {
  "lineno": 396,
  "symbols_in_volume": [
   "_pytest.mark.MARK_GEN",
   "_pytest.mark.MarkDecorator",
   "py.builtin._basestring"
  ],
  "type": "function"
 },
 "_pytest.main.Node.addfinalizer": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.get_marker": {
  "lineno": 408,
  "symbols_in_volume": [
   "_pytest.mark.MarkDecorator",
   "_pytest.mark.MarkInfo"
  ],
  "type": "function"
 },
 "_pytest.main.Node.getparent": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.ihook": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.listchain": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.listextrakeywords": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.listnames": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.nodeid": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.setup": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.teardown": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Node.warn": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords": {
  "lineno": 241,
  "symbols_in_volume": [
   "UserDict.DictMixin"
  ],
  "type": "class"
 },
 "_pytest.main.NodeKeywords.__delitem__": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__getitem__": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__init__": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__iter__": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__len__": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__repr__": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__setitem__": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.NodeKeywords.keys": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "lineno": 605,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session._collectfile": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session._makeid": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "lineno": 791,
  "symbols_in_volume": [
   "_pytest.runner.collect_one_node"
  ],
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "lineno": 763,
  "symbols_in_volume": [
   "_pytest.config.UsageError",
   "os.sep"
  ],
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "lineno": 663,
  "symbols_in_volume": [
   "_pytest.config.UsageError",
   "_pytest.runner.collect_one_node"
  ],
  "type": "function"
 },
 "_pytest.main.Session._recurse": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "lineno": 741,
  "symbols_in_volume": [
   "os.path.dirname",
   "pkgutil.find_loader"
  ],
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "lineno": 694,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "lineno": 823,
  "symbols_in_volume": [
   "_pytest.runner.collect_one_node"
  ],
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "lineno": 637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "lineno": 780,
  "symbols_in_volume": [
   "_pytest.nodes"
  ],
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "lineno": 619,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "lineno": 624,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.main._CompatProperty": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main._CompatProperty.__get__": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main._CompatProperty.__init__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main._in_venv": {
  "lineno": 176,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.main._main": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_addoption": {
  "lineno": 32,
  "symbols_in_volume": [
   "_pytest.config.directory_arg",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_configure": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "lineno": 187,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_namespace": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.wrap_session": {
  "lineno": 100,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "_pytest.config.UsageError",
   "_pytest.outcomes.exit.Exception",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.mark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.mark.KeywordMapping": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.KeywordMapping.__getitem__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.KeywordMapping.__init__": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.Mark": {
  "lineno": 404,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "_pytest.mark.Mark.combined_with": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkDecorator": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.MarkDecorator.__call__": {
  "lineno": 351,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__eq__": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__init__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__repr__": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.markname": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.with_args": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkGenerator": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.MarkGenerator.__getattr__": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkGenerator._check": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkInfo": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.MarkInfo.__init__": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkInfo.__iter__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkInfo.__repr__": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkInfo.add_mark": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkMapping": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.MarkMapping.__getitem__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkMapping.__init__": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkerError": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.ParameterSet": {
  "lineno": 22,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "_pytest.mark.ParameterSet.deprecated_arg_dict": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.ParameterSet.extract_from": {
  "lineno": 37,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.mark.ParameterSet.param": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.ParameterSet.param.param_extract_id": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark._marked": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.alias": {
  "lineno": 12,
  "symbols_in_volume": [
   "operator.attrgetter"
  ],
  "type": "function"
 },
 "_pytest.mark.alias.warned": {
  "lineno": 15,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.mark.get_unpacked_marks": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.istestfunc": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.matchkeyword": {
  "lineno": 202,
  "symbols_in_volume": [
   "pytest.Instance"
  ],
  "type": "function"
 },
 "_pytest.mark.matchmark": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.param": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_addoption": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_unconfigure": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.store_legacy_markinfo": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.store_mark": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.transfer_markers": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "lineno": 213,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "lineno": 145,
  "symbols_in_volume": [
   "py.builtin._basestring"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "lineno": 198,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "lineno": 110,
  "symbols_in_volume": [
   "inspect.isclass",
   "py.builtin._basestring"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "lineno": 189,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "lineno": 207,
  "symbols_in_volume": [
   "sys.path",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "lineno": 224,
  "symbols_in_volume": [
   "os.chdir",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "lineno": 81,
  "symbols_in_volume": [
   "py.builtin._basestring"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "lineno": 14,
  "symbols_in_volume": [
   "_pytest.fixtures.fixture"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.resolve": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.nodes._splitnode": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.ischildnode": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nose": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.nose.call_optional": {
  "lineno": 66,
  "symbols_in_volume": [
   "py.builtin.callable"
  ],
  "type": "function"
 },
 "_pytest.nose.get_skip_exceptions": {
  "lineno": 11,
  "symbols_in_volume": [
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.nose.is_potential_nosetest": {
  "lineno": 59,
  "symbols_in_volume": [
   "_pytest.python.Function",
   "_pytest.unittest.TestCaseFunction"
  ],
  "type": "function"
 },
 "_pytest.nose.pytest_make_collect_report": {
  "lineno": 54,
  "symbols_in_volume": [
   "_pytest.python.Generator"
  ],
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_makereport": {
  "lineno": 20,
  "symbols_in_volume": [
   "_pytest.runner.skip"
  ],
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_setup": {
  "lineno": 28,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.python.Generator",
   "_pytest.python.Instance"
  ],
  "type": "function"
 },
 "_pytest.nose.teardown_nose": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.outcomes.Exit": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.Exit.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.Failed": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.OutcomeException.__repr__": {
  "lineno": 19,
  "symbols_in_volume": [
   "py._builtin._totext"
  ],
  "type": "function"
 },
 "_pytest.outcomes.Skipped": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.Skipped.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.XFailed": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.exit": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.fail": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.importorskip": {
  "lineno": 104,
  "symbols_in_volume": [
   "pkg_resources.parse_version",
   "sys.modules",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.outcomes.skip": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.xfail": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.pastebin.create_new_paste": {
  "lineno": 55,
  "symbols_in_volume": [
   "re.search",
   "sys.version_info",
   "urllib.parse.urlencode",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_addoption": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "lineno": 30,
  "symbols_in_volume": [
   "py.builtin._istext"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "_pytest.pytester.HookRecorder": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.HookRecorder.__init__": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.after": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.before": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assert_contains": {
  "lineno": 229,
  "symbols_in_volume": [
   "pytest.fail",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assertoutcome": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.clear": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.countoutcomes": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.finish_recording": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcall": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcalls": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailedcollections": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailures": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getreports": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.listoutcomes": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.matchreport": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.popcall": {
  "lineno": 250,
  "symbols_in_volume": [
   "pytest.fail"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineComp": {
  "lineno": 1058,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LineComp.__init__": {
  "lineno": 1059,
  "symbols_in_volume": [
   "py.io.TextIO"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineComp.assert_contains_lines": {
  "lineno": 1062,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher": {
  "lineno": 1074,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LineMatcher.__init__": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._getlines": {
  "lineno": 1093,
  "symbols_in_volume": [
   "_pytest._code.Source"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log_text": {
  "lineno": 1130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines": {
  "lineno": 1134,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "pytest.fail"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines_random": {
  "lineno": 1100,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.get_lines_after": {
  "lineno": 1117,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.str": {
  "lineno": 1089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher_fixture": {
  "lineno": 334,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LsofFdLeakChecker._exec_lsof": {
  "lineno": 58,
  "symbols_in_volume": [
   "os.getpid",
   "py.process.cmdexec"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output.isopen": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.get_open_files": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.matching_platform": {
  "lineno": 79,
  "symbols_in_volume": [
   "py.process.cmdexec",
   "py.process.cmdexec.Error"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.pytest_runtest_protocol": {
  "lineno": 90,
  "symbols_in_volume": [
   "gc.collect",
   "pytest.hookimpl",
   "sys"
  ],
  "type": "function"
 },
 "_pytest.pytester.ParsedCall": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.ParsedCall.__init__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.ParsedCall.__repr__": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.PytestArg": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.PytestArg.__init__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.PytestArg.gethookrecorder": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.RunResult.__init__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult.assert_outcomes": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult.parseoutcomes": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir": {
  "lineno": 397,
  "symbols_in_volume": [
   "_pytest.main.Session"
  ],
  "type": "class"
 },
 "_pytest.pytester.Testdir.__init__": {
  "lineno": 418,
  "symbols_in_volume": [
   "py.error.EEXIST",
   "sys.meta_path",
   "sys.modules",
   "sys.path",
   "weakref.WeakKeyDictionary"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__repr__": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._dump_lines": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._ensure_basetemp": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._getpytestargs": {
  "lineno": 975,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile": {
  "lineno": 489,
  "symbols_in_volume": [
   "_pytest._code.Source",
   "py.builtin._totext"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile.my_totext": {
  "lineno": 502,
  "symbols_in_volume": [
   "py.builtin._isbytes",
   "py.builtin._totext"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._possibly_invalidate_import_caches": {
  "lineno": 569,
  "symbols_in_volume": [
   "importlib",
   "importlib.invalidate_caches"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._run": {
  "lineno": 940,
  "symbols_in_volume": [
   "codecs.open",
   "py.path.local",
   "sys.platform",
   "sys.stderr",
   "sys.stdout",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.chdir": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.collect_by_name": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.delete_loaded_modules": {
  "lineno": 459,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.finalize": {
  "lineno": 445,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.genitems": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getinicfg": {
  "lineno": 543,
  "symbols_in_volume": [
   "py.iniconfig.IniConfig"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitem": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitems": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getmodulecol": {
  "lineno": 867,
  "symbols_in_volume": [
   "_pytest._code.Source"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getnode": {
  "lineno": 596,
  "symbols_in_volume": [
   "_pytest.main.EXIT_OK",
   "_pytest.main.Session",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getpathnode": {
  "lineno": 614,
  "symbols_in_volume": [
   "_pytest.main.EXIT_OK",
   "_pytest.main.Session"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_genitems": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run": {
  "lineno": 695,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported",
   "pytest.main"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.Collect": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.Collect.pytest_configure": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.reprec": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.revert": {
  "lineno": 718,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_runsource": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.make_hook_recorder": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeconftest": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makefile": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeini": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makepyfile": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.maketxtfile": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkdir": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkpydir": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfig": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfigure": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.popen": {
  "lineno": 910,
  "symbols_in_volume": [
   "os.environ.copy",
   "os.getcwd",
   "os.pathsep.join",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.run": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runitem": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess": {
  "lineno": 749,
  "symbols_in_volume": [
   "_pytest.capture.MultiCapture",
   "_pytest.capture.SysCapture",
   "sys.stderr.write",
   "sys.stdout.write",
   "time.time",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess.reprec": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.runpytest_subprocess": {
  "lineno": 991,
  "symbols_in_volume": [
   "py.path.local.make_numbered_dir"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython": {
  "lineno": 980,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython_c": {
  "lineno": 987,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn": {
  "lineno": 1033,
  "symbols_in_volume": [
   "platform.machine",
   "pytest.importorskip",
   "pytest.skip",
   "pytest.xfail",
   "sys",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn_pytest": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.syspathinsert": {
  "lineno": 556,
  "symbols_in_volume": [
   "sys.path.insert"
  ],
  "type": "function"
 },
 "_pytest.pytester._pytest": {
  "lineno": 166,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.anypython": {
  "lineno": 148,
  "symbols_in_volume": [
   "py.path.local",
   "pytest.fixture",
   "pytest.skip",
   "sys.platform"
  ],
  "type": "function"
 },
 "_pytest.pytester.get_public_names": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.getdecoded": {
  "lineno": 1050,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.pytester.getexecutable": {
  "lineno": 126,
  "symbols_in_volume": [
   "py.path.local.sysfind",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "_pytest.pytester.linecomp": {
  "lineno": 329,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.pytest_addoption": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.pytest_configure": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.abspath",
   "pytest.__file__.rstrip"
  ],
  "type": "function"
 },
 "_pytest.pytester.testdir": {
  "lineno": 339,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.python": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.__file__",
   "_pytest._pluggy.__file__.rstrip",
   "py.__file__",
   "py.path.local"
  ],
  "type": "module"
 },
 "_pytest.python.CallSpec2": {
  "lineno": 637,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.CallSpec2.__init__": {
  "lineno": 638,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.python.CallSpec2._checkargnotcontained": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.copy": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.getparam": {
  "lineno": 667,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.python.CallSpec2.id": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.setall": {
  "lineno": 690,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.fixtures.scopenum_function"
  ],
  "type": "function"
 },
 "_pytest.python.CallSpec2.setmulti": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Class": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Class.collect": {
  "lineno": 483,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr"
  ],
  "type": "function"
 },
 "_pytest.python.Class.setup": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function": {
  "lineno": 1097,
  "symbols_in_volume": [
   "_pytest.fixtures.FuncargnamesCompatAttr",
   "_pytest.main.Item"
  ],
  "type": "class"
 },
 "_pytest.python.Function.__init__": {
  "lineno": 1103,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.python.Function._getobj": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function._initrequest": {
  "lineno": 1133,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest"
  ],
  "type": "function"
 },
 "_pytest.python.Function._isyieldedfunction": {
  "lineno": 1164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function._pyfuncitem": {
  "lineno": 1159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.function": {
  "lineno": 1147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.runtest": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.setup": {
  "lineno": 1171,
  "symbols_in_volume": [
   "_pytest.fixtures.fillfixtures"
  ],
  "type": "function"
 },
 "_pytest.python.FunctionMixin": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.FunctionMixin._prunetraceback": {
  "lineno": 549,
  "symbols_in_volume": [
   "_pytest._code.Code",
   "_pytest.compat.get_real_func"
  ],
  "type": "function"
 },
 "_pytest.python.FunctionMixin._repr_failure_py": {
  "lineno": 571,
  "symbols_in_volume": [
   "_pytest.outcomes.fail.Exception",
   "py._builtin._totext"
  ],
  "type": "function"
 },
 "_pytest.python.FunctionMixin.repr_failure": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.FunctionMixin.setup": {
  "lineno": 527,
  "symbols_in_volume": [
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "_pytest.python.Generator": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Generator.collect": {
  "lineno": 587,
  "symbols_in_volume": [
   "_pytest.deprecated.YIELD_TESTS"
  ],
  "type": "function"
 },
 "_pytest.python.Generator.getcallargs": {
  "lineno": 612,
  "symbols_in_volume": [
   "py.builtin._basestring"
  ],
  "type": "function"
 },
 "_pytest.python.Instance": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Instance._getobj": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Instance.collect": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Instance.newinstance": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Metafunc": {
  "lineno": 703,
  "symbols_in_volume": [
   "_pytest.fixtures.FuncargnamesCompatAttr"
  ],
  "type": "class"
 },
 "_pytest.python.Metafunc.__init__": {
  "lineno": 711,
  "symbols_in_volume": [
   "py.builtin.set"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc.addcall": {
  "lineno": 849,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc.parametrize": {
  "lineno": 731,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.compat.getfslineno",
   "_pytest.fixtures.scope2index",
   "_pytest.mark.MARK_GEN.skip",
   "_pytest.mark.ParameterSet",
   "_pytest.mark.ParameterSet.extract_from",
   "itertools.count",
   "py.builtin._basestring",
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.python.Module": {
  "lineno": 381,
  "symbols_in_volume": [
   "_pytest.main.File"
  ],
  "type": "class"
 },
 "_pytest.python.Module._getobj": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Module._importtestmodule": {
  "lineno": 391,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "_pytest._code.code.ExceptionInfo",
   "_pytest.compat.safe_str",
   "_pytest.runner.Skipped",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.python.Module.collect": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Module.setup": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector": {
  "lineno": 260,
  "symbols_in_volume": [
   "_pytest.main.Collector"
  ],
  "type": "class"
 },
 "_pytest.python.PyCollector._genfunctions": {
  "lineno": 344,
  "symbols_in_volume": [
   "_pytest.fixtures.add_funcarg_pseudo_fixture_def",
   "_pytest.mark.transfer_markers"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector._matches_prefix_or_glob_option": {
  "lineno": 298,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.classnamefilter": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.collect": {
  "lineno": 314,
  "symbols_in_volume": [
   "inspect.getmro"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.funcnamefilter": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.isnosetest": {
  "lineno": 265,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.istestclass": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.istestfunction": {
  "lineno": 277,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr",
   "_pytest.fixtures.getfixturemarker"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.makeitem": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjContext": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.PyobjMixin": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.PyobjMixin._getfslineno": {
  "lineno": 240,
  "symbols_in_volume": [
   "_pytest.compat.getfslineno"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin._getobj": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.getmodpath": {
  "lineno": 220,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj.fget": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj.fset": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.reportinfo": {
  "lineno": 243,
  "symbols_in_volume": [
   "_pytest.compat.getfslineno",
   "sys.modules.__file__"
  ],
  "type": "function"
 },
 "_pytest.python._find_parametrized_scope": {
  "lineno": 886,
  "symbols_in_volume": [
   "_pytest.fixtures.scopes"
  ],
  "type": "function"
 },
 "_pytest.python._get_xunit_func": {
  "lineno": 470,
  "symbols_in_volume": [
   "_pytest.fixtures.getfixturemarker"
  ],
  "type": "function"
 },
 "_pytest.python._get_xunit_setup_teardown": {
  "lineno": 450,
  "symbols_in_volume": [
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "_pytest.python._idval": {
  "lineno": 912,
  "symbols_in_volume": [
   "_pytest.compat.NoneType",
   "_pytest.compat.REGEX_TYPE",
   "_pytest.compat.STRING_TYPES",
   "_pytest.compat._ascii_escaped",
   "_pytest.compat.enum",
   "_pytest.compat.enum.Enum",
   "_pytest.compat.isclass",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.python._idvalset": {
  "lineno": 945,
  "symbols_in_volume": [
   "_pytest.compat._ascii_escaped"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test": {
  "lineno": 975,
  "symbols_in_volume": [
   "_pytest.config.create_terminal_writer",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.get_best_relpath": {
  "lineno": 982,
  "symbols_in_volume": [
   "_pytest.compat.getlocation"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_fixture": {
  "lineno": 986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_item": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python._showfixtures_main": {
  "lineno": 1031,
  "symbols_in_volume": [
   "_pytest.compat.getlocation",
   "_pytest.config.create_terminal_writer",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.filter_traceback": {
  "lineno": 34,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.hasinit": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.hasnew": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.idmaker": {
  "lineno": 956,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "_pytest.python.pyobj_property": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pyobj_property.get": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_addoption": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_cmdline_main": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_collect_file": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_configure": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_generate_tests": {
  "lineno": 100,
  "symbols_in_volume": [
   "_pytest.mark.MarkerError"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_make_parametrize_id": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makeitem": {
  "lineno": 164,
  "symbols_in_volume": [
   "_pytest.compat.get_real_func",
   "_pytest.compat.is_generator",
   "_pytest.compat.isclass",
   "_pytest.compat.isfunction",
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makemodule": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_pyfunc_call": {
  "lineno": 133,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.python.show_fixtures_per_test": {
  "lineno": 970,
  "symbols_in_volume": [
   "_pytest.main.wrap_session"
  ],
  "type": "function"
 },
 "_pytest.python.showfixtures": {
  "lineno": 1026,
  "symbols_in_volume": [
   "_pytest.main.wrap_session"
  ],
  "type": "function"
 },
 "_pytest.python.write_docstring": {
  "lineno": 1081,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "_pytest.python_api": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.outcomes.fail.Exception"
  ],
  "type": "module"
 },
 "_pytest.python_api.ApproxBase": {
  "lineno": 26,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "class"
 },
 "_pytest.python_api.ApproxBase.__eq__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__ne__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__repr__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._approx_scalar": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._yield_comparisons": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping.__eq__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping.__repr__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._yield_comparisons": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy": {
  "lineno": 65,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "class"
 },
 "_pytest.python_api.ApproxNumpy.__eq__": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy.__repr__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy._yield_comparisons": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.ndindex"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxScalar.__eq__": {
  "lineno": 183,
  "symbols_in_volume": [
   "math.isinf",
   "math.isnan"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.__repr__": {
  "lineno": 156,
  "symbols_in_volume": [
   "math.isinf",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance": {
  "lineno": 213,
  "symbols_in_volume": [
   "math.isnan"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance.set_default": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxSequence.__eq__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence.__repr__": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence._yield_comparisons": {
  "lineno": 147,
  "symbols_in_volume": [
   "_pytest.compat.izip"
  ],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.RaisesContext.__enter__": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__exit__": {
  "lineno": 609,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "sys.exc_clear",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__init__": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api._cmp_raises_type_error": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api._is_numpy_array": {
  "lineno": 430,
  "symbols_in_volume": [
   "inspect.getmro",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "_pytest.python_api.approx": {
  "lineno": 254,
  "symbols_in_volume": [
   "_pytest.compat.STRING_TYPES",
   "collections.Mapping",
   "collections.Sequence"
  ],
  "type": "function"
 },
 "_pytest.python_api.raises": {
  "lineno": 450,
  "symbols_in_volume": [
   "_pytest.compat.isclass",
   "_pytest.outcomes.fail",
   "py.builtin.exec_",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.recwarn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.recwarn.WarningsChecker": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.recwarn.WarningsChecker.__exit__": {
  "lineno": 193,
  "symbols_in_volume": [
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsChecker.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder": {
  "lineno": 121,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "class"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__": {
  "lineno": 161,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__exit__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__getitem__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__init__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__iter__": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__len__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.clear": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.list": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.pop": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.recwarn._DeprecatedCallContext.__enter__": {
  "lineno": 58,
  "symbols_in_volume": [
   "warnings.warn",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext.__exit__": {
  "lineno": 74,
  "symbols_in_volume": [
   "warnings.warn",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext._warn": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext._warn_explicit": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.deprecated_call": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.recwarn": {
  "lineno": 15,
  "symbols_in_volume": [
   "_pytest.fixtures.yield_fixture",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.recwarn.warns": {
  "lineno": 86,
  "symbols_in_volume": [
   "py.builtin.exec_",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.resultlog": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.resultlog.ResultLog": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "lineno": 108,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.generic_path": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.pytest_addoption": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "lineno": 17,
  "symbols_in_volume": [
   "_pytest.deprecated.RESULT_LOG",
   "os.makedirs",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.runner.BaseReport": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.BaseReport.__init__": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.BaseReport.capstderr": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.BaseReport.capstdout": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.BaseReport.fspath": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.BaseReport.get_sections": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.BaseReport.longreprtext": {
  "lineno": 244,
  "symbols_in_volume": [
   "py.io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.runner.BaseReport.toterminal": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.CallInfo": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.CallInfo.__init__": {
  "lineno": 185,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.runner.CallInfo.__repr__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.CollectErrorRepr": {
  "lineno": 413,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.runner.CollectErrorRepr.__init__": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.CollectErrorRepr.toterminal": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.CollectReport": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.CollectReport.__init__": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.CollectReport.__repr__": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.CollectReport.location": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.SetupState.__init__": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState._callfinalizers": {
  "lineno": 442,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "py.builtin._reraise",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState._pop_and_teardown": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_towards": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_with_finalization": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState.addfinalizer": {
  "lineno": 428,
  "symbols_in_volume": [
   "py.builtin.callable"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState.prepare": {
  "lineno": 482,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "py.builtin._reraise",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_all": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_exact": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.TeardownErrorReport": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.TeardownErrorReport.__init__": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.TestReport": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.TestReport.__init__": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.TestReport.__repr__": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner._update_current_test_var": {
  "lineno": 125,
  "symbols_in_volume": [
   "_pytest.compat._PY2",
   "os.environ",
   "os.environ.pop"
  ],
  "type": "function"
 },
 "_pytest.runner.call_and_report": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.call_runtest_hook": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.check_interactive_exception": {
  "lineno": 167,
  "symbols_in_volume": [
   "_pytest.outcomes.skip.Exception",
   "bdb.BdbQuit"
  ],
  "type": "function"
 },
 "_pytest.runner.collect_one_node": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.getslaveinfoline": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_addoption": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_make_collect_report": {
  "lineno": 368,
  "symbols_in_volume": [
   "_pytest.nose.get_skip_exceptions",
   "_pytest.outcomes.Skipped"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_report_teststatus": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_call": {
  "lineno": 104,
  "symbols_in_volume": [
   "sys.exc_info",
   "sys.last_traceback",
   "sys.last_type",
   "sys.last_value"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_makereport": {
  "lineno": 283,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest.outcomes.skip.Exception"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_protocol": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_setup": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_teardown": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_sessionfinish": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_sessionstart": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_terminal_summary": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.runtestprotocol": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.show_test_item": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setuponly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.setuponly._show_fixture_action": {
  "lineno": 43,
  "symbols_in_volume": [
   "sys.stderr.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_addoption": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setuponly.pytest_cmdline_main": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_post_finalizer": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_setup": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.setupplan": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.setupplan.pytest_addoption": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.skipping": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.skipping.MarkEvaluator": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.skipping.MarkEvaluator.__bool__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator._getglobals": {
  "lineno": 101,
  "symbols_in_volume": [
   "os",
   "sys"
  ],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator._istrue": {
  "lineno": 107,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "py.builtin._basestring"
  ],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.get": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.getexplanation": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.holder": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.invalidraise": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.istrue": {
  "lineno": 85,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "_pytest.outcomes.fail",
   "sys.exc_info",
   "traceback.format_exception_only"
  ],
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.wasvalid": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.cached_eval": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.check_strict_xfail": {
  "lineno": 198,
  "symbols_in_volume": [
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.skipping.check_xfail_no_run": {
  "lineno": 189,
  "symbols_in_volume": [
   "_pytest.outcomes.xfail"
  ],
  "type": "function"
 },
 "_pytest.skipping.folded_skips": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_addoption": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_configure": {
  "lineno": 27,
  "symbols_in_volume": [
   "_pytest.outcomes.xfail.Exception",
   "pytest",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_configure.nop": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_pyfunc_call": {
  "lineno": 180,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_report_teststatus": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_makereport": {
  "lineno": 210,
  "symbols_in_volume": [
   "_pytest.compat._is_unittest_unexpected_success_a_failure",
   "_pytest.config.hookimpl",
   "_pytest.outcomes.xfail.Exception"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_setup": {
  "lineno": 155,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.mark.MarkDecorator",
   "_pytest.mark.MarkInfo",
   "_pytest.outcomes.skip"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_terminal_summary": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_simple": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_skipped": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_xfailed": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_xpassed": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.terminal.TerminalReporter": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.terminal.TerminalReporter.__init__": {
  "lineno": 127,
  "symbols_in_volume": [
   "py.path.local",
   "sys.stdout"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getcrashline": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getfailureheadline": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline": {
  "lineno": 443,
  "symbols_in_volume": [
   "_pytest.nodes.SEP"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline.mkrel": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._outrep_summary": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._printcollecteditems": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._report_keyboardinterrupt": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_report_lines_from_hooks": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.ensure_newline": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.getreports": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.hasopt": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.line": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.print_teardown_sections": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_finish": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_modifyitems": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collectreport": {
  "lineno": 283,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_deselected": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_internalerror": {
  "lineno": 211,
  "symbols_in_volume": [
   "py.builtin.text"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_keyboard_interrupt": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_logwarning": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_plugin_registered": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_report_header": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logreport": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logstart": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionfinish": {
  "lineno": 404,
  "symbols_in_volume": [
   "_pytest.main.EXIT_INTERRUPTED",
   "_pytest.main.EXIT_NOTESTSCOLLECTED",
   "_pytest.main.EXIT_OK",
   "_pytest.main.EXIT_TESTSFAILED",
   "_pytest.main.EXIT_USAGEERROR",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionstart": {
  "lineno": 319,
  "symbols_in_volume": [
   "_pytest._pluggy.__version__",
   "platform.python_version",
   "py.__version__",
   "pytest.__version__",
   "pytest.hookimpl",
   "sys",
   "sys.executable",
   "sys.platform",
   "sys.pypy_version_info",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_unconfigure": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.report_collect": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.rewrite": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.section": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_deselected": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_errors": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_failures": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_passes": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_stats": {
  "lineno": 571,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings": {
  "lineno": 488,
  "symbols_in_volume": [
   "itertools.groupby"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_ensure_prefix": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_fspath_result": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_line": {
  "lineno": 177,
  "symbols_in_volume": [
   "py.builtin._istext",
   "py.builtin.text"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_sep": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.WarningReport": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.terminal.WarningReport.__init__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.WarningReport.get_location": {
  "lineno": 109,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.terminal._plugin_nameversions": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.build_summary_stats_line": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.flatten": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.getreportopt": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.pytest_addoption": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.pytest_configure": {
  "lineno": 52,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "_pytest.terminal.pytest_configure.mywriter": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.pytest_report_teststatus": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.repr_pythonversion": {
  "lineno": 588,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.tmpdir": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.ensuretemp": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.finish": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "lineno": 45,
  "symbols_in_volume": [
   "py.path.local",
   "py.path.local.get_temproot",
   "py.path.local.make_numbered_dir"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "lineno": 31,
  "symbols_in_volume": [
   "py.path.local.make_numbered_dir"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.get_user": {
  "lineno": 76,
  "symbols_in_volume": [
   "getpass.getuser"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.pytest_configure": {
  "lineno": 91,
  "symbols_in_volume": [
   "_pytest.monkeypatch.MonkeyPatch",
   "pytest"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir": {
  "lineno": 112,
  "symbols_in_volume": [
   "pytest.fixture",
   "re.sub"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "lineno": 105,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.unittest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.unittest.TestCaseFunction": {
  "lineno": 69,
  "symbols_in_volume": [
   "_pytest.python.Function"
  ],
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "lineno": 104,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "_pytest.outcomes.fail.Exception",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._fix_unittest_skip_decorator": {
  "lineno": 81,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._handle_skip": {
  "lineno": 156,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "lineno": 183,
  "symbols_in_volume": [
   "_pytest.python.Function._prunetraceback",
   "traceback"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "lineno": 141,
  "symbols_in_volume": [
   "_pytest.outcomes.xfail",
   "_pytest.outcomes.xfail.Exception",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "lineno": 133,
  "symbols_in_volume": [
   "_pytest.outcomes.skip",
   "_pytest.outcomes.skip.Exception",
   "_pytest.skipping.MarkEvaluator",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase": {
  "lineno": 26,
  "symbols_in_volume": [
   "_pytest.python.Class"
  ],
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "lineno": 43,
  "symbols_in_volume": [
   "_pytest.python.Module",
   "_pytest.python.transfer_markers",
   "sys.modules.get",
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.setup": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "lineno": 233,
  "symbols_in_volume": [
   "twisted.trial.itrial.IReporter",
   "zope.interface.classImplements"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "lineno": 15,
  "symbols_in_volume": [
   "sys.modules.TestCase"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "lineno": 191,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "lineno": 204,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "lineno": 212,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.vendored_packages": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.vendored_packages.pluggy": {
  "lineno": null,
  "symbols_in_volume": [
   "inspect",
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.vendored_packages.pluggy.HookCallError": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookImpl": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookImpl.__init__": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker.__call__": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker.__call__.setattr_hookimpl_opts": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker.__init__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker.__call__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker.__call__.setattr_hookspec_opts": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.__init__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager._hookexec": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager._verify_hook": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.add_hookcall_monitoring": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.add_hookspecs": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.check_pending": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.enable_tracing": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.enable_tracing.after": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.enable_tracing.before": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_canonical_name": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_hookcallers": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_name": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_plugin": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_plugins": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.has_plugin": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.is_blocked": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.is_registered": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.list_name_plugin": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.list_plugin_distinfo": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.load_setuptools_entrypoints": {
  "lineno": 500,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.VersionConflict",
   "pkg_resources.iter_entry_points"
  ],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.parse_hookimpl_opts": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.parse_hookspec_opts": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.register": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.set_blocked": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.subset_hook_caller": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.unregister": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginValidationError": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome.__init__": {
  "lineno": 263,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome.force_result": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome.get_result": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.__call__": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.__init__": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.__repr__": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._add_hookimpl": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._maybe_apply_history": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._remove_plugin": {
  "lineno": 713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._remove_plugin.remove": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.call_extra": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.call_historic": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.has_spec": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.is_historic": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.set_specification": {
  "lineno": 699,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookRelay": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._HookRelay.__init__": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._MultiCall": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._MultiCall.__init__": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._MultiCall.__repr__": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._MultiCall.execute": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.__init__": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.format_message": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.get": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.processmessage": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.setprocessor": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.setwriter": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.__call__": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.__init__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.get": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.setmyprocessor": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution.__call__": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution.__init__": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution.undo": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._formatdef": {
  "lineno": 798,
  "symbols_in_volume": [
   "inspect.formatargspec",
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._raise_wrapfail": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._wrapped_call": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.normalize_hookimpl_opts": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.varnames": {
  "lineno": 630,
  "symbols_in_volume": [
   "inspect.isclass",
   "inspect.isfunction",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "_pytest.warnings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.warnings._setoption": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.warnings.catch_warnings_for_item": {
  "lineno": 47,
  "symbols_in_volume": [
   "_pytest.compat.UNICODE_TYPES",
   "_pytest.compat._PY2",
   "_pytest.compat.safe_str",
   "contextlib.contextmanager",
   "warnings",
   "warnings._setoption",
   "warnings.catch_warnings",
   "warnings.formatwarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_addoption": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.warnings.pytest_runtest_protocol": {
  "lineno": 91,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "pytest": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat._setup_collect_fakemodule",
   "_pytest.config._preloadplugins",
   "_pytest.debugging.pytestPDB.set_trace",
   "pytest.main"
  ],
  "type": "module"
 }
}