{
 "_pytest": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "_pytest.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "_pytest._argcomplete": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      93
     ]
    },
    "_pytest._argcomplete.FastFilesCompleter": {
     "line number": [
      95
     ]
    },
    "_pytest._argcomplete.os": {
     "line number": [
      90
     ]
    },
    "_pytest._argcomplete.sys": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "_pytest._argcomplete.os": {
     "line number": [
      70,
      71,
      71,
      78,
      83
     ]
    },
    "glob.glob": {
     "line number": [
      79,
      81
     ]
    },
    "len": {
     "line number": [
      71
     ]
    },
    "sorted": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "_pytest._argcomplete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest._argcomplete.argcomplete.completers": {
  "data": {
   "shadows": "argcomplete.completers"
  },
  "type": "import"
 },
 "_pytest._argcomplete.filescompleter": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "_pytest._argcomplete.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "_pytest._argcomplete.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest._argcomplete.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "_pytest._code": {
  "data": {},
  "type": "module"
 },
 "_pytest._code.compile": {
  "data": {
   "shadows": "compile_"
  },
  "type": "import"
 },
 "_pytest._io": {
  "data": {},
  "type": "module"
 },
 "_pytest._io.saferepr": {
  "data": {},
  "type": "module"
 },
 "_pytest._io.saferepr.SafeRepr": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "_pytest._io.saferepr.reprlib": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest._io.saferepr.SafeRepr.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "super": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      37
     ]
    },
    "_pytest._io.saferepr._ellipsize": {
     "line number": [
      39
     ]
    },
    "_pytest._io.saferepr._format_repr_exception": {
     "line number": [
      38
     ]
    },
    "super": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_instance": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      44
     ]
    },
    "_pytest._io.saferepr._ellipsize": {
     "line number": [
      46
     ]
    },
    "_pytest._io.saferepr._format_repr_exception": {
     "line number": [
      45
     ]
    },
    "repr": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._io.saferepr._ellipsize": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "len": {
     "line number": [
      17,
      20
     ]
    },
    "max": {
     "line number": [
      18,
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._io.saferepr._format_repr_exception": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      9
     ]
    },
    "id": {
     "line number": [
      12
     ]
    },
    "str": {
     "line number": [
      8
     ]
    },
    "type": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._io.saferepr.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest._io.saferepr.reprlib": {
  "data": {
   "shadows": "reprlib"
  },
  "type": "import"
 },
 "_pytest._io.saferepr.safeformat": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      56
     ]
    },
    "_pytest._io.saferepr._format_repr_exception": {
     "line number": [
      57
     ]
    },
    "_pytest._io.saferepr.pprint": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._io.saferepr.saferepr": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "_pytest._io.saferepr.SafeRepr": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest._version": {
  "data": {},
  "type": "module"
 },
 "_pytest._version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "_pytest.assertion": {
  "data": {
   "symbols_in_volume": {
    "_pytest.assertion.util.assertrepr_compare": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "_pytest.assertion.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest.assertion.install_importhook": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "_pytest.assertion.AssertionState": {
     "line number": [
      80
     ]
    },
    "_pytest.assertion.rewrite.AssertionRewritingHook": {
     "line number": [
      81
     ]
    },
    "_pytest.assertion.sys": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "_pytest.assertion.sys": {
     "line number": [
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_addoption": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_assertrepr_compare": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "_pytest.assertion.pytest_collection": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "_pytest.assertion.util._assertion_pass": {
     "line number": [
      151
     ]
    },
    "_pytest.assertion.util._reprcompare": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.call_assertion_pass_hook": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.callbinrepr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "_pytest.assertion.truncate.truncate_if_required": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_teardown": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "_pytest.assertion.util._assertion_pass": {
     "line number": [
      156
     ]
    },
    "_pytest.assertion.util._reprcompare": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      50
     ]
    },
    "_pytest.assertion.DummyRewriteHook": {
     "line number": [
      58
     ]
    },
    "_pytest.assertion.rewrite.AssertionRewritingHook": {
     "line number": [
      52
     ]
    },
    "_pytest.assertion.sys": {
     "line number": [
      51
     ]
    },
    "isinstance": {
     "line number": [
      48,
      52
     ]
    },
    "repr": {
     "line number": [
      50
     ]
    },
    "str": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "data": {
   "shadows": "_pytest.assertion.rewrite"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "super": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter._assert_expr_to_lineno": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite._get_assertion_exprs": {
     "line number": [
      580
     ]
    },
    "_pytest.assertion.rewrite.functools": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      661,
      661,
      661,
      662,
      662
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      676,
      676,
      677,
      677
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "next": {
     "line number": [
      688
     ]
    },
    "str": {
     "line number": [
      688
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      729
     ]
    },
    "isinstance": {
     "line number": [
      729
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      670,
      670,
      671,
      671,
      672
     ]
    },
    "list": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.is_rewrite_disabled": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      718,
      719,
      720,
      720,
      724,
      724,
      724,
      725,
      725
     ]
    },
    "list": {
     "line number": [
      719
     ]
    },
    "next": {
     "line number": [
      721
     ]
    },
    "str": {
     "line number": [
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      582,
      590,
      591,
      602,
      603,
      610,
      620,
      627,
      631,
      636,
      640,
      643
     ]
    },
    "aliases": {
     "line number": [
      589,
      620
     ]
    },
    "enumerate": {
     "line number": [
      630
     ]
    },
    "getattr": {
     "line number": [
      593
     ]
    },
    "isinstance": {
     "line number": [
      602,
      603,
      610,
      628,
      631,
      636,
      640,
      643
     ]
    },
    "list": {
     "line number": [
      628
     ]
    },
    "setattr": {
     "line number": [
      638
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "next": {
     "line number": [
      654
     ]
    },
    "str": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      742,
      777,
      777,
      778,
      785,
      787,
      787,
      787,
      788,
      788,
      789,
      789,
      791,
      792,
      800,
      803,
      804,
      809,
      817,
      821,
      821,
      823,
      823,
      829,
      829,
      830,
      835,
      837,
      837,
      837,
      840,
      840,
      841,
      842,
      848,
      848,
      849,
      849
     ]
    },
    "_pytest.assertion.rewrite.itertools": {
     "line number": [
      758
     ]
    },
    "_pytest.assertion.rewrite.set_location": {
     "line number": [
      853
     ]
    },
    "_pytest.assertion.rewrite.warnings": {
     "line number": [
      747
     ]
    },
    "_pytest.warning_types.PytestAssertRewriteWarning": {
     "line number": [
      748
     ]
    },
    "isinstance": {
     "line number": [
      742
     ]
    },
    "len": {
     "line number": [
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      973,
      976,
      976
     ]
    },
    "isinstance": {
     "line number": [
      973
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.BINOP_MAP": {
     "line number": [
      932
     ]
    },
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      936
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      892,
      892,
      893,
      893,
      894,
      904,
      908,
      908,
      908,
      909,
      910,
      911,
      915,
      915,
      917,
      921,
      923,
      923
     ]
    },
    "enumerate": {
     "line number": [
      900
     ]
    },
    "int": {
     "line number": [
      894
     ]
    },
    "isinstance": {
     "line number": [
      894
     ]
    },
    "len": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      953,
      960
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.BINOP_MAP": {
     "line number": [
      999
     ]
    },
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      982,
      985,
      985,
      988,
      988,
      989,
      989,
      996,
      996,
      1000,
      1002,
      1003,
      1004,
      1009,
      1009,
      1010,
      1010,
      1011,
      1011,
      1012,
      1012,
      1015,
      1015
     ]
    },
    "isinstance": {
     "line number": [
      985,
      996
     ]
    },
    "len": {
     "line number": [
      987,
      990,
      1014
     ]
    },
    "range": {
     "line number": [
      987,
      990
     ]
    },
    "zip": {
     "line number": [
      990
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      883,
      884,
      884,
      884,
      886,
      886,
      887,
      887
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      969
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.UNARY_MAP": {
     "line number": [
      926
     ]
    },
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      928
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.warn_about_none_ast": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      863,
      863,
      863,
      864,
      878
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      46
     ]
    },
    "set": {
     "line number": [
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._early_rewrite_bailout": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.os": {
     "line number": [
      155,
      157,
      165,
      170
     ]
    },
    "_pytest.pathlib.PurePath": {
     "line number": [
      165
     ]
    },
    "_pytest.pathlib.fnmatch_ex": {
     "line number": [
      172
     ]
    },
    "str": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._is_marked_for_rewrite": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      207
     ]
    },
    "str": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.os": {
     "line number": [
      183
     ]
    },
    "_pytest.pathlib.PurePath": {
     "line number": [
      196
     ]
    },
    "_pytest.pathlib.fnmatch_ex": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestAssertRewriteWarning": {
     "line number": [
      242
     ]
    },
    "_pytest.warnings._issue_warning_captured": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.create_module": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.exec_module": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.PYC_TAIL": {
     "line number": [
      126
     ]
    },
    "_pytest.assertion.rewrite._read_pyc": {
     "line number": [
      130
     ]
    },
    "_pytest.assertion.rewrite._rewrite_test": {
     "line number": [
      133
     ]
    },
    "_pytest.assertion.rewrite._write_pyc": {
     "line number": [
      137
     ]
    },
    "_pytest.assertion.rewrite.os": {
     "line number": [
      119,
      119,
      124,
      126,
      127
     ]
    },
    "_pytest.assertion.rewrite.sys": {
     "line number": [
      118
     ]
    },
    "_pytest.assertion.rewrite.try_mkdir": {
     "line number": [
      121
     ]
    },
    "exec": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_spec": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.os": {
     "line number": [
      85
     ]
    },
    "isinstance": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "open": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.sys": {
     "line number": [
      226,
      229
     ]
    },
    "isinstance": {
     "line number": [
      232
     ]
    },
    "set": {
     "line number": [
      226
     ]
    },
    "str": {
     "line number": [
      219
     ]
    },
    "type": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.BINOP_MAP": {
  "data": {
   "lineno": 416
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.PYC_EXT": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_TAIL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYTEST_TAG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PurePath": {
  "data": {
   "shadows": "_pytest.pathlib.PurePath"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.PytestAssertRewriteWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestAssertRewriteWarning"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.UNARY_MAP": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite._call_assertion_pass": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "_pytest.assertion.util._assertion_pass": {
     "line number": [
      403,
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      390
     ]
    },
    "_pytest.assertion.util._reprcompare": {
     "line number": [
      394,
      395
     ]
    },
    "len": {
     "line number": [
      387
     ]
    },
    "range": {
     "line number": [
      387
     ]
    },
    "zip": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._check_if_assertion_pass_impl": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "_pytest.assertion.util._assertion_pass": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      358
     ]
    },
    "isinstance": {
     "line number": [
      357
     ]
    },
    "str": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      379
     ]
    },
    "str": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_explanation": {
  "data": {
   "shadows": "_pytest.assertion.util.format_explanation"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._get_assertion_exprs": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.io": {
     "line number": [
      476
     ]
    },
    "_pytest.assertion.rewrite.tokenize": {
     "line number": [
      476,
      478,
      482,
      484,
      491,
      503,
      503
     ]
    },
    "_write_and_reset": {
     "line number": [
      502,
      504
     ]
    },
    "bytes": {
     "line number": [
      458
     ]
    },
    "int": {
     "line number": [
      458
     ]
    },
    "len": {
     "line number": [
      493,
      494,
      494
     ]
    },
    "set": {
     "line number": [
      465
     ]
    },
    "str": {
     "line number": [
      458
     ]
    },
    "typing.Dict": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._get_assertion_exprs._write_and_reset": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "set": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      303
     ]
    },
    "Exception": {
     "line number": [
      316
     ]
    },
    "IOError": {
     "line number": [
      295
     ]
    },
    "_pytest.assertion.rewrite.marshal": {
     "line number": [
      315
     ]
    },
    "_pytest.assertion.rewrite.os": {
     "line number": [
      299
     ]
    },
    "_pytest.assertion.rewrite.struct": {
     "line number": [
      310
     ]
    },
    "_pytest.assertion.rewrite.types": {
     "line number": [
      319
     ]
    },
    "int": {
     "line number": [
      300
     ]
    },
    "isinstance": {
     "line number": [
      319
     ]
    },
    "len": {
     "line number": [
      308
     ]
    },
    "open": {
     "line number": [
      294
     ]
    },
    "trace": {
     "line number": [
      304,
      312,
      317,
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      282
     ]
    },
    "_pytest.assertion.rewrite.os": {
     "line number": [
      279
     ]
    },
    "_pytest.assertion.rewrite.rewrite_asserts": {
     "line number": [
      283
     ]
    },
    "compile": {
     "line number": [
      284
     ]
    },
    "open": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      373
     ]
    },
    "callable": {
     "line number": [
      368
     ]
    },
    "hasattr": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      268
     ]
    },
    "_pytest.assertion.rewrite.atomicwrites": {
     "line number": [
      260
     ]
    },
    "_pytest.assertion.rewrite.marshal": {
     "line number": [
      267
     ]
    },
    "_pytest.assertion.rewrite.struct": {
     "line number": [
      266
     ]
    },
    "int": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.atomicwrites": {
  "data": {
   "shadows": "atomicwrites"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.fnmatch_ex": {
  "data": {
   "shadows": "_pytest.pathlib.fnmatch_ex"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.importlib.abc": {
  "data": {
   "shadows": "importlib.abc"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.importlib.machinery": {
  "data": {
   "shadows": "importlib.machinery"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.importlib.util": {
  "data": {
   "shadows": "importlib.util"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.marshal": {
  "data": {
   "shadows": "marshal"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "_pytest.assertion.rewrite.AssertionRewriter": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.set_location": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "_fix": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "_fix": {
     "line number": [
      452
     ]
    },
    "_pytest.assertion.rewrite.ast": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.try_mkdir": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": {
    "FileExistsError": {
     "line number": [
      1025
     ]
    },
    "FileNotFoundError": {
     "line number": [
      1030
     ]
    },
    "NotADirectoryError": {
     "line number": [
      1030
     ]
    },
    "OSError": {
     "line number": [
      1036
     ]
    },
    "PermissionError": {
     "line number": [
      1034
     ]
    },
    "_pytest.assertion.rewrite.errno": {
     "line number": [
      1038
     ]
    },
    "_pytest.assertion.rewrite.os": {
     "line number": [
      1024
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.version": {
  "data": {
   "shadows": "_pytest._version.version"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.assertion.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate": {
  "data": {
   "shadows": "_pytest.assertion.truncate"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_CHARS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_LINES": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.USAGE_MSG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate._running_on_ci": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "_pytest.assertion.truncate.os": {
     "line number": [
      34
     ]
    },
    "any": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._should_truncate_item": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "_pytest.assertion.truncate._running_on_ci": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_by_char_count": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      83
     ]
    },
    "len": {
     "line number": [
      78,
      84,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_explanation": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "_pytest.assertion.truncate.DEFAULT_MAX_CHARS": {
     "line number": [
      48
     ]
    },
    "_pytest.assertion.truncate.DEFAULT_MAX_LINES": {
     "line number": [
      46
     ]
    },
    "_pytest.assertion.truncate.USAGE_MSG": {
     "line number": [
      71
     ]
    },
    "_pytest.assertion.truncate._truncate_by_char_count": {
     "line number": [
      58
     ]
    },
    "len": {
     "line number": [
      51,
      52,
      64,
      64
     ]
    },
    "str": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.truncate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.truncate_if_required": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_pytest.assertion.truncate._should_truncate_item": {
     "line number": [
      18
     ]
    },
    "_pytest.assertion.truncate._truncate_explanation": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.util.ATTRS_EQ_FIELD": {
  "data": {
   "shadows": "_pytest.compat.ATTRS_EQ_FIELD"
  },
  "type": "import"
 },
 "_pytest.assertion.util.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "_pytest.assertion.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "_pytest.assertion.util.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest.assertion.util.Sequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "_pytest.assertion.util._assertion_pass": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "_pytest.assertion.util._compare_eq_cls": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "_pytest.assertion.util.isattrs": {
     "line number": [
      372,
      376
     ]
    },
    "_pytest.assertion.util.isdatacls": {
     "line number": [
      372,
      373
     ]
    },
    "_pytest.assertion.util.pprint": {
     "line number": [
      395
     ]
    },
    "_pytest.compat.ATTRS_EQ_FIELD": {
     "line number": [
      379
     ]
    },
    "getattr": {
     "line number": [
      379,
      385,
      385,
      400,
      400
     ]
    },
    "len": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      347,
      347
     ]
    },
    "_pytest.assertion.util.pprint": {
     "line number": [
      342,
      356,
      366
     ]
    },
    "len": {
     "line number": [
      339,
      349,
      359
     ]
    },
    "set": {
     "line number": [
      334,
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "_pytest.assertion.util.difflib": {
     "line number": [
      258
     ]
    },
    "_pytest.assertion.util.pprint": {
     "line number": [
      254,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      299,
      303
     ]
    },
    "bytes": {
     "line number": [
      264,
      264
     ]
    },
    "isinstance": {
     "line number": [
      264,
      264
     ]
    },
    "len": {
     "line number": [
      266,
      267
     ]
    },
    "min": {
     "line number": [
      268
     ]
    },
    "range": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      324,
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_verbose": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      238,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      196,
      198
     ]
    },
    "difflib.ndiff": {
     "line number": [
      231
     ]
    },
    "escape_for_readable_diff": {
     "line number": [
      197,
      199
     ]
    },
    "isinstance": {
     "line number": [
      196,
      198
     ]
    },
    "len": {
     "line number": [
      202,
      202,
      212,
      212,
      213
     ]
    },
    "min": {
     "line number": [
      202
     ]
    },
    "range": {
     "line number": [
      202,
      213
     ]
    },
    "repr": {
     "line number": [
      226,
      227
     ]
    },
    "str": {
     "line number": [
      226,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text.escape_for_readable_diff": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      191
     ]
    },
    "str": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "len": {
     "line number": [
      74,
      77,
      85,
      85,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      411
     ]
    },
    "_pytest.assertion.util._diff_text": {
     "line number": [
      410
     ]
    },
    "len": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.assertion.util._reprcompare": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "_pytest.assertion.util._split_explanation": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      160
     ]
    },
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      126,
      127
     ]
    },
    "_pytest.assertion.util._compare_eq_cls": {
     "line number": [
      146
     ]
    },
    "_pytest.assertion.util._compare_eq_dict": {
     "line number": [
      143
     ]
    },
    "_pytest.assertion.util._compare_eq_iterable": {
     "line number": [
      150
     ]
    },
    "_pytest.assertion.util._compare_eq_sequence": {
     "line number": [
      139
     ]
    },
    "_pytest.assertion.util._compare_eq_set": {
     "line number": [
      141
     ]
    },
    "_pytest.assertion.util._compare_eq_verbose": {
     "line number": [
      148
     ]
    },
    "_pytest.assertion.util._diff_text": {
     "line number": [
      136
     ]
    },
    "_pytest.assertion.util._notin_text": {
     "line number": [
      157
     ]
    },
    "_pytest.assertion.util.isattrs": {
     "line number": [
      144,
      145
     ]
    },
    "_pytest.assertion.util.isdatacls": {
     "line number": [
      144,
      145
     ]
    },
    "_pytest.assertion.util.isdict": {
     "line number": [
      142,
      142
     ]
    },
    "_pytest.assertion.util.isiterable": {
     "line number": [
      149,
      149
     ]
    },
    "_pytest.assertion.util.issequence": {
     "line number": [
      138,
      138
     ]
    },
    "_pytest.assertion.util.isset": {
     "line number": [
      140,
      140
     ]
    },
    "_pytest.assertion.util.istext": {
     "line number": [
      135,
      135,
      156,
      156
     ]
    },
    "_pytest.outcomes.Exit": {
     "line number": [
      158
     ]
    },
    "len": {
     "line number": [
      125
     ]
    },
    "str": {
     "line number": [
      164
     ]
    },
    "type": {
     "line number": [
      144,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "_pytest.assertion.util.format_explanation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "_pytest.assertion.util._format_lines": {
     "line number": [
      35
     ]
    },
    "_pytest.assertion.util._split_explanation": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.isattrs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.isdatacls": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.isdict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      100
     ]
    },
    "isinstance": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.isiterable": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      119
     ]
    },
    "_pytest.assertion.util.istext": {
     "line number": [
      118
     ]
    },
    "iter": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.issequence": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "collections.abc.Sequence": {
     "line number": [
      92
     ]
    },
    "isinstance": {
     "line number": [
      92,
      92
     ]
    },
    "str": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.isset": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      104
     ]
    },
    "isinstance": {
     "line number": [
      104
     ]
    },
    "set": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.istext": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.assertion.util.ndiff": {
  "data": {
   "shadows": "difflib.ndiff"
  },
  "type": "import"
 },
 "_pytest.assertion.util.outcomes": {
  "data": {
   "shadows": "_pytest.outcomes"
  },
  "type": "import"
 },
 "_pytest.assertion.util.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest.assertion.util.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.cacheprovider": {
  "data": {},
  "type": "module"
 },
 "_pytest.cacheprovider.CACHEDIR_TAG_CONTENT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.cacheprovider.Cache": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "_pytest.cacheprovider.attr": {
     "line number": [
      40,
      41,
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.cacheprovider.Cache._ensure_supporting_files": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "_pytest.cacheprovider.CACHEDIR_TAG_CONTENT": {
     "line number": [
      142
     ]
    },
    "_pytest.cacheprovider.README_CONTENT": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Path": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.cache_dir_from_config": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "resolve_from_str": {
     "line number": [
      53
     ]
    },
    "staticmethod": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.for_config": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      43
     ]
    },
    "cls": {
     "line number": [
      49
     ]
    },
    "rm_rf": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      100
     ]
    },
    "OSError": {
     "line number": [
      100
     ]
    },
    "ValueError": {
     "line number": [
      100
     ]
    },
    "_pytest.cacheprovider.json": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Path": {
     "line number": [
      75
     ]
    },
    "ValueError": {
     "line number": [
      77
     ]
    },
    "_pytest.cacheprovider.py": {
     "line number": [
      80
     ]
    },
    "len": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      119,
      126
     ]
    },
    "OSError": {
     "line number": [
      119,
      126
     ]
    },
    "_pytest.cacheprovider.json": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.warn": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestCacheWarning": {
     "line number": [
      60
     ]
    },
    "_pytest.warnings._issue_warning_captured": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "data": {
   "lineno": 145
  },
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "any": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.last_failed_paths": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      162
     ]
    },
    "Path": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "len": {
     "line number": [
      213,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_ignore_collect": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Path": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_collectionfinish": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin": {
  "data": {
   "lineno": 258
  },
  "type": "class"
 },
 "_pytest.cacheprovider.NFPlugin.__init__": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin._get_increasing_order": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      267,
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.PytestCacheWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestCacheWarning"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.README_CONTENT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.cacheprovider._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.cache": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "_pytest.cacheprovider.pytest": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "_pytest.cacheprovider.py": {
     "line number": [
      401
     ]
    },
    "object": {
     "line number": [
      411
     ]
    },
    "pprint.pformat": {
     "line number": [
      422
     ]
    },
    "sorted": {
     "line number": [
      415,
      427
     ]
    },
    "str": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pformat": {
  "data": {
   "shadows": "pprint.pformat"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "_pytest.cacheprovider.os": {
     "line number": [
      340,
      341,
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "_pytest.main.wrap_session": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "_pytest.cacheprovider.Cache": {
     "line number": [
      363
     ]
    },
    "_pytest.cacheprovider.LFPlugin": {
     "line number": [
      364
     ]
    },
    "_pytest.cacheprovider.NFPlugin": {
     "line number": [
      365
     ]
    },
    "_pytest.cacheprovider.pytest": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.cacheprovider.wrap_session": {
  "data": {
   "shadows": "_pytest.main.wrap_session"
  },
  "type": "import"
 },
 "_pytest.compat": {
  "data": {
   "symbols_in_volume": {
    "_pytest.compat._non_printable_ascii_translate_table": {
     "line number": [
      172
     ]
    },
    "_pytest.compat.attr": {
     "line number": [
      359
     ]
    },
    "_pytest.compat.re": {
     "line number": [
      41
     ]
    },
    "_pytest.compat.sys": {
     "line number": [
      26,
      30,
      147,
      353
     ]
    },
    "bytes": {
     "line number": [
      181
     ]
    },
    "getattr": {
     "line number": [
      359
     ]
    },
    "object": {
     "line number": [
      23
     ]
    },
    "ord": {
     "line number": [
      173,
      173,
      173
     ]
    },
    "range": {
     "line number": [
      170,
      170
     ]
    },
    "str": {
     "line number": [
      181
     ]
    },
    "type": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.compat.ATTRS_EQ_FIELD": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "_pytest.compat.CaptureIO": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "_pytest.compat.io": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.compat.CaptureIO.__init__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "_pytest.compat.io": {
     "line number": [
      332
     ]
    },
    "super": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.CaptureIO.getvalue": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "_pytest.compat.FUNCARGNAMES": {
  "data": {
   "shadows": "_pytest.deprecated.FUNCARGNAMES"
  },
  "type": "import"
 },
 "_pytest.compat.FuncargnamesCompatAttr": {
  "data": {
   "lineno": 338
  },
  "type": "class"
 },
 "_pytest.compat.FuncargnamesCompatAttr.funcargnames": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "_pytest.compat.warnings": {
     "line number": [
      349
     ]
    },
    "_pytest.deprecated.FUNCARGNAMES": {
     "line number": [
      349
     ]
    },
    "property": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.MODULE_NOT_FOUND_ERROR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "_pytest.compat.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "_pytest.compat.NOTSET": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_pytest.compat.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "_pytest.compat.REGEX_TYPE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.compat.STRING_TYPES": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "_pytest.compat.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.compat._PytestWrapper": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "_pytest.compat.attr": {
     "line number": [
      222,
      213
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.compat._bytes_to_ascii": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "inspect.signature": {
     "line number": [
      37
     ]
    },
    "str": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat._non_printable_ascii_translate_table": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "_pytest.compat._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.compat._setup_collect_fakemodule": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES": {
     "line number": [
      326
     ]
    },
    "_pytest.compat.pytest": {
     "line number": [
      324,
      325,
      327,
      327
     ]
    },
    "getattr": {
     "line number": [
      327
     ]
    },
    "setattr": {
     "line number": [
      327
     ]
    },
    "types.ModuleType": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat._translate_non_printable": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "_pytest.compat._non_printable_ascii_translate_table": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.ascii_escaped": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "_pytest.compat._bytes_to_ascii": {
     "line number": [
      207
     ]
    },
    "_pytest.compat._translate_non_printable": {
     "line number": [
      210
     ]
    },
    "bytes": {
     "line number": [
      206
     ]
    },
    "isinstance": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.compat.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.compat.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.compat.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.compat.get_default_arg_names": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "inspect.Parameter.KEYWORD_ONLY": {
     "line number": [
      164
     ]
    },
    "inspect.Parameter.POSITIONAL_OR_KEYWORD": {
     "line number": [
      164
     ]
    },
    "inspect.Parameter.empty": {
     "line number": [
      165
     ]
    },
    "inspect.signature": {
     "line number": [
      163
     ]
    },
    "tuple": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.get_real_func": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      243
     ]
    },
    "_pytest._io.saferepr.saferepr": {
     "line number": [
      245,
      245
     ]
    },
    "_pytest.compat._PytestWrapper": {
     "line number": [
      235
     ]
    },
    "_pytest.compat.functools": {
     "line number": [
      248
     ]
    },
    "getattr": {
     "line number": [
      234,
      238
     ]
    },
    "isinstance": {
     "line number": [
      235,
      248
     ]
    },
    "range": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.get_real_method": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      261
     ]
    },
    "_pytest.compat.get_real_func": {
     "line number": [
      260
     ]
    },
    "callable": {
     "line number": [
      263
     ]
    },
    "hasattr": {
     "line number": [
      259,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.getfslineno": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "_pytest.compat._pytest": {
     "line number": [
      273
     ]
    },
    "_pytest.compat.get_real_func": {
     "line number": [
      270
     ]
    },
    "hasattr": {
     "line number": [
      271
     ]
    },
    "int": {
     "line number": [
      274
     ]
    },
    "isinstance": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      116
     ]
    },
    "ValueError": {
     "line number": [
      116
     ]
    },
    "_pytest.compat.num_mock_patch_args": {
     "line number": [
      143
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      117
     ]
    },
    "hasattr": {
     "line number": [
      142
     ]
    },
    "inspect.Parameter.KEYWORD_ONLY": {
     "line number": [
      127
     ]
    },
    "inspect.Parameter.POSITIONAL_OR_KEYWORD": {
     "line number": [
      126
     ]
    },
    "inspect.Parameter.empty": {
     "line number": [
      129
     ]
    },
    "inspect.signature": {
     "line number": [
      115
     ]
    },
    "isinstance": {
     "line number": [
      138
     ]
    },
    "staticmethod": {
     "line number": [
      138
     ]
    },
    "str": {
     "line number": [
      90
     ]
    },
    "tuple": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "_pytest.compat.get_real_func": {
     "line number": [
      63
     ]
    },
    "_pytest.compat.inspect": {
     "line number": [
      64
     ]
    },
    "_pytest.compat.py": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.importlib_metadata": {
  "data": {
   "shadows": "importlib_metadata"
  },
  "type": "import"
 },
 "_pytest.compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.compat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.compat.is_generator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "_pytest.compat.inspect": {
     "line number": [
      45
     ]
    },
    "_pytest.compat.iscoroutinefunction": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.iscoroutinefunction": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "_pytest.compat.inspect": {
     "line number": [
      59
     ]
    },
    "getattr": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.nullcontext": {
  "data": {
   "shadows": "contextlib.nullcontext"
  },
  "type": "import"
 },
 "_pytest.compat.num_mock_patch_args": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "_pytest.compat.sys": {
     "line number": [
      77,
      78
     ]
    },
    "getattr": {
     "line number": [
      73,
      77,
      78
     ]
    },
    "len": {
     "line number": [
      80
     ]
    },
    "object": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.overload": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "_pytest.compat.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.compat.safe_getattr": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "_pytest.outcomes.TEST_OUTCOME": {
     "line number": [
      295
     ]
    },
    "getattr": {
     "line number": [
      294
     ]
    },
    "object": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.safe_isclass": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      303
     ]
    },
    "_pytest.compat.inspect": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.compat.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.compat.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "_pytest.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.compat.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.config.exceptions": {
  "data": {},
  "type": "module"
 },
 "_pytest.config.exceptions.PrintHelp": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.config.exceptions.UsageError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.config.findpaths": {
  "data": {},
  "type": "module"
 },
 "_pytest.config.findpaths.CFG_PYTEST_SECTION": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "_pytest.config.findpaths.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.determine_setup": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      129
     ]
    },
    "UsageError": {
     "line number": [
      156
     ]
    },
    "_pytest.config.findpaths.CFG_PYTEST_SECTION": {
     "line number": [
      126
     ]
    },
    "_pytest.config.findpaths.get_common_ancestor": {
     "line number": [
      132,
      134,
      149
     ]
    },
    "_pytest.config.findpaths.get_dirs_from_args": {
     "line number": [
      116
     ]
    },
    "_pytest.config.findpaths.getcfg": {
     "line number": [
      135,
      143
     ]
    },
    "_pytest.config.findpaths.os": {
     "line number": [
      150,
      154
     ]
    },
    "_pytest.config.findpaths.py": {
     "line number": [
      118,
      148,
      154
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      125
     ]
    },
    "str": {
     "line number": [
      111,
      112,
      113,
      119,
      126,
      150
     ]
    },
    "typing.List": {
     "line number": [
      112
     ]
    },
    "typing.Optional": {
     "line number": [
      113,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.exists": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.get_common_ancestor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "_pytest.config.findpaths.py": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "_pytest.config.findpaths.py": {
     "line number": [
      99
     ]
    },
    "get_dir_from_path": {
     "line number": [
      104
     ]
    },
    "get_file_part_from_node_id": {
     "line number": [
      99
     ]
    },
    "is_option": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_dir_from_path": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "_pytest.config.findpaths.py": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_file_part_from_node_id": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "str": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.is_option": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "str": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.getcfg": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "UsageError": {
     "line number": [
      41
     ]
    },
    "_pytest.config.findpaths.exists": {
     "line number": [
      37
     ]
    },
    "_pytest.config.findpaths.py": {
     "line number": [
      31,
      33,
      39,
      40
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      51
     ]
    },
    "str": {
     "line number": [
      29,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.config.findpaths.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.deprecated": {
  "data": {
   "symbols_in_volume": {
    "_pytest.warning_types.PytestDeprecationWarning": {
     "line number": [
      22,
      28,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.deprecated.DEPRECATED_EXTERNAL_PLUGINS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "_pytest.deprecated.FIXTURE_POSITIONAL_ARGUMENTS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "_pytest.deprecated.FUNCARGNAMES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "_pytest.deprecated.PytestDeprecationWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestDeprecationWarning"
  },
  "type": "import"
 },
 "_pytest.deprecated.RESULT_LOG": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.faulthandler": {
  "data": {},
  "type": "module"
 },
 "_pytest.faulthandler._get_stderr_fileno": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      32
     ]
    },
    "_pytest.faulthandler.io": {
     "line number": [
      32
     ]
    },
    "_pytest.faulthandler.sys": {
     "line number": [
      31,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.faulthandler.faulthandler": {
  "data": {
   "shadows": "faulthandler"
  },
  "type": "import"
 },
 "_pytest.faulthandler.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.faulthandler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.faulthandler.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.faulthandler.pytest_addoption": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "help": {
     "line number": [
      9,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.faulthandler.pytest_configure": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "_pytest.faulthandler._get_stderr_fileno": {
     "line number": [
      24
     ]
    },
    "_pytest.faulthandler.faulthandler": {
     "line number": [
      21,
      26
     ]
    },
    "_pytest.faulthandler.os": {
     "line number": [
      24,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.faulthandler.pytest_enter_pdb": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "_pytest.faulthandler.faulthandler": {
     "line number": [
      76
     ]
    },
    "_pytest.faulthandler.pytest": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.faulthandler.pytest_exception_interact": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "_pytest.faulthandler.faulthandler": {
     "line number": [
      86
     ]
    },
    "_pytest.faulthandler.pytest": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.faulthandler.pytest_runtest_protocol": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "_pytest.faulthandler.faulthandler": {
     "line number": [
      61,
      65
     ]
    },
    "_pytest.faulthandler.pytest": {
     "line number": [
      54
     ]
    },
    "float": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.faulthandler.pytest_unconfigure": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "_pytest.faulthandler._get_stderr_fileno": {
     "line number": [
      51
     ]
    },
    "_pytest.faulthandler.faulthandler": {
     "line number": [
      42,
      51
     ]
    },
    "getattr": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.faulthandler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.freeze_support": {
  "data": {},
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "_pytest.freeze_support.os": {
     "line number": [
      41
     ]
    },
    "_pytest.freeze_support.pkgutil": {
     "line number": [
      39
     ]
    },
    "str": {
     "line number": [
      35
     ]
    },
    "type": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.freeze_support._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.freeze_support.freeze_includes": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "_pytest.freeze_support._iter_all_modules": {
     "line number": [
      15,
      16
     ]
    },
    "_pytest.freeze_support._pytest": {
     "line number": [
      16
     ]
    },
    "_pytest.freeze_support.py": {
     "line number": [
      15
     ]
    },
    "list": {
     "line number": [
      15,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.freeze_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.freeze_support.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.freeze_support.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig": {
  "data": {},
  "type": "module"
 },
 "_pytest.helpconfig.Action": {
  "data": {
   "shadows": "argparse.Action"
  },
  "type": "import"
 },
 "_pytest.helpconfig.HelpAction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "argparse.Action": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.helpconfig.HelpAction.__call__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "_pytest.config.PrintHelp": {
     "line number": [
      36
     ]
    },
    "getattr": {
     "line number": [
      35
     ]
    },
    "setattr": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.HelpAction.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "help": {
     "line number": [
      28
     ]
    },
    "super": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.PrintHelp": {
  "data": {
   "shadows": "_pytest.config.PrintHelp"
  },
  "type": "import"
 },
 "_pytest.helpconfig.conftest_options": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      218
     ]
    },
    "repr": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.helpconfig.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "_pytest.helpconfig.HelpAction": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "_pytest.helpconfig.showhelp": {
     "line number": [
      134
     ]
    },
    "_pytest.helpconfig.showversion": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "_pytest.helpconfig.os": {
     "line number": [
      91,
      100
     ]
    },
    "_pytest.helpconfig.py": {
     "line number": [
      98
     ]
    },
    "_pytest.helpconfig.pytest": {
     "line number": [
      97,
      86
     ]
    },
    "_pytest.helpconfig.sys": {
     "line number": [
      99,
      106
     ]
    },
    "map": {
     "line number": [
      99
     ]
    },
    "open": {
     "line number": [
      92
     ]
    },
    "str": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "_pytest.helpconfig.sys": {
     "line number": [
      110
     ]
    },
    "undo_tracing": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "_pytest.helpconfig.getpluginversioninfo": {
     "line number": [
      231
     ]
    },
    "_pytest.helpconfig.py": {
     "line number": [
      228
     ]
    },
    "_pytest.helpconfig.pytest": {
     "line number": [
      228
     ]
    },
    "hasattr": {
     "line number": [
      239
     ]
    },
    "repr": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "_pytest.helpconfig.textwrap": {
     "line number": [
      164,
      177
     ]
    },
    "help": {
     "line number": [
      155,
      165,
      177,
      191,
      192
     ]
    },
    "len": {
     "line number": [
      160
     ]
    },
    "type": {
     "line number": [
      155,
      156,
      157,
      158
     ]
    },
    "vars": {
     "line number": [
      185,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.showversion": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "_pytest.helpconfig.getpluginversioninfo": {
     "line number": [
      122
     ]
    },
    "_pytest.helpconfig.py": {
     "line number": [
      118
     ]
    },
    "_pytest.helpconfig.pytest": {
     "line number": [
      118,
      120
     ]
    },
    "_pytest.helpconfig.sys": {
     "line number": [
      119,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.helpconfig.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.helpconfig.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "_pytest.hookspec": {
  "data": {
   "symbols_in_volume": {
    "pluggy.HookspecMarker": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.hookspec.HookspecMarker": {
  "data": {
   "shadows": "pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.hookspec.hookspec": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertion_pass": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_doctest_prepare_content": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemstart": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 624
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_leave_pdb": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_collectionfinish": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_from_serializable": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_to_serializable": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logfinish": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "data": {
   "lineno": 567
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_warning_captured": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "_pytest.hookspec.hookspec": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml": {
  "data": {
   "symbols_in_volume": {
    "_pytest.junitxml._legal_chars": {
     "line number": [
      42,
      44
     ]
    },
    "_pytest.junitxml._legal_ranges": {
     "line number": [
      39,
      45
     ]
    },
    "_pytest.junitxml._legal_xml_re": {
     "line number": [
      43,
      46
     ]
    },
    "_pytest.junitxml.families": {
     "line number": [
      73,
      74,
      77,
      77,
      78,
      78,
      81,
      81
     ]
    },
    "_pytest.junitxml.merge_family": {
     "line number": [
      78
     ]
    },
    "_pytest.junitxml.re": {
     "line number": [
      43,
      48
     ]
    },
    "_pytest.junitxml.sys": {
     "line number": [
      40
     ]
    },
    "chr": {
     "line number": [
      38,
      38,
      42
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "_pytest.junitxml.py": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "data": {
   "lineno": 468
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "_pytest.junitxml.os": {
     "line number": [
      479,
      479,
      480,
      480
     ]
    },
    "dict.fromkeys": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      689,
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "_pytest.junitxml._check_record_param_type": {
     "line number": [
      682
     ]
    },
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      501,
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "_pytest.junitxml._NodeReporter": {
     "line number": [
      519
     ]
    },
    "getattr": {
     "line number": [
      509,
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      566,
      567,
      574,
      575,
      604,
      605,
      612,
      613
     ]
    },
    "next": {
     "line number": [
      568,
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      662,
      674
     ]
    },
    "_pytest.junitxml.os": {
     "line number": [
      646,
      646,
      647,
      648
     ]
    },
    "_pytest.junitxml.platform": {
     "line number": [
      672
     ]
    },
    "_pytest.junitxml.time": {
     "line number": [
      650
     ]
    },
    "datetime.datetime.fromtimestamp": {
     "line number": [
      671
     ]
    },
    "open": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "_pytest.junitxml.time": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.PytestExperimentalApiWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestExperimentalApiWarning"
  },
  "type": "import"
 },
 "_pytest.junitxml.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.junitxml._NodeReporter": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      157
     ]
    },
    "kind": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_attribute": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      104
     ]
    },
    "str": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      101
     ]
    },
    "str": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "type": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      236
     ]
    },
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      220,
      229
     ]
    },
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      228,
      230
     ]
    },
    "hasattr": {
     "line number": [
      219,
      222
     ]
    },
    "isinstance": {
     "line number": [
      224
     ]
    },
    "str": {
     "line number": [
      224,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      255,
      266
     ]
    },
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      256,
      267,
      269
     ]
    },
    "hasattr": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "_pytest.junitxml.py": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      110,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      127
     ]
    },
    "_pytest.junitxml.families": {
     "line number": [
      145
     ]
    },
    "_pytest.junitxml.mangle_test_address": {
     "line number": [
      120
     ]
    },
    "hasattr": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.write_captured_output": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "_pytest.junitxml.Junit": {
     "line number": [
      190,
      211
     ]
    },
    "_pytest.junitxml.bin_xml_escape": {
     "line number": [
      191,
      212
     ]
    },
    "getattr": {
     "line number": [
      190,
      211
     ]
    },
    "tag": {
     "line number": [
      191,
      211,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._check_record_param_type": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      350
     ]
    },
    "isinstance": {
     "line number": [
      348
     ]
    },
    "str": {
     "line number": [
      348
     ]
    },
    "type": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml._legal_chars": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_ranges": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_xml_re": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "_pytest.junitxml._py_ext_re": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "_pytest.junitxml._warn_incompatibility_with_xunit2": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      287
     ]
    },
    "getattr": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "_pytest.junitxml.illegal_xml_re": {
     "line number": [
      59
     ]
    },
    "_pytest.junitxml.py": {
     "line number": [
      59,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ord": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "_pytest.junitxml.families": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "_pytest.junitxml.filename_arg": {
  "data": {
   "shadows": "_pytest.config.filename_arg"
  },
  "type": "import"
 },
 "_pytest.junitxml.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.junitxml.illegal_xml_re": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "_pytest.junitxml.mangle_test_address": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      458
     ]
    },
    "_pytest.junitxml._py_ext_re": {
     "line number": [
      462
     ]
    },
    "_pytest.nodes.SEP": {
     "line number": [
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.merge_family": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      67
     ]
    },
    "isinstance": {
     "line number": [
      66
     ]
    },
    "list": {
     "line number": [
      66
     ]
    },
    "type": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.junitxml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.junitxml.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.junitxml.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest_addoption": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "_pytest.config.filename_arg": {
     "line number": [
      391
     ]
    },
    "_pytest.junitxml.functools": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "_pytest.junitxml.LogXML": {
     "line number": [
      434
     ]
    },
    "hasattr": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.junitxml.record_property": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "_pytest.junitxml._warn_incompatibility_with_xunit2": {
     "line number": [
      308
     ]
    },
    "_pytest.junitxml.pytest": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.record_property.append_property": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "_pytest.junitxml.record_testsuite_property": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "_pytest.junitxml.pytest": {
     "line number": [
      353
     ]
    },
    "getattr": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.record_testsuite_property.record_func": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "_pytest.junitxml._check_record_param_type": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "_pytest.junitxml._warn_incompatibility_with_xunit2": {
     "line number": [
      328
     ]
    },
    "_pytest.junitxml.pytest": {
     "line number": [
      316
     ]
    },
    "_pytest.warning_types.PytestExperimentalApiWarning": {
     "line number": [
      325
     ]
    },
    "getattr": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute.add_attr_noop": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "_pytest.junitxml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.junitxml.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.logging": {
  "data": {
   "symbols_in_volume": {
    "_pytest.logging.re": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.logging.ColoredLevelFormatter": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      21,
      27,
      28,
      29,
      30,
      31,
      32,
      33
     ]
    },
    "_pytest.logging.re": {
     "line number": [
      35
     ]
    },
    "set": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.logging.ColoredLevelFormatter.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      49
     ]
    },
    "super": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.ColoredLevelFormatter.format": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "super": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.DEFAULT_LOG_DATE_FORMAT": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "_pytest.logging.DEFAULT_LOG_FORMAT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "_pytest.logging.LogCaptureFixture": {
  "data": {
   "lineno": 233
  },
  "type": "class"
 },
 "_pytest.logging.LogCaptureFixture.__init__": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture._finalize": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.at_level": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      343
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.clear": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.get_records": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.handler": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "property": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.messages": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "property": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.record_tuples": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "property": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.records": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "property": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.set_level": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.text": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "_pytest.logging._remove_ansi_escape_sequences": {
     "line number": [
      280
     ]
    },
    "property": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.logging.LogCaptureHandler.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      220
     ]
    },
    "io.StringIO": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.emit": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.reset": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "io.StringIO": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin": {
  "data": {
   "lineno": 400
  },
  "type": "class"
 },
 "_pytest.logging.LoggingPlugin.__init__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "_pytest.compat.nullcontext": {
     "line number": [
      439
     ]
    },
    "_pytest.logging.get_actual_log_level": {
     "line number": [
      417,
      419
     ]
    },
    "_pytest.logging.get_option_ini": {
     "line number": [
      412,
      414,
      415,
      420,
      421,
      428
     ]
    },
    "_pytest.logging.logging": {
     "line number": [
      424,
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._create_formatter": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "_pytest.config.create_terminal_writer": {
     "line number": [
      454
     ]
    },
    "_pytest.logging.ColoredLevelFormatter": {
     "line number": [
      450,
      453
     ]
    },
    "_pytest.logging.PercentStyleMultiline": {
     "line number": [
      459
     ]
    },
    "_pytest.logging.logging": {
     "line number": [
      457
     ]
    },
    "getattr": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._log_cli_enabled": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "_pytest.logging.catching_logs": {
     "line number": [
      529
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for_main": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "_pytest.logging.LogCaptureHandler": {
     "line number": [
      538
     ]
    },
    "_pytest.logging.catching_logs": {
     "line number": [
      537
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      534
     ]
    },
    "hasattr": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._setup_cli_logging": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "_pytest.logging._LiveLoggingStreamHandler": {
     "line number": [
      471
     ]
    },
    "_pytest.logging.catching_logs": {
     "line number": [
      480
     ]
    },
    "_pytest.logging.get_actual_log_level": {
     "line number": [
      478
     ]
    },
    "_pytest.logging.get_option_ini": {
     "line number": [
      474,
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_collection": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "_pytest.logging.catching_logs": {
     "line number": [
      520
     ]
    },
    "_pytest.logging.pytest": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_call": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "_pytest.logging.pytest": {
     "line number": [
      568
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logfinish": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": {
    "_pytest.logging.pytest": {
     "line number": [
      585
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "_pytest.logging.pytest": {
     "line number": [
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logstart": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "_pytest.logging.pytest": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_setup": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "_pytest.logging.pytest": {
     "line number": [
      563
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_teardown": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "_pytest.logging.pytest": {
     "line number": [
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtestloop": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "_pytest.logging.catching_logs": {
     "line number": [
      638
     ]
    },
    "_pytest.logging.pytest": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "_pytest.logging.catching_logs": {
     "line number": [
      602
     ]
    },
    "_pytest.logging.pytest": {
     "line number": [
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionstart": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "_pytest.logging.catching_logs": {
     "line number": [
      619
     ]
    },
    "_pytest.logging.pytest": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.set_log_path": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      500
     ]
    },
    "_pytest.pathlib.Path": {
     "line number": [
      492,
      495
     ]
    },
    "str": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.logging.PercentStyleMultiline": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.logging.PercentStyleMultiline._update_message": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.PercentStyleMultiline.format": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "_pytest.logging._remove_ansi_escape_sequences": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "_pytest.logging._ANSI_ESCAPE_SEQ": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "_pytest.logging._LiveLoggingStreamHandler": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      644
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.logging._LiveLoggingStreamHandler.__init__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      658
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.emit": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "_pytest.compat.nullcontext": {
     "line number": [
      679
     ]
    },
    "_pytest.logging.logging": {
     "line number": [
      692
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.reset": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.set_when": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "_pytest.logging._remove_ansi_escape_sequences": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "_pytest.logging._ANSI_ESCAPE_SEQ": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.caplog": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "_pytest.logging.LogCaptureFixture": {
     "line number": [
      364
     ]
    },
    "_pytest.logging.pytest": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.catching_logs": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "_pytest.logging.logging": {
     "line number": [
      190
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      187
     ]
    },
    "min": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.logging.create_terminal_writer": {
  "data": {
   "shadows": "_pytest.config.create_terminal_writer"
  },
  "type": "import"
 },
 "_pytest.logging.get_actual_log_level": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      385
     ]
    },
    "_pytest.logging.logging": {
     "line number": [
      384
     ]
    },
    "_pytest.logging.pytest": {
     "line number": [
      387
     ]
    },
    "getattr": {
     "line number": [
      384
     ]
    },
    "int": {
     "line number": [
      384
     ]
    },
    "isinstance": {
     "line number": [
      381
     ]
    },
    "str": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.get_option_ini": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "_pytest.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "_pytest.logging.nullcontext": {
  "data": {
   "shadows": "_pytest.compat.nullcontext"
  },
  "type": "import"
 },
 "_pytest.logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.logging.pytest_addoption": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "_pytest.logging.DEFAULT_LOG_DATE_FORMAT": {
     "line number": [
      137,
      182
     ]
    },
    "_pytest.logging.DEFAULT_LOG_FORMAT": {
     "line number": [
      131,
      176
     ]
    },
    "add_option_ini": {
     "line number": [
      113,
      122,
      128,
      134,
      146,
      149,
      155,
      161,
      167,
      173,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.pytest_addoption.add_option_ini": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "type": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.pytest_configure": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "_pytest.logging.LoggingPlugin": {
     "line number": [
      397
     ]
    },
    "_pytest.logging.pytest": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.logging.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.main": {
  "data": {},
  "type": "module"
 },
 "_pytest.main.ExitCode": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "_pytest.main.enum": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.main.FSHookProxy": {
  "data": {
   "lineno": 329
  },
  "type": "class"
 },
 "_pytest.main.FSHookProxy.__getattr__": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "_pytest.main.FSHookProxy.__init__": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "_pytest.main.Failed": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.main.NoMatch": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.main.Package": {
  "data": {
   "shadows": "_pytest.python.Package"
  },
  "type": "import"
 },
 "_pytest.main.Session": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "_pytest.main.Failed": {
     "line number": [
      367,
      367
     ]
    },
    "_pytest.main.Interrupted": {
     "line number": [
      366,
      366
     ]
    },
    "_pytest.nodes.FSCollector": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "_pytest.main._bestrelpath_cache": {
     "line number": [
      383
     ]
    },
    "_pytest.nodes.FSCollector.__init__": {
     "line number": [
      370
     ]
    },
    "frozenset": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.__repr__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      569
     ]
    },
    "_pytest.python.Package": {
     "line number": [
      516,
      538
     ]
    },
    "isinstance": {
     "line number": [
      516,
      538
     ]
    },
    "next": {
     "line number": [
      568
     ]
    },
    "reversed": {
     "line number": [
      506
     ]
    },
    "set": {
     "line number": [
      526
     ]
    },
    "type": {
     "line number": [
      545
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session._collectfile": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": {
    "_pytest.nodes.Collector": {
     "line number": [
      671
     ]
    },
    "_pytest.nodes.Item": {
     "line number": [
      667
     ]
    },
    "_pytest.runner.collect_one_node": {
     "line number": [
      676
     ]
    },
    "isinstance": {
     "line number": [
      667,
      671
     ]
    },
    "len": {
     "line number": [
      686
     ]
    },
    "type": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session._node_location_to_relpath": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "_pytest.config.UsageError": {
     "line number": [
      641,
      644
     ]
    },
    "_pytest.main.os": {
     "line number": [
      637
     ]
    },
    "str": {
     "line number": [
      634
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "_pytest.config.UsageError": {
     "line number": [
      472
     ]
    },
    "_pytest.runner.collect_one_node": {
     "line number": [
      463
     ]
    },
    "frozenset": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session._recurse": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      623
     ]
    },
    "ImportError": {
     "line number": [
      623
     ]
    },
    "ValueError": {
     "line number": [
      623
     ]
    },
    "_pytest.main.importlib": {
     "line number": [
      619
     ]
    },
    "_pytest.main.os": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session._visit_filter": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      612
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "_pytest.main.NoMatch": {
     "line number": [
      488
     ]
    },
    "_pytest.main.sys": {
     "line number": [
      491
     ]
    },
    "map": {
     "line number": [
      483
     ]
    },
    "str": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": {
    "_pytest.nodes.Collector": {
     "line number": [
      702
     ]
    },
    "_pytest.nodes.Item": {
     "line number": [
      698
     ]
    },
    "_pytest.runner.collect_one_node": {
     "line number": [
      703
     ]
    },
    "isinstance": {
     "line number": [
      698,
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "_pytest.main.FSHookProxy": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "_pytest.main.NoMatch": {
     "line number": [
      656
     ]
    },
    "_pytest.nodes": {
     "line number": [
      651,
      652,
      657
     ]
    },
    "len": {
     "line number": [
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "len": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "_pytest.config.hookimpl": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "_pytest.config.hookimpl": {
     "line number": [
      409
     ]
    },
    "hasattr": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.main._bestrelpath_cache": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "_pytest.main.attr": {
     "line number": [
      357,
      355
     ]
    },
    "dict": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.main._bestrelpath_cache.__missing__": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "_pytest.main._in_venv": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "_pytest.main.sys": {
     "line number": [
      269
     ]
    },
    "any": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main._main": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "_pytest.main.ExitCode": {
     "line number": [
      240,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.main.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.main.collect_one_node": {
  "data": {
   "shadows": "_pytest.runner.collect_one_node"
  },
  "type": "import"
 },
 "_pytest.main.directory_arg": {
  "data": {
   "shadows": "_pytest.config.directory_arg"
  },
  "type": "import"
 },
 "_pytest.main.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "_pytest.main.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "_pytest.main.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.main.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.main.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.main.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "_pytest.main.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.main.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.main.pytest_addoption": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "_pytest.config.directory_arg": {
     "line number": [
      143
     ]
    },
    "_pytest.main.functools": {
     "line number": [
      143
     ]
    },
    "int": {
     "line number": [
      71
     ]
    },
    "str": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "_pytest.main.wrap_session": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection_modifyitems": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "_pytest.main._in_venv": {
     "line number": [
      305
     ]
    },
    "_pytest.main.fnmatch": {
     "line number": [
      301
     ]
    },
    "_pytest.main.py": {
     "line number": [
      288,
      290,
      299
     ]
    },
    "any": {
     "line number": [
      301
     ]
    },
    "str": {
     "line number": [
      301,
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      256
     ]
    },
    "len": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.main.wrap_session": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      199
     ]
    },
    "SystemExit": {
     "line number": [
      215
     ]
    },
    "_pytest.config.UsageError": {
     "line number": [
      194
     ]
    },
    "_pytest.main.ExitCode": {
     "line number": [
      185,
      195,
      198,
      201,
      214
     ]
    },
    "_pytest.main.Session": {
     "line number": [
      184
     ]
    },
    "_pytest.main.sys": {
     "line number": [
      206,
      216
     ]
    },
    "_pytest.outcomes.exit.Exception": {
     "line number": [
      199,
      202
     ]
    },
    "doit": {
     "line number": [
      193
     ]
    },
    "isinstance": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark": {
  "data": {
   "symbols_in_volume": {
    "_pytest.mark.pytest_cmdline_main": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.mark.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.mark.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "_pytest.mark._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.mark.deselect_by_keyword": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "matchkeyword": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.deselect_by_mark": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "matchmark": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate": {
  "data": {},
  "type": "module"
 },
 "_pytest.mark.evaluate.MarkEvaluator": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__bool__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._get_marks": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "list": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._getglobals": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "_pytest.mark.evaluate.os": {
     "line number": [
      68
     ]
    },
    "_pytest.mark.evaluate.platform": {
     "line number": [
      68
     ]
    },
    "_pytest.mark.evaluate.sys": {
     "line number": [
      68
     ]
    },
    "hasattr": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._istrue": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "_pytest.mark.evaluate.cached_eval": {
     "line number": [
      91
     ]
    },
    "bool": {
     "line number": [
      100
     ]
    },
    "fail": {
     "line number": [
      99
     ]
    },
    "hasattr": {
     "line number": [
      74
     ]
    },
    "isinstance": {
     "line number": [
      89
     ]
    },
    "str": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.get": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.getexplanation": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      119
     ]
    },
    "hasattr": {
     "line number": [
      121
     ]
    },
    "str": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.invalidraise": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.istrue": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      53
     ]
    },
    "_pytest.mark.evaluate.sys": {
     "line number": [
      52
     ]
    },
    "_pytest.mark.evaluate.traceback": {
     "line number": [
      59
     ]
    },
    "fail": {
     "line number": [
      60
     ]
    },
    "isinstance": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.wasvalid": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.cached_eval": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      15
     ]
    },
    "eval": {
     "line number": [
      19
     ]
    },
    "hasattr": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.mark.legacy": {
  "data": {},
  "type": "module"
 },
 "_pytest.mark.legacy.KeywordMapping": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "_pytest.mark.legacy.KeywordMapping.__getitem__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.from_item": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "_pytest.mark.legacy.pytest": {
     "line number": [
      44
     ]
    },
    "classmethod": {
     "line number": [
      36
     ]
    },
    "cls": {
     "line number": [
      57
     ]
    },
    "hasattr": {
     "line number": [
      51
     ]
    },
    "isinstance": {
     "line number": [
      44
     ]
    },
    "set": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "_pytest.mark.legacy.attr": {
     "line number": [
      17,
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.mark.legacy.MarkMapping.__getitem__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping.from_item": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      19
     ]
    },
    "cls": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.legacy.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.matchkeyword": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      101
     ]
    },
    "_pytest.config.UsageError": {
     "line number": [
      94,
      102
     ]
    },
    "_pytest.mark.legacy.KeywordMapping": {
     "line number": [
      86
     ]
    },
    "_pytest.mark.legacy.keyword": {
     "line number": [
      93
     ]
    },
    "_pytest.mark.legacy.python_keywords_allowed_list": {
     "line number": [
      93
     ]
    },
    "eval": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.legacy.matchmark": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      73,
      74
     ]
    },
    "_pytest.mark.legacy.MarkMapping": {
     "line number": [
      72
     ]
    },
    "eval": {
     "line number": [
      72
     ]
    },
    "str": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.legacy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.python_keywords_allowed_list": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "_pytest.mark.param": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "_pytest.mark.pytest_addoption": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "len": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "_pytest.mark.deselect_by_keyword": {
     "line number": [
      144
     ]
    },
    "_pytest.mark.deselect_by_mark": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "_pytest.config.UsageError": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.pytest_unconfigure": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures": {
  "data": {
   "symbols_in_volume": {
    "_pytest.mark.structures.MarkGenerator": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.mark.structures.EMPTY_PARAMETERSET_OPTION": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "_pytest.mark.structures.MARK_GEN": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "_pytest.mark.structures.Mark": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "_pytest.mark.structures.attr": {
     "line number": [
      152,
      154,
      156,
      149
     ]
    },
    "str": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.mark.structures.Mark.combined_with": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "_pytest.mark.structures.Mark": {
     "line number": [
      167
     ]
    },
    "dict": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "_pytest.mark.structures.Mark": {
     "line number": [
      206
     ]
    },
    "_pytest.mark.structures.alias": {
     "line number": [
      208,
      209,
      210
     ]
    },
    "_pytest.mark.structures.attr": {
     "line number": [
      206,
      206,
      172
     ]
    },
    "mark": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.mark.structures.MarkDecorator.__call__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "_pytest.mark.structures.inspect": {
     "line number": [
      238
     ]
    },
    "_pytest.mark.structures.istestfunc": {
     "line number": [
      239
     ]
    },
    "_pytest.mark.structures.store_mark": {
     "line number": [
      240
     ]
    },
    "len": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__eq__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "_pytest.mark.structures.MarkDecorator": {
     "line number": [
      217
     ]
    },
    "isinstance": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__repr__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.markname": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "property": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.with_args": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "_pytest.mark.structures.Mark": {
     "line number": [
      230
     ]
    },
    "mark": {
     "line number": [
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkGenerator": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "set": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.mark.structures.MarkGenerator.__getattr__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      298
     ]
    },
    "_pytest.mark.structures.Mark": {
     "line number": [
      328
     ]
    },
    "_pytest.mark.structures.MarkDecorator": {
     "line number": [
      328,
      296
     ]
    },
    "_pytest.mark.structures.warnings": {
     "line number": [
      321
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      316
     ]
    },
    "_pytest.warning_types.PytestUnknownMarkWarning": {
     "line number": [
      325
     ]
    },
    "str": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.MutableMapping": {
  "data": {
   "shadows": "collections.abc.MutableMapping"
  },
  "type": "import"
 },
 "_pytest.mark.structures.NodeKeywords": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "collections.abc.MutableMapping": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.mark.structures.NodeKeywords.__delitem__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__getitem__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__init__": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__iter__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__len__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "len": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__repr__": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__setitem__": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords._seen": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "set": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "_pytest.mark.structures.attr": {
     "line number": [
      383,
      383,
      372
     ]
    },
    "list": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.mark.structures.NodeMarkers.__iter__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.find": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "mark": {
     "line number": [
      395,
      397
     ]
    },
    "mark.name": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.update": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.mark.structures.ParameterSet._for_parametrize": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "_pytest.mark.structures.ParameterSet": {
     "line number": [
      144
     ]
    },
    "_pytest.mark.structures.get_empty_parameterset_mark": {
     "line number": [
      142
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      129
     ]
    },
    "classmethod": {
     "line number": [
      113
     ]
    },
    "cls._parse_parametrize_args": {
     "line number": [
      115
     ]
    },
    "cls._parse_parametrize_parameters": {
     "line number": [
      116
     ]
    },
    "len": {
     "line number": [
      122,
      122,
      134,
      135,
      144
     ]
    },
    "mark": {
     "line number": [
      142,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet._parse_parametrize_args": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      100
     ]
    },
    "len": {
     "line number": [
      102
     ]
    },
    "list": {
     "line number": [
      100
     ]
    },
    "staticmethod": {
     "line number": [
      98
     ]
    },
    "tuple": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet._parse_parametrize_parameters": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "_pytest.mark.structures.ParameterSet": {
     "line number": [
      110
     ]
    },
    "staticmethod": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.extract_from": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      79
     ]
    },
    "cls": {
     "line number": [
      91,
      96
     ]
    },
    "cls.param": {
     "line number": [
      94
     ]
    },
    "isinstance": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.param": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      73
     ]
    },
    "ascii_escaped": {
     "line number": [
      76
     ]
    },
    "classmethod": {
     "line number": [
      64
     ]
    },
    "cls": {
     "line number": [
      77
     ]
    },
    "id": {
     "line number": [
      71,
      72,
      74,
      74,
      76,
      76,
      77
     ]
    },
    "isinstance": {
     "line number": [
      66,
      69,
      72
     ]
    },
    "list": {
     "line number": [
      69
     ]
    },
    "set": {
     "line number": [
      69
     ]
    },
    "str": {
     "line number": [
      72
     ]
    },
    "tuple": {
     "line number": [
      69
     ]
    },
    "type": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.PytestUnknownMarkWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestUnknownMarkWarning"
  },
  "type": "import"
 },
 "_pytest.mark.structures.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "_pytest.mark.structures.alias": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "getter": {
     "line number": [
      27
     ]
    },
    "operator.attrgetter": {
     "line number": [
      21
     ]
    },
    "property": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.alias.warned": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "_pytest.mark.structures.warnings": {
     "line number": [
      24
     ]
    },
    "getter": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.mark.structures.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "_pytest.mark.structures.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.mark.structures.get_empty_parameterset_mark": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "LookupError": {
     "line number": [
      52
     ]
    },
    "_pytest.mark.structures.EMPTY_PARAMETERSET_OPTION": {
     "line number": [
      40
     ]
    },
    "getfslineno": {
     "line number": [
      47,
      53
     ]
    },
    "mark": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.get_unpacked_marks": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "_pytest.mark.structures.normalize_mark_list": {
     "line number": [
      252
     ]
    },
    "getattr": {
     "line number": [
      249
     ]
    },
    "isinstance": {
     "line number": [
      250
     ]
    },
    "list": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.mark.structures.istestfunc": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      33
     ]
    },
    "hasattr": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "_pytest.mark.structures.normalize_mark_list": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      267
     ]
    },
    "_pytest.mark.structures.Mark": {
     "line number": [
      266,
      268
     ]
    },
    "getattr": {
     "line number": [
      263
     ]
    },
    "isinstance": {
     "line number": [
      266,
      268
     ]
    },
    "mark": {
     "line number": [
      263,
      263,
      263,
      265,
      266,
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.store_mark": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "_pytest.mark.structures.Mark": {
     "line number": [
      275
     ]
    },
    "_pytest.mark.structures.get_unpacked_marks": {
     "line number": [
      278
     ]
    },
    "isinstance": {
     "line number": [
      275
     ]
    },
    "mark": {
     "line number": [
      275,
      275,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.mark.structures.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.monkeypatch": {
  "data": {
   "symbols_in_volume": {
    "_pytest.monkeypatch.Notset": {
     "line number": [
      97
     ]
    },
    "_pytest.monkeypatch.re": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "_pytest.monkeypatch.os": {
     "line number": [
      277,
      282,
      284
     ]
    },
    "_pytest.pathlib.Path": {
     "line number": [
      280
     ]
    },
    "hasattr": {
     "line number": [
      278
     ]
    },
    "isinstance": {
     "line number": [
      280
     ]
    },
    "str": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.context": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "_pytest.monkeypatch.MonkeyPatch": {
     "line number": [
      127
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      195
     ]
    },
    "TypeError": {
     "line number": [
      186
     ]
    },
    "_pytest.monkeypatch.derive_importpath": {
     "line number": [
      191
     ]
    },
    "_pytest.monkeypatch.inspect": {
     "line number": [
      199
     ]
    },
    "_pytest.monkeypatch.notset": {
     "line number": [
      170,
      184,
      197,
      200
     ]
    },
    "delattr": {
     "line number": [
      202
     ]
    },
    "getattr": {
     "line number": [
      197
     ]
    },
    "hasattr": {
     "line number": [
      193
     ]
    },
    "isinstance": {
     "line number": [
      185
     ]
    },
    "str": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "_pytest.monkeypatch.os": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      217
     ]
    },
    "_pytest.monkeypatch.notset": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      162
     ]
    },
    "TypeError": {
     "line number": [
      152
     ]
    },
    "_pytest.monkeypatch.derive_importpath": {
     "line number": [
      158
     ]
    },
    "_pytest.monkeypatch.inspect": {
     "line number": [
      165
     ]
    },
    "_pytest.monkeypatch.notset": {
     "line number": [
      133,
      150,
      160,
      161,
      166
     ]
    },
    "getattr": {
     "line number": [
      160
     ]
    },
    "isinstance": {
     "line number": [
      151
     ]
    },
    "setattr": {
     "line number": [
      168
     ]
    },
    "str": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "_pytest.monkeypatch.os": {
     "line number": [
      237,
      238,
      239
     ]
    },
    "_pytest.monkeypatch.pytest": {
     "line number": [
      228
     ]
    },
    "_pytest.monkeypatch.warnings": {
     "line number": [
      227
     ]
    },
    "isinstance": {
     "line number": [
      226
     ]
    },
    "str": {
     "line number": [
      226,
      236
     ]
    },
    "type": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "_pytest.monkeypatch.notset": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "_pytest.monkeypatch.sys": {
     "line number": [
      255,
      256
     ]
    },
    "importlib.invalidate_caches": {
     "line number": [
      270
     ]
    },
    "pkg_resources.fixup_namespace_packages": {
     "line number": [
      259
     ]
    },
    "str": {
     "line number": [
      256,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      310
     ]
    },
    "_pytest.monkeypatch.notset": {
     "line number": [
      301,
      307
     ]
    },
    "_pytest.monkeypatch.os": {
     "line number": [
      320
     ]
    },
    "_pytest.monkeypatch.sys": {
     "line number": [
      316
     ]
    },
    "delattr": {
     "line number": [
      304
     ]
    },
    "reversed": {
     "line number": [
      300,
      306
     ]
    },
    "setattr": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.RE_IMPORT_ERROR_NAME": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      71,
      72
     ]
    },
    "getattr": {
     "line number": [
      70
     ]
    },
    "type": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      82
     ]
    },
    "_pytest.monkeypatch.annotated_getattr": {
     "line number": [
      88
     ]
    },
    "_pytest.monkeypatch.resolve": {
     "line number": [
      86
     ]
    },
    "isinstance": {
     "line number": [
      81
     ]
    },
    "str": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.fixup_namespace_packages": {
  "data": {
   "shadows": "pkg_resources.fixup_namespace_packages"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.invalidate_caches": {
  "data": {
   "shadows": "importlib.invalidate_caches"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "_pytest.fixtures.fixture": {
     "line number": [
      15
     ]
    },
    "_pytest.monkeypatch.MonkeyPatch": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.notset": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.resolve": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      49
     ]
    },
    "ImportError": {
     "line number": [
      57,
      63
     ]
    },
    "__import__": {
     "line number": [
      44,
      56
     ]
    },
    "_pytest.monkeypatch.annotated_getattr": {
     "line number": [
      64
     ]
    },
    "getattr": {
     "line number": [
      48
     ]
    },
    "str": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.monkeypatch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.nodes": {
  "data": {
   "symbols_in_volume": {
    "_pytest.nodes.py": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.nodes.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "_pytest.nodes.Collector": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "_pytest.nodes.Node": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.nodes.Collector.CollectError": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.nodes.Collector._prunetraceback": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "_pytest.nodes.tracebackcutdir": {
     "line number": [
      357
     ]
    },
    "hasattr": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Collector.collect": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Collector.repr_failure": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "str": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "_pytest.nodes.FSCollector": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "_pytest.nodes.Collector": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.nodes.FSCollector.__init__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "_pytest.nodes.SEP": {
     "line number": [
      375,
      385,
      386
     ]
    },
    "_pytest.nodes._check_initialpaths_for_relpath": {
     "line number": [
      384
     ]
    },
    "_pytest.nodes.os": {
     "line number": [
      375,
      385,
      386
     ]
    },
    "_pytest.nodes.py": {
     "line number": [
      369
     ]
    },
    "super": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.File": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "_pytest.nodes.FSCollector": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.nodes.FixtureDef": {
  "data": {
   "shadows": "_pytest.fixtures.FixtureDef"
  },
  "type": "import"
 },
 "_pytest.nodes.Item": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "_pytest.nodes.Node": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.nodes.Item.__init__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "super": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Item.add_report_section": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "str": {
     "line number": [
      410,
      410,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Item.location": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      436
     ]
    },
    "property": {
     "line number": [
      432
     ]
    },
    "str": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Item.reportinfo": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "_pytest.nodes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "_pytest.nodes.MARK_GEN": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "_pytest.nodes.Mark": {
  "data": {
   "shadows": "_pytest.mark.structures.Mark"
  },
  "type": "import"
 },
 "_pytest.nodes.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.structures.MarkDecorator"
  },
  "type": "import"
 },
 "_pytest.nodes.Node": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "_pytest.nodes.Node.__hash__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "_pytest.mark.structures.NodeKeywords": {
     "line number": [
      90
     ]
    },
    "getattr": {
     "line number": [
      87
     ]
    },
    "set": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.__repr__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node._prunetraceback": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "_pytest.nodes.Node._repr_failure_py": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      290
     ]
    },
    "_pytest.nodes.os": {
     "line number": [
      288
     ]
    },
    "_pytest.outcomes.fail.Exception": {
     "line number": [
      260
     ]
    },
    "len": {
     "line number": [
      271
     ]
    },
    "str": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.add_marker": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      193
     ]
    },
    "_pytest.mark.MARK_GEN": {
     "line number": [
      191
     ]
    },
    "_pytest.mark.structures.MarkDecorator": {
     "line number": [
      177,
      188
     ]
    },
    "bool": {
     "line number": [
      177
     ]
    },
    "getattr": {
     "line number": [
      191
     ]
    },
    "isinstance": {
     "line number": [
      188,
      190
     ]
    },
    "str": {
     "line number": [
      177,
      190
     ]
    },
    "typing.Union": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.addfinalizer": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "_pytest.nodes.Node.get_closest_marker": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "next": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.getparent": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.ihook": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "property": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers_with_node": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      217
     ]
    },
    "reversed": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listchain": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listextrakeywords": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "set": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listnames": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "_pytest.nodes.Node.nodeid": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "property": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.Node.repr_failure": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "_pytest.nodes.Node.setup": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "_pytest.nodes.Node.teardown": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "_pytest.nodes.Node.warn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136
     ]
    },
    "_pytest.nodes.get_fslocation_from_item": {
     "line number": [
      141
     ]
    },
    "_pytest.nodes.warnings": {
     "line number": [
      143
     ]
    },
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      135
     ]
    },
    "isinstance": {
     "line number": [
      135
     ]
    },
    "str": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.NodeKeywords": {
  "data": {
   "shadows": "_pytest.mark.structures.NodeKeywords"
  },
  "type": "import"
 },
 "_pytest.nodes.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.nodes.SEP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.nodes.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "_pytest.nodes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "_pytest.nodes.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "_pytest.nodes._check_initialpaths_for_relpath": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "_pytest.nodes._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.nodes._splitnode": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "_pytest.nodes.SEP": {
     "line number": [
      48
     ]
    },
    "functools.lru_cache": {
     "line number": [
      29
     ]
    },
    "tuple": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.nodes.get_fslocation_from_item": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "_pytest.compat.getfslineno": {
     "line number": [
      320
     ]
    },
    "getattr": {
     "line number": [
      315,
      318,
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.getfslineno": {
  "data": {
   "shadows": "_pytest.compat.getfslineno"
  },
  "type": "import"
 },
 "_pytest.nodes.ischildnode": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "_pytest.nodes._splitnode": {
     "line number": [
      60,
      61
     ]
    },
    "len": {
     "line number": [
      62,
      62,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.nodes.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "_pytest.nodes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.nodes.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.nodes.tracebackcutdir": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "_pytest.nodes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.outcomes": {
  "data": {
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      39
     ]
    },
    "_pytest.outcomes.Exit": {
     "line number": [
      89
     ]
    },
    "_pytest.outcomes.Failed": {
     "line number": [
      132
     ]
    },
    "_pytest.outcomes.OutcomeException": {
     "line number": [
      39
     ]
    },
    "_pytest.outcomes.Skipped": {
     "line number": [
      116
     ]
    },
    "_pytest.outcomes.XFailed": {
     "line number": [
      154
     ]
    },
    "_pytest.outcomes.exit": {
     "line number": [
      89
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      132
     ]
    },
    "_pytest.outcomes.skip": {
     "line number": [
      116
     ]
    },
    "_pytest.outcomes.xfail": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.outcomes.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "_pytest.outcomes.Exit": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.outcomes.Exit.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "int": {
     "line number": [
      67
     ]
    },
    "str": {
     "line number": [
      67
     ]
    },
    "super": {
     "line number": [
      71
     ]
    },
    "typing.Optional": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.Failed": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "_pytest.outcomes.OutcomeException": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.outcomes.NoReturn": {
  "data": {
   "shadows": "typing.NoReturn"
  },
  "type": "import"
 },
 "_pytest.outcomes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest.outcomes.OutcomeException": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "BaseException.__init__": {
     "line number": [
      27
     ]
    },
    "TypeError": {
     "line number": [
      26
     ]
    },
    "bool": {
     "line number": [
      20
     ]
    },
    "isinstance": {
     "line number": [
      21
     ]
    },
    "str": {
     "line number": [
      20,
      21
     ]
    },
    "type": {
     "line number": [
      26,
      26
     ]
    },
    "typing.Optional": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.OutcomeException.__repr__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "str": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.Skipped": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "_pytest.outcomes.OutcomeException": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.outcomes.Skipped.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "_pytest.outcomes.OutcomeException": {
     "line number": [
      53
     ]
    },
    "bool": {
     "line number": [
      50,
      51
     ]
    },
    "str": {
     "line number": [
      49
     ]
    },
    "typing.Optional": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.TEST_OUTCOME": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "_pytest.outcomes.Version": {
  "data": {
   "shadows": "packaging.version.Version"
  },
  "type": "import"
 },
 "_pytest.outcomes.XFailed": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "_pytest.outcomes.Failed": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.outcomes.exit": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "_pytest.outcomes.Exit": {
     "line number": [
      85
     ]
    },
    "int": {
     "line number": [
      77
     ]
    },
    "str": {
     "line number": [
      77
     ]
    },
    "typing.Optional": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.fail": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "_pytest.outcomes.Failed": {
     "line number": [
      128
     ]
    },
    "bool": {
     "line number": [
      119
     ]
    },
    "str": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.importorskip": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      188
     ]
    },
    "__import__": {
     "line number": [
      187
     ]
    },
    "_pytest.outcomes.Skipped": {
     "line number": [
      191,
      198
     ]
    },
    "_pytest.outcomes.sys": {
     "line number": [
      192
     ]
    },
    "_pytest.outcomes.warnings": {
     "line number": [
      181,
      185
     ]
    },
    "compile": {
     "line number": [
      179
     ]
    },
    "getattr": {
     "line number": [
      195
     ]
    },
    "packaging.version.Version": {
     "line number": [
      197,
      197
     ]
    },
    "str": {
     "line number": [
      158,
      158,
      158
     ]
    },
    "typing.Any": {
     "line number": [
      159
     ]
    },
    "typing.Optional": {
     "line number": [
      158,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.skip": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "_pytest.outcomes.Skipped": {
     "line number": [
      112
     ]
    },
    "bool": {
     "line number": [
      92
     ]
    },
    "str": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.outcomes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.outcomes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.outcomes.xfail": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "_pytest.outcomes.XFailed": {
     "line number": [
      150
     ]
    },
    "str": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pastebin": {
  "data": {},
  "type": "module"
 },
 "_pytest.pastebin._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.pastebin.create_new_paste": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      74
     ]
    },
    "_pytest.pastebin.re": {
     "line number": [
      76
     ]
    },
    "urllib.parse.urlencode": {
     "line number": [
      72
     ]
    },
    "urllib.request.urlopen": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest_addoption": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "_pytest.pastebin.pytest": {
     "line number": [
      20
     ]
    },
    "_pytest.pastebin.tempfile": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      34
     ]
    },
    "oldwrite": {
     "line number": [
      33
     ]
    },
    "str": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      94
     ]
    },
    "_pytest.pastebin.create_new_paste": {
     "line number": [
      102
     ]
    },
    "len": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "_pytest.pastebin.create_new_paste": {
     "line number": [
      53
     ]
    },
    "hasattr": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pastebin.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.pastebin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "_pytest.pathlib": {
  "data": {
   "symbols_in_volume": {
    "_pytest.pathlib.operator": {
     "line number": [
      29
     ]
    },
    "_pytest.pathlib.sys": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.pathlib.LOCK_TIMEOUT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.pathlib.Path": {
  "data": {
   "shadows": "pathlib2.Path"
  },
  "type": "import"
 },
 "_pytest.pathlib.PurePath": {
  "data": {
   "shadows": "pathlib2.PurePath"
  },
  "type": "import"
 },
 "_pytest.pathlib.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.pathlib.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.pathlib._force_symlink": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      150
     ]
    },
    "OSError": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "_pytest.pathlib.cleanup_candidates": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "_pytest.pathlib.extract_suffixes": {
     "line number": [
      266
     ]
    },
    "_pytest.pathlib.find_prefixed": {
     "line number": [
      264
     ]
    },
    "_pytest.pathlib.find_suffixes": {
     "line number": [
      262
     ]
    },
    "_pytest.pathlib.itertools": {
     "line number": [
      265
     ]
    },
    "_pytest.pathlib.parse_num": {
     "line number": [
      262,
      266
     ]
    },
    "map": {
     "line number": [
      262,
      266
     ]
    },
    "max": {
     "line number": [
      262
     ]
    },
    "zip": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.cleanup_numbered_dir": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "_pytest.pathlib.cleanup_candidates": {
     "line number": [
      274
     ]
    },
    "_pytest.pathlib.try_cleanup": {
     "line number": [
      275,
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.create_cleanup_lock": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      181,
      188
     ]
    },
    "FileExistsError": {
     "line number": [
      180
     ]
    },
    "_pytest.pathlib.get_lock_path": {
     "line number": [
      177
     ]
    },
    "_pytest.pathlib.os": {
     "line number": [
      179,
      179,
      179,
      179,
      183,
      185,
      186
     ]
    },
    "str": {
     "line number": [
      179,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.ensure_deletable": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      244
     ]
    },
    "_pytest.pathlib.get_lock_path": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.ensure_reset_dir": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "_pytest.pathlib.rm_rf": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "_pytest.pathlib.expandvars": {
  "data": {
   "shadows": "os.path.expandvars"
  },
  "type": "import"
 },
 "_pytest.pathlib.extract_suffixes": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      116
     ]
    },
    "len": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.find_prefixed": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "_pytest.pathlib.find_suffixes": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "_pytest.pathlib.extract_suffixes": {
     "line number": [
      123
     ]
    },
    "_pytest.pathlib.find_prefixed": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.pathlib.fnmatch_ex": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "_pytest.pathlib.fnmatch": {
     "line number": [
      346
     ]
    },
    "_pytest.pathlib.os": {
     "line number": [
      344,
      345
     ]
    },
    "_pytest.pathlib.sys": {
     "line number": [
      332
     ]
    },
    "pathlib2.PurePath": {
     "line number": [
      331
     ]
    },
    "posixpath.sep": {
     "line number": [
      334,
      334,
      338,
      338,
      340
     ]
    },
    "str": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.get_lock_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.pathlib.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "_pytest.pathlib.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.pathlib.make_numbered_dir": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      169
     ]
    },
    "Exception": {
     "line number": [
      163
     ]
    },
    "_pytest.pathlib._force_symlink": {
     "line number": [
      166
     ]
    },
    "_pytest.pathlib.find_suffixes": {
     "line number": [
      158
     ]
    },
    "_pytest.pathlib.parse_num": {
     "line number": [
      158
     ]
    },
    "map": {
     "line number": [
      158
     ]
    },
    "max": {
     "line number": [
      158
     ]
    },
    "range": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.make_numbered_dir_with_cleanup": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      288
     ]
    },
    "_pytest.pathlib.cleanup_numbered_dir": {
     "line number": [
      292
     ]
    },
    "_pytest.pathlib.create_cleanup_lock": {
     "line number": [
      286
     ]
    },
    "_pytest.pathlib.make_numbered_dir": {
     "line number": [
      285
     ]
    },
    "_pytest.pathlib.register_cleanup_lock_removal": {
     "line number": [
      287
     ]
    },
    "range": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.maybe_delete_a_numbered_dir": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      219
     ]
    },
    "IOError": {
     "line number": [
      231
     ]
    },
    "OSError": {
     "line number": [
      219,
      231
     ]
    },
    "_pytest.pathlib.create_cleanup_lock": {
     "line number": [
      213
     ]
    },
    "_pytest.pathlib.rm_rf": {
     "line number": [
      218
     ]
    },
    "_pytest.pathlib.uuid": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.on_rm_rf_error": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      50
     ]
    },
    "PermissionError": {
     "line number": [
      53
     ]
    },
    "_pytest.pathlib.os": {
     "line number": [
      61,
      61,
      61
     ]
    },
    "_pytest.pathlib.warnings": {
     "line number": [
      54,
      62
     ]
    },
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      55,
      63
     ]
    },
    "bool": {
     "line number": [
      41
     ]
    },
    "chmod_rw": {
     "line number": [
      83,
      87
     ]
    },
    "func": {
     "line number": [
      89
     ]
    },
    "isinstance": {
     "line number": [
      50,
      53
     ]
    },
    "pathlib2.Path": {
     "line number": [
      80
     ]
    },
    "str": {
     "line number": [
      41,
      83,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.on_rm_rf_error.chmod_rw": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "_pytest.pathlib.os": {
     "line number": [
      75,
      76
     ]
    },
    "_pytest.pathlib.stat": {
     "line number": [
      76,
      76
     ]
    },
    "str": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "_pytest.pathlib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.pathlib.parse_num": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      130
     ]
    },
    "int": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "_pytest.pathlib.parts": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "len": {
     "line number": [
      351
     ]
    },
    "posixpath.sep": {
     "line number": [
      350,
      351
     ]
    },
    "posixpath.sep.join": {
     "line number": [
      351
     ]
    },
    "range": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.posix_sep": {
  "data": {
   "shadows": "posixpath.sep"
  },
  "type": "import"
 },
 "_pytest.pathlib.register_cleanup_lock_removal": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "_pytest.pathlib.atexit": {
     "line number": [
      192
     ]
    },
    "_pytest.pathlib.os": {
     "line number": [
      194
     ]
    },
    "register": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.register_cleanup_lock_removal.cleanup_on_exit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      203
     ]
    },
    "OSError": {
     "line number": [
      203
     ]
    },
    "_pytest.pathlib.os": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.resolve_from_str": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "input": {
     "line number": [
      304,
      306,
      306,
      307,
      307,
      308,
      309,
      311
     ]
    },
    "isinstance": {
     "line number": [
      304
     ]
    },
    "os.path.expanduser": {
     "line number": [
      306
     ]
    },
    "os.path.expandvars": {
     "line number": [
      307
     ]
    },
    "os.path.isabs": {
     "line number": [
      308
     ]
    },
    "pathlib2.Path": {
     "line number": [
      304,
      305,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.rm_rf": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "_pytest.pathlib.on_rm_rf_error": {
     "line number": [
      97
     ]
    },
    "_pytest.pathlib.shutil": {
     "line number": [
      98
     ]
    },
    "functools.partial": {
     "line number": [
      97
     ]
    },
    "pathlib2.Path": {
     "line number": [
      93
     ]
    },
    "str": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "_pytest.pathlib.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "_pytest.pathlib.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "_pytest.pathlib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pathlib.try_cleanup": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "_pytest.pathlib.ensure_deletable": {
     "line number": [
      256
     ]
    },
    "_pytest.pathlib.maybe_delete_a_numbered_dir": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.pathlib.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "_pytest.pathlib.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.recwarn": {
  "data": {},
  "type": "module"
 },
 "_pytest.recwarn.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "_pytest.recwarn.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "_pytest.recwarn.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "_pytest.recwarn.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "_pytest.recwarn.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest.recwarn.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "_pytest.recwarn.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "_pytest.recwarn.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "_pytest.recwarn.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "_pytest.recwarn.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "_pytest.recwarn.WarningsChecker": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "_pytest.recwarn.WarningsRecorder": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsChecker.__exit__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      233
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      245,
      257
     ]
    },
    "_pytest.recwarn.re": {
     "line number": [
      254
     ]
    },
    "any": {
     "line number": [
      243
     ]
    },
    "bool": {
     "line number": [
      235
     ]
    },
    "issubclass": {
     "line number": [
      243,
      253
     ]
    },
    "str": {
     "line number": [
      254
     ]
    },
    "super": {
     "line number": [
      236
     ]
    },
    "types.TracebackType": {
     "line number": [
      234
     ]
    },
    "typing.Optional": {
     "line number": [
      232,
      233,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsChecker.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      220,
      225
     ]
    },
    "Warning": {
     "line number": [
      219,
      222
     ]
    },
    "isinstance": {
     "line number": [
      217
     ]
    },
    "issubclass": {
     "line number": [
      219,
      222
     ]
    },
    "str": {
     "line number": [
      210
     ]
    },
    "super": {
     "line number": [
      212
     ]
    },
    "tuple": {
     "line number": [
      217
     ]
    },
    "type": {
     "line number": [
      220,
      225
     ]
    },
    "typing.Optional": {
     "line number": [
      207,
      210
     ]
    },
    "typing.Tuple": {
     "line number": [
      208
     ]
    },
    "typing.Union": {
     "line number": [
      208,
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "_pytest.recwarn.warnings": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      177
     ]
    },
    "_pytest.recwarn.warnings": {
     "line number": [
      182
     ]
    },
    "super": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__exit__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      188
     ]
    },
    "RuntimeError": {
     "line number": [
      193
     ]
    },
    "bool": {
     "line number": [
      190
     ]
    },
    "super": {
     "line number": [
      195
     ]
    },
    "types.TracebackType": {
     "line number": [
      189
     ]
    },
    "typing.Optional": {
     "line number": [
      187,
      188,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__getitem__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "int": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "super": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__iter__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      154
     ]
    },
    "typing.Iterator": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__len__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "int": {
     "line number": [
      156
     ]
    },
    "len": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.clear": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.list": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "property": {
     "line number": [
      143
     ]
    },
    "typing.List": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.pop": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      166
     ]
    },
    "Warning": {
     "line number": [
      160
     ]
    },
    "enumerate": {
     "line number": [
      162
     ]
    },
    "issubclass": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.deprecated_call": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      54
     ]
    },
    "PendingDeprecationWarning": {
     "line number": [
      54
     ]
    },
    "_pytest.recwarn.warns": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.recwarn.overload": {
  "data": {
   "shadows": "_pytest.compat.overload"
  },
  "type": "import"
 },
 "_pytest.recwarn.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.recwarn.recwarn": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "_pytest.fixtures.yield_fixture": {
     "line number": [
      22
     ]
    },
    "_pytest.recwarn.WarningsRecorder": {
     "line number": [
      29
     ]
    },
    "_pytest.recwarn.warnings": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.recwarn.warns": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      120,
      125
     ]
    },
    "_pytest.recwarn.WarningsChecker": {
     "line number": [
      121,
      128
     ]
    },
    "callable": {
     "line number": [
      124
     ]
    },
    "func": {
     "line number": [
      129
     ]
    },
    "sorted": {
     "line number": [
      118
     ]
    },
    "str": {
     "line number": [
      80
     ]
    },
    "type": {
     "line number": [
      126
     ]
    },
    "typing.Any": {
     "line number": [
      79,
      81,
      82
     ]
    },
    "typing.Optional": {
     "line number": [
      80
     ]
    },
    "typing.Tuple": {
     "line number": [
      78
     ]
    },
    "typing.Union": {
     "line number": [
      78,
      80,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.recwarn.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 },
 "_pytest.reports": {
  "data": {},
  "type": "module"
 },
 "_pytest.reports.BaseReport": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "property": {
     "line number": [
      106,
      107,
      108
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.reports.BaseReport.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._from_json": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "_pytest.reports._report_kwargs_from_json": {
     "line number": [
      178
     ]
    },
    "classmethod": {
     "line number": [
      168
     ]
    },
    "cls": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._get_verbose_word": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._to_json": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "_pytest.reports._report_to_json": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.caplog": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "property": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstderr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "property": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstdout": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "property": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.count_towards_summary": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "property": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.fspath": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "property": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.get_sections": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.head_line": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "property": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.longreprtext": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "_pytest.reports.py": {
     "line number": [
      70
     ]
    },
    "property": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.toterminal": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "UnicodeEncodeError": {
     "line number": [
      54
     ]
    },
    "_pytest.reports.getslaveinfoline": {
     "line number": [
      43
     ]
    },
    "hasattr": {
     "line number": [
      42,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "_pytest._code.code.TerminalRepr": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.reports.CollectErrorRepr.__init__": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr.toterminal": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "_pytest.reports.BaseReport": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.reports.CollectReport.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "list": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport.__repr__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "len": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport.location": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "property": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.ExceptionChainRepr": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionChainRepr"
  },
  "type": "import"
 },
 "_pytest.reports.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.reports.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "_pytest.reports.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.reports.ReprEntry": {
  "data": {
   "shadows": "_pytest._code.code.ReprEntry"
  },
  "type": "import"
 },
 "_pytest.reports.ReprEntryNative": {
  "data": {
   "shadows": "_pytest._code.code.ReprEntryNative"
  },
  "type": "import"
 },
 "_pytest.reports.ReprExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ReprExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.reports.ReprFileLocation": {
  "data": {
   "shadows": "_pytest._code.code.ReprFileLocation"
  },
  "type": "import"
 },
 "_pytest.reports.ReprFuncArgs": {
  "data": {
   "shadows": "_pytest._code.code.ReprFuncArgs"
  },
  "type": "import"
 },
 "_pytest.reports.ReprLocals": {
  "data": {
   "shadows": "_pytest._code.code.ReprLocals"
  },
  "type": "import"
 },
 "_pytest.reports.ReprTraceback": {
  "data": {
   "shadows": "_pytest._code.code.ReprTraceback"
  },
  "type": "import"
 },
 "_pytest.reports.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "_pytest.reports.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.reports.TestReport": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "_pytest.reports.BaseReport": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.reports.TestReport.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "list": {
     "line number": [
      237,
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.TestReport.__repr__": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "_pytest.reports.TestReport.from_item_and_call": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "_pytest._code.code.ExceptionInfo": {
     "line number": [
      269
     ]
    },
    "_pytest.outcomes.skip.Exception": {
     "line number": [
      273
     ]
    },
    "classmethod": {
     "line number": [
      255
     ]
    },
    "cls": {
     "line number": [
      287
     ]
    },
    "isinstance": {
     "line number": [
      269
     ]
    },
    "str": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "_pytest.reports._report_kwargs_from_json": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "_pytest._code.code.ExceptionChainRepr": {
     "line number": [
      475
     ]
    },
    "_pytest._code.code.ReprExceptionInfo": {
     "line number": [
      477
     ]
    },
    "deserialize_repr_crash": {
     "line number": [
      462,
      471
     ]
    },
    "deserialize_repr_traceback": {
     "line number": [
      459,
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_kwargs_from_json.deserialize_repr_crash": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "_pytest._code.code.ReprFileLocation": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_kwargs_from_json.deserialize_repr_entry": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "_pytest._code.code.ReprEntry": {
     "line number": [
      431
     ]
    },
    "_pytest._code.code.ReprEntryNative": {
     "line number": [
      439
     ]
    },
    "_pytest._code.code.ReprFileLocation": {
     "line number": [
      427
     ]
    },
    "_pytest._code.code.ReprFuncArgs": {
     "line number": [
      425
     ]
    },
    "_pytest._code.code.ReprLocals": {
     "line number": [
      429
     ]
    },
    "_pytest.reports.TestReport": {
     "line number": [
      441
     ]
    },
    "_pytest.reports._report_unserialization_failure": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_kwargs_from_json.deserialize_repr_traceback": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "_pytest._code.code.ReprTraceback": {
     "line number": [
      448
     ]
    },
    "deserialize_repr_entry": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_to_json": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "_pytest.pathlib.Path": {
     "line number": [
      403
     ]
    },
    "_pytest.reports.py": {
     "line number": [
      403
     ]
    },
    "hasattr": {
     "line number": [
      393,
      394,
      394
     ]
    },
    "isinstance": {
     "line number": [
      403
     ]
    },
    "serialize_longrepr": {
     "line number": [
      397
     ]
    },
    "str": {
     "line number": [
      399,
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_longrepr": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "_pytest._code.code.ExceptionChainRepr": {
     "line number": [
      378
     ]
    },
    "isinstance": {
     "line number": [
      378
     ]
    },
    "serialize_repr_crash": {
     "line number": [
      374,
      384
     ]
    },
    "serialize_repr_traceback": {
     "line number": [
      375,
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_repr_crash": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_repr_entry": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      358
     ]
    },
    "type": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_repr_traceback": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "serialize_repr_entry": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports._report_unserialization_failure": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      191
     ]
    },
    "io.StringIO": {
     "line number": [
      184
     ]
    },
    "pprint.pprint": {
     "line number": [
      185,
      186,
      187,
      188,
      189,
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.getslaveinfoline": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "_pytest.reports.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.reports.pytest_report_from_serializable": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "_pytest.reports.CollectReport": {
     "line number": [
      341
     ]
    },
    "_pytest.reports.TestReport": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.pytest_report_to_serializable": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "_pytest.reports.CollectReport": {
     "line number": [
      330
     ]
    },
    "_pytest.reports.TestReport": {
     "line number": [
      330
     ]
    },
    "isinstance": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.reports.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.resultlog": {
  "data": {},
  "type": "module"
 },
 "_pytest.resultlog.RESULT_LOG": {
  "data": {
   "shadows": "_pytest.deprecated.RESULT_LOG"
  },
  "type": "import"
 },
 "_pytest.resultlog.ResultLog": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "str": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "_pytest.resultlog.py": {
     "line number": [
      96
     ]
    },
    "getattr": {
     "line number": [
      93,
      94
     ]
    },
    "str": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "str": {
     "line number": [
      70,
      76,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "print": {
     "line number": [
      52,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.resultlog._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.resultlog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.resultlog.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.resultlog.pytest_addoption": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "_pytest.deprecated.RESULT_LOG": {
     "line number": [
      35
     ]
    },
    "_pytest.resultlog.ResultLog": {
     "line number": [
      29
     ]
    },
    "_pytest.resultlog.os": {
     "line number": [
      25,
      25,
      26,
      27
     ]
    },
    "_pytest.warnings._issue_warning_captured": {
     "line number": [
      35
     ]
    },
    "hasattr": {
     "line number": [
      24
     ]
    },
    "open": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.setupplan": {
  "data": {},
  "type": "module"
 },
 "_pytest.setupplan.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest_addoption": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "_pytest.setupplan.pytest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "_pytest.setupplan.pytest": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.stepwise": {
  "data": {},
  "type": "module"
 },
 "_pytest.stepwise.StepwisePlugin": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "_pytest.stepwise.StepwisePlugin.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "len": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_report_collectionfinish": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionstart": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "_pytest.stepwise.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.stepwise.pytest_addoption": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "_pytest.stepwise.pytest_configure": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "_pytest.stepwise.StepwisePlugin": {
     "line number": [
      23
     ]
    },
    "_pytest.stepwise.pytest": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir": {
  "data": {},
  "type": "module"
 },
 "_pytest.tmpdir.MonkeyPatch": {
  "data": {
   "shadows": "_pytest.monkeypatch.MonkeyPatch"
  },
  "type": "import"
 },
 "_pytest.tmpdir.TempPathFactory": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "Path": {
     "line number": [
      30
     ]
    },
    "_pytest.tmpdir.attr": {
     "line number": [
      24,
      29,
      33,
      34,
      18
     ]
    },
    "_pytest.tmpdir.os": {
     "line number": [
      30
     ]
    },
    "str": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempPathFactory.from_config": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      36
     ]
    },
    "cls": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.getbasetemp": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Path": {
     "line number": [
      66
     ]
    },
    "_pytest.tmpdir.get_user": {
     "line number": [
      67
     ]
    },
    "_pytest.tmpdir.os": {
     "line number": [
      65
     ]
    },
    "_pytest.tmpdir.tempfile": {
     "line number": [
      66
     ]
    },
    "ensure_reset_dir": {
     "line number": [
      62
     ]
    },
    "make_numbered_dir_with_cleanup": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.mktemp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "make_numbered_dir": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "_pytest.tmpdir.attr": {
     "line number": [
      88,
      81
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "_pytest.tmpdir.py": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "_pytest.tmpdir.py": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir._mk_tmp": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "_pytest.tmpdir.re": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.tmpdir.get_user": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      110
     ]
    },
    "KeyError": {
     "line number": [
      110
     ]
    },
    "_pytest.tmpdir.getpass": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "_pytest.tmpdir.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.tmpdir.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest_configure": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "_pytest.monkeypatch.MonkeyPatch": {
     "line number": [
      121
     ]
    },
    "_pytest.tmpdir.TempPathFactory": {
     "line number": [
      122
     ]
    },
    "_pytest.tmpdir.TempdirFactory": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tmp_path": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "_pytest.tmpdir._mk_tmp": {
     "line number": [
      177
     ]
    },
    "_pytest.tmpdir.pytest": {
     "line number": [
      164
     ]
    },
    "_pytest.tmpdir.tmp_path_factory": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmp_path_factory": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "_pytest.tmpdir.pytest": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "_pytest.tmpdir.py": {
     "line number": [
      161
     ]
    },
    "_pytest.tmpdir.pytest": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "_pytest.tmpdir.pytest": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest": {
  "data": {},
  "type": "module"
 },
 "_pytest.unittest.CallInfo": {
  "data": {
   "shadows": "_pytest.runner.CallInfo"
  },
  "type": "import"
 },
 "_pytest.unittest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "_pytest.unittest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "_pytest.unittest.IReporter": {
  "data": {
   "shadows": "twisted.trial.itrial.IReporter"
  },
  "type": "import"
 },
 "_pytest.unittest.TestCaseFunction": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "_pytest.python.Function": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      143,
      151
     ]
    },
    "TypeError": {
     "line number": [
      133
     ]
    },
    "_pytest.outcomes.fail": {
     "line number": [
      142,
      146
     ]
    },
    "_pytest.outcomes.fail.Exception": {
     "line number": [
      143,
      153
     ]
    },
    "_pytest.unittest.traceback": {
     "line number": [
      136
     ]
    },
    "getattr": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._handle_skip": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      193,
      194,
      194,
      198,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "_pytest.python.Function._prunetraceback": {
     "line number": [
      215
     ]
    },
    "_pytest.unittest.traceback": {
     "line number": [
      216,
      219,
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      161
     ]
    },
    "_pytest.outcomes.exit": {
     "line number": [
      160
     ]
    },
    "_pytest.outcomes.exit.Exception": {
     "line number": [
      159
     ]
    },
    "isinstance": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "_pytest.outcomes.xfail": {
     "line number": [
      177
     ]
    },
    "_pytest.outcomes.xfail.Exception": {
     "line number": [
      178
     ]
    },
    "_pytest.unittest.sys": {
     "line number": [
      179
     ]
    },
    "str": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "_pytest.outcomes.skip": {
     "line number": [
      170
     ]
    },
    "_pytest.outcomes.skip.Exception": {
     "line number": [
      171
     ]
    },
    "_pytest.unittest.sys": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      113
     ]
    },
    "hasattr": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "_pytest.unittest.TestLoader": {
  "data": {
   "shadows": "unittest.TestLoader"
  },
  "type": "import"
 },
 "_pytest.unittest.UnitTestCase": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "_pytest.python.Class": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase._inject_setup_teardown_fixtures": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "_pytest.unittest._make_xunit_fixture": {
     "line number": [
      67,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "_pytest.compat.getimfunc": {
     "line number": [
      53
     ]
    },
    "_pytest.unittest.TestCaseFunction": {
     "line number": [
      54,
      62
     ]
    },
    "_pytest.unittest.sys": {
     "line number": [
      60
     ]
    },
    "getattr": {
     "line number": [
      38,
      41,
      50,
      51,
      58
     ]
    },
    "unittest.TestLoader": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture.fixture": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "_pytest.unittest.pytest": {
     "line number": [
      90,
      86
     ]
    },
    "getattr": {
     "line number": [
      88
     ]
    },
    "setup": {
     "line number": [
      93,
      95
     ]
    },
    "teardown": {
     "line number": [
      99,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "_pytest.unittest.TestCaseFunction": {
     "line number": [
      281
     ]
    },
    "twisted.trial.itrial.IReporter": {
     "line number": [
      281
     ]
    },
    "zope.interface.classImplements": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.classImplements": {
  "data": {
   "shadows": "zope.interface.classImplements"
  },
  "type": "import"
 },
 "_pytest.unittest.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "_pytest.unittest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.unittest.getimfunc": {
  "data": {
   "shadows": "_pytest.compat.getimfunc"
  },
  "type": "import"
 },
 "_pytest.unittest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      23
     ]
    },
    "_pytest.unittest.UnitTestCase": {
     "line number": [
      26
     ]
    },
    "_pytest.unittest.sys": {
     "line number": [
      21
     ]
    },
    "issubclass": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      230
     ]
    },
    "_pytest.config.hookimpl": {
     "line number": [
      223
     ]
    },
    "_pytest.runner.CallInfo.from_call": {
     "line number": [
      236
     ]
    },
    "_pytest.unittest.TestCaseFunction": {
     "line number": [
      225
     ]
    },
    "_pytest.unittest.pytest": {
     "line number": [
      237
     ]
    },
    "_pytest.unittest.sys": {
     "line number": [
      233
     ]
    },
    "isinstance": {
     "line number": [
      225
     ]
    },
    "str": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "Failure__init__": {
     "line number": [
      270
     ]
    },
    "_pytest.config.hookimpl": {
     "line number": [
      245
     ]
    },
    "_pytest.unittest.TestCaseFunction": {
     "line number": [
      247
     ]
    },
    "_pytest.unittest.check_testcase_implements_trial_reporter": {
     "line number": [
      250
     ]
    },
    "_pytest.unittest.sys": {
     "line number": [
      247,
      248
     ]
    },
    "isinstance": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "Failure__init__": {
     "line number": [
      262,
      266
     ]
    },
    "TypeError": {
     "line number": [
      265
     ]
    },
    "_pytest.unittest.sys": {
     "line number": [
      256
     ]
    },
    "type": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.unittest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.unittest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.unittest.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.unittest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "_pytest.warning_types": {
  "data": {
   "symbols_in_volume": {
    "_pytest.warning_types.PytestExperimentalApiWarning": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "module"
 },
 "_pytest.warning_types.PYTESTER_COPY_EXAMPLE": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "_pytest.warning_types.PytestAssertRewriteWarning": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestCacheWarning": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestCollectionWarning": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestConfigWarning": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestDeprecationWarning": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      54
     ]
    },
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      64
     ]
    },
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning.simple": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      74
     ]
    },
    "cls": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warning_types.PytestUnhandledCoroutineWarning": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestUnknownMarkWarning": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "_pytest.warning_types.PytestWarning": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestWarning": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "_pytest.warning_types.attr": {
     "line number": [
      113,
      114,
      106
     ]
    }
   }
  },
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning.format": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "_pytest.warning_types.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.warnings": {
  "data": {},
  "type": "module"
 },
 "_pytest.warnings._issue_warning_captured": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "_pytest.warnings.warnings": {
     "line number": [
      145,
      146,
      147
     ]
    },
    "dict": {
     "line number": [
      149
     ]
    },
    "type": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warnings._setoption": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      25
     ]
    },
    "ValueError": {
     "line number": [
      24,
      25
     ]
    },
    "int": {
     "line number": [
      22
     ]
    },
    "len": {
     "line number": [
      13,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warnings.catch_warnings_for_item": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      72
     ]
    },
    "PendingDeprecationWarning": {
     "line number": [
      73
     ]
    },
    "_pytest.warnings._setoption": {
     "line number": [
      78,
      86
     ]
    },
    "_pytest.warnings.sys": {
     "line number": [
      70
     ]
    },
    "_pytest.warnings.warnings": {
     "line number": [
      68,
      72,
      73,
      78,
      81,
      86
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      57
     ]
    },
    "dict": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warnings.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest_addoption": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_collection": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "_pytest.warnings.catch_warnings_for_item": {
     "line number": [
      120
     ]
    },
    "_pytest.warnings.pytest": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_configure": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_runtest_protocol": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "_pytest.warnings.catch_warnings_for_item": {
     "line number": [
      111
     ]
    },
    "_pytest.warnings.pytest": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_terminal_summary": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "_pytest.warnings.catch_warnings_for_item": {
     "line number": [
      129
     ]
    },
    "_pytest.warnings.pytest": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warnings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.warnings.warning_record_to_str": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "_pytest.warnings.warnings": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "_pytest.warnings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pytest": {
  "data": {
   "symbols_in_volume": {
    "SystemExit": {
     "line number": [
      101
     ]
    },
    "__name__": {
     "line number": [
      96
     ]
    },
    "_pytest.compat._setup_collect_fakemodule": {
     "line number": [
      106
     ]
    },
    "_pytest.debugging.pytestPDB.set_trace": {
     "line number": [
      49
     ]
    },
    "pytest.pytest": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "module"
 },
 "pytest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "pytest.Collector": {
  "data": {
   "shadows": "_pytest.nodes.Collector"
  },
  "type": "import"
 },
 "pytest.ExitCode": {
  "data": {
   "shadows": "_pytest.main.ExitCode"
  },
  "type": "import"
 },
 "pytest.File": {
  "data": {
   "shadows": "_pytest.nodes.File"
  },
  "type": "import"
 },
 "pytest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "pytest.Instance": {
  "data": {
   "shadows": "_pytest.python.Instance"
  },
  "type": "import"
 },
 "pytest.Item": {
  "data": {
   "shadows": "_pytest.nodes.Item"
  },
  "type": "import"
 },
 "pytest.Module": {
  "data": {
   "shadows": "_pytest.python.Module"
  },
  "type": "import"
 },
 "pytest.Package": {
  "data": {
   "shadows": "_pytest.python.Package"
  },
  "type": "import"
 },
 "pytest.PytestAssertRewriteWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestAssertRewriteWarning"
  },
  "type": "import"
 },
 "pytest.PytestCacheWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestCacheWarning"
  },
  "type": "import"
 },
 "pytest.PytestCollectionWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestCollectionWarning"
  },
  "type": "import"
 },
 "pytest.PytestConfigWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestConfigWarning"
  },
  "type": "import"
 },
 "pytest.PytestDeprecationWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestDeprecationWarning"
  },
  "type": "import"
 },
 "pytest.PytestExperimentalApiWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestExperimentalApiWarning"
  },
  "type": "import"
 },
 "pytest.PytestUnhandledCoroutineWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestUnhandledCoroutineWarning"
  },
  "type": "import"
 },
 "pytest.PytestUnknownMarkWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestUnknownMarkWarning"
  },
  "type": "import"
 },
 "pytest.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "pytest.Session": {
  "data": {
   "shadows": "_pytest.main.Session"
  },
  "type": "import"
 },
 "pytest.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "pytest.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pytest.__pytestPDB": {
  "data": {
   "shadows": "_pytest.debugging.pytestPDB"
  },
  "type": "import"
 },
 "pytest.__version__": {
  "data": {
   "shadows": "_pytest.__version__"
  },
  "type": "import"
 },
 "pytest._fillfuncargs": {
  "data": {
   "shadows": "_pytest.fixtures.fillfixtures"
  },
  "type": "import"
 },
 "pytest._setup_collect_fakemodule": {
  "data": {
   "shadows": "_pytest.compat._setup_collect_fakemodule"
  },
  "type": "import"
 },
 "pytest.approx": {
  "data": {
   "shadows": "_pytest.python_api.approx"
  },
  "type": "import"
 },
 "pytest.cmdline": {
  "data": {
   "shadows": "_pytest.config.cmdline"
  },
  "type": "import"
 },
 "pytest.deprecated_call": {
  "data": {
   "shadows": "_pytest.recwarn.deprecated_call"
  },
  "type": "import"
 },
 "pytest.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "pytest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "pytest.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "pytest.freeze_includes": {
  "data": {
   "shadows": "_pytest.freeze_support.freeze_includes"
  },
  "type": "import"
 },
 "pytest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "pytest.hookspec": {
  "data": {
   "shadows": "_pytest.config.hookspec"
  },
  "type": "import"
 },
 "pytest.importorskip": {
  "data": {
   "shadows": "_pytest.outcomes.importorskip"
  },
  "type": "import"
 },
 "pytest.main": {
  "data": {
   "shadows": "_pytest.config.main"
  },
  "type": "import"
 },
 "pytest.mark": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "pytest.param": {
  "data": {
   "shadows": "_pytest.mark.param"
  },
  "type": "import"
 },
 "pytest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest.raises": {
  "data": {
   "shadows": "_pytest.python_api.raises"
  },
  "type": "import"
 },
 "pytest.register_assert_rewrite": {
  "data": {
   "shadows": "_pytest.assertion.register_assert_rewrite"
  },
  "type": "import"
 },
 "pytest.set_trace": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pytest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "pytest.warns": {
  "data": {
   "shadows": "_pytest.recwarn.warns"
  },
  "type": "import"
 },
 "pytest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "pytest.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 }
}