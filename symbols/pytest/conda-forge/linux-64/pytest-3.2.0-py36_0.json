{
 "*": {
  "data": {
   "imports": [
    "_pytest.vendored_packages.pluggy",
    "pluggy"
   ]
  },
  "type": "star-import"
 },
 "_pytest": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "_pytest.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "_pytest.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "_pytest._argcomplete": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest._argcomplete.FastFilesCompleter",
    "_pytest._argcomplete.os",
    "_pytest._argcomplete.sys"
   ]
  },
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_pytest._argcomplete.os",
    "glob.glob",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "_pytest._argcomplete.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._argcomplete.argcomplete.completers": {
  "data": {
   "shadows": "argcomplete.completers"
  },
  "type": "import"
 },
 "_pytest._argcomplete.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._argcomplete.filescompleter": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "_pytest._argcomplete.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "_pytest._argcomplete.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest._argcomplete.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._argcomplete.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "_pytest._code": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback._format_final_exc_line": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_some_str"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback._some_str": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception",
    "str",
    "type",
    "unicode"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.format_exception_only": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "SyntaxError",
    "_format_final_exc_line",
    "_pytest._code._py2traceback.types",
    "bytes",
    "isinstance",
    "issubclass",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest._code.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code.code": {
  "data": {
   "symbols_in_volume": [
    "_pytest._code.code.py",
    "_pytest.compat.PY35",
    "_pytest.compat._PY3",
    "compile",
    "repr"
   ]
  },
  "type": "module"
 },
 "_pytest._code.code.CO_VARARGS": {
  "data": {
   "shadows": "inspect.CO_VARARGS"
  },
  "type": "import"
 },
 "_pytest._code.code.CO_VARKEYWORDS": {
  "data": {
   "shadows": "inspect.CO_VARKEYWORDS"
  },
  "type": "import"
 },
 "_pytest._code.code.Code": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.Code.__eq__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "_pytest._code.code.Code.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "getrawcode",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.__ne__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "_pytest._code.code.Code.fullsource": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "_pytest._code.source.findsource",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.getargs": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "inspect.CO_VARARGS",
    "inspect.CO_VARKEYWORDS"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.path": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "OSError",
    "_pytest._code.code.py",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.source": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ExceptionChainRepr.__init__": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionChainRepr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr.toterminal": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionChainRepr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "_pytest.compat._PY2",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ExceptionInfo.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "AssertionError",
    "_pytest._code.code.py",
    "_pytest._code.code.sys",
    "getattr",
    "isinstance",
    "weakref.ref"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__repr__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__str__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ReprFileLocation",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__unicode__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "ReprFileLocation",
    "unicode"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo._getreprcrash": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ReprFileLocation"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.errisinstance": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.exconly": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "len",
    "traceback.format_exception_only"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.getrepr": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "FormattedExcinfo",
    "ReprExceptionInfo",
    "ReprTracebackNative",
    "_pytest._code.code.py"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.match": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "_pytest._code.code.re",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ExceptionRepr.__init__": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.addsection": {
  "data": {
   "lineno": 715
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.toterminal": {
  "data": {
   "lineno": 718
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.FormattedExcinfo.__init__": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._getentrysource": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "_pytest._code.source",
    "_pytest._code.source.deindent"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._getindent": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "_pytest._code.source",
    "_pytest._code.source.getstatement",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._makepath": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "OSError",
    "_pytest._code.code.py",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._saferepr": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "_pytest._code.code.py"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._truncate_recursive_traceback": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "Exception",
    "_pytest.compat.safe_str",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_exconly": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_source": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "_pytest._code.source",
    "_pytest._code.source.lines",
    "_pytest._code.source.lines.strip",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_args": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ReprFuncArgs"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_excinfo": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "ExceptionChainRepr",
    "ReprExceptionInfo",
    "ReprTracebackNative",
    "_pytest._code.code.ExceptionInfo",
    "_pytest._code.code.py",
    "_pytest.compat._PY2",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_locals": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ReprLocals",
    "locals"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ReprTraceback",
    "enumerate",
    "is_recursion_error"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback_entry": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ReprEntry",
    "ReprFileLocation",
    "_pytest._code.source",
    "max"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.Frame.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_pytest._code.code.Code"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.eval": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "eval",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.exec_": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "_pytest._code.code.py",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.getargs": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.is_true": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.repr": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_pytest._code.code.py",
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.statement": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.PY35": {
  "data": {
   "shadows": "_pytest.compat.PY35"
  },
  "type": "import"
 },
 "_pytest._code.code.ReprEntry": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprEntry.__init__": {
  "data": {
   "lineno": 797
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.__str__": {
  "data": {
   "lineno": 826
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.toterminal": {
  "data": {
   "lineno": 804
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprEntryNative.__init__": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative.toterminal": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprExceptionInfo.__init__": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "_pytest._code.code.ReprExceptionInfo",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo.toterminal": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "_pytest._code.code.ReprExceptionInfo",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprFileLocation.__init__": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation.toterminal": {
  "data": {
   "lineno": 838
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprFuncArgs.__init__": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs.toterminal": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprLocals": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprLocals.__init__": {
  "data": {
   "lineno": 850
  },
  "type": "function"
 },
 "_pytest._code.code.ReprLocals.toterminal": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprTraceback.__init__": {
  "data": {
   "lineno": 756
  },
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback.toterminal": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprTracebackNative": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "_pytest._code.code.ReprTraceback"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprTracebackNative.__init__": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "ReprEntryNative"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.TerminalRepr.__repr__": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__str__": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "_pytest.compat._PY2"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__unicode__": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "_pytest._code.code.py"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "_pytest._code.code.TracebackEntry",
    "list"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.Traceback.__getitem__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "_pytest._code.code.Traceback",
    "isinstance",
    "slice",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "f",
    "hasattr",
    "list.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__.f": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.cut": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "_pytest._code.code.Traceback",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.filter": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "_pytest._code.code.Traceback",
    "filter"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.getcrashentry": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.recursionindex": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "f.eval",
    "f.f_locals",
    "f.is_true",
    "id"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "_pytest._code.source",
    "locals",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.TracebackEntry.__init__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__repr__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__str__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "_pytest._code.code.py",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.frame": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getfirstlinesource": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getlocals": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getsource": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest._code.source",
    "_pytest._code.source.getstatementrange_ast"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.ishidden": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "KeyError",
    "_pytest._code.code.py",
    "tbh"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.name": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.path": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.relline": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.set_repr_style": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.statement": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_pytest._code.source",
    "_pytest._code.source.getstatement",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code._PY2": {
  "data": {
   "shadows": "_pytest.compat._PY2"
  },
  "type": "import"
 },
 "_pytest._code.code._PY3": {
  "data": {
   "shadows": "_pytest.compat._PY3"
  },
  "type": "import"
 },
 "_pytest._code.code._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest._code.code.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code.code.builtin_repr": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "_pytest._code.code.co_equal": {
  "data": {
   "lineno": 354
  },
  "type": "constant"
 },
 "_pytest._code.code.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code.code.format_exception_only": {
  "data": {
   "shadows": "traceback.format_exception_only"
  },
  "type": "import"
 },
 "_pytest._code.code.getrawcode": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest._code.code.py",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.getstatementrange_ast": {
  "data": {
   "shadows": "_pytest._code.source.getstatementrange_ast"
  },
  "type": "import"
 },
 "_pytest._code.code.is_recursion_error": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "RuntimeError",
    "UnicodeError",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code.code.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest._code.code.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest._code.code.ref": {
  "data": {
   "shadows": "weakref.ref"
  },
  "type": "import"
 },
 "_pytest._code.code.reprlib": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "_pytest._code.code.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest._code.code.source": {
  "data": {
   "shadows": "_pytest._code.source"
  },
  "type": "import"
 },
 "_pytest._code.code.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._code.compile": {
  "data": {
   "shadows": "compile_"
  },
  "type": "import"
 },
 "_pytest._code.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code.source": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_ast.PyCF_ONLY_AST",
    "compile"
   ]
  },
  "type": "module"
 },
 "_pytest._code.source.Source": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.source.Source.__eq__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__getitem__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "IndexError",
    "_pytest._code.source.Source",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "_pytest._code.source.py",
    "deindent",
    "getsource",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__len__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__str__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "_pytest._code.source.Source.compile": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "SyntaxError",
    "__future__.generators.compiler_flag",
    "_ast.PyCF_ONLY_AST",
    "_pytest._code.source.cpy_compile",
    "_pytest._code.source.py",
    "_pytest._code.source.sys"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.deindent": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "deindent"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.getstatement": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "_pytest._code.source.Source.getstatementrange": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IndexError",
    "getstatementrange_ast",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.indent": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_pytest._code.source.Source"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.isparseable": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "KeyboardInterrupt",
    "_pytest._code.source.parser",
    "deindent",
    "str",
    "syntax_checker"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.isparseable.syntax_checker": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "compile"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.putaround": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "_pytest._code.source.Source"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.strip": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source._AST_FLAG": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "_pytest._code.source._ast": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "_pytest._code.source._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest._code.source.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code.source.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "_pytest._code.source.bisect_right": {
  "data": {
   "shadows": "bisect.bisect_right"
  },
  "type": "import"
 },
 "_pytest._code.source.compile_": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "__future__.generators.compiler_flag",
    "_pytest._code.source.Source",
    "_pytest._code.source._ast",
    "_pytest._code.source.cpy_compile",
    "_pytest._code.source.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.compile_command": {
  "data": {
   "shadows": "codeop.compile_command"
  },
  "type": "import"
 },
 "_pytest._code.source.cpy_compile": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "_pytest._code.source.deindent": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "IndentationError",
    "_pytest._code.source.tokenize",
    "len",
    "list",
    "next",
    "range",
    "readline_generator"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.deindent.readline_generator": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "_pytest._code.source.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code.source.findsource": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "_pytest._code.source.py"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.generators": {
  "data": {
   "shadows": "__future__.generators"
  },
  "type": "import"
 },
 "_pytest._code.source.get_statement_startend2": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "_pytest._code.source._ast",
    "_pytest._code.source.ast",
    "bisect.bisect_right",
    "getattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.getfslineno": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "_pytest._code.source.py",
    "findsource",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.getsource": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "IndentationError",
    "_pytest._code.source.Source",
    "_pytest._code.source.inspect",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.getstatementrange_ast": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "Exception",
    "IndentationError",
    "ValueError",
    "_pytest._code.source.get_statement_startend2",
    "_pytest._code.source.inspect",
    "_pytest._code.source.sys",
    "_pytest._code.source.tokenize",
    "compile",
    "getstatementrange_old",
    "len",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.getstatementrange_old": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "IndexError",
    "OverflowError",
    "SyntaxError",
    "ValueError",
    "codeop.compile_command",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest._code.source.parser": {
  "data": {
   "shadows": "parser"
  },
  "type": "import"
 },
 "_pytest._code.source.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code.source.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest._code.source.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._code.source.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "_pytest._pluggy": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "_pytest._pluggy.__version__": {
  "data": {
   "shadows": "pluggy.__version__"
  },
  "type": "import"
 },
 "_pytest._pluggy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._pluggy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._pluggy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._version": {
  "data": {},
  "type": "module"
 },
 "_pytest._version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "_pytest.assertion": {
  "data": {
   "symbols_in_volume": [
    "_pytest.assertion.util.assertrepr_compare"
   ]
  },
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "_pytest.assertion.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.install_importhook": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "SystemError",
    "_pytest.assertion.AssertionState",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.pytest_addoption": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_assertrepr_compare": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "_pytest.assertion.pytest_collection": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.callbinrepr": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_pytest.assertion.py",
    "_pytest.assertion.truncate.truncate_if_required"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_teardown": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "DummyRewriteHook",
    "TypeError",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys",
    "isinstance",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "data": {
   "shadows": "_pytest.assertion.rewrite"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.sys"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewriter",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "data": {
   "lineno": 653
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "list",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "data": {
   "lineno": 681
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.py",
    "aliases",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._NameConstant",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "_pytest.assertion.rewrite.itertools",
    "_pytest.assertion.rewrite.set_location",
    "_pytest.assertion.rewrite.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "enumerate",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_35": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_legacy": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._ast",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map",
    "isinstance",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "data": {
   "lineno": 858
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.unary_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._register_with_pkg_resources": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.assertion.rewrite.pkg_resources",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_module": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "ValueError",
    "_make_rewritten_pyc",
    "_pytest.assertion.rewrite.PYC_TAIL",
    "_pytest.assertion.rewrite.errno",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.os",
    "_pytest.assertion.rewrite.py",
    "_pytest.assertion.rewrite.sys",
    "_read_pyc",
    "_rewrite_test",
    "hasattr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.is_package": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.assertion.rewrite.imp"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.load_module": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.py",
    "_pytest.assertion.rewrite.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.BOM_UTF8": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.N": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_EXT": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_TAIL": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYTEST_TAG": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.REWRITE_NEWLINES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.RN": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite._NameConstant": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._ast": {
  "data": {
   "shadows": "_ast"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util._reprcompare",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "t"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "t"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_explanation": {
  "data": {
   "shadows": "_pytest.assertion.util.format_explanation"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._make_rewritten_pyc": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._write_pyc",
    "_pytest.assertion.rewrite.os",
    "_pytest.assertion.rewrite.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "EnvironmentError",
    "Exception",
    "IOError",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "_pytest.assertion.rewrite.types",
    "int",
    "isinstance",
    "len",
    "open",
    "trace"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "EnvironmentError",
    "SyntaxError",
    "UnicodeDecodeError",
    "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING",
    "_pytest.assertion.rewrite.BOM_UTF8",
    "_pytest.assertion.rewrite.N",
    "_pytest.assertion.rewrite.REWRITE_NEWLINES",
    "_pytest.assertion.rewrite.RN",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.cookie_re",
    "compile",
    "hasattr",
    "rewrite_asserts"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "repr",
    "repr.replace",
    "t"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "IOError",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "_pytest.assertion.rewrite.sys",
    "int",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ast_Call": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.binop_map": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.cookie_re": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.impl": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.marshal": {
  "data": {
   "shadows": "marshal"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "AssertionRewriter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "_fix"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "_fix",
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.unary_map": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ver": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.assertion.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate": {
  "data": {
   "shadows": "_pytest.assertion.truncate"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_CHARS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_LINES": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.USAGE_MSG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate._running_on_ci": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_pytest.assertion.truncate.os",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._should_truncate_item": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_running_on_ci"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_by_char_count": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_explanation": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "_pytest.assertion.truncate.DEFAULT_MAX_CHARS",
    "_pytest.assertion.truncate.DEFAULT_MAX_LINES",
    "_pytest.assertion.truncate.USAGE_MSG",
    "_pytest.assertion.truncate.py",
    "_truncate_by_char_count",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.truncate_if_required": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_should_truncate_item",
    "_truncate_explanation"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.util.Sequence": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "_pytest.assertion.util.pprint",
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "dict",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util.difflib",
    "_pytest.assertion.util.pprint",
    "_pytest.assertion.util.u",
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "difflib.ndiff",
    "isinstance",
    "len",
    "min",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_pytest.assertion.util.u",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "_pytest.assertion.util._diff_text",
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.assertion.util._reprcompare": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.assertion.util._split_explanation": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_pytest.assertion.util.u"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "Exception",
    "_compare_eq_dict",
    "_compare_eq_iterable",
    "_compare_eq_sequence",
    "_compare_eq_set",
    "_diff_text",
    "_notin_text",
    "_pytest.assertion.util.ecu",
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "int",
    "isdict",
    "isiterable",
    "issequence",
    "isset",
    "istext",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isdict": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isiterable": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "TypeError",
    "istext",
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.issequence": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_pytest.assertion.util.basestring",
    "collections.Sequence",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isset": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "frozenset",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.istext": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "_pytest.assertion.util.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.basestring": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "_pytest.assertion.util.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "_pytest.assertion.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.util.ecu": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.assertion.util.u"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.format_explanation": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_format_lines",
    "_pytest.assertion.util.ecu",
    "_pytest.assertion.util.u",
    "_split_explanation"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.ndiff": {
  "data": {
   "shadows": "difflib.ndiff"
  },
  "type": "import"
 },
 "_pytest.assertion.util.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest.assertion.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.util.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.util.u": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "_pytest.cacheprovider": {
  "data": {},
  "type": "module"
 },
 "_pytest.cacheprovider.Cache": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.Cache.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_pytest.cacheprovider.Cache"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.cache_dir_from_config": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_pytest.cacheprovider.os",
    "_pytest.cacheprovider.py",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.cacheprovider.json"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "os.path.altsep",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_pytest.cacheprovider.json",
    "_pytest.cacheprovider.py"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_collectionfinish": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider._altsep": {
  "data": {
   "shadows": "os.path.altsep"
  },
  "type": "import"
 },
 "_pytest.cacheprovider._sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.cache": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "_pytest.cacheprovider.py",
    "object",
    "pprint.pprint",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "_pytest.cacheprovider.Cache",
    "_pytest.cacheprovider.LFPlugin",
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "_pytest.cacheprovider.py"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.wrap_session": {
  "data": {
   "shadows": "_pytest.main.wrap_session"
  },
  "type": "import"
 },
 "_pytest.capture": {
  "data": {
   "symbols_in_volume": [
    "_pytest.capture.py"
   ]
  },
  "type": "module"
 },
 "_pytest.capture.CaptureFixture": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "_pytest.capture.CaptureFixture.__init__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._start": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "MultiCapture"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.close": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.disabled": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "_pytest.capture.contextlib"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.readouterr": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureIO": {
  "data": {
   "shadows": "_pytest.compat.CaptureIO"
  },
  "type": "import"
 },
 "_pytest.capture.CaptureManager": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "_pytest.capture.CaptureManager.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager._getcapture": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "MultiCapture",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.activate_funcargs": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.deactivate_funcargs": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.init_capturings": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_internalerror": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_make_collect_report": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_pytest.capture.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_call": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_setup": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_teardown": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.reset_capturings": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resumecapture": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspendcapture": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspendcapture_item": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput": {
  "data": {
   "lineno": 448
  },
  "type": "class"
 },
 "_pytest.capture.DontReadFromInput.buffer": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.capture.sys",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.close": {
  "data": {
   "lineno": 471
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.fileno": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "io.UnsupportedOperation"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.isatty": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.read": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.EncodedFile.__getattr__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "getattr",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.__init__": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.name": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "property",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.write": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "_pytest.capture.unicode",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.writelines": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture": {
  "data": {
   "lineno": 334
  },
  "type": "class"
 },
 "_pytest.capture.FDCapture.__init__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "OSError",
    "SysCapture",
    "_pytest.capture.NoCapture",
    "_pytest.capture.os",
    "_pytest.capture.patchsysdict",
    "_pytest.capture.safe_text_dupfile",
    "open",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture.__repr__": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture.done": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture.resume": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture.snap": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "_pytest.capture.py",
    "bytes",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture.start": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "AttributeError",
    "OSError",
    "ValueError",
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture.suspend": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture.writeorg": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "_pytest.capture.os",
    "_pytest.capture.py"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.MultiCapture.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Capture"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.pop_outerr_to_orig": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.readouterr": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.resume_capturing": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.start_capturing": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.stop_capturing": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.suspend_capturing": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "_pytest.capture.NoCapture": {
  "data": {
   "lineno": 330
  },
  "type": "class"
 },
 "_pytest.capture.SysCapture": {
  "data": {
   "lineno": 410
  },
  "type": "class"
 },
 "_pytest.capture.SysCapture.__init__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "DontReadFromInput",
    "_pytest.capture.patchsysdict",
    "_pytest.capture.sys",
    "_pytest.compat.CaptureIO",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.done": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.resume": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.snap": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.start": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.suspend": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.writeorg": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "_pytest.capture.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "_pytest.capture.UnsupportedOperation": {
  "data": {
   "shadows": "io.UnsupportedOperation"
  },
  "type": "import"
 },
 "_pytest.capture._colorama_workaround": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.capture.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "_pytest.capture.io",
    "_pytest.capture.sys",
    "_reopen_stdio",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround._reopen_stdio": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "_pytest.capture.io",
    "_pytest.capture.os",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._readline_workaround": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.capture.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.capture.capfd": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "CaptureFixture",
    "_pytest.capture.error_capsysfderror",
    "_pytest.capture.os",
    "_pytest.capture.pytest",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.capsys": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "CaptureFixture",
    "_pytest.capture.error_capsysfderror",
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "_pytest.capture.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "_pytest.capture.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.capture.error_capsysfderror": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "_pytest.capture.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.capture.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.capture.patchsysdict": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.capture.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.capture.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.capture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.capture.pytest_addoption": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_pytest.capture.os",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "CaptureManager",
    "_colorama_workaround",
    "_py36_windowsconsoleio_workaround",
    "_pytest.capture.pytest",
    "_pytest.capture.sys",
    "_readline_workaround"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests.silence_logging_at_shutdown": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "_pytest.capture.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.readline": {
  "data": {
   "shadows": "readline"
  },
  "type": "import"
 },
 "_pytest.capture.safe_text_dupfile": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "EncodedFile",
    "Exception",
    "_pytest.capture.os",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.capture.unicode": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest.compat.PY36",
    "_pytest.compat._PY2",
    "_pytest.compat._PY3",
    "_pytest.compat.inspect",
    "_pytest.compat.re",
    "_pytest.compat.sys",
    "bytes",
    "getattr",
    "hasattr",
    "map",
    "object",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "module"
 },
 "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "_pytest.compat.CaptureIO": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "_pytest.compat.io"
   ]
  },
  "type": "class"
 },
 "_pytest.compat.CaptureIO.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "_pytest.compat.CaptureIO",
    "_pytest.compat.io",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.CaptureIO.encoding": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.CaptureIO.getvalue": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "_pytest.compat.FuncargnamesCompatAttr": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.compat.FuncargnamesCompatAttr.funcargnames": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.MODULE_NOT_FOUND_ERROR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "_pytest.compat.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "_pytest.compat.NOTSET": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.compat.NoneType": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.compat.PY35": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.compat.PY36": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.compat.REGEX_TYPE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "_pytest.compat.STRING_TYPES": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "_pytest.compat.TextIO": {
  "data": {
   "shadows": "py.io.TextIO"
  },
  "type": "import"
 },
 "_pytest.compat.UNICODE_TYPES": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "_pytest.compat._PY2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.compat._PY3": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_pytest.compat._ascii_escaped": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_pytest.compat.inspect"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._is_unittest_unexpected_success_a_failure": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "_pytest.compat.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.compat._setup_collect_fakemodule": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES",
    "_pytest.compat.pytest",
    "getattr",
    "setattr",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.compat.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "_pytest.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.compat.enum": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.compat.exc_clear": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "_pytest.compat.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.compat.get_real_func": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.compat.functools",
    "_pytest.compat.py",
    "getattr",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfslineno": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "_pytest.compat._pytest",
    "_pytest.compat.get_real_func",
    "hasattr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_pytest.compat._pytest",
    "_pytest.compat.functools",
    "_pytest.compat.inspect",
    "_pytest.compat.num_mock_patch_args",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "_pytest.compat.py"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.imap": {
  "data": {
   "shadows": "itertools.imap"
  },
  "type": "import"
 },
 "_pytest.compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.compat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.compat.is_generator": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "iscoroutinefunction"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isclass": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_pytest.compat.types",
    "isinstance",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.iscoroutinefunction": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isfunction": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.compat.izip": {
  "data": {
   "shadows": "itertools.izip"
  },
  "type": "import"
 },
 "_pytest.compat.num_mock_patch_args": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_pytest.compat.sys",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.compat.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.compat.safe_getattr": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.safe_str": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "UnicodeError",
    "isinstance",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.compat.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.config": {
  "data": {
   "symbols_in_volume": [
    "_pytest._pluggy.HookimplMarker",
    "_pytest._pluggy.HookspecMarker",
    "_pytest.config.Notset",
    "_pytest.config.builtin_plugins",
    "_pytest.config.default_plugins",
    "set"
   ]
  },
  "type": "module"
 },
 "_pytest.config.Argument": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "_pytest.config.Argument.__init__": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IndexError",
    "KeyError",
    "_pytest.config.Argument",
    "_pytest.config.ArgumentError",
    "_pytest.config.py",
    "_pytest.config.warnings",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Argument.__repr__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "hasattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Argument._set_opt_strings": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "_pytest.config.ArgumentError",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Argument.attrs": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Argument.names": {
  "data": {
   "lineno": 686
  },
  "type": "function"
 },
 "_pytest.config.ArgumentError": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.ArgumentError.__init__": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.ArgumentError.__str__": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "_pytest.config.CmdOptions": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.CmdOptions.__init__": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "_pytest.config.CmdOptions.__repr__": {
  "data": {
   "lineno": 868
  },
  "type": "function"
 },
 "_pytest.config.CmdOptions.copy": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "_pytest.config.CmdOptions"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.Config.__init__": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "_pytest.config.CmdOptions",
    "_pytest.config.FILE_OR_DIR",
    "_pytest.config.Parser",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.__init__.do_setns": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "_pytest.config.pytest",
    "setns"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._checkversion": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "_pytest.config.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._consider_importhook": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "SystemError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._do_configure": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._ensure_unconfigure": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "fin"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._get_override_ini_value": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.config.UsageError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._getconftest_pathlist": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.config.py",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._getini": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_pytest.config.py",
    "_pytest.config.shlex",
    "_strtobool",
    "bool",
    "map",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._initini": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "_pytest.config.py",
    "determine_setup"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._mark_plugins_for_rewrite": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "_pytest.config.os",
    "_pytest.config.pkg_resources"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._preparse": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "_pytest.config.ConftestImportFailure",
    "_pytest.config.os",
    "_pytest.config.py",
    "_pytest.config.shlex",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._processopt": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._warn_about_missing_assertion": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "AssertionError",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.add_cleanup": {
  "data": {
   "lineno": 915
  },
  "type": "function"
 },
 "_pytest.config.Config.addinivalue_line": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.cwd_relative_nodeid": {
  "data": {
   "lineno": 964
  },
  "type": "function"
 },
 "_pytest.config.Config.fromdictargs": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "_pytest.config.get_config",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.get_terminal_writer": {
  "data": {
   "lineno": 940
  },
  "type": "function"
 },
 "_pytest.config.Config.getini": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.getoption": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_pytest.config.notset",
    "_pytest.config.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.getvalue": {
  "data": {
   "lineno": 1235
  },
  "type": "function"
 },
 "_pytest.config.Config.getvalueorskip": {
  "data": {
   "lineno": 1239
  },
  "type": "function"
 },
 "_pytest.config.Config.notify_exception": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "_pytest.config.py",
    "_pytest.config.sys",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.parse": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "_pytest.config.PrintHelp",
    "_pytest.config.os",
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.pytest_cmdline_parse": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "_pytest.config.Config.pytest_load_initial_conftests": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "_pytest.config.hookimpl"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.warn": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.ConftestImportFailure.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure.__str__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_pytest.config.traceback",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.DropShorterLongHelpFormatter": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "_pytest.config.argparse"
   ]
  },
  "type": "class"
 },
 "_pytest.config.DropShorterLongHelpFormatter._format_action_invocation": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "_pytest.config.ArgumentError",
    "_pytest.config.argparse",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.FILE_OR_DIR": {
  "data": {
   "lineno": 881
  },
  "type": "constant"
 },
 "_pytest.config.HookimplMarker": {
  "data": {
   "shadows": "_pytest._pluggy.HookimplMarker"
  },
  "type": "import"
 },
 "_pytest.config.HookspecMarker": {
  "data": {
   "shadows": "_pytest._pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.config.MyOptionParser": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "_pytest.config.argparse"
   ]
  },
  "type": "class"
 },
 "_pytest.config.MyOptionParser.__init__": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "_pytest.config.argparse"
   ]
  },
  "type": "function"
 },
 "_pytest.config.MyOptionParser.parse_args": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "getattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Notset": {
  "data": {
   "lineno": 875
  },
  "type": "class"
 },
 "_pytest.config.Notset.__repr__": {
  "data": {
   "lineno": 876
  },
  "type": "function"
 },
 "_pytest.config.OptionGroup": {
  "data": {
   "lineno": 744
  },
  "type": "class"
 },
 "_pytest.config.OptionGroup.__init__": {
  "data": {
   "lineno": 745
  },
  "type": "function"
 },
 "_pytest.config.OptionGroup._addoption": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "_pytest.config.Argument"
   ]
  },
  "type": "function"
 },
 "_pytest.config.OptionGroup._addoption_instance": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.OptionGroup.addoption": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.config.Argument",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser": {
  "data": {
   "lineno": 479
  },
  "type": "class"
 },
 "_pytest.config.Parser.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "OptionGroup"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser._getparser": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "MyOptionParser",
    "_pytest._argcomplete.filescompleter"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser.addini": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "help",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser.addoption": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "_pytest.config.Parser.getgroup": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "OptionGroup",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser.parse": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "_pytest._argcomplete.try_argcomplete",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser.parse_known_and_unknown_args": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser.parse_known_args": {
  "data": {
   "lineno": 567
  },
  "type": "function"
 },
 "_pytest.config.Parser.parse_setoption": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Parser.processoption": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "_pytest.config.PluginManager": {
  "data": {
   "shadows": "_pytest._pluggy.PluginManager"
  },
  "type": "import"
 },
 "_pytest.config.PrintHelp": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.PytestPluginManager": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "_pytest._pluggy.PluginManager"
   ]
  },
  "type": "class"
 },
 "_pytest.config.PytestPluginManager.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Exception",
    "_pytest.config.PytestPluginManager",
    "_pytest.config.os",
    "_pytest.config.py",
    "_pytest.config.sys",
    "getattr",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._getconftestmodules": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._import_plugin_specs": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "_get_plugin_specs_as_list"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._importconftest": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "_ensure_removed_sysmodule",
    "_pytest.config.ConftestImportFailure",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._rget_with_confmod": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "getattr",
    "reversed"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._set_initial_conftests": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "_pytest.config.py",
    "exists",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._try_load_conftest": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._verify_hook": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._warn": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.addhooks": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "_pytest.config.sys",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_conftest": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_env": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_module": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_pluginarg": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_preparse": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.getplugin": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.hasplugin": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.import_plugin": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "__import__",
    "_pytest.compat.safe_str",
    "_pytest.config.builtin_plugins",
    "_pytest.config.py",
    "_pytest.config.pytest",
    "_pytest.config.sys",
    "getattr",
    "hasattr",
    "isinstance",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookimpl_opts": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookspec_opts": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.pytest_configure": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.register": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "_pytest.config.types",
    "dict",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.SETUP_CFG_PYTEST": {
  "data": {
   "shadows": "_pytest.deprecated.SETUP_CFG_PYTEST"
  },
  "type": "import"
 },
 "_pytest.config.UsageError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config._ensure_removed_sysmodule": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config._get_plugin_specs_as_list": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "isinstance",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.config._preinit": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "_pytest.config._preloadplugins": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pytest.config._preinit",
    "get_config"
   ]
  },
  "type": "function"
 },
 "_pytest.config._prepareconfig": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "_pytest.config.get_config",
    "_pytest.config.py",
    "_pytest.config.shlex",
    "_pytest.config.sys",
    "_pytest.deprecated.MAIN_STR_ARGS",
    "isinstance",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.config._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.config._pytest.assertion": {
  "data": {
   "shadows": "_pytest.assertion"
  },
  "type": "import"
 },
 "_pytest.config._pytest.hookspec": {
  "data": {
   "shadows": "_pytest.hookspec"
  },
  "type": "import"
 },
 "_pytest.config._strtobool": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.config.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "_pytest.config.builtin_plugins": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "_pytest.config.cmdline": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_pytest.config.main",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "_pytest.config.create_terminal_writer": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "_pytest.config.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.default_plugins": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "_pytest.config.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.config.determine_setup": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.config.get_common_ancestor",
    "_pytest.config.get_dirs_from_args",
    "_pytest.config.getcfg",
    "_pytest.config.os",
    "_pytest.config.py",
    "str",
    "warnfunc"
   ]
  },
  "type": "function"
 },
 "_pytest.config.directory_arg": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.config.exists": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.filename_arg": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.filescompleter": {
  "data": {
   "shadows": "_pytest._argcomplete.filescompleter"
  },
  "type": "import"
 },
 "_pytest.config.get_common_ancestor": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "_pytest.config.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_config": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "Config",
    "PytestPluginManager",
    "_pytest.config._preinit",
    "_pytest.config.default_plugins"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "_pytest.config.py",
    "get_dir_from_path",
    "get_file_part_from_node_id",
    "is_option"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args.get_dir_from_path": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "_pytest.config.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args.get_file_part_from_node_id": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_dirs_from_args.is_option": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_plugin_manager": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_pytest.config.get_config"
   ]
  },
  "type": "function"
 },
 "_pytest.config.getcfg": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "_pytest.config.exists",
    "_pytest.config.py",
    "_pytest.deprecated.SETUP_CFG_PYTEST",
    "str",
    "warnfunc"
   ]
  },
  "type": "function"
 },
 "_pytest.config.hookimpl": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.config.hookspec": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.config.main": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_prepareconfig",
    "_pytest.config.ConftestImportFailure",
    "_pytest.config.py",
    "_pytest.config.sys",
    "_pytest.config.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest.config.notset": {
  "data": {
   "lineno": 880
  },
  "type": "constant"
 },
 "_pytest.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.config.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "_pytest.config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.config.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.config.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.config.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest.config.setns": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "_pytest.config.pytest",
    "_pytest.config.sys",
    "_pytest.config.types",
    "dict",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "_pytest.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.config.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.config.try_argcomplete": {
  "data": {
   "shadows": "_pytest._argcomplete.try_argcomplete"
  },
  "type": "import"
 },
 "_pytest.config.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.debugging": {
  "data": {},
  "type": "module"
 },
 "_pytest.debugging.PdbInvoke": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "_pytest.debugging.PdbInvoke.pytest_exception_interact": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_enter_pdb",
    "_pytest.debugging.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.PdbInvoke.pytest_internalerror": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "_postmortem_traceback",
    "_pytest.debugging.sys",
    "post_mortem",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.UnexpectedException": {
  "data": {
   "shadows": "doctest.UnexpectedException"
  },
  "type": "import"
 },
 "_pytest.debugging._enter_pdb": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_postmortem_traceback",
    "post_mortem"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging._find_last_non_hidden_frame": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging._postmortem_traceback": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "doctest.UnexpectedException",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.debugging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.debugging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.debugging.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "_pytest.debugging.post_mortem": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Pdb"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.post_mortem.Pdb": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "_pytest.debugging.pytestPDB"
   ]
  },
  "type": "class"
 },
 "_pytest.debugging.post_mortem.Pdb.get_stack": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pytest.debugging._find_last_non_hidden_frame",
    "_pytest.debugging.pdb"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.debugging.pytestPDB": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_pytest.debugging.pdb"
   ]
  },
  "type": "class"
 },
 "_pytest.debugging.pytestPDB.set_trace": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_pytest.debugging.sys",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytest_addoption": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "_pytest.debugging.pytest_configure": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "PdbInvoke",
    "__import__",
    "_pytest.debugging.pdb",
    "_pytest.debugging.sys",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytest_configure.fin": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_pytest.debugging.pdb"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.deprecated": {
  "data": {
   "symbols_in_volume": [
    "_pytest.deprecated.RemovedInPytest4Warning"
   ]
  },
  "type": "module"
 },
 "_pytest.deprecated.FUNCARG_PREFIX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.deprecated.GETFUNCARGVALUE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.deprecated.MAIN_STR_ARGS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "_pytest.deprecated.MARK_INFO_ATTRIBUTE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.deprecated.MARK_PARAMETERSET_UNPACKING": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "_pytest.deprecated.RESULT_LOG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.deprecated.RemovedInPytest4Warning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.deprecated.SETUP_CFG_PYTEST": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "_pytest.deprecated.YIELD_TESTS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.deprecated.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.deprecated.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.deprecated.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.doctest": {
  "data": {
   "symbols_in_volume": [
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_CDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NONE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_ONLY_FIRST_FAILURE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_UDIFF"
   ]
  },
  "type": "module"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICES": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_CDIFF": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_NDIFF": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_NONE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_ONLY_FIRST_FAILURE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_UDIFF": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "_pytest.doctest.DoctestItem": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.doctest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.DoctestItem.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_pytest.doctest.DoctestItem",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.reportinfo": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.repr_failure": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_get_checker",
    "_get_report_choice",
    "_pytest._code.code.ExceptionInfo",
    "_pytest._code.code.ReprFileLocation",
    "_pytest.doctest.DoctestItem",
    "_pytest.doctest.ReprFailDoctest",
    "_pytest.doctest.doctest",
    "_pytest.doctest.traceback",
    "enumerate",
    "repr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.runtest": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_check_all_skipped"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.setup": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_setup_fixtures",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestModule": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "_pytest.doctest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.DoctestModule.collect": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ImportError",
    "_get_checker",
    "_pytest.doctest.DoctestItem",
    "_pytest.doctest.doctest",
    "_pytest.doctest.get_optionflags",
    "_pytest.doctest.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestTextfile": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "_pytest.doctest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.DoctestTextfile.collect": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_fix_spoof_python2",
    "_get_checker",
    "_pytest.doctest.DoctestItem",
    "_pytest.doctest.doctest",
    "_pytest.doctest.get_optionflags",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.doctest.FixtureRequest": {
  "data": {
   "shadows": "_pytest.fixtures.FixtureRequest"
  },
  "type": "import"
 },
 "_pytest.doctest.ReprFailDoctest": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.ReprFailDoctest.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest.toterminal": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "_pytest.doctest.ReprFileLocation": {
  "data": {
   "shadows": "_pytest._code.code.ReprFileLocation"
  },
  "type": "import"
 },
 "_pytest.doctest.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.doctest._PY2": {
  "data": {
   "shadows": "_pytest.compat._PY2"
  },
  "type": "import"
 },
 "_pytest.doctest._SpoofOut": {
  "data": {
   "shadows": "doctest._SpoofOut"
  },
  "type": "import"
 },
 "_pytest.doctest._check_all_skipped": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "_pytest.doctest.doctest",
    "_pytest.doctest.pytest",
    "all"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "UnicodeSpoof",
    "_pytest.compat._PY2"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "doctest._SpoofOut"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof.getvalue": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "doctest._SpoofOut.getvalue"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_allow_bytes_flag": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_allow_unicode_flag": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_checker": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "_pytest.doctest.doctest",
    "_pytest.doctest.re"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "_get_allow_bytes_flag",
    "_get_allow_unicode_flag",
    "_pytest.doctest.doctest",
    "remove_prefixes"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output.remove_prefixes": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "_pytest.doctest.re"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_flag_lookup": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "_get_allow_bytes_flag",
    "_get_allow_unicode_flag",
    "_pytest.doctest.doctest",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_report_choice": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_CDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NONE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_ONLY_FIRST_FAILURE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_UDIFF",
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._is_doctest": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureRequest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures.func": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "_pytest.doctest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.doctest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.doctest.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "_pytest.doctest.doctest_namespace": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "_pytest.doctest.pytest",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.get_optionflags": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "_pytest.doctest._get_flag_lookup"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.doctest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.doctest.pytest_addoption": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_pytest.doctest.DOCTEST_REPORT_CHOICES",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.pytest_collect_file": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "DoctestModule",
    "DoctestTextfile",
    "_is_doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.doctest.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.fixtures": {
  "data": {
   "symbols_in_volume": [
    "_pytest.fixtures.fixture",
    "_pytest.fixtures.scope2props",
    "_pytest.fixtures.scopes",
    "_pytest.fixtures.sys",
    "dict"
   ]
  },
  "type": "module"
 },
 "_pytest.fixtures.FixtureDef": {
  "data": {
   "lineno": 716
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureDef.__init__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "_pytest.compat.getfuncargnames",
    "_pytest.fixtures.scope2index",
    "func",
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.__repr__": {
  "data": {
   "lineno": 789
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.addfinalizer": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.execute": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "_pytest.fixtures.py",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.finish": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "_pytest.fixtures.py",
    "_pytest.fixtures.sys",
    "func",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureFunctionMarker": {
  "data": {
   "lineno": 826
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureFunctionMarker.__call__": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.compat.isclass"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureFunctionMarker.__init__": {
  "data": {
   "lineno": 827
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "LookupError"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupError.__init__": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError.formatrepr": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "FixtureLookupErrorRepr",
    "IOError",
    "IndexError",
    "TypeError",
    "_pytest.compat.get_real_func",
    "_pytest.compat.getfslineno",
    "_pytest.fixtures.inspect",
    "addline",
    "enumerate",
    "list",
    "map",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.__init__": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.toterminal": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "py._code.code.FormattedExcinfo.fail_marker",
    "py._code.code.FormattedExcinfo.flow_marker"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureLookupError",
    "_pytest.fixtures.FixtureLookupErrorRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureManager.__init__": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._getautousenames": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._matchfactories": {
  "data": {
   "lineno": 1131
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "len",
    "merge"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.merge": {
  "data": {
   "lineno": 1018
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixturedefs": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "KeyError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureinfo": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "_pytest.compat.getfuncargnames",
    "_pytest.fixtures.FuncFixtureInfo",
    "func",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.parsefactories": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET",
    "_pytest.compat.safe_getattr",
    "_pytest.deprecated.FUNCARG_PREFIX.format",
    "_pytest.fixtures.FixtureDef",
    "_pytest.fixtures.FixtureFunctionMarker",
    "_pytest.fixtures.defaultfuncargprefixmarker",
    "_pytest.fixtures.getfixturemarker",
    "callable",
    "dir",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_collection_modifyitems": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "_pytest.fixtures.reorder_items"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_generate_tests": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_plugin_registered": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.fixtures.py"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "_pytest.compat.FuncargnamesCompatAttr"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureRequest.__init__": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.__repr__": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._addfinalizer": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._check_scope": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "scopemismatch"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._factorytraceback": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "_pytest.compat._format_args",
    "_pytest.compat.getfslineno"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._fillfixtures": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_active_fixturedef": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "FixtureLookupError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_active_fixturedef.PseudoFixtureDef": {
  "data": {
   "lineno": 446
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureRequest._get_fixturestack": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getfixturevalue": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "AttributeError",
    "SubRequest",
    "ValueError",
    "_pytest.compat.NOTSET",
    "_pytest.compat.exc_clear",
    "_pytest.compat.getlocation",
    "_pytest.fixtures.inspect",
    "_pytest.fixtures.py",
    "_pytest.outcomes.fail"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getnextfixturedef": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "FixtureLookupError",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getscopeitem": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "_pytest.fixtures.get_scope_node"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.addfinalizer": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.applymarker": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cached_setup": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "KeyError",
    "hasattr",
    "setup"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cached_setup.finalizer": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "teardown"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cls": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "_pytest.fixtures._pytest",
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.config": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fixturenames": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fspath": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.function": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfixturevalue": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfuncargvalue": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_pytest.deprecated.GETFUNCARGVALUE",
    "_pytest.fixtures.warnings"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.instance": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.fixtures.py",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.keywords": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.module": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_pytest.fixtures._pytest",
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.node": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.raiseerror": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.session": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FormattedExcinfo": {
  "data": {
   "shadows": "py._code.code.FormattedExcinfo"
  },
  "type": "import"
 },
 "_pytest.fixtures.FuncFixtureInfo": {
  "data": {
   "lineno": 250
  },
  "type": "class"
 },
 "_pytest.fixtures.FuncFixtureInfo.__init__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "_pytest.fixtures.FuncargnamesCompatAttr": {
  "data": {
   "shadows": "_pytest.compat.FuncargnamesCompatAttr"
  },
  "type": "import"
 },
 "_pytest.fixtures.NOTSET": {
  "data": {
   "shadows": "_pytest.compat.NOTSET"
  },
  "type": "import"
 },
 "_pytest.fixtures.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "_pytest.fixtures.ScopeMismatchError": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.SubRequest": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureRequest"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.SubRequest.__init__": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.__repr__": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "_pytest.fixtures.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.fixtures.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.fixtures._format_args": {
  "data": {
   "shadows": "_pytest.compat._format_args"
  },
  "type": "import"
 },
 "_pytest.fixtures._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.fixtures._pytest.python": {
  "data": {
   "shadows": "_pytest.python"
  },
  "type": "import"
 },
 "_pytest.fixtures.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.fixtures.add_funcarg_pseudo_fixture_def": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "FixtureDef",
    "_pytest.fixtures._pytest",
    "_pytest.fixtures.get_scope_node",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.call_fixture_func": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "_pytest.compat.is_generator",
    "fixturefunc",
    "next",
    "teardown"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.call_fixture_func.teardown": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "StopIteration",
    "_pytest.fixtures.fail_fixturefunc",
    "fixturefunc",
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.defaultfuncargprefixmarker": {
  "data": {
   "lineno": 903
  },
  "type": "constant"
 },
 "_pytest.fixtures.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.fixtures.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.fixtures.exc_clear": {
  "data": {
   "shadows": "_pytest.compat.exc_clear"
  },
  "type": "import"
 },
 "_pytest.fixtures.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.fixtures.fail_fixturefunc": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "_pytest.compat.getfslineno",
    "_pytest.fixtures._pytest",
    "_pytest.outcomes.fail",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.fillfixtures": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "AttributeError",
    "FixtureRequest"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.fixture": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureFunctionMarker",
    "callable",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.get_direct_param_fixture_func": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "_pytest.fixtures.get_parametrized_fixture_keys": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AttributeError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.get_real_func": {
  "data": {
   "shadows": "_pytest.compat.get_real_func"
  },
  "type": "import"
 },
 "_pytest.fixtures.get_scope_node": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.fixtures.scopename2class"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.getfixturemarker": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.getfslineno": {
  "data": {
   "shadows": "_pytest.compat.getfslineno"
  },
  "type": "import"
 },
 "_pytest.fixtures.getfuncargnames": {
  "data": {
   "shadows": "_pytest.compat.getfuncargnames"
  },
  "type": "import"
 },
 "_pytest.fixtures.getimfunc": {
  "data": {
   "shadows": "_pytest.compat.getimfunc"
  },
  "type": "import"
 },
 "_pytest.fixtures.getlocation": {
  "data": {
   "shadows": "_pytest.compat.getlocation"
  },
  "type": "import"
 },
 "_pytest.fixtures.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.fixtures.is_generator": {
  "data": {
   "shadows": "_pytest.compat.is_generator"
  },
  "type": "import"
 },
 "_pytest.fixtures.isclass": {
  "data": {
   "shadows": "_pytest.compat.isclass"
  },
  "type": "import"
 },
 "_pytest.fixtures.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.fixtures.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.fixtures.pytest_fixture_setup": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "_pytest.compat.getimfunc",
    "_pytest.fixtures.call_fixture_func",
    "_pytest.fixtures.sys",
    "_pytest.outcomes.TEST_OUTCOME",
    "fixturefunc",
    "fixturefunc.__get__"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.pytest_sessionstart": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "FixtureManager",
    "_pytest.fixtures._pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.pytestconfig": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "_pytest.fixtures.fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.reorder_items": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_pytest.fixtures.get_parametrized_fixture_keys",
    "collections.OrderedDict.fromkeys",
    "range",
    "reorder_items_atscope",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.reorder_items_atscope": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "slice_items"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.safe_getattr": {
  "data": {
   "shadows": "_pytest.compat.safe_getattr"
  },
  "type": "import"
 },
 "_pytest.fixtures.scope2index": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.fixtures.scopes"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scope2props": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.fixtures.scopemismatch": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "_pytest.fixtures.scopes"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scopename2class": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "_pytest.fixtures.scopenum_function": {
  "data": {
   "lineno": 594
  },
  "type": "constant"
 },
 "_pytest.fixtures.scopeproperty": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "func.__doc__",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope.provide": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.fixtures.scope2props",
    "func"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scopes": {
  "data": {
   "lineno": 593
  },
  "type": "constant"
 },
 "_pytest.fixtures.slice_items": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "collections.OrderedDict.fromkeys",
    "enumerate",
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.fixtures.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.fixtures.yield_fixture": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureFunctionMarker",
    "callable"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support": {
  "data": {},
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_pytest.freeze_support.os",
    "_pytest.freeze_support.pkgutil",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.freeze_support.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.freeze_support.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.freeze_support.freeze_includes": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "_iter_all_modules",
    "_pytest.freeze_support._pytest",
    "_pytest.freeze_support.py",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.freeze_support.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.freeze_support.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.freeze_support.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig": {
  "data": {},
  "type": "module"
 },
 "_pytest.helpconfig.Action": {
  "data": {
   "shadows": "argparse.Action"
  },
  "type": "import"
 },
 "_pytest.helpconfig.HelpAction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "argparse.Action"
   ]
  },
  "type": "class"
 },
 "_pytest.helpconfig.HelpAction.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_pytest.config.PrintHelp",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.HelpAction.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_pytest.helpconfig.HelpAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.PrintHelp": {
  "data": {
   "shadows": "_pytest.config.PrintHelp"
  },
  "type": "import"
 },
 "_pytest.helpconfig.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.helpconfig.conftest_options": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "_pytest.helpconfig.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "getattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.helpconfig.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.helpconfig.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_pytest.helpconfig.HelpAction"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.sys",
    "getpluginversioninfo",
    "showhelp"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_pytest.helpconfig.os",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.sys",
    "map",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.helpconfig.sys",
    "undo_tracing"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "_pytest.helpconfig.getpluginversioninfo",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "hasattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "help",
    "type",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.hookspec": {
  "data": {
   "symbols_in_volume": [
    "_pytest._pluggy.HookspecMarker"
   ]
  },
  "type": "module"
 },
 "_pytest.hookspec.HookspecMarker": {
  "data": {
   "shadows": "_pytest._pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.hookspec.hookspec": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_doctest_prepare_content": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemstart": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_logwarning": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_namespace": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_collectionfinish": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "_pytest.junitxml": {
  "data": {
   "symbols_in_volume": [
    "_pytest.junitxml._legal_chars",
    "_pytest.junitxml._legal_ranges",
    "_pytest.junitxml._legal_xml_re",
    "_pytest.junitxml.re",
    "_pytest.junitxml.sys",
    "_pytest.junitxml.unichr",
    "_pytest.junitxml.unicode",
    "chr",
    "int",
    "str"
   ]
  },
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "_pytest.junitxml.os",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "_pytest.junitxml._NodeReporter",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "getattr",
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.os",
    "_pytest.junitxml.time",
    "codecs.open"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "_pytest.junitxml.time"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "kind"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "_pytest.junitxml.unicode",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "hasattr",
    "mangle_test_address"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.write_captured_output": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "getattr",
    "tag"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._legal_chars": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_ranges": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_xml_re": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "_pytest.junitxml._py_ext_re": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "_pytest.junitxml.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "_pytest.junitxml.illegal_xml_re",
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "_pytest.junitxml.unicode",
    "ord"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.junitxml.filename_arg": {
  "data": {
   "shadows": "_pytest.config.filename_arg"
  },
  "type": "import"
 },
 "_pytest.junitxml.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.junitxml.illegal_xml_re": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "_pytest.junitxml.long": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.junitxml.mangle_test_address": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.junitxml._py_ext_re"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.open": {
  "data": {
   "shadows": "codecs.open"
  },
  "type": "import"
 },
 "_pytest.junitxml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.junitxml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.junitxml.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest_addoption": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "_pytest.config.filename_arg",
    "_pytest.junitxml.functools"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "LogXML",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.junitxml.record_xml_property": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "_pytest.junitxml.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_property.add_property_noop": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "_pytest.junitxml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.junitxml.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.junitxml.unichr": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "_pytest.junitxml.unicode": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.main": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest.main._pytest",
    "_pytest.main.py"
   ]
  },
  "type": "module"
 },
 "_pytest.main.Collector": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "_pytest.main.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Collector.CollectError": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Collector._prunetraceback": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "_pytest.main.tracebackcutdir",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Collector.collect": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Collector.repr_failure": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.EXIT_INTERNALERROR": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_INTERRUPTED": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_OK": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_TESTSFAILED": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_USAGEERROR": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.main.FSCollector": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "_pytest.main.Collector"
   ]
  },
  "type": "class"
 },
 "_pytest.main.FSCollector.__init__": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "_pytest.main.FSCollector",
    "_pytest.main.os",
    "_pytest.main.py",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.main.FSCollector._makeid": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "_pytest.main.os"
   ]
  },
  "type": "function"
 },
 "_pytest.main.FSHookProxy": {
  "data": {
   "lineno": 212
  },
  "type": "class"
 },
 "_pytest.main.FSHookProxy.__getattr__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "_pytest.main.FSHookProxy.__init__": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "_pytest.main.File": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "_pytest.main.FSCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Item": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "_pytest.main.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Item.__init__": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "_pytest.main.Item",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Item.add_report_section": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "_pytest.main.Item.location": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Item.reportinfo": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "_pytest.main.MARK_GEN": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "_pytest.main.MappingMixin": {
  "data": {
   "shadows": "UserDict.DictMixin"
  },
  "type": "import"
 },
 "_pytest.main.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.MarkDecorator"
  },
  "type": "import"
 },
 "_pytest.main.MarkInfo": {
  "data": {
   "shadows": "_pytest.mark.MarkInfo"
  },
  "type": "import"
 },
 "_pytest.main.NoMatch": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Node": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "_pytest.main._CompatProperty",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Node.__hash__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "_pytest.main.NodeKeywords",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.__repr__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node._getcustomclass": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "__import__",
    "_pytest.main._CompatProperty",
    "getattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node._makeid": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "_pytest.main.Node._memoizedcall": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "_pytest.main.py",
    "_pytest.main.sys",
    "function",
    "getattr",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node._prunetraceback": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "_pytest.main.Node._repr_failure_py": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "OSError",
    "_pytest.main._pytest",
    "_pytest.main.os",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.add_marker": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.main.py",
    "_pytest.mark.MARK_GEN",
    "_pytest.mark.MarkDecorator",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.addfinalizer": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "_pytest.main.Node.get_marker": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "_pytest.mark.MarkDecorator",
    "_pytest.mark.MarkInfo",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.getparent": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.ihook": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.listchain": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "_pytest.main.Node.listextrakeywords": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.listnames": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "_pytest.main.Node.nodeid": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.setup": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "_pytest.main.Node.teardown": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "_pytest.main.Node.warn": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "UserDict.DictMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.main.NodeKeywords.__delitem__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__getitem__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__init__": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__iter__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "iter",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__len__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__repr__": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__setitem__": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.keys": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "_pytest.main.FSCollector",
    "_pytest.main.Interrupted"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "_pytest.main.FSCollector",
    "_pytest.main.py"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "data": {
   "lineno": 700
  },
  "type": "function"
 },
 "_pytest.main.Session._collectfile": {
  "data": {
   "lineno": 714
  },
  "type": "function"
 },
 "_pytest.main.Session._makeid": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "_pytest.main.Collector",
    "_pytest.main.Item",
    "_pytest.runner.collect_one_node",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.main.os",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.runner.collect_one_node",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._recurse": {
  "data": {
   "lineno": 721
  },
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "_pytest.main.os",
    "_pytest.main.pkgutil"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "_pytest.main.sys",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "_pytest.main.Collector",
    "_pytest.main.Item",
    "_pytest.runner.collect_one_node",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "_pytest.main.FSHookProxy"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "_pytest.config.hookimpl"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.main._CompatProperty": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.main._CompatProperty.__get__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "__import__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main._CompatProperty.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "_pytest.main._in_venv": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "_pytest.main.sys",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.main._main": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_TESTSFAILED"
   ]
  },
  "type": "function"
 },
 "_pytest.main._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.main._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.main.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.main.collect_one_node": {
  "data": {
   "shadows": "_pytest.runner.collect_one_node"
  },
  "type": "import"
 },
 "_pytest.main.directory_arg": {
  "data": {
   "shadows": "_pytest.config.directory_arg"
  },
  "type": "import"
 },
 "_pytest.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.main.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "_pytest.main.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.main.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.main.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.main.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.main.pytest_addoption": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_pytest.config.directory_arg",
    "_pytest.main.functools",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "_pytest.main.pytest_configure": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "__import__"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_pytest.main._in_venv",
    "_pytest.main.py"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_namespace": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.main.tracebackcutdir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.main.wrap_session": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "Session",
    "SystemExit",
    "_pytest.config.UsageError",
    "_pytest.main.EXIT_INTERNALERROR",
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main._pytest",
    "_pytest.main.sys",
    "_pytest.outcomes.exit.Exception",
    "doit",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark": {
  "data": {
   "symbols_in_volume": [
    "_pytest.mark.MarkGenerator",
    "_pytest.mark.pytest_cmdline_main"
   ]
  },
  "type": "module"
 },
 "_pytest.mark.KeywordMapping": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "_pytest.mark.KeywordMapping.__getitem__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "_pytest.mark.KeywordMapping.__init__": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "_pytest.mark.MARK_GEN": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "_pytest.mark.Mark": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.Mark.combined_with": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "_pytest.mark.Mark",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_pytest.mark.alias"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.MarkDecorator.__call__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "_pytest.mark.inspect",
    "_pytest.mark.istestfunc",
    "len",
    "store_legacy_markinfo",
    "store_mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__eq__": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "Mark",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__repr__": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.markname": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.with_args": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "Mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkGenerator": {
  "data": {
   "lineno": 246
  },
  "type": "class"
 },
 "_pytest.mark.MarkGenerator.__getattr__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "AttributeError",
    "Mark",
    "MarkDecorator"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkGenerator._check": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "AttributeError",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "_pytest.mark.alias",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.MarkInfo.__init__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "_pytest.mark.Mark",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo.__iter__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "_pytest.mark.MarkInfo",
    "imap"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo.__repr__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo.add_mark": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "_pytest.mark.MarkMapping": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "_pytest.mark.MarkMapping.__getitem__": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "_pytest.mark.MarkMapping.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "MarkDecorator",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkerError": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.ParameterSet": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.ParameterSet.deprecated_arg_dict": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.ParameterSet.extract_from": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Mark",
    "MarkDecorator",
    "_pytest.mark.ParameterSet",
    "_pytest.mark.warnings",
    "classmethod",
    "cls",
    "cls.param",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.ParameterSet.param": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "id",
    "isinstance",
    "list",
    "param_extract_id",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.ParameterSet.param.param_extract_id": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "_pytest.mark._marked": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.mark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.mark.alias": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "getter",
    "operator.attrgetter",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.alias.warned": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_pytest.mark.warnings",
    "getter"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "_pytest.mark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.mark.get_unpacked_marks": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.mark.istestfunc": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.matchkeyword": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "_pytest.mark.KeywordMapping",
    "_pytest.mark.pytest",
    "eval",
    "hasattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.matchmark": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "_pytest.mark.MarkMapping",
    "eval"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "_pytest.mark.param": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "_pytest.mark.ParameterSet"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.mark.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.mark.pytest_addoption": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "matchkeyword",
    "matchmark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "_pytest.mark.pytest_unconfigure": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.store_legacy_markinfo": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "Mark",
    "MarkInfo",
    "TypeError",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.store_mark": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "Mark",
    "_pytest.mark.get_unpacked_marks",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.transfer_markers": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "_pytest.mark._marked",
    "_pytest.mark.get_unpacked_marks",
    "_pytest.mark.store_legacy_markinfo",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.monkeypatch": {
  "data": {
   "symbols_in_volume": [
    "_pytest.monkeypatch.Notset",
    "_pytest.monkeypatch.re"
   ]
  },
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.notset",
    "delattr",
    "getattr",
    "hasattr",
    "isinstance",
    "py.builtin._basestring"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.inspect",
    "_pytest.monkeypatch.notset",
    "getattr",
    "isinstance",
    "py.builtin._basestring",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "_pytest.monkeypatch.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.os",
    "_pytest.monkeypatch.sys",
    "delattr",
    "reversed",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "_pytest.monkeypatch.RE_IMPORT_ERROR_NAME": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "_pytest.monkeypatch._basestring": {
  "data": {
   "shadows": "py.builtin._basestring"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.monkeypatch.annotated_getattr",
    "_pytest.monkeypatch.resolve",
    "isinstance",
    "py.builtin._basestring"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "MonkeyPatch",
    "_pytest.fixtures.fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.notset": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.resolve": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__import__",
    "annotated_getattr",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.nose": {
  "data": {},
  "type": "module"
 },
 "_pytest.nose.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.nose.call_optional": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_pytest.nose.py",
    "getattr",
    "hasattr",
    "method"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.nose.get_skip_exceptions": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_pytest.nose.sys",
    "hasattr",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.nose.is_potential_nosetest": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_pytest.python.Function",
    "_pytest.unittest.TestCaseFunction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.nose.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.nose.pytest_make_collect_report": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_pytest.python.Generator",
    "call_optional",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_makereport": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_pytest.nose.get_skip_exceptions",
    "_pytest.runner.skip",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_setup": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "_pytest.python.Generator",
    "_pytest.python.Instance",
    "call_optional",
    "hasattr",
    "is_potential_nosetest",
    "isinstance",
    "teardown_nose"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.python": {
  "data": {
   "shadows": "_pytest.python"
  },
  "type": "import"
 },
 "_pytest.nose.runner": {
  "data": {
   "shadows": "_pytest.runner"
  },
  "type": "import"
 },
 "_pytest.nose.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.nose.teardown_nose": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "call_optional",
    "is_potential_nosetest"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.unittest": {
  "data": {
   "shadows": "_pytest.unittest"
  },
  "type": "import"
 },
 "_pytest.outcomes": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "_pytest.outcomes.Exit",
    "_pytest.outcomes.Failed",
    "_pytest.outcomes.OutcomeException",
    "_pytest.outcomes.Skipped",
    "_pytest.outcomes.XFailed",
    "_pytest.outcomes.exit",
    "_pytest.outcomes.fail",
    "_pytest.outcomes.skip",
    "_pytest.outcomes.xfail"
   ]
  },
  "type": "module"
 },
 "_pytest.outcomes.Exit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.Exit.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "KeyboardInterrupt.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.Failed": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "BaseException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "BaseException.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.OutcomeException.__repr__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_pytest.outcomes.py",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.Skipped": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.Skipped.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.TEST_OUTCOME": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.outcomes.XFailed": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_pytest.outcomes.fail"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.outcomes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.outcomes.exit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_pytest.outcomes.Exit"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.fail": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "_pytest.outcomes.Failed"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.importorskip": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "_pytest.outcomes.Skipped",
    "_pytest.outcomes.sys",
    "_pytest.outcomes.warnings",
    "compile",
    "getattr",
    "pkg_resources.parse_version"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.outcomes.pv": {
  "data": {
   "shadows": "pkg_resources.parse_version"
  },
  "type": "import"
 },
 "_pytest.outcomes.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.outcomes.skip": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_pytest.outcomes.Skipped"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.outcomes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.outcomes.xfail": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_pytest.outcomes.XFailed"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin": {
  "data": {},
  "type": "module"
 },
 "_pytest.pastebin._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.pastebin.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.pastebin.create_new_paste": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_pytest.pastebin.re",
    "_pytest.pastebin.sys",
    "urllib.parse.urlencode",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.pastebin.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.pastebin.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest_addoption": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_pytest.pastebin.pytest",
    "_pytest.pastebin.tempfile"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_pytest.pastebin.py",
    "oldwrite"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.pastebin.create_new_paste",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "create_new_paste",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.pastebin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pastebin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "_pytest.pytester": {
  "data": {
   "symbols_in_volume": [
    "_pytest.pytester.re"
   ]
  },
  "type": "module"
 },
 "_pytest.pytester.AssertionRewritingHook": {
  "data": {
   "shadows": "_pytest.assertion.rewrite.AssertionRewritingHook"
  },
  "type": "import"
 },
 "_pytest.pytester.EXIT_OK": {
  "data": {
   "shadows": "_pytest.main.EXIT_OK"
  },
  "type": "import"
 },
 "_pytest.pytester.HookRecorder": {
  "data": {
   "lineno": 201
  },
  "type": "class"
 },
 "_pytest.pytester.HookRecorder.__init__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.after": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.before": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "_pytest.pytester.ParsedCall"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assert_contains": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "_pytest.pytester.pytest",
    "_pytest.pytester.sys",
    "enumerate",
    "eval",
    "list",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assertoutcome": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.clear": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.countoutcomes": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.finish_recording": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcall": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcalls": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailedcollections": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailures": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getreports": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.listoutcomes": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.matchreport": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.popcall": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "_pytest.pytester.pytest",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineComp": {
  "data": {
   "lineno": 1054
  },
  "type": "class"
 },
 "_pytest.pytester.LineComp.__init__": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineComp.assert_contains_lines": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "LineMatcher"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher": {
  "data": {
   "lineno": 1070
  },
  "type": "class"
 },
 "_pytest.pytester.LineMatcher.__init__": {
  "data": {
   "lineno": 1081
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._getlines": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "_pytest._code.Source",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log_text": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "_pytest.pytester.pytest",
    "fnmatch.fnmatch",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines_random": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "ValueError",
    "fnmatch.fnmatch",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.get_lines_after": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "fnmatch.fnmatch"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.str": {
  "data": {
   "lineno": 1085
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher_fixture": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.LsofFdLeakChecker._exec_lsof": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "_pytest.pytester.os",
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isopen"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output.isopen": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.get_open_files": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.matching_platform": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.pytest_runtest_protocol": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "_pytest.pytester.gc",
    "_pytest.pytester.pytest",
    "_pytest.pytester.sys",
    "hasattr",
    "len",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.MultiCapture": {
  "data": {
   "shadows": "_pytest.capture.MultiCapture"
  },
  "type": "import"
 },
 "_pytest.pytester.ParsedCall": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "_pytest.pytester.ParsedCall.__init__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "_pytest.pytester.ParsedCall.__repr__": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "_pytest.pytester.PytestArg": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "_pytest.pytester.PytestArg.__init__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "_pytest.pytester.PytestArg.gethookrecorder": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "HookRecorder"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.RunResult": {
  "data": {
   "lineno": 347
  },
  "type": "class"
 },
 "_pytest.pytester.RunResult.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "LineMatcher"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.RunResult.assert_outcomes": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "_pytest.pytester.RunResult.parseoutcomes": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.pytester.rex_outcome",
    "int",
    "reversed"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Session": {
  "data": {
   "shadows": "_pytest.main.Session"
  },
  "type": "import"
 },
 "_pytest.pytester.Source": {
  "data": {
   "shadows": "_pytest._code.Source"
  },
  "type": "import"
 },
 "_pytest.pytester.SysCapture": {
  "data": {
   "shadows": "_pytest.capture.SysCapture"
  },
  "type": "import"
 },
 "_pytest.pytester.Testdir": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "_pytest.main.Session"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.__init__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "_pytest.pytester.py",
    "_pytest.pytester.sys",
    "list",
    "range",
    "set",
    "str",
    "weakref.WeakKeyDictionary"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.__repr__": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._dump_lines": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "print"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._ensure_basetemp": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._getpytestargs": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "_pytest._code.Source",
    "_pytest.pytester.py",
    "list",
    "map",
    "my_totext"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile.my_totext": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._possibly_invalidate_import_caches": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.pytester.importlib",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._run": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "_pytest.pytester.RunResult",
    "_pytest.pytester.codecs",
    "_pytest.pytester.py",
    "_pytest.pytester.sys",
    "_pytest.pytester.time",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.chdir": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.collect_by_name": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.delete_loaded_modules": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "_pytest.pytester.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.finalize": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "_pytest.pytester.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.genitems": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getinicfg": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitem": {
  "data": {
   "lineno": 832
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitems": {
  "data": {
   "lineno": 852
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getmodulecol": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "_pytest._code.Source"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getnode": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "_pytest.main.EXIT_OK",
    "_pytest.main.Session",
    "_pytest.pytester.py",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getpathnode": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "_pytest.main.EXIT_OK",
    "_pytest.main.Session"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_genitems": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "Collect",
    "KeyboardInterrupt",
    "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported",
    "_pytest.pytester.pytest",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.Collect": {
  "data": {
   "lineno": 722
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.Collect.pytest_configure": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.reprec": {
  "data": {
   "lineno": 733
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.revert": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_runsource": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.make_hook_recorder": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "_pytest.pytester.HookRecorder",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeconftest": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makefile": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeini": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makepyfile": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.maketxtfile": {
  "data": {
   "lineno": 548
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkdir": {
  "data": {
   "lineno": 575
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkpydir": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfig": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "_pytest.pytester._pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfigure": {
  "data": {
   "lineno": 819
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.popen": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "_pytest.pytester.os",
    "_pytest.pytester.subprocess",
    "filter",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.run": {
  "data": {
   "lineno": 925
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runitem": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "runner"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "_pytest.capture.MultiCapture",
    "_pytest.capture.SysCapture",
    "_pytest.pytester.RunResult",
    "_pytest.pytester.sys",
    "_pytest.pytester.time",
    "_pytest.pytester.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess.reprec": {
  "data": {
   "lineno": 764
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.runpytest_subprocess": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "_pytest.pytester.py",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython_c": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "_pytest.pytester.platform",
    "_pytest.pytester.pytest",
    "_pytest.pytester.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn_pytest": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.syspathinsert": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "_pytest.pytester.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.WeakKeyDictionary": {
  "data": {
   "shadows": "weakref.WeakKeyDictionary"
  },
  "type": "import"
 },
 "_pytest.pytester._pytest": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "PytestArg",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.pytester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.pytester.anypython": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_pytest.pytester.getexecutable",
    "_pytest.pytester.py",
    "_pytest.pytester.pytest",
    "_pytest.pytester.sys",
    "_pytest.pytester.winpymap"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "_pytest.pytester.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.pytester.fnmatch": {
  "data": {
   "shadows": "fnmatch.fnmatch"
  },
  "type": "import"
 },
 "_pytest.pytester.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "_pytest.pytester.get_public_names": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "_pytest.pytester.getdecoded": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.getexecutable": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.pytester.py",
    "_pytest.pytester.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "_pytest.pytester.linecomp": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "LineComp",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.pytester.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.pytester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.pytester.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.pytester.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.pytester.pytest_addoption": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "_pytest.pytester.pytest_configure": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "LsofFdLeakChecker",
    "NameError",
    "_pytest.pytester.os",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.pytester.rex_outcome": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "_pytest.pytester.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "_pytest.pytester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pytester.testdir": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "Testdir",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.pytester.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.pytester.winpymap": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "_pytest.python": {
  "data": {
   "symbols_in_volume": [
    "_pytest._pluggy.__file__.rstrip",
    "_pytest.python._pytest",
    "_pytest.python.py"
   ]
  },
  "type": "module"
 },
 "_pytest.python.CallSpec2": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python.CallSpec2.__init__": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2._checkargnotcontained": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.copy": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "_pytest.python.CallSpec2",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.getparam": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_pytest.compat.NOTSET"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.id": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "filter",
    "map",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.setall": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET",
    "_pytest.fixtures.scopenum_function",
    "id"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.setmulti": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "getattr",
    "id",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Class": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "_pytest.python.PyCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Class.collect": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "_pytest.compat.safe_getattr",
    "hasinit",
    "hasnew"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Class.setup": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "_pytest.python._get_xunit_func",
    "fin_class",
    "getattr",
    "setup_class"
   ]
  },
  "type": "function"
 },
 "_pytest.python.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.python.Function": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "_pytest.fixtures.FuncargnamesCompatAttr",
    "_pytest.main.Item",
    "_pytest.python.FunctionMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Function.__init__": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET",
    "_pytest.python.Function",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function._getobj": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function._initrequest": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureRequest",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function._isyieldedfunction": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function._pyfuncitem": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function.function": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function.runtest": {
  "data": {
   "lineno": 1169
  },
  "type": "function"
 },
 "_pytest.python.Function.setup": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "_pytest.fixtures.fillfixtures",
    "_pytest.python.Function",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.FunctionMixin": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "_pytest.python.PyobjMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.python.FunctionMixin._prunetraceback": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "_pytest.compat.get_real_func",
    "_pytest.python._pytest",
    "_pytest.python.filter_traceback",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.python.FunctionMixin._repr_failure_py": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "_pytest.outcomes.fail.Exception",
    "_pytest.python.FunctionMixin",
    "_pytest.python.py",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.FunctionMixin.repr_failure": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "_pytest.python.FunctionMixin.setup": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "_pytest.python.Instance",
    "_pytest.python._get_xunit_setup_teardown",
    "_pytest.python.inspect",
    "hasattr",
    "isinstance",
    "obj",
    "setup_func_or_method"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Generator": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "_pytest.python.FunctionMixin",
    "_pytest.python.PyCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Generator.collect": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_pytest.deprecated.YIELD_TESTS",
    "callable",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Generator.getcallargs": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "_pytest.python.py",
    "isinstance",
    "list",
    "obj",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Instance": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "_pytest.python.PyCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Instance._getobj": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "_pytest.python.Instance.collect": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "_pytest.python.Instance",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Instance.newinstance": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "_pytest.python.MARK_GEN": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "_pytest.python.MarkerError": {
  "data": {
   "shadows": "_pytest.mark.MarkerError"
  },
  "type": "import"
 },
 "_pytest.python.Metafunc": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "_pytest.fixtures.FuncargnamesCompatAttr"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Metafunc.__init__": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "_pytest.python.py",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Metafunc.addcall": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.compat.NOTSET",
    "_pytest.outcomes.fail",
    "_pytest.python.CallSpec2",
    "dict",
    "id",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Metafunc.parametrize": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "ValueError",
    "_find_parametrized_scope",
    "_pytest.compat.NOTSET",
    "_pytest.compat.getfslineno",
    "_pytest.fixtures.scope2index",
    "_pytest.mark.MARK_GEN.skip",
    "_pytest.mark.ParameterSet",
    "_pytest.mark.ParameterSet.extract_from",
    "_pytest.python.CallSpec2",
    "_pytest.python.py",
    "callable",
    "dict.fromkeys",
    "idmaker",
    "isinstance",
    "itertools.count",
    "len",
    "list",
    "py.io.saferepr",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "_pytest.main.File",
    "_pytest.python.PyCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Module._getobj": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "_pytest.python.Module._importtestmodule": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ImportError",
    "SyntaxError",
    "_pytest._code.code.ExceptionInfo",
    "_pytest.compat.safe_str",
    "_pytest.python._pytest",
    "_pytest.python.filter_traceback",
    "_pytest.python.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module.collect": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "_pytest.python.Module",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module.setup": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "_get_xunit_setup_teardown",
    "setup_module"
   ]
  },
  "type": "function"
 },
 "_pytest.python.NOTSET": {
  "data": {
   "shadows": "_pytest.compat.NOTSET"
  },
  "type": "import"
 },
 "_pytest.python.NoneType": {
  "data": {
   "shadows": "_pytest.compat.NoneType"
  },
  "type": "import"
 },
 "_pytest.python.ParameterSet": {
  "data": {
   "shadows": "_pytest.mark.ParameterSet"
  },
  "type": "import"
 },
 "_pytest.python.PyCollector": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "_pytest.main.Collector",
    "_pytest.python.PyobjMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.python.PyCollector._genfunctions": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "Class",
    "Function",
    "Metafunc",
    "Module",
    "_pytest.fixtures.add_funcarg_pseudo_fixture_def",
    "_pytest.mark.transfer_markers",
    "cls",
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector._matches_prefix_or_glob_option": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "_pytest.python.fnmatch"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.classnamefilter": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.collect": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "_pytest.python.inspect",
    "getattr",
    "isinstance",
    "list",
    "obj"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.funcnamefilter": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.isnosetest": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "_pytest.compat.safe_getattr",
    "obj"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.istestclass": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "obj"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.istestfunction": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "_pytest.compat.safe_getattr",
    "_pytest.fixtures.getfixturemarker",
    "isinstance",
    "obj",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.makeitem": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "obj"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjContext": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "_pytest.python.pyobj_property",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python.PyobjMixin": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "_pytest.python.PyobjContext",
    "obj"
   ]
  },
  "type": "class"
 },
 "_pytest.python.PyobjMixin._getfslineno": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "_pytest.compat.getfslineno"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin._getobj": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.getmodpath": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Module",
    "_pytest.python.os",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj.fget": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj.fset": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.reportinfo": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_pytest.compat.getfslineno",
    "_pytest.python.sys",
    "getattr",
    "int",
    "isinstance",
    "obj",
    "obj.__module__.__file__"
   ]
  },
  "type": "function"
 },
 "_pytest.python.REGEX_TYPE": {
  "data": {
   "shadows": "_pytest.compat.REGEX_TYPE"
  },
  "type": "import"
 },
 "_pytest.python.STRING_TYPES": {
  "data": {
   "shadows": "_pytest.compat.STRING_TYPES"
  },
  "type": "import"
 },
 "_pytest.python._ascii_escaped": {
  "data": {
   "shadows": "_pytest.compat._ascii_escaped"
  },
  "type": "import"
 },
 "_pytest.python._find_parametrized_scope": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "_pytest.fixtures.scopes",
    "isinstance",
    "len",
    "list",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.python._get_xunit_func": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "_pytest.fixtures.getfixturemarker",
    "getattr",
    "obj"
   ]
  },
  "type": "function"
 },
 "_pytest.python._get_xunit_setup_teardown": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "_get_xunit_func",
    "_pytest.python.inspect",
    "result"
   ]
  },
  "type": "function"
 },
 "_pytest.python._idval": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Exception",
    "_pytest.compat.NoneType",
    "_pytest.compat.REGEX_TYPE",
    "_pytest.compat.STRING_TYPES",
    "_pytest.compat._ascii_escaped",
    "_pytest.compat.enum",
    "_pytest.compat.enum.Enum",
    "_pytest.compat.isclass",
    "_pytest.python.warnings",
    "bool",
    "float",
    "hasattr",
    "idfn",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python._idvalset": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "_pytest.compat._ascii_escaped",
    "_pytest.python._idval",
    "idfn",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.python._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.python._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.python._show_fixtures_per_test": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "_pytest.python._pytest",
    "_pytest.python.py",
    "write_item"
   ]
  },
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.get_best_rel": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "_pytest.compat.getlocation"
   ]
  },
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_fixture": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "get_best_rel",
    "write_docstring"
   ]
  },
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_item": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "get_best_rel",
    "sorted",
    "write_fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.python._showfixtures_main": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "_pytest.compat.getlocation",
    "_pytest.python._pytest",
    "_pytest.python.py",
    "len",
    "set",
    "write_docstring"
   ]
  },
  "type": "function"
 },
 "_pytest.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.python.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "_pytest.python.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "_pytest.python.cutdir1": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.python.cutdir2": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.python.cutdir3": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.python.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "_pytest.python.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.python.enum": {
  "data": {
   "shadows": "_pytest.compat.enum"
  },
  "type": "import"
 },
 "_pytest.python.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.python.filter_traceback": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_pytest.python.cutdir1",
    "_pytest.python.cutdir2",
    "_pytest.python.cutdir3",
    "_pytest.python.py"
   ]
  },
  "type": "function"
 },
 "_pytest.python.fixtures": {
  "data": {
   "shadows": "_pytest.fixtures"
  },
  "type": "import"
 },
 "_pytest.python.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.python.get_real_func": {
  "data": {
   "shadows": "_pytest.compat.get_real_func"
  },
  "type": "import"
 },
 "_pytest.python.getfslineno": {
  "data": {
   "shadows": "_pytest.compat.getfslineno"
  },
  "type": "import"
 },
 "_pytest.python.getlocation": {
  "data": {
   "shadows": "_pytest.compat.getlocation"
  },
  "type": "import"
 },
 "_pytest.python.hasinit": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "getattr",
    "obj",
    "object.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.python.hasnew": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "getattr",
    "obj",
    "object.__new__"
   ]
  },
  "type": "function"
 },
 "_pytest.python.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.python.idmaker": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "_pytest.python._idvalset",
    "_pytest.python.collections",
    "enumerate",
    "idfn",
    "len",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.python.is_generator": {
  "data": {
   "shadows": "_pytest.compat.is_generator"
  },
  "type": "import"
 },
 "_pytest.python.isclass": {
  "data": {
   "shadows": "_pytest.compat.isclass"
  },
  "type": "import"
 },
 "_pytest.python.isfunction": {
  "data": {
   "shadows": "_pytest.compat.isfunction"
  },
  "type": "import"
 },
 "_pytest.python.main": {
  "data": {
   "shadows": "_pytest.main"
  },
  "type": "import"
 },
 "_pytest.python.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.python.pluggy": {
  "data": {
   "shadows": "_pytest._pluggy"
  },
  "type": "import"
 },
 "_pytest.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.python.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.python.pyobj_property": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pyobj_property.get": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "__import__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_addoption": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "_pytest.python.pytest_cmdline_main": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "show_fixtures_per_test",
    "showfixtures"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_collect_file": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "_pytest.python.pytest_configure": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "_pytest.python.pytest_generate_tests": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.mark.MarkerError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_make_parametrize_id": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Class",
    "Generator",
    "_pytest.compat.get_real_func",
    "_pytest.compat.is_generator",
    "_pytest.compat.isclass",
    "_pytest.compat.isfunction",
    "_pytest.config.hookimpl",
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makemodule": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Module"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_pyfunc_call": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "testfunction"
   ]
  },
  "type": "function"
 },
 "_pytest.python.safe_getattr": {
  "data": {
   "shadows": "_pytest.compat.safe_getattr"
  },
  "type": "import"
 },
 "_pytest.python.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest.python.saferepr": {
  "data": {
   "shadows": "py.io.saferepr"
  },
  "type": "import"
 },
 "_pytest.python.scope2index": {
  "data": {
   "shadows": "_pytest.fixtures.scope2index"
  },
  "type": "import"
 },
 "_pytest.python.scopes": {
  "data": {
   "shadows": "_pytest.fixtures.scopes"
  },
  "type": "import"
 },
 "_pytest.python.show_fixtures_per_test": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.python.showfixtures": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.python.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.python.transfer_markers": {
  "data": {
   "shadows": "_pytest.mark.transfer_markers"
  },
  "type": "import"
 },
 "_pytest.python.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.python.wrap_session": {
  "data": {
   "shadows": "_pytest.main.wrap_session"
  },
  "type": "import"
 },
 "_pytest.python.write_docstring": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api": {
  "data": {
   "symbols_in_volume": [
    "_pytest.outcomes.fail.Exception",
    "_pytest.python_api.raises"
   ]
  },
  "type": "module"
 },
 "_pytest.python_api.ApproxBase": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_pytest.python_api._cmp_raises_type_error",
    "_pytest.python_api.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxBase.__eq__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__ne__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__repr__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._approx_scalar": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ApproxScalar"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._yield_comparisons": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping.__eq__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping.__repr__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._yield_comparisons": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase",
    "_pytest.python_api._cmp_raises_type_error",
    "_pytest.python_api.sys"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxNumpy.__eq__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.python_api.ApproxBase",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy.__repr__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy._yield_comparisons": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.ndindex"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxScalar.__eq__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.python_api.math",
    "abs"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.__repr__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.python_api.math",
    "_pytest.python_api.sys",
    "complex",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.python_api.math",
    "abs",
    "max",
    "property",
    "set_default"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance.set_default": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxSequence.__eq__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence.__repr__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "list",
    "seq_type",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence._yield_comparisons": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "_pytest.compat.izip"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "_pytest.python_api.RaisesContext": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.RaisesContext.__enter__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "object.__new__"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__exit__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "BaseException",
    "_pytest.outcomes.fail",
    "_pytest.python_api.sys",
    "exc_type",
    "isinstance",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__init__": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "_pytest.python_api.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "_pytest.python_api.String": {
  "data": {
   "shadows": "_pytest.compat.STRING_TYPES"
  },
  "type": "import"
 },
 "_pytest.python_api._cmp_raises_type_error": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api._is_numpy_array": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.python_api.inspect",
    "cls",
    "cls.__module__",
    "isinstance",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.python_api.approx": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "_is_numpy_array",
    "_pytest.compat.STRING_TYPES",
    "_pytest.python_api.ApproxMapping",
    "_pytest.python_api.ApproxNumpy",
    "_pytest.python_api.ApproxScalar",
    "_pytest.python_api.ApproxSequence",
    "abs",
    "cls",
    "collections.Mapping",
    "collections.Sequence",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.python_api.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.python_api.isclass": {
  "data": {
   "shadows": "_pytest.compat.isclass"
  },
  "type": "import"
 },
 "_pytest.python_api.izip": {
  "data": {
   "shadows": "_pytest.compat.izip"
  },
  "type": "import"
 },
 "_pytest.python_api.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "_pytest.python_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "_pytest.python_api.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.python_api.raises": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "RaisesContext",
    "TypeError",
    "_pytest.compat.isclass",
    "_pytest.outcomes.fail",
    "_pytest.python_api.py",
    "_pytest.python_api.sys",
    "func",
    "isinstance",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.recwarn": {
  "data": {},
  "type": "module"
 },
 "_pytest.recwarn.WarningsChecker": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_pytest.recwarn.WarningsRecorder"
   ]
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsChecker.__exit__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "_pytest.recwarn.WarningsChecker",
    "all",
    "any",
    "issubclass",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsChecker.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.recwarn.WarningsChecker",
    "_pytest.recwarn.inspect",
    "isinstance",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_pytest.recwarn.warnings"
   ]
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.recwarn.WarningsRecorder",
    "_pytest.recwarn.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__exit__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.recwarn.WarningsRecorder",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__getitem__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "_pytest.recwarn.WarningsRecorder",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__iter__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__len__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.clear": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.list": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.pop": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AssertionError",
    "Warning",
    "enumerate",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.recwarn._DeprecatedCallContext.__enter__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "_pytest.recwarn.warnings"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext.__exit__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "AssertionError",
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "_pytest.recwarn.warnings",
    "any",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext._warn": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Warning",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext._warn_explicit": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "_pytest.recwarn._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.recwarn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.recwarn.deprecated_call": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_DeprecatedCallContext",
    "func"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.recwarn.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.recwarn.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.recwarn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.recwarn.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.recwarn.recwarn": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "WarningsRecorder",
    "_pytest.fixtures.yield_fixture",
    "_pytest.recwarn.warnings"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.recwarn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.recwarn.warns": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "WarningsChecker",
    "_pytest.recwarn.py",
    "_pytest.recwarn.sys",
    "func",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 },
 "_pytest.resultlog": {
  "data": {},
  "type": "module"
 },
 "_pytest.resultlog.RESULT_LOG": {
  "data": {
   "shadows": "_pytest.deprecated.RESULT_LOG"
  },
  "type": "import"
 },
 "_pytest.resultlog.ResultLog": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_pytest.resultlog.py",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.resultlog.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.resultlog.generic_path": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "_pytest.resultlog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.resultlog.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.resultlog.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.resultlog.pytest_addoption": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ResultLog",
    "_pytest.deprecated.RESULT_LOG",
    "_pytest.resultlog.os",
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner": {
  "data": {},
  "type": "module"
 },
 "_pytest.runner.BaseReport": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.BaseReport.__init__": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.capstderr": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.capstdout": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.fspath": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.get_sections": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.longreprtext": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "_pytest.runner.py",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.toterminal": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "_pytest.runner.getslaveinfoline",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CallInfo": {
  "data": {
   "lineno": 180
  },
  "type": "class"
 },
 "_pytest.runner.CallInfo.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "_pytest._code.code.ExceptionInfo",
    "func",
    "time.time"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CallInfo.__repr__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CollectErrorRepr": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.CollectErrorRepr.__init__": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "_pytest.runner.CollectErrorRepr.toterminal": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "_pytest.runner.CollectReport": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "_pytest.runner.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.CollectReport.__init__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CollectReport.__repr__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CollectReport.location": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.runner.NodeInfo": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "_pytest.runner.NodeInfo.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "_pytest.runner.SetupState": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.SetupState.__init__": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._callfinalizers": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "_pytest.runner.py",
    "_pytest.runner.sys",
    "fin"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._pop_and_teardown": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_towards": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_with_finalization": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.addfinalizer": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "_pytest.runner.py",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.prepare": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "_pytest.runner.py",
    "_pytest.runner.sys",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_all": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_exact": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "_pytest.runner.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "_pytest.runner.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.runner.TeardownErrorReport": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "_pytest.runner.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.TeardownErrorReport.__init__": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "_pytest.runner.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.runner.TestReport": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "_pytest.runner.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.TestReport.__init__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.TestReport.__repr__": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "_pytest.runner._update_current_test_var": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "_pytest.runner.os"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.runner.bdb": {
  "data": {
   "shadows": "bdb"
  },
  "type": "import"
 },
 "_pytest.runner.call_and_report": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "call_runtest_hook",
    "check_interactive_exception"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.call_runtest_hook": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "CallInfo",
    "getattr",
    "ihook"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.check_interactive_exception": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_pytest.outcomes.skip.Exception",
    "_pytest.runner.bdb",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.collect_one_node": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "_pytest.runner.check_interactive_exception",
    "ihook",
    "ihook.pytest_collectstart",
    "ihook.pytest_exception_interact",
    "ihook.pytest_make_collect_report"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.runner.getslaveinfoline": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.nose": {
  "data": {
   "shadows": "_pytest.nose"
  },
  "type": "import"
 },
 "_pytest.runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.runner.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.runner.pytest_addoption": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_make_collect_report": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "CollectErrorRepr",
    "CollectReport",
    "_pytest.nose.get_skip_exceptions",
    "_pytest.outcomes.Skipped",
    "_pytest.runner.CallInfo",
    "getattr",
    "hasattr",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_report_teststatus": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_call": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "_pytest.runner.sys",
    "_update_current_test_var",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_makereport": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "TestReport",
    "_pytest._code.code.ExceptionInfo",
    "_pytest.outcomes.skip.Exception",
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_protocol": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "runtestprotocol"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_setup": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "_update_current_test_var"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_teardown": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "_update_current_test_var"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_sessionfinish": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "_pytest.runner.pytest_sessionstart": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "SetupState"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_terminal_summary": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.runtestprotocol": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "call_and_report",
    "hasattr",
    "show_test_item"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.show_test_item": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.runner.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "_pytest.setuponly": {
  "data": {},
  "type": "module"
 },
 "_pytest.setuponly._show_fixture_action": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_pytest.setuponly.sys",
    "hasattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.setuponly.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.setuponly.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.setuponly.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.setuponly.pytest_addoption": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "_pytest.setuponly.pytest_cmdline_main": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_pytest.setuponly.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_post_finalizer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_show_fixture_action",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_setup": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_pytest.setuponly.pytest",
    "_show_fixture_action",
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.setupplan": {
  "data": {},
  "type": "module"
 },
 "_pytest.setupplan.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.setupplan.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.setupplan.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest_addoption": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping": {
  "data": {},
  "type": "module"
 },
 "_pytest.skipping.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.MarkDecorator"
  },
  "type": "import"
 },
 "_pytest.skipping.MarkEvaluator": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "_pytest.skipping.MarkEvaluator.__bool__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator._getglobals": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_pytest.skipping.os",
    "_pytest.skipping.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator._istrue": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "_pytest.skipping.py",
    "bool",
    "cached_eval",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.get": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.getexplanation": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.holder": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.invalidraise": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.istrue": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest.outcomes.TEST_OUTCOME",
    "_pytest.outcomes.fail",
    "_pytest.skipping.sys",
    "_pytest.skipping.traceback",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkEvaluator.wasvalid": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.MarkInfo": {
  "data": {
   "shadows": "_pytest.mark.MarkInfo"
  },
  "type": "import"
 },
 "_pytest.skipping.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.skipping._is_unittest_unexpected_success_a_failure": {
  "data": {
   "shadows": "_pytest.compat._is_unittest_unexpected_success_a_failure"
  },
  "type": "import"
 },
 "_pytest.skipping._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.skipping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.skipping.cached_eval": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "KeyError",
    "eval",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.check_strict_xfail": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "_pytest.outcomes.fail"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.check_xfail_no_run": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "_pytest.outcomes.xfail"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.skipping.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.skipping.folded_skips": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "events",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.skipping.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.skipping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.skipping.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.skipping.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.skipping.pytest_addoption": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_configure": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest.outcomes.xfail.Exception",
    "_pytest.skipping.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_configure.nop": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_pyfunc_call": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "check_strict_xfail",
    "check_xfail_no_run"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_report_teststatus": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_makereport": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "_pytest.compat._is_unittest_unexpected_success_a_failure",
    "_pytest.config.hookimpl",
    "_pytest.outcomes.xfail.Exception",
    "getattr",
    "hasattr",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_setup": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "_pytest.mark.MarkDecorator",
    "_pytest.mark.MarkInfo",
    "_pytest.outcomes.skip",
    "_pytest.skipping.MarkEvaluator",
    "check_xfail_no_run",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_terminal_summary": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "show_simple",
    "show_skipped",
    "show_xfailed",
    "show_xpassed"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.show_simple": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "format"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.show_skipped": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "_pytest.skipping.folded_skips"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.show_xfailed": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.show_xpassed": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "_pytest.skipping.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.skipping.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.skipping.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.skipping.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "_pytest.terminal": {
  "data": {},
  "type": "module"
 },
 "_pytest.terminal.EXIT_INTERRUPTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_INTERRUPTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_NOTESTSCOLLECTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_OK": {
  "data": {
   "shadows": "_pytest.main.EXIT_OK"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_TESTSFAILED": {
  "data": {
   "shadows": "_pytest.main.EXIT_TESTSFAILED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_USAGEERROR": {
  "data": {
   "shadows": "_pytest.main.EXIT_USAGEERROR"
  },
  "type": "import"
 },
 "_pytest.terminal.TerminalReporter": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "_pytest.terminal.TerminalReporter.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_pytest.terminal.getreportopt",
    "_pytest.terminal.py",
    "_pytest.terminal.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getcrashline": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "AttributeError",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getfailureheadline": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "mkrel"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline.mkrel": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._outrep_summary": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._printcollecteditems": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._report_keyboardinterrupt": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_report_lines_from_hooks": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "flatten"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.ensure_newline": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.getreports": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.hasopt": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.line": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.print_teardown_sections": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_finish": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_modifyitems": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collectreport": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "_pytest.terminal.pytest",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_deselected": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_internalerror": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "_pytest.terminal.py"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_logwarning": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "_pytest.terminal.WarningReport"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_plugin_registered": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_report_header": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "_plugin_nameversions"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logreport": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logstart": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionfinish": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main.EXIT_TESTSFAILED",
    "_pytest.main.EXIT_USAGEERROR",
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionstart": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "_pytest._pluggy.__version__",
    "_pytest.terminal.platform",
    "_pytest.terminal.py",
    "_pytest.terminal.pytest",
    "_pytest.terminal.sys",
    "_pytest.terminal.time",
    "getattr",
    "hasattr",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_unconfigure": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.report_collect": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.rewrite": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.section": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_deselected": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_errors": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_failures": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_passes": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_stats": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "_pytest.terminal.time",
    "build_summary_stats_line"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "_pytest.terminal.itertools",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_ensure_prefix": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_fspath_result": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_line": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_pytest.terminal.py"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_sep": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "_pytest.terminal.WarningReport": {
  "data": {
   "lineno": 90
  },
  "type": "class"
 },
 "_pytest.terminal.WarningReport.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "_pytest.terminal.WarningReport.get_location": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_pytest.terminal.py",
    "isinstance",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal._plugin_nameversions": {
  "data": {
   "lineno": 626
  },
  "type": "function"
 },
 "_pytest.terminal._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.terminal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.terminal.build_summary_stats_line": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.terminal.flatten": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.getreportopt": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "_pytest.terminal.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.terminal.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.terminal.pluggy": {
  "data": {
   "shadows": "_pytest._pluggy"
  },
  "type": "import"
 },
 "_pytest.terminal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.terminal.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest_addoption": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TerminalReporter",
    "_pytest.terminal.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure.mywriter": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_report_teststatus": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "_pytest.terminal.repr_pythonversion": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_pytest.terminal.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.terminal.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.tmpdir": {
  "data": {
   "symbols_in_volume": [
    "_pytest.tmpdir.TempdirFactory"
   ]
  },
  "type": "module"
 },
 "_pytest.tmpdir.MonkeyPatch": {
  "data": {
   "shadows": "_pytest.monkeypatch.MonkeyPatch"
  },
  "type": "import"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.ensuretemp": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.finish": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.tmpdir.py",
    "get_user"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_pytest.tmpdir.py"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirHandler": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "_pytest.tmpdir.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.tmpdir.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.tmpdir.get_user": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "_pytest.tmpdir.getpass"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "_pytest.tmpdir.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.tmpdir.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest_configure": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "_pytest.tmpdir.TempdirFactory",
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tmpdir": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest",
    "_pytest.tmpdir.re",
    "_pytest.tmpdir.tmpdir_factory",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest": {
  "data": {},
  "type": "module"
 },
 "_pytest.unittest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "_pytest.unittest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "_pytest.unittest.IReporter": {
  "data": {
   "shadows": "twisted.trial.itrial.IReporter"
  },
  "type": "import"
 },
 "_pytest.unittest.MarkEvaluator": {
  "data": {
   "shadows": "_pytest.skipping.MarkEvaluator"
  },
  "type": "import"
 },
 "_pytest.unittest.Module": {
  "data": {
   "shadows": "_pytest.python.Module"
  },
  "type": "import"
 },
 "_pytest.unittest.TestCaseFunction": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_pytest.python.Function"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "TypeError",
    "_pytest.outcomes.fail",
    "_pytest.outcomes.fail.Exception",
    "_pytest.unittest.traceback",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._fix_unittest_skip_decorator": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.unittest.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._handle_skip": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.unittest.sys",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.python.Function._prunetraceback",
    "_pytest.unittest.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "_pytest.outcomes.xfail",
    "_pytest.outcomes.xfail.Exception",
    "_pytest.unittest.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_pytest.outcomes.skip",
    "_pytest.outcomes.skip.Exception",
    "_pytest.skipping.MarkEvaluator",
    "_pytest.unittest.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestLoader": {
  "data": {
   "shadows": "unittest.TestLoader"
  },
  "type": "import"
 },
 "_pytest.unittest.UnitTestCase": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_pytest.python.Class"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TestCaseFunction",
    "_pytest.python.Module",
    "_pytest.python.transfer_markers",
    "_pytest.unittest.sys",
    "getattr",
    "unittest.TestLoader"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.setup": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_pytest.unittest.UnitTestCase",
    "getattr",
    "setup",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.unittest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "_pytest.unittest.TestCaseFunction",
    "twisted.trial.itrial.IReporter",
    "zope.interface.classImplements"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.classImplements": {
  "data": {
   "shadows": "zope.interface.classImplements"
  },
  "type": "import"
 },
 "_pytest.unittest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.unittest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.unittest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.unittest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception",
    "UnitTestCase",
    "_pytest.unittest.sys",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.config.hookimpl",
    "_pytest.unittest.TestCaseFunction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Failure__init__",
    "_pytest.config.hookimpl",
    "_pytest.unittest.TestCaseFunction",
    "_pytest.unittest.sys",
    "check_testcase_implements_trial_reporter",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Failure__init__",
    "TypeError",
    "_pytest.unittest.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.unittest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.unittest.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.unittest.transfer_markers": {
  "data": {
   "shadows": "_pytest.python.transfer_markers"
  },
  "type": "import"
 },
 "_pytest.unittest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "_pytest.vendored_packages": {
  "data": {},
  "type": "module"
 },
 "_pytest.vendored_packages.pluggy": {
  "data": {
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy._py3",
    "_pytest.vendored_packages.pluggy.inspect",
    "_pytest.vendored_packages.pluggy.sys",
    "exec",
    "hasattr"
   ]
  },
  "type": "module"
 },
 "_pytest.vendored_packages.pluggy.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "_pytest.vendored_packages.pluggy.HookCallError": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookImpl": {
  "data": {
   "lineno": 773
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookImpl.__init__": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy.varnames",
    "self.__dict__.update",
    "self.argnames",
    "self.function",
    "self.opts",
    "self.plugin",
    "self.plugin_name"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker": {
  "data": {
   "lineno": 116
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker.__call__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "setattr_hookimpl_opts"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker.__call__.setattr_hookimpl_opts": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "dict",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookimplMarker.__init__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker.__call__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "setattr_hookspec_opts"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker.__call__.setattr_hookspec_opts": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.HookspecMarker.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.__init__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "_HookRelay",
    "_MultiCall",
    "_pytest.vendored_packages.pluggy._TagTracer"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager._hookexec": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager._verify_hook": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "PluginValidationError",
    "_formatdef"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.add_hookcall_monitoring": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy._TracedHookExecution"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.add_hookspecs": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "_HookCaller",
    "dir",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.check_pending": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "PluginValidationError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.enable_tracing": {
  "data": {
   "lineno": 548
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.enable_tracing.after": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "hooktrace",
    "hooktrace.root.indent"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.enable_tracing.before": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "hooktrace"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_canonical_name": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "getattr",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_hookcallers": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_name": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_plugin": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.get_plugins": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.has_plugin": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.is_blocked": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.is_registered": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.list_name_plugin": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.list_plugin_distinfo": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.load_setuptools_entrypoints": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "PluginValidationError",
    "len",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.VersionConflict",
    "pkg_resources.iter_entry_points"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.parse_hookimpl_opts": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.parse_hookspec_opts": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.register": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "HookImpl",
    "ValueError",
    "_HookCaller",
    "_pytest.vendored_packages.pluggy.normalize_hookimpl_opts",
    "dir",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.set_blocked": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.subset_hook_caller": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "_HookCaller",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginManager.unregister": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.PluginValidationError": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy.VersionConflict": {
  "data": {
   "shadows": "pkg_resources.VersionConflict"
  },
  "type": "import"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "BaseException",
    "_pytest.vendored_packages.pluggy.sys",
    "func"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome.force_result": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._CallOutcome.get_result": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy._py3",
    "_reraise"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.__call__": {
  "data": {
   "lineno": 743
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.__init__": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.__repr__": {
  "data": {
   "lineno": 740
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._add_hookimpl": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._maybe_apply_history": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "proc",
    "self",
    "self._call_history",
    "self._hookexec",
    "self.is_historic"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._remove_plugin": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "ValueError",
    "remove"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller._remove_plugin.remove": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.call_extra": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "HookImpl",
    "dict",
    "list",
    "self",
    "self._nonwrappers",
    "self._wrappers"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.call_historic": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.has_spec": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.is_historic": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookCaller.set_specification": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy.inspect",
    "_pytest.vendored_packages.pluggy.varnames",
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._HookRelay": {
  "data": {
   "lineno": 676
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._HookRelay.__init__": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._MultiCall": {
  "data": {
   "lineno": 583
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._MultiCall.__init__": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._MultiCall.__repr__": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._MultiCall.execute": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "HookCallError",
    "KeyError",
    "_pytest.vendored_packages.pluggy._wrapped_call"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer": {
  "data": {
   "lineno": 170
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.__init__": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.format_message": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.get": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_TagTracerSub"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.processmessage": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.setprocessor": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracer.setwriter": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.__call__": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.__init__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.get": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TagTracerSub.setmyprocessor": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution": {
  "data": {
   "lineno": 289
  },
  "type": "class"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution.__call__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy._CallOutcome"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy._TracedHookExecution",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._TracedHookExecution.undo": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.__all__": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "_pytest.vendored_packages.pluggy.__version__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "_pytest.vendored_packages.pluggy._formatdef": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "_pytest.vendored_packages.pluggy.inspect",
    "func",
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._py3": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "_pytest.vendored_packages.pluggy._raise_wrapfail": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy._wrapped_call": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "StopIteration",
    "_CallOutcome",
    "_pytest.vendored_packages.pluggy._raise_wrapfail",
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.vendored_packages.pluggy.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "_pytest.vendored_packages.pluggy.normalize_hookimpl_opts": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "_pytest.vendored_packages.pluggy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.vendored_packages.pluggy.varnames": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "KeyError",
    "TypeError",
    "_pytest.vendored_packages.pluggy.inspect",
    "func",
    "func.__code__",
    "func.__defaults__",
    "func.__init__",
    "getattr",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings": {
  "data": {},
  "type": "module"
 },
 "_pytest.warnings._setoption": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.warnings.catch_warnings_for_item": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "UnicodeWarning",
    "_pytest.compat.UNICODE_TYPES",
    "_pytest.compat._PY2",
    "_pytest.compat.safe_str",
    "_pytest.warnings._setoption",
    "_pytest.warnings.warnings",
    "any",
    "contextlib.contextmanager",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.compat": {
  "data": {
   "shadows": "_pytest.compat"
  },
  "type": "import"
 },
 "_pytest.warnings.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.warnings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.warnings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest_addoption": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_runtest_protocol": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_pytest.warnings.catch_warnings_for_item",
    "_pytest.warnings.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pytest": {
  "data": {
   "symbols_in_volume": [
    "SystemExit",
    "__name__",
    "_pytest.compat._setup_collect_fakemodule",
    "_pytest.config._preloadplugins",
    "_pytest.debugging.pytestPDB.set_trace",
    "pytest.pytest"
   ]
  },
  "type": "module"
 },
 "pytest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "pytest.Collector": {
  "data": {
   "shadows": "_pytest.main.Collector"
  },
  "type": "import"
 },
 "pytest.File": {
  "data": {
   "shadows": "_pytest.main.File"
  },
  "type": "import"
 },
 "pytest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "pytest.Generator": {
  "data": {
   "shadows": "_pytest.python.Generator"
  },
  "type": "import"
 },
 "pytest.Instance": {
  "data": {
   "shadows": "_pytest.python.Instance"
  },
  "type": "import"
 },
 "pytest.Item": {
  "data": {
   "shadows": "_pytest.main.Item"
  },
  "type": "import"
 },
 "pytest.Module": {
  "data": {
   "shadows": "_pytest.python.Module"
  },
  "type": "import"
 },
 "pytest.Session": {
  "data": {
   "shadows": "_pytest.main.Session"
  },
  "type": "import"
 },
 "pytest.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "pytest.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pytest.__pytestPDB": {
  "data": {
   "shadows": "_pytest.debugging.pytestPDB"
  },
  "type": "import"
 },
 "pytest.__version__": {
  "data": {
   "shadows": "_pytest.__version__"
  },
  "type": "import"
 },
 "pytest._fillfuncargs": {
  "data": {
   "shadows": "_pytest.fixtures.fillfixtures"
  },
  "type": "import"
 },
 "pytest._preloadplugins": {
  "data": {
   "shadows": "_pytest.config._preloadplugins"
  },
  "type": "import"
 },
 "pytest._setup_collect_fakemodule": {
  "data": {
   "shadows": "_pytest.compat._setup_collect_fakemodule"
  },
  "type": "import"
 },
 "pytest.approx": {
  "data": {
   "shadows": "_pytest.python_api.approx"
  },
  "type": "import"
 },
 "pytest.cmdline": {
  "data": {
   "shadows": "_pytest.config.cmdline"
  },
  "type": "import"
 },
 "pytest.deprecated_call": {
  "data": {
   "shadows": "_pytest.recwarn.deprecated_call"
  },
  "type": "import"
 },
 "pytest.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "pytest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "pytest.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "pytest.freeze_includes": {
  "data": {
   "shadows": "_pytest.freeze_support.freeze_includes"
  },
  "type": "import"
 },
 "pytest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "pytest.hookspec": {
  "data": {
   "shadows": "_pytest.config.hookspec"
  },
  "type": "import"
 },
 "pytest.importorskip": {
  "data": {
   "shadows": "_pytest.outcomes.importorskip"
  },
  "type": "import"
 },
 "pytest.main": {
  "data": {
   "shadows": "_pytest.config.main"
  },
  "type": "import"
 },
 "pytest.mark": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "pytest.param": {
  "data": {
   "shadows": "_pytest.mark.param"
  },
  "type": "import"
 },
 "pytest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest.raises": {
  "data": {
   "shadows": "_pytest.python_api.raises"
  },
  "type": "import"
 },
 "pytest.register_assert_rewrite": {
  "data": {
   "shadows": "_pytest.assertion.register_assert_rewrite"
  },
  "type": "import"
 },
 "pytest.set_trace": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pytest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "pytest.warns": {
  "data": {
   "shadows": "_pytest.recwarn.warns"
  },
  "type": "import"
 },
 "pytest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "pytest.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 }
}