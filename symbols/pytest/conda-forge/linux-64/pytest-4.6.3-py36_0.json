{
 "_pytest": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "_pytest.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "_pytest.__version__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "_pytest._argcomplete": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest._argcomplete.FastFilesCompleter",
    "_pytest._argcomplete.os",
    "_pytest._argcomplete.sys"
   ]
  },
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_pytest._argcomplete.os",
    "glob.glob",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "_pytest._argcomplete.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._argcomplete.argcomplete.completers": {
  "data": {
   "shadows": "argcomplete.completers"
  },
  "type": "import"
 },
 "_pytest._argcomplete.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._argcomplete.filescompleter": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "_pytest._argcomplete.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "_pytest._argcomplete.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest._argcomplete.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._argcomplete.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "_pytest._code": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback._format_final_exc_line": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "_some_str"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback._some_str": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "six.text_type",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.format_exception_only": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "SyntaxError",
    "_format_final_exc_line",
    "_pytest._code._py2traceback.types",
    "bytes",
    "isinstance",
    "issubclass",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "_pytest._code.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code.code": {
  "data": {
   "symbols_in_volume": [
    "_pytest._code.code._PLUGGY_DIR",
    "_pytest._code.code._pytest",
    "_pytest._code.code.pluggy",
    "_pytest._code.code.py",
    "_pytest.compat.PY35",
    "_pytest.compat._PY3",
    "compile"
   ]
  },
  "type": "module"
 },
 "_pytest._code.code.CO_VARARGS": {
  "data": {
   "shadows": "inspect.CO_VARARGS"
  },
  "type": "import"
 },
 "_pytest._code.code.CO_VARKEYWORDS": {
  "data": {
   "shadows": "inspect.CO_VARKEYWORDS"
  },
  "type": "import"
 },
 "_pytest._code.code.Code": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.Code.__eq__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "_pytest._code.code.Code.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "getrawcode",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.__ne__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "_pytest._code.code.Code.fullsource": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_pytest._code.source.findsource",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.getargs": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "inspect.CO_VARARGS",
    "inspect.CO_VARKEYWORDS"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.path": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "OSError",
    "_pytest._code.code.py",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Code.source": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "_pytest._code.code._pytest"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ExceptionChainRepr.__init__": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionChainRepr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr.toterminal": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionChainRepr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "_pytest._code.code.attr",
    "_pytest.compat._PY2",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ExceptionInfo.__repr__": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__str__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ReprFileLocation",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__unicode__": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ReprFileLocation",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo._getreprcrash": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ReprFileLocation"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.errisinstance": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.exconly": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "traceback.format_exception_only"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.for_later": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.from_current": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "AssertionError",
    "_pytest._code.code.sys",
    "_pytest._io.saferepr.saferepr",
    "classmethod",
    "cls",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.getrepr": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "FormattedExcinfo",
    "ReprExceptionInfo",
    "ReprTracebackNative",
    "_pytest._code.code.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.match": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "_pytest._code.code.re",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.tb": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.traceback": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "_pytest._code.code.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.type": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.typename": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.value": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ExceptionRepr.__init__": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.addsection": {
  "data": {
   "lineno": 860
  },
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.toterminal": {
  "data": {
   "lineno": 863
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "_pytest._code.code.attr",
    "dict",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.FormattedExcinfo._getentrysource": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "_pytest._code.source",
    "_pytest._code.source.deindent"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._getindent": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "_pytest._code.source",
    "_pytest._code.source.getstatement",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._makepath": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "OSError",
    "_pytest._code.code.py",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._truncate_recursive_traceback": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "Exception",
    "_pytest._code.code.traceback",
    "_pytest.compat.safe_str",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_exconly": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_source": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "_pytest._code.code._pytest",
    "_pytest._code.source",
    "_pytest._code.source.lines",
    "_pytest._code.source.lines.strip",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_args": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ReprFuncArgs",
    "_pytest._io.saferepr.saferepr"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_excinfo": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "ExceptionChainRepr",
    "ReprExceptionInfo",
    "ReprTracebackNative",
    "_pytest._code.code.ExceptionInfo",
    "_pytest._code.code.traceback",
    "_pytest.compat._PY2",
    "id",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_locals": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "ReprLocals",
    "_pytest._io.saferepr.safeformat",
    "_pytest._io.saferepr.saferepr",
    "locals"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "ReprTraceback",
    "_pytest._code.code.traceback",
    "enumerate",
    "is_recursion_error"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback_entry": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "ReprEntry",
    "ReprFileLocation",
    "_pytest._code.code._pytest",
    "_pytest._code.source",
    "max"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.Frame.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "_pytest._code.code.Code"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.eval": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "eval",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.exec_": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "exec",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.getargs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.is_true": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.repr": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Frame.statement": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_pytest._code.code._pytest",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.PY35": {
  "data": {
   "shadows": "_pytest.compat.PY35"
  },
  "type": "import"
 },
 "_pytest._code.code.ReprEntry": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprEntry.__init__": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.__str__": {
  "data": {
   "lineno": 971
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.toterminal": {
  "data": {
   "lineno": 950
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprEntryNative.__init__": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative.toterminal": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprExceptionInfo.__init__": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "_pytest._code.code.ReprExceptionInfo",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo.toterminal": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "_pytest._code.code.ReprExceptionInfo",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprFileLocation.__init__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation.toterminal": {
  "data": {
   "lineno": 981
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprFuncArgs.__init__": {
  "data": {
   "lineno": 1002
  },
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs.toterminal": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "_pytest.compat.safe_str",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprLocals": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprLocals.__init__": {
  "data": {
   "lineno": 993
  },
  "type": "function"
 },
 "_pytest._code.code.ReprLocals.toterminal": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprTraceback.__init__": {
  "data": {
   "lineno": 901
  },
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback.toterminal": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.ReprTracebackNative": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "_pytest._code.code.ReprTraceback"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.ReprTracebackNative.__init__": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "ReprEntryNative"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.TerminalRepr.__repr__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__str__": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "_pytest.compat._PY2"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__unicode__": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "_pytest._code.code.py"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "_pytest._code.code.TracebackEntry",
    "list"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.Traceback.__getitem__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "_pytest._code.code.Traceback",
    "isinstance",
    "slice",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "f",
    "hasattr",
    "list.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__.f": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.cut": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "_pytest._code.code.Traceback",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.filter": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_pytest._code.code.Traceback",
    "filter"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.getcrashentry": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.Traceback.recursionindex": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "f.eval",
    "f.f_locals",
    "f.is_true",
    "id"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "_pytest._code.source",
    "locals",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "_pytest._code.code.TracebackEntry.__init__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__repr__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__str__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "_pytest._code.code.py",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.frame": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_pytest._code.code._pytest",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getfirstlinesource": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getlocals": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getsource": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest._code.source",
    "_pytest._code.source.getstatementrange_ast"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.ishidden": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "callable",
    "tbh"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.name": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.path": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.relline": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.set_repr_style": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.statement": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "_pytest._code.source",
    "_pytest._code.source.getstatement",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code._PLUGGY_DIR": {
  "data": {
   "lineno": 1066
  },
  "type": "constant"
 },
 "_pytest._code.code._PY2": {
  "data": {
   "shadows": "_pytest.compat._PY2"
  },
  "type": "import"
 },
 "_pytest._code.code._PY3": {
  "data": {
   "shadows": "_pytest.compat._PY3"
  },
  "type": "import"
 },
 "_pytest._code.code._PYTEST_DIR": {
  "data": {
   "lineno": 1067
  },
  "type": "constant"
 },
 "_pytest._code.code._PY_DIR": {
  "data": {
   "lineno": 1068
  },
  "type": "constant"
 },
 "_pytest._code.code._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest._code.code._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest._code.code.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code.code.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest._code.code.co_equal": {
  "data": {
   "lineno": 383
  },
  "type": "constant"
 },
 "_pytest._code.code.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code.code.filter_traceback": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "_pytest._code.code._PLUGGY_DIR",
    "_pytest._code.code._PYTEST_DIR",
    "_pytest._code.code._PY_DIR",
    "_pytest._code.code.py"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.format_exception_only": {
  "data": {
   "shadows": "traceback.format_exception_only"
  },
  "type": "import"
 },
 "_pytest._code.code.getrawcode": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest._code.code.inspect",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.getstatementrange_ast": {
  "data": {
   "shadows": "_pytest._code.source.getstatementrange_ast"
  },
  "type": "import"
 },
 "_pytest._code.code.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest._code.code.is_recursion_error": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "RuntimeError",
    "UnicodeError",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.code.pluggy": {
  "data": {
   "shadows": "pluggy"
  },
  "type": "import"
 },
 "_pytest._code.code.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code.code.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest._code.code.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest._code.code.ref": {
  "data": {
   "shadows": "weakref.ref"
  },
  "type": "import"
 },
 "_pytest._code.code.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest._code.code.safeformat": {
  "data": {
   "shadows": "_pytest._io.saferepr.safeformat"
  },
  "type": "import"
 },
 "_pytest._code.code.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest._code.code.source": {
  "data": {
   "shadows": "_pytest._code.source"
  },
  "type": "import"
 },
 "_pytest._code.code.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._code.code.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "_pytest._code.code.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest._code.compile": {
  "data": {
   "shadows": "compile_"
  },
  "type": "import"
 },
 "_pytest._code.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code.source": {
  "data": {},
  "type": "module"
 },
 "_pytest._code.source.Source": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._code.source.Source.__eq__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__getitem__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "IndexError",
    "_pytest._code.source.Source",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "_pytest._code.source.six",
    "deindent",
    "getsource",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__len__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.__str__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "_pytest._code.source.Source.compile": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest._code.source.linecache",
    "_pytest._code.source.py",
    "_pytest._code.source.sys",
    "ast.PyCF_ONLY_AST",
    "compile"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.deindent": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "deindent"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.getstatement": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "_pytest._code.source.Source.getstatementrange": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "IndexError",
    "_pytest._code.source.ast",
    "getstatementrange_ast",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.indent": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_pytest._code.source.Source"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.isparseable": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "deindent",
    "parser.suite",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.putaround": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest._code.source.Source"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.Source.strip": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source._AST_FLAG": {
  "data": {
   "shadows": "ast.PyCF_ONLY_AST"
  },
  "type": "import"
 },
 "_pytest._code.source.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code.source.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "_pytest._code.source.bisect_right": {
  "data": {
   "shadows": "bisect.bisect_right"
  },
  "type": "import"
 },
 "_pytest._code.source.compile_": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "_pytest._code.source.Source",
    "_pytest._code.source.ast",
    "_pytest._code.source.sys",
    "compile",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.deindent": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "_pytest._code.source.textwrap"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code.source.findsource": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "_pytest._code.source.Source",
    "_pytest._code.source.inspect"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.get_statement_startend2": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "_pytest._code.source.ast",
    "bisect.bisect_right",
    "getattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.getfslineno": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Code",
    "IOError",
    "TypeError",
    "_pytest._code.source.inspect",
    "_pytest._code.source.py",
    "findsource",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.getsource": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "IndentationError",
    "_pytest._code.source.Source",
    "_pytest._code.source.inspect",
    "getrawcode",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.getstatementrange_ast": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception",
    "IndentationError",
    "_pytest._code.source.get_statement_startend2",
    "_pytest._code.source.inspect",
    "_pytest._code.source.tokenize",
    "_pytest._code.source.warnings",
    "ast.PyCF_ONLY_AST",
    "compile",
    "len",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._code.source.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest._code.source.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "_pytest._code.source.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code.source.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest._code.source.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest._code.source.syntax_checker": {
  "data": {
   "shadows": "parser.suite"
  },
  "type": "import"
 },
 "_pytest._code.source.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._code.source.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "_pytest._code.source.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "_pytest._code.source.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest._io": {
  "data": {},
  "type": "module"
 },
 "_pytest._io.saferepr": {
  "data": {},
  "type": "module"
 },
 "_pytest._io.saferepr.SafeRepr": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "six.moves.reprlib.Repr"
   ]
  },
  "type": "class"
 },
 "_pytest._io.saferepr.SafeRepr._callhelper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_pytest._io.saferepr._call_and_format_exception",
    "call",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "six.moves.reprlib.Repr.repr"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_instance": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_unicode": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len",
    "max",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_unicode.repr": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "_pytest._io.saferepr._call_and_format_exception": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception",
    "call",
    "id",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest._io.saferepr.reprlib": {
  "data": {
   "shadows": "six.moves.reprlib"
  },
  "type": "import"
 },
 "_pytest._io.saferepr.safeformat": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_pytest._io.saferepr._call_and_format_exception",
    "_pytest._io.saferepr.pprint"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.saferepr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_pytest._io.saferepr.SafeRepr"
   ]
  },
  "type": "function"
 },
 "_pytest._version": {
  "data": {},
  "type": "module"
 },
 "_pytest._version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "_pytest.assertion": {
  "data": {
   "symbols_in_volume": [
    "_pytest.assertion.util.assertrepr_compare"
   ]
  },
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "_pytest.assertion.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.install_importhook": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "SystemError",
    "_pytest.assertion.AssertionState",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.pytest_addoption": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_assertrepr_compare": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "_pytest.assertion.pytest_collection": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.callbinrepr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_pytest.assertion.six",
    "_pytest.assertion.truncate.truncate_if_required"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_teardown": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "DummyRewriteHook",
    "TypeError",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys",
    "isinstance",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "data": {
   "shadows": "_pytest.assertion.rewrite"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.sys"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewriter",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "data": {
   "lineno": 732
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.is_rewrite_disabled": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "list",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.six",
    "aliases",
    "enumerate",
    "getattr",
    "isinstance",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._NameConstant",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "_pytest.assertion.rewrite.itertools",
    "_pytest.assertion.rewrite.set_location",
    "_pytest.assertion.rewrite.sys",
    "_pytest.assertion.rewrite.warnings",
    "_pytest.warning_types.PytestAssertRewriteWarning",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "enumerate",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_35": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_legacy": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map",
    "isinstance",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.unary_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.warn_about_none_ast": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._early_rewrite_bailout": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.os",
    "_pytest.pathlib.PurePath",
    "_pytest.pathlib.fnmatch_ex",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._imp_find_module": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.imp"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._is_marked_for_rewrite": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestAssertRewriteWarning",
    "_pytest.warnings._issue_warning_captured"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_module": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "ValueError",
    "_pytest.assertion.rewrite.PYC_TAIL",
    "_pytest.assertion.rewrite.errno",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.os",
    "_pytest.assertion.rewrite.py",
    "_pytest.assertion.rewrite.sys",
    "_read_pyc",
    "_rewrite_test",
    "_write_pyc",
    "hasattr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.is_package": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.assertion.rewrite.imp"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.load_module": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.sys",
    "_pytest.compat.spec_from_file_location",
    "exec"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.BOM_UTF8": {
  "data": {
   "lineno": 356
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.N": {
  "data": {
   "lineno": 353
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_EXT": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_TAIL": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYTEST_TAG": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PurePath": {
  "data": {
   "shadows": "_pytest.pathlib.PurePath"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.PytestAssertRewriteWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestAssertRewriteWarning"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.RN": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite._NameConstant": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util._reprcompare",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.rewrite.six",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_explanation": {
  "data": {
   "shadows": "_pytest.assertion.util.format_explanation"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "EnvironmentError",
    "Exception",
    "IOError",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "_pytest.assertion.rewrite.types",
    "int",
    "isinstance",
    "len",
    "open",
    "trace"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "EnvironmentError",
    "SyntaxError",
    "UnicodeDecodeError",
    "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING",
    "_pytest.assertion.rewrite.BOM_UTF8",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.cookie_re",
    "compile",
    "hasattr",
    "rewrite_asserts"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.rewrite.string",
    "bytes",
    "isinstance",
    "ord"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "Exception",
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "EnvironmentError",
    "_pytest.assertion.rewrite.atomicwrites",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ast_Call": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.atomicwrites": {
  "data": {
   "shadows": "atomicwrites"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.binop_map": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.cookie_re": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.fnmatch_ex": {
  "data": {
   "shadows": "_pytest.pathlib.fnmatch_ex"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.impl": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.marshal": {
  "data": {
   "shadows": "marshal"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "AssertionRewriter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.set_location": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "_fix"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "_fix",
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.spec_from_file_location": {
  "data": {
   "shadows": "_pytest.compat.spec_from_file_location"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.unary_map": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ver": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.assertion.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.assertion.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate": {
  "data": {
   "shadows": "_pytest.assertion.truncate"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_CHARS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_LINES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.USAGE_MSG": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate._running_on_ci": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_pytest.assertion.truncate.os",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._should_truncate_item": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_running_on_ci"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_by_char_count": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_explanation": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_pytest.assertion.truncate.DEFAULT_MAX_CHARS",
    "_pytest.assertion.truncate.DEFAULT_MAX_LINES",
    "_pytest.assertion.truncate.USAGE_MSG",
    "_pytest.assertion.truncate.six",
    "_truncate_by_char_count",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.truncate_if_required": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_should_truncate_item",
    "_truncate_explanation"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.util._compare_eq_cls": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "_pytest.assertion.util.isattrs",
    "_pytest.assertion.util.isdatacls",
    "_pytest.assertion.util.pprint",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.util.pprint",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util.difflib",
    "_pytest.assertion.util.pprint",
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_verbose": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "bytes",
    "difflib.ndiff",
    "escape_for_readable_diff",
    "isinstance",
    "len",
    "min",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text.escape_for_readable_diff": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "_pytest.assertion.util.six",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.util._diff_text",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.assertion.util._reprcompare": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.assertion.util._split_explanation": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "_pytest.assertion.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception",
    "_compare_eq_cls",
    "_compare_eq_dict",
    "_compare_eq_iterable",
    "_compare_eq_sequence",
    "_compare_eq_set",
    "_compare_eq_verbose",
    "_diff_text",
    "_notin_text",
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.util.ecu",
    "_pytest.assertion.util.isattrs",
    "_pytest.assertion.util.isdatacls",
    "_pytest.assertion.util.isdict",
    "_pytest.assertion.util.isiterable",
    "_pytest.assertion.util.issequence",
    "_pytest.assertion.util.isset",
    "_pytest.assertion.util.istext",
    "_pytest.assertion.util.six",
    "_pytest.outcomes.Exit",
    "int",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.basestring": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "_pytest.assertion.util.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "_pytest.assertion.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.util.ecu": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.format_explanation": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_format_lines",
    "_pytest.assertion.util.ecu",
    "_split_explanation"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isattrs": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isdatacls": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isdict": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isiterable": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.assertion.util.istext",
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.issequence": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "_pytest.assertion.util.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isset": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "frozenset",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.istext": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "_pytest.assertion.util.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.ndiff": {
  "data": {
   "shadows": "difflib.ndiff"
  },
  "type": "import"
 },
 "_pytest.assertion.util.outcomes": {
  "data": {
   "shadows": "_pytest.outcomes"
  },
  "type": "import"
 },
 "_pytest.assertion.util.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest.assertion.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.util.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.assertion.util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.cacheprovider": {
  "data": {},
  "type": "module"
 },
 "_pytest.cacheprovider.CACHEDIR_TAG_CONTENT": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "_pytest.cacheprovider.Cache": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_pytest.cacheprovider.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.Cache._ensure_supporting_files": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "_pytest.cacheprovider.CACHEDIR_TAG_CONTENT",
    "_pytest.cacheprovider.README_CONTENT"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Path"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.cache_dir_from_config": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "resolve_from_str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.for_config": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "rmtree"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ValueError",
    "_pytest.cacheprovider.json"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Path",
    "ValueError",
    "_pytest.cacheprovider.py",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "_pytest.cacheprovider.json"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.warn": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestCacheWarning",
    "_pytest.warnings._issue_warning_captured"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.last_failed_paths": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "AttributeError",
    "Path"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_ignore_collect": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "Path"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_collectionfinish": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.NFPlugin.__init__": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin._get_increasing_order": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "_pytest.cacheprovider.pytest",
    "_pytest.cacheprovider.six",
    "collections.OrderedDict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.PY2": {
  "data": {
   "shadows": "_PY2"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.PytestCacheWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestCacheWarning"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.README_CONTENT": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "_pytest.cacheprovider._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.cache": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_pytest.cacheprovider.py",
    "object",
    "pprint.pformat",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pformat": {
  "data": {
   "shadows": "pprint.pformat"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "_pytest.cacheprovider.os"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "_pytest.cacheprovider.Cache",
    "_pytest.cacheprovider.LFPlugin",
    "_pytest.cacheprovider.NFPlugin",
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.wrap_session": {
  "data": {
   "shadows": "_pytest.main.wrap_session"
  },
  "type": "import"
 },
 "_pytest.capture": {
  "data": {
   "symbols_in_volume": [
    "_pytest.capture.collections"
   ]
  },
  "type": "module"
 },
 "_pytest.capture.CaptureFixture": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.CaptureFixture.__init__": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._resume": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._start": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "MultiCapture"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._suspend": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.close": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.disabled": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "_pytest.capture.contextlib"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.readouterr": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "CaptureResult"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureIO": {
  "data": {
   "shadows": "_pytest.compat.CaptureIO"
  },
  "type": "import"
 },
 "_pytest.capture.CaptureManager": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.CaptureManager.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.__repr__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager._getcapture": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "MultiCapture",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.activate_fixture": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.deactivate_fixture": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.global_and_fixture_disabled": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_pytest.capture.contextlib"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.is_capturing": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.is_globally_capturing": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.item_capture": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "_pytest.capture.contextlib"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_internalerror": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_make_collect_report": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "_pytest.capture.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_call": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_protocol": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_setup": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_teardown": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.read_global_capture": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume_fixture": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume_global_capture": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.start_global_capturing": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.stop_global_capturing": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend_fixture": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend_global_capture": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.CaptureResult": {
  "data": {
   "lineno": 460
  },
  "type": "constant"
 },
 "_pytest.capture.DontReadFromInput": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "_pytest.capture.six"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.DontReadFromInput.__iter__": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.buffer": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.capture.sys",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.close": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.fileno": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "io.UnsupportedOperation"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.isatty": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.read": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.EncodedFile.__getattr__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "getattr",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.__init__": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.mode": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.name": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "property",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.write": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.capture.six",
    "_pytest.compat._PY3",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.EncodedFile.writelines": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "_pytest.capture.FDCapture": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "_pytest.capture.FDCaptureBinary",
    "str"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.FDCapture.snap": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "_pytest.capture.FDCapture",
    "_pytest.capture.six",
    "bytes",
    "getattr",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.FDCaptureBinary.__init__": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "OSError",
    "SysCapture",
    "_pytest.capture.NoCapture",
    "_pytest.capture.os",
    "_pytest.capture.patchsysdict",
    "_pytest.capture.safe_text_dupfile",
    "open",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.__repr__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.done": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "_attempt_to_close_capture_file",
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.resume": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.snap": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.start": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "AttributeError",
    "OSError",
    "ValueError",
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.suspend": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "_pytest.capture.os"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.writeorg": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "_pytest.capture.os",
    "_pytest.capture.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.MultiCapture.__init__": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "Capture"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.__repr__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.pop_outerr_to_orig": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.readouterr": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "_pytest.capture.CaptureResult"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.resume_capturing": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.start_capturing": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.stop_capturing": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.MultiCapture.suspend_capturing": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "_pytest.capture.NoCapture": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.SysCapture": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "object",
    "str"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.SysCapture.__init__": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "DontReadFromInput",
    "_pytest.capture.patchsysdict",
    "_pytest.capture.sys",
    "_pytest.compat.CaptureIO",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.__repr__": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.done": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "_attempt_to_close_capture_file",
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.resume": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.snap": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.start": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.suspend": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "_pytest.capture.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.SysCapture.writeorg": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "_pytest.capture.SysCapture"
   ]
  },
  "type": "class"
 },
 "_pytest.capture.SysCaptureBinary.snap": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "_pytest.capture.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "_pytest.capture.UnsupportedOperation": {
  "data": {
   "shadows": "io.UnsupportedOperation"
  },
  "type": "import"
 },
 "_pytest.capture._PY3": {
  "data": {
   "shadows": "_pytest.compat._PY3"
  },
  "type": "import"
 },
 "_pytest.capture._attempt_to_close_capture_file": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "IOError",
    "_pytest.capture.six"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._colorama_workaround": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.capture.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._ensure_only_one_capture_fixture": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "_pytest.capture.capture_fixtures",
    "len",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._install_capture_fixture_on_item": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "CaptureFixture",
    "_pytest.capture.contextlib"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "_pytest.capture.io",
    "_pytest.capture.sys",
    "_reopen_stdio",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround._reopen_stdio": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "_pytest.capture.io",
    "_pytest.capture.os",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.capture._readline_workaround": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.capture.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.capture.capfd": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "_install_capture_fixture_on_item",
    "_pytest.capture._ensure_only_one_capture_fixture",
    "_pytest.capture.os",
    "_pytest.capture.pytest",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.capfdbinary": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_install_capture_fixture_on_item",
    "_pytest.capture._ensure_only_one_capture_fixture",
    "_pytest.capture.os",
    "_pytest.capture.pytest",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.capsys": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "_install_capture_fixture_on_item",
    "_pytest.capture._ensure_only_one_capture_fixture",
    "_pytest.capture.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.capsysbinary": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "_install_capture_fixture_on_item",
    "_pytest.capture._ensure_only_one_capture_fixture",
    "_pytest.capture.pytest",
    "_pytest.capture.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.capture_fixtures": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "_pytest.capture.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "_pytest.capture.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "_pytest.capture.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "_pytest.capture.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.capture.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.capture.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.capture.patchsysdict": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.capture.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.capture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.capture.pytest_addoption": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest.capture.os",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "CaptureManager",
    "_colorama_workaround",
    "_py36_windowsconsoleio_workaround",
    "_pytest.capture.pytest",
    "_pytest.capture.sys",
    "_readline_workaround"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.readline": {
  "data": {
   "shadows": "readline"
  },
  "type": "import"
 },
 "_pytest.capture.safe_text_dupfile": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "EncodedFile",
    "Exception",
    "_pytest.capture.os",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.capture.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.capture.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest.compat.PY35",
    "_pytest.compat.PY36",
    "_pytest.compat._PY2",
    "_pytest.compat._PY3",
    "_pytest.compat._non_printable_ascii_translate_table",
    "_pytest.compat.inspect",
    "_pytest.compat.re",
    "_pytest.compat.six",
    "_pytest.compat.sys",
    "bytes",
    "getattr",
    "object",
    "ord",
    "range",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES": {
  "data": {
   "lineno": 390
  },
  "type": "constant"
 },
 "_pytest.compat.CaptureIO": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "_pytest.compat.io"
   ]
  },
  "type": "class"
 },
 "_pytest.compat.CaptureIO.__init__": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "_pytest.compat.CaptureIO",
    "_pytest.compat.io",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.CaptureIO.encoding": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.CaptureIO.getvalue": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "_pytest.compat.FuncargnamesCompatAttr": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.compat.FuncargnamesCompatAttr.funcargnames": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "_pytest.compat.MODULE_NOT_FOUND_ERROR": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "_pytest.compat.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "_pytest.compat.MappingMixin": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "_pytest.compat.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "_pytest.compat.NOTSET": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "_pytest.compat.PY35": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "_pytest.compat.PY36": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "_pytest.compat.Parameter": {
  "data": {
   "shadows": "funcsigs.Parameter"
  },
  "type": "import"
 },
 "_pytest.compat.REGEX_TYPE": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "_pytest.compat.STRING_TYPES": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "_pytest.compat.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "_pytest.compat.Sized": {
  "data": {
   "shadows": "collections.Sized"
  },
  "type": "import"
 },
 "_pytest.compat.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.compat.TextIO": {
  "data": {
   "shadows": "py.io.TextIO"
  },
  "type": "import"
 },
 "_pytest.compat.UNICODE_TYPES": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "_pytest.compat._PY2": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "_pytest.compat._PY3": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.compat._PytestWrapper": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.compat._PytestWrapper.__init__": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "_pytest.compat._bytes_to_ascii": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_pytest.compat.codecs"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "funcsigs.signature",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._is_unittest_unexpected_success_a_failure": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "_pytest.compat.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._non_printable_ascii_translate_table": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "_pytest.compat._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.compat._setup_collect_fakemodule": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES",
    "_pytest.compat.pytest",
    "getattr",
    "setattr",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._translate_non_printable": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "_pytest.compat._non_printable_ascii_translate_table"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.compat.ascii_escaped": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "_pytest.compat._translate_non_printable",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "_pytest.compat.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.compat.dummy_context_manager": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.enum": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.compat.exc_clear": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "_pytest.compat.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.compat.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.compat.get_default_arg_names": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "funcsigs.Parameter.KEYWORD_ONLY",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Parameter.empty",
    "funcsigs.signature",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.get_real_func": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "_pytest._io.saferepr.saferepr",
    "_pytest.compat._PytestWrapper",
    "_pytest.compat.functools",
    "getattr",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.get_real_method": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Exception",
    "_pytest.compat.get_real_func",
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfslineno": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "_pytest.compat._pytest",
    "_pytest.compat.get_real_func",
    "hasattr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_pytest.compat.num_mock_patch_args",
    "_pytest.outcomes.fail",
    "funcsigs.Parameter.KEYWORD_ONLY",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Parameter.empty",
    "funcsigs.signature",
    "hasattr",
    "isinstance",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "_pytest.compat.py",
    "get_real_func"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.compat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.compat.is_generator": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "iscoroutinefunction"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isclass": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "_pytest.compat.iscoroutinefunction": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isfunction": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "_pytest.compat.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "_pytest.compat.lru_cache.dec": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "_pytest.compat.num_mock_patch_args": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_pytest.compat.sys",
    "any",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.compat.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.compat.safe_getattr": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "getattr",
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.safe_isclass": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "Exception",
    "_pytest.compat.isclass"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.safe_str": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "UnicodeError",
    "isinstance",
    "six.text_type",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.compat.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "_pytest.compat.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.compat.spec_from_file_location": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "_pytest.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.compat.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "_pytest.config": {
  "data": {
   "symbols_in_volume": [
    "_pytest.config.Notset",
    "_pytest.config.builtin_plugins",
    "_pytest.config.default_plugins",
    "_pytest.config.essential_plugins",
    "pluggy.HookimplMarker",
    "pluggy.HookspecMarker",
    "set"
   ]
  },
  "type": "module"
 },
 "_pytest.config.Config": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.Config.__init__": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "Parser",
    "_pytest.config.argparse",
    "_pytest.config.py",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._checkversion": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "_pytest.config.pytest",
    "packaging.version.Version"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._consider_importhook": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "SystemError",
    "_warn_about_missing_assertion",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._do_configure": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._ensure_unconfigure": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "fin"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._get_override_ini_value": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "UsageError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._getconftest_pathlist": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.config.py",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._getini": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_pytest.config.py",
    "_pytest.config.shlex",
    "_strtobool",
    "bool",
    "map",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._initini": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "_pytest.config.copy",
    "determine_setup"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._mark_plugins_for_rewrite": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "_pytest.config._iter_rewritable_modules",
    "_pytest.config.importlib_metadata",
    "_pytest.config.os",
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._preparse": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "_pytest.config.ConftestImportFailure",
    "_pytest.config.copy",
    "_pytest.config.os",
    "_pytest.config.py",
    "_pytest.config.shlex",
    "_pytest.config.sys",
    "_pytest.warning_types.PytestConfigWarning",
    "_pytest.warnings._issue_warning_captured",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._processopt": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._validate_args": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "_pytest.config.copy"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.add_cleanup": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "_pytest.config.Config.addinivalue_line": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.cwd_relative_nodeid": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "_pytest.config.Config.fromdictargs": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "_pytest.config.get_config",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.get_terminal_writer": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "_pytest.config.Config.getini": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.getoption": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_pytest.config.notset",
    "_pytest.config.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.getvalue": {
  "data": {
   "lineno": 1015
  },
  "type": "function"
 },
 "_pytest.config.Config.getvalueorskip": {
  "data": {
   "lineno": 1019
  },
  "type": "function"
 },
 "_pytest.config.Config.notify_exception": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "_pytest.config.sys",
    "any",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.parse": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.pytest_cmdline_parse": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.sys",
    "_pytest.helpconfig.showversion",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.pytest_load_initial_conftests": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "_pytest.config.hookimpl"
   ]
  },
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.ConftestImportFailure.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.config.EXIT_USAGEERROR": {
  "data": {
   "shadows": "_pytest.main.EXIT_USAGEERROR"
  },
  "type": "import"
 },
 "_pytest.config.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.config.HookimplMarker": {
  "data": {
   "shadows": "pluggy.HookimplMarker"
  },
  "type": "import"
 },
 "_pytest.config.HookspecMarker": {
  "data": {
   "shadows": "pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.config.Notset": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.Notset.__repr__": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "_pytest.config.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST"
  },
  "type": "import"
 },
 "_pytest.config.PluginManager": {
  "data": {
   "shadows": "pluggy.PluginManager"
  },
  "type": "import"
 },
 "_pytest.config.PytestConfigWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestConfigWarning"
  },
  "type": "import"
 },
 "_pytest.config.PytestPluginManager": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pluggy.PluginManager"
   ]
  },
  "type": "class"
 },
 "_pytest.config.PytestPluginManager.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "Exception",
    "_pytest.config.PytestPluginManager",
    "_pytest.config.os",
    "_pytest.config.py",
    "_pytest.config.sys",
    "getattr",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._getconftestmodules": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.compat.lru_cache",
    "_pytest.config.six"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._import_plugin_specs": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "_get_plugin_specs_as_list"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._importconftest": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "_ensure_removed_sysmodule",
    "_pytest.config.ConftestImportFailure",
    "_pytest.config.sys",
    "_pytest.deprecated.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST.format",
    "_pytest.outcomes.fail",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._rget_with_confmod": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "getattr",
    "reversed"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._set_initial_conftests": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "_pytest.config.py",
    "exists",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._try_load_conftest": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.addhooks": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "_pytest.config.warnings",
    "_pytest.deprecated.PLUGIN_MANAGER_ADDHOOKS"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_conftest": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_env": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_module": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_pluginarg": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.essential_plugins"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_preparse": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "IndexError",
    "_pytest.config.six",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.getplugin": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.hasplugin": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.import_plugin": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "_pytest.compat.safe_str",
    "_pytest.config.builtin_plugins",
    "_pytest.config.six",
    "_pytest.config.sys",
    "_pytest.outcomes.Skipped",
    "_pytest.warning_types.PytestConfigWarning",
    "_pytest.warnings._issue_warning_captured",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookimpl_opts": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "_pytest.config.inspect",
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookspec_opts": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.pytest_configure": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.register": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "_pytest.config.types",
    "_pytest.config.warnings",
    "_pytest.warning_types.PytestConfigWarning",
    "dict",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "_pytest.config.Version": {
  "data": {
   "shadows": "packaging.version.Version"
  },
  "type": "import"
 },
 "_pytest.config._assertion_supported": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "_pytest.config._ensure_removed_sysmodule": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config._get_plugin_specs_as_list": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.six",
    "_pytest.config.types",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.config._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.config._iter_rewritable_modules": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config._prepareconfig": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "BaseException",
    "TypeError",
    "_pytest.config.get_config",
    "_pytest.config.py",
    "_pytest.config.six",
    "_pytest.config.sys",
    "_pytest.warnings._issue_warning_captured",
    "isinstance",
    "list",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.config._pytest.assertion": {
  "data": {
   "shadows": "_pytest.assertion"
  },
  "type": "import"
 },
 "_pytest.config._pytest.hookspec": {
  "data": {
   "shadows": "_pytest.hookspec"
  },
  "type": "import"
 },
 "_pytest.config._strtobool": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.config._warn_about_missing_assertion": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "_pytest.config._assertion_supported",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.config.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "_pytest.config.argparsing": {
  "data": {},
  "type": "module"
 },
 "_pytest.config.argparsing.Argument": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "complex",
    "float",
    "int",
    "object",
    "str"
   ]
  },
  "type": "class"
 },
 "_pytest.config.argparsing.Argument.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IndexError",
    "KeyError",
    "_pytest.config.argparsing.Argument",
    "_pytest.config.argparsing.ArgumentError",
    "_pytest.config.argparsing.six",
    "_pytest.config.argparsing.warnings",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.__repr__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "hasattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Argument._set_opt_strings": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_pytest.config.argparsing.ArgumentError",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.attrs": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.names": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "_pytest.config.argparsing.ArgumentError": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.argparsing.ArgumentError.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.ArgumentError.__str__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "_pytest.config.argparsing.argparse"
   ]
  },
  "type": "class"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter._format_action_invocation": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "_pytest.config.argparsing.ArgumentError",
    "_pytest.config.argparsing.argparse",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.FILE_OR_DIR": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "_pytest.config.argparsing.MyOptionParser": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "_pytest.config.argparsing.argparse"
   ]
  },
  "type": "class"
 },
 "_pytest.config.argparsing.MyOptionParser.__init__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "_pytest.config.argparsing.argparse"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser.error": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "_pytest.config.exceptions.UsageError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser.parse_args": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "_pytest.config.argparsing.FILE_OR_DIR",
    "getattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.argparsing.OptionGroup.__init__": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup._addoption": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "_pytest.config.argparsing.Argument"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup._addoption_instance": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup.addoption": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.config.argparsing.Argument",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.argparsing.Parser.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "OptionGroup"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser._getparser": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "MyOptionParser",
    "_pytest._argcomplete.filescompleter",
    "_pytest.config.argparsing.FILE_OR_DIR"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.addini": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "help",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.addoption": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.getgroup": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "OptionGroup",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "_pytest._argcomplete.try_argcomplete",
    "_pytest.config.argparsing.py",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_known_and_unknown_args": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_pytest.config.argparsing.py",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_known_args": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_setoption": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "_pytest.config.argparsing.FILE_OR_DIR",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.processoption": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "_pytest.config.argparsing.UsageError": {
  "data": {
   "shadows": "_pytest.config.exceptions.UsageError"
  },
  "type": "import"
 },
 "_pytest.config.argparsing.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "_pytest.config.argparsing.filescompleter": {
  "data": {
   "shadows": "_pytest._argcomplete.filescompleter"
  },
  "type": "import"
 },
 "_pytest.config.argparsing.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.config.argparsing.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.config.argparsing.try_argcomplete": {
  "data": {
   "shadows": "_pytest._argcomplete.try_argcomplete"
  },
  "type": "import"
 },
 "_pytest.config.argparsing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.config.builtin_plugins": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "_pytest.config.cmdline": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_pytest.config.main",
    "object",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "_pytest.config.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "_pytest.config.create_terminal_writer": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "_pytest.config.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.default_plugins": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "_pytest.config.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.config.directory_arg": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.config.essential_plugins": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "_pytest.config.exceptions": {
  "data": {},
  "type": "module"
 },
 "_pytest.config.exceptions.PrintHelp": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.exceptions.UsageError": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.config.filename_arg": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.filter_traceback": {
  "data": {
   "shadows": "_pytest._code.filter_traceback"
  },
  "type": "import"
 },
 "_pytest.config.findpaths": {
  "data": {},
  "type": "module"
 },
 "_pytest.config.findpaths.CFG_PYTEST_SECTION": {
  "data": {
   "shadows": "_pytest.deprecated.CFG_PYTEST_SECTION"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.determine_setup": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "KeyError",
    "UsageError",
    "_pytest.config.findpaths.get_common_ancestor",
    "_pytest.config.findpaths.get_dirs_from_args",
    "_pytest.config.findpaths.getcfg",
    "_pytest.config.findpaths.os",
    "_pytest.config.findpaths.py",
    "_pytest.deprecated.CFG_PYTEST_SECTION.format",
    "_pytest.outcomes.fail",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.exists": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.get_common_ancestor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_pytest.config.findpaths.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "_pytest.config.findpaths.py",
    "get_dir_from_path",
    "get_file_part_from_node_id",
    "is_option"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_dir_from_path": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_pytest.config.findpaths.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_file_part_from_node_id": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.is_option": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.getcfg": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_pytest.config.findpaths.exists",
    "_pytest.config.findpaths.py",
    "_pytest.deprecated.CFG_PYTEST_SECTION.format",
    "_pytest.outcomes.fail",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.config.get_config": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Config",
    "PytestPluginManager",
    "_pytest.config.default_plugins"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_plugin_manager": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_pytest.config.get_config"
   ]
  },
  "type": "function"
 },
 "_pytest.config.hookimpl": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "_pytest.config.hookspec": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.config.importlib_metadata": {
  "data": {
   "shadows": "importlib_metadata"
  },
  "type": "import"
 },
 "_pytest.config.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.config.lru_cache": {
  "data": {
   "shadows": "_pytest.compat.lru_cache"
  },
  "type": "import"
 },
 "_pytest.config.main": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_prepareconfig",
    "_pytest._code.ExceptionInfo",
    "_pytest._code.filter_traceback",
    "_pytest.compat.safe_str",
    "_pytest.config.ConftestImportFailure",
    "_pytest.config.py",
    "_pytest.config.sys",
    "_pytest.main.EXIT_USAGEERROR"
   ]
  },
  "type": "function"
 },
 "_pytest.config.notset": {
  "data": {
   "lineno": 621
  },
  "type": "constant"
 },
 "_pytest.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.config.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.config.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.config.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest.config.setns": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "_pytest.config.pytest",
    "_pytest.config.sys",
    "_pytest.config.types",
    "dict",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "_pytest.config.showversion": {
  "data": {
   "shadows": "_pytest.helpconfig.showversion"
  },
  "type": "import"
 },
 "_pytest.config.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.config.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.debugging": {
  "data": {},
  "type": "module"
 },
 "_pytest.debugging.PdbInvoke": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.debugging.PdbInvoke.pytest_exception_interact": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_enter_pdb",
    "_pytest.debugging.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.PdbInvoke.pytest_internalerror": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "_postmortem_traceback",
    "post_mortem"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.PdbTrace": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.debugging.PdbTrace.pytest_pyfunc_call": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "_test_pytest_function"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.UnexpectedException": {
  "data": {
   "shadows": "doctest.UnexpectedException"
  },
  "type": "import"
 },
 "_pytest.debugging.UsageError": {
  "data": {
   "shadows": "_pytest.config.exceptions.UsageError"
  },
  "type": "import"
 },
 "_pytest.debugging._enter_pdb": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "_postmortem_traceback",
    "post_mortem"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging._postmortem_traceback": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "doctest.UnexpectedException",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.debugging._test_pytest_function": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.debugging.pytestPDB",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging._validate_usepdb_cls": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.debugging.argparse"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.debugging.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "_pytest.debugging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.debugging.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.debugging.outcomes": {
  "data": {
   "shadows": "_pytest.outcomes"
  },
  "type": "import"
 },
 "_pytest.debugging.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "_pytest.debugging.post_mortem": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "_pytest.debugging.pytestPDB",
    "_pytest.outcomes.exit"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.debugging.pytestPDB": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_continue": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "_pytest.debugging.pytestPDB",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_debug": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_quit": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_pytest.outcomes.exit",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.get_stack": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len",
    "max",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.setup": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._import_pdb_cls": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception",
    "__import__",
    "_pytest.config.exceptions.UsageError",
    "_pytest.debugging.pdb",
    "_pytest.debugging.sys",
    "classmethod",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._init_pdb": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._is_capturing": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytestPDB.set_trace": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "_pytest.debugging.sys",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytest_addoption": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.debugging._validate_usepdb_cls"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytest_configure": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "PdbInvoke",
    "PdbTrace",
    "_pytest.debugging.pdb"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.pytest_configure.fin": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_pytest.debugging.pdb"
   ]
  },
  "type": "function"
 },
 "_pytest.debugging.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.deprecated": {
  "data": {
   "symbols_in_volume": [
    "_pytest.warning_types.PytestDeprecationWarning",
    "_pytest.warning_types.RemovedInPytest4Warning",
    "_pytest.warning_types.UnformattedWarning"
   ]
  },
  "type": "module"
 },
 "_pytest.deprecated.CFG_PYTEST_SECTION": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "_pytest.deprecated.FIXTURE_FUNCTION_CALL": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_pytest.deprecated.FIXTURE_NAMED_REQUEST": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.deprecated.GETFUNCARGVALUE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_CONFIG_GLOBAL": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_ENSURETEMP": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_LOGWARNING": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_PARAM_UNKNOWN_KWARGS": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_WARNS_UNKNOWN_KWARGS": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "_pytest.deprecated.PytestDeprecationWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestDeprecationWarning"
  },
  "type": "import"
 },
 "_pytest.deprecated.RAISES_EXEC": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "_pytest.deprecated.RAISES_MESSAGE_PARAMETER": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "_pytest.deprecated.RESULT_LOG": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "_pytest.deprecated.RemovedInPytest4Warning": {
  "data": {
   "shadows": "_pytest.warning_types.RemovedInPytest4Warning"
  },
  "type": "import"
 },
 "_pytest.deprecated.UnformattedWarning": {
  "data": {
   "shadows": "_pytest.warning_types.UnformattedWarning"
  },
  "type": "import"
 },
 "_pytest.deprecated.WARNS_EXEC": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "_pytest.deprecated.YIELD_TESTS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.deprecated.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.deprecated.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.deprecated.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.doctest": {
  "data": {
   "symbols_in_volume": [
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_CDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NONE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_ONLY_FIRST_FAILURE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_UDIFF"
   ]
  },
  "type": "module"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_CDIFF": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_NDIFF": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_NONE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_ONLY_FIRST_FAILURE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "_pytest.doctest.DOCTEST_REPORT_CHOICE_UDIFF": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.doctest.DoctestItem": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "_pytest.doctest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.DoctestItem.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.doctest.DoctestItem",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem._disable_output_capturing_for_darwin": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "_pytest.doctest.platform",
    "_pytest.doctest.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.reportinfo": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.repr_failure": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_get_checker",
    "_get_report_choice",
    "_pytest._code.code.ExceptionInfo",
    "_pytest._code.code.ReprFileLocation",
    "_pytest.doctest.DoctestItem",
    "_pytest.doctest.MultipleDoctestFailures",
    "_pytest.doctest.ReprFailDoctest",
    "_pytest.doctest.doctest",
    "_pytest.doctest.traceback",
    "enumerate",
    "isinstance",
    "max",
    "repr",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.runtest": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "_check_all_skipped",
    "_pytest.doctest.MultipleDoctestFailures"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.setup": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "_setup_fixtures",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestModule": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "_pytest.doctest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.DoctestModule.collect": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ImportError",
    "MockAwareDocTestFinder",
    "_get_checker",
    "_pytest.doctest.DoctestItem",
    "_pytest.doctest._get_continue_on_failure",
    "_pytest.doctest._get_runner",
    "_pytest.doctest.get_optionflags",
    "_pytest.doctest.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestModule.collect.MockAwareDocTestFinder": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.DoctestModule.collect.MockAwareDocTestFinder._find": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_pytest.doctest._is_mocked",
    "_pytest.doctest._patch_unwrap_mock_aware",
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.DoctestTextfile": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "_pytest.doctest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.DoctestTextfile.collect": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "_fix_spoof_python2",
    "_get_checker",
    "_pytest.doctest.DoctestItem",
    "_pytest.doctest._get_continue_on_failure",
    "_pytest.doctest._get_runner",
    "_pytest.doctest.doctest",
    "_pytest.doctest.get_optionflags",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.doctest.FixtureRequest": {
  "data": {
   "shadows": "_pytest.fixtures.FixtureRequest"
  },
  "type": "import"
 },
 "_pytest.doctest.MultipleDoctestFailures": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.MultipleDoctestFailures.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_pytest.doctest.MultipleDoctestFailures",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.RUNNER_CLASS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.doctest.ReprFailDoctest": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest.ReprFailDoctest.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest.toterminal": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "_pytest.doctest.ReprFileLocation": {
  "data": {
   "shadows": "_pytest._code.code.ReprFileLocation"
  },
  "type": "import"
 },
 "_pytest.doctest.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "_pytest.doctest.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.doctest._PY2": {
  "data": {
   "shadows": "_pytest.compat._PY2"
  },
  "type": "import"
 },
 "_pytest.doctest._SpoofOut": {
  "data": {
   "shadows": "doctest._SpoofOut"
  },
  "type": "import"
 },
 "_pytest.doctest._check_all_skipped": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "_pytest.doctest.doctest",
    "_pytest.doctest.pytest",
    "all"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "UnicodeSpoof",
    "_pytest.compat._PY2"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "doctest._SpoofOut"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof.getvalue": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "bytes",
    "doctest._SpoofOut.getvalue",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_allow_bytes_flag": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_allow_unicode_flag": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_checker": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "_pytest.doctest.doctest",
    "_pytest.doctest.re"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "_get_allow_bytes_flag",
    "_get_allow_unicode_flag",
    "_pytest.doctest.doctest",
    "remove_prefixes"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output.remove_prefixes": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "_pytest.doctest.re"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_continue_on_failure": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "_pytest.doctest._get_flag_lookup": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "_get_allow_bytes_flag",
    "_get_allow_unicode_flag",
    "_pytest.doctest.doctest",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_report_choice": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_CDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NDIFF",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_NONE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_ONLY_FIRST_FAILURE",
    "_pytest.doctest.DOCTEST_REPORT_CHOICE_UDIFF",
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._get_runner": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "_pytest.doctest.RUNNER_CLASS",
    "_pytest.doctest._init_runner_class"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._init_runner_class": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "class"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.report_failure": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "_pytest.doctest.doctest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.report_unexpected_exception": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "_pytest.doctest.doctest",
    "_pytest.outcomes.Skipped",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._is_doctest": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "_pytest.doctest._is_mocked": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "_pytest.compat.safe_getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._is_setup_py": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "_pytest.doctest._patch_unwrap_mock_aware": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "_pytest.doctest.inspect",
    "contextlib.contextmanager",
    "getattr",
    "real_unwrap"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._patch_unwrap_mock_aware._mock_aware_unwrap": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "_pytest.doctest._is_mocked",
    "real_unwrap",
    "stop"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureRequest"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures.func": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "_pytest.doctest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.doctest.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.doctest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.doctest.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "_pytest.doctest.doctest_namespace": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "_pytest.doctest.pytest",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.get_optionflags": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "_pytest.doctest._get_flag_lookup"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.doctest.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.doctest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.doctest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.doctest.pytest_addoption": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_pytest.doctest.DOCTEST_REPORT_CHOICES",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.pytest_collect_file": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "DoctestModule",
    "DoctestTextfile",
    "_is_doctest",
    "_is_setup_py"
   ]
  },
  "type": "function"
 },
 "_pytest.doctest.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.doctest.safe_getattr": {
  "data": {
   "shadows": "_pytest.compat.safe_getattr"
  },
  "type": "import"
 },
 "_pytest.doctest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.doctest.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.fixtures": {
  "data": {
   "symbols_in_volume": [
    "_pytest.fixtures.fixture",
    "_pytest.fixtures.scope2props",
    "_pytest.fixtures.scopes",
    "dict"
   ]
  },
  "type": "module"
 },
 "_pytest.fixtures.FIXTURE_FUNCTION_CALL": {
  "data": {
   "shadows": "_pytest.deprecated.FIXTURE_FUNCTION_CALL"
  },
  "type": "import"
 },
 "_pytest.fixtures.FIXTURE_NAMED_REQUEST": {
  "data": {
   "shadows": "_pytest.deprecated.FIXTURE_NAMED_REQUEST"
  },
  "type": "import"
 },
 "_pytest.fixtures.FixtureDef": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureDef.__init__": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "_pytest.compat.getfuncargnames",
    "_pytest.fixtures.scope2index",
    "func",
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.__repr__": {
  "data": {
   "lineno": 896
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.addfinalizer": {
  "data": {
   "lineno": 843
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.execute": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "_pytest.fixtures.functools",
    "_pytest.fixtures.six",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.finish": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "_pytest.fixtures.six",
    "_pytest.fixtures.sys",
    "func",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureFunctionMarker": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "_pytest.fixtures._ensure_immutable_ids",
    "_pytest.fixtures.attr",
    "object",
    "tuple"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureFunctionMarker.__call__": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.compat.isclass",
    "_pytest.deprecated.FIXTURE_NAMED_REQUEST",
    "_pytest.fixtures.warnings",
    "_pytest.fixtures.wrap_function_to_error_out_if_called_directly",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "LookupError"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupError.__init__": {
  "data": {
   "lineno": 702
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError.formatrepr": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "FixtureLookupErrorRepr",
    "IOError",
    "IndexError",
    "TypeError",
    "_pytest.compat.get_real_func",
    "_pytest.compat.getfslineno",
    "_pytest.fixtures.inspect",
    "addline",
    "enumerate",
    "list",
    "map",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.__init__": {
  "data": {
   "lineno": 754
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.toterminal": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "_pytest._code.code.FormattedExcinfo.fail_marker",
    "_pytest._code.code.FormattedExcinfo.flow_marker"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureLookupError",
    "_pytest.fixtures.FixtureLookupErrorRepr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureManager.__init__": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._get_direct_parametrize_args": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "_pytest.mark.ParameterSet._parse_parametrize_args"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._getautousenames": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._matchfactories": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "_pytest.fixtures._pytest.nodes"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "len",
    "merge",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.merge": {
  "data": {
   "lineno": 1208
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.sort_by_scope": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.fixtures.scopes"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixturedefs": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "KeyError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureinfo": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "_pytest.compat.getfuncargnames",
    "_pytest.fixtures.FuncFixtureInfo",
    "_pytest.fixtures.itertools",
    "func",
    "getattr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.parsefactories": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET",
    "_pytest.compat.get_real_func",
    "_pytest.compat.get_real_method",
    "_pytest.compat.safe_getattr",
    "_pytest.fixtures.FixtureDef",
    "_pytest.fixtures.FixtureFunctionMarker",
    "_pytest.fixtures.getfixturemarker",
    "_pytest.fixtures.six",
    "dir",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_collection_modifyitems": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "_pytest.fixtures.reorder_items"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_generate_tests": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_plugin_registered": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.fixtures._pytest.nodes",
    "_pytest.fixtures.py"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "_pytest.compat.FuncargnamesCompatAttr"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FixtureRequest.__init__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.__repr__": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._addfinalizer": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._check_scope": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "scopemismatch"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._compute_fixture_value": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "AttributeError",
    "SubRequest",
    "ValueError",
    "_pytest.compat.NOTSET",
    "_pytest.compat.exc_clear",
    "_pytest.compat.getlocation",
    "_pytest.fixtures.inspect",
    "_pytest.fixtures.py",
    "_pytest.outcomes.fail",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._factorytraceback": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "_pytest.compat._format_args",
    "_pytest.compat.getfslineno"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._fillfixtures": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_active_fixturedef": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "FixtureLookupError",
    "KeyError",
    "_pytest.fixtures.PseudoFixtureDef"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_fixturestack": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getnextfixturedef": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "FixtureLookupError",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getscopeitem": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "_pytest.fixtures.get_scope_node",
    "_pytest.fixtures.get_scope_package"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._schedule_finalizers": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "_pytest.fixtures.functools"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.addfinalizer": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.applymarker": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cls": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "_pytest.fixtures._pytest",
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.config": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fixturenames": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "list",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fspath": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.function": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfixturevalue": {
  "data": {
   "lineno": 471
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfuncargvalue": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "_pytest.deprecated.GETFUNCARGVALUE",
    "_pytest.fixtures.warnings"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.instance": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.keywords": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.module": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "_pytest.fixtures._pytest",
    "_pytest.fixtures.scopeproperty"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.node": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.raiseerror": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.session": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FormattedExcinfo": {
  "data": {
   "shadows": "_pytest._code.code.FormattedExcinfo"
  },
  "type": "import"
 },
 "_pytest.fixtures.FuncFixtureInfo": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "_pytest.fixtures.attr",
    "object",
    "tuple"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.FuncFixtureInfo.prune_dependency_tree": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.FuncargnamesCompatAttr": {
  "data": {
   "shadows": "_pytest.compat.FuncargnamesCompatAttr"
  },
  "type": "import"
 },
 "_pytest.fixtures.NOTSET": {
  "data": {
   "shadows": "_pytest.compat.NOTSET"
  },
  "type": "import"
 },
 "_pytest.fixtures.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "_pytest.fixtures.ParameterSet": {
  "data": {
   "shadows": "_pytest.mark.ParameterSet"
  },
  "type": "import"
 },
 "_pytest.fixtures.PseudoFixtureDef": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_pytest.fixtures.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.SubRequest": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureRequest"
   ]
  },
  "type": "class"
 },
 "_pytest.fixtures.SubRequest.__init__": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.__repr__": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "_pytest.fixtures.SubRequest._schedule_finalizers": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "_pytest.fixtures.SubRequest",
    "_pytest.fixtures.functools",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.addfinalizer": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "_pytest.fixtures.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.fixtures.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.fixtures._PytestWrapper": {
  "data": {
   "shadows": "_pytest.compat._PytestWrapper"
  },
  "type": "import"
 },
 "_pytest.fixtures._ensure_immutable_ids": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "callable",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures._format_args": {
  "data": {
   "shadows": "_pytest.compat._format_args"
  },
  "type": "import"
 },
 "_pytest.fixtures._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.fixtures._pytest.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.fixtures._pytest.python": {
  "data": {
   "shadows": "_pytest.python"
  },
  "type": "import"
 },
 "_pytest.fixtures._teardown_yield_fixture": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "StopIteration",
    "_pytest.fixtures.fail_fixturefunc",
    "fixturefunc",
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.fixtures.add_funcarg_pseudo_fixture_def": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "FixtureDef",
    "_pytest.fixtures._pytest",
    "_pytest.fixtures.get_scope_node",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.fixtures.call_fixture_func": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "_pytest.compat.is_generator",
    "_pytest.fixtures.functools",
    "fixturefunc",
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "_pytest.fixtures.defaultfuncargprefixmarker": {
  "data": {
   "lineno": 1060
  },
  "type": "constant"
 },
 "_pytest.fixtures.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.fixtures.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "_pytest.fixtures.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.fixtures.exc_clear": {
  "data": {
   "shadows": "_pytest.compat.exc_clear"
  },
  "type": "import"
 },
 "_pytest.fixtures.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.fixtures.fail_fixturefunc": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "_pytest.compat.getfslineno",
    "_pytest.fixtures._pytest",
    "_pytest.outcomes.fail",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.fillfixtures": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "AttributeError",
    "FixtureRequest"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.fix_cache_order": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.fixture": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureFunctionMarker",
    "callable",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.fixtures.get_direct_param_fixture_func": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "_pytest.fixtures.get_parametrized_fixture_keys": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "AttributeError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.get_real_func": {
  "data": {
   "shadows": "_pytest.compat.get_real_func"
  },
  "type": "import"
 },
 "_pytest.fixtures.get_real_method": {
  "data": {
   "shadows": "_pytest.compat.get_real_method"
  },
  "type": "import"
 },
 "_pytest.fixtures.get_scope_node": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.fixtures.scopename2class"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.get_scope_package": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_pytest.fixtures.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.getfixturemarker": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.getfslineno": {
  "data": {
   "shadows": "_pytest.compat.getfslineno"
  },
  "type": "import"
 },
 "_pytest.fixtures.getfuncargnames": {
  "data": {
   "shadows": "_pytest.compat.getfuncargnames"
  },
  "type": "import"
 },
 "_pytest.fixtures.getimfunc": {
  "data": {
   "shadows": "_pytest.compat.getimfunc"
  },
  "type": "import"
 },
 "_pytest.fixtures.getlocation": {
  "data": {
   "shadows": "_pytest.compat.getlocation"
  },
  "type": "import"
 },
 "_pytest.fixtures.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.fixtures.is_generator": {
  "data": {
   "shadows": "_pytest.compat.is_generator"
  },
  "type": "import"
 },
 "_pytest.fixtures.isclass": {
  "data": {
   "shadows": "_pytest.compat.isclass"
  },
  "type": "import"
 },
 "_pytest.fixtures.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.fixtures.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.fixtures.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.fixtures.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.fixtures.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.fixtures.pytest_addoption": {
  "data": {
   "lineno": 1077
  },
  "type": "function"
 },
 "_pytest.fixtures.pytest_fixture_setup": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "_pytest.fixtures.call_fixture_func",
    "_pytest.fixtures.resolve_fixture_function",
    "_pytest.fixtures.sys",
    "_pytest.outcomes.TEST_OUTCOME",
    "fixturefunc"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.pytest_sessionstart": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "FixtureManager",
    "_pytest.fixtures._pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.pytestconfig": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "_pytest.fixtures.fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.reorder_items": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "_pytest.fixtures.get_parametrized_fixture_keys",
    "collections.OrderedDict.fromkeys",
    "collections.defaultdict",
    "collections.deque",
    "list",
    "range",
    "reorder_items_atscope"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.reorder_items_atscope": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "_pytest.fixtures.fix_cache_order",
    "collections.OrderedDict",
    "collections.OrderedDict.fromkeys",
    "collections.deque",
    "len",
    "reversed",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.resolve_fixture_function": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "_pytest.compat.getimfunc",
    "fixturefunc",
    "fixturefunc.__get__"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.safe_getattr": {
  "data": {
   "shadows": "_pytest.compat.safe_getattr"
  },
  "type": "import"
 },
 "_pytest.fixtures.scope2index": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.fixtures.scopes",
    "_pytest.outcomes.fail"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scope2props": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "_pytest.fixtures.scopemismatch": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "_pytest.fixtures.scopes"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scopename2class": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "_pytest.fixtures.scopenum_function": {
  "data": {
   "lineno": 677
  },
  "type": "constant"
 },
 "_pytest.fixtures.scopeproperty": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "func.__doc__",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope.provide": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.fixtures.scope2props",
    "func"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.scopes": {
  "data": {
   "lineno": 676
  },
  "type": "constant"
 },
 "_pytest.fixtures.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.fixtures.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.fixtures.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.fixtures.wrap_function_to_error_out_if_called_directly": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "_pytest.compat._PytestWrapper",
    "_pytest.deprecated.FIXTURE_FUNCTION_CALL.format"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.wrap_function_to_error_out_if_called_directly.result": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "_pytest.fixtures.six",
    "_pytest.outcomes.fail"
   ]
  },
  "type": "function"
 },
 "_pytest.fixtures.yield_fixture": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "_pytest.fixtures.fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support": {
  "data": {},
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_pytest.freeze_support.os",
    "_pytest.freeze_support.pkgutil",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.freeze_support.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.freeze_support.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.freeze_support.freeze_includes": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_iter_all_modules",
    "_pytest.freeze_support._pytest",
    "_pytest.freeze_support.py",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.freeze_support.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.freeze_support.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.freeze_support.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig": {
  "data": {},
  "type": "module"
 },
 "_pytest.helpconfig.Action": {
  "data": {
   "shadows": "argparse.Action"
  },
  "type": "import"
 },
 "_pytest.helpconfig.HelpAction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "argparse.Action"
   ]
  },
  "type": "class"
 },
 "_pytest.helpconfig.HelpAction.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_pytest.config.PrintHelp",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.HelpAction.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_pytest.helpconfig.HelpAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.PrintHelp": {
  "data": {
   "shadows": "_pytest.config.PrintHelp"
  },
  "type": "import"
 },
 "_pytest.helpconfig.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.helpconfig.conftest_options": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "_pytest.helpconfig.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "getattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.helpconfig.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.helpconfig.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_pytest.helpconfig.HelpAction"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_pytest.helpconfig.showversion",
    "showhelp"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_pytest.helpconfig.os",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.sys",
    "map",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_pytest.helpconfig.sys",
    "undo_tracing"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "_pytest.helpconfig.getpluginversioninfo",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "hasattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "_pytest.helpconfig.textwrap",
    "help",
    "len",
    "type",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.showversion": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.sys",
    "getpluginversioninfo"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.helpconfig.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "_pytest.hookspec": {
  "data": {
   "symbols_in_volume": [
    "pluggy.HookspecMarker"
   ]
  },
  "type": "module"
 },
 "_pytest.hookspec.HookspecMarker": {
  "data": {
   "shadows": "pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.hookspec.PYTEST_LOGWARNING": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_LOGWARNING"
  },
  "type": "import"
 },
 "_pytest.hookspec.hookspec": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_doctest_prepare_content": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemstart": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_leave_pdb": {
  "data": {
   "lineno": 631
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_logwarning": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "_pytest.deprecated.PYTEST_LOGWARNING",
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_collectionfinish": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_from_serializable": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_to_serializable": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logfinish": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_warning_captured": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml": {
  "data": {
   "symbols_in_volume": [
    "_pytest.junitxml._legal_chars",
    "_pytest.junitxml._legal_ranges",
    "_pytest.junitxml._legal_xml_re",
    "_pytest.junitxml.families",
    "_pytest.junitxml.merge_family",
    "_pytest.junitxml.re",
    "_pytest.junitxml.six",
    "_pytest.junitxml.sys"
   ]
  },
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "_pytest.junitxml.os",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "_pytest.junitxml._check_record_param_type",
    "_pytest.junitxml.bin_xml_escape"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "_pytest.junitxml._NodeReporter",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "getattr",
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.os",
    "_pytest.junitxml.time",
    "codecs.open"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "_pytest.junitxml.time"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "data": {
   "lineno": 684
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.PytestExperimentalApiWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestExperimentalApiWarning"
  },
  "type": "import"
 },
 "_pytest.junitxml.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.junitxml._NodeReporter": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "kind"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_attribute": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "_pytest.junitxml.six",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "_pytest.junitxml.families",
    "hasattr",
    "mangle_test_address"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.write_captured_output": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "getattr",
    "tag"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._check_record_param_type": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.junitxml.six",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._legal_chars": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_ranges": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_xml_re": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "_pytest.junitxml._py_ext_re": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "_pytest.junitxml._warn_incompatibility_with_xunit2": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_pytest.junitxml.illegal_xml_re",
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.junitxml.families": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "_pytest.junitxml.filename_arg": {
  "data": {
   "shadows": "_pytest.config.filename_arg"
  },
  "type": "import"
 },
 "_pytest.junitxml.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.junitxml.illegal_xml_re": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "_pytest.junitxml.mangle_test_address": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.junitxml._py_ext_re",
    "_pytest.nodes.SEP"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.merge_family": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.junitxml.open": {
  "data": {
   "shadows": "codecs.open"
  },
  "type": "import"
 },
 "_pytest.junitxml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.junitxml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.junitxml.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest_addoption": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "_pytest.config.filename_arg",
    "_pytest.junitxml.functools"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "LogXML",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.junitxml.record_property": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "_pytest.junitxml._warn_incompatibility_with_xunit2",
    "_pytest.junitxml.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_property.append_property": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "_pytest.junitxml.record_testsuite_property": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "_pytest.junitxml.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_testsuite_property.record_func": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "_pytest.junitxml._check_record_param_type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "_pytest.junitxml._warn_incompatibility_with_xunit2",
    "_pytest.junitxml.pytest",
    "_pytest.warning_types.PytestExperimentalApiWarning",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute.add_attr_noop": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "_pytest.junitxml.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.junitxml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.junitxml.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.logging": {
  "data": {
   "symbols_in_volume": [
    "_pytest.logging.re",
    "_pytest.logging.six"
   ]
  },
  "type": "module"
 },
 "_pytest.logging.ColoredLevelFormatter": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "_pytest.logging.re",
    "set"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.ColoredLevelFormatter.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_pytest.logging.ColoredLevelFormatter",
    "_pytest.logging.logging",
    "_pytest.logging.six",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.ColoredLevelFormatter.format": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_pytest.logging.ColoredLevelFormatter",
    "_pytest.logging.six",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.DEFAULT_LOG_DATE_FORMAT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.logging.DEFAULT_LOG_FORMAT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.logging.LogCaptureFixture": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.LogCaptureFixture.__init__": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture._finalize": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.at_level": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.clear": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.get_records": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.handler": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.messages": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.record_tuples": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.records": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.set_level": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.text": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "_pytest.logging._remove_ansi_escape_sequences",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.LogCaptureHandler.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "_pytest.logging.py"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.emit": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.reset": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "_pytest.logging.py"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.LoggingPlugin.__init__": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "_pytest.compat.dummy_context_manager",
    "_pytest.logging.get_actual_log_level",
    "_pytest.logging.get_option_ini",
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._create_formatter": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "_pytest.config.create_terminal_writer",
    "_pytest.logging.ColoredLevelFormatter",
    "_pytest.logging.PercentStyleMultiline",
    "_pytest.logging.logging",
    "_pytest.logging.six",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._log_cli_enabled": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for_main": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "_pytest.logging.LogCaptureHandler",
    "_pytest.logging.catching_logs",
    "contextlib.contextmanager",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._setup_cli_logging": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "_LiveLoggingStreamHandler",
    "_pytest.logging.catching_logs",
    "_pytest.logging.get_actual_log_level",
    "_pytest.logging.get_option_ini"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_collection": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_call": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logfinish": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logstart": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_setup": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_teardown": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtestloop": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionstart": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.set_log_path": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "_pytest.pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.logging.PercentStyleMultiline": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.PercentStyleMultiline._update_message": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.PercentStyleMultiline.format": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "_pytest.logging._remove_ansi_escape_sequences"
   ]
  },
  "type": "function"
 },
 "_pytest.logging._ANSI_ESCAPE_SEQ": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "_pytest.logging._LiveLoggingStreamHandler": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "class"
 },
 "_pytest.logging._LiveLoggingStreamHandler.__init__": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.emit": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "_pytest.compat.dummy_context_manager",
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.reset": {
  "data": {
   "lineno": 680
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.set_when": {
  "data": {
   "lineno": 684
  },
  "type": "function"
 },
 "_pytest.logging._remove_ansi_escape_sequences": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_pytest.logging._ANSI_ESCAPE_SEQ"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.logging.caplog": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "_pytest.logging.LogCaptureFixture",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.catching_logs": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "contextlib.contextmanager",
    "min"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.logging.create_terminal_writer": {
  "data": {
   "shadows": "_pytest.config.create_terminal_writer"
  },
  "type": "import"
 },
 "_pytest.logging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.logging.dummy_context_manager": {
  "data": {
   "shadows": "_pytest.compat.dummy_context_manager"
  },
  "type": "import"
 },
 "_pytest.logging.get_actual_log_level": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.logging.logging",
    "_pytest.logging.pytest",
    "_pytest.logging.six",
    "getattr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.get_option_ini": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "_pytest.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "_pytest.logging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.logging.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.logging.pytest_addoption": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "_pytest.logging.DEFAULT_LOG_DATE_FORMAT",
    "_pytest.logging.DEFAULT_LOG_FORMAT",
    "add_option_ini"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.pytest_addoption.add_option_ini": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.pytest_configure": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "LoggingPlugin",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.logging.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.main": {
  "data": {},
  "type": "module"
 },
 "_pytest.main.EXIT_INTERNALERROR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_INTERRUPTED": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_OK": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_TESTSFAILED": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_USAGEERROR": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "_pytest.main.FSHookProxy": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.main.FSHookProxy.__getattr__": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "_pytest.main.FSHookProxy.__init__": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "_pytest.main.Failed": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "class"
 },
 "_pytest.main.NoMatch": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.PYTEST_CONFIG_GLOBAL": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_CONFIG_GLOBAL"
  },
  "type": "import"
 },
 "_pytest.main.Package": {
  "data": {
   "shadows": "_pytest.python.Package"
  },
  "type": "import"
 },
 "_pytest.main.Session": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "_pytest.main.Failed",
    "_pytest.main.Interrupted",
    "_pytest.main.six",
    "_pytest.nodes.FSCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "_pytest.main._bestrelpath_cache",
    "_pytest.nodes.FSCollector.__init__",
    "frozenset"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.__repr__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "_pytest.python.Package",
    "isinstance",
    "next",
    "reversed",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._collectfile": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "_pytest.nodes.Collector",
    "_pytest.nodes.Item",
    "_pytest.runner.collect_one_node",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._node_location_to_relpath": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.main.os",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.runner.collect_one_node",
    "frozenset"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._recurse": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "_pytest.main._patched_find_module",
    "_pytest.main.os",
    "_pytest.main.pkgutil"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._visit_filter": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "_pytest.main.sys",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "_pytest.nodes.Collector",
    "_pytest.nodes.Item",
    "_pytest.runner.collect_one_node",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "_pytest.main.FSHookProxy"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "_pytest.nodes",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "_pytest.config.hookimpl"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.main._ConfigDeprecated": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.main._ConfigDeprecated.__getattr__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "_pytest.deprecated.PYTEST_CONFIG_GLOBAL",
    "_pytest.main.attr",
    "_pytest.main.warnings",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main._ConfigDeprecated.__init__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "_pytest.main._ConfigDeprecated.__repr__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.main._ConfigDeprecated.__setattr__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.deprecated.PYTEST_CONFIG_GLOBAL",
    "_pytest.main.attr",
    "_pytest.main.warnings",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main._bestrelpath_cache": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "_pytest.main.attr",
    "dict"
   ]
  },
  "type": "class"
 },
 "_pytest.main._bestrelpath_cache.__missing__": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "_pytest.main._in_venv": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "_pytest.main.sys",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.main._main": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_TESTSFAILED"
   ]
  },
  "type": "function"
 },
 "_pytest.main._patched_find_module": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "_pytest.main.contextlib",
    "_pytest.main.pkgutil",
    "_pytest.main.six"
   ]
  },
  "type": "function"
 },
 "_pytest.main._patched_find_module.find_module_patched": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.main.pkgutil"
   ]
  },
  "type": "function"
 },
 "_pytest.main._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.main.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.main.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.main.collect_one_node": {
  "data": {
   "shadows": "_pytest.runner.collect_one_node"
  },
  "type": "import"
 },
 "_pytest.main.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "_pytest.main.directory_arg": {
  "data": {
   "shadows": "_pytest.config.directory_arg"
  },
  "type": "import"
 },
 "_pytest.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.main.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "_pytest.main.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.main.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.main.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.main.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.main.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.main.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.main.pytest_addoption": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_pytest.config.directory_arg",
    "_pytest.main.functools",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection_modifyitems": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_configure": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "__import__",
    "_pytest.main._ConfigDeprecated"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "_pytest.main._in_venv",
    "_pytest.main.fnmatch",
    "_pytest.main.py",
    "_pytest.main.six",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.main.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.main.wrap_session": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "Session",
    "SystemExit",
    "_pytest.config.UsageError",
    "_pytest.main.EXIT_INTERNALERROR",
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main.EXIT_TESTSFAILED",
    "_pytest.main.EXIT_USAGEERROR",
    "_pytest.main.sys",
    "_pytest.outcomes.exit.Exception",
    "doit",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark": {
  "data": {
   "symbols_in_volume": [
    "_pytest.mark.pytest_cmdline_main"
   ]
  },
  "type": "module"
 },
 "_pytest.mark.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.mark.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.mark._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.mark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.mark.deselect_by_keyword": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "matchkeyword"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.deselect_by_mark": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "matchmark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate": {
  "data": {},
  "type": "module"
 },
 "_pytest.mark.evaluate.MarkEvaluator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__bool__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._get_marks": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._getglobals": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "_pytest.mark.evaluate.os",
    "_pytest.mark.evaluate.platform",
    "_pytest.mark.evaluate.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._istrue": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "_pytest.mark.evaluate.cached_eval",
    "_pytest.mark.evaluate.six",
    "bool",
    "fail",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.get": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.getexplanation": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.invalidraise": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.istrue": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest.mark.evaluate.sys",
    "_pytest.mark.evaluate.traceback",
    "fail",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.wasvalid": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.cached_eval": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "KeyError",
    "eval",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.mark.legacy": {
  "data": {},
  "type": "module"
 },
 "_pytest.mark.legacy.KeywordMapping": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.legacy.KeywordMapping.__getitem__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.from_item": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_pytest.mark.legacy.pytest",
    "classmethod",
    "cls",
    "hasattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_pytest.mark.legacy.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.legacy.MarkMapping.__getitem__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping.from_item": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.matchkeyword": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest.config.UsageError",
    "_pytest.mark.legacy.KeywordMapping",
    "_pytest.mark.legacy.keyword",
    "_pytest.mark.legacy.python_keywords_allowed_list",
    "eval"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.matchmark": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest.mark.legacy.MarkMapping",
    "eval",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.python_keywords_allowed_list": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "_pytest.mark.param": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "_pytest.mark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.mark.pytest_addoption": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "_pytest.mark.deselect_by_keyword",
    "_pytest.mark.deselect_by_mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_pytest.config.UsageError"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_unconfigure": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures": {
  "data": {
   "symbols_in_volume": [
    "_pytest.mark.structures.MarkGenerator"
   ]
  },
  "type": "module"
 },
 "_pytest.mark.structures.EMPTY_PARAMETERSET_OPTION": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.mark.structures.MARK_GEN": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "_pytest.mark.structures.Mark": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "_pytest.mark.structures.attr",
    "object",
    "str"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.Mark.combined_with": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "_pytest.mark.structures.alias",
    "_pytest.mark.structures.attr",
    "mark",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.MarkDecorator.__call__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "_pytest.mark.structures.inspect",
    "_pytest.mark.structures.istestfunc",
    "len",
    "store_mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__eq__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "_pytest.mark.structures.MarkDecorator",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__repr__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.markname": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.with_args": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkGenerator": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.MarkGenerator.__getattr__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.mark.structures.Mark",
    "_pytest.mark.structures.MarkDecorator",
    "_pytest.mark.structures.warnings",
    "_pytest.outcomes.fail",
    "_pytest.warning_types.PytestUnknownMarkWarning"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords": {
  "data": {
   "lineno": 346
  },
  "type": "class"
 },
 "_pytest.mark.structures.NodeKeywords.__delitem__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__getitem__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__init__": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__iter__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__len__": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__repr__": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__setitem__": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords._seen": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "_pytest.mark.structures.attr",
    "list",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.NodeMarkers.__iter__": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.find": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "mark",
    "mark.name"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.update": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "_pytest.mark.structures.PYTEST_PARAM_UNKNOWN_KWARGS": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_PARAM_UNKNOWN_KWARGS"
  },
  "type": "import"
 },
 "_pytest.mark.structures.ParameterSet": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.ParameterSet._for_parametrize": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "_pytest.mark.structures.ParameterSet",
    "_pytest.mark.structures.get_empty_parameterset_mark",
    "_pytest.outcomes.fail",
    "classmethod",
    "cls._parse_parametrize_args",
    "cls._parse_parametrize_parameters",
    "len",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet._parse_parametrize_args": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet._parse_parametrize_parameters": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_pytest.mark.structures.ParameterSet",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.extract_from": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.param",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.param": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.deprecated.PYTEST_PARAM_UNKNOWN_KWARGS.format",
    "_pytest.mark.structures.six",
    "_pytest.mark.structures.warnings",
    "ascii_escaped",
    "classmethod",
    "cls",
    "isinstance",
    "list",
    "set",
    "sorted",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.PytestUnknownMarkWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestUnknownMarkWarning"
  },
  "type": "import"
 },
 "_pytest.mark.structures.alias": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "getter",
    "operator.attrgetter",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.alias.warned": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_pytest.mark.structures.warnings",
    "getter"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.mark.structures.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "_pytest.mark.structures.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.mark.structures.get_empty_parameterset_mark": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "LookupError",
    "_pytest.mark.structures.EMPTY_PARAMETERSET_OPTION",
    "getfslineno",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.get_unpacked_marks": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list",
    "normalize_mark_list"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.mark.structures.istestfunc": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "_pytest.mark.structures.normalize_mark_list": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.mark.structures.Mark",
    "getattr",
    "isinstance",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.mark.structures.store_mark": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "_pytest.mark.structures.get_unpacked_marks",
    "isinstance",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.monkeypatch": {
  "data": {
   "symbols_in_volume": [
    "_pytest.monkeypatch.Notset",
    "_pytest.monkeypatch.re"
   ]
  },
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch._warn_if_env_name_is_not_str": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "_pytest.monkeypatch.pytest",
    "_pytest.monkeypatch.six",
    "_pytest.monkeypatch.warnings",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "_pytest.pathlib.Path",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.context": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.inspect",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.six",
    "delattr",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.inspect",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.six",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "_pytest.monkeypatch.pytest",
    "_pytest.monkeypatch.warnings",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "_pytest.monkeypatch.sys",
    "importlib.invalidate_caches",
    "pkg_resources.fixup_namespace_packages",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.os",
    "_pytest.monkeypatch.sys",
    "delattr",
    "reversed",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.RE_IMPORT_ERROR_NAME": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.monkeypatch.annotated_getattr",
    "_pytest.monkeypatch.resolve",
    "_pytest.monkeypatch.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.fixup_namespace_packages": {
  "data": {
   "shadows": "pkg_resources.fixup_namespace_packages"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.invalidate_caches": {
  "data": {
   "shadows": "importlib.invalidate_caches"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "MonkeyPatch",
    "_pytest.fixtures.fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.notset": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.resolve": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__import__",
    "annotated_getattr",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.nodes": {
  "data": {
   "symbols_in_volume": [
    "_pytest.nodes.py"
   ]
  },
  "type": "module"
 },
 "_pytest.nodes.Collector": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "_pytest.nodes.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Collector.CollectError": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Collector._prunetraceback": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "_pytest.nodes.tracebackcutdir",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Collector.collect": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Collector.repr_failure": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.FSCollector": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "_pytest.nodes.Collector"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.FSCollector.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "_pytest.nodes.FSCollector",
    "_pytest.nodes.SEP",
    "_pytest.nodes._check_initialpaths_for_relpath",
    "_pytest.nodes.os",
    "_pytest.nodes.py",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.File": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "_pytest.nodes.FSCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Item": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "_pytest.nodes.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Item.__init__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "_pytest.nodes.Item",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Item.add_report_section": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "_pytest.nodes.Item.location": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Item.reportinfo": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "_pytest.nodes.MARK_GEN": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "_pytest.nodes.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.MarkDecorator"
  },
  "type": "import"
 },
 "_pytest.nodes.Node": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Node.__hash__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_pytest.mark.structures.NodeKeywords",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.__repr__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node._prunetraceback": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "_pytest.nodes.Node._repr_failure_py": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "OSError",
    "_pytest.nodes.os",
    "_pytest.nodes.six",
    "_pytest.outcomes.fail.Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.add_marker": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.mark.MARK_GEN",
    "_pytest.mark.MarkDecorator",
    "_pytest.nodes.six",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.addfinalizer": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "_pytest.nodes.Node.get_closest_marker": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.getparent": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.ihook": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers_with_node": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "getattr",
    "reversed"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listchain": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listextrakeywords": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listnames": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "_pytest.nodes.Node.nodeid": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.setup": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "_pytest.nodes.Node.teardown": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "_pytest.nodes.Node.warn": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.nodes.warnings",
    "_pytest.warning_types.PytestWarning",
    "get_fslocation_from_item",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.NodeKeywords": {
  "data": {
   "shadows": "_pytest.mark.structures.NodeKeywords"
  },
  "type": "import"
 },
 "_pytest.nodes.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.nodes.SEP": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "_pytest.nodes._check_initialpaths_for_relpath": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "_pytest.nodes._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.nodes._splitnode": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_pytest.nodes.SEP"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.nodes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.nodes.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.nodes.get_fslocation_from_item": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "_pytest.compat.getfslineno",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.getfslineno": {
  "data": {
   "shadows": "_pytest.compat.getfslineno"
  },
  "type": "import"
 },
 "_pytest.nodes.ischildnode": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_pytest.nodes._splitnode",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.nodes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.nodes.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.nodes.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.nodes.tracebackcutdir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.nodes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.nose": {
  "data": {},
  "type": "module"
 },
 "_pytest.nose.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.nose.call_optional": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "hasattr",
    "method"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.nose.get_skip_exceptions": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_pytest.nose.sys",
    "hasattr",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.nose.is_potential_nosetest": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_pytest.python.Function",
    "_pytest.unittest.TestCaseFunction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.nose.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.nose.pytest_runtest_makereport": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest.nose.get_skip_exceptions",
    "_pytest.nose.pytest",
    "_pytest.nose.six",
    "_pytest.runner.CallInfo.from_call"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_setup": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "call_optional",
    "is_potential_nosetest",
    "teardown_nose"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.python": {
  "data": {
   "shadows": "_pytest.python"
  },
  "type": "import"
 },
 "_pytest.nose.runner": {
  "data": {
   "shadows": "_pytest.runner"
  },
  "type": "import"
 },
 "_pytest.nose.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.nose.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.nose.teardown_nose": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "call_optional",
    "is_potential_nosetest"
   ]
  },
  "type": "function"
 },
 "_pytest.nose.unittest": {
  "data": {
   "shadows": "_pytest.unittest"
  },
  "type": "import"
 },
 "_pytest.outcomes": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "_pytest.outcomes.Exit",
    "_pytest.outcomes.Failed",
    "_pytest.outcomes.OutcomeException",
    "_pytest.outcomes.Skipped",
    "_pytest.outcomes.XFailed",
    "_pytest.outcomes.exit",
    "_pytest.outcomes.fail",
    "_pytest.outcomes.skip",
    "_pytest.outcomes.xfail"
   ]
  },
  "type": "module"
 },
 "_pytest.outcomes.Exit": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.Exit.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "_pytest.outcomes.Exit",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.Failed": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "BaseException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "BaseException.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.OutcomeException.__repr__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.Skipped": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.Skipped.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.TEST_OUTCOME": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.outcomes.Version": {
  "data": {
   "shadows": "packaging.version.Version"
  },
  "type": "import"
 },
 "_pytest.outcomes.XFailed": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_pytest.outcomes.fail"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.outcomes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.outcomes.exit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_pytest.outcomes.Exit"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.fail": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_pytest.outcomes.Failed"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.importorskip": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "_pytest.outcomes.Skipped",
    "_pytest.outcomes.sys",
    "_pytest.outcomes.warnings",
    "compile",
    "getattr",
    "packaging.version.Version"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.outcomes.skip": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.outcomes.Skipped",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.outcomes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.outcomes.xfail": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "_pytest.outcomes.XFailed"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin": {
  "data": {},
  "type": "module"
 },
 "_pytest.pastebin._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.pastebin.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.pastebin.create_new_paste": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_pytest.pastebin.re",
    "_pytest.pastebin.sys",
    "urllib.parse.urlencode",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.pastebin.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest_addoption": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.pastebin.pytest",
    "_pytest.pastebin.tempfile"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "_pytest.pastebin.six",
    "isinstance",
    "oldwrite"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.pastebin.create_new_paste",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "create_new_paste",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.pastebin.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.pastebin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pastebin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "_pytest.pathlib": {
  "data": {
   "symbols_in_volume": [
    "_pytest.pathlib.operator",
    "_pytest.pathlib.six",
    "max"
   ]
  },
  "type": "module"
 },
 "_pytest.pathlib.LOCK_TIMEOUT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.pathlib.Path": {
  "data": {
   "shadows": "pathlib2.Path"
  },
  "type": "import"
 },
 "_pytest.pathlib.PurePath": {
  "data": {
   "shadows": "pathlib2.PurePath"
  },
  "type": "import"
 },
 "_pytest.pathlib.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.pathlib._force_symlink": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Exception",
    "OSError"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib._max": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "_pytest.pathlib.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "_pytest.pathlib.cleanup_candidates": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "_pytest.pathlib._max",
    "_pytest.pathlib.extract_suffixes",
    "_pytest.pathlib.find_prefixed",
    "_pytest.pathlib.find_suffixes",
    "_pytest.pathlib.itertools",
    "_pytest.pathlib.parse_num",
    "six.moves.map",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.cleanup_numbered_dir": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_pytest.pathlib.cleanup_candidates",
    "_pytest.pathlib.try_cleanup"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.create_cleanup_lock": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "EnvironmentError",
    "OSError",
    "_pytest.pathlib.errno",
    "_pytest.pathlib.get_lock_path",
    "_pytest.pathlib.os",
    "_pytest.pathlib.six",
    "bytes",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.ensure_deletable": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "Exception",
    "_pytest.pathlib.get_lock_path"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.ensure_reset_dir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "rmtree"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "_pytest.pathlib.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "_pytest.pathlib.expandvars": {
  "data": {
   "shadows": "os.path.expandvars"
  },
  "type": "import"
 },
 "_pytest.pathlib.extract_suffixes": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "iter",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.find_prefixed": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "_pytest.pathlib.find_suffixes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_pytest.pathlib.extract_suffixes",
    "_pytest.pathlib.find_prefixed"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.pathlib.fnmatch_ex": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "_pytest.pathlib.fnmatch",
    "_pytest.pathlib.six",
    "_pytest.pathlib.sys",
    "pathlib2.PurePath",
    "posixpath.sep"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.get_lock_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "_pytest.pathlib.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "_pytest.pathlib.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.pathlib.make_numbered_dir": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "EnvironmentError",
    "Exception",
    "_pytest.pathlib._force_symlink",
    "_pytest.pathlib._max",
    "_pytest.pathlib.find_suffixes",
    "_pytest.pathlib.parse_num",
    "range",
    "six.moves.map"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.make_numbered_dir_with_cleanup": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Exception",
    "_pytest.pathlib.cleanup_numbered_dir",
    "_pytest.pathlib.create_cleanup_lock",
    "_pytest.pathlib.make_numbered_dir",
    "_pytest.pathlib.register_cleanup_lock_removal",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.map": {
  "data": {
   "shadows": "six.moves.map"
  },
  "type": "import"
 },
 "_pytest.pathlib.maybe_delete_a_numbered_dir": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "EnvironmentError",
    "IOError",
    "OSError",
    "_pytest.pathlib.create_cleanup_lock",
    "_pytest.pathlib.rmtree",
    "_pytest.pathlib.uuid"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "_pytest.pathlib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.pathlib.parse_num": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.parts": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len",
    "posixpath.sep",
    "posixpath.sep.join",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.posix_sep": {
  "data": {
   "shadows": "posixpath.sep"
  },
  "type": "import"
 },
 "_pytest.pathlib.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "_pytest.pathlib.register_cleanup_lock_removal": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_pytest.pathlib.atexit",
    "_pytest.pathlib.os",
    "register"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.register_cleanup_lock_removal.cleanup_on_exit": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "_pytest.pathlib.os"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.resolve_from_str": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "input",
    "isinstance",
    "os.path.expanduser",
    "os.path.expandvars",
    "os.path.isabs",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.rmtree": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_pytest.pathlib.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "_pytest.pathlib.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "_pytest.pathlib.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.pathlib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pathlib.try_cleanup": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "_pytest.pathlib.ensure_deletable",
    "_pytest.pathlib.maybe_delete_a_numbered_dir"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "_pytest.pytester": {
  "data": {
   "symbols_in_volume": [
    "_pytest.pytester.re"
   ]
  },
  "type": "module"
 },
 "_pytest.pytester.AssertionRewritingHook": {
  "data": {
   "shadows": "_pytest.assertion.rewrite.AssertionRewritingHook"
  },
  "type": "import"
 },
 "_pytest.pytester.CwdSnapshot": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.CwdSnapshot.__init__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "_pytest.pytester.os"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.CwdSnapshot.restore": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "_pytest.pytester.os"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.EXIT_INTERRUPTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_INTERRUPTED"
  },
  "type": "import"
 },
 "_pytest.pytester.EXIT_OK": {
  "data": {
   "shadows": "_pytest.main.EXIT_OK"
  },
  "type": "import"
 },
 "_pytest.pytester.HookRecorder": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.HookRecorder.__init__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.after": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.before": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "_pytest.pytester.ParsedCall"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assert_contains": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "_pytest.pytester.pytest",
    "_pytest.pytester.sys",
    "enumerate",
    "eval",
    "list",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assertoutcome": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.clear": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.countoutcomes": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.finish_recording": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcall": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcalls": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailedcollections": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailures": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getreports": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.listoutcomes": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.matchreport": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.popcall": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "_pytest.pytester.pytest",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.IGNORE_PAM": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.pytester.LineComp": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.LineComp.__init__": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineComp.assert_contains_lines": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "LineMatcher"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.LineMatcher.__init__": {
  "data": {
   "lineno": 1285
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._getlines": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "_pytest._code.Source",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log_text": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._match_lines": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "_pytest.compat.Sequence",
    "_pytest.pytester.pytest",
    "isinstance",
    "match_func",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._match_lines_random": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "ValueError",
    "match_func",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "fnmatch.fnmatch"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines_random": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "fnmatch.fnmatch"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.get_lines_after": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "fnmatch.fnmatch"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.re_match_lines": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "_pytest.pytester.re"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.re_match_lines_random": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "_pytest.pytester.re"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.str": {
  "data": {
   "lineno": 1289
  },
  "type": "function"
 },
 "_pytest.pytester.LineMatcher_fixture": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.LsofFdLeakChecker._exec_lsof": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "_pytest.pytester.os",
    "_pytest.pytester.subprocess",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_pytest.pytester.IGNORE_PAM",
    "isopen"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output.isopen": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.get_open_files": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.matching_platform": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "OSError",
    "_pytest.pytester.subprocess"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.pytest_runtest_protocol": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_pytest.pytester.gc",
    "_pytest.pytester.pytest",
    "_pytest.pytester.sys",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.MonkeyPatch": {
  "data": {
   "shadows": "_pytest.monkeypatch.MonkeyPatch"
  },
  "type": "import"
 },
 "_pytest.pytester.MultiCapture": {
  "data": {
   "shadows": "_pytest.capture.MultiCapture"
  },
  "type": "import"
 },
 "_pytest.pytester.PYTESTER_COPY_EXAMPLE": {
  "data": {
   "shadows": "_pytest.warning_types.PYTESTER_COPY_EXAMPLE"
  },
  "type": "import"
 },
 "_pytest.pytester.ParsedCall": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.ParsedCall.__init__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "_pytest.pytester.ParsedCall.__repr__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "_pytest.pytester.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.pytester.PytestArg": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.PytestArg.__init__": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "_pytest.pytester.PytestArg.gethookrecorder": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "HookRecorder"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.RunResult": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.RunResult.__init__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "LineMatcher"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.RunResult.__repr__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.RunResult.assert_outcomes": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "_pytest.pytester.RunResult.parseoutcomes": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.pytester.rex_outcome",
    "int",
    "reversed"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Sequence": {
  "data": {
   "shadows": "_pytest.compat.Sequence"
  },
  "type": "import"
 },
 "_pytest.pytester.Session": {
  "data": {
   "shadows": "_pytest.main.Session"
  },
  "type": "import"
 },
 "_pytest.pytester.Source": {
  "data": {
   "shadows": "_pytest._code.Source"
  },
  "type": "import"
 },
 "_pytest.pytester.SysCapture": {
  "data": {
   "shadows": "_pytest.capture.SysCapture"
  },
  "type": "import"
 },
 "_pytest.pytester.SysModulesSnapshot": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.SysModulesSnapshot.__init__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "_pytest.pytester.sys",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.SysModulesSnapshot.restore": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.SysPathsSnapshot": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.SysPathsSnapshot.__init__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "_pytest.pytester.sys",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.SysPathsSnapshot.restore": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "_pytest.main.Session",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.TimeoutExpired": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "_pytest.pytester.CwdSnapshot",
    "_pytest.pytester.SysPathsSnapshot",
    "str",
    "weakref.WeakKeyDictionary"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.__repr__": {
  "data": {
   "lineno": 515
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.__str__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.__take_sys_modules_snapshot": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "_pytest.pytester.SysModulesSnapshot"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.__take_sys_modules_snapshot.preserve_module": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._dump_lines": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "print"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._ensure_basetemp": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "_pytest.compat.safe_str",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._getpytestargs": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "_pytest._code.Source",
    "list",
    "to_text"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile.to_text": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "_pytest.pytester.six",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.chdir": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.collect_by_name": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.copy_example": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "LookupError",
    "ValueError",
    "_pytest.pytester.warnings",
    "_pytest.warning_types.PYTESTER_COPY_EXAMPLE"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.finalize": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.genitems": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getinicfg": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "_pytest.pytester.py"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitem": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitems": {
  "data": {
   "lineno": 978
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getmodulecol": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "_pytest._code.Source",
    "_pytest.pathlib.Path",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getnode": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "_pytest.main.EXIT_OK",
    "_pytest.main.Session",
    "_pytest.pytester.py",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.getpathnode": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "_pytest.main.EXIT_OK",
    "_pytest.main.Session"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_genitems": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "Collect",
    "KeyboardInterrupt",
    "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported",
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.monkeypatch.MonkeyPatch",
    "_pytest.pytester.SysPathsSnapshot",
    "_pytest.pytester.pytest",
    "_pytest.pytester.raise_on_kwargs",
    "finalizer",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.Collect": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.Collect.pytest_configure": {
  "data": {
   "lineno": 843
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.reprec": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.revert_warn_already_imported": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_runsource": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.make_hook_recorder": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "_pytest.pytester.HookRecorder"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeconftest": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makefile": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeini": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.makepyfile": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.maketxtfile": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkdir": {
  "data": {
   "lineno": 632
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkpydir": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfig": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "_pytest.pytester._pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfigure": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.popen": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "_pytest.pytester.Testdir",
    "_pytest.pytester.os",
    "_pytest.pytester.subprocess",
    "bytes",
    "filter",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.run": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "_pytest.pytester.RunResult",
    "_pytest.pytester.Testdir",
    "_pytest.pytester.codecs",
    "_pytest.pytester.py",
    "_pytest.pytester.raise_on_kwargs",
    "_pytest.pytester.six",
    "_pytest.pytester.subprocess",
    "_pytest.pytester.sys",
    "_pytest.pytester.time",
    "bytes",
    "handle_timeout",
    "isinstance",
    "min",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.run.handle_timeout": {
  "data": {
   "lineno": 1113
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runitem": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "runner"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest": {
  "data": {
   "lineno": 903
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "_pytest.capture.MultiCapture",
    "_pytest.capture.SysCapture",
    "_pytest.pytester.RunResult",
    "_pytest.pytester.sys",
    "_pytest.pytester.time",
    "_pytest.pytester.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess.reprec": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.pytester.Testdir.runpytest_subprocess": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "_pytest.pytester.py",
    "_pytest.pytester.raise_on_kwargs",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython_c": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "_pytest.pytester.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "_pytest.pytester.os",
    "_pytest.pytester.platform",
    "_pytest.pytester.pytest",
    "_pytest.pytester.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn_pytest": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.Testdir.syspathinsert": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.WeakKeyDictionary": {
  "data": {
   "shadows": "weakref.WeakKeyDictionary"
  },
  "type": "import"
 },
 "_pytest.pytester._config_for_test": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "_pytest.config.get_config",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester._pytest": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "PytestArg",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.pytester._sys_snapshot": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "SysModulesSnapshot",
    "SysPathsSnapshot",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.pytester.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "_pytest.pytester.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.pytester.fnmatch": {
  "data": {
   "shadows": "fnmatch.fnmatch"
  },
  "type": "import"
 },
 "_pytest.pytester.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "_pytest.pytester.get_config": {
  "data": {
   "shadows": "_pytest.config.get_config"
  },
  "type": "import"
 },
 "_pytest.pytester.get_public_names": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "_pytest.pytester.getdecoded": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "_pytest._io.saferepr.saferepr"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.linecomp": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "LineComp",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.pytester.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.pytester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.pytester.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.pytester.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.pytester.pytest_addoption": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "_pytest.pytester.pytest_configure": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "LsofFdLeakChecker"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.raise_on_kwargs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "TypeError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.pytester.rex_outcome": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "_pytest.pytester.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest.pytester.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.pytester.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.pytester.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "_pytest.pytester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pytester.testdir": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Testdir",
    "_pytest.pytester.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.pytester.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.pytester.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.pytester.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.python": {
  "data": {},
  "type": "module"
 },
 "_pytest.python.CallSpec2": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python.CallSpec2.__init__": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2._checkargnotcontained": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.copy": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "_pytest.python.CallSpec2",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.getparam": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_pytest.compat.NOTSET"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.id": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "filter",
    "map",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.setall": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET",
    "_pytest.fixtures.scopenum_function",
    "id"
   ]
  },
  "type": "function"
 },
 "_pytest.python.CallSpec2.setmulti2": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "_pytest.mark.structures.normalize_mark_list",
    "getattr",
    "id",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Class": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "_pytest.python.PyCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Class._inject_setup_class_fixture": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "_pytest.python._get_non_fixture_func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Class._inject_setup_class_fixture.xunit_setup_class_fixture": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "_pytest.compat.getimfunc",
    "_pytest.fixtures.fixture",
    "_pytest.python._call_with_optional_argument",
    "func"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Class._inject_setup_method_fixture": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "_pytest.python._get_non_fixture_func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Class._inject_setup_method_fixture.xunit_setup_method_fixture": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "_pytest.fixtures.fixture",
    "_pytest.python._call_with_optional_argument",
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Class.collect": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "Instance",
    "_pytest.compat.safe_getattr",
    "_pytest.warning_types.PytestCollectionWarning",
    "hasinit",
    "hasnew"
   ]
  },
  "type": "function"
 },
 "_pytest.python.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.python.FSHookProxy": {
  "data": {
   "shadows": "_pytest.main.FSHookProxy"
  },
  "type": "import"
 },
 "_pytest.python.Function": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "_pytest.fixtures.FuncargnamesCompatAttr",
    "_pytest.nodes.Item",
    "_pytest.python.FunctionMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Function.__init__": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "_pytest.compat.NOTSET",
    "_pytest.mark.structures.get_unpacked_marks",
    "_pytest.mark.structures.normalize_mark_list",
    "_pytest.python.Function",
    "dict.fromkeys",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function._getobj": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function._initrequest": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "_pytest.fixtures.FixtureRequest"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function._pyfuncitem": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function.function": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "_pytest.compat.getimfunc",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Function.runtest": {
  "data": {
   "lineno": 1462
  },
  "type": "function"
 },
 "_pytest.python.Function.setup": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "_pytest.fixtures.fillfixtures",
    "_pytest.python.Function",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.FunctionDefinition": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "_pytest.python.Function"
   ]
  },
  "type": "class"
 },
 "_pytest.python.FunctionDefinition.runtest": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "_pytest.python.FunctionMixin": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "_pytest.python.PyobjMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.python.FunctionMixin._prunetraceback": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "_pytest._code.filter_traceback",
    "_pytest.compat.get_real_func",
    "_pytest.python._pytest",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.python.FunctionMixin.repr_failure": {
  "data": {
   "lineno": 841
  },
  "type": "function"
 },
 "_pytest.python.FunctionMixin.setup": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "_pytest.python.Instance",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Instance": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "_pytest.python.PyCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Instance._getobj": {
  "data": {
   "lineno": 798
  },
  "type": "function"
 },
 "_pytest.python.Instance.collect": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "_pytest.python.Instance",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Instance.newinstance": {
  "data": {
   "lineno": 805
  },
  "type": "function"
 },
 "_pytest.python.MARK_GEN": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "_pytest.python.Metafunc": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "_pytest.fixtures.FuncargnamesCompatAttr"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Metafunc.__init__": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "FunctionDefinition",
    "cls",
    "isinstance",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Metafunc._resolve_arg_ids": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.outcomes.fail",
    "_pytest.python.six",
    "callable",
    "idmaker",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Metafunc._resolve_arg_value_types": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "dict.fromkeys",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Metafunc._validate_if_using_arg_names": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "_pytest.compat.get_default_arg_names",
    "_pytest.outcomes.fail",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Metafunc.parametrize": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "_find_parametrized_scope",
    "_pytest.fixtures.scope2index",
    "_pytest.mark.ParameterSet._for_parametrize",
    "_pytest.python.CallSpec2",
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "_pytest.nodes.File",
    "_pytest.python.PyCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Module._getobj": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "_pytest.python.Module._importtestmodule": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ImportError",
    "SyntaxError",
    "_pytest._code.code.ExceptionInfo.from_current",
    "_pytest._code.filter_traceback",
    "_pytest.compat.safe_str",
    "_pytest.python._pytest",
    "_pytest.python.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_function_fixture": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "_get_non_fixture_func"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_function_fixture.xunit_setup_function_fixture": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "_call_with_optional_argument",
    "_pytest.fixtures.fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_module_fixture": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "_get_non_fixture_func"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_module_fixture.xunit_setup_module_fixture": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "_call_with_optional_argument",
    "_pytest.fixtures.fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Module.collect": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "_pytest.python.Module",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.NOTSET": {
  "data": {
   "shadows": "_pytest.compat.NOTSET"
  },
  "type": "import"
 },
 "_pytest.python.Package": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "_pytest.python.Module"
   ]
  },
  "type": "class"
 },
 "_pytest.python.Package.__init__": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "_pytest.nodes.FSCollector.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Package._collectfile": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "_pytest.python.Package._recurse": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "_pytest.python.Package.collect": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "_pytest.pathlib.parts",
    "_pytest.python.Module",
    "_pytest.python.path_matches_patterns",
    "any",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Package.gethookproxy": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "_pytest.main.FSHookProxy"
   ]
  },
  "type": "function"
 },
 "_pytest.python.Package.isinitpath": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "_pytest.python.Package.setup": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "_call_with_optional_argument",
    "_get_non_fixture_func",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "_pytest.python.ParameterSet": {
  "data": {
   "shadows": "_pytest.mark.ParameterSet"
  },
  "type": "import"
 },
 "_pytest.python.PyCollector": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_pytest.nodes.Collector",
    "_pytest.python.PyobjMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.python.PyCollector._genfunctions": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "Class",
    "Function",
    "FunctionDefinition",
    "Metafunc",
    "Module",
    "_pytest.fixtures.add_funcarg_pseudo_fixture_def",
    "cls",
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector._makeitem": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "_pytest.python.PyCollector._matches_prefix_or_glob_option": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "_pytest.python.fnmatch"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.classnamefilter": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.collect": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "_pytest.python.inspect",
    "getattr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.funcnamefilter": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.isnosetest": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "_pytest.compat.safe_getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.istestclass": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "_pytest.python.PyCollector.istestfunction": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "_pytest.compat.safe_getattr",
    "_pytest.fixtures.getfixturemarker",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjContext": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "_pytest.python.pyobj_property",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python.PyobjMixin": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "_pytest.python.PyobjContext"
   ]
  },
  "type": "class"
 },
 "_pytest.python.PyobjMixin.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "_pytest.python.PyobjMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin._getobj": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.getmodpath": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "Module",
    "_pytest.pathlib.parts",
    "_pytest.pathlib.parts.append",
    "_pytest.pathlib.parts.reverse",
    "_pytest.python.os",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "_pytest.python.PyobjMixin.reportinfo": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "_pytest.compat.getfslineno",
    "_pytest.python.sys",
    "getattr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.python.PytestCollectionWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestCollectionWarning"
  },
  "type": "import"
 },
 "_pytest.python.PytestUnhandledCoroutineWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestUnhandledCoroutineWarning"
  },
  "type": "import"
 },
 "_pytest.python.REGEX_TYPE": {
  "data": {
   "shadows": "_pytest.compat.REGEX_TYPE"
  },
  "type": "import"
 },
 "_pytest.python.STRING_TYPES": {
  "data": {
   "shadows": "_pytest.compat.STRING_TYPES"
  },
  "type": "import"
 },
 "_pytest.python._ascii_escaped_by_config": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "_pytest.compat.ascii_escaped"
   ]
  },
  "type": "function"
 },
 "_pytest.python._call_with_optional_argument": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "_pytest.python.inspect",
    "func"
   ]
  },
  "type": "function"
 },
 "_pytest.python._find_parametrized_scope": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "_pytest.fixtures.scopes",
    "bool",
    "isinstance",
    "len",
    "list",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.python._get_non_fixture_func": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "_pytest.fixtures.getfixturemarker",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python._get_xunit_setup_teardown": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "_get_non_fixture_func",
    "_pytest.python.inspect",
    "result"
   ]
  },
  "type": "function"
 },
 "_pytest.python._idval": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_pytest.compat.REGEX_TYPE",
    "_pytest.compat.STRING_TYPES",
    "_pytest.compat.ascii_escaped",
    "_pytest.compat.enum",
    "_pytest.compat.enum.Enum",
    "_pytest.compat.isclass",
    "_pytest.compat.isfunction",
    "_pytest.python._ascii_escaped_by_config",
    "_pytest.python.six",
    "bool",
    "float",
    "hasattr",
    "idfn",
    "int",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python._idvalset": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "_pytest.python._ascii_escaped_by_config",
    "_pytest.python._idval",
    "idfn",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.python._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.python._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.python._show_fixtures_per_test": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "_pytest.python._pytest",
    "_pytest.python.py",
    "write_item"
   ]
  },
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.get_best_relpath": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "_pytest.compat.getlocation",
    "func"
   ]
  },
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_fixture": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "get_best_relpath",
    "write_docstring"
   ]
  },
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_item": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "AttributeError",
    "get_best_relpath",
    "sorted",
    "write_fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.python._showfixtures_main": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "_pytest.compat.getlocation",
    "_pytest.python._pytest",
    "_pytest.python.py",
    "len",
    "set",
    "write_docstring"
   ]
  },
  "type": "function"
 },
 "_pytest.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.python.ascii_escaped": {
  "data": {
   "shadows": "_pytest.compat.ascii_escaped"
  },
  "type": "import"
 },
 "_pytest.python.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "_pytest.python.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "_pytest.python.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.python.enum": {
  "data": {
   "shadows": "_pytest.compat.enum"
  },
  "type": "import"
 },
 "_pytest.python.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.python.filter_traceback": {
  "data": {
   "shadows": "_pytest._code.filter_traceback"
  },
  "type": "import"
 },
 "_pytest.python.fixtures": {
  "data": {
   "shadows": "_pytest.fixtures"
  },
  "type": "import"
 },
 "_pytest.python.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.python.get_default_arg_names": {
  "data": {
   "shadows": "_pytest.compat.get_default_arg_names"
  },
  "type": "import"
 },
 "_pytest.python.get_real_func": {
  "data": {
   "shadows": "_pytest.compat.get_real_func"
  },
  "type": "import"
 },
 "_pytest.python.get_unpacked_marks": {
  "data": {
   "shadows": "_pytest.mark.structures.get_unpacked_marks"
  },
  "type": "import"
 },
 "_pytest.python.getfslineno": {
  "data": {
   "shadows": "_pytest.compat.getfslineno"
  },
  "type": "import"
 },
 "_pytest.python.getimfunc": {
  "data": {
   "shadows": "_pytest.compat.getimfunc"
  },
  "type": "import"
 },
 "_pytest.python.getlocation": {
  "data": {
   "shadows": "_pytest.compat.getlocation"
  },
  "type": "import"
 },
 "_pytest.python.hasinit": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "getattr",
    "object.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.python.hasnew": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "getattr",
    "object.__new__"
   ]
  },
  "type": "function"
 },
 "_pytest.python.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.python.idmaker": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "_pytest.python._idvalset",
    "_pytest.python.collections",
    "enumerate",
    "idfn",
    "len",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.python.is_generator": {
  "data": {
   "shadows": "_pytest.compat.is_generator"
  },
  "type": "import"
 },
 "_pytest.python.isclass": {
  "data": {
   "shadows": "_pytest.compat.isclass"
  },
  "type": "import"
 },
 "_pytest.python.isfunction": {
  "data": {
   "shadows": "_pytest.compat.isfunction"
  },
  "type": "import"
 },
 "_pytest.python.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.python.normalize_mark_list": {
  "data": {
   "shadows": "_pytest.mark.structures.normalize_mark_list"
  },
  "type": "import"
 },
 "_pytest.python.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.python.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "_pytest.python.parts": {
  "data": {
   "shadows": "_pytest.pathlib.parts"
  },
  "type": "import"
 },
 "_pytest.python.path_matches_patterns": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.python.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.python.pyobj_property": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pyobj_property.get": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "__import__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_addoption": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "_pytest.python.pytest_cmdline_main": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "show_fixtures_per_test",
    "showfixtures"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_collect_file": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "path_matches_patterns"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_configure": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "_pytest.python.pytest_generate_tests": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_pytest.outcomes.fail"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_make_parametrize_id": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Class",
    "Function",
    "_pytest.compat.get_real_func",
    "_pytest.compat.getfslineno",
    "_pytest.compat.is_generator",
    "_pytest.compat.isfunction",
    "_pytest.compat.safe_isclass",
    "_pytest.config.hookimpl",
    "_pytest.deprecated.YIELD_TESTS.format",
    "_pytest.mark.MARK_GEN.xfail",
    "_pytest.python.warnings",
    "_pytest.warning_types.PytestCollectionWarning",
    "getattr",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makemodule": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "Module",
    "Package"
   ]
  },
  "type": "function"
 },
 "_pytest.python.pytest_pyfunc_call": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "_pytest.outcomes.skip",
    "_pytest.python.inspect",
    "_pytest.python.warnings",
    "_pytest.warning_types.PytestUnhandledCoroutineWarning",
    "getattr",
    "iscoroutinefunction",
    "testfunction"
   ]
  },
  "type": "function"
 },
 "_pytest.python.safe_getattr": {
  "data": {
   "shadows": "_pytest.compat.safe_getattr"
  },
  "type": "import"
 },
 "_pytest.python.safe_isclass": {
  "data": {
   "shadows": "_pytest.compat.safe_isclass"
  },
  "type": "import"
 },
 "_pytest.python.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest.python.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.python.scope2index": {
  "data": {
   "shadows": "_pytest.fixtures.scope2index"
  },
  "type": "import"
 },
 "_pytest.python.scopes": {
  "data": {
   "shadows": "_pytest.fixtures.scopes"
  },
  "type": "import"
 },
 "_pytest.python.show_fixtures_per_test": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.python.showfixtures": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.python.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.python.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.python.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.python.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.python.wrap_session": {
  "data": {
   "shadows": "_pytest.main.wrap_session"
  },
  "type": "import"
 },
 "_pytest.python.write_docstring": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api": {
  "data": {
   "symbols_in_volume": [
    "_pytest.compat.STRING_TYPES",
    "_pytest.outcomes.fail.Exception",
    "_pytest.python_api.raises",
    "type"
   ]
  },
  "type": "module"
 },
 "_pytest.python_api.ApproxBase": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "_pytest.python_api._cmp_raises_type_error",
    "_pytest.python_api.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxBase.__eq__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__ne__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__repr__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._approx_scalar": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ApproxScalar"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._check_type": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._yield_comparisons": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxDecimal": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxScalar",
    "decimal.Decimal"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping.__eq__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping.__repr__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._check_type": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.python_api._non_numeric_type_error",
    "_pytest.python_api.pprint",
    "isinstance",
    "numbers.Number",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._yield_comparisons": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase",
    "_pytest.python_api._cmp_raises_type_error",
    "_pytest.python_api.sys"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxNumpy.__eq__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.python_api.ApproxBase",
    "numpy.asarray",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy.__repr__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_pytest.python_api._recursive_list_map"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy._yield_comparisons": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.isscalar",
    "numpy.ndindex"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxScalar.__eq__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "_is_numpy_array",
    "_pytest.python_api.math",
    "abs",
    "all"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.__repr__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.python_api.math",
    "_pytest.python_api.sys",
    "complex",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.python_api.math",
    "abs",
    "max",
    "property",
    "set_default"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance.set_default": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.ApproxSequencelike.__eq__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_pytest.python_api.ApproxBase",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike.__repr__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "list",
    "seq_type",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike._check_type": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.python_api._non_numeric_type_error",
    "_pytest.python_api.pprint",
    "enumerate",
    "isinstance",
    "numbers.Number",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike._yield_comparisons": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "six.moves.zip"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.BASE_TYPE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.python_api.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "_pytest.python_api.Iterable": {
  "data": {
   "shadows": "_pytest.compat.Iterable"
  },
  "type": "import"
 },
 "_pytest.python_api.Mapping": {
  "data": {
   "shadows": "_pytest.compat.Mapping"
  },
  "type": "import"
 },
 "_pytest.python_api.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "_pytest.python_api.RaisesContext": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.python_api.RaisesContext.__enter__": {
  "data": {
   "lineno": 729
  },
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__exit__": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "_pytest.python_api.sys",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__init__": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "_pytest.python_api.STRING_TYPES": {
  "data": {
   "shadows": "_pytest.compat.STRING_TYPES"
  },
  "type": "import"
 },
 "_pytest.python_api.Sized": {
  "data": {
   "shadows": "_pytest.compat.Sized"
  },
  "type": "import"
 },
 "_pytest.python_api._cmp_raises_type_error": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api._is_numpy_array": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "_pytest.python_api.sys",
    "isinstance",
    "numpy",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api._non_numeric_type_error": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.python_api._recursive_list_map": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.python_api.always_iterable": {
  "data": {
   "shadows": "more_itertools.more.always_iterable"
  },
  "type": "import"
 },
 "_pytest.python_api.approx": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "_is_numpy_array",
    "_pytest.compat.Iterable",
    "_pytest.compat.Mapping",
    "_pytest.compat.STRING_TYPES",
    "_pytest.compat.Sized",
    "_pytest.python_api.ApproxDecimal",
    "_pytest.python_api.ApproxMapping",
    "_pytest.python_api.ApproxNumpy",
    "_pytest.python_api.ApproxScalar",
    "_pytest.python_api.ApproxSequencelike",
    "_pytest.python_api._non_numeric_type_error",
    "abs",
    "cls",
    "decimal.Decimal",
    "isinstance",
    "numbers.Number"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.python_api.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.python_api.filterfalse": {
  "data": {
   "shadows": "six.moves.filterfalse"
  },
  "type": "import"
 },
 "_pytest.python_api.isclass": {
  "data": {
   "shadows": "_pytest.compat.isclass"
  },
  "type": "import"
 },
 "_pytest.python_api.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "_pytest.python_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "_pytest.python_api.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest.python_api.raises": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "RaisesContext",
    "TypeError",
    "_pytest.compat.isclass",
    "_pytest.deprecated.RAISES_EXEC",
    "_pytest.deprecated.RAISES_MESSAGE_PARAMETER",
    "_pytest.outcomes.fail",
    "_pytest.python_api.BASE_TYPE",
    "_pytest.python_api.sys",
    "_pytest.python_api.warnings",
    "exec",
    "func",
    "isinstance",
    "more_itertools.more.always_iterable",
    "six.moves.filterfalse",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.python_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.python_api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.python_api.zip": {
  "data": {
   "shadows": "six.moves.zip"
  },
  "type": "import"
 },
 "_pytest.recwarn": {
  "data": {},
  "type": "module"
 },
 "_pytest.recwarn.PYTEST_WARNS_UNKNOWN_KWARGS": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_WARNS_UNKNOWN_KWARGS"
  },
  "type": "import"
 },
 "_pytest.recwarn.WARNS_EXEC": {
  "data": {
   "shadows": "_pytest.deprecated.WARNS_EXEC"
  },
  "type": "import"
 },
 "_pytest.recwarn.WarningsChecker": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_pytest.recwarn.WarningsRecorder"
   ]
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsChecker.__exit__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "_pytest.recwarn.WarningsChecker",
    "_pytest.recwarn.re",
    "all",
    "any",
    "issubclass",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsChecker.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.recwarn.WarningsChecker",
    "_pytest.recwarn.inspect",
    "isinstance",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_pytest.recwarn.warnings"
   ]
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.recwarn.WarningsRecorder",
    "_pytest.recwarn.six",
    "_pytest.recwarn.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__.warn": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "UserWarning",
    "Warning",
    "_pytest.recwarn.sys",
    "isinstance",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__exit__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.recwarn.WarningsRecorder",
    "_pytest.recwarn.six",
    "_pytest.recwarn.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__getitem__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "_pytest.recwarn.WarningsRecorder",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__iter__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__len__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.clear": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.list": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.pop": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "AssertionError",
    "Warning",
    "enumerate",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.recwarn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.recwarn.deprecated_call": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "warns"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.recwarn.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.recwarn.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.recwarn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.recwarn.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.recwarn.recwarn": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "WarningsRecorder",
    "_pytest.fixtures.yield_fixture",
    "_pytest.recwarn.warnings"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.recwarn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.recwarn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.recwarn.warns": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "WarningsChecker",
    "_pytest.deprecated.PYTEST_WARNS_UNKNOWN_KWARGS.format",
    "_pytest.deprecated.WARNS_EXEC",
    "_pytest.recwarn.sys",
    "_pytest.recwarn.warnings",
    "exec",
    "func",
    "isinstance",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 },
 "_pytest.reports": {
  "data": {},
  "type": "module"
 },
 "_pytest.reports.BaseReport": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.BaseReport.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._from_json": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "_pytest._code.code.ReprEntry",
    "_pytest._code.code.ReprEntryNative",
    "_pytest._code.code.ReprExceptionInfo",
    "_pytest._code.code.ReprFileLocation",
    "_pytest._code.code.ReprFuncArgs",
    "_pytest._code.code.ReprLocals",
    "_pytest._code.code.ReprTraceback",
    "_report_unserialization_failure",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._get_verbose_word": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._to_json": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "_pytest.pathlib.Path",
    "_pytest.reports.py",
    "_pytest.reports.six",
    "disassembled_report",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._to_json.disassembled_report": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.caplog": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstderr": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstdout": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.count_towards_summary": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.fspath": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.get_sections": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.head_line": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.longreprtext": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_pytest.reports.py",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.toterminal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "_pytest.reports.getslaveinfoline",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.CollectErrorRepr.__init__": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr.toterminal": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "_pytest.reports.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.CollectReport.__init__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport.__repr__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport.location": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.reports.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.reports.ReprEntry": {
  "data": {
   "shadows": "_pytest._code.code.ReprEntry"
  },
  "type": "import"
 },
 "_pytest.reports.ReprEntryNative": {
  "data": {
   "shadows": "_pytest._code.code.ReprEntryNative"
  },
  "type": "import"
 },
 "_pytest.reports.ReprExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ReprExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.reports.ReprFileLocation": {
  "data": {
   "shadows": "_pytest._code.code.ReprFileLocation"
  },
  "type": "import"
 },
 "_pytest.reports.ReprFuncArgs": {
  "data": {
   "shadows": "_pytest._code.code.ReprFuncArgs"
  },
  "type": "import"
 },
 "_pytest.reports.ReprLocals": {
  "data": {
   "shadows": "_pytest._code.code.ReprLocals"
  },
  "type": "import"
 },
 "_pytest.reports.ReprTraceback": {
  "data": {
   "shadows": "_pytest._code.code.ReprTraceback"
  },
  "type": "import"
 },
 "_pytest.reports.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.reports.TestReport": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "_pytest.reports.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.TestReport.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.TestReport.__repr__": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "_pytest.reports.TestReport.from_item_and_call": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionInfo",
    "_pytest.outcomes.skip.Exception",
    "classmethod",
    "cls",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.reports._report_unserialization_failure": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.reports.py",
    "pprint.pprint"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.getslaveinfoline": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "_pytest.reports.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.reports.pytest_report_from_serializable": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "_pytest.reports.CollectReport",
    "_pytest.reports.TestReport"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.pytest_report_to_serializable": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "_pytest.reports.CollectReport",
    "_pytest.reports.TestReport",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.reports.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.resultlog": {
  "data": {},
  "type": "module"
 },
 "_pytest.resultlog.RESULT_LOG": {
  "data": {
   "shadows": "_pytest.deprecated.RESULT_LOG"
  },
  "type": "import"
 },
 "_pytest.resultlog.ResultLog": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_pytest.resultlog.py",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.resultlog.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.resultlog.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.resultlog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.resultlog.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.resultlog.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.resultlog.pytest_addoption": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ResultLog",
    "_pytest.deprecated.RESULT_LOG",
    "_pytest.resultlog.os",
    "_pytest.warnings._issue_warning_captured",
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner": {
  "data": {},
  "type": "module"
 },
 "_pytest.runner.CallInfo": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "_pytest.runner.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.CallInfo.__repr__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CallInfo.from_call": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionInfo.from_current",
    "classmethod",
    "cls",
    "func",
    "time.time"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CallInfo.result": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.runner.Exit": {
  "data": {
   "shadows": "_pytest.outcomes.Exit"
  },
  "type": "import"
 },
 "_pytest.runner.SetupState": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.SetupState.__init__": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._callfinalizers": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "_pytest.runner.six",
    "_pytest.runner.sys",
    "fin"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._pop_and_teardown": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_towards": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "_pytest.runner.six",
    "_pytest.runner.sys",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_with_finalization": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.addfinalizer": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "callable",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.prepare": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "_pytest.runner.six",
    "_pytest.runner.sys",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_all": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_exact": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "_pytest.runner.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "_pytest.runner.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.runner._update_current_test_var": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "_pytest.runner.os"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.runner.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.runner.bdb": {
  "data": {
   "shadows": "bdb"
  },
  "type": "import"
 },
 "_pytest.runner.call_and_report": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "call_runtest_hook",
    "check_interactive_exception"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.call_runtest_hook": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "_pytest.outcomes.Exit",
    "getattr",
    "ihook"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.check_interactive_exception": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.outcomes.Skipped",
    "_pytest.runner.bdb",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.collect_one_node": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "_pytest.runner.check_interactive_exception",
    "ihook",
    "ihook.pytest_collectstart",
    "ihook.pytest_exception_interact",
    "ihook.pytest_make_collect_report"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.runner.nose": {
  "data": {
   "shadows": "_pytest.nose"
  },
  "type": "import"
 },
 "_pytest.runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.runner.pytest_addoption": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_make_collect_report": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "CollectErrorRepr",
    "CollectReport",
    "_pytest.nose.get_skip_exceptions",
    "_pytest.outcomes.Skipped",
    "_pytest.runner.CallInfo",
    "getattr",
    "hasattr",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_report_teststatus": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_call": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Exception",
    "_pytest.runner.sys",
    "_update_current_test_var",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_makereport": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_protocol": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "runtestprotocol"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_setup": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_update_current_test_var"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_teardown": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "_update_current_test_var"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_sessionfinish": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "_pytest.runner.pytest_sessionstart": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "SetupState"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_terminal_summary": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.runtestprotocol": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "call_and_report",
    "hasattr",
    "show_test_item"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.show_test_item": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.runner.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "_pytest.setuponly": {
  "data": {},
  "type": "module"
 },
 "_pytest.setuponly._show_fixture_action": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_pytest.setuponly.sys",
    "hasattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.setuponly.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.setuponly.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.setuponly.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.setuponly.pytest_addoption": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "_pytest.setuponly.pytest_cmdline_main": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_pytest.setuponly.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_post_finalizer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_show_fixture_action",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_setup": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest.setuponly.pytest",
    "_show_fixture_action",
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.setuponly.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.setupplan": {
  "data": {},
  "type": "module"
 },
 "_pytest.setupplan.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.setupplan.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.setupplan.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest_addoption": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping": {
  "data": {},
  "type": "module"
 },
 "_pytest.skipping.MarkEvaluator": {
  "data": {
   "shadows": "_pytest.mark.evaluate.MarkEvaluator"
  },
  "type": "import"
 },
 "_pytest.skipping._is_unittest_unexpected_success_a_failure": {
  "data": {
   "shadows": "_pytest.compat._is_unittest_unexpected_success_a_failure"
  },
  "type": "import"
 },
 "_pytest.skipping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.skipping.check_strict_xfail": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_pytest.outcomes.fail"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.check_xfail_no_run": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_pytest.outcomes.xfail"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.skipping.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.skipping.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.skipping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.skipping.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.skipping.pytest_addoption": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_configure": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_pytest.outcomes.xfail.Exception",
    "_pytest.skipping.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_configure.nop": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_pyfunc_call": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "check_strict_xfail",
    "check_xfail_no_run"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_report_teststatus": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_makereport": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_pytest.compat._is_unittest_unexpected_success_a_failure",
    "_pytest.config.hookimpl",
    "_pytest.outcomes.xfail.Exception",
    "getattr",
    "hasattr",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_setup": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "_pytest.mark.evaluate.MarkEvaluator",
    "_pytest.outcomes.skip",
    "check_xfail_no_run"
   ]
  },
  "type": "function"
 },
 "_pytest.skipping.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.skipping.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "_pytest.stepwise": {
  "data": {},
  "type": "module"
 },
 "_pytest.stepwise.StepwisePlugin": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "_pytest.stepwise.StepwisePlugin.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_collectreport": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_report_collectionfinish": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionstart": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "_pytest.stepwise.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.stepwise.pytest_addoption": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "_pytest.stepwise.pytest_configure": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "StepwisePlugin",
    "_pytest.stepwise.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal": {
  "data": {},
  "type": "module"
 },
 "_pytest.terminal.EXIT_INTERRUPTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_INTERRUPTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_NOTESTSCOLLECTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_OK": {
  "data": {
   "shadows": "_pytest.main.EXIT_OK"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_TESTSFAILED": {
  "data": {
   "shadows": "_pytest.main.EXIT_TESTSFAILED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_USAGEERROR": {
  "data": {
   "shadows": "_pytest.main.EXIT_USAGEERROR"
  },
  "type": "import"
 },
 "_pytest.terminal.MoreQuietAction": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_pytest.terminal.argparse"
   ]
  },
  "type": "class"
 },
 "_pytest.terminal.MoreQuietAction.__call__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.MoreQuietAction.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_pytest.terminal.MoreQuietAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.REPORT_COLLECTING_RESOLUTION": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.terminal.TerminalReporter": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.terminal.TerminalReporter.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "_pytest.terminal.getreportopt",
    "_pytest.terminal.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._determine_show_progress_info": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._get_progress_information_message": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getcrashline": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "AttributeError",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getfailureheadline": {
  "data": {
   "lineno": 734
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "_pytest.nodes.SEP",
    "mkrel"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline.mkrel": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._outrep_summary": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._printcollecteditems": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._report_keyboardinterrupt": {
  "data": {
   "lineno": 698
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._width_of_current_line": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_progress_information_filling_space": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_report_lines_from_hooks": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "more_itertools.collapse"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.ensure_newline": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.getreports": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.hasopt": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.line": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.print_teardown_sections": {
  "data": {
   "lineno": 810
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "_pytest.terminal.time"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_finish": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collectreport": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "_pytest.terminal.pytest",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_deselected": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_internalerror": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "_pytest.terminal.six"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_plugin_registered": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_report_header": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "_plugin_nameversions"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logfinish": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logreport": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logstart": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionfinish": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main.EXIT_TESTSFAILED",
    "_pytest.main.EXIT_USAGEERROR",
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionstart": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "_pytest.terminal.platform",
    "_pytest.terminal.pluggy",
    "_pytest.terminal.py",
    "_pytest.terminal.pytest",
    "_pytest.terminal.sys",
    "_pytest.terminal.time",
    "getattr",
    "hasattr",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_terminal_summary": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_unconfigure": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_warning_captured": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "_pytest.terminal.WarningReport",
    "_pytest.warnings.warning_record_to_str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.report_collect": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "_pytest.terminal.REPORT_COLLECTING_RESOLUTION",
    "_pytest.terminal.time",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.rewrite": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.section": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "action",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_simple": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "_get_line_with_reprcrash_message"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_skipped": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "_folded_skips"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_xfailed": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "_get_pos",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_xpassed": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "_get_pos"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showfspath": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showheader": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showlongtestinfo": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_errors": {
  "data": {
   "lineno": 846
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_failures": {
  "data": {
   "lineno": 823
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_passes": {
  "data": {
   "lineno": 797
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_stats": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "_pytest.terminal.time",
    "build_summary_stats_line"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "_pytest.terminal.collections",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.verbosity": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_ensure_prefix": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_fspath_result": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_line": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "_pytest.terminal.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_sep": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "_pytest.terminal.WarningReport": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "_pytest.terminal.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.terminal.WarningReport.get_location": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_pytest.terminal.py",
    "isinstance",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal._folded_skips": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "events",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal._get_line_with_reprcrash_message": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_pytest.terminal._get_pos",
    "_pytest.terminal.six",
    "wcwidth.wcswidth"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal._get_pos": {
  "data": {
   "lineno": 957
  },
  "type": "function"
 },
 "_pytest.terminal._plugin_nameversions": {
  "data": {
   "lineno": 1073
  },
  "type": "function"
 },
 "_pytest.terminal._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.terminal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.terminal.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "_pytest.terminal.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.terminal.build_summary_stats_line": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "getattr",
    "sum"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.collapse": {
  "data": {
   "shadows": "more_itertools.collapse"
  },
  "type": "import"
 },
 "_pytest.terminal.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "_pytest.terminal.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.terminal.getreportopt": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "_pytest.terminal.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.terminal.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "_pytest.terminal.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.terminal.pluggy": {
  "data": {
   "shadows": "pluggy"
  },
  "type": "import"
 },
 "_pytest.terminal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.terminal.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest_addoption": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_pytest.terminal.MoreQuietAction",
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TerminalReporter",
    "_pytest.terminal.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure.mywriter": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_report_teststatus": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.terminal.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.terminal.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.terminal.warning_record_to_str": {
  "data": {
   "shadows": "_pytest.warnings.warning_record_to_str"
  },
  "type": "import"
 },
 "_pytest.terminal.wcswidth": {
  "data": {
   "shadows": "wcwidth.wcswidth"
  },
  "type": "import"
 },
 "_pytest.tmpdir": {
  "data": {},
  "type": "module"
 },
 "_pytest.tmpdir.MonkeyPatch": {
  "data": {
   "shadows": "_pytest.monkeypatch.MonkeyPatch"
  },
  "type": "import"
 },
 "_pytest.tmpdir.TempPathFactory": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Path",
    "_pytest.tmpdir.attr",
    "_pytest.tmpdir.os",
    "_pytest.tmpdir.six",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempPathFactory.from_config": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.getbasetemp": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Path",
    "_pytest.tmpdir.os",
    "_pytest.tmpdir.tempfile",
    "ensure_reset_dir",
    "get_user",
    "make_numbered_dir_with_cleanup"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.mktemp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "make_numbered_dir"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "_pytest.tmpdir.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.ensuretemp": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "_pytest.tmpdir.warnings",
    "dir"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pytest.tmpdir.py"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_pytest.tmpdir.py"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir._mk_tmp": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_pytest.tmpdir.re"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.tmpdir.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.tmpdir.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.tmpdir.get_user": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "_pytest.tmpdir.getpass"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "_pytest.tmpdir.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.tmpdir.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.tmpdir.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest_configure": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "_pytest.tmpdir.TempPathFactory",
    "_pytest.tmpdir.TempdirFactory",
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.tmpdir.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tmp_path": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_pytest.tmpdir._mk_tmp",
    "_pytest.tmpdir.pytest",
    "_pytest.tmpdir.tmp_path_factory"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmp_path_factory": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_pytest.tmpdir.py",
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.unittest": {
  "data": {},
  "type": "module"
 },
 "_pytest.unittest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "_pytest.unittest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "_pytest.unittest.IReporter": {
  "data": {
   "shadows": "twisted.trial.itrial.IReporter"
  },
  "type": "import"
 },
 "_pytest.unittest.TestCaseFunction": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_pytest.python.Function"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "TypeError",
    "_pytest.outcomes.fail",
    "_pytest.outcomes.fail.Exception",
    "_pytest.unittest.traceback",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._fix_unittest_skip_decorator": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_pytest.unittest.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._handle_skip": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.unittest.sys",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "_pytest.python.Function._prunetraceback",
    "_pytest.unittest.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "_pytest.outcomes.xfail",
    "_pytest.outcomes.xfail.Exception",
    "_pytest.unittest.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "_pytest.outcomes.skip",
    "_pytest.outcomes.skip.Exception",
    "_pytest.unittest.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "_pytest.unittest.TestLoader": {
  "data": {
   "shadows": "unittest.TestLoader"
  },
  "type": "import"
 },
 "_pytest.unittest.UnitTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_pytest.python.Class"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase._inject_setup_teardown_fixtures": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_make_xunit_fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TestCaseFunction",
    "_pytest.compat.getimfunc",
    "_pytest.unittest.sys",
    "getattr",
    "unittest.TestLoader"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture.fixture": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_pytest.unittest.pytest",
    "getattr",
    "setup",
    "teardown"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.unittest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "_pytest.unittest.TestCaseFunction",
    "twisted.trial.itrial.IReporter",
    "zope.interface.classImplements"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.classImplements": {
  "data": {
   "shadows": "zope.interface.classImplements"
  },
  "type": "import"
 },
 "_pytest.unittest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.unittest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.unittest.getimfunc": {
  "data": {
   "shadows": "_pytest.compat.getimfunc"
  },
  "type": "import"
 },
 "_pytest.unittest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.unittest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "UnitTestCase",
    "_pytest.unittest.sys",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.config.hookimpl",
    "_pytest.unittest.TestCaseFunction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Failure__init__",
    "_pytest.config.hookimpl",
    "_pytest.unittest.TestCaseFunction",
    "_pytest.unittest.sys",
    "check_testcase_implements_trial_reporter",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "Failure__init__",
    "TypeError",
    "_pytest.unittest.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.unittest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.unittest.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.unittest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "_pytest.warning_types": {
  "data": {
   "symbols_in_volume": [
    "_pytest.warning_types.PytestExperimentalApiWarning"
   ]
  },
  "type": "module"
 },
 "_pytest.warning_types.PYTESTER_COPY_EXAMPLE": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "_pytest.warning_types.PytestAssertRewriteWarning": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestCacheWarning": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestCollectionWarning": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestConfigWarning": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestDeprecationWarning": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "FutureWarning",
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning.simple": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.warning_types.PytestUnhandledCoroutineWarning": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestUnknownMarkWarning": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestWarning": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.RemovedInPytest4Warning": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestDeprecationWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_pytest.warning_types.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning.format": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "_pytest.warning_types.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.warnings": {
  "data": {},
  "type": "module"
 },
 "_pytest.warnings.SHOW_PYTEST_WARNINGS_ARG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "_pytest.warnings._issue_warning_captured": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "_pytest.warnings.warnings",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings._setoption": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.warnings.catch_warnings_for_item": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "_pytest.warnings._setoption",
    "_pytest.warnings.pytest",
    "_pytest.warnings.sys",
    "_pytest.warnings.warnings",
    "contextlib.contextmanager",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.compat": {
  "data": {
   "shadows": "_pytest.compat"
  },
  "type": "import"
 },
 "_pytest.warnings.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.warnings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.warnings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest_addoption": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_collection": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "_pytest.warnings.catch_warnings_for_item",
    "_pytest.warnings.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_configure": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_runtest_protocol": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "_pytest.warnings.catch_warnings_for_item",
    "_pytest.warnings.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_terminal_summary": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "_pytest.warnings.catch_warnings_for_item",
    "_pytest.warnings.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.warnings.warning_record_to_str": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "UnicodeWarning",
    "_pytest.compat.UNICODE_TYPES",
    "_pytest.compat._PY2",
    "_pytest.compat.ascii_escaped",
    "_pytest.compat.safe_str",
    "_pytest.warnings.warnings",
    "any",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pytest": {
  "data": {
   "symbols_in_volume": [
    "SystemExit",
    "__name__",
    "_pytest.compat._setup_collect_fakemodule",
    "_pytest.debugging.pytestPDB.set_trace",
    "pytest.pytest"
   ]
  },
  "type": "module"
 },
 "pytest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "pytest.Collector": {
  "data": {
   "shadows": "_pytest.nodes.Collector"
  },
  "type": "import"
 },
 "pytest.File": {
  "data": {
   "shadows": "_pytest.nodes.File"
  },
  "type": "import"
 },
 "pytest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "pytest.Instance": {
  "data": {
   "shadows": "_pytest.python.Instance"
  },
  "type": "import"
 },
 "pytest.Item": {
  "data": {
   "shadows": "_pytest.nodes.Item"
  },
  "type": "import"
 },
 "pytest.Module": {
  "data": {
   "shadows": "_pytest.python.Module"
  },
  "type": "import"
 },
 "pytest.Package": {
  "data": {
   "shadows": "_pytest.python.Package"
  },
  "type": "import"
 },
 "pytest.PytestAssertRewriteWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestAssertRewriteWarning"
  },
  "type": "import"
 },
 "pytest.PytestCacheWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestCacheWarning"
  },
  "type": "import"
 },
 "pytest.PytestCollectionWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestCollectionWarning"
  },
  "type": "import"
 },
 "pytest.PytestConfigWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestConfigWarning"
  },
  "type": "import"
 },
 "pytest.PytestDeprecationWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestDeprecationWarning"
  },
  "type": "import"
 },
 "pytest.PytestExperimentalApiWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestExperimentalApiWarning"
  },
  "type": "import"
 },
 "pytest.PytestUnhandledCoroutineWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestUnhandledCoroutineWarning"
  },
  "type": "import"
 },
 "pytest.PytestUnknownMarkWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestUnknownMarkWarning"
  },
  "type": "import"
 },
 "pytest.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "pytest.RemovedInPytest4Warning": {
  "data": {
   "shadows": "_pytest.warning_types.RemovedInPytest4Warning"
  },
  "type": "import"
 },
 "pytest.Session": {
  "data": {
   "shadows": "_pytest.main.Session"
  },
  "type": "import"
 },
 "pytest.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "pytest.__all__": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pytest.__pytestPDB": {
  "data": {
   "shadows": "_pytest.debugging.pytestPDB"
  },
  "type": "import"
 },
 "pytest.__version__": {
  "data": {
   "shadows": "_pytest.__version__"
  },
  "type": "import"
 },
 "pytest._fillfuncargs": {
  "data": {
   "shadows": "_pytest.fixtures.fillfixtures"
  },
  "type": "import"
 },
 "pytest._setup_collect_fakemodule": {
  "data": {
   "shadows": "_pytest.compat._setup_collect_fakemodule"
  },
  "type": "import"
 },
 "pytest.approx": {
  "data": {
   "shadows": "_pytest.python_api.approx"
  },
  "type": "import"
 },
 "pytest.cmdline": {
  "data": {
   "shadows": "_pytest.config.cmdline"
  },
  "type": "import"
 },
 "pytest.deprecated_call": {
  "data": {
   "shadows": "_pytest.recwarn.deprecated_call"
  },
  "type": "import"
 },
 "pytest.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "pytest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "pytest.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "pytest.freeze_includes": {
  "data": {
   "shadows": "_pytest.freeze_support.freeze_includes"
  },
  "type": "import"
 },
 "pytest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "pytest.hookspec": {
  "data": {
   "shadows": "_pytest.config.hookspec"
  },
  "type": "import"
 },
 "pytest.importorskip": {
  "data": {
   "shadows": "_pytest.outcomes.importorskip"
  },
  "type": "import"
 },
 "pytest.main": {
  "data": {
   "shadows": "_pytest.config.main"
  },
  "type": "import"
 },
 "pytest.mark": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "pytest.param": {
  "data": {
   "shadows": "_pytest.mark.param"
  },
  "type": "import"
 },
 "pytest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest.raises": {
  "data": {
   "shadows": "_pytest.python_api.raises"
  },
  "type": "import"
 },
 "pytest.register_assert_rewrite": {
  "data": {
   "shadows": "_pytest.assertion.register_assert_rewrite"
  },
  "type": "import"
 },
 "pytest.set_trace": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pytest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "pytest.warns": {
  "data": {
   "shadows": "_pytest.recwarn.warns"
  },
  "type": "import"
 },
 "pytest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "pytest.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 }
}