{
 "_pytest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._argcomplete": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "sys.exit"
  ],
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "lineno": 71,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.dirname",
   "os.path.isdir",
   "os.path.sep",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "lineno": 106,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "_pytest._code": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._code.code": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.__file__",
   "_pytest.compat.TYPE_CHECKING",
   "pluggy.__file__.rstrip",
   "py.__file__",
   "py.path.local",
   "typing.TypeVar",
   "typing_extensions.Literal"
  ],
  "type": "module"
 },
 "_pytest._code.code.Code": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Code.__eq__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Code.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "_pytest._code.source.getrawcode",
   "types.CodeType"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.fullsource": {
  "lineno": 90,
  "symbols_in_volume": [
   "_pytest._code.source.findsource",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.getargs": {
  "lineno": 101,
  "symbols_in_volume": [
   "inspect.CO_VARARGS",
   "inspect.CO_VARKEYWORDS",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.path": {
  "lineno": 72,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.source": {
  "lineno": 96,
  "symbols_in_volume": [
   "_pytest._code.source.Source"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr": {
  "lineno": 934,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "_pytest._code.code.ExceptionChainRepr.__attrs_post_init__": {
  "lineno": 942,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr.toterminal": {
  "lineno": 949,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo": {
  "lineno": 407,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "types.TracebackType",
   "typing.Generic",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "_pytest._code.code.ExceptionInfo.__repr__": {
  "lineno": 517,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo._getreprcrash": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.errisinstance": {
  "lineno": 540,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.exconly": {
  "lineno": 524,
  "symbols_in_volume": [
   "traceback.format_exception_only"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.fill_unfilled": {
  "lineno": 469,
  "symbols_in_volume": [
   "types.TracebackType",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.for_later": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.from_current": {
  "lineno": 443,
  "symbols_in_volume": [
   "sys.exc_info",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.from_exc_info": {
  "lineno": 417,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "types.TracebackType",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.getrepr": {
  "lineno": 555,
  "symbols_in_volume": [
   "traceback.format_exception",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.match": {
  "lineno": 613,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.tb": {
  "lineno": 490,
  "symbols_in_volume": [
   "types.TracebackType"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.traceback": {
  "lineno": 513,
  "symbols_in_volume": [
   "traceback.setter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.type": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.typename": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.value": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr": {
  "lineno": 916,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest._code.code.ExceptionRepr.__attrs_post_init__": {
  "lineno": 922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.addsection": {
  "lineno": 925,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.toterminal": {
  "lineno": 928,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo": {
  "lineno": 628,
  "symbols_in_volume": [
   "attr.Factory",
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest._code.code.FormattedExcinfo._getentrysource": {
  "lineno": 660,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._getindent": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._makepath": {
  "lineno": 776,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._truncate_recursive_traceback": {
  "lineno": 809,
  "symbols_in_volume": [
   "traceback",
   "traceback.recursionindex",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_exconly": {
  "lineno": 702,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_source": {
  "lineno": 674,
  "symbols_in_volume": [
   "_pytest._code.source.Source",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_args": {
  "lineno": 666,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_excinfo": {
  "lineno": 850,
  "symbols_in_volume": [
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_locals": {
  "lineno": 716,
  "symbols_in_volume": [
   "_pytest._io.saferepr.safeformat",
   "_pytest._io.saferepr.saferepr",
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback": {
  "lineno": 786,
  "symbols_in_volume": [
   "traceback",
   "traceback.filter"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback_entry": {
  "lineno": 743,
  "symbols_in_volume": [
   "_pytest._code.source.Source",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Frame.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "types.FrameType"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame.eval": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.getargs": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.repr": {
  "lineno": 145,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame.statement": {
  "lineno": 127,
  "symbols_in_volume": [
   "_pytest._code.source.Source"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry": {
  "lineno": 1011,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "_pytest._code.code.ReprEntry.__str__": {
  "lineno": 1089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry._write_entry_lines": {
  "lineno": 1019,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.toterminal": {
  "lineno": 1067,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative": {
  "lineno": 1002,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "_pytest._code.code.ReprEntryNative.toterminal": {
  "lineno": 1007,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo": {
  "lineno": 958,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest._code.code.ReprExceptionInfo.toterminal": {
  "lineno": 963,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation": {
  "lineno": 1095,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest._code.code.ReprFileLocation.toterminal": {
  "lineno": 1101,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs": {
  "lineno": 1121,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "_pytest._code.code.ReprFuncArgs.toterminal": {
  "lineno": 1125,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprLocals": {
  "lineno": 1112,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "_pytest._code.code.ReprLocals.toterminal": {
  "lineno": 1116,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback": {
  "lineno": 968,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.ib",
   "attr.s",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "_pytest._code.code.ReprTraceback.toterminal": {
  "lineno": 976,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprTracebackNative": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprTracebackNative.__init__": {
  "lineno": 996,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr": {
  "lineno": 898,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest._code.code.TerminalRepr.__repr__": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__str__": {
  "lineno": 900,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.toterminal": {
  "lineno": 911,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback": {
  "lineno": 281,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "_pytest._code.code.Traceback.__getitem__": {
  "lineno": 343,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__": {
  "lineno": 284,
  "symbols_in_volume": [
   "types.TracebackType",
   "typing.Iterable",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__.f": {
  "lineno": 293,
  "symbols_in_volume": [
   "types.TracebackType",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback.cut": {
  "lineno": 303,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback.filter": {
  "lineno": 351,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback.getcrashentry": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.recursionindex": {
  "lineno": 373,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.TracebackEntry.__init__": {
  "lineno": 170,
  "symbols_in_volume": [
   "types.TracebackType",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__repr__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__str__": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.frame": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getfirstlinesource": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getsource": {
  "lineno": 214,
  "symbols_in_volume": [
   "_pytest._code.source.getstatementrange_ast",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.ishidden": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.locals": {
  "lineno": 206,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.name": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.path": {
  "lineno": 201,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.relline": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.set_repr_style": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.statement": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.filter_traceback": {
  "lineno": 1191,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest._code.code.getfslineno": {
  "lineno": 1144,
  "symbols_in_volume": [
   "_pytest._code.source.findsource",
   "_pytest.compat.get_real_func",
   "inspect.getfile",
   "inspect.getsourcefile",
   "py.path.local",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.source": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._code.source.Source": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.source.Source.__eq__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__getitem__": {
  "lineno": 53,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "inspect.getsource"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.__iter__": {
  "lineno": 63,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.__len__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__str__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.deindent": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.getstatement": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.getstatementrange": {
  "lineno": 97,
  "symbols_in_volume": [
   "ast",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.indent": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.strip": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.deindent": {
  "lineno": 146,
  "symbols_in_volume": [
   "textwrap.dedent",
   "typing.Iterable",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest._code.source.findsource": {
  "lineno": 121,
  "symbols_in_volume": [
   "inspect.findsource",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest._code.source.get_statement_startend2": {
  "lineno": 150,
  "symbols_in_volume": [
   "ast.AST",
   "ast.ExceptHandler",
   "ast.stmt",
   "ast.walk",
   "bisect.bisect_right",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest._code.source.getrawcode": {
  "lineno": 131,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest._code.source.getstatementrange_ast": {
  "lineno": 172,
  "symbols_in_volume": [
   "ast.AST",
   "ast.parse",
   "inspect.BlockFinder",
   "inspect.EndOfBlock",
   "tokenize.generate_tokens",
   "typing.Optional",
   "typing.Tuple",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest._io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._io.saferepr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._io.saferepr.AlwaysDispatchingPrettyPrinter": {
  "lineno": 88,
  "symbols_in_volume": [
   "pprint.PrettyPrinter"
  ],
  "type": "class"
 },
 "_pytest._io.saferepr.AlwaysDispatchingPrettyPrinter._format": {
  "lineno": 91,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.IO"
  ],
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr": {
  "lineno": 38,
  "symbols_in_volume": [
   "reprlib.Repr"
  ],
  "type": "class"
 },
 "_pytest._io.saferepr.SafeRepr.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_instance": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.saferepr._ellipsize": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.saferepr._format_repr_exception": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.saferepr._pformat_dispatch": {
  "lineno": 116,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._io.saferepr._try_repr_or_str": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.saferepr.safeformat": {
  "lineno": 67,
  "symbols_in_volume": [
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest._io.saferepr.saferepr": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.terminalwriter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._io.terminalwriter.TerminalWriter": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._io.terminalwriter.TerminalWriter.__init__": {
  "lineno": 63,
  "symbols_in_volume": [
   "colorama.AnsiToWin32",
   "sys.platform",
   "sys.stdout",
   "typing.Optional",
   "typing.TextIO"
  ],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter._highlight": {
  "lineno": 194,
  "symbols_in_volume": [
   "pygments.formatters.terminal.TerminalFormatter",
   "pygments.highlight",
   "pygments.lexers.python.PythonLexer"
  ],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter._write_source": {
  "lineno": 174,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter.flush": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter.fullwidth": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter.line": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter.markup": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter.sep": {
  "lineno": 105,
  "symbols_in_volume": [
   "sys.platform",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter.width_of_current_line": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.terminalwriter.TerminalWriter.write": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._io.terminalwriter.get_terminal_width": {
  "lineno": 15,
  "symbols_in_volume": [
   "shutil.get_terminal_size"
  ],
  "type": "function"
 },
 "_pytest._io.terminalwriter.should_do_markup": {
  "lineno": 25,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "typing.TextIO"
  ],
  "type": "function"
 },
 "_pytest._io.wcwidth": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._io.wcwidth.wcswidth": {
  "lineno": 44,
  "symbols_in_volume": [
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "_pytest._io.wcwidth.wcwidth": {
  "lineno": 5,
  "symbols_in_volume": [
   "functools.lru_cache",
   "unicodedata.category",
   "unicodedata.east_asian_width"
  ],
  "type": "function"
 },
 "_pytest._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.assertion": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "lineno": 85,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.install_importhook": {
  "lineno": 91,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook",
   "_pytest.assertion.rewrite.assertstate_key",
   "_pytest.assertion.rewrite.assertstate_key.hook",
   "_pytest.assertion.rewrite.assertstate_key.trace",
   "_pytest.config.Config",
   "sys.meta_path.insert"
  ],
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "lineno": 98,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.assertstate_key.hook",
   "sys.meta_path",
   "sys.meta_path.remove"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_addoption": {
  "lineno": 24,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_assertrepr_compare": {
  "lineno": 179,
  "symbols_in_volume": [
   "_pytest.assertion.util.assertrepr_compare",
   "_pytest.config.Config",
   "typing.Any",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_collection": {
  "lineno": 107,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.assertstate_key"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_protocol": {
  "lineno": 117,
  "symbols_in_volume": [
   "_pytest.assertion.util._assertion_pass",
   "_pytest.assertion.util._reprcompare",
   "_pytest.config.hookimpl",
   "_pytest.nodes.Item",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_protocol.call_assertion_pass_hook": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_protocol.callbinrepr": {
  "lineno": 129,
  "symbols_in_volume": [
   "_pytest.assertion.truncate.truncate_if_required",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "lineno": 172,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.assertstate_key"
  ],
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "lineno": 49,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook",
   "sys.meta_path"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest._version.version",
   "_pytest.compat.TYPE_CHECKING",
   "_pytest.store.StoreKey",
   "ast.Add",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.BitXor",
   "ast.Div",
   "ast.Eq",
   "ast.FloorDiv",
   "ast.Gt",
   "ast.GtE",
   "ast.In",
   "ast.Invert",
   "ast.Is",
   "ast.IsNot",
   "ast.LShift",
   "ast.Lt",
   "ast.LtE",
   "ast.MatMult",
   "ast.Mod",
   "ast.Mult",
   "ast.Not",
   "ast.NotEq",
   "ast.NotIn",
   "ast.Pow",
   "ast.RShift",
   "ast.Sub",
   "ast.UAdd",
   "ast.USub",
   "sys.implementation.cache_tag",
   "sys.platform"
  ],
  "type": "module"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "lineno": 597,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "lineno": 651,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter._assert_expr_to_lineno": {
  "lineno": 665,
  "symbols_in_volume": [
   "functools.lru_cache",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "lineno": 745,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Load",
   "ast.Name",
   "ast.Store",
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "lineno": 761,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "lineno": 751,
  "symbols_in_volume": [
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "lineno": 766,
  "symbols_in_volume": [
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "lineno": 814,
  "symbols_in_volume": [
   "ast.AST",
   "ast.Name",
   "ast.expr",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "lineno": 755,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Call",
   "ast.Load",
   "ast.Name",
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.is_rewrite_disabled": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "lineno": 793,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.BinOp",
   "ast.Dict",
   "ast.Load",
   "ast.Mod",
   "ast.Name",
   "ast.Store",
   "ast.Str",
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "lineno": 669,
  "symbols_in_volume": [
   "ast.AST",
   "ast.Assert",
   "ast.Expr",
   "ast.Import",
   "ast.ImportFrom",
   "ast.Module",
   "ast.Str",
   "ast.alias",
   "ast.expr",
   "ast.iter_fields"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "lineno": 820,
  "symbols_in_volume": [
   "_pytest.compat.fspath",
   "_pytest.warning_types.PytestAssertRewriteWarning",
   "ast.Add",
   "ast.Assert",
   "ast.Assign",
   "ast.BinOp",
   "ast.Call",
   "ast.Expr",
   "ast.If",
   "ast.Load",
   "ast.Name",
   "ast.NameConstant",
   "ast.Not",
   "ast.Num",
   "ast.Raise",
   "ast.Store",
   "ast.Str",
   "ast.Tuple",
   "ast.UnaryOp",
   "ast.stmt",
   "itertools.count",
   "typing.List",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "lineno": 1029,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "lineno": 988,
  "symbols_in_volume": [
   "ast.BinOp",
   "ast.Name",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "lineno": 947,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Attribute",
   "ast.BoolOp",
   "ast.Call",
   "ast.Expr",
   "ast.If",
   "ast.List",
   "ast.Load",
   "ast.Name",
   "ast.Not",
   "ast.Num",
   "ast.Or",
   "ast.Store",
   "ast.Str",
   "ast.UnaryOp",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call": {
  "lineno": 996,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Name",
   "ast.keyword",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "lineno": 1039,
  "symbols_in_volume": [
   "ast.And",
   "ast.Assign",
   "ast.BoolOp",
   "ast.Compare",
   "ast.Load",
   "ast.Name",
   "ast.Store",
   "ast.Str",
   "ast.Tuple",
   "ast.expr",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "lineno": 937,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Call",
   "ast.Compare",
   "ast.IfExp",
   "ast.In",
   "ast.Name",
   "ast.Or",
   "ast.Str",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "lineno": 1023,
  "symbols_in_volume": [
   "ast.Starred",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "lineno": 982,
  "symbols_in_volume": [
   "ast.Name",
   "ast.UnaryOp",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._early_rewrite_bailout": {
  "lineno": 172,
  "symbols_in_volume": [
   "_pytest.pathlib.PurePath",
   "_pytest.pathlib.fnmatch_ex",
   "os.path.dirname",
   "os.path.sep",
   "os.path.sep.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._is_marked_for_rewrite": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "lineno": 211,
  "symbols_in_volume": [
   "_pytest.pathlib.PurePath",
   "_pytest.pathlib.fnmatch_ex",
   "os.path.basename",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "lineno": 267,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestAssertRewriteWarning",
   "_pytest.warnings._issue_warning_captured"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.create_module": {
  "lineno": 125,
  "symbols_in_volume": [
   "types.ModuleType",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.exec_module": {
  "lineno": 130,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "sys.dont_write_bytecode",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_spec": {
  "lineno": 82,
  "symbols_in_volume": [
   "os.path.exists",
   "types.ModuleType",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "lineno": 279,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "lineno": 249,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "lineno": 75,
  "symbols_in_volume": [
   "_pytest.main.Session",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._call_assertion_pass": {
  "lineno": 488,
  "symbols_in_volume": [
   "_pytest.assertion.util._assertion_pass"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "lineno": 468,
  "symbols_in_volume": [
   "_pytest.assertion.util._reprcompare",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._check_if_assertion_pass_impl": {
  "lineno": 493,
  "symbols_in_volume": [
   "_pytest.assertion.util._assertion_pass"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "lineno": 427,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite._get_assertion_exprs": {
  "lineno": 543,
  "symbols_in_volume": [
   "io.BytesIO",
   "tokenize.ENDMARKER",
   "tokenize.NAME",
   "tokenize.NEWLINE",
   "tokenize.OP",
   "tokenize.tokenize",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._get_assertion_exprs._write_and_reset": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "lineno": 364,
  "symbols_in_volume": [
   "_pytest.compat.fspath",
   "_pytest.pathlib.Path",
   "marshal.load",
   "os.stat",
   "struct.unpack",
   "types.CodeType",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "lineno": 352,
  "symbols_in_volume": [
   "_pytest.compat.fspath",
   "_pytest.config.Config",
   "_pytest.pathlib.Path",
   "ast.parse",
   "os.stat",
   "os.stat_result",
   "types.CodeType",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "lineno": 413,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "lineno": 323,
  "symbols_in_volume": [
   "_pytest.compat.fspath",
   "_pytest.pathlib.Path",
   "os.getpid",
   "os.rename",
   "os.stat_result",
   "types.CodeType"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc_fp": {
  "lineno": 285,
  "symbols_in_volume": [
   "marshal.dumps",
   "os.stat_result",
   "struct.pack",
   "types.CodeType",
   "typing.IO"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.get_cache_dir": {
  "lineno": 1098,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "sys.pycache_prefix",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "lineno": 403,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "ast.Module",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "lineno": 531,
  "symbols_in_volume": [
   "ast.iter_child_nodes"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.try_makedirs": {
  "lineno": 1078,
  "symbols_in_volume": [
   "_pytest.compat.fspath",
   "_pytest.pathlib.Path",
   "errno.EROFS",
   "os.makedirs"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.assertion.truncate._running_on_ci": {
  "lineno": 38,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate._should_truncate_item": {
  "lineno": 30,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_by_char_count": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_explanation": {
  "lineno": 44,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate.truncate_if_required": {
  "lineno": 19,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.assertion.util._compare_eq_any": {
  "lineno": 171,
  "symbols_in_volume": [
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_cls": {
  "lineno": 411,
  "symbols_in_volume": [
   "_pytest.compat.ATTRS_EQ_FIELD",
   "pprint.pformat",
   "typing.Any",
   "typing.Callable",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "lineno": 370,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "pprint.pformat",
   "typing.Any",
   "typing.List",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "lineno": 265,
  "symbols_in_volume": [
   "_pytest._io.saferepr._pformat_dispatch",
   "difflib.ndiff",
   "pprint.pformat",
   "typing.Any",
   "typing.Iterable",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "lineno": 296,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "typing.Any",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "lineno": 353,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "typing.AbstractSet",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_verbose": {
  "lineno": 241,
  "symbols_in_volume": [
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "lineno": 193,
  "symbols_in_volume": [
   "difflib.ndiff",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "lineno": 64,
  "symbols_in_volume": [
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "lineno": 462,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._split_explanation": {
  "lineno": 47,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._surrounding_parens_on_own_lines": {
  "lineno": 253,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "lineno": 131,
  "symbols_in_volume": [
   "_pytest._io.saferepr.safeformat",
   "_pytest._io.saferepr.saferepr",
   "_pytest.outcomes.Exit",
   "typing.Any",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.format_explanation": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.isattrs": {
  "lineno": 119,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.isdatacls": {
  "lineno": 115,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.isdict": {
  "lineno": 107,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.isiterable": {
  "lineno": 123,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.issequence": {
  "lineno": 99,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.isset": {
  "lineno": 111,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.istext": {
  "lineno": 103,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.cacheprovider.Cache": {
  "lineno": 56,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.cacheprovider.Cache._ensure_supporting_files": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.cache_dir_from_config": {
  "lineno": 82,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.clear_cache": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.for_config": {
  "lineno": 67,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "lineno": 116,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "lineno": 96,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "lineno": 134,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.warn": {
  "lineno": 86,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestCacheWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "lineno": 246,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.get_last_failed_paths": {
  "lineno": 264,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "lineno": 290,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_collectionfinish": {
  "lineno": 270,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "lineno": 275,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "lineno": 342,
  "symbols_in_volume": [
   "_pytest.main.Session"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPluginCollSkipfiles": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.LFPluginCollSkipfiles.__init__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPluginCollSkipfiles.pytest_make_collect_report": {
  "lineno": 229,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.python.Module",
   "pytest.hookimpl",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPluginCollWrapper": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.LFPluginCollWrapper.__init__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPluginCollWrapper.pytest_make_collect_report": {
  "lineno": 182,
  "symbols_in_volume": [
   "_pytest.main.Session",
   "_pytest.nodes.Collector",
   "_pytest.python.Module",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.NFPlugin.__init__": {
  "lineno": 356,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin._get_increasing_order": {
  "lineno": 384,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.Iterable",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_collection_modifyitems": {
  "lineno": 362,
  "symbols_in_volume": [
   "_pytest.compat.order_preserving_dict",
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_sessionfinish": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.cache": {
  "lineno": 472,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "lineno": 505,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter",
   "_pytest.config.Config",
   "_pytest.main.Session",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "lineno": 399,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser",
   "os.environ",
   "os.path.join"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "lineno": 457,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "_pytest.main.wrap_session",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "lineno": 465,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "lineno": 489,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.capture": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "collections.namedtuple",
   "typing_extensions.Literal"
  ],
  "type": "module"
 },
 "_pytest.capture.CaptureFixture": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.CaptureFixture.__init__": {
  "lineno": 767,
  "symbols_in_volume": [
   "_pytest.fixtures.SubRequest"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._resume": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._start": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._suspend": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.close": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.disabled": {
  "lineno": 813,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.readouterr": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureIO": {
  "lineno": 193,
  "symbols_in_volume": [
   "io.TextIOWrapper"
  ],
  "type": "class"
 },
 "_pytest.capture.CaptureIO.__init__": {
  "lineno": 194,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureIO.getvalue": {
  "lineno": 197,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.CaptureManager.__init__": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.__repr__": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.activate_fixture": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.deactivate_fixture": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.global_and_fixture_disabled": {
  "lineno": 697,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.is_capturing": {
  "lineno": 613,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.is_globally_capturing": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.item_capture": {
  "lineno": 706,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "contextlib.contextmanager",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_internalerror": {
  "lineno": 756,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_keyboard_interrupt": {
  "lineno": 752,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_make_collect_report": {
  "lineno": 722,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "pytest.File",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_call": {
  "lineno": 742,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_setup": {
  "lineno": 737,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_teardown": {
  "lineno": 747,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.read_global_capture": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume_fixture": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume_global_capture": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.set_fixture": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.start_global_capturing": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.stop_global_capturing": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend_fixture": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend_global_capture": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.unset_fixture": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput": {
  "lineno": 212,
  "symbols_in_volume": [
   "readline"
  ],
  "type": "class"
 },
 "_pytest.capture.DontReadFromInput.__iter__": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.buffer": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.close": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.fileno": {
  "lineno": 227,
  "symbols_in_volume": [
   "io.UnsupportedOperation"
  ],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.isatty": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.read": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile": {
  "lineno": 177,
  "symbols_in_volume": [
   "io.TextIOWrapper"
  ],
  "type": "class"
 },
 "_pytest.capture.EncodedFile.mode": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.name": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCapture": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.FDCapture.snap": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCapture.writeorg": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.FDCaptureBinary.__init__": {
  "lineno": 357,
  "symbols_in_volume": [
   "os.O_RDWR",
   "os.devnull",
   "os.dup",
   "os.dup2",
   "os.fstat",
   "os.open",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.__repr__": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary._assert_state": {
  "lineno": 410,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.done": {
  "lineno": 432,
  "symbols_in_volume": [
   "os.close",
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.resume": {
  "lineno": 456,
  "symbols_in_volume": [
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.snap": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.start": {
  "lineno": 417,
  "symbols_in_volume": [
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.suspend": {
  "lineno": 448,
  "symbols_in_volume": [
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.writeorg": {
  "lineno": 464,
  "symbols_in_volume": [
   "os.write"
  ],
  "type": "function"
 },
 "_pytest.capture.MultiCapture": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.MultiCapture.__init__": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.__repr__": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.pop_outerr_to_orig": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.readouterr": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.resume_capturing": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.start_capturing": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.stop_capturing": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.suspend_capturing": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.NoCapture": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCapture": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCapture.snap": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCapture.writeorg": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCaptureBinary.__init__": {
  "lineno": 256,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.__repr__": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary._assert_state": {
  "lineno": 286,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.done": {
  "lineno": 306,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.repr": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.resume": {
  "lineno": 320,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.snap": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.start": {
  "lineno": 293,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.suspend": {
  "lineno": 315,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary.writeorg": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.TeeCaptureIO": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.TeeCaptureIO.__init__": {
  "lineno": 203,
  "symbols_in_volume": [
   "typing.TextIO"
  ],
  "type": "function"
 },
 "_pytest.capture.TeeCaptureIO.write": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture._colorama_workaround": {
  "lineno": 51,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.capture._get_multicapture": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround": {
  "lineno": 92,
  "symbols_in_volume": [
   "io._WindowsConsoleIO",
   "sys",
   "sys.platform.startswith",
   "sys.stderr",
   "sys.stdin",
   "sys.stdout",
   "sys.version_info",
   "typing.TextIO"
  ],
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround._reopen_stdio": {
  "lineno": 131,
  "symbols_in_volume": [
   "io.TextIOWrapper",
   "os.dup"
  ],
  "type": "function"
 },
 "_pytest.capture._readline_workaround": {
  "lineno": 67,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.capture.capfd": {
  "lineno": 858,
  "symbols_in_volume": [
   "_pytest.fixtures.SubRequest",
   "pytest.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.capfdbinary": {
  "lineno": 875,
  "symbols_in_volume": [
   "_pytest.fixtures.SubRequest",
   "pytest.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.capsys": {
  "lineno": 824,
  "symbols_in_volume": [
   "_pytest.fixtures.SubRequest",
   "pytest.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.capsysbinary": {
  "lineno": 841,
  "symbols_in_volume": [
   "_pytest.fixtures.SubRequest",
   "pytest.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_addoption": {
  "lineno": 32,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests": {
  "lineno": 150,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pytest.hookimpl",
   "sys.stderr.write",
   "sys.stdout",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "attr",
   "collections.OrderedDict",
   "os.fspath",
   "re.compile",
   "sys.version_info",
   "typing.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.compat.NotSetType": {
  "lineno": 48,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "_pytest.compat._PytestWrapper": {
  "lineno": 269,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.compat._bytes_to_ascii": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "lineno": 64,
  "symbols_in_volume": [
   "inspect.signature",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.compat._translate_non_printable": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.ascii_escaped": {
  "lineno": 244,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.compat.assert_never": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.cached_property": {
  "lineno": 369,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "_pytest.compat.cached_property.__get__": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.cached_property.__init__": {
  "lineno": 372,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.compat.fspath": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.get_default_arg_names": {
  "lineno": 214,
  "symbols_in_volume": [
   "inspect.Parameter.KEYWORD_ONLY",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Parameter.empty",
   "inspect.signature",
   "typing.Any",
   "typing.Callable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.compat.get_real_func": {
  "lineno": 281,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.compat.get_real_method": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "lineno": 140,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "inspect.Parameter.KEYWORD_ONLY",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Parameter.empty",
   "inspect.signature",
   "typing.Any",
   "typing.Callable",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "lineno": 110,
  "symbols_in_volume": [
   "inspect.getfile",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.compat.is_async_function": {
  "lineno": 103,
  "symbols_in_volume": [
   "inspect.isasyncgenfunction",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.compat.is_generator": {
  "lineno": 85,
  "symbols_in_volume": [
   "inspect.isgeneratorfunction"
  ],
  "type": "function"
 },
 "_pytest.compat.iscoroutinefunction": {
  "lineno": 90,
  "symbols_in_volume": [
   "inspect.iscoroutinefunction"
  ],
  "type": "function"
 },
 "_pytest.compat.nullcontext": {
  "lineno": 205,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.compat.num_mock_patch_args": {
  "lineno": 121,
  "symbols_in_volume": [
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.compat.overload": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.safe_getattr": {
  "lineno": 331,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.compat.safe_isclass": {
  "lineno": 345,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.config": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "pluggy.HookimplMarker",
   "pluggy.HookspecMarker"
  ],
  "type": "module"
 },
 "_pytest.config.Config": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Config.InvocationParams": {
  "lineno": 823,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "attr.ib",
   "attr.s",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "_pytest.config.Config.__init__": {
  "lineno": 846,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "_pytest.pathlib.Path.cwd",
   "_pytest.store.Store",
   "argparse.Namespace",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.Config._checkversion": {
  "lineno": 1127,
  "symbols_in_volume": [
   "packaging.version.Version",
   "pytest.UsageError",
   "pytest.__version__"
  ],
  "type": "function"
 },
 "_pytest.config.Config._consider_importhook": {
  "lineno": 1023,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.config.Config._do_configure": {
  "lineno": 906,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.config.Config._ensure_unconfigure": {
  "lineno": 913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._get_override_ini_value": {
  "lineno": 1308,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.Config._get_unknown_ini_keys": {
  "lineno": 1192,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.config.Config._getconftest_pathlist": {
  "lineno": 1290,
  "symbols_in_volume": [
   "py.path.local",
   "py.path.local.sep",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.Config._getini": {
  "lineno": 1240,
  "symbols_in_volume": [
   "py.path.local",
   "shlex.split"
  ],
  "type": "function"
 },
 "_pytest.config.Config._initini": {
  "lineno": 1001,
  "symbols_in_volume": [
   "copy.copy",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.config.Config._mark_plugins_for_rewrite": {
  "lineno": 1043,
  "symbols_in_volume": [
   "_pytest.compat.importlib_metadata.distributions",
   "os.environ.get"
  ],
  "type": "function"
 },
 "_pytest.config.Config._preparse": {
  "lineno": 1077,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestConfigWarning",
   "_pytest.warnings._issue_warning_captured",
   "copy.copy",
   "os.environ.get",
   "py.path.local",
   "shlex.split",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.config.Config._processopt": {
  "lineno": 989,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._validate_args": {
  "lineno": 1065,
  "symbols_in_volume": [
   "copy.copy",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.config.Config._validate_keys": {
  "lineno": 1146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._validate_plugins": {
  "lineno": 1150,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "packaging.requirements.InvalidRequirement",
   "packaging.requirements.Requirement",
   "packaging.version.Version"
  ],
  "type": "function"
 },
 "_pytest.config.Config._warn_about_missing_assertion": {
  "lineno": 1359,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestConfigWarning",
   "_pytest.warnings._issue_warning_captured"
  ],
  "type": "function"
 },
 "_pytest.config.Config._warn_or_fail_if_strict": {
  "lineno": 1182,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "_pytest.warning_types.PytestConfigWarning",
   "_pytest.warnings._issue_warning_captured"
  ],
  "type": "function"
 },
 "_pytest.config.Config.add_cleanup": {
  "lineno": 901,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.config.Config.addinivalue_line": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.cwd_relative_nodeid": {
  "lineno": 972,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.fromdictargs": {
  "lineno": 979,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.get_terminal_writer": {
  "lineno": 922,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.config.Config.getini": {
  "lineno": 1229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getoption": {
  "lineno": 1327,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.config.Config.getvalue": {
  "lineno": 1351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getvalueorskip": {
  "lineno": 1355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.invocation_dir": {
  "lineno": 896,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.Config.notify_exception": {
  "lineno": 954,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "argparse.Namespace",
   "sys.stderr.flush",
   "sys.stderr.write",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.Config.parse": {
  "lineno": 1196,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.config.Config.pytest_cmdline_parse": {
  "lineno": 928,
  "symbols_in_volume": [
   "_pytest.helpconfig.showversion",
   "sys.stdout.write",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.config.Config.pytest_load_initial_conftests": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.ConftestImportFailure.__init__": {
  "lineno": 97,
  "symbols_in_volume": [
   "py.path.local",
   "types.TracebackType",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure.__str__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.ExitCode": {
  "lineno": 73,
  "symbols_in_volume": [
   "enum.IntEnum"
  ],
  "type": "class"
 },
 "_pytest.config.Notset": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Notset.__repr__": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager": {
  "lineno": 322,
  "symbols_in_volume": [
   "pluggy.PluginManager"
  ],
  "type": "class"
 },
 "_pytest.config.PytestPluginManager.__init__": {
  "lineno": 332,
  "symbols_in_volume": [
   "os.dup",
   "os.environ.get",
   "sys.stderr"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._check_non_top_pytest_plugins": {
  "lineno": 577,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "py.path.local",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._getconftestmodules": {
  "lineno": 502,
  "symbols_in_volume": [
   "_pytest.pathlib.ImportMode",
   "functools.lru_cache",
   "py.path.local",
   "types.ModuleType",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._import_plugin_specs": {
  "lineno": 658,
  "symbols_in_volume": [
   "types.ModuleType",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._importconftest": {
  "lineno": 539,
  "symbols_in_volume": [
   "_pytest.pathlib.ImportMode",
   "_pytest.pathlib.Path",
   "_pytest.pathlib.import_path",
   "contextlib.suppress",
   "py.path.local",
   "types.ModuleType",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._rget_with_confmod": {
  "lineno": 528,
  "symbols_in_volume": [
   "_pytest.pathlib.ImportMode",
   "py.path.local",
   "types.ModuleType",
   "typing.Any",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._set_initial_conftests": {
  "lineno": 461,
  "symbols_in_volume": [
   "argparse.Namespace",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._try_load_conftest": {
  "lineno": 492,
  "symbols_in_volume": [
   "_pytest.pathlib.ImportMode",
   "py.path.local",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_conftest": {
  "lineno": 649,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_env": {
  "lineno": 652,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_module": {
  "lineno": 655,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_pluginarg": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_preparse": {
  "lineno": 601,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.getplugin": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.hasplugin": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.import_plugin": {
  "lineno": 665,
  "symbols_in_volume": [
   "_pytest.outcomes.Skipped",
   "_pytest.warning_types.PytestConfigWarning",
   "_pytest.warnings._issue_warning_captured",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookimpl_opts": {
  "lineno": 365,
  "symbols_in_volume": [
   "inspect.isroutine"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookspec_opts": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.pytest_configure": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.register": {
  "lineno": 411,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestConfigWarning",
   "types.ModuleType",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.config._args_converter": {
  "lineno": 808,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.config._assertion_supported": {
  "lineno": 1382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config._ensure_removed_sysmodule": {
  "lineno": 730,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.config._get_plugin_specs_as_list": {
  "lineno": 708,
  "symbols_in_volume": [
   "types.ModuleType",
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config._iter_rewritable_modules": {
  "lineno": 745,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.splitext",
   "typing.Iterable",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.config._prepareconfig": {
  "lineno": 292,
  "symbols_in_volume": [
   "py.path.local",
   "sys.argv",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config._strtobool": {
  "lineno": 1411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.config.argparsing.Argument": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.Argument.__init__": {
  "lineno": 210,
  "symbols_in_volume": [
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.__repr__": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument._set_opt_strings": {
  "lineno": 291,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.attrs": {
  "lineno": 275,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.names": {
  "lineno": 272,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.ArgumentError": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.ArgumentError.__init__": {
  "lineno": 189,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.ArgumentError.__str__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter": {
  "lineno": 459,
  "symbols_in_volume": [
   "argparse.HelpFormatter"
  ],
  "type": "class"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter.__init__": {
  "lineno": 467,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter._format_action_invocation": {
  "lineno": 473,
  "symbols_in_volume": [
   "argparse.Action",
   "argparse.HelpFormatter._format_action_invocation"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter._split_lines": {
  "lineno": 513,
  "symbols_in_volume": [
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser": {
  "lineno": 372,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "sys.version_info"
  ],
  "type": "class"
 },
 "_pytest.config.argparsing.MyOptionParser.__init__": {
  "lineno": 373,
  "symbols_in_volume": [
   "argparse.ArgumentParser.__init__",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser._parse_optional": {
  "lineno": 423,
  "symbols_in_volume": [
   "argparse.Action",
   "gettext.gettext",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser.error": {
  "lineno": 392,
  "symbols_in_volume": [
   "_pytest.config.exceptions.UsageError"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser.parse_args": {
  "lineno": 403,
  "symbols_in_volume": [
   "argparse.Namespace",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.OptionGroup.__init__": {
  "lineno": 334,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup._addoption": {
  "lineno": 358,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup._addoption_instance": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup.addoption": {
  "lineno": 342,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.Parser.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser._getparser": {
  "lineno": 109,
  "symbols_in_volume": [
   "_pytest._argcomplete.filescompleter"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.addini": {
  "lineno": 161,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.addoption": {
  "lineno": 81,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.getgroup": {
  "lineno": 56,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse": {
  "lineno": 97,
  "symbols_in_volume": [
   "_pytest._argcomplete.try_argcomplete",
   "argparse.Namespace",
   "py.path.local",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_known_and_unknown_args": {
  "lineno": 149,
  "symbols_in_volume": [
   "argparse.Namespace",
   "py.path.local",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_known_args": {
  "lineno": 139,
  "symbols_in_volume": [
   "argparse.Namespace",
   "py.path.local",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_setoption": {
  "lineno": 128,
  "symbols_in_volume": [
   "argparse.Namespace",
   "py.path.local",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.processoption": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.cmdline": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.console_main": {
  "lineno": 173,
  "symbols_in_volume": [
   "os.O_WRONLY",
   "os.devnull",
   "os.dup2",
   "os.open",
   "sys.stdout.fileno",
   "sys.stdout.flush"
  ],
  "type": "function"
 },
 "_pytest.config.create_terminal_writer": {
  "lineno": 1391,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter",
   "typing.Optional",
   "typing.TextIO"
  ],
  "type": "function"
 },
 "_pytest.config.directory_arg": {
  "lineno": 206,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.config.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.config.exceptions.PrintHelp": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.exceptions.UsageError": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.filename_arg": {
  "lineno": 195,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.config.filter_traceback_for_conftest_import_failure": {
  "lineno": 112,
  "symbols_in_volume": [
   "_pytest._code.filter_traceback",
   "os.sep"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.config.findpaths._parse_ini_config": {
  "lineno": 20,
  "symbols_in_volume": [
   "iniconfig.IniConfig",
   "iniconfig.ParseError",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.determine_setup": {
  "lineno": 159,
  "symbols_in_volume": [
   "os.path.expandvars",
   "os.path.splitdrive",
   "py.path.local",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.get_common_ancestor": {
  "lineno": 111,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args": {
  "lineno": 134,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Iterable",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_dir_from_path": {
  "lineno": 141,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_file_part_from_node_id": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.is_option": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.findpaths.load_config_dict_from_file": {
  "lineno": 32,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "iniconfig",
   "iniconfig.items",
   "iniconfig.sections",
   "py.path.local",
   "toml.load",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.load_config_dict_from_file.make_scalar": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.locate_config": {
  "lineno": 81,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Dict",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.get_config": {
  "lineno": 257,
  "symbols_in_volume": [
   "_pytest.pathlib.Path.cwd",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.config.get_plugin_manager": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.main": {
  "lineno": 123,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "_pytest._io.TerminalWriter",
   "sys.stderr",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.debugging": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.debugging.PdbInvoke": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.PdbInvoke.pytest_exception_interact": {
  "lineno": 276,
  "symbols_in_volume": [
   "_pytest.nodes.Node",
   "_pytest.reports.BaseReport",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.debugging.PdbInvoke.pytest_internalerror": {
  "lineno": 288,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo"
  ],
  "type": "function"
 },
 "_pytest.debugging.PdbTrace": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.PdbTrace.pytest_pyfunc_call": {
  "lineno": 294,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.debugging._enter_pdb": {
  "lineno": 326,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "_pytest.nodes.Node",
   "_pytest.reports.BaseReport"
  ],
  "type": "function"
 },
 "_pytest.debugging._postmortem_traceback": {
  "lineno": 357,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "_pytest.config.ConftestImportFailure",
   "doctest.UnexpectedException",
   "types.TracebackType"
  ],
  "type": "function"
 },
 "_pytest.debugging._validate_usepdb_cls": {
  "lineno": 27,
  "symbols_in_volume": [
   "argparse.ArgumentTypeError",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.debugging.maybe_wrap_pytest_function_for_tracing": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.post_mortem": {
  "lineno": 373,
  "symbols_in_volume": [
   "_pytest.outcomes.exit",
   "types.TracebackType"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_continue": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_debug": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.do_quit": {
  "lineno": 185,
  "symbols_in_volume": [
   "_pytest.outcomes.exit"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.get_stack": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._get_pdb_wrapper_class.PytestPdbWrapper.setup": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._import_pdb_cls": {
  "lineno": 104,
  "symbols_in_volume": [
   "_pytest.config.exceptions.UsageError",
   "pdb.Pdb",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._init_pdb": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB._is_capturing": {
  "lineno": 98,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB.set_trace": {
  "lineno": 267,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytest_addoption": {
  "lineno": 38,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytest_configure": {
  "lineno": 62,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pdb.set_trace"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytest_configure.fin": {
  "lineno": 79,
  "symbols_in_volume": [
   "pdb.set_trace"
  ],
  "type": "function"
 },
 "_pytest.debugging.wrap_pytest_function_for_tracing": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.wrap_pytest_function_for_tracing.wrapper": {
  "lineno": 311,
  "symbols_in_volume": [
   "functools.partial",
   "functools.wraps"
  ],
  "type": "function"
 },
 "_pytest.deprecated": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestDeprecationWarning",
   "_pytest.warning_types.UnformattedWarning"
  ],
  "type": "module"
 },
 "_pytest.doctest": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.doctest.DoctestItem": {
  "lineno": 240,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestItem.__init__": {
  "lineno": 241,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem._disable_output_capturing_for_darwin": {
  "lineno": 291,
  "symbols_in_volume": [
   "platform.system",
   "sys.stderr.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.from_parent": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.reportinfo": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.repr_failure": {
  "lineno": 305,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest._code.code.ReprFileLocation",
   "_pytest._code.code.TerminalRepr",
   "doctest.DocTestFailure",
   "doctest.UnexpectedException",
   "traceback.format_exception",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.runtest": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.setup": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestModule": {
  "lineno": 496,
  "symbols_in_volume": [
   "pytest.Module"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestModule.collect": {
  "lineno": 497,
  "symbols_in_volume": [
   "_pytest.pathlib.import_path",
   "pytest.skip",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestModule.collect.MockAwareDocTestFinder": {
  "lineno": 500,
  "symbols_in_volume": [
   "doctest.DocTestFinder"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestModule.collect.MockAwareDocTestFinder._find": {
  "lineno": 521,
  "symbols_in_volume": [
   "doctest.DocTestFinder._find"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestModule.collect.MockAwareDocTestFinder._find_lineno": {
  "lineno": 508,
  "symbols_in_volume": [
   "doctest.DocTestFinder._find_lineno"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestTextfile": {
  "lineno": 412,
  "symbols_in_volume": [
   "pytest.Module"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestTextfile.collect": {
  "lineno": 415,
  "symbols_in_volume": [
   "doctest.DocTestParser",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "_pytest.doctest.MultipleDoctestFailures": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.doctest.MultipleDoctestFailures.__init__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest": {
  "lineno": 151,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.doctest.ReprFailDoctest.__init__": {
  "lineno": 152,
  "symbols_in_volume": [
   "_pytest._code.code.ReprFileLocation",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest.toterminal": {
  "lineno": 157,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.doctest._check_all_skipped": {
  "lineno": 443,
  "symbols_in_volume": [
   "doctest.SKIP",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_allow_bytes_flag": {
  "lineno": 703,
  "symbols_in_volume": [
   "doctest.register_optionflag"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_allow_unicode_flag": {
  "lineno": 694,
  "symbols_in_volume": [
   "doctest.register_optionflag"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_checker": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._get_continue_on_failure": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._get_flag_lookup": {
  "lineno": 377,
  "symbols_in_volume": [
   "doctest.COMPARISON_FLAGS",
   "doctest.DONT_ACCEPT_BLANKLINE",
   "doctest.DONT_ACCEPT_TRUE_FOR_1",
   "doctest.ELLIPSIS",
   "doctest.IGNORE_EXCEPTION_DETAIL",
   "doctest.NORMALIZE_WHITESPACE",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_number_flag": {
  "lineno": 712,
  "symbols_in_volume": [
   "doctest.register_optionflag"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_report_choice": {
  "lineno": 721,
  "symbols_in_volume": [
   "doctest.REPORT_CDIFF",
   "doctest.REPORT_NDIFF",
   "doctest.REPORT_ONLY_FIRST_FAILURE",
   "doctest.REPORT_UDIFF"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_runner": {
  "lineno": 220,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_checker_class": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._init_checker_class.LiteralsOutputChecker": {
  "lineno": 584,
  "symbols_in_volume": [
   "doctest.OutputChecker",
   "re.UNICODE",
   "re.VERBOSE",
   "re.compile"
  ],
  "type": "class"
 },
 "_pytest.doctest._init_checker_class.LiteralsOutputChecker._remove_unwanted_precision": {
  "lineno": 643,
  "symbols_in_volume": [
   "_pytest.python_api.approx"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_checker_class.LiteralsOutputChecker.check_output": {
  "lineno": 616,
  "symbols_in_volume": [
   "doctest.OutputChecker.check_output"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_checker_class.LiteralsOutputChecker.check_output.remove_prefixes": {
  "lineno": 627,
  "symbols_in_volume": [
   "re.sub",
   "typing.Pattern"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner": {
  "lineno": 173,
  "symbols_in_volume": [
   "doctest.DebugRunner"
  ],
  "type": "class"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.__init__": {
  "lineno": 179,
  "symbols_in_volume": [
   "doctest.DebugRunner.__init__",
   "doctest.OutputChecker",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.report_failure": {
  "lineno": 191,
  "symbols_in_volume": [
   "doctest.DocTestFailure"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.report_unexpected_exception": {
  "lineno": 200,
  "symbols_in_volume": [
   "_pytest.outcomes.OutcomeException",
   "_pytest.outcomes.exit",
   "bdb.BdbQuit",
   "doctest.UnexpectedException"
  ],
  "type": "function"
 },
 "_pytest.doctest._is_doctest": {
  "lineno": 141,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.doctest._is_mocked": {
  "lineno": 454,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr"
  ],
  "type": "function"
 },
 "_pytest.doctest._is_setup_py": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._patch_unwrap_mock_aware": {
  "lineno": 464,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "inspect.unwrap",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.doctest._patch_unwrap_mock_aware._mock_aware_unwrap": {
  "lineno": 472,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "typing.Any",
   "typing.Callable",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures": {
  "lineno": 562,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest"
  ],
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures.func": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.doctest_namespace": {
  "lineno": 737,
  "symbols_in_volume": [
   "pytest.fixture",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.doctest.get_optionflags": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.pytest_addoption": {
  "lineno": 64,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.doctest.pytest_collect_file": {
  "lineno": 120,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.doctest.pytest_unconfigure": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.faulthandler": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.store.StoreKey",
   "typing.TextIO"
  ],
  "type": "module"
 },
 "_pytest.faulthandler.FaultHandlerHooks": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.faulthandler.FaultHandlerHooks._get_stderr_fileno": {
  "lineno": 72,
  "symbols_in_volume": [
   "io.UnsupportedOperation",
   "sys.__stderr__.fileno",
   "sys.stderr.fileno"
  ],
  "type": "function"
 },
 "_pytest.faulthandler.FaultHandlerHooks.get_timeout_config_value": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.faulthandler.FaultHandlerHooks.pytest_configure": {
  "lineno": 53,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "faulthandler.enable",
   "os.dup"
  ],
  "type": "function"
 },
 "_pytest.faulthandler.FaultHandlerHooks.pytest_enter_pdb": {
  "lineno": 101,
  "symbols_in_volume": [
   "faulthandler.cancel_dump_traceback_later",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.faulthandler.FaultHandlerHooks.pytest_exception_interact": {
  "lineno": 109,
  "symbols_in_volume": [
   "faulthandler.cancel_dump_traceback_later",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.faulthandler.FaultHandlerHooks.pytest_runtest_protocol": {
  "lineno": 86,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "faulthandler.cancel_dump_traceback_later",
   "faulthandler.dump_traceback_later",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.faulthandler.FaultHandlerHooks.pytest_unconfigure": {
  "lineno": 60,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "faulthandler.disable",
   "faulthandler.enable"
  ],
  "type": "function"
 },
 "_pytest.faulthandler.pytest_addoption": {
  "lineno": 17,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.faulthandler.pytest_configure": {
  "lineno": 25,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.warnings._issue_warning_captured",
   "faulthandler.is_enabled",
   "pytest.PytestConfigWarning"
  ],
  "type": "function"
 },
 "_pytest.fixtures": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "types.TracebackType",
   "typing.Callable",
   "typing.Generator",
   "typing.Tuple",
   "typing.TypeVar",
   "typing.Union",
   "typing_extensions.Literal"
  ],
  "type": "module"
 },
 "_pytest.fixtures.FixtureDef": {
  "lineno": 964,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureDef.__init__": {
  "lineno": 967,
  "symbols_in_volume": [
   "_pytest.compat.getfuncargnames",
   "typing.Any",
   "typing.Callable",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.__repr__": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.addfinalizer": {
  "lineno": 1007,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.cache_key": {
  "lineno": 1065,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.execute": {
  "lineno": 1034,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.finish": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureFunctionMarker": {
  "lineno": 1175,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "typing.Any",
   "typing.Callable",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureFunctionMarker.__call__": {
  "lineno": 1190,
  "symbols_in_volume": [
   "_pytest.compat.getlocation",
   "_pytest.outcomes.fail",
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupError.__init__": {
  "lineno": 812,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError.formatrepr": {
  "lineno": 820,
  "symbols_in_volume": [
   "_pytest._code.getfslineno",
   "_pytest.compat.get_real_func",
   "inspect.getsourcelines"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr": {
  "lineno": 865,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.__init__": {
  "lineno": 866,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.toterminal": {
  "lineno": 880,
  "symbols_in_volume": [
   "_pytest._code.code.FormattedExcinfo.fail_marker",
   "_pytest._code.code.FormattedExcinfo.flow_marker",
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager": {
  "lineno": 1420,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureManager.__init__": {
  "lineno": 1455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._get_direct_parametrize_args": {
  "lineno": 1465,
  "symbols_in_volume": [
   "_pytest.mark.ParameterSet._parse_parametrize_args",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._getautousenames": {
  "lineno": 1521,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._matchfactories": {
  "lineno": 1692,
  "symbols_in_volume": [
   "_pytest.nodes.ischildnode",
   "typing.Iterable",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure": {
  "lineno": 1534,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.merge": {
  "lineno": 1547,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.sort_by_scope": {
  "lineno": 1573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixturedefs": {
  "lineno": 1676,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureinfo": {
  "lineno": 1484,
  "symbols_in_volume": [
   "_pytest.compat.getfuncargnames",
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.parsefactories": {
  "lineno": 1618,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.compat.get_real_method",
   "_pytest.compat.safe_getattr"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_collection_modifyitems": {
  "lineno": 1614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_generate_tests": {
  "lineno": 1584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_plugin_registered": {
  "lineno": 1502,
  "symbols_in_volume": [
   "_pytest.config._PluggyPlugin",
   "_pytest.nodes.SEP",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureRequest.__init__": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.__repr__": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._addfinalizer": {
  "lineno": 543,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._check_scope": {
  "lineno": 695,
  "symbols_in_volume": [
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._compute_fixture_value": {
  "lineno": 617,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.compat.getlocation",
   "_pytest.outcomes.fail",
   "inspect.getframeinfo",
   "inspect.stack",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._factorytraceback": {
  "lineno": 709,
  "symbols_in_volume": [
   "_pytest._code.getfslineno",
   "_pytest.compat._format_args",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._fillfixtures": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_active_fixturedef": {
  "lineno": 585,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_fixturestack": {
  "lineno": 605,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getnextfixturedef": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getscopeitem": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._schedule_finalizers": {
  "lineno": 687,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.addfinalizer": {
  "lineno": 536,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.applymarker": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cls": {
  "lineno": 498,
  "symbols_in_volume": [
   "_pytest.python.Class"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.config": {
  "lineno": 488,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fixturenames": {
  "lineno": 451,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fspath": {
  "lineno": 520,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.funcargnames": {
  "lineno": 458,
  "symbols_in_volume": [
   "_pytest.deprecated.FUNCARGNAMES",
   "typing.List",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.function": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfixturevalue": {
  "lineno": 570,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.instance": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.keywords": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.module": {
  "lineno": 515,
  "symbols_in_volume": [
   "_pytest.python.Module"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.node": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.raiseerror": {
  "lineno": 559,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.session": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FuncFixtureInfo": {
  "lineno": 390,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "typing.Dict",
   "typing.List",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FuncFixtureInfo.prune_dependency_tree": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.PseudoFixtureDef": {
  "lineno": 97,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.fixtures.SubRequest": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.SubRequest.__init__": {
  "lineno": 745,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.__repr__": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.SubRequest._schedule_finalizers": {
  "lineno": 772,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.addfinalizer": {
  "lineno": 769,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.fixtures._ensure_immutable_ids": {
  "lineno": 1127,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.Iterable",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.fixtures._eval_scope_callable": {
  "lineno": 939,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.fixtures._params_converter": {
  "lineno": 1147,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.fixtures._teardown_yield_fixture": {
  "lineno": 928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.add_funcarg_pseudo_fixture_def": {
  "lineno": 167,
  "symbols_in_volume": [
   "_pytest.python.Module"
  ],
  "type": "function"
 },
 "_pytest.fixtures.call_fixture_func": {
  "lineno": 906,
  "symbols_in_volume": [
   "_pytest.compat.is_generator",
   "functools.partial",
   "typing.Callable",
   "typing.Generator",
   "typing.cast"
  ],
  "type": "function"
 },
 "_pytest.fixtures.fail_fixturefunc": {
  "lineno": 899,
  "symbols_in_volume": [
   "_pytest._code.Source",
   "_pytest._code.getfslineno",
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.fixtures.fillfixtures": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.fix_cache_order": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.fixture": {
  "lineno": 1252,
  "symbols_in_volume": [
   "_pytest.deprecated.FIXTURE_POSITIONAL_ARGUMENTS",
   "typing.Any",
   "typing.Callable",
   "typing.Iterable",
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.fixtures.get_direct_param_fixture_func": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_parametrized_fixture_keys": {
  "lineno": 245,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.fixtures.get_scope_node": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_scope_package": {
  "lineno": 145,
  "symbols_in_volume": [
   "pytest.Package"
  ],
  "type": "function"
 },
 "_pytest.fixtures.getfixturemarker": {
  "lineno": 227,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytest_addoption": {
  "lineno": 1411,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytest_fixture_setup": {
  "lineno": 1102,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytest_sessionstart": {
  "lineno": 103,
  "symbols_in_volume": [
   "_pytest.main.Session",
   "_pytest.nodes.Item",
   "_pytest.python.Class",
   "_pytest.python.Module",
   "_pytest.python.Package"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytestconfig": {
  "lineno": 1397,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.fixtures.reorder_items": {
  "lineno": 279,
  "symbols_in_volume": [
   "_pytest.compat.order_preserving_dict.fromkeys",
   "collections.defaultdict",
   "collections.deque",
   "typing.cast"
  ],
  "type": "function"
 },
 "_pytest.fixtures.reorder_items_atscope": {
  "lineno": 316,
  "symbols_in_volume": [
   "_pytest.compat.order_preserving_dict",
   "_pytest.compat.order_preserving_dict.fromkeys",
   "collections.deque"
  ],
  "type": "function"
 },
 "_pytest.fixtures.resolve_fixture_function": {
  "lineno": 1074,
  "symbols_in_volume": [
   "_pytest.compat.getimfunc"
  ],
  "type": "function"
 },
 "_pytest.fixtures.scope2index": {
  "lineno": 793,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.fixtures.scopemismatch": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope.provide": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.wrap_function_to_error_out_if_called_directly": {
  "lineno": 1153,
  "symbols_in_volume": [
   "_pytest.compat._PytestWrapper"
  ],
  "type": "function"
 },
 "_pytest.fixtures.wrap_function_to_error_out_if_called_directly.result": {
  "lineno": 1164,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "functools.wraps"
  ],
  "type": "function"
 },
 "_pytest.fixtures.yield_fixture": {
  "lineno": 1372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.freeze_support": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "lineno": 24,
  "symbols_in_volume": [
   "os.path.join",
   "pkgutil.iter_modules",
   "types.ModuleType",
   "typing.Iterator",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.freeze_support.freeze_includes": {
  "lineno": 11,
  "symbols_in_volume": [
   "_pytest",
   "py",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.helpconfig": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.helpconfig.HelpAction": {
  "lineno": 18,
  "symbols_in_volume": [
   "argparse.Action"
  ],
  "type": "class"
 },
 "_pytest.helpconfig.HelpAction.__call__": {
  "lineno": 37,
  "symbols_in_volume": [
   "_pytest.config.PrintHelp"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.HelpAction.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "lineno": 230,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "lineno": 45,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "lineno": 142,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "lineno": 96,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "py.__version__",
   "pytest.__version__",
   "pytest.hookimpl",
   "sys.stderr.write",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "lineno": 118,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "lineno": 242,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "py.__version__",
   "pytest.__version__",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "lineno": 154,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.showversion": {
  "lineno": 127,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pytest.__file__",
   "pytest.__version__",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.hookspec": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "pluggy.HookspecMarker"
  ],
  "type": "module"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertion_pass": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "lineno": 593,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "lineno": 172,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "lineno": 141,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "lineno": 158,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "lineno": 264,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "lineno": 206,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "lineno": 231,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "lineno": 298,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "lineno": 848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "lineno": 829,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "lineno": 533,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "lineno": 250,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "lineno": 813,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_leave_pdb": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "lineno": 186,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "lineno": 349,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "lineno": 328,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "lineno": 314,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "lineno": 338,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_collectionfinish": {
  "lineno": 673,
  "symbols_in_volume": [
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_from_serializable": {
  "lineno": 519,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "lineno": 650,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "lineno": 696,
  "symbols_in_volume": [
   "typing.Mapping",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_to_serializable": {
  "lineno": 509,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logfinish": {
  "lineno": 442,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "lineno": 430,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "lineno": 486,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "lineno": 391,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "lineno": 471,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "lineno": 370,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "lineno": 571,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_warning_captured": {
  "lineno": 741,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.hookspec.pytest_warning_recorded": {
  "lineno": 776,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.junitxml": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "_pytest.store.StoreKey",
   "re.compile",
   "sys.maxunicode"
  ],
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "lineno": 49,
  "symbols_in_volume": [
   "py.xml.Namespace"
  ],
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "lineno": 483,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.expanduser",
   "os.path.expandvars",
   "os.path.normpath",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "lineno": 705,
  "symbols_in_volume": [
   "py.xml.Tag",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "lineno": 548,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "lineno": 518,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "lineno": 526,
  "symbols_in_volume": [
   "_pytest.reports.TestReport",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "lineno": 649,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "lineno": 657,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionRepr"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "lineno": 553,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "lineno": 665,
  "symbols_in_volume": [
   "_pytest.timing.time",
   "datetime.datetime.fromtimestamp",
   "os.makedirs",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir",
   "platform.node"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "lineno": 662,
  "symbols_in_volume": [
   "_pytest.timing.time"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "lineno": 697,
  "symbols_in_volume": [
   "_pytest.terminal.TerminalReporter"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "lineno": 641,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "_pytest.reports.TestReport",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._prepare_content": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._write_content": {
  "lineno": 208,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_attribute": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "lineno": 118,
  "symbols_in_volume": [
   "py.xml.Tag"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "lineno": 230,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "lineno": 237,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "lineno": 240,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "lineno": 215,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "lineno": 212,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "lineno": 253,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "lineno": 279,
  "symbols_in_volume": [
   "py.xml.raw"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "lineno": 128,
  "symbols_in_volume": [
   "py.xml.Tag",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "lineno": 140,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "lineno": 170,
  "symbols_in_volume": [
   "py.xml.Tag"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.write_captured_output": {
  "lineno": 182,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.junitxml._check_record_param_type": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._warn_incompatibility_with_xunit2": {
  "lineno": 287,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "_pytest.warning_types.PytestWarning"
  ],
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "lineno": 74,
  "symbols_in_volume": [
   "py.xml.escape",
   "py.xml.raw"
  ],
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "lineno": 75,
  "symbols_in_volume": [
   "typing.Match"
  ],
  "type": "function"
 },
 "_pytest.junitxml.mangle_test_address": {
  "lineno": 467,
  "symbols_in_volume": [
   "_pytest.nodes.SEP",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.junitxml.merge_family": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.pytest_addoption": {
  "lineno": 395,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser",
   "_pytest.config.filename_arg",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "lineno": 440,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.deprecated.JUNIT_XML_DEFAULT_FAMILY",
   "_pytest.warnings._issue_warning_captured"
  ],
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "lineno": 460,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.junitxml.record_property": {
  "lineno": 304,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture",
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.junitxml.record_property.append_property": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.record_testsuite_property": {
  "lineno": 365,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture",
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.junitxml.record_testsuite_property.record_func": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute": {
  "lineno": 327,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "_pytest.warning_types.PytestExperimentalApiWarning",
   "pytest.fixture",
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute.add_attr_noop": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.store.StoreKey",
   "logging.Handler",
   "logging.LogRecord",
   "re.compile",
   "typing.Dict",
   "typing.List",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.logging.ColoredLevelFormatter": {
  "lineno": 45,
  "symbols_in_volume": [
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.ERROR",
   "logging.Formatter",
   "logging.INFO",
   "logging.NOTSET",
   "logging.WARN",
   "logging.WARNING",
   "re.compile"
  ],
  "type": "class"
 },
 "_pytest.logging.ColoredLevelFormatter.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter",
   "logging.getLevelName"
  ],
  "type": "function"
 },
 "_pytest.logging.ColoredLevelFormatter.format": {
  "lineno": 86,
  "symbols_in_volume": [
   "logging.LogRecord"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.logging.LogCaptureFixture.__init__": {
  "lineno": 344,
  "symbols_in_volume": [
   "_pytest.nodes.Node"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture._finalize": {
  "lineno": 351,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.at_level": {
  "lineno": 443,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "logging.getLogger",
   "typing.Generator",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.clear": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.get_records": {
  "lineno": 370,
  "symbols_in_volume": [
   "logging.LogRecord",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.handler": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.messages": {
  "lineno": 405,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.record_tuples": {
  "lineno": 394,
  "symbols_in_volume": [
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.records": {
  "lineno": 389,
  "symbols_in_volume": [
   "logging.LogRecord",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.set_level": {
  "lineno": 425,
  "symbols_in_volume": [
   "logging.getLogger",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.text": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler": {
  "lineno": 313,
  "symbols_in_volume": [
   "logging.StreamHandler"
  ],
  "type": "class"
 },
 "_pytest.logging.LogCaptureHandler.__init__": {
  "lineno": 318,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.emit": {
  "lineno": 323,
  "symbols_in_volume": [
   "logging.LogRecord"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.handleError": {
  "lineno": 332,
  "symbols_in_volume": [
   "logging.LogRecord",
   "logging.raiseExceptions"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.reset": {
  "lineno": 328,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.logging.LoggingPlugin.__init__": {
  "lineno": 515,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "logging.Formatter",
   "os.devnull",
   "os.makedirs",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._create_formatter": {
  "lineno": 574,
  "symbols_in_volume": [
   "_pytest.config.create_terminal_writer",
   "logging.Formatter"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._log_cli_enabled": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for": {
  "lineno": 678,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_collection": {
  "lineno": 645,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_call": {
  "lineno": 703,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logfinish": {
  "lineno": 717,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logreport": {
  "lineno": 674,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logstart": {
  "lineno": 669,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_setup": {
  "lineno": 695,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_teardown": {
  "lineno": 709,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtestloop": {
  "lineno": 653,
  "symbols_in_volume": [
   "_pytest.main.Session",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionfinish": {
  "lineno": 721,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionstart": {
  "lineno": 637,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_unconfigure": {
  "lineno": 729,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.set_log_path": {
  "lineno": 592,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.logging.PercentStyleMultiline": {
  "lineno": 92,
  "symbols_in_volume": [
   "logging.PercentStyle"
  ],
  "type": "class"
 },
 "_pytest.logging.PercentStyleMultiline.__init__": {
  "lineno": 99,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.logging.PercentStyleMultiline._get_auto_indent": {
  "lineno": 111,
  "symbols_in_volume": [
   "_pytest.config._strtobool",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.logging.PercentStyleMultiline._update_message": {
  "lineno": 103,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.logging.PercentStyleMultiline.format": {
  "lineno": 164,
  "symbols_in_volume": [
   "logging.LogRecord"
  ],
  "type": "function"
 },
 "_pytest.logging._FileHandler": {
  "lineno": 736,
  "symbols_in_volume": [
   "logging.FileHandler"
  ],
  "type": "class"
 },
 "_pytest.logging._FileHandler.handleError": {
  "lineno": 741,
  "symbols_in_volume": [
   "logging.LogRecord"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingNullHandler": {
  "lineno": 809,
  "symbols_in_volume": [
   "logging.NullHandler"
  ],
  "type": "class"
 },
 "_pytest.logging._LiveLoggingNullHandler.handleError": {
  "lineno": 818,
  "symbols_in_volume": [
   "logging.LogRecord"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingNullHandler.reset": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingNullHandler.set_when": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler": {
  "lineno": 746,
  "symbols_in_volume": [
   "logging.StreamHandler"
  ],
  "type": "class"
 },
 "_pytest.logging._LiveLoggingStreamHandler.__init__": {
  "lineno": 759,
  "symbols_in_volume": [
   "_pytest.capture.CaptureManager",
   "_pytest.terminal.TerminalReporter",
   "logging.StreamHandler.__init__",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.emit": {
  "lineno": 785,
  "symbols_in_volume": [
   "_pytest.compat.nullcontext",
   "logging.LogRecord"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.handleError": {
  "lineno": 804,
  "symbols_in_volume": [
   "logging.LogRecord"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.reset": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.set_when": {
  "lineno": 778,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.logging._remove_ansi_escape_sequences": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.caplog": {
  "lineno": 465,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.logging.catching_logs": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.logging.catching_logs.__enter__": {
  "lineno": 296,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "_pytest.logging.catching_logs.__exit__": {
  "lineno": 306,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "_pytest.logging.catching_logs.__init__": {
  "lineno": 292,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.logging.get_log_level_for_setting": {
  "lineno": 482,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "logging",
   "pytest.UsageError",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.logging.get_option_ini": {
  "lineno": 188,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.logging.pytest_addoption": {
  "lineno": 197,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.logging.pytest_addoption.add_option_ini": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.pytest_configure": {
  "lineno": 506,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.main": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.main.Failed": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.NoMatch": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Session": {
  "lineno": 415,
  "symbols_in_volume": [
   "_pytest.nodes.FSCollector"
  ],
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "lineno": 424,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.nodes.FSCollector.__init__"
  ],
  "type": "function"
 },
 "_pytest.main.Session.__repr__": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "lineno": 589,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.python.Package",
   "py.path.local",
   "typing.Iterator",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "lineno": 720,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.runner.collect_one_node",
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.Session._node_location_to_relpath": {
  "lineno": 470,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "lineno": 692,
  "symbols_in_volume": [
   "_pytest.config.UsageError",
   "os.sep",
   "py.path.local",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "lineno": 538,
  "symbols_in_volume": [
   "_pytest.config.UsageError",
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.runner.collect_one_node",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "lineno": 676,
  "symbols_in_volume": [
   "importlib.util.find_spec",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "_pytest.main.Session._visit_filter": {
  "lineno": 671,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "lineno": 571,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.Iterator",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.Session.from_config": {
  "lineno": 456,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "lineno": 759,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.runner.collect_one_node",
   "typing.Iterator",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "lineno": 496,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "lineno": 493,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "lineno": 707,
  "symbols_in_volume": [
   "_pytest.nodes",
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "lineno": 511,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "lineno": 474,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "lineno": 481,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.reports.CollectReport",
   "_pytest.reports.TestReport",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main._bestrelpath_cache": {
  "lineno": 405,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "py.path.local"
  ],
  "type": "class"
 },
 "_pytest.main._bestrelpath_cache.__missing__": {
  "lineno": 409,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main._in_venv": {
  "lineno": 329,
  "symbols_in_volume": [
   "py.path.local",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.main._main": {
  "lineno": 292,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "_pytest.config.ExitCode.NO_TESTS_COLLECTED",
   "_pytest.config.ExitCode.TESTS_FAILED",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_addoption": {
  "lineno": 48,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser",
   "_pytest.config.directory_arg",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "lineno": 288,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_collection_modifyitems": {
  "lineno": 373,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.nodes.Item",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "lineno": 346,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "fnmatch.fnmatch",
   "py.path.local",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.validate_basetemp": {
  "lineno": 199,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "_pytest.pathlib.Path.cwd",
   "argparse.ArgumentTypeError"
  ],
  "type": "function"
 },
 "_pytest.main.validate_basetemp.is_ancestor": {
  "lineno": 207,
  "symbols_in_volume": [
   "_pytest.pathlib.Path"
  ],
  "type": "function"
 },
 "_pytest.main.wrap_session": {
  "lineno": 227,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "_pytest.config.ExitCode.INTERNAL_ERROR",
   "_pytest.config.ExitCode.INTERRUPTED",
   "_pytest.config.ExitCode.OK",
   "_pytest.config.ExitCode.TESTS_FAILED",
   "_pytest.config.ExitCode.USAGE_ERROR",
   "_pytest.config.UsageError",
   "_pytest.outcomes.exit.Exception",
   "sys.stderr.write",
   "typing.Callable",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "_pytest.config.Config",
   "_pytest.store.StoreKey",
   "typing.Optional"
  ],
  "type": "module"
 },
 "_pytest.mark.KeywordMatcher": {
  "lineno": 123,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "typing.AbstractSet"
  ],
  "type": "class"
 },
 "_pytest.mark.KeywordMatcher.__call__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.KeywordMatcher.from_item": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.Instance",
   "pytest.Session"
  ],
  "type": "function"
 },
 "_pytest.mark.MarkMatcher": {
  "lineno": 214,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.mark.MarkMatcher.__call__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.MarkMatcher.from_item": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.deselect_by_keyword": {
  "lineno": 174,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.UsageError"
  ],
  "type": "function"
 },
 "_pytest.mark.deselect_by_mark": {
  "lineno": 232,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.UsageError"
  ],
  "type": "function"
 },
 "_pytest.mark.expression": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.mark.expression.Expression": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.expression.Expression.__init__": {
  "lineno": 198,
  "symbols_in_volume": [
   "types.CodeType"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.Expression.compile": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.expression.Expression.evaluate": {
  "lineno": 213,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.MatcherAdapter": {
  "lineno": 174,
  "symbols_in_volume": [
   "typing.Mapping"
  ],
  "type": "class"
 },
 "_pytest.mark.expression.MatcherAdapter.__getitem__": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.expression.MatcherAdapter.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.MatcherAdapter.__iter__": {
  "lineno": 183,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.MatcherAdapter.__len__": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.expression.ParseError": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.expression.ParseError.__init__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.expression.ParseError.__str__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.expression.Scanner": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.expression.Scanner.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.expression.Scanner.accept": {
  "lineno": 111,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.Scanner.lex": {
  "lineno": 81,
  "symbols_in_volume": [
   "re.match",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.Scanner.reject": {
  "lineno": 121,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.Token": {
  "lineno": 52,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.mark.expression.TokenType": {
  "lineno": 42,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "_pytest.mark.expression.and_expr": {
  "lineno": 153,
  "symbols_in_volume": [
   "ast.And",
   "ast.BoolOp",
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.expr": {
  "lineno": 145,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Or",
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.expression": {
  "lineno": 136,
  "symbols_in_volume": [
   "ast.Expression",
   "ast.NameConstant",
   "ast.fix_missing_locations"
  ],
  "type": "function"
 },
 "_pytest.mark.expression.not_expr": {
  "lineno": 161,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Name",
   "ast.Not",
   "ast.UnaryOp",
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.mark.param": {
  "lineno": 37,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.mark.pytest_addoption": {
  "lineno": 61,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "lineno": 103,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "_pytest.config.hookimpl",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "lineno": 257,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "lineno": 262,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.UsageError"
  ],
  "type": "function"
 },
 "_pytest.mark.pytest_unconfigure": {
  "lineno": 275,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.mark.structures": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "_pytest.mark.structures.Mark": {
  "lineno": 198,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "typing.Any",
   "typing.Mapping",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.Mark._has_param_ids": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.Mark.combined_with": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator": {
  "lineno": 251,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "attr.validators.instance_of"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.MarkDecorator.__call__": {
  "lineno": 335,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__repr__": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.args": {
  "lineno": 294,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.kwargs": {
  "lineno": 299,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.markname": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.name": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.with_args": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkGenerator": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures.MarkGenerator.__getattr__": {
  "lineno": 483,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "_pytest.warning_types.PytestUnknownMarkWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures.NodeKeywords.__delitem__": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__getitem__": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__init__": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__iter__": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__len__": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__repr__": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__setitem__": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords._seen": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.NamedTuple",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.ParameterSet._for_parametrize": {
  "lineno": 155,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.outcomes.fail",
   "typing.Iterable",
   "typing.List",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet._parse_parametrize_args": {
  "lineno": 132,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet._parse_parametrize_parameters": {
  "lineno": 146,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.extract_from": {
  "lineno": 104,
  "symbols_in_volume": [
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.param": {
  "lineno": 83,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.mark.structures._FilterwarningsMarkDecorator": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures._FilterwarningsMarkDecorator.__call__": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures._ParametrizeMarkDecorator": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures._ParametrizeMarkDecorator.__call__": {
  "lineno": 426,
  "symbols_in_volume": [
   "_pytest.fixtures._Scope",
   "typing.Any",
   "typing.Callable",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures._SkipMarkDecorator": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures._SkipMarkDecorator.__call__": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures._SkipifMarkDecorator": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures._SkipifMarkDecorator.__call__": {
  "lineno": 398,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures._UsefixturesMarkDecorator": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures._UsefixturesMarkDecorator.__call__": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures._XfailMarkDecorator": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures._XfailMarkDecorator.__call__": {
  "lineno": 411,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.get_empty_parameterset_mark": {
  "lineno": 44,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.get_unpacked_marks": {
  "lineno": 346,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.istestfunc": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.normalize_mark_list": {
  "lineno": 356,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.store_mark": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "lineno": 320,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.context": {
  "lineno": 125,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "lineno": 212,
  "symbols_in_volume": [
   "inspect.isclass",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "lineno": 288,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "lineno": 256,
  "symbols_in_volume": [
   "typing.MutableMapping"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "lineno": 162,
  "symbols_in_volume": [
   "inspect.isclass",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "lineno": 269,
  "symbols_in_volume": [
   "os.environ",
   "pytest.PytestWarning",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "lineno": 251,
  "symbols_in_volume": [
   "typing.MutableMapping"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "lineno": 298,
  "symbols_in_volume": [
   "importlib.invalidate_caches",
   "pkg_resources.fixup_namespace_packages",
   "sys.path",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "lineno": 334,
  "symbols_in_volume": [
   "os.chdir",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "lineno": 93,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "lineno": 28,
  "symbols_in_volume": [
   "_pytest.fixtures.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.resolve": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "py.path.local",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.nodes.Collector": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Collector.CollectError": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Collector._prunetraceback": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Collector.collect": {
  "lineno": 453,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.nodes.Collector.repr_failure": {
  "lineno": 460,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest._code.code.TerminalRepr",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.nodes.FSCollector": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.FSCollector.__init__": {
  "lineno": 509,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "os.sep",
   "py.path.local",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.nodes.FSCollector._collectfile": {
  "lineno": 581,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.nodes.FSCollector._gethookproxy": {
  "lineno": 546,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.nodes.FSCollector._recurse": {
  "lineno": 565,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.nodes.FSCollector.from_parent": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.FSCollector.gethookproxy": {
  "lineno": 562,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.nodes.FSCollector.isinitpath": {
  "lineno": 578,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.nodes.FSHookProxy": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.FSHookProxy.__getattr__": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.FSHookProxy.__init__": {
  "lineno": 498,
  "symbols_in_volume": [
   "_pytest.config.PytestPluginManager"
  ],
  "type": "function"
 },
 "_pytest.nodes.File": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Item": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Item.__init__": {
  "lineno": 617,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.nodes.Item.add_report_section": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Item.location": {
  "lineno": 657,
  "symbols_in_volume": [
   "_pytest.compat.cached_property",
   "py.path.local",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.nodes.Item.reportinfo": {
  "lineno": 654,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.nodes.Item.runtest": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Node.__hash__": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.mark.structures.NodeKeywords",
   "_pytest.store.Store",
   "py.path.local",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.__repr__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node._prunetraceback": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node._repr_failure_py": {
  "lineno": 356,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest._code.code.TerminalRepr",
   "_pytest.config.ConftestImportFailure",
   "_pytest.fixtures.FixtureLookupError",
   "_pytest.outcomes.fail.Exception",
   "_pytest.pathlib.Path",
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.add_marker": {
  "lineno": 261,
  "symbols_in_volume": [
   "_pytest.mark.MARK_GEN",
   "_pytest.mark.structures.MarkDecorator",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.addfinalizer": {
  "lineno": 336,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.from_parent": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.get_closest_marker": {
  "lineno": 315,
  "symbols_in_volume": [
   "_pytest.mark.structures.Mark",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.getparent": {
  "lineno": 344,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.ihook": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers": {
  "lineno": 285,
  "symbols_in_volume": [
   "_pytest.mark.structures.Mark",
   "typing.Iterator",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers_with_node": {
  "lineno": 293,
  "symbols_in_volume": [
   "_pytest.mark.structures.Mark",
   "typing.Iterator",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.listchain": {
  "lineno": 250,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.listextrakeywords": {
  "lineno": 326,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.listnames": {
  "lineno": 333,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.nodeid": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.repr_failure": {
  "lineno": 409,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest._code.code.TerminalRepr",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.setup": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.teardown": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.warn": {
  "lineno": 205,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.nodes.NodeMeta": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.NodeMeta.__call__": {
  "lineno": 94,
  "symbols_in_volume": [
   "_pytest.deprecated.NODE_USE_FROM_PARENT.format",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.nodes.NodeMeta._create": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes._check_initialpaths_for_relpath": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes._splitnode": {
  "lineno": 52,
  "symbols_in_volume": [
   "functools.lru_cache",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.nodes.get_fslocation_from_item": {
  "lineno": 422,
  "symbols_in_volume": [
   "_pytest._code.getfslineno",
   "py.path.local",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.nodes.ischildnode": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nose": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.nose.call_optional": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nose.is_potential_nosetest": {
  "lineno": 24,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "_pytest.python.Function",
   "_pytest.unittest.TestCaseFunction"
  ],
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_setup": {
  "lineno": 8,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.nose.teardown_nose": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Generic",
   "typing.TypeVar",
   "typing_extensions.Protocol"
  ],
  "type": "module"
 },
 "_pytest.outcomes.Exit": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.Exit.__init__": {
  "lineno": 78,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.outcomes.Failed": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.outcomes.OutcomeException.__repr__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.Skipped": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.Skipped.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.outcomes.XFailed": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes._WithException": {
  "lineno": 93,
  "symbols_in_volume": [
   "typing_extensions.Protocol"
  ],
  "type": "class"
 },
 "_pytest.outcomes._with_exception": {
  "lineno": 98,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.outcomes._with_exception.decorate": {
  "lineno": 99,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "_pytest.outcomes.exit": {
  "lineno": 110,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.outcomes.fail": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.importorskip": {
  "lineno": 178,
  "symbols_in_volume": [
   "packaging.version.Version",
   "sys.modules",
   "typing.Any",
   "typing.Optional",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.outcomes.skip": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.xfail": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.store.StoreKey",
   "typing.IO"
  ],
  "type": "module"
 },
 "_pytest.pastebin.create_new_paste": {
  "lineno": 69,
  "symbols_in_volume": [
   "re.search",
   "typing.Union",
   "urllib.parse.urlencode",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_addoption": {
  "lineno": 18,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "lineno": 31,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pytest.hookimpl",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "lineno": 95,
  "symbols_in_volume": [
   "_pytest.config.create_terminal_writer",
   "_pytest.terminal.TerminalReporter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "lineno": 52,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.pathlib": {
  "lineno": null,
  "symbols_in_volume": [
   "pathlib2.PurePath",
   "sys.version_info",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.pathlib.ImportMode": {
  "lineno": 430,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "_pytest.pathlib.ImportPathMismatchError": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pathlib._force_symlink": {
  "lineno": 184,
  "symbols_in_volume": [
   "pathlib2.Path",
   "pathlib2.PurePath",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pathlib.cleanup_candidates": {
  "lineno": 322,
  "symbols_in_volume": [
   "itertools.tee",
   "pathlib2.Path",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.pathlib.cleanup_numbered_dir": {
  "lineno": 334,
  "symbols_in_volume": [
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.create_cleanup_lock": {
  "lineno": 227,
  "symbols_in_volume": [
   "os.O_CREAT",
   "os.O_EXCL",
   "os.O_WRONLY",
   "os.close",
   "os.getpid",
   "os.open",
   "os.write",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.ensure_deletable": {
  "lineno": 288,
  "symbols_in_volume": [
   "contextlib.suppress",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.ensure_extended_length_path": {
  "lineno": 112,
  "symbols_in_volume": [
   "pathlib2.Path",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.pathlib.ensure_reset_dir": {
  "lineno": 50,
  "symbols_in_volume": [
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.extract_suffixes": {
  "lineno": 159,
  "symbols_in_volume": [
   "pathlib2.PurePath",
   "typing.Iterable",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.pathlib.find_prefixed": {
  "lineno": 151,
  "symbols_in_volume": [
   "pathlib2.Path",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.pathlib.find_suffixes": {
  "lineno": 170,
  "symbols_in_volume": [
   "pathlib2.Path",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.pathlib.fnmatch_ex": {
  "lineno": 382,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "os.path.isabs",
   "os.sep",
   "pathlib2.PurePath",
   "posixpath.sep",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.pathlib.get_extended_length_path_str": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pathlib.get_lock_path": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pathlib.import_path": {
  "lineno": 447,
  "symbols_in_volume": [
   "_pytest.compat.assert_never",
   "os.environ.get",
   "os.path.samefile",
   "os.path.sep",
   "pathlib2.Path",
   "py.path.local",
   "sys.meta_path",
   "sys.modules",
   "sys.path",
   "sys.path.append",
   "sys.path.insert",
   "types.ModuleType",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pathlib.make_numbered_dir": {
  "lineno": 206,
  "symbols_in_volume": [
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.make_numbered_dir_with_cleanup": {
  "lineno": 344,
  "symbols_in_volume": [
   "atexit.register",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.maybe_delete_a_numbered_dir": {
  "lineno": 261,
  "symbols_in_volume": [
   "pathlib2.Path",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "_pytest.pathlib.on_rm_rf_error": {
  "lineno": 59,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "os.open",
   "os.remove",
   "os.rmdir",
   "os.unlink",
   "pathlib2.Path",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.pathlib.on_rm_rf_error.chmod_rw": {
  "lineno": 93,
  "symbols_in_volume": [
   "os.chmod",
   "os.stat",
   "stat.S_IRUSR",
   "stat.S_IWUSR"
  ],
  "type": "function"
 },
 "_pytest.pathlib.parse_num": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pathlib.parts": {
  "lineno": 417,
  "symbols_in_volume": [
   "posixpath.sep",
   "posixpath.sep.join",
   "typing.Set"
  ],
  "type": "function"
 },
 "_pytest.pathlib.register_cleanup_lock_removal": {
  "lineno": 244,
  "symbols_in_volume": [
   "atexit.register",
   "os.getpid",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.register_cleanup_lock_removal.cleanup_on_exit": {
  "lineno": 248,
  "symbols_in_volume": [
   "os.getpid",
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pathlib.resolve_from_str": {
  "lineno": 371,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.expandvars",
   "os.path.isabs",
   "pathlib2.Path",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.pathlib.resolve_package_path": {
  "lineno": 545,
  "symbols_in_volume": [
   "itertools.chain",
   "pathlib2.Path",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.pathlib.rm_rf": {
  "lineno": 142,
  "symbols_in_volume": [
   "functools.partial",
   "pathlib2.Path",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "_pytest.pathlib.symlink_or_skip": {
  "lineno": 422,
  "symbols_in_volume": [
   "_pytest.outcomes.skip",
   "os.symlink"
  ],
  "type": "function"
 },
 "_pytest.pathlib.try_cleanup": {
  "lineno": 316,
  "symbols_in_volume": [
   "pathlib2.Path"
  ],
  "type": "function"
 },
 "_pytest.pytester": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "re.compile"
  ],
  "type": "module"
 },
 "_pytest.pytester.CwdSnapshot": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.CwdSnapshot.__init__": {
  "lineno": 522,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.pytester.CwdSnapshot.restore": {
  "lineno": 525,
  "symbols_in_volume": [
   "os.chdir"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.HookRecorder.__init__": {
  "lineno": 214,
  "symbols_in_volume": [
   "_pytest.config.PytestPluginManager"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.after": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.before": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assert_contains": {
  "lineno": 234,
  "symbols_in_volume": [
   "pytest.fail",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assertoutcome": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.clear": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.countoutcomes": {
  "lineno": 339,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.finish_recording": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcall": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcalls": {
  "lineno": 229,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailedcollections": {
  "lineno": 319,
  "symbols_in_volume": [
   "_pytest.reports.TestReport",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailures": {
  "lineno": 311,
  "symbols_in_volume": [
   "_pytest.reports.TestReport",
   "typing.Iterable",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getreports": {
  "lineno": 272,
  "symbols_in_volume": [
   "_pytest.reports.TestReport",
   "typing.Iterable",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.listoutcomes": {
  "lineno": 322,
  "symbols_in_volume": [
   "_pytest.reports.TestReport",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.matchreport": {
  "lineno": 280,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.popcall": {
  "lineno": 255,
  "symbols_in_volume": [
   "pytest.fail"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineComp": {
  "lineno": 1363,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LineComp.__init__": {
  "lineno": 1364,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineComp.assert_contains_lines": {
  "lineno": 1368,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher": {
  "lineno": 1381,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LineMatcher.__init__": {
  "lineno": 1391,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._fail": {
  "lineno": 1587,
  "symbols_in_volume": [
   "pytest.fail"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._getlines": {
  "lineno": 1395,
  "symbols_in_volume": [
   "_pytest._code.Source",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log": {
  "lineno": 1439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log_text": {
  "lineno": 1442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._match_lines": {
  "lineno": 1482,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._match_lines_random": {
  "lineno": 1414,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._no_match_line": {
  "lineno": 1564,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines": {
  "lineno": 1446,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines_random": {
  "lineno": 1402,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.get_lines_after": {
  "lineno": 1429,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.no_fnmatch_line": {
  "lineno": 1546,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.no_re_match_line": {
  "lineno": 1554,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.re_match_lines": {
  "lineno": 1461,
  "symbols_in_volume": [
   "re.match",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.re_match_lines_random": {
  "lineno": 1408,
  "symbols_in_volume": [
   "re.match",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.str": {
  "lineno": 1593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher_fixture": {
  "lineno": 368,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LsofFdLeakChecker.get_open_files": {
  "lineno": 98,
  "symbols_in_volume": [
   "os.getpid",
   "subprocess.DEVNULL",
   "subprocess.PIPE",
   "subprocess.run",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.get_open_files.isopen": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.matching_platform": {
  "lineno": 129,
  "symbols_in_volume": [
   "subprocess.CalledProcessError",
   "subprocess.run"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.pytest_runtest_protocol": {
  "lineno": 137,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "gc.collect",
   "pytest.PytestWarning",
   "pytest.hookimpl",
   "sys",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.pytester.ParsedCall": {
  "lineno": 190,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "class"
 },
 "_pytest.pytester.ParsedCall.__getattr__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.ParsedCall.__init__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.ParsedCall.__repr__": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.PytestArg": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.PytestArg.__init__": {
  "lineno": 176,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest"
  ],
  "type": "function"
 },
 "_pytest.pytester.PytestArg.gethookrecorder": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.RunResult.__init__": {
  "lineno": 418,
  "symbols_in_volume": [
   "_pytest.config.ExitCode",
   "pytest.ExitCode",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.RunResult.__repr__": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult.assert_outcomes": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult.parse_summary_nouns": {
  "lineno": 463,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.pytester.RunResult.parseoutcomes": {
  "lineno": 451,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.pytester.SysModulesSnapshot": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.SysModulesSnapshot.__init__": {
  "lineno": 530,
  "symbols_in_volume": [
   "sys.modules",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.pytester.SysModulesSnapshot.restore": {
  "lineno": 534,
  "symbols_in_volume": [
   "sys.modules.clear",
   "sys.modules.items",
   "sys.modules.update"
  ],
  "type": "function"
 },
 "_pytest.pytester.SysPathsSnapshot": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.SysPathsSnapshot.__init__": {
  "lineno": 544,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.pytester.SysPathsSnapshot.restore": {
  "lineno": 547,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir": {
  "lineno": 551,
  "symbols_in_volume": [
   "_pytest.main.Session"
  ],
  "type": "class"
 },
 "_pytest.pytester.Testdir.TimeoutExpired": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.__init__": {
  "lineno": 576,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "_pytest.monkeypatch.MonkeyPatch",
   "_pytest.tmpdir.TempdirFactory",
   "weakref.WeakKeyDictionary"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__repr__": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__str__": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__take_sys_modules_snapshot": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__take_sys_modules_snapshot.preserve_module": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._dump_lines": {
  "lineno": 1282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._ensure_basetemp": {
  "lineno": 1045,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._getpytestargs": {
  "lineno": 1289,
  "symbols_in_volume": [
   "sys.executable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile": {
  "lineno": 651,
  "symbols_in_volume": [
   "_pytest._code.Source"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile.to_text": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.chdir": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.collect_by_name": {
  "lineno": 1145,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.python.Module",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.copy_example": {
  "lineno": 778,
  "symbols_in_volume": [
   "_pytest.warning_types.PYTESTER_COPY_EXAMPLE",
   "py.path.local",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.finalize": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.genitems": {
  "lineno": 865,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getinicfg": {
  "lineno": 702,
  "symbols_in_volume": [
   "iniconfig.IniConfig"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitem": {
  "lineno": 1087,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitems": {
  "lineno": 1108,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getmodulecol": {
  "lineno": 1118,
  "symbols_in_volume": [
   "_pytest._code.Source",
   "_pytest.pathlib.Path"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getnode": {
  "lineno": 830,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode.OK",
   "_pytest.main.Session.from_config",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getpathnode": {
  "lineno": 848,
  "symbols_in_volume": [
   "_pytest.config.ExitCode.OK",
   "_pytest.main.Session.from_config"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_genitems": {
  "lineno": 912,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run": {
  "lineno": 924,
  "symbols_in_volume": [
   "_pytest.config.ExitCode.INTERRUPTED",
   "importlib.invalidate_caches",
   "pytest.main"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.Collect": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.Collect.pytest_configure": {
  "lineno": 966,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.reprec": {
  "lineno": 975,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_runsource": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.make_hook_recorder": {
  "lineno": 637,
  "symbols_in_volume": [
   "_pytest.config.PytestPluginManager"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeconftest": {
  "lineno": 694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makefile": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeini": {
  "lineno": 698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makepyfile": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makepyprojecttoml": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.maketxtfile": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkdir": {
  "lineno": 763,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkpydir": {
  "lineno": 767,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfig": {
  "lineno": 1054,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfigure": {
  "lineno": 1077,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.popen": {
  "lineno": 1164,
  "symbols_in_volume": [
   "os.environ.copy",
   "os.getcwd",
   "os.pathsep.join",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.run": {
  "lineno": 1203,
  "symbols_in_volume": [
   "_pytest.config.ExitCode",
   "_pytest.timing.time",
   "py.path.local",
   "subprocess.TimeoutExpired",
   "sys.platform",
   "sys.stderr",
   "sys.stdout",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.run.handle_timeout": {
  "lineno": 1244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runitem": {
  "lineno": 878,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest": {
  "lineno": 1033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess": {
  "lineno": 991,
  "symbols_in_volume": [
   "_pytest.capture._get_multicapture",
   "_pytest.config.ExitCode",
   "_pytest.timing.time",
   "sys.stderr.write",
   "sys.stdout.write",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess.reprec": {
  "lineno": 1018,
  "symbols_in_volume": [
   "_pytest.config.ExitCode"
  ],
  "type": "class"
 },
 "_pytest.pytester.Testdir.runpytest_subprocess": {
  "lineno": 1304,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "_pytest.pathlib.make_numbered_dir",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython": {
  "lineno": 1292,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython_c": {
  "lineno": 1300,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn": {
  "lineno": 1344,
  "symbols_in_volume": [
   "pexpect",
   "pexpect.spawn",
   "platform.machine",
   "pytest.importorskip",
   "pytest.skip",
   "sys"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn_pytest": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.syspathinsert": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester._config_for_test": {
  "lineno": 400,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.get_config",
   "pytest.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.pytester._pytest": {
  "lineno": 165,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester._sys_snapshot": {
  "lineno": 391,
  "symbols_in_volume": [
   "pytest.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.pytester.get_public_names": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.linecomp": {
  "lineno": 359,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.pytest_addoption": {
  "lineno": 59,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.pytester.pytest_configure": {
  "lineno": 84,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.pytester.testdir": {
  "lineno": 379,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "_pytest.tmpdir.TempdirFactory",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.python": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.python.CallSpec2": {
  "lineno": 814,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.CallSpec2.__init__": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2._checkargnotcontained": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.copy": {
  "lineno": 825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.getparam": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.id": {
  "lineno": 845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.setmulti2": {
  "lineno": 849,
  "symbols_in_volume": [
   "_pytest.mark.structures.Mark",
   "_pytest.mark.structures.MarkDecorator",
   "_pytest.mark.structures.normalize_mark_list",
   "typing.Iterable",
   "typing.Mapping",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Class": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Class._inject_setup_class_fixture": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Class._inject_setup_class_fixture.xunit_setup_class_fixture": {
  "lineno": 741,
  "symbols_in_volume": [
   "_pytest.compat.getimfunc",
   "_pytest.fixtures.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.python.Class._inject_setup_method_fixture": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Class._inject_setup_method_fixture.xunit_setup_method_fixture": {
  "lineno": 765,
  "symbols_in_volume": [
   "_pytest.fixtures.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.python.Class.collect": {
  "lineno": 700,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr",
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.warning_types.PytestCollectionWarning",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Class.from_parent": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function": {
  "lineno": 1446,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "class"
 },
 "_pytest.python.Function.__init__": {
  "lineno": 1454,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.config.Config",
   "_pytest.fixtures.FuncFixtureInfo",
   "_pytest.main.Session",
   "_pytest.mark.structures.get_unpacked_marks",
   "_pytest.mark.structures.normalize_mark_list",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.python.Function._getobj": {
  "lineno": 1550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function._initrequest": {
  "lineno": 1541,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest"
  ],
  "type": "function"
 },
 "_pytest.python.Function._prunetraceback": {
  "lineno": 1575,
  "symbols_in_volume": [
   "_pytest._code.Code",
   "_pytest._code.code.ExceptionInfo",
   "_pytest._code.filter_traceback",
   "_pytest.compat.get_real_func"
  ],
  "type": "function"
 },
 "_pytest.python.Function._pyfuncitem": {
  "lineno": 1554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.from_parent": {
  "lineno": 1534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.funcargnames": {
  "lineno": 1559,
  "symbols_in_volume": [
   "_pytest.deprecated.FUNCARGNAMES",
   "typing.List",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.python.Function.function": {
  "lineno": 1545,
  "symbols_in_volume": [
   "_pytest.compat.getimfunc"
  ],
  "type": "function"
 },
 "_pytest.python.Function.repr_failure": {
  "lineno": 1597,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest.reports.TerminalRepr",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Function.runtest": {
  "lineno": 1565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.setup": {
  "lineno": 1569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.FunctionDefinition": {
  "lineno": 1606,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.FunctionDefinition.runtest": {
  "lineno": 1612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Instance": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Instance._getobj": {
  "lineno": 785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Instance.collect": {
  "lineno": 791,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Instance.newinstance": {
  "lineno": 795,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Metafunc": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Metafunc.__init__": {
  "lineno": 882,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.fixtures.FuncFixtureInfo"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc._resolve_arg_ids": {
  "lineno": 1038,
  "symbols_in_volume": [
   "_pytest.mark.ParameterSet",
   "typing.Any",
   "typing.Callable",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc._resolve_arg_value_types": {
  "lineno": 1105,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "collections.abc.Sequence",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc._validate_ids": {
  "lineno": 1071,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "_pytest.mark.ParameterSet",
   "_pytest.outcomes.fail",
   "itertools.islice",
   "typing.Iterable",
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc._validate_if_using_arg_names": {
  "lineno": 1144,
  "symbols_in_volume": [
   "_pytest.compat.get_default_arg_names",
   "_pytest.outcomes.fail",
   "collections.abc.Sequence",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc.funcargnames": {
  "lineno": 910,
  "symbols_in_volume": [
   "_pytest.deprecated.FUNCARGNAMES",
   "typing.List",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc.parametrize": {
  "lineno": 916,
  "symbols_in_volume": [
   "_pytest.fixtures.scope2index",
   "_pytest.mark.ParameterSet",
   "_pytest.mark.ParameterSet._for_parametrize",
   "_pytest.mark.structures.Mark",
   "_pytest.outcomes.fail",
   "typing.Any",
   "typing.Callable",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Module": {
  "lineno": 480,
  "symbols_in_volume": [
   "_pytest.nodes.File"
  ],
  "type": "class"
 },
 "_pytest.python.Module._getobj": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Module._importtestmodule": {
  "lineno": 548,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo.from_current",
   "_pytest._code.filter_traceback",
   "_pytest.pathlib.ImportPathMismatchError",
   "_pytest.pathlib.import_path",
   "_pytest.runner.Skipped"
  ],
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_function_fixture": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_function_fixture.xunit_setup_function_fixture": {
  "lineno": 533,
  "symbols_in_volume": [
   "_pytest.fixtures.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_module_fixture": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Module._inject_setup_module_fixture.xunit_setup_module_fixture": {
  "lineno": 509,
  "symbols_in_volume": [
   "_pytest.fixtures.fixture",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.python.Module.collect": {
  "lineno": 486,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Package": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Package.__init__": {
  "lineno": 597,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.FSCollector.__init__",
   "os.path.basename",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.Package.collect": {
  "lineno": 636,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.pathlib.parts",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.Package.gethookproxy": {
  "lineno": 630,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.Package.isinitpath": {
  "lineno": 633,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.Package.setup": {
  "lineno": 614,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector": {
  "lineno": 343,
  "symbols_in_volume": [
   "_pytest.nodes.Collector"
  ],
  "type": "class"
 },
 "_pytest.python.PyCollector._genfunctions": {
  "lineno": 434,
  "symbols_in_volume": [
   "_pytest.fixtures.add_funcarg_pseudo_fixture_def",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector._makeitem": {
  "lineno": 423,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector._matches_prefix_or_glob_option": {
  "lineno": 374,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.classnamefilter": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.collect": {
  "lineno": 391,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.collect.sort_key": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.funcnamefilter": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.isnosetest": {
  "lineno": 347,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.istestclass": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.istestfunction": {
  "lineno": 359,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr",
   "_pytest.fixtures.getfixturemarker"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin": {
  "lineno": 250,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "class"
 },
 "_pytest.python.PyobjMixin._getobj": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.cls": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.getmodpath": {
  "lineno": 306,
  "symbols_in_volume": [
   "_pytest.pathlib.parts",
   "_pytest.pathlib.parts.append",
   "_pytest.pathlib.parts.reverse",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.getparent": {
  "lineno": 259,
  "symbols_in_volume": [
   "_pytest.nodes._NodeType",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.instance": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.listchain": {
  "lineno": 262,
  "symbols_in_volume": [
   "_pytest.nodes.Node",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.module": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.reportinfo": {
  "lineno": 325,
  "symbols_in_volume": [
   "_pytest._code.getfslineno",
   "py.path.local",
   "sys.modules.__file__",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python._ascii_escaped_by_config": {
  "lineno": 1213,
  "symbols_in_volume": [
   "_pytest.compat.ascii_escaped",
   "_pytest.config.Config",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python._call_with_optional_argument": {
  "lineno": 667,
  "symbols_in_volume": [
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "_pytest.python._find_parametrized_scope": {
  "lineno": 1178,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureDef",
   "_pytest.fixtures.scopes",
   "collections.abc.Sequence",
   "typing.Mapping",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python._get_first_non_fixture_func": {
  "lineno": 679,
  "symbols_in_volume": [
   "_pytest.fixtures.getfixturemarker",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "_pytest.python._idval": {
  "lineno": 1226,
  "symbols_in_volume": [
   "_pytest.compat.REGEX_TYPE",
   "_pytest.compat.STRING_TYPES",
   "_pytest.compat.ascii_escaped",
   "_pytest.config.Config",
   "enum.Enum",
   "typing.Any",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.python._idvalset": {
  "lineno": 1266,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.mark.ParameterSet",
   "typing.Any",
   "typing.Callable",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test": {
  "lineno": 1328,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.create_terminal_writer",
   "_pytest.main.Session",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.get_best_relpath": {
  "lineno": 1336,
  "symbols_in_volume": [
   "_pytest.compat.getlocation",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_fixture": {
  "lineno": 1340,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureDef",
   "inspect.getdoc"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_item": {
  "lineno": 1356,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "function"
 },
 "_pytest.python._showfixtures_main": {
  "lineno": 1384,
  "symbols_in_volume": [
   "_pytest.compat.getlocation",
   "_pytest.config.Config",
   "_pytest.config.create_terminal_writer",
   "_pytest.main.Session",
   "inspect.getdoc",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.async_warn_and_skip": {
  "lineno": 160,
  "symbols_in_volume": [
   "_pytest.outcomes.skip",
   "_pytest.warning_types.PytestUnhandledCoroutineWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.python.hasinit": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.hasnew": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.idmaker": {
  "lineno": 1288,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.mark.ParameterSet",
   "collections.Counter",
   "collections.defaultdict",
   "typing.Any",
   "typing.Callable",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.path_matches_patterns": {
  "lineno": 202,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_addoption": {
  "lineno": 78,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_cmdline_main": {
  "lineno": 124,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_collect_file": {
  "lineno": 186,
  "symbols_in_volume": [
   "py.path.local",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_configure": {
  "lineno": 140,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_generate_tests": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makeitem": {
  "lineno": 215,
  "symbols_in_volume": [
   "_pytest._code.getfslineno",
   "_pytest.compat.get_real_func",
   "_pytest.compat.is_generator",
   "_pytest.compat.safe_isclass",
   "_pytest.config.hookimpl",
   "_pytest.mark.MARK_GEN.xfail",
   "_pytest.warning_types.PytestCollectionWarning",
   "inspect.isfunction",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makemodule": {
  "lineno": 207,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_pyfunc_call": {
  "lineno": 173,
  "symbols_in_volume": [
   "_pytest.compat.is_async_function",
   "_pytest.config.hookimpl",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.python.show_fixtures_per_test": {
  "lineno": 1322,
  "symbols_in_volume": [
   "_pytest.main.wrap_session"
  ],
  "type": "function"
 },
 "_pytest.python.showfixtures": {
  "lineno": 1378,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "_pytest.main.wrap_session",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python.write_docstring": {
  "lineno": 1441,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.python_api": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.STRING_TYPES",
   "_pytest.compat.TYPE_CHECKING",
   "_pytest.outcomes.fail.Exception",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.python_api.ApproxBase": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxBase.__eq__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__init__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__ne__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__repr__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._approx_scalar": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._check_type": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._yield_comparisons": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxDecimal": {
  "lineno": 332,
  "symbols_in_volume": [
   "decimal.Decimal"
  ],
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping.__eq__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping.__repr__": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._check_type": {
  "lineno": 172,
  "symbols_in_volume": [
   "numbers.Number",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._yield_comparisons": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxNumpy.__eq__": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy.__repr__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy._yield_comparisons": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.ndindex"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxScalar.__eq__": {
  "lineno": 248,
  "symbols_in_volume": [
   "math.isinf",
   "math.isnan"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.__repr__": {
  "lineno": 226,
  "symbols_in_volume": [
   "math.isinf"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance": {
  "lineno": 284,
  "symbols_in_volume": [
   "math.isnan"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance.set_default": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxSequencelike.__eq__": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike.__repr__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike._check_type": {
  "lineno": 204,
  "symbols_in_volume": [
   "numbers.Number",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequencelike._yield_comparisons": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext": {
  "lineno": 720,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "_pytest.python_api.RaisesContext.__enter__": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__exit__": {
  "lineno": 736,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "types.TracebackType",
   "typing.Optional",
   "typing.Tuple",
   "typing.cast"
  ],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__init__": {
  "lineno": 721,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.python_api._is_numpy_array": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy",
   "numpy.ndarray",
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.python_api._non_numeric_type_error": {
  "lineno": 36,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.python_api._recursive_list_map": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.approx": {
  "lineno": 341,
  "symbols_in_volume": [
   "_pytest.compat.STRING_TYPES",
   "collections.abc.Iterable",
   "collections.abc.Mapping",
   "collections.abc.Sized",
   "decimal.Decimal",
   "numbers.Number"
  ],
  "type": "function"
 },
 "_pytest.python_api.raises": {
  "lineno": 568,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "inspect.isclass",
   "itertools.filterfalse",
   "more_itertools.more.always_iterable",
   "typing.Any",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.recwarn": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.recwarn.WarningsChecker": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.recwarn.WarningsChecker.__exit__": {
  "lineno": 257,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "re.compile",
   "types.TracebackType",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsChecker.__init__": {
  "lineno": 232,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder": {
  "lineno": 160,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "class"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__": {
  "lineno": 203,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__exit__": {
  "lineno": 214,
  "symbols_in_volume": [
   "types.TracebackType",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__getitem__": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__init__": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__iter__": {
  "lineno": 181,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__len__": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.clear": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.list": {
  "lineno": 172,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.pop": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.deprecated_call": {
  "lineno": 55,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.recwarn.recwarn": {
  "lineno": 28,
  "symbols_in_volume": [
   "_pytest.fixtures.fixture",
   "typing.Generator",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.recwarn.warns": {
  "lineno": 105,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.reports": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.reports.BaseReport": {
  "lineno": 57,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "class"
 },
 "_pytest.reports.BaseReport.__getattr__": {
  "lineno": 70,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport._from_json": {
  "lineno": 203,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport._get_verbose_word": {
  "lineno": 186,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport._to_json": {
  "lineno": 192,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport.caplog": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstderr": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstdout": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.count_towards_summary": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.fspath": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.get_sections": {
  "lineno": 90,
  "symbols_in_volume": [
   "typing.Iterator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport.head_line": {
  "lineno": 163,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport.longreprtext": {
  "lineno": 95,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport.toterminal": {
  "lineno": 73,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr": {
  "lineno": 383,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.reports.CollectErrorRepr.__init__": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr.toterminal": {
  "lineno": 387,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.reports.CollectReport": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.reports.CollectReport.__init__": {
  "lineno": 344,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.reports.CollectReport.__repr__": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.CollectReport.location": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.TestReport": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.reports.TestReport.__init__": {
  "lineno": 238,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.reports.TestReport.__repr__": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.TestReport.from_item_and_call": {
  "lineno": 292,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest.nodes.Item",
   "_pytest.outcomes.skip.Exception"
  ],
  "type": "function"
 },
 "_pytest.reports._report_kwargs_from_json": {
  "lineno": 487,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionChainRepr",
   "_pytest._code.code.ReprExceptionInfo",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.reports._report_kwargs_from_json.deserialize_repr_crash": {
  "lineno": 527,
  "symbols_in_volume": [
   "_pytest._code.code.ReprFileLocation",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.reports._report_kwargs_from_json.deserialize_repr_entry": {
  "lineno": 494,
  "symbols_in_volume": [
   "_pytest._code.code.ReprEntry",
   "_pytest._code.code.ReprEntryNative",
   "_pytest._code.code.ReprFileLocation",
   "_pytest._code.code.ReprFuncArgs",
   "_pytest._code.code.ReprLocals"
  ],
  "type": "function"
 },
 "_pytest.reports._report_kwargs_from_json.deserialize_repr_traceback": {
  "lineno": 521,
  "symbols_in_volume": [
   "_pytest._code.code.ReprTraceback"
  ],
  "type": "function"
 },
 "_pytest.reports._report_to_json": {
  "lineno": 415,
  "symbols_in_volume": [
   "_pytest.pathlib.Path",
   "py.path.local",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_longrepr": {
  "lineno": 448,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionChainRepr",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_repr_crash": {
  "lineno": 440,
  "symbols_in_volume": [
   "_pytest._code.code.ReprFileLocation",
   "attr.asdict",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_repr_entry": {
  "lineno": 423,
  "symbols_in_volume": [
   "_pytest._code.code.ReprEntry",
   "_pytest._code.code.ReprEntryNative",
   "attr.asdict",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.reports._report_to_json.serialize_repr_traceback": {
  "lineno": 433,
  "symbols_in_volume": [
   "_pytest._code.code.ReprTraceback",
   "attr.asdict",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "_pytest.reports._report_unserialization_failure": {
  "lineno": 217,
  "symbols_in_volume": [
   "io.StringIO",
   "pprint.pprint"
  ],
  "type": "function"
 },
 "_pytest.reports.getworkerinfoline": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.pytest_report_from_serializable": {
  "lineno": 401,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.reports.pytest_report_to_serializable": {
  "lineno": 391,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.resultlog": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.store.StoreKey"
  ],
  "type": "module"
 },
 "_pytest.resultlog.ResultLog": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "lineno": 92,
  "symbols_in_volume": [
   "_pytest.reports.CollectReport"
  ],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "lineno": 103,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionRepr",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "lineno": 72,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.pytest_addoption": {
  "lineno": 19,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "lineno": 31,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.deprecated.RESULT_LOG",
   "_pytest.warnings._issue_warning_captured",
   "os.makedirs",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "lineno": 48,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.runner": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.runner.CallInfo": {
  "lineno": 254,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "attr.ib",
   "attr.s",
   "typing.Generic",
   "typing.Optional"
  ],
  "type": "class"
 },
 "_pytest.runner.CallInfo.__repr__": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.CallInfo.from_call": {
  "lineno": 283,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo.from_current",
   "_pytest.timing.perf_counter",
   "_pytest.timing.time"
  ],
  "type": "function"
 },
 "_pytest.runner.CallInfo.result": {
  "lineno": 274,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.SetupState.__init__": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState._callfinalizers": {
  "lineno": 372,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState._pop_and_teardown": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_towards": {
  "lineno": 404,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_with_finalization": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState.addfinalizer": {
  "lineno": 361,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState.prepare": {
  "lineno": 419,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_all": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_exact": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner._update_current_test_var": {
  "lineno": 170,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "os.environ",
   "os.environ.pop",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.runner.call_and_report": {
  "lineno": 204,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "function"
 },
 "_pytest.runner.call_runtest_hook": {
  "lineno": 232,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "_pytest.outcomes.Exit"
  ],
  "type": "function"
 },
 "_pytest.runner.check_interactive_exception": {
  "lineno": 217,
  "symbols_in_volume": [
   "_pytest.outcomes.Skipped",
   "bdb.BdbQuit"
  ],
  "type": "function"
 },
 "_pytest.runner.collect_one_node": {
  "lineno": 438,
  "symbols_in_volume": [
   "_pytest.nodes.Collector"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_addoption": {
  "lineno": 45,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_make_collect_report": {
  "lineno": 323,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionChainRepr",
   "_pytest.nodes.Collector",
   "_pytest.outcomes.Skipped",
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_report_teststatus": {
  "lineno": 188,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_call": {
  "lineno": 144,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "sys.last_traceback",
   "sys.last_type",
   "sys.last_value"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_makereport": {
  "lineno": 319,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_protocol": {
  "lineno": 97,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_setup": {
  "lineno": 139,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_teardown": {
  "lineno": 164,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_sessionfinish": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_sessionstart": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_terminal_summary": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.runtestprotocol": {
  "lineno": 105,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.runner.show_test_item": {
  "lineno": 127,
  "symbols_in_volume": [
   "_pytest.nodes.Item"
  ],
  "type": "function"
 },
 "_pytest.setuponly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.setuponly._show_fixture_action": {
  "lineno": 59,
  "symbols_in_volume": [
   "_pytest._io.saferepr.saferepr",
   "_pytest.fixtures.FixtureDef"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_addoption": {
  "lineno": 14,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_cmdline_main": {
  "lineno": 90,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "pytest.hookimpl",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_post_finalizer": {
  "lineno": 50,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureDef"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_setup": {
  "lineno": 30,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureDef",
   "_pytest.fixtures.SubRequest",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.setupplan": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.setupplan.pytest_addoption": {
  "lineno": 12,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "lineno": 35,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.config.ExitCode",
   "pytest.hookimpl",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "lineno": 23,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureDef",
   "_pytest.fixtures.SubRequest",
   "pytest.hookimpl",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.skipping": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "_pytest.store.StoreKey",
   "typing.Optional"
  ],
  "type": "module"
 },
 "_pytest.skipping.Skip": {
  "lineno": 152,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.skipping.Xfail": {
  "lineno": 190,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "_pytest.skipping.evaluate_condition": {
  "lineno": 87,
  "symbols_in_volume": [
   "_pytest.mark.structures.Mark",
   "_pytest.nodes.Item",
   "_pytest.outcomes.fail",
   "os",
   "platform",
   "sys",
   "traceback.format_exception_only",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.skipping.evaluate_skip_marks": {
  "lineno": 159,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.skipping.evaluate_xfail_marks": {
  "lineno": 200,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_addoption": {
  "lineno": 29,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_configure": {
  "lineno": 48,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.outcomes.xfail.Exception",
   "pytest",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_configure.nop": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_report_teststatus": {
  "lineno": 310,
  "symbols_in_volume": [
   "_pytest.reports.BaseReport",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_call": {
  "lineno": 244,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.nodes.Item",
   "_pytest.outcomes.xfail",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_makereport": {
  "lineno": 261,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.nodes.Item",
   "_pytest.outcomes.xfail.Exception",
   "_pytest.runner.CallInfo"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_setup": {
  "lineno": 232,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.nodes.Item",
   "_pytest.outcomes.skip",
   "_pytest.outcomes.xfail"
  ],
  "type": "function"
 },
 "_pytest.stepwise": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.stepwise.StepwisePlugin": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.stepwise.StepwisePlugin.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_collection_modifyitems": {
  "lineno": 49,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.main.Session",
   "_pytest.nodes.Item",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_report_collectionfinish": {
  "lineno": 111,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_runtest_logreport": {
  "lineno": 84,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionfinish": {
  "lineno": 116,
  "symbols_in_volume": [
   "_pytest.main.Session"
  ],
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionstart": {
  "lineno": 46,
  "symbols_in_volume": [
   "_pytest.main.Session"
  ],
  "type": "function"
 },
 "_pytest.stepwise.pytest_addoption": {
  "lineno": 12,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.stepwise.pytest_configure": {
  "lineno": 29,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.store": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.store.Store": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.store.Store.__contains__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.store.Store.__delitem__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.store.Store.__getitem__": {
  "lineno": 92,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "_pytest.store.Store.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.store.Store.__setitem__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.store.Store.get": {
  "lineno": 99,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.store.Store.setdefault": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.store.StoreKey": {
  "lineno": 16,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "_pytest.terminal": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.terminal.MoreQuietAction": {
  "lineno": 72,
  "symbols_in_volume": [
   "argparse.Action"
  ],
  "type": "class"
 },
 "_pytest.terminal.MoreQuietAction.__call__": {
  "lineno": 97,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "argparse.Namespace",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.terminal.MoreQuietAction.__init__": {
  "lineno": 80,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.terminal.TerminalReporter.__init__": {
  "lineno": 316,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "sys.stdout",
   "typing.Optional",
   "typing.TextIO"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._add_stats": {
  "lineno": 476,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._determine_main_color": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._determine_show_progress_info": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._get_main_color": {
  "lineno": 1153,
  "symbols_in_volume": [
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._get_progress_information_message": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._get_teardown_reports": {
  "lineno": 977,
  "symbols_in_volume": [
   "_pytest.reports.TestReport",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getcrashline": {
  "lineno": 887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getfailureheadline": {
  "lineno": 881,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._handle_teardown_sections": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._is_last_item": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline": {
  "lineno": 859,
  "symbols_in_volume": [
   "_pytest.nodes.SEP"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline.mkrel": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._outrep_summary": {
  "lineno": 1034,
  "symbols_in_volume": [
   "_pytest.reports.BaseReport"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._printcollecteditems": {
  "lineno": 761,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "inspect.getdoc",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._report_keyboardinterrupt": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._set_main_color": {
  "lineno": 1172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._width_of_current_line": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_progress_information_filling_space": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_report_lines_from_hooks": {
  "lineno": 717,
  "symbols_in_volume": [
   "more_itertools.collapse",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.build_summary_stats_line": {
  "lineno": 1181,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.ensure_newline": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.flush": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.getreports": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.hasopt": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.line": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.no_header": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.no_summary": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.print_teardown_sections": {
  "lineno": 989,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection": {
  "lineno": 630,
  "symbols_in_volume": [
   "_pytest.timing.time"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_finish": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collectreport": {
  "lineno": 638,
  "symbols_in_volume": [
   "_pytest.reports.CollectReport",
   "pytest.Item"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_deselected": {
  "lineno": 508,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_internalerror": {
  "lineno": 482,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionRepr"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_keyboard_interrupt": {
  "lineno": 836,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_plugin_registered": {
  "lineno": 500,
  "symbols_in_volume": [
   "_pytest.config._PluggyPlugin"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_report_header": {
  "lineno": 724,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logfinish": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logreport": {
  "lineno": 524,
  "symbols_in_volume": [
   "_pytest.reports.TestReport"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logstart": {
  "lineno": 511,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionfinish": {
  "lineno": 798,
  "symbols_in_volume": [
   "_pytest.config.ExitCode",
   "_pytest.config.ExitCode.INTERRUPTED",
   "_pytest.config.ExitCode.NO_TESTS_COLLECTED",
   "_pytest.config.ExitCode.OK",
   "_pytest.config.ExitCode.TESTS_FAILED",
   "_pytest.config.ExitCode.USAGE_ERROR",
   "pytest.hookimpl",
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionstart": {
  "lineno": 688,
  "symbols_in_volume": [
   "_pytest.timing.time",
   "platform.python_version",
   "pluggy.__version__",
   "py.__version__",
   "pytest.__version__",
   "pytest.hookimpl",
   "sys",
   "sys.executable",
   "sys.platform"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_terminal_summary": {
  "lineno": 825,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_unconfigure": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_warning_recorded": {
  "lineno": 487,
  "symbols_in_volume": [
   "_pytest.warnings.warning_record_to_str",
   "warnings.WarningMessage"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.report_collect": {
  "lineno": 648,
  "symbols_in_volume": [
   "_pytest.timing.time"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.rewrite": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.section": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary": {
  "lineno": 1084,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_simple": {
  "lineno": 1088,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_skipped": {
  "lineno": 1116,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_xfailed": {
  "lineno": 1098,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.short_test_summary.show_xpassed": {
  "lineno": 1108,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showfspath": {
  "lineno": 391,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showheader": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showlongtestinfo": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_errors": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_failures": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_passes": {
  "lineno": 963,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_stats": {
  "lineno": 1047,
  "symbols_in_volume": [
   "_pytest.timing.time"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings": {
  "lineno": 906,
  "symbols_in_volume": [
   "_pytest.compat.order_preserving_dict"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings.collapsed_location_report": {
  "lineno": 929,
  "symbols_in_volume": [
   "_pytest.compat.order_preserving_dict",
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.verbosity": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_ensure_prefix": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_fspath_result": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_line": {
  "lineno": 436,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_sep": {
  "lineno": 460,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.writer": {
  "lineno": 347,
  "symbols_in_volume": [
   "_pytest._io.TerminalWriter",
   "_pytest.deprecated.TERMINALWRITER_WRITER",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.terminal.WarningReport": {
  "lineno": 278,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "py.path.local",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "_pytest.terminal.WarningReport.get_location": {
  "lineno": 296,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "py.path.local",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.terminal._folded_skips": {
  "lineno": 1245,
  "symbols_in_volume": [
   "_pytest.reports.CollectReport",
   "py.path.local",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.terminal._get_line_with_reprcrash_message": {
  "lineno": 1206,
  "symbols_in_volume": [
   "_pytest._io.wcwidth.wcswidth",
   "_pytest.config.Config",
   "_pytest.reports.BaseReport"
  ],
  "type": "function"
 },
 "_pytest.terminal._get_pos": {
  "lineno": 1201,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.reports.BaseReport"
  ],
  "type": "function"
 },
 "_pytest.terminal._make_plural": {
  "lineno": 1283,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.terminal._plugin_nameversions": {
  "lineno": 1296,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "_pytest.terminal.format_session_duration": {
  "lineno": 1311,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "_pytest.terminal.getreportopt": {
  "lineno": 237,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.terminal.pytest_addoption": {
  "lineno": 110,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.terminal.pytest_configure": {
  "lineno": 225,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "sys.stdout"
  ],
  "type": "function"
 },
 "_pytest.terminal.pytest_configure.mywriter": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.pytest_report_teststatus": {
  "lineno": 262,
  "symbols_in_volume": [
   "_pytest.reports.BaseReport",
   "pytest.hookimpl",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "_pytest.timing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.tmpdir": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.tmpdir.TempPathFactory": {
  "lineno": 21,
  "symbols_in_volume": [
   "attr.converters.optional",
   "attr.ib",
   "attr.s",
   "os.path.abspath",
   "typing.Optional"
  ],
  "type": "class"
 },
 "_pytest.tmpdir.TempPathFactory._ensure_relative_to_basetemp": {
  "lineno": 49,
  "symbols_in_volume": [
   "os.path.normpath"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.from_config": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.getbasetemp": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.environ.get",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.mktemp": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "lineno": 107,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "lineno": 122,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "lineno": 116,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.tmpdir._mk_tmp": {
  "lineno": 170,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "re.sub"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.get_user": {
  "lineno": 127,
  "symbols_in_volume": [
   "getpass.getuser",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.pytest_configure": {
  "lineno": 139,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.monkeypatch.MonkeyPatch"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmp_path": {
  "lineno": 191,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmp_path_factory": {
  "lineno": 162,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir": {
  "lineno": 178,
  "symbols_in_volume": [
   "py.path.local",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "lineno": 154,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.unittest": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "types.TracebackType",
   "typing.Tuple",
   "typing.Type",
   "typing.Union"
  ],
  "type": "module"
 },
 "_pytest.unittest.TestCaseFunction": {
  "lineno": 142,
  "symbols_in_volume": [
   "_pytest.python.Function"
  ],
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "lineno": 166,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "_pytest.outcomes.fail.Exception",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._expecting_failure": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "lineno": 282,
  "symbols_in_volume": [
   "_pytest.python.Function._prunetraceback",
   "traceback"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "lineno": 199,
  "symbols_in_volume": [
   "_pytest.outcomes.exit",
   "_pytest.outcomes.exit.Exception"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "lineno": 221,
  "symbols_in_volume": [
   "_pytest.outcomes.xfail",
   "_pytest.outcomes.xfail.Exception",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "lineno": 214,
  "symbols_in_volume": [
   "_pytest.outcomes.skip",
   "_pytest.outcomes.skip.Exception",
   "_pytest.skipping.skipped_by_mark_key",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "lineno": 232,
  "symbols_in_volume": [
   "_pytest.skipping.unexpectedsuccess_key"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "lineno": 252,
  "symbols_in_volume": [
   "_pytest.compat.is_async_function",
   "_pytest.debugging.maybe_wrap_pytest_function_for_tracing"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase": {
  "lineno": 62,
  "symbols_in_volume": [
   "_pytest.python.Class"
  ],
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase._inject_setup_teardown_fixtures": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "lineno": 67,
  "symbols_in_volume": [
   "_pytest.compat.getimfunc",
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "sys.modules.get",
   "typing.Iterable",
   "typing.Union",
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "_pytest.unittest._is_skipped": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture.fixture": {
  "lineno": 122,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest",
   "pytest.fixture",
   "pytest.skip",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "lineno": 348,
  "symbols_in_volume": [
   "twisted.trial.itrial.IReporter",
   "typing.List",
   "zope.interface.classImplements"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "lineno": 46,
  "symbols_in_volume": [
   "_pytest.python.PyCollector",
   "sys.modules",
   "typing.Optional"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "lineno": 291,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.nodes.Item",
   "_pytest.runner.CallInfo",
   "_pytest.runner.CallInfo.from_call",
   "pytest.skip",
   "sys.modules.get",
   "unittest",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "lineno": 318,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.nodes.Item",
   "sys.modules",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "lineno": 325,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.warning_types": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "_pytest.warning_types.PytestAssertRewriteWarning": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestCacheWarning": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestCollectionWarning": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestConfigWarning": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestDeprecationWarning": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning.simple": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.warning_types.PytestUnhandledCoroutineWarning": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestUnknownMarkWarning": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestWarning": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning": {
  "lineno": 90,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "typing.Generic"
  ],
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning.format": {
  "lineno": 101,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "_pytest.warnings": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "_pytest.warnings._issue_warning_captured": {
  "lineno": 195,
  "symbols_in_volume": [
   "sys._getframe",
   "warnings.catch_warnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.warnings._parse_filter": {
  "lineno": 23,
  "symbols_in_volume": [
   "functools.lru_cache",
   "re.escape",
   "warnings._OptionError",
   "warnings._getaction",
   "warnings._getcategory"
  ],
  "type": "function"
 },
 "_pytest.warnings.catch_warnings_for_item": {
  "lineno": 83,
  "symbols_in_volume": [
   "_pytest.config.Config",
   "_pytest.nodes.Item",
   "contextlib.contextmanager",
   "pytest.PytestDeprecationWarning",
   "sys.warnoptions",
   "typing.Generator",
   "typing.Optional",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_addoption": {
  "lineno": 58,
  "symbols_in_volume": [
   "_pytest.config.argparsing.Parser"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_collection": {
  "lineno": 166,
  "symbols_in_volume": [
   "_pytest.main.Session",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_configure": {
  "lineno": 75,
  "symbols_in_volume": [
   "_pytest.config.Config"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_runtest_protocol": {
  "lineno": 158,
  "symbols_in_volume": [
   "_pytest.nodes.Item",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_sessionfinish": {
  "lineno": 186,
  "symbols_in_volume": [
   "_pytest.main.Session",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_terminal_summary": {
  "lineno": 175,
  "symbols_in_volume": [
   "_pytest.terminal.TerminalReporter",
   "pytest.hookimpl",
   "typing.Generator"
  ],
  "type": "function"
 },
 "_pytest.warnings.warning_record_to_str": {
  "lineno": 145,
  "symbols_in_volume": [
   "warnings.WarningMessage",
   "warnings.formatwarning"
  ],
  "type": "function"
 },
 "pytest": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.debugging.pytestPDB.set_trace"
  ],
  "type": "module"
 },
 "pytest.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.console_main"
  ],
  "type": "module"
 },
 "pytest.collect": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "pytest.collect.FakeCollectModule": {
  "lineno": 22,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "pytest.collect.FakeCollectModule.__dir__": {
  "lineno": 28,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "pytest.collect.FakeCollectModule.__getattr__": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest",
   "typing.Any"
  ],
  "type": "function"
 },
 "pytest.collect.FakeCollectModule.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest"
  ],
  "type": "function"
 }
}