{
 "_pytest": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "_pytest.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "_pytest.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "_pytest._argcomplete": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest._argcomplete.FastFilesCompleter",
    "_pytest._argcomplete.os",
    "_pytest._argcomplete.sys"
   ]
  },
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_pytest._argcomplete.os",
    "glob.glob",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "_pytest._argcomplete.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._argcomplete.argcomplete.completers": {
  "data": {
   "shadows": "argcomplete.completers"
  },
  "type": "import"
 },
 "_pytest._argcomplete.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._argcomplete.filescompleter": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "_pytest._argcomplete.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "_pytest._argcomplete.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest._argcomplete.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._argcomplete.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "_pytest._code": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback._format_final_exc_line": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "_pytest._code._py2traceback._some_str"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback._some_str": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "six.text_type",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.format_exception_only": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "SyntaxError",
    "_pytest._code._py2traceback._format_final_exc_line",
    "_pytest._code._py2traceback.types",
    "bytes",
    "isinstance",
    "issubclass",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest._code._py2traceback.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "_pytest._code.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest._code.compile": {
  "data": {
   "shadows": "compile_"
  },
  "type": "import"
 },
 "_pytest._code.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest._code.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest._io": {
  "data": {},
  "type": "module"
 },
 "_pytest._io.saferepr": {
  "data": {},
  "type": "module"
 },
 "_pytest._io.saferepr.SafeRepr": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "six.moves.reprlib.Repr"
   ]
  },
  "type": "class"
 },
 "_pytest._io.saferepr.SafeRepr._callhelper": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "_pytest._io.saferepr.sys",
    "call",
    "getattr",
    "id",
    "len",
    "max",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "six.moves.reprlib.Repr.repr"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_instance": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_unicode": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "max",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.SafeRepr.repr_unicode.repr": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "_pytest._io.saferepr.reprlib": {
  "data": {
   "shadows": "six.moves.reprlib"
  },
  "type": "import"
 },
 "_pytest._io.saferepr.saferepr": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "_pytest._io.saferepr.SafeRepr"
   ]
  },
  "type": "function"
 },
 "_pytest._io.saferepr.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._version": {
  "data": {},
  "type": "module"
 },
 "_pytest._version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "_pytest.assertion": {
  "data": {
   "symbols_in_volume": [
    "_pytest.assertion.util.assertrepr_compare"
   ]
  },
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "_pytest.assertion.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.install_importhook": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "SystemError",
    "_pytest.assertion.AssertionState",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.pytest_addoption": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_assertrepr_compare": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "_pytest.assertion.pytest_collection": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.callbinrepr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_pytest.assertion.six",
    "_pytest.assertion.truncate.truncate_if_required"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_teardown": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.assertion.DummyRewriteHook",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys",
    "isinstance",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "data": {
   "shadows": "_pytest.assertion.rewrite"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.sys"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewriter",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "data": {
   "lineno": 745
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.is_rewrite_disabled": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "list",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.six",
    "aliases",
    "enumerate",
    "getattr",
    "isinstance",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._NameConstant",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "_pytest.assertion.rewrite.itertools",
    "_pytest.assertion.rewrite.set_location",
    "_pytest.assertion.rewrite.sys",
    "_pytest.assertion.rewrite.warnings",
    "_pytest.warning_types.PytestWarning",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "enumerate",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_35": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_legacy": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map",
    "isinstance",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.unary_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.warn_about_none_ast": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._early_rewrite_bailout": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.os",
    "_pytest.pathlib.PurePath",
    "_pytest.pathlib.fnmatch_ex",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._imp_find_module": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.imp"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._is_marked_for_rewrite": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._register_with_pkg_resources": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.assertion.rewrite.pkg_resources",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning",
    "_pytest.warnings._issue_warning_captured"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_module": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "ValueError",
    "_pytest.assertion.rewrite.PYC_TAIL",
    "_pytest.assertion.rewrite._read_pyc",
    "_pytest.assertion.rewrite._rewrite_test",
    "_pytest.assertion.rewrite._write_pyc",
    "_pytest.assertion.rewrite.errno",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.os",
    "_pytest.assertion.rewrite.py",
    "_pytest.assertion.rewrite.sys",
    "hasattr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.is_package": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.assertion.rewrite.imp"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.load_module": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.six",
    "_pytest.assertion.rewrite.sys",
    "_pytest.compat.spec_from_file_location"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.BOM_UTF8": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.N": {
  "data": {
   "lineno": 366
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_EXT": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_TAIL": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYTEST_TAG": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PurePath": {
  "data": {
   "shadows": "_pytest.pathlib.PurePath"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.RN": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite._NameConstant": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util._reprcompare",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.rewrite.six",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_explanation": {
  "data": {
   "shadows": "_pytest.assertion.util.format_explanation"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "EnvironmentError",
    "Exception",
    "IOError",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "_pytest.assertion.rewrite.types",
    "int",
    "isinstance",
    "len",
    "open",
    "trace"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "EnvironmentError",
    "SyntaxError",
    "UnicodeDecodeError",
    "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING",
    "_pytest.assertion.rewrite.BOM_UTF8",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.cookie_re",
    "_pytest.assertion.rewrite.rewrite_asserts",
    "compile",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.rewrite.string",
    "bytes",
    "isinstance",
    "ord"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "Exception",
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "EnvironmentError",
    "_pytest.assertion.rewrite.atomicwrites",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ast_Call": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.atomicwrites": {
  "data": {
   "shadows": "atomicwrites"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.binop_map": {
  "data": {
   "lineno": 552
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.cookie_re": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.fnmatch_ex": {
  "data": {
   "shadows": "_pytest.pathlib.fnmatch_ex"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.impl": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.marshal": {
  "data": {
   "shadows": "marshal"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewriter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.set_location": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "_fix"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "_fix",
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.spec_from_file_location": {
  "data": {
   "shadows": "_pytest.compat.spec_from_file_location"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.unary_map": {
  "data": {
   "lineno": 550
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ver": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.assertion.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.assertion.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate": {
  "data": {
   "shadows": "_pytest.assertion.truncate"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_CHARS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.DEFAULT_MAX_LINES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate.USAGE_MSG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "_pytest.assertion.truncate._running_on_ci": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_pytest.assertion.truncate.os",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._should_truncate_item": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_pytest.assertion.truncate._running_on_ci"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_by_char_count": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_explanation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_pytest.assertion.truncate.DEFAULT_MAX_CHARS",
    "_pytest.assertion.truncate.DEFAULT_MAX_LINES",
    "_pytest.assertion.truncate.USAGE_MSG",
    "_pytest.assertion.truncate._truncate_by_char_count",
    "_pytest.assertion.truncate.six",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.truncate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.assertion.truncate.truncate_if_required": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_pytest.assertion.truncate._should_truncate_item",
    "_pytest.assertion.truncate._truncate_explanation"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.util._compare_eq_cls": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "_pytest.assertion.util.isattrs",
    "_pytest.assertion.util.isdatacls",
    "_pytest.assertion.util.pprint",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.util.pprint",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util.difflib",
    "_pytest.assertion.util.pprint",
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_verbose": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "bytes",
    "difflib.ndiff",
    "escape_for_readable_diff",
    "isinstance",
    "len",
    "min",
    "range",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text.escape_for_readable_diff": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "_pytest.assertion.util.six",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.util._diff_text",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.assertion.util._reprcompare": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.assertion.util._split_explanation": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "_pytest.assertion.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Exception",
    "_pytest._io.saferepr.saferepr",
    "_pytest.assertion.util._compare_eq_cls",
    "_pytest.assertion.util._compare_eq_dict",
    "_pytest.assertion.util._compare_eq_iterable",
    "_pytest.assertion.util._compare_eq_sequence",
    "_pytest.assertion.util._compare_eq_set",
    "_pytest.assertion.util._compare_eq_verbose",
    "_pytest.assertion.util._diff_text",
    "_pytest.assertion.util._notin_text",
    "_pytest.assertion.util.ecu",
    "_pytest.assertion.util.isattrs",
    "_pytest.assertion.util.isdatacls",
    "_pytest.assertion.util.isdict",
    "_pytest.assertion.util.isiterable",
    "_pytest.assertion.util.issequence",
    "_pytest.assertion.util.isset",
    "_pytest.assertion.util.istext",
    "_pytest.assertion.util.six",
    "_pytest.outcomes.Exit",
    "int",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.basestring": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "_pytest.assertion.util.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "_pytest.assertion.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.assertion.util.ecu": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.format_explanation": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_pytest.assertion.util._format_lines",
    "_pytest.assertion.util._split_explanation",
    "_pytest.assertion.util.ecu"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isattrs": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isdatacls": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isdict": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isiterable": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.assertion.util.istext",
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.issequence": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "_pytest.assertion.util.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.isset": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "frozenset",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.istext": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_pytest.assertion.util.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.ndiff": {
  "data": {
   "shadows": "difflib.ndiff"
  },
  "type": "import"
 },
 "_pytest.assertion.util.outcomes": {
  "data": {
   "shadows": "_pytest.outcomes"
  },
  "type": "import"
 },
 "_pytest.assertion.util.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest.assertion.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.assertion.util.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.assertion.util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.cacheprovider": {
  "data": {},
  "type": "module"
 },
 "_pytest.cacheprovider.CACHEDIR_TAG_CONTENT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.cacheprovider.Cache": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_pytest.cacheprovider.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.Cache._ensure_supporting_files": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "_pytest.cacheprovider.CACHEDIR_TAG_CONTENT",
    "_pytest.cacheprovider.README_CONTENT"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Path"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.cache_dir_from_config": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "resolve_from_str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.for_config": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "rmtree"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ValueError",
    "_pytest.cacheprovider.json"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Path",
    "ValueError",
    "_pytest.cacheprovider.py",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "_pytest.cacheprovider.json"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.warn": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestWarning",
    "_pytest.warnings._issue_warning_captured"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_collectionfinish": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.NFPlugin.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin._get_increasing_order": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "_pytest.cacheprovider.pytest",
    "_pytest.cacheprovider.six",
    "collections.OrderedDict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.PY2": {
  "data": {
   "shadows": "_PY2"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.README_CONTENT": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "_pytest.cacheprovider._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.cache": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "_pytest.cacheprovider.py",
    "object",
    "pprint.pformat",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pformat": {
  "data": {
   "shadows": "pprint.pformat"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "_pytest.cacheprovider.os"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "_pytest.cacheprovider.Cache",
    "_pytest.cacheprovider.LFPlugin",
    "_pytest.cacheprovider.NFPlugin",
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.wrap_session": {
  "data": {
   "shadows": "_pytest.main.wrap_session"
  },
  "type": "import"
 },
 "_pytest.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest.compat.PY35",
    "_pytest.compat.PY36",
    "_pytest.compat._PY2",
    "_pytest.compat._PY3",
    "_pytest.compat._non_printable_ascii_translate_table",
    "_pytest.compat.inspect",
    "_pytest.compat.re",
    "_pytest.compat.six",
    "_pytest.compat.sys",
    "bytes",
    "getattr",
    "object",
    "ord",
    "range",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES": {
  "data": {
   "lineno": 390
  },
  "type": "constant"
 },
 "_pytest.compat.CaptureIO": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "_pytest.compat.io"
   ]
  },
  "type": "class"
 },
 "_pytest.compat.CaptureIO.__init__": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "_pytest.compat.CaptureIO",
    "_pytest.compat.io",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.CaptureIO.encoding": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.CaptureIO.getvalue": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "_pytest.compat.FuncargnamesCompatAttr": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.compat.FuncargnamesCompatAttr.funcargnames": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "_pytest.compat.MODULE_NOT_FOUND_ERROR": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "_pytest.compat.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "_pytest.compat.MappingMixin": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "_pytest.compat.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "_pytest.compat.NOTSET": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "_pytest.compat.NoneType": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "_pytest.compat.PY35": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "_pytest.compat.PY36": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "_pytest.compat.Parameter": {
  "data": {
   "shadows": "funcsigs.Parameter"
  },
  "type": "import"
 },
 "_pytest.compat.REGEX_TYPE": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "_pytest.compat.STRING_TYPES": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "_pytest.compat.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "_pytest.compat.Sized": {
  "data": {
   "shadows": "collections.Sized"
  },
  "type": "import"
 },
 "_pytest.compat.TEST_OUTCOME": {
  "data": {
   "shadows": "_pytest.outcomes.TEST_OUTCOME"
  },
  "type": "import"
 },
 "_pytest.compat.TextIO": {
  "data": {
   "shadows": "py.io.TextIO"
  },
  "type": "import"
 },
 "_pytest.compat.UNICODE_TYPES": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "_pytest.compat._PY2": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.compat._PY3": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.compat._PytestWrapper": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.compat._PytestWrapper.__init__": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "_pytest.compat._bytes_to_ascii": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_pytest.compat.codecs"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "funcsigs.signature",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._is_unittest_unexpected_success_a_failure": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "_pytest.compat.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._non_printable_ascii_translate_table": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "_pytest.compat._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.compat._setup_collect_fakemodule": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "_pytest.compat.COLLECT_FAKEMODULE_ATTRIBUTES",
    "_pytest.compat.pytest",
    "getattr",
    "setattr",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._translate_non_printable": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "_pytest.compat._non_printable_ascii_translate_table"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.compat.ascii_escaped": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "_pytest.compat._translate_non_printable",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "_pytest.compat.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.compat.dummy_context_manager": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.enum": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.compat.exc_clear": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "_pytest.compat.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.compat.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.compat.get_default_arg_names": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "funcsigs.Parameter.KEYWORD_ONLY",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Parameter.empty",
    "funcsigs.signature",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.get_real_func": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "_pytest._io.saferepr.saferepr",
    "_pytest.compat._PytestWrapper",
    "_pytest.compat.functools",
    "getattr",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.get_real_method": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Exception",
    "_pytest.compat.get_real_func",
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfslineno": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "_pytest.compat._pytest",
    "_pytest.compat.get_real_func",
    "hasattr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_pytest.compat.num_mock_patch_args",
    "_pytest.outcomes.fail",
    "funcsigs.Parameter.KEYWORD_ONLY",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Parameter.empty",
    "funcsigs.signature",
    "hasattr",
    "isinstance",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_pytest.compat.get_real_func",
    "_pytest.compat.inspect",
    "_pytest.compat.py"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.compat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "_pytest.compat.is_generator": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "_pytest.compat.iscoroutinefunction"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isclass": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "_pytest.compat.iscoroutinefunction": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isfunction": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "_pytest.compat.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "_pytest.compat.lru_cache.dec": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "_pytest.compat.num_mock_patch_args": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_pytest.compat.sys",
    "any",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.compat.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.compat.safe_getattr": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "_pytest.outcomes.TEST_OUTCOME",
    "getattr",
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.safe_isclass": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "Exception",
    "_pytest.compat.isclass"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.safe_str": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "UnicodeError",
    "isinstance",
    "six.text_type",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.saferepr": {
  "data": {
   "shadows": "_pytest._io.saferepr.saferepr"
  },
  "type": "import"
 },
 "_pytest.compat.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "_pytest.compat.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.compat.spec_from_file_location": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "_pytest.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.compat.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "_pytest.config": {
  "data": {
   "symbols_in_volume": [
    "_pytest.config.Notset",
    "_pytest.config.builtin_plugins",
    "_pytest.config.default_plugins",
    "pluggy.HookimplMarker",
    "pluggy.HookspecMarker",
    "set"
   ]
  },
  "type": "module"
 },
 "_pytest.config.Config": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.Config.__init__": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "Parser",
    "_pytest.config.argparse",
    "_pytest.config.py",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._checkversion": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "_pytest.config.pytest",
    "pkg_resources.parse_version"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._consider_importhook": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "SystemError",
    "_pytest.config._warn_about_missing_assertion",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._do_configure": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._ensure_unconfigure": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "fin"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._get_override_ini_value": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "UsageError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._getconftest_pathlist": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.config.py",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._getini": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_pytest.config._strtobool",
    "_pytest.config.py",
    "_pytest.config.shlex",
    "bool",
    "map",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._initini": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "_pytest.config.copy",
    "determine_setup"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._mark_plugins_for_rewrite": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "_pytest.config._iter_rewritable_modules",
    "_pytest.config.os",
    "_pytest.config.pkg_resources"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._preparse": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "_pytest.config.ConftestImportFailure",
    "_pytest.config.copy",
    "_pytest.config.os",
    "_pytest.config.py",
    "_pytest.config.shlex",
    "_pytest.config.sys",
    "_pytest.warning_types.PytestWarning",
    "_pytest.warnings._issue_warning_captured",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._processopt": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config._validate_args": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "_pytest.config.copy"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.add_cleanup": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "_pytest.config.Config.addinivalue_line": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.cwd_relative_nodeid": {
  "data": {
   "lineno": 715
  },
  "type": "function"
 },
 "_pytest.config.Config.fromdictargs": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "_pytest.config.get_config",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.get_terminal_writer": {
  "data": {
   "lineno": 674
  },
  "type": "function"
 },
 "_pytest.config.Config.getini": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.getoption": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_pytest.config.notset",
    "_pytest.config.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.getvalue": {
  "data": {
   "lineno": 1016
  },
  "type": "function"
 },
 "_pytest.config.Config.getvalueorskip": {
  "data": {
   "lineno": 1020
  },
  "type": "function"
 },
 "_pytest.config.Config.notify_exception": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "_pytest.config.sys",
    "any",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.parse": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.pytest_cmdline_parse": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.sys",
    "_pytest.helpconfig.showversion",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.Config.pytest_load_initial_conftests": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "_pytest.config.hookimpl"
   ]
  },
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.ConftestImportFailure.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.config.EXIT_USAGEERROR": {
  "data": {
   "shadows": "_pytest.main.EXIT_USAGEERROR"
  },
  "type": "import"
 },
 "_pytest.config.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.config.HookimplMarker": {
  "data": {
   "shadows": "pluggy.HookimplMarker"
  },
  "type": "import"
 },
 "_pytest.config.HookspecMarker": {
  "data": {
   "shadows": "pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.config.Notset": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.config.Notset.__repr__": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "_pytest.config.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST"
  },
  "type": "import"
 },
 "_pytest.config.PluginManager": {
  "data": {
   "shadows": "pluggy.PluginManager"
  },
  "type": "import"
 },
 "_pytest.config.PytestPluginManager": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pluggy.PluginManager"
   ]
  },
  "type": "class"
 },
 "_pytest.config.PytestPluginManager.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Exception",
    "_pytest.config.PytestPluginManager",
    "_pytest.config.os",
    "_pytest.config.py",
    "_pytest.config.sys",
    "getattr",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._getconftestmodules": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.compat.lru_cache",
    "_pytest.config.six"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._import_plugin_specs": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "_pytest.config._get_plugin_specs_as_list"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._importconftest": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "_pytest.config.ConftestImportFailure",
    "_pytest.config._ensure_removed_sysmodule",
    "_pytest.config.sys",
    "_pytest.deprecated.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST.format",
    "_pytest.outcomes.fail",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._rget_with_confmod": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "getattr",
    "reversed"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._set_initial_conftests": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "_pytest.config.py",
    "exists",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._try_load_conftest": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.addhooks": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_pytest.config.warnings",
    "_pytest.deprecated.PLUGIN_MANAGER_ADDHOOKS"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_conftest": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_env": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_module": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_pluginarg": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_preparse": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "IndexError",
    "_pytest.config.six",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.getplugin": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.hasplugin": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.import_plugin": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "_pytest.compat.safe_str",
    "_pytest.config.builtin_plugins",
    "_pytest.config.six",
    "_pytest.config.sys",
    "_pytest.outcomes.Skipped",
    "_pytest.warning_types.PytestWarning",
    "_pytest.warnings._issue_warning_captured",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookimpl_opts": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "_pytest.config.inspect",
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookspec_opts": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "getattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.pytest_configure": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.register": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "_pytest.config.PytestPluginManager",
    "_pytest.config.types",
    "_pytest.config.warnings",
    "_pytest.warning_types.PytestWarning",
    "dict",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.config.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.config.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "_pytest.config._assertion_supported": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "_pytest.config._ensure_removed_sysmodule": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config._get_plugin_specs_as_list": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.six",
    "_pytest.config.types",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.config._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.config._iter_rewritable_modules": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config._prepareconfig": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "BaseException",
    "TypeError",
    "_pytest.config.get_config",
    "_pytest.config.py",
    "_pytest.config.six",
    "_pytest.config.sys",
    "_pytest.warnings._issue_warning_captured",
    "isinstance",
    "list",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.config._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.config._pytest.assertion": {
  "data": {
   "shadows": "_pytest.assertion"
  },
  "type": "import"
 },
 "_pytest.config._pytest.hookspec": {
  "data": {
   "shadows": "_pytest.hookspec"
  },
  "type": "import"
 },
 "_pytest.config._strtobool": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.config._warn_about_missing_assertion": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "_pytest.config._assertion_supported",
    "_pytest.config.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.config.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.config.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "_pytest.config.builtin_plugins": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "_pytest.config.cmdline": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_pytest.config.main",
    "object",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "_pytest.config.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "_pytest.config.create_terminal_writer": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "_pytest.config.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.default_plugins": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "_pytest.config.deprecated": {
  "data": {
   "shadows": "_pytest.deprecated"
  },
  "type": "import"
 },
 "_pytest.config.directory_arg": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.config.exceptions": {
  "data": {},
  "type": "module"
 },
 "_pytest.config.exceptions.PrintHelp": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.exceptions.UsageError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.config.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.config.filename_arg": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "UsageError",
    "_pytest.config.os"
   ]
  },
  "type": "function"
 },
 "_pytest.config.filter_traceback": {
  "data": {
   "shadows": "_pytest._code.filter_traceback"
  },
  "type": "import"
 },
 "_pytest.config.findpaths": {
  "data": {},
  "type": "module"
 },
 "_pytest.config.findpaths.CFG_PYTEST_SECTION": {
  "data": {
   "shadows": "_pytest.deprecated.CFG_PYTEST_SECTION"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.determine_setup": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "UsageError",
    "_pytest.config.findpaths.get_common_ancestor",
    "_pytest.config.findpaths.get_dirs_from_args",
    "_pytest.config.findpaths.getcfg",
    "_pytest.config.findpaths.os",
    "_pytest.config.findpaths.py",
    "_pytest.deprecated.CFG_PYTEST_SECTION.format",
    "_pytest.outcomes.fail",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.exists": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.get_common_ancestor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_pytest.config.findpaths.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "_pytest.config.findpaths.py",
    "get_dir_from_path",
    "get_file_part_from_node_id",
    "is_option"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_dir_from_path": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_pytest.config.findpaths.py"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_file_part_from_node_id": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.is_option": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.getcfg": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_pytest.config.findpaths.exists",
    "_pytest.config.findpaths.py",
    "_pytest.deprecated.CFG_PYTEST_SECTION.format",
    "_pytest.outcomes.fail",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.config.findpaths.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.config.findpaths.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.config.get_config": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_pytest.config.Config",
    "_pytest.config.PytestPluginManager",
    "_pytest.config.default_plugins"
   ]
  },
  "type": "function"
 },
 "_pytest.config.get_plugin_manager": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "_pytest.config.get_config"
   ]
  },
  "type": "function"
 },
 "_pytest.config.hookimpl": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "_pytest.config.hookspec": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "_pytest.config.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.config.lru_cache": {
  "data": {
   "shadows": "_pytest.compat.lru_cache"
  },
  "type": "import"
 },
 "_pytest.config.main": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_pytest._code.ExceptionInfo",
    "_pytest._code.filter_traceback",
    "_pytest.compat.safe_str",
    "_pytest.config.ConftestImportFailure",
    "_pytest.config._prepareconfig",
    "_pytest.config.py",
    "_pytest.config.sys",
    "_pytest.main.EXIT_USAGEERROR"
   ]
  },
  "type": "function"
 },
 "_pytest.config.notset": {
  "data": {
   "lineno": 613
  },
  "type": "constant"
 },
 "_pytest.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.config.parse_version": {
  "data": {
   "shadows": "pkg_resources.parse_version"
  },
  "type": "import"
 },
 "_pytest.config.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "_pytest.config.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.config.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.config.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.config.safe_str": {
  "data": {
   "shadows": "_pytest.compat.safe_str"
  },
  "type": "import"
 },
 "_pytest.config.setns": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "_pytest.config.pytest",
    "_pytest.config.sys",
    "_pytest.config.types",
    "dict",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.config.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "_pytest.config.showversion": {
  "data": {
   "shadows": "_pytest.helpconfig.showversion"
  },
  "type": "import"
 },
 "_pytest.config.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.config.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.deprecated": {
  "data": {
   "symbols_in_volume": [
    "_pytest.warning_types.PytestDeprecationWarning",
    "_pytest.warning_types.RemovedInPytest4Warning",
    "_pytest.warning_types.UnformattedWarning"
   ]
  },
  "type": "module"
 },
 "_pytest.deprecated.CFG_PYTEST_SECTION": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "_pytest.deprecated.FIXTURE_FUNCTION_CALL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "_pytest.deprecated.FIXTURE_NAMED_REQUEST": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.deprecated.GETFUNCARGVALUE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "_pytest.deprecated.MARK_INFO_ATTRIBUTE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_CONFIG_GLOBAL": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_ENSURETEMP": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_LOGWARNING": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_PARAM_UNKNOWN_KWARGS": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "_pytest.deprecated.PYTEST_WARNS_UNKNOWN_KWARGS": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "_pytest.deprecated.PytestDeprecationWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestDeprecationWarning"
  },
  "type": "import"
 },
 "_pytest.deprecated.RAISES_EXEC": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "_pytest.deprecated.RAISES_MESSAGE_PARAMETER": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "_pytest.deprecated.RESULT_LOG": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "_pytest.deprecated.RemovedInPytest4Warning": {
  "data": {
   "shadows": "_pytest.warning_types.RemovedInPytest4Warning"
  },
  "type": "import"
 },
 "_pytest.deprecated.UnformattedWarning": {
  "data": {
   "shadows": "_pytest.warning_types.UnformattedWarning"
  },
  "type": "import"
 },
 "_pytest.deprecated.WARNS_EXEC": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "_pytest.deprecated.YIELD_TESTS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.deprecated.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.deprecated.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.deprecated.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.freeze_support": {
  "data": {},
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_pytest.freeze_support.os",
    "_pytest.freeze_support.pkgutil",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.freeze_support.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.freeze_support.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.freeze_support.freeze_includes": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_pytest.freeze_support._iter_all_modules",
    "_pytest.freeze_support._pytest",
    "_pytest.freeze_support.py",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.freeze_support.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.freeze_support.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.freeze_support.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig": {
  "data": {},
  "type": "module"
 },
 "_pytest.helpconfig.Action": {
  "data": {
   "shadows": "argparse.Action"
  },
  "type": "import"
 },
 "_pytest.helpconfig.HelpAction": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "argparse.Action"
   ]
  },
  "type": "class"
 },
 "_pytest.helpconfig.HelpAction.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_pytest.config.PrintHelp",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.HelpAction.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_pytest.helpconfig.HelpAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.PrintHelp": {
  "data": {
   "shadows": "_pytest.config.PrintHelp"
  },
  "type": "import"
 },
 "_pytest.helpconfig.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.helpconfig.conftest_options": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "_pytest.helpconfig.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "getattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.helpconfig.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.helpconfig.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_pytest.helpconfig.HelpAction"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_pytest.helpconfig.showhelp",
    "_pytest.helpconfig.showversion"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "_pytest.helpconfig.os",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.sys",
    "map",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_pytest.helpconfig.sys",
    "undo_tracing"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "_pytest.helpconfig.getpluginversioninfo",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "hasattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "help",
    "type",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.showversion": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_pytest.helpconfig.getpluginversioninfo",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.hookspec": {
  "data": {
   "symbols_in_volume": [
    "pluggy.HookspecMarker"
   ]
  },
  "type": "module"
 },
 "_pytest.hookspec.HookspecMarker": {
  "data": {
   "shadows": "pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.hookspec.PYTEST_LOGWARNING": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_LOGWARNING"
  },
  "type": "import"
 },
 "_pytest.hookspec.hookspec": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_doctest_prepare_content": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemstart": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_leave_pdb": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_logwarning": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "_pytest.deprecated.PYTEST_LOGWARNING",
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_collectionfinish": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_from_serializable": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_to_serializable": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logfinish": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_warning_captured": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml": {
  "data": {
   "symbols_in_volume": [
    "_pytest.junitxml._legal_chars",
    "_pytest.junitxml._legal_ranges",
    "_pytest.junitxml._legal_xml_re",
    "_pytest.junitxml.families",
    "_pytest.junitxml.merge_family",
    "_pytest.junitxml.re",
    "_pytest.junitxml.six",
    "_pytest.junitxml.sys"
   ]
  },
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "_pytest.junitxml.os",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "_pytest.junitxml._NodeReporter",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "getattr",
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.os",
    "_pytest.junitxml.time",
    "codecs.open"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "_pytest.junitxml.time"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.junitxml._NodeReporter": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "kind"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_attribute": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "_pytest.junitxml.six",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "_pytest.junitxml.families",
    "_pytest.junitxml.mangle_test_address",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.write_captured_output": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "getattr",
    "tag"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._legal_chars": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_ranges": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_xml_re": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "_pytest.junitxml._py_ext_re": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "_pytest.junitxml.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "_pytest.junitxml.illegal_xml_re",
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.junitxml.families": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "_pytest.junitxml.filename_arg": {
  "data": {
   "shadows": "_pytest.config.filename_arg"
  },
  "type": "import"
 },
 "_pytest.junitxml.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.junitxml.illegal_xml_re": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "_pytest.junitxml.mangle_test_address": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.junitxml._py_ext_re",
    "_pytest.nodes.SEP"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.merge_family": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.junitxml.open": {
  "data": {
   "shadows": "codecs.open"
  },
  "type": "import"
 },
 "_pytest.junitxml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.junitxml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.junitxml.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest_addoption": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "_pytest.config.filename_arg",
    "_pytest.junitxml.functools"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "_pytest.junitxml.LogXML",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.junitxml.record_property": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "_pytest.junitxml.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_property.append_property": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "_pytest.junitxml.pytest",
    "_pytest.warning_types.PytestWarning",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute.add_attr_noop": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "_pytest.junitxml.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.junitxml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.junitxml.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.logging": {
  "data": {},
  "type": "module"
 },
 "_pytest.logging.ColoredLevelFormatter": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "_pytest.logging.re",
    "set"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.ColoredLevelFormatter.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_pytest.logging.ColoredLevelFormatter",
    "_pytest.logging.logging",
    "_pytest.logging.six",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.ColoredLevelFormatter.format": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_pytest.logging.ColoredLevelFormatter",
    "_pytest.logging.six",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.DEFAULT_LOG_DATE_FORMAT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "_pytest.logging.DEFAULT_LOG_FORMAT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.logging.LogCaptureFixture": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.LogCaptureFixture.__init__": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture._finalize": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.at_level": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.clear": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.get_records": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.handler": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.messages": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.record_tuples": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.records": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.set_level": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.text": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.LogCaptureHandler.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "_pytest.logging.py"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.emit": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.reset": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "_pytest.logging.py"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.logging.LoggingPlugin.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "_pytest.compat.dummy_context_manager",
    "_pytest.logging.get_actual_log_level",
    "_pytest.logging.get_option_ini",
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._log_cli_enabled": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for_main": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "_pytest.logging.LogCaptureHandler",
    "_pytest.logging.catching_logs",
    "contextlib.contextmanager",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._setup_cli_logging": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "_pytest.config.create_terminal_writer",
    "_pytest.logging.ColoredLevelFormatter",
    "_pytest.logging._LiveLoggingStreamHandler",
    "_pytest.logging.catching_logs",
    "_pytest.logging.get_actual_log_level",
    "_pytest.logging.get_option_ini",
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_collection": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_call": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logfinish": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logstart": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_setup": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_teardown": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtestloop": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_sessionstart": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "_pytest.logging.catching_logs",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.set_log_path": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "_pytest.pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.logging._LiveLoggingStreamHandler": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "class"
 },
 "_pytest.logging._LiveLoggingStreamHandler.__init__": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.emit": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "_pytest.compat.dummy_context_manager",
    "_pytest.logging.logging"
   ]
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.reset": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.set_when": {
  "data": {
   "lineno": 638
  },
  "type": "function"
 },
 "_pytest.logging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.logging.caplog": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_pytest.logging.LogCaptureFixture",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.catching_logs": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_pytest.logging.logging",
    "contextlib.contextmanager",
    "min"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.logging.create_terminal_writer": {
  "data": {
   "shadows": "_pytest.config.create_terminal_writer"
  },
  "type": "import"
 },
 "_pytest.logging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.logging.dummy_context_manager": {
  "data": {
   "shadows": "_pytest.compat.dummy_context_manager"
  },
  "type": "import"
 },
 "_pytest.logging.get_actual_log_level": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.logging.logging",
    "_pytest.logging.pytest",
    "_pytest.logging.six",
    "getattr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.get_option_ini": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "_pytest.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "_pytest.logging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.logging.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.logging.pytest_addoption": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_pytest.logging.DEFAULT_LOG_DATE_FORMAT",
    "_pytest.logging.DEFAULT_LOG_FORMAT",
    "add_option_ini"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.pytest_addoption.add_option_ini": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.pytest_configure": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "_pytest.logging.LoggingPlugin",
    "_pytest.logging.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.logging.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.logging.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.main": {
  "data": {},
  "type": "module"
 },
 "_pytest.main.EXIT_INTERNALERROR": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_INTERRUPTED": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_OK": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_TESTSFAILED": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_USAGEERROR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "_pytest.main.FSHookProxy": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.main.FSHookProxy.__getattr__": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "_pytest.main.FSHookProxy.__init__": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "_pytest.main.Failed": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "class"
 },
 "_pytest.main.NoMatch": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.PYTEST_CONFIG_GLOBAL": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_CONFIG_GLOBAL"
  },
  "type": "import"
 },
 "_pytest.main.Package": {
  "data": {
   "shadows": "_pytest.python.Package"
  },
  "type": "import"
 },
 "_pytest.main.Session": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "_pytest.main.Failed",
    "_pytest.main.Interrupted",
    "_pytest.main.six",
    "_pytest.nodes.FSCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "_pytest.main._bestrelpath_cache",
    "_pytest.main.py",
    "_pytest.nodes.FSCollector.__init__",
    "frozenset"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.__repr__": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "_pytest.python.Package",
    "isinstance",
    "next",
    "reversed",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._collectfile": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "_pytest.nodes.Collector",
    "_pytest.nodes.Item",
    "_pytest.runner.collect_one_node",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._node_location_to_relpath": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.main.os",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "_pytest.config.UsageError",
    "_pytest.runner.collect_one_node",
    "frozenset"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._recurse": {
  "data": {
   "lineno": 651
  },
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "_pytest.main._patched_find_module",
    "_pytest.main.os",
    "_pytest.main.pkgutil"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._visit_filter": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "_pytest.main.sys",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "_pytest.nodes.Collector",
    "_pytest.nodes.Item",
    "_pytest.runner.collect_one_node",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "_pytest.main.FSHookProxy"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "_pytest.nodes",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "_pytest.config.hookimpl"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "_pytest.config.hookimpl",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.main._ConfigDeprecated": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.main._ConfigDeprecated.__getattr__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "_pytest.deprecated.PYTEST_CONFIG_GLOBAL",
    "_pytest.main.attr",
    "_pytest.main.warnings",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main._ConfigDeprecated.__init__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "_pytest.main._ConfigDeprecated.__repr__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.main._ConfigDeprecated.__setattr__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_pytest.deprecated.PYTEST_CONFIG_GLOBAL",
    "_pytest.main.attr",
    "_pytest.main.warnings",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main._bestrelpath_cache": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "_pytest.main.attr",
    "dict"
   ]
  },
  "type": "class"
 },
 "_pytest.main._bestrelpath_cache.__missing__": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "_pytest.main._in_venv": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "_pytest.main.sys",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.main._main": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_TESTSFAILED"
   ]
  },
  "type": "function"
 },
 "_pytest.main._patched_find_module": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "_pytest.main.contextlib",
    "_pytest.main.pkgutil",
    "_pytest.main.six"
   ]
  },
  "type": "function"
 },
 "_pytest.main._patched_find_module.find_module_patched": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.main.pkgutil"
   ]
  },
  "type": "function"
 },
 "_pytest.main._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.main.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.main.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.main.collect_one_node": {
  "data": {
   "shadows": "_pytest.runner.collect_one_node"
  },
  "type": "import"
 },
 "_pytest.main.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "_pytest.main.directory_arg": {
  "data": {
   "shadows": "_pytest.config.directory_arg"
  },
  "type": "import"
 },
 "_pytest.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.main.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "_pytest.main.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.main.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.main.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.main.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.main.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.main.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.main.pytest_addoption": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_pytest.config.directory_arg",
    "_pytest.main.functools",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection_modifyitems": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_configure": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "__import__",
    "_pytest.main._ConfigDeprecated"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "_pytest.main._in_venv",
    "_pytest.main.fnmatch",
    "_pytest.main.py",
    "_pytest.main.six",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.main.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.main.wrap_session": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "SystemExit",
    "_pytest.config.UsageError",
    "_pytest.main.EXIT_INTERNALERROR",
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main.EXIT_TESTSFAILED",
    "_pytest.main.Session",
    "_pytest.main.sys",
    "_pytest.outcomes.exit.Exception",
    "doit",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark": {
  "data": {
   "symbols_in_volume": [
    "_pytest.mark.pytest_cmdline_main"
   ]
  },
  "type": "module"
 },
 "_pytest.mark.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.mark.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "_pytest.mark._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.mark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.mark.deselect_by_keyword": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "matchkeyword"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.deselect_by_mark": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "matchmark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate": {
  "data": {},
  "type": "module"
 },
 "_pytest.mark.evaluate.MarkEvaluator": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__bool__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._get_marks": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._getglobals": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_pytest.mark.evaluate.os",
    "_pytest.mark.evaluate.platform",
    "_pytest.mark.evaluate.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._istrue": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_pytest.mark.evaluate.cached_eval",
    "_pytest.mark.evaluate.six",
    "bool",
    "fail",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.get": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.getexplanation": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.invalidraise": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.istrue": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest.mark.evaluate.sys",
    "_pytest.mark.evaluate.traceback",
    "fail",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.wasvalid": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.cached_eval": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "KeyError",
    "eval",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.evaluate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.mark.evaluate.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.mark.legacy": {
  "data": {},
  "type": "module"
 },
 "_pytest.mark.legacy.KeywordMapping": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.legacy.KeywordMapping.__getitem__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.from_item": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_pytest.mark.legacy.pytest",
    "classmethod",
    "cls",
    "hasattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_pytest.mark.legacy.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.legacy.MarkMapping.__getitem__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping.from_item": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.matchkeyword": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest.config.UsageError",
    "_pytest.mark.legacy.KeywordMapping",
    "_pytest.mark.legacy.keyword",
    "_pytest.mark.legacy.python_keywords_allowed_list",
    "eval"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.matchmark": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "SyntaxError",
    "_pytest.mark.legacy.MarkMapping",
    "eval",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.legacy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.mark.legacy.python_keywords_allowed_list": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "_pytest.mark.param": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "_pytest.mark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.mark.pytest_addoption": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "_pytest.mark.deselect_by_keyword",
    "_pytest.mark.deselect_by_mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_pytest.config.UsageError"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_unconfigure": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures": {
  "data": {
   "symbols_in_volume": [
    "_pytest.mark.structures.MarkGenerator"
   ]
  },
  "type": "module"
 },
 "_pytest.mark.structures.EMPTY_PARAMETERSET_OPTION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "_pytest.mark.structures.MARK_GEN": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "_pytest.mark.structures.Mark": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "_pytest.mark.structures.attr",
    "object",
    "str"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.Mark.combined_with": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "_pytest.mark.structures.alias",
    "_pytest.mark.structures.attr",
    "mark",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.MarkDecorator.__call__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "_pytest.mark.structures.inspect",
    "_pytest.mark.structures.istestfunc",
    "_pytest.mark.structures.store_mark",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__eq__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "_pytest.mark.structures.MarkDecorator",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__repr__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.markname": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.with_args": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkGenerator": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.MarkGenerator.__getattr__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.mark.structures.Mark",
    "_pytest.mark.structures.MarkDecorator"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.MarkGenerator._check": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.outcomes.fail",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords": {
  "data": {
   "lineno": 319
  },
  "type": "class"
 },
 "_pytest.mark.structures.NodeKeywords.__delitem__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__getitem__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__init__": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__iter__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__len__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__repr__": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__setitem__": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords._seen": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "_pytest.mark.structures.attr",
    "list",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.NodeMarkers.__iter__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.find": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "mark",
    "mark.name"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.update": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "_pytest.mark.structures.PYTEST_PARAM_UNKNOWN_KWARGS": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_PARAM_UNKNOWN_KWARGS"
  },
  "type": "import"
 },
 "_pytest.mark.structures.ParameterSet": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "_pytest.mark.structures.ParameterSet._for_parametrize": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_pytest.mark.structures.ParameterSet",
    "_pytest.mark.structures.get_empty_parameterset_mark",
    "_pytest.outcomes.fail",
    "classmethod",
    "isinstance",
    "len",
    "list",
    "mark",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.extract_from": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.param",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.param": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.deprecated.PYTEST_PARAM_UNKNOWN_KWARGS.format",
    "_pytest.mark.structures.six",
    "_pytest.mark.structures.warnings",
    "ascii_escaped",
    "classmethod",
    "cls",
    "isinstance",
    "list",
    "set",
    "sorted",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.alias": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "getter",
    "operator.attrgetter",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.alias.warned": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_pytest.mark.structures.warnings",
    "getter"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.mark.structures.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "_pytest.mark.structures.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.mark.structures.get_empty_parameterset_mark": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "LookupError",
    "_pytest.mark.structures.EMPTY_PARAMETERSET_OPTION",
    "getfslineno",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.get_unpacked_marks": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_pytest.mark.structures.normalize_mark_list",
    "getattr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.mark.structures.istestfunc": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "_pytest.mark.structures.normalize_mark_list": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.mark.structures.Mark",
    "getattr",
    "isinstance",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.mark.structures.store_mark": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "_pytest.mark.structures.Mark",
    "_pytest.mark.structures.get_unpacked_marks",
    "isinstance",
    "mark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.structures.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.monkeypatch": {
  "data": {
   "symbols_in_volume": [
    "_pytest.monkeypatch.Notset",
    "_pytest.monkeypatch.re"
   ]
  },
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch._warn_if_env_name_is_not_str": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_pytest.monkeypatch.pytest",
    "_pytest.monkeypatch.six",
    "_pytest.monkeypatch.warnings",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "_pytest.pathlib.Path",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.context": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.inspect",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.six",
    "delattr",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.inspect",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.six",
    "getattr",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "_pytest.monkeypatch.pytest",
    "_pytest.monkeypatch.warnings",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "_pytest.monkeypatch.sys",
    "importlib.invalidate_caches",
    "pkg_resources.fixup_namespace_packages",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.os",
    "_pytest.monkeypatch.sys",
    "delattr",
    "reversed",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.RE_IMPORT_ERROR_NAME": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.monkeypatch.annotated_getattr",
    "_pytest.monkeypatch.resolve",
    "_pytest.monkeypatch.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.fixup_namespace_packages": {
  "data": {
   "shadows": "pkg_resources.fixup_namespace_packages"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.invalidate_caches": {
  "data": {
   "shadows": "importlib.invalidate_caches"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_pytest.fixtures.fixture",
    "_pytest.monkeypatch.MonkeyPatch"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.notset": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.resolve": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__import__",
    "_pytest.monkeypatch.annotated_getattr",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.nodes": {
  "data": {
   "symbols_in_volume": [
    "_pytest.nodes.py"
   ]
  },
  "type": "module"
 },
 "_pytest.nodes.Collector": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "_pytest.nodes.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Collector.CollectError": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Collector._prunetraceback": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "_pytest.nodes.tracebackcutdir",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Collector.collect": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Collector.repr_failure": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.FSCollector": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "_pytest.nodes.Collector"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.FSCollector.__init__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "_pytest.nodes.FSCollector",
    "_pytest.nodes.SEP",
    "_pytest.nodes._check_initialpaths_for_relpath",
    "_pytest.nodes.os",
    "_pytest.nodes.py",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.File": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "_pytest.nodes.FSCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Item": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "_pytest.nodes.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Item.__init__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "_pytest.nodes.Item",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Item.add_report_section": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "_pytest.nodes.Item.location": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Item.reportinfo": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "_pytest.nodes.MARK_GEN": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "_pytest.nodes.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.MarkDecorator"
  },
  "type": "import"
 },
 "_pytest.nodes.Node": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.nodes.Node.__hash__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_pytest.mark.structures.NodeKeywords",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.__repr__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node._prunetraceback": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "_pytest.nodes.Node._repr_failure_py": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "OSError",
    "_pytest.nodes.os",
    "_pytest.nodes.six",
    "_pytest.outcomes.fail.Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.add_marker": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.mark.MARK_GEN",
    "_pytest.mark.MarkDecorator",
    "_pytest.nodes.six",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.addfinalizer": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "_pytest.nodes.Node.get_closest_marker": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.getparent": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.ihook": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers_with_node": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "getattr",
    "reversed"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listchain": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listextrakeywords": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.listnames": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "_pytest.nodes.Node.nodeid": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.Node.setup": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "_pytest.nodes.Node.teardown": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "_pytest.nodes.Node.warn": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.nodes.get_fslocation_from_item",
    "_pytest.nodes.warnings",
    "_pytest.warning_types.PytestWarning",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.NodeKeywords": {
  "data": {
   "shadows": "_pytest.mark.structures.NodeKeywords"
  },
  "type": "import"
 },
 "_pytest.nodes.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "_pytest.nodes.SEP": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "_pytest.nodes._check_initialpaths_for_relpath": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "_pytest.nodes._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.nodes._splitnode": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_pytest.nodes.SEP"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.nodes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.nodes.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.nodes.get_fslocation_from_item": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "_pytest.compat.getfslineno",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.getfslineno": {
  "data": {
   "shadows": "_pytest.compat.getfslineno"
  },
  "type": "import"
 },
 "_pytest.nodes.ischildnode": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_pytest.nodes._splitnode",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.nodes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.nodes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.nodes.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.nodes.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.nodes.tracebackcutdir": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.nodes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.outcomes": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "_pytest.outcomes.Exit",
    "_pytest.outcomes.Failed",
    "_pytest.outcomes.OutcomeException",
    "_pytest.outcomes.Skipped",
    "_pytest.outcomes.XFailed",
    "_pytest.outcomes.exit",
    "_pytest.outcomes.fail",
    "_pytest.outcomes.skip",
    "_pytest.outcomes.xfail"
   ]
  },
  "type": "module"
 },
 "_pytest.outcomes.Exit": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.Exit.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_pytest.outcomes.Exit",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.Failed": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "BaseException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "BaseException.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.OutcomeException.__repr__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.Skipped": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.Skipped.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "_pytest.outcomes.OutcomeException"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.TEST_OUTCOME": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "_pytest.outcomes.XFailed": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "_pytest.outcomes.fail"
   ]
  },
  "type": "class"
 },
 "_pytest.outcomes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.outcomes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.outcomes.exit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_pytest.outcomes.Exit"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.fail": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "_pytest.outcomes.Failed"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.importorskip": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "_pytest.outcomes.Skipped",
    "_pytest.outcomes.sys",
    "_pytest.outcomes.warnings",
    "compile",
    "getattr",
    "pkg_resources.parse_version"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.outcomes.pv": {
  "data": {
   "shadows": "pkg_resources.parse_version"
  },
  "type": "import"
 },
 "_pytest.outcomes.skip": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.outcomes.Skipped",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.outcomes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.outcomes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.outcomes.xfail": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_pytest.outcomes.XFailed"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin": {
  "data": {},
  "type": "module"
 },
 "_pytest.pastebin._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.pastebin.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.pastebin.create_new_paste": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_pytest.pastebin.re",
    "_pytest.pastebin.sys",
    "urllib.parse.urlencode",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.pastebin.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest_addoption": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest.pastebin.pytest",
    "_pytest.pastebin.tempfile"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_pytest.pastebin.six",
    "isinstance",
    "oldwrite"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.pastebin.create_new_paste",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_pytest.pastebin.create_new_paste",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.pastebin.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.pastebin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pastebin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "_pytest.pathlib": {
  "data": {
   "symbols_in_volume": [
    "_pytest.pathlib.operator",
    "_pytest.pathlib.six",
    "max"
   ]
  },
  "type": "module"
 },
 "_pytest.pathlib.LOCK_TIMEOUT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.pathlib.Path": {
  "data": {
   "shadows": "pathlib2.Path"
  },
  "type": "import"
 },
 "_pytest.pathlib.PurePath": {
  "data": {
   "shadows": "pathlib2.PurePath"
  },
  "type": "import"
 },
 "_pytest.pathlib.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.pathlib._force_symlink": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "OSError"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib._max": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "_pytest.pathlib.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "_pytest.pathlib.cleanup_candidates": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "_pytest.pathlib._max",
    "_pytest.pathlib.extract_suffixes",
    "_pytest.pathlib.find_prefixed",
    "_pytest.pathlib.find_suffixes",
    "_pytest.pathlib.itertools",
    "_pytest.pathlib.parse_num",
    "six.moves.map",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.cleanup_numbered_dir": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "_pytest.pathlib.cleanup_candidates",
    "_pytest.pathlib.try_cleanup"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.create_cleanup_lock": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "EnvironmentError",
    "OSError",
    "_pytest.pathlib.errno",
    "_pytest.pathlib.get_lock_path",
    "_pytest.pathlib.os",
    "_pytest.pathlib.six",
    "bytes",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.ensure_deletable": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Exception",
    "_pytest.pathlib.get_lock_path"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.ensure_reset_dir": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_pytest.pathlib.rmtree"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "_pytest.pathlib.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "_pytest.pathlib.expandvars": {
  "data": {
   "shadows": "os.path.expandvars"
  },
  "type": "import"
 },
 "_pytest.pathlib.extract_suffixes": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "iter",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.find_prefixed": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "_pytest.pathlib.find_suffixes": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_pytest.pathlib.extract_suffixes",
    "_pytest.pathlib.find_prefixed"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "_pytest.pathlib.fnmatch_ex": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "_pytest.pathlib.fnmatch",
    "_pytest.pathlib.six",
    "_pytest.pathlib.sys",
    "pathlib2.PurePath",
    "posixpath.sep"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.get_lock_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "_pytest.pathlib.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "_pytest.pathlib.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.pathlib.make_numbered_dir": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "EnvironmentError",
    "Exception",
    "_pytest.pathlib._force_symlink",
    "_pytest.pathlib._max",
    "_pytest.pathlib.find_suffixes",
    "_pytest.pathlib.parse_num",
    "range",
    "six.moves.map"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.make_numbered_dir_with_cleanup": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "_pytest.pathlib.cleanup_numbered_dir",
    "_pytest.pathlib.create_cleanup_lock",
    "_pytest.pathlib.make_numbered_dir",
    "_pytest.pathlib.register_cleanup_lock_removal",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.map": {
  "data": {
   "shadows": "six.moves.map"
  },
  "type": "import"
 },
 "_pytest.pathlib.maybe_delete_a_numbered_dir": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "EnvironmentError",
    "IOError",
    "OSError",
    "_pytest.pathlib.create_cleanup_lock",
    "_pytest.pathlib.rmtree",
    "_pytest.pathlib.uuid"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "_pytest.pathlib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.pathlib.parse_num": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.parts": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "len",
    "posixpath.sep",
    "posixpath.sep.join",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.posix_sep": {
  "data": {
   "shadows": "posixpath.sep"
  },
  "type": "import"
 },
 "_pytest.pathlib.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "_pytest.pathlib.register_cleanup_lock_removal": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_pytest.pathlib.atexit",
    "_pytest.pathlib.os",
    "register"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.register_cleanup_lock_removal.cleanup_on_exit": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "_pytest.pathlib.os"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.resolve_from_str": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "input",
    "isinstance",
    "os.path.expanduser",
    "os.path.expandvars",
    "os.path.isabs",
    "pathlib2.Path"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.rmtree": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_pytest.pathlib.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "_pytest.pathlib.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "_pytest.pathlib.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.pathlib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pathlib.try_cleanup": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_pytest.pathlib.ensure_deletable",
    "_pytest.pathlib.maybe_delete_a_numbered_dir"
   ]
  },
  "type": "function"
 },
 "_pytest.pathlib.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "_pytest.recwarn": {
  "data": {},
  "type": "module"
 },
 "_pytest.recwarn.PYTEST_WARNS_UNKNOWN_KWARGS": {
  "data": {
   "shadows": "_pytest.deprecated.PYTEST_WARNS_UNKNOWN_KWARGS"
  },
  "type": "import"
 },
 "_pytest.recwarn.WARNS_EXEC": {
  "data": {
   "shadows": "_pytest.deprecated.WARNS_EXEC"
  },
  "type": "import"
 },
 "_pytest.recwarn.WarningsChecker": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "_pytest.recwarn.WarningsRecorder"
   ]
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsChecker.__exit__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "_pytest.outcomes.fail",
    "_pytest.recwarn.WarningsChecker",
    "_pytest.recwarn.re",
    "all",
    "any",
    "issubclass",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsChecker.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.recwarn.WarningsChecker",
    "_pytest.recwarn.inspect",
    "isinstance",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_pytest.recwarn.warnings"
   ]
  },
  "type": "class"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.recwarn.WarningsRecorder",
    "_pytest.recwarn.six",
    "_pytest.recwarn.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__.warn": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "UserWarning",
    "Warning",
    "_pytest.recwarn.sys",
    "isinstance",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__exit__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.recwarn.WarningsRecorder",
    "_pytest.recwarn.six",
    "_pytest.recwarn.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__getitem__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_pytest.recwarn.WarningsRecorder",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__iter__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__len__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.clear": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.list": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.pop": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "AssertionError",
    "Warning",
    "enumerate",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.recwarn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.recwarn.deprecated_call": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "_pytest.recwarn.warns"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.recwarn.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.recwarn.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.recwarn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.recwarn.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.recwarn.recwarn": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_pytest.fixtures.yield_fixture",
    "_pytest.recwarn.WarningsRecorder",
    "_pytest.recwarn.warnings"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.recwarn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.recwarn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.recwarn.warns": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_pytest.deprecated.PYTEST_WARNS_UNKNOWN_KWARGS.format",
    "_pytest.deprecated.WARNS_EXEC",
    "_pytest.recwarn.WarningsChecker",
    "_pytest.recwarn.six",
    "_pytest.recwarn.sys",
    "_pytest.recwarn.warnings",
    "func",
    "isinstance",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.recwarn.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 },
 "_pytest.reports": {
  "data": {},
  "type": "module"
 },
 "_pytest.reports.BaseReport": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.BaseReport.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._from_json": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "_pytest._code.code.ReprEntry",
    "_pytest._code.code.ReprEntryNative",
    "_pytest._code.code.ReprExceptionInfo",
    "_pytest._code.code.ReprFileLocation",
    "_pytest._code.code.ReprFuncArgs",
    "_pytest._code.code.ReprLocals",
    "_pytest._code.code.ReprTraceback",
    "_pytest.reports._report_unserialization_failure",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._to_json": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_pytest.pathlib.Path",
    "_pytest.reports.py",
    "_pytest.reports.six",
    "disassembled_report",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport._to_json.disassembled_report": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.caplog": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstderr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstdout": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.count_towards_summary": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.fspath": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.get_sections": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.head_line": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.longreprtext": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_pytest.reports.py",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.BaseReport.toterminal": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "_pytest.reports.getslaveinfoline",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.CollectErrorRepr.__init__": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr.toterminal": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "_pytest.reports.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.CollectReport.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport.__repr__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.CollectReport.location": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.reports.Path": {
  "data": {
   "shadows": "_pytest.pathlib.Path"
  },
  "type": "import"
 },
 "_pytest.reports.ReprEntry": {
  "data": {
   "shadows": "_pytest._code.code.ReprEntry"
  },
  "type": "import"
 },
 "_pytest.reports.ReprEntryNative": {
  "data": {
   "shadows": "_pytest._code.code.ReprEntryNative"
  },
  "type": "import"
 },
 "_pytest.reports.ReprExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ReprExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.reports.ReprFileLocation": {
  "data": {
   "shadows": "_pytest._code.code.ReprFileLocation"
  },
  "type": "import"
 },
 "_pytest.reports.ReprFuncArgs": {
  "data": {
   "shadows": "_pytest._code.code.ReprFuncArgs"
  },
  "type": "import"
 },
 "_pytest.reports.ReprLocals": {
  "data": {
   "shadows": "_pytest._code.code.ReprLocals"
  },
  "type": "import"
 },
 "_pytest.reports.ReprTraceback": {
  "data": {
   "shadows": "_pytest._code.code.ReprTraceback"
  },
  "type": "import"
 },
 "_pytest.reports.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.reports.TestReport": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "_pytest.reports.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.reports.TestReport.__init__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.TestReport.__repr__": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "_pytest.reports.TestReport.from_item_and_call": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionInfo",
    "_pytest.outcomes.skip.Exception",
    "classmethod",
    "cls",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.reports._report_unserialization_failure": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "RuntimeError",
    "_pytest.reports.py",
    "pprint.pprint"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.getslaveinfoline": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "_pytest.reports.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.reports.pytest_report_from_serializable": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "_pytest.reports.CollectReport",
    "_pytest.reports.TestReport"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.pytest_report_to_serializable": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "_pytest.reports.CollectReport",
    "_pytest.reports.TestReport",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.reports.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.reports.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.resultlog": {
  "data": {},
  "type": "module"
 },
 "_pytest.resultlog.RESULT_LOG": {
  "data": {
   "shadows": "_pytest.deprecated.RESULT_LOG"
  },
  "type": "import"
 },
 "_pytest.resultlog.ResultLog": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "_pytest.resultlog.py",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog._issue_warning_captured": {
  "data": {
   "shadows": "_pytest.warnings._issue_warning_captured"
  },
  "type": "import"
 },
 "_pytest.resultlog.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.resultlog.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.resultlog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.resultlog.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.resultlog.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.resultlog.pytest_addoption": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_pytest.deprecated.RESULT_LOG",
    "_pytest.resultlog.ResultLog",
    "_pytest.resultlog.os",
    "_pytest.warnings._issue_warning_captured",
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.setupplan": {
  "data": {},
  "type": "module"
 },
 "_pytest.setupplan.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.setupplan.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.setupplan.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest_addoption": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.stepwise": {
  "data": {},
  "type": "module"
 },
 "_pytest.stepwise.StepwisePlugin": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "_pytest.stepwise.StepwisePlugin.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_collectreport": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_report_collectionfinish": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "_pytest.stepwise.StepwisePlugin.pytest_sessionstart": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "_pytest.stepwise.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.stepwise.pytest_addoption": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "_pytest.stepwise.pytest_configure": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_pytest.stepwise.StepwisePlugin",
    "_pytest.stepwise.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal": {
  "data": {},
  "type": "module"
 },
 "_pytest.terminal.EXIT_INTERRUPTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_INTERRUPTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_NOTESTSCOLLECTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_OK": {
  "data": {
   "shadows": "_pytest.main.EXIT_OK"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_TESTSFAILED": {
  "data": {
   "shadows": "_pytest.main.EXIT_TESTSFAILED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_USAGEERROR": {
  "data": {
   "shadows": "_pytest.main.EXIT_USAGEERROR"
  },
  "type": "import"
 },
 "_pytest.terminal.MoreQuietAction": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_pytest.terminal.argparse"
   ]
  },
  "type": "class"
 },
 "_pytest.terminal.MoreQuietAction.__call__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.MoreQuietAction.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "_pytest.terminal.MoreQuietAction",
    "help",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.REPORT_COLLECTING_RESOLUTION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.terminal.TerminalReporter": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.terminal.TerminalReporter.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_pytest.terminal.getreportopt",
    "_pytest.terminal.py",
    "_pytest.terminal.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._determine_show_progress_info": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._get_progress_information_message": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getcrashline": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "AttributeError",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getfailureheadline": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "_pytest.nodes.SEP",
    "mkrel"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline.mkrel": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._outrep_summary": {
  "data": {
   "lineno": 851
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._printcollecteditems": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._report_keyboardinterrupt": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._width_of_current_line": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_progress_information_filling_space": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_report_lines_from_hooks": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "more_itertools.collapse"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.ensure_newline": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.getreports": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.hasopt": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.line": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.print_teardown_sections": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "_pytest.terminal.time"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_finish": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_modifyitems": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collectreport": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "_pytest.terminal.pytest",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_deselected": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_internalerror": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "_pytest.terminal.six"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 684
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_plugin_registered": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_report_header": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "_pytest.terminal._plugin_nameversions"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logfinish": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logreport": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logstart": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionfinish": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main.EXIT_TESTSFAILED",
    "_pytest.main.EXIT_USAGEERROR",
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionstart": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "_pytest.terminal.platform",
    "_pytest.terminal.pluggy",
    "_pytest.terminal.py",
    "_pytest.terminal.pytest",
    "_pytest.terminal.sys",
    "_pytest.terminal.time",
    "getattr",
    "hasattr",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_terminal_summary": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_unconfigure": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_warning_captured": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "_pytest.terminal.WarningReport",
    "_pytest.warnings.warning_record_to_str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.report_collect": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "_pytest.terminal.REPORT_COLLECTING_RESOLUTION",
    "_pytest.terminal.time",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.rewrite": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.section": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showfspath": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showheader": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.showlongtestinfo": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_errors": {
  "data": {
   "lineno": 834
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_failures": {
  "data": {
   "lineno": 816
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_passes": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_stats": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "_pytest.terminal.build_summary_stats_line",
    "_pytest.terminal.time"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "_pytest.terminal.collections",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.verbosity": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_ensure_prefix": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_fspath_result": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_line": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "_pytest.terminal.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_sep": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "_pytest.terminal.WarningReport": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "_pytest.terminal.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.terminal.WarningReport.get_location": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "_pytest.terminal.py",
    "isinstance",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal._plugin_nameversions": {
  "data": {
   "lineno": 912
  },
  "type": "function"
 },
 "_pytest.terminal._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.terminal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.terminal.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "_pytest.terminal.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.terminal.build_summary_stats_line": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "getattr",
    "sum"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.collapse": {
  "data": {
   "shadows": "more_itertools.collapse"
  },
  "type": "import"
 },
 "_pytest.terminal.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "_pytest.terminal.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.terminal.getreportopt": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "_pytest.terminal.nodes": {
  "data": {
   "shadows": "_pytest.nodes"
  },
  "type": "import"
 },
 "_pytest.terminal.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.terminal.pluggy": {
  "data": {
   "shadows": "pluggy"
  },
  "type": "import"
 },
 "_pytest.terminal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.terminal.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest_addoption": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "_pytest.terminal.MoreQuietAction",
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_pytest.terminal.TerminalReporter",
    "_pytest.terminal.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure.mywriter": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_report_teststatus": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "_pytest.terminal.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.terminal.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.terminal.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.terminal.warning_record_to_str": {
  "data": {
   "shadows": "_pytest.warnings.warning_record_to_str"
  },
  "type": "import"
 },
 "_pytest.tmpdir": {
  "data": {},
  "type": "module"
 },
 "_pytest.tmpdir.MonkeyPatch": {
  "data": {
   "shadows": "_pytest.monkeypatch.MonkeyPatch"
  },
  "type": "import"
 },
 "_pytest.tmpdir.TempPathFactory": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Path",
    "_pytest.tmpdir.attr",
    "_pytest.tmpdir.os",
    "_pytest.tmpdir.six",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempPathFactory.from_config": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.getbasetemp": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Path",
    "_pytest.tmpdir.get_user",
    "_pytest.tmpdir.os",
    "_pytest.tmpdir.tempfile",
    "ensure_reset_dir",
    "make_numbered_dir_with_cleanup"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempPathFactory.mktemp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "make_numbered_dir"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_pytest.tmpdir.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.ensuretemp": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_pytest.tmpdir.warnings",
    "dir"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "_pytest.tmpdir.py"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_pytest.tmpdir.py"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir._mk_tmp": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_pytest.tmpdir.re"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.tmpdir.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.tmpdir.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.tmpdir.get_user": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "_pytest.tmpdir.getpass"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "_pytest.tmpdir.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.tmpdir.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.tmpdir.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest_configure": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "_pytest.tmpdir.TempPathFactory",
    "_pytest.tmpdir.TempdirFactory",
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.tmpdir.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tmp_path": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.tmpdir._mk_tmp",
    "_pytest.tmpdir.pytest",
    "_pytest.tmpdir.tmp_path_factory"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmp_path_factory": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_pytest.tmpdir.py",
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.unittest": {
  "data": {},
  "type": "module"
 },
 "_pytest.unittest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "_pytest.unittest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "_pytest.unittest.IReporter": {
  "data": {
   "shadows": "twisted.trial.itrial.IReporter"
  },
  "type": "import"
 },
 "_pytest.unittest.TestCaseFunction": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_pytest.python.Function"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "TypeError",
    "_pytest.outcomes.fail",
    "_pytest.outcomes.fail.Exception",
    "_pytest.unittest.traceback",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._fix_unittest_skip_decorator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "_pytest.unittest.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._handle_skip": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.unittest.sys",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "_pytest.python.Function._prunetraceback",
    "_pytest.unittest.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_pytest.outcomes.xfail",
    "_pytest.outcomes.xfail.Exception",
    "_pytest.unittest.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_pytest.outcomes.skip",
    "_pytest.outcomes.skip.Exception",
    "_pytest.unittest.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "_pytest.unittest.TestLoader": {
  "data": {
   "shadows": "unittest.TestLoader"
  },
  "type": "import"
 },
 "_pytest.unittest.UnitTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_pytest.python.Class"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase._inject_setup_teardown_fixtures": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_pytest.unittest._make_xunit_fixture"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "_pytest.compat.getimfunc",
    "_pytest.unittest.TestCaseFunction",
    "_pytest.unittest.sys",
    "getattr",
    "unittest.TestLoader"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._make_xunit_fixture.fixture": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_pytest.unittest.pytest",
    "getattr",
    "setup",
    "teardown"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.unittest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "_pytest.unittest.TestCaseFunction",
    "twisted.trial.itrial.IReporter",
    "zope.interface.classImplements"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.classImplements": {
  "data": {
   "shadows": "zope.interface.classImplements"
  },
  "type": "import"
 },
 "_pytest.unittest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.unittest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "_pytest.unittest.getimfunc": {
  "data": {
   "shadows": "_pytest.compat.getimfunc"
  },
  "type": "import"
 },
 "_pytest.unittest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "_pytest.unittest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "_pytest.unittest.UnitTestCase",
    "_pytest.unittest.sys",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.config.hookimpl",
    "_pytest.unittest.TestCaseFunction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Failure__init__",
    "_pytest.config.hookimpl",
    "_pytest.unittest.TestCaseFunction",
    "_pytest.unittest.check_testcase_implements_trial_reporter",
    "_pytest.unittest.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "Failure__init__",
    "TypeError",
    "_pytest.unittest.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "_pytest.unittest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.unittest.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.unittest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "_pytest.warning_types": {
  "data": {
   "symbols_in_volume": [
    "_pytest.warning_types.PytestExperimentalApiWarning"
   ]
  },
  "type": "module"
 },
 "_pytest.warning_types.PYTESTER_COPY_EXAMPLE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "_pytest.warning_types.PytestDeprecationWarning": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "FutureWarning",
    "_pytest.warning_types.PytestWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning.simple": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "_pytest.warning_types.PytestWarning": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.RemovedInPytest4Warning": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_pytest.warning_types.PytestDeprecationWarning"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_pytest.warning_types.attr",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.warning_types.UnformattedWarning.format": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "_pytest.warning_types.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "_pytest.warnings": {
  "data": {},
  "type": "module"
 },
 "_pytest.warnings.SHOW_PYTEST_WARNINGS_ARG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "_pytest.warnings._issue_warning_captured": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_pytest.warnings.warnings",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings._setoption": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.warnings.catch_warnings_for_item": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "_pytest.warnings._setoption",
    "_pytest.warnings.pytest",
    "_pytest.warnings.sys",
    "_pytest.warnings.warnings",
    "contextlib.contextmanager",
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.compat": {
  "data": {
   "shadows": "_pytest.compat"
  },
  "type": "import"
 },
 "_pytest.warnings.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "_pytest.warnings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "_pytest.warnings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.warnings.pytest_addoption": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_collection": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "_pytest.warnings.catch_warnings_for_item",
    "_pytest.warnings.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_configure": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_runtest_protocol": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "_pytest.warnings.catch_warnings_for_item",
    "_pytest.warnings.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.pytest_terminal_summary": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_pytest.warnings.catch_warnings_for_item",
    "_pytest.warnings.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.warnings.warning_record_to_str": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "UnicodeWarning",
    "_pytest.compat.UNICODE_TYPES",
    "_pytest.compat._PY2",
    "_pytest.compat.ascii_escaped",
    "_pytest.compat.safe_str",
    "_pytest.warnings.warnings",
    "any",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.warnings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pytest": {
  "data": {
   "symbols_in_volume": [
    "SystemExit",
    "__name__",
    "_pytest.compat._setup_collect_fakemodule",
    "_pytest.debugging.pytestPDB.set_trace",
    "pytest.pytest"
   ]
  },
  "type": "module"
 },
 "pytest.Class": {
  "data": {
   "shadows": "_pytest.python.Class"
  },
  "type": "import"
 },
 "pytest.Collector": {
  "data": {
   "shadows": "_pytest.nodes.Collector"
  },
  "type": "import"
 },
 "pytest.File": {
  "data": {
   "shadows": "_pytest.nodes.File"
  },
  "type": "import"
 },
 "pytest.Function": {
  "data": {
   "shadows": "_pytest.python.Function"
  },
  "type": "import"
 },
 "pytest.Instance": {
  "data": {
   "shadows": "_pytest.python.Instance"
  },
  "type": "import"
 },
 "pytest.Item": {
  "data": {
   "shadows": "_pytest.nodes.Item"
  },
  "type": "import"
 },
 "pytest.Module": {
  "data": {
   "shadows": "_pytest.python.Module"
  },
  "type": "import"
 },
 "pytest.Package": {
  "data": {
   "shadows": "_pytest.python.Package"
  },
  "type": "import"
 },
 "pytest.PytestDeprecationWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestDeprecationWarning"
  },
  "type": "import"
 },
 "pytest.PytestExperimentalApiWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestExperimentalApiWarning"
  },
  "type": "import"
 },
 "pytest.PytestWarning": {
  "data": {
   "shadows": "_pytest.warning_types.PytestWarning"
  },
  "type": "import"
 },
 "pytest.RemovedInPytest4Warning": {
  "data": {
   "shadows": "_pytest.warning_types.RemovedInPytest4Warning"
  },
  "type": "import"
 },
 "pytest.Session": {
  "data": {
   "shadows": "_pytest.main.Session"
  },
  "type": "import"
 },
 "pytest.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "pytest.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pytest.__pytestPDB": {
  "data": {
   "shadows": "_pytest.debugging.pytestPDB"
  },
  "type": "import"
 },
 "pytest.__version__": {
  "data": {
   "shadows": "_pytest.__version__"
  },
  "type": "import"
 },
 "pytest._fillfuncargs": {
  "data": {
   "shadows": "_pytest.fixtures.fillfixtures"
  },
  "type": "import"
 },
 "pytest._setup_collect_fakemodule": {
  "data": {
   "shadows": "_pytest.compat._setup_collect_fakemodule"
  },
  "type": "import"
 },
 "pytest.approx": {
  "data": {
   "shadows": "_pytest.python_api.approx"
  },
  "type": "import"
 },
 "pytest.cmdline": {
  "data": {
   "shadows": "_pytest.config.cmdline"
  },
  "type": "import"
 },
 "pytest.deprecated_call": {
  "data": {
   "shadows": "_pytest.recwarn.deprecated_call"
  },
  "type": "import"
 },
 "pytest.exit": {
  "data": {
   "shadows": "_pytest.outcomes.exit"
  },
  "type": "import"
 },
 "pytest.fail": {
  "data": {
   "shadows": "_pytest.outcomes.fail"
  },
  "type": "import"
 },
 "pytest.fixture": {
  "data": {
   "shadows": "_pytest.fixtures.fixture"
  },
  "type": "import"
 },
 "pytest.freeze_includes": {
  "data": {
   "shadows": "_pytest.freeze_support.freeze_includes"
  },
  "type": "import"
 },
 "pytest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "pytest.hookspec": {
  "data": {
   "shadows": "_pytest.config.hookspec"
  },
  "type": "import"
 },
 "pytest.importorskip": {
  "data": {
   "shadows": "_pytest.outcomes.importorskip"
  },
  "type": "import"
 },
 "pytest.main": {
  "data": {
   "shadows": "_pytest.config.main"
  },
  "type": "import"
 },
 "pytest.mark": {
  "data": {
   "shadows": "_pytest.mark.MARK_GEN"
  },
  "type": "import"
 },
 "pytest.param": {
  "data": {
   "shadows": "_pytest.mark.param"
  },
  "type": "import"
 },
 "pytest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest.raises": {
  "data": {
   "shadows": "_pytest.python_api.raises"
  },
  "type": "import"
 },
 "pytest.register_assert_rewrite": {
  "data": {
   "shadows": "_pytest.assertion.register_assert_rewrite"
  },
  "type": "import"
 },
 "pytest.set_trace": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pytest.skip": {
  "data": {
   "shadows": "_pytest.outcomes.skip"
  },
  "type": "import"
 },
 "pytest.warns": {
  "data": {
   "shadows": "_pytest.recwarn.warns"
  },
  "type": "import"
 },
 "pytest.xfail": {
  "data": {
   "shadows": "_pytest.outcomes.xfail"
  },
  "type": "import"
 },
 "pytest.yield_fixture": {
  "data": {
   "shadows": "_pytest.fixtures.yield_fixture"
  },
  "type": "import"
 }
}