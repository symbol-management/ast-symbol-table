{
 "_pytest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._argcomplete": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "sys.exit"
  ],
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "lineno": 69,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.dirname",
   "os.path.isdir",
   "os.path.sep"
  ],
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._code._py2traceback": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._code._py2traceback._format_final_exc_line": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code._py2traceback._some_str": {
  "lineno": 81,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest._code._py2traceback.format_exception_only": {
  "lineno": 10,
  "symbols_in_volume": [
   "types.InstanceType"
  ],
  "type": "function"
 },
 "_pytest._code.code": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.PY35",
   "_pytest.compat._PY3"
  ],
  "type": "module"
 },
 "_pytest._code.code.Code": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Code.__eq__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Code.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Code.__ne__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Code.fullsource": {
  "lineno": 62,
  "symbols_in_volume": [
   "_pytest._code.source.findsource"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.getargs": {
  "lineno": 79,
  "symbols_in_volume": [
   "inspect.CO_VARARGS",
   "inspect.CO_VARKEYWORDS"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.path": {
  "lineno": 46,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest._code.code.Code.source": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ExceptionChainRepr.__init__": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionChainRepr.toterminal": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo": {
  "lineno": 384,
  "symbols_in_volume": [
   "_pytest.compat._PY2"
  ],
  "type": "class"
 },
 "_pytest._code.code.ExceptionInfo.__init__": {
  "lineno": 394,
  "symbols_in_volume": [
   "py.io.saferepr",
   "sys.exc_info",
   "weakref.ref"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__repr__": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__str__": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.__unicode__": {
  "lineno": 487,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo._getreprcrash": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.errisinstance": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.exconly": {
  "lineno": 420,
  "symbols_in_volume": [
   "traceback.format_exception_only"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.getrepr": {
  "lineno": 446,
  "symbols_in_volume": [
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionInfo.match": {
  "lineno": 492,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ExceptionRepr.__init__": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.addsection": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ExceptionRepr.toterminal": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo": {
  "lineno": 505,
  "symbols_in_volume": [
   "attr.Factory",
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest._code.code.FormattedExcinfo._getentrysource": {
  "lineno": 536,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.deindent"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._getindent": {
  "lineno": 521,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.getstatement"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._makepath": {
  "lineno": 648,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._saferepr": {
  "lineno": 542,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo._truncate_recursive_traceback": {
  "lineno": 676,
  "symbols_in_volume": [
   "_pytest.compat.safe_str",
   "traceback",
   "traceback.recursionindex"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_exconly": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.get_source": {
  "lineno": 552,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.lines",
   "_pytest._code.source.lines.strip"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_args": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_excinfo": {
  "lineno": 713,
  "symbols_in_volume": [
   "_pytest.compat._PY2",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_locals": {
  "lineno": 588,
  "symbols_in_volume": [
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback": {
  "lineno": 658,
  "symbols_in_volume": [
   "traceback",
   "traceback.filter"
  ],
  "type": "function"
 },
 "_pytest._code.code.FormattedExcinfo.repr_traceback_entry": {
  "lineno": 614,
  "symbols_in_volume": [
   "_pytest._code.source"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Frame.__init__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.eval": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.exec_": {
  "lineno": 125,
  "symbols_in_volume": [
   "six.exec_"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame.getargs": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.is_true": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Frame.repr": {
  "lineno": 134,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest._code.code.Frame.statement": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry": {
  "lineno": 865,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprEntry.__init__": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.__str__": {
  "lineno": 897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntry.toterminal": {
  "lineno": 875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprEntryNative.__init__": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprEntryNative.toterminal": {
  "lineno": 861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprExceptionInfo.__init__": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprExceptionInfo.toterminal": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprFileLocation.__init__": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFileLocation.toterminal": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs": {
  "lineno": 927,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprFuncArgs.__init__": {
  "lineno": 928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprFuncArgs.toterminal": {
  "lineno": 931,
  "symbols_in_volume": [
   "_pytest.compat.safe_str"
  ],
  "type": "function"
 },
 "_pytest._code.code.ReprLocals": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprLocals.__init__": {
  "lineno": 919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprLocals.toterminal": {
  "lineno": 922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprTraceback.__init__": {
  "lineno": 824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprTraceback.toterminal": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.ReprTracebackNative": {
  "lineno": 848,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.ReprTracebackNative.__init__": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.TerminalRepr.__repr__": {
  "lineno": 775,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__str__": {
  "lineno": 761,
  "symbols_in_volume": [
   "_pytest.compat._PY2"
  ],
  "type": "function"
 },
 "_pytest._code.code.TerminalRepr.__unicode__": {
  "lineno": 767,
  "symbols_in_volume": [
   "py.io.TerminalWriter",
   "py.io.TextIO"
  ],
  "type": "function"
 },
 "_pytest._code.code.Traceback": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.code.Traceback.__getitem__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.__init__.f": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.cut": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.filter": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.getcrashentry": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.Traceback.recursionindex": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry": {
  "lineno": 157,
  "symbols_in_volume": [
   "_pytest._code.source"
  ],
  "type": "class"
 },
 "_pytest._code.code.TracebackEntry.__init__": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__repr__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.__str__": {
  "lineno": 255,
  "symbols_in_volume": [
   "py.error.Error"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.frame": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getfirstlinesource": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getlocals": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.getsource": {
  "lineno": 205,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.getstatementrange_ast"
  ],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.ishidden": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.name": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.path": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.relline": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.set_repr_style": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.code.TracebackEntry.statement": {
  "lineno": 185,
  "symbols_in_volume": [
   "_pytest._code.source",
   "_pytest._code.source.getstatement"
  ],
  "type": "function"
 },
 "_pytest._code.code.getrawcode": {
  "lineno": 950,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest._code.code.is_recursion_error": {
  "lineno": 975,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest._code.source.Source": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest._code.source.Source.__eq__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__getitem__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.__len__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.__str__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.compile": {
  "lineno": 154,
  "symbols_in_volume": [
   "ast.PyCF_ONLY_AST",
   "linecache.cache",
   "py.path.local",
   "sys._getframe",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.deindent": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.getstatement": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.getstatementrange": {
  "lineno": 109,
  "symbols_in_volume": [
   "ast"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.indent": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.isparseable": {
  "lineno": 131,
  "symbols_in_volume": [
   "parser.suite"
  ],
  "type": "function"
 },
 "_pytest._code.source.Source.putaround": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.Source.strip": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.compile_": {
  "lineno": 199,
  "symbols_in_volume": [
   "ast.AST",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest._code.source.deindent": {
  "lineno": 271,
  "symbols_in_volume": [
   "tokenize.TokenError",
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "_pytest._code.source.deindent.readline_generator": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest._code.source.findsource": {
  "lineno": 247,
  "symbols_in_volume": [
   "inspect.findsource",
   "py.builtin._sysex"
  ],
  "type": "function"
 },
 "_pytest._code.source.get_statement_startend2": {
  "lineno": 314,
  "symbols_in_volume": [
   "ast.ExceptHandler",
   "ast.stmt",
   "ast.walk",
   "bisect.bisect_right"
  ],
  "type": "function"
 },
 "_pytest._code.source.getfslineno": {
  "lineno": 214,
  "symbols_in_volume": [
   "inspect.getfile",
   "inspect.getsourcefile",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest._code.source.getsource": {
  "lineno": 259,
  "symbols_in_volume": [
   "inspect.getsource"
  ],
  "type": "function"
 },
 "_pytest._code.source.getstatementrange_ast": {
  "lineno": 338,
  "symbols_in_volume": [
   "inspect.BlockFinder",
   "inspect.EndOfBlock",
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "_pytest._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.assertion": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.assertion.util.assertrepr_compare"
  ],
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.install_importhook": {
  "lineno": 70,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook",
   "sys.meta_path.insert",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "lineno": 81,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.meta_path.remove"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_addoption": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.pytest_collection": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup": {
  "lineno": 100,
  "symbols_in_volume": [
   "_pytest.assertion.util._reprcompare"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.callbinrepr": {
  "lineno": 109,
  "symbols_in_volume": [
   "_pytest.assertion.truncate.truncate_if_required",
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_teardown": {
  "lineno": 139,
  "symbols_in_volume": [
   "_pytest.assertion.util._reprcompare"
  ],
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "lineno": 30,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook",
   "sys.meta_path"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "lineno": null,
  "symbols_in_volume": [
   "ast",
   "ast.Add",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.BitXor",
   "ast.Call",
   "ast.Div",
   "ast.Eq",
   "ast.FloorDiv",
   "ast.Gt",
   "ast.GtE",
   "ast.In",
   "ast.Invert",
   "ast.Is",
   "ast.IsNot",
   "ast.LShift",
   "ast.Lt",
   "ast.LtE",
   "ast.MatMult",
   "ast.Mod",
   "ast.Mult",
   "ast.NameConstant",
   "ast.Not",
   "ast.NotEq",
   "ast.NotIn",
   "ast.Pow",
   "ast.RShift",
   "ast.Sub",
   "ast.UAdd",
   "ast.USub",
   "imp",
   "imp.get_tag",
   "re.compile",
   "sys",
   "sys.platform",
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "lineno": 594,
  "symbols_in_volume": [
   "ast.NodeVisitor",
   "sys.version_info"
  ],
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "lineno": 728,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Load",
   "ast.Name",
   "ast.Store"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "lineno": 744,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "lineno": 795,
  "symbols_in_volume": [
   "ast.expr"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "lineno": 738,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.is_rewrite_disabled": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "lineno": 776,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.BinOp",
   "ast.Dict",
   "ast.Load",
   "ast.Mod",
   "ast.Name",
   "ast.Store",
   "ast.Str"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "lineno": 651,
  "symbols_in_volume": [
   "ast.AST",
   "ast.Assert",
   "ast.Expr",
   "ast.Import",
   "ast.ImportFrom",
   "ast.Str",
   "ast.alias",
   "ast.expr",
   "ast.iter_fields",
   "py.builtin.builtins.__name__"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "lineno": 801,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "ast.Add",
   "ast.Assign",
   "ast.BinOp",
   "ast.If",
   "ast.Load",
   "ast.Name",
   "ast.Not",
   "ast.Raise",
   "ast.Store",
   "ast.Str",
   "ast.Tuple",
   "ast.UnaryOp",
   "itertools.count",
   "sys.version_info",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "lineno": 988,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "lineno": 910,
  "symbols_in_volume": [
   "ast.BinOp"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "lineno": 869,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Attribute",
   "ast.Expr",
   "ast.If",
   "ast.List",
   "ast.Load",
   "ast.Name",
   "ast.Not",
   "ast.Num",
   "ast.Or",
   "ast.Store",
   "ast.Str",
   "ast.UnaryOp"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_35": {
  "lineno": 918,
  "symbols_in_volume": [
   "ast.Call",
   "ast.keyword"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_legacy": {
  "lineno": 950,
  "symbols_in_volume": [
   "ast.Call",
   "ast.keyword"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "lineno": 998,
  "symbols_in_volume": [
   "ast.And",
   "ast.Assign",
   "ast.BoolOp",
   "ast.Compare",
   "ast.Load",
   "ast.Name",
   "ast.Store",
   "ast.Str",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "lineno": 859,
  "symbols_in_volume": [
   "ast.BoolOp",
   "ast.Compare",
   "ast.IfExp",
   "ast.In",
   "ast.Or",
   "ast.Str"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "lineno": 945,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "lineno": 904,
  "symbols_in_volume": [
   "ast.UnaryOp"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._early_rewrite_bailout": {
  "lineno": 179,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.sep",
   "os.path.sep.join",
   "os.path.splitext",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._imp_find_module": {
  "lineno": 78,
  "symbols_in_volume": [
   "imp.find_module"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._is_marked_for_rewrite": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._register_with_pkg_resources": {
  "lineno": 313,
  "symbols_in_volume": [
   "pkg_resources.DefaultProvider",
   "pkg_resources.__name__",
   "pkg_resources.register_loader_type"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "lineno": 268,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "_pytest.warnings._issue_config_warning"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_module": {
  "lineno": 82,
  "symbols_in_volume": [
   "errno.EACCES",
   "errno.EEXIST",
   "errno.ENOENT",
   "errno.ENOTDIR",
   "errno.EPERM",
   "errno.EROFS",
   "imp",
   "imp.PY_COMPILED",
   "imp.PY_SOURCE",
   "imp.source_from_cache",
   "os.mkdir",
   "os.path.join",
   "py.path.local",
   "sys.dont_write_bytecode",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.is_package": {
  "lineno": 303,
  "symbols_in_volume": [
   "imp.PKG_DIRECTORY"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.load_module": {
  "lineno": 277,
  "symbols_in_volume": [
   "imp.new_module",
   "importlib.util.spec_from_file_location",
   "six.exec_",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "lineno": 251,
  "symbols_in_volume": [
   "sys.modules",
   "sys.modules.__doc__"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite._NameConstant": {
  "lineno": 575,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "lineno": 523,
  "symbols_in_volume": [
   "_pytest.assertion.util._reprcompare"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "lineno": 485,
  "symbols_in_volume": [
   "py.io.saferepr",
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "lineno": 515,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "lineno": 423,
  "symbols_in_volume": [
   "imp.get_magic",
   "marshal.load",
   "struct.unpack",
   "types.CodeType"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "lineno": 367,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "lineno": 464,
  "symbols_in_volume": [
   "py.io.saferepr",
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "lineno": 338,
  "symbols_in_volume": [
   "atomicwrites.atomic_write",
   "imp.get_magic",
   "marshal.dumps",
   "struct.pack"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.ast_Call": {
  "lineno": 44,
  "symbols_in_volume": [
   "ast.Call"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "lineno": 582,
  "symbols_in_volume": [
   "ast.iter_child_nodes"
  ],
  "type": "function"
 },
 "_pytest.assertion.rewrite.spec_from_file_location": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.truncate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.assertion.truncate._running_on_ci": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate._should_truncate_item": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_by_char_count": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.truncate._truncate_explanation": {
  "lineno": 41,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.assertion.truncate.truncate_if_required": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util": {
  "lineno": null,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "module"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "lineno": 291,
  "symbols_in_volume": [
   "pprint.pformat",
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "lineno": 234,
  "symbols_in_volume": [
   "difflib.ndiff",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "lineno": 257,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "lineno": 276,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "lineno": 167,
  "symbols_in_volume": [
   "difflib.ndiff"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._diff_text.escape_for_readable_diff": {
  "lineno": 179,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "lineno": 322,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util._split_explanation": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "lineno": 103,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isdict": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isiterable": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.issequence": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isset": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.istext": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.ecu": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.assertion.util.format_explanation": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.cacheprovider.Cache": {
  "lineno": 33,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.cacheprovider.Cache._ensure_readme": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.cache_dir_from_config": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.for_config": {
  "lineno": 38,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "lineno": 78,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "lineno": 58,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "lineno": 96,
  "symbols_in_volume": [
   "json.dump"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.warn": {
  "lineno": 50,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "_pytest.warnings._issue_config_warning"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_collectionfinish": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.cacheprovider.NFPlugin.__init__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin._get_increasing_order": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_collection_modifyitems": {
  "lineno": 207,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pytest.Item",
   "six.itervalues"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.NFPlugin.pytest_sessionfinish": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.cache": {
  "lineno": 299,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "lineno": 328,
  "symbols_in_volume": [
   "pprint.pformat",
   "py.io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "lineno": 285,
  "symbols_in_volume": [
   "_pytest.main.wrap_session"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "lineno": 292,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "_pytest.capture.CaptureFixture": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.CaptureFixture.__init__": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._resume": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._start": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture._suspend": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.close": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.disabled": {
  "lineno": 369,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureFixture.readouterr": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.CaptureManager.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager._getcapture": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.activate_fixture": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.deactivate_fixture": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.global_and_fixture_disabled": {
  "lineno": 152,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.item_capture": {
  "lineno": 164,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_internalerror": {
  "lineno": 220,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_keyboard_interrupt": {
  "lineno": 216,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_make_collect_report": {
  "lineno": 180,
  "symbols_in_volume": [
   "pytest.File",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_call": {
  "lineno": 206,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_protocol": {
  "lineno": 195,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_setup": {
  "lineno": 201,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.pytest_runtest_teardown": {
  "lineno": 211,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.read_global_capture": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume_fixture": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.resume_global_capture": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.start_global_capturing": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.stop_global_capturing": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend_fixture": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.CaptureManager.suspend_global_capture": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput": {
  "lineno": 636,
  "symbols_in_volume": [
   "six.Iterator"
  ],
  "type": "class"
 },
 "_pytest.capture.DontReadFromInput.__iter__": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.buffer": {
  "lineno": 665,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.close": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.fileno": {
  "lineno": 656,
  "symbols_in_volume": [
   "io.UnsupportedOperation"
  ],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.isatty": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.DontReadFromInput.read": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.EncodedFile.__getattr__": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.__init__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.name": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.write": {
  "lineno": 403,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.capture.EncodedFile.writelines": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCapture": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.FDCapture.snap": {
  "lineno": 578,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.FDCaptureBinary.__init__": {
  "lineno": 503,
  "symbols_in_volume": [
   "os.devnull",
   "os.dup",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.__repr__": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.done": {
  "lineno": 546,
  "symbols_in_volume": [
   "os.close",
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.resume": {
  "lineno": 559,
  "symbols_in_volume": [
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.snap": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.start": {
  "lineno": 530,
  "symbols_in_volume": [
   "os.dup2",
   "os.fstat"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.suspend": {
  "lineno": 555,
  "symbols_in_volume": [
   "os.dup2"
  ],
  "type": "function"
 },
 "_pytest.capture.FDCaptureBinary.writeorg": {
  "lineno": 563,
  "symbols_in_volume": [
   "os.write",
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.capture.MultiCapture": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.MultiCapture.__init__": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.pop_outerr_to_orig": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.readouterr": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.resume_capturing": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.start_capturing": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.stop_capturing": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.MultiCapture.suspend_capturing": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.NoCapture": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCapture": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCapture.__init__": {
  "lineno": 590,
  "symbols_in_volume": [
   "_pytest.compat.CaptureIO",
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.done": {
  "lineno": 610,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.resume": {
  "lineno": 618,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.snap": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCapture.start": {
  "lineno": 601,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.suspend": {
  "lineno": 615,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "function"
 },
 "_pytest.capture.SysCapture.writeorg": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture.SysCaptureBinary": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.capture.SysCaptureBinary.snap": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture._attempt_to_close_capture_file": {
  "lineno": 772,
  "symbols_in_volume": [
   "six.PY2"
  ],
  "type": "function"
 },
 "_pytest.capture._colorama_workaround": {
  "lineno": 673,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.capture._ensure_only_one_capture_fixture": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.capture._install_capture_fixture_on_item": {
  "lineno": 298,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround": {
  "lineno": 718,
  "symbols_in_volume": [
   "io._WindowsConsoleIO",
   "sys.__stderr__",
   "sys.__stdin__",
   "sys.__stdout__",
   "sys.platform.startswith",
   "sys.stderr",
   "sys.stdin",
   "sys.stdout",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.capture._py36_windowsconsoleio_workaround._reopen_stdio": {
  "lineno": 753,
  "symbols_in_volume": [
   "io.TextIOWrapper",
   "os.dup"
  ],
  "type": "function"
 },
 "_pytest.capture._readline_workaround": {
  "lineno": 691,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.capture.capfd": {
  "lineno": 266,
  "symbols_in_volume": [
   "os",
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.capture.capfdbinary": {
  "lineno": 282,
  "symbols_in_volume": [
   "os",
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.capture.capsys": {
  "lineno": 238,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.capture.capsysbinary": {
  "lineno": 250,
  "symbols_in_volume": [
   "pytest.fixture",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_addoption": {
  "lineno": 22,
  "symbols_in_volume": [
   "os"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests": {
  "lineno": 41,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "sys.stderr.write",
   "sys.stdout",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.capture.pytest_load_initial_conftests.silence_logging_at_shutdown": {
  "lineno": 56,
  "symbols_in_volume": [
   "sys.modules",
   "sys.modules.raiseExceptions"
  ],
  "type": "function"
 },
 "_pytest.capture.safe_text_dupfile": {
  "lineno": 377,
  "symbols_in_volume": [
   "os.dup",
   "os.fdopen"
  ],
  "type": "function"
 },
 "_pytest.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "enum",
   "inspect.isclass",
   "inspect.isfunction",
   "re.compile",
   "six.string_types",
   "six.text_type",
   "sys",
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.compat.CaptureIO": {
  "lineno": 392,
  "symbols_in_volume": [
   "io.TextIOWrapper"
  ],
  "type": "class"
 },
 "_pytest.compat.CaptureIO.__init__": {
  "lineno": 393,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "_pytest.compat.CaptureIO.encoding": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.CaptureIO.getvalue": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.FuncargnamesCompatAttr": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.compat.FuncargnamesCompatAttr.funcargnames": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat._PytestWrapper": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.compat._PytestWrapper.__init__": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat._bytes_to_ascii": {
  "lineno": 184,
  "symbols_in_volume": [
   "codecs.escape_encode"
  ],
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "lineno": 59,
  "symbols_in_volume": [
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "_pytest.compat._is_unittest_unexpected_success_a_failure": {
  "lineno": 325,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.compat._setup_collect_fakemodule": {
  "lineno": 369,
  "symbols_in_volume": [
   "pytest",
   "pytest.collect",
   "pytest.collect.__all__",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.compat.ascii_escaped": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.dummy_context_manager": {
  "lineno": 155,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.compat.get_default_arg_names": {
  "lineno": 162,
  "symbols_in_volume": [
   "funcsigs.Parameter.KEYWORD_ONLY",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Parameter.empty",
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "_pytest.compat.get_real_func": {
  "lineno": 251,
  "symbols_in_volume": [
   "functools.partial",
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.compat.get_real_method": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.getfslineno": {
  "lineno": 294,
  "symbols_in_volume": [
   "_pytest._code.getfslineno"
  ],
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "lineno": 110,
  "symbols_in_volume": [
   "funcsigs.Parameter.KEYWORD_ONLY",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Parameter.empty",
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "lineno": 87,
  "symbols_in_volume": [
   "inspect.getfile",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.compat.is_generator": {
  "lineno": 71,
  "symbols_in_volume": [
   "inspect.isgeneratorfunction"
  ],
  "type": "function"
 },
 "_pytest.compat.iscoroutinefunction": {
  "lineno": 76,
  "symbols_in_volume": [
   "inspect",
   "inspect.iscoroutinefunction"
  ],
  "type": "function"
 },
 "_pytest.compat.num_mock_patch_args": {
  "lineno": 96,
  "symbols_in_volume": [
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.compat.safe_getattr": {
  "lineno": 311,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME"
  ],
  "type": "function"
 },
 "_pytest.compat.safe_str": {
  "lineno": 344,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.config": {
  "lineno": null,
  "symbols_in_volume": [
   "pluggy.HookimplMarker",
   "pluggy.HookspecMarker"
  ],
  "type": "module"
 },
 "_pytest.config.Config": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Config.__init__": {
  "lineno": 563,
  "symbols_in_volume": [
   "argparse.Namespace"
  ],
  "type": "function"
 },
 "_pytest.config.Config.__init__.do_setns": {
  "lineno": 586,
  "symbols_in_volume": [
   "pytest"
  ],
  "type": "function"
 },
 "_pytest.config.Config._checkversion": {
  "lineno": 793,
  "symbols_in_volume": [
   "pytest.UsageError",
   "pytest.__version__",
   "pytest.__version__.split"
  ],
  "type": "function"
 },
 "_pytest.config.Config._consider_importhook": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._do_configure": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._ensure_unconfigure": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._get_override_ini_value": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config._getconftest_pathlist": {
  "lineno": 888,
  "symbols_in_volume": [
   "py.path.local",
   "py.path.local.sep"
  ],
  "type": "function"
 },
 "_pytest.config.Config._getini": {
  "lineno": 857,
  "symbols_in_volume": [
   "py.path.local",
   "shlex.split"
  ],
  "type": "function"
 },
 "_pytest.config.Config._initini": {
  "lineno": 694,
  "symbols_in_volume": [
   "copy.copy",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.Config._mark_plugins_for_rewrite": {
  "lineno": 730,
  "symbols_in_volume": [
   "os.environ.get",
   "pkg_resources.iter_entry_points"
  ],
  "type": "function"
 },
 "_pytest.config.Config._preparse": {
  "lineno": 760,
  "symbols_in_volume": [
   "copy.copy",
   "os.environ.get",
   "py.path.local",
   "shlex.split",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.config.Config._processopt": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.add_cleanup": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.addinivalue_line": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.cwd_relative_nodeid": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.fromdictargs": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.get_terminal_writer": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getini": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getoption": {
  "lineno": 917,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.config.Config.getvalue": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.getvalueorskip": {
  "lineno": 945,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.notify_exception": {
  "lineno": 651,
  "symbols_in_volume": [
   "sys.stderr.flush",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.config.Config.parse": {
  "lineno": 811,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.config.Config.pytest_cmdline_parse": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.pytest_load_initial_conftests": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.Config.warn": {
  "lineno": 613,
  "symbols_in_volume": [
   "_pytest.warning_types.RemovedInPytest4Warning",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.ConftestImportFailure.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.ConftestImportFailure.__str__": {
  "lineno": 39,
  "symbols_in_volume": [
   "traceback.format_tb"
  ],
  "type": "function"
 },
 "_pytest.config.Notset": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.Notset.__repr__": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager": {
  "lineno": 192,
  "symbols_in_volume": [
   "pluggy.PluginManager"
  ],
  "type": "class"
 },
 "_pytest.config.PytestPluginManager.__init__": {
  "lineno": 202,
  "symbols_in_volume": [
   "os.environ.get",
   "py.io.dupfile",
   "sys.stderr"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._getconftestmodules": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._import_plugin_specs": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._importconftest": {
  "lineno": 410,
  "symbols_in_volume": [
   "_pytest.deprecated.PYTEST_PLUGINS_FROM_NON_TOP_LEVEL_CONFTEST",
   "sys.exc_info",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._rget_with_confmod": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._set_initial_conftests": {
  "lineno": 339,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._try_load_conftest": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager._warn": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.addhooks": {
  "lineno": 230,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_conftest": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_env": {
  "lineno": 467,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_module": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_pluginarg": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.consider_preparse": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.getplugin": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.hasplugin": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.import_plugin": {
  "lineno": 478,
  "symbols_in_volume": [
   "_pytest.compat.safe_str",
   "_pytest.outcomes.Skipped",
   "six.reraise",
   "six.text_type",
   "sys.exc_info",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookimpl_opts": {
  "lineno": 247,
  "symbols_in_volume": [
   "inspect.isroutine"
  ],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.parse_hookspec_opts": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.pytest_configure": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.PytestPluginManager.register": {
  "lineno": 286,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.config._assertion_supported": {
  "lineno": 950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config._ensure_removed_sysmodule": {
  "lineno": 533,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.config._get_plugin_specs_as_list": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config._iter_rewritable_modules": {
  "lineno": 548,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "_pytest.config._prepareconfig": {
  "lineno": 158,
  "symbols_in_volume": [
   "_pytest.deprecated.MAIN_STR_ARGS",
   "_pytest.warnings._issue_config_warning",
   "py.path.local",
   "shlex.split",
   "six.string_types",
   "sys.argv",
   "sys.platform"
  ],
  "type": "function"
 },
 "_pytest.config._strtobool": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config._warn_about_missing_assertion": {
  "lineno": 959,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.config.argparsing.Argument": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.Argument.__init__": {
  "lineno": 163,
  "symbols_in_volume": [
   "six.string_types",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.__repr__": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument._set_opt_strings": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.attrs": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Argument.names": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.ArgumentError": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.ArgumentError.__init__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.ArgumentError.__str__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter": {
  "lineno": 361,
  "symbols_in_volume": [
   "argparse.HelpFormatter"
  ],
  "type": "class"
 },
 "_pytest.config.argparsing.DropShorterLongHelpFormatter._format_action_invocation": {
  "lineno": 371,
  "symbols_in_volume": [
   "argparse.HelpFormatter._format_action_invocation"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser": {
  "lineno": 322,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "class"
 },
 "_pytest.config.argparsing.MyOptionParser.__init__": {
  "lineno": 323,
  "symbols_in_volume": [
   "argparse.ArgumentParser.__init__"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser.error": {
  "lineno": 337,
  "symbols_in_volume": [
   "gettext.gettext",
   "sys.stderr"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.MyOptionParser.parse_args": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.OptionGroup.__init__": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup._addoption": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup._addoption_instance": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.OptionGroup.addoption": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.argparsing.Parser.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser._getparser": {
  "lineno": 83,
  "symbols_in_volume": [
   "_pytest._argcomplete.filescompleter"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.addini": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.addoption": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.getgroup": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse": {
  "lineno": 75,
  "symbols_in_volume": [
   "_pytest._argcomplete.try_argcomplete",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_known_and_unknown_args": {
  "lineno": 112,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_known_args": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.parse_setoption": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.argparsing.Parser.processoption": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.cmdline": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.create_terminal_writer": {
  "lineno": 999,
  "symbols_in_volume": [
   "py.io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.config.directory_arg": {
  "lineno": 92,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.config.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.config.exceptions.PrintHelp": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.exceptions.UsageError": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.config.filename_arg": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.config.findpaths.determine_setup": {
  "lineno": 101,
  "symbols_in_volume": [
   "_pytest.deprecated.CFG_PYTEST_SECTION.format",
   "_pytest.warning_types.RemovedInPytest4Warning",
   "_pytest.warnings._issue_config_warning",
   "os.path.expandvars",
   "os.path.isdir",
   "os.path.splitdrive",
   "py.iniconfig.IniConfig",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.exists": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.findpaths.get_common_ancestor": {
  "lineno": 56,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args": {
  "lineno": 79,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_dir_from_path": {
  "lineno": 86,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.get_file_part_from_node_id": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.findpaths.get_dirs_from_args.is_option": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.findpaths.getcfg": {
  "lineno": 13,
  "symbols_in_volume": [
   "_pytest.deprecated.CFG_PYTEST_SECTION.format",
   "_pytest.warning_types.RemovedInPytest4Warning",
   "_pytest.warnings._issue_config_warning",
   "py.iniconfig.IniConfig",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.config.get_config": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.get_plugin_manager": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.config.main": {
  "lineno": 46,
  "symbols_in_volume": [
   "_pytest.main.EXIT_USAGEERROR",
   "py.io.TerminalWriter",
   "sys.stderr",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest.config.setns": {
  "lineno": 977,
  "symbols_in_volume": [
   "pytest",
   "sys.modules",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "_pytest.debugging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.debugging.PdbInvoke": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.PdbInvoke.pytest_exception_interact": {
  "lineno": 102,
  "symbols_in_volume": [
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.debugging.PdbInvoke.pytest_internalerror": {
  "lineno": 111,
  "symbols_in_volume": [
   "sys.stderr.flush",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.debugging.PdbTrace": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.PdbTrace.pytest_pyfunc_call": {
  "lineno": 120,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.debugging._enter_pdb": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging._find_last_non_hidden_frame": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging._postmortem_traceback": {
  "lineno": 172,
  "symbols_in_volume": [
   "doctest.UnexpectedException"
  ],
  "type": "function"
 },
 "_pytest.debugging._test_pytest_function": {
  "lineno": 126,
  "symbols_in_volume": [
   "pdb.runcall"
  ],
  "type": "function"
 },
 "_pytest.debugging.post_mortem": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.post_mortem.Pdb": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.debugging.post_mortem.Pdb.get_stack": {
  "lineno": 190,
  "symbols_in_volume": [
   "pdb.Pdb.get_stack"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytestPDB": {
  "lineno": 76,
  "symbols_in_volume": [
   "pdb.Pdb"
  ],
  "type": "class"
 },
 "_pytest.debugging.pytestPDB.set_trace": {
  "lineno": 83,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytest_addoption": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.debugging.pytest_configure": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.environ.get",
   "pdb.Pdb",
   "pdb.set_trace",
   "sys.breakpointhook",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.debugging.pytest_configure.fin": {
  "lineno": 62,
  "symbols_in_volume": [
   "pdb.Pdb",
   "pdb.set_trace",
   "sys.__breakpointhook__",
   "sys.breakpointhook"
  ],
  "type": "function"
 },
 "_pytest.deprecated": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.warning_types.RemovedInPytest4Warning"
  ],
  "type": "module"
 },
 "_pytest.doctest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.doctest.DoctestItem": {
  "lineno": 172,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestItem.__init__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem._disable_output_capturing_for_darwin": {
  "lineno": 198,
  "symbols_in_volume": [
   "platform.system",
   "sys.stderr.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.reportinfo": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.repr_failure": {
  "lineno": 211,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest._code.code.ReprFileLocation",
   "doctest.DocTestFailure",
   "doctest.UnexpectedException",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.runtest": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestItem.setup": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.DoctestModule": {
  "lineno": 345,
  "symbols_in_volume": [
   "pytest.Module"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestModule.collect": {
  "lineno": 346,
  "symbols_in_volume": [
   "doctest.DocTestFinder",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.doctest.DoctestTextfile": {
  "lineno": 304,
  "symbols_in_volume": [
   "pytest.Module"
  ],
  "type": "class"
 },
 "_pytest.doctest.DoctestTextfile.collect": {
  "lineno": 307,
  "symbols_in_volume": [
   "doctest.DocTestParser"
  ],
  "type": "function"
 },
 "_pytest.doctest.MultipleDoctestFailures": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.doctest.MultipleDoctestFailures.__init__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest": {
  "lineno": 107,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.doctest.ReprFailDoctest.__init__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.ReprFailDoctest.toterminal": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._check_all_skipped": {
  "lineno": 334,
  "symbols_in_volume": [
   "doctest.SKIP",
   "pytest.skip"
  ],
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2": {
  "lineno": 481,
  "symbols_in_volume": [
   "_pytest.compat._PY2"
  ],
  "type": "function"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof": {
  "lineno": 497,
  "symbols_in_volume": [
   "doctest._SpoofOut"
  ],
  "type": "class"
 },
 "_pytest.doctest._fix_spoof_python2.UnicodeSpoof.getvalue": {
  "lineno": 498,
  "symbols_in_volume": [
   "doctest._SpoofOut.getvalue"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_allow_bytes_flag": {
  "lineno": 456,
  "symbols_in_volume": [
   "doctest.register_optionflag"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_allow_unicode_flag": {
  "lineno": 447,
  "symbols_in_volume": [
   "doctest.register_optionflag"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_checker": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker": {
  "lineno": 408,
  "symbols_in_volume": [
   "doctest.OutputChecker",
   "re.UNICODE",
   "re.compile"
  ],
  "type": "class"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output": {
  "lineno": 419,
  "symbols_in_volume": [
   "doctest.OutputChecker.check_output"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_checker.LiteralsOutputChecker.check_output.remove_prefixes": {
  "lineno": 431,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_continue_on_failure": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._get_flag_lookup": {
  "lineno": 270,
  "symbols_in_volume": [
   "doctest.COMPARISON_FLAGS",
   "doctest.DONT_ACCEPT_BLANKLINE",
   "doctest.DONT_ACCEPT_TRUE_FOR_1",
   "doctest.ELLIPSIS",
   "doctest.IGNORE_EXCEPTION_DETAIL",
   "doctest.NORMALIZE_WHITESPACE"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_report_choice": {
  "lineno": 465,
  "symbols_in_volume": [
   "doctest.REPORT_CDIFF",
   "doctest.REPORT_NDIFF",
   "doctest.REPORT_ONLY_FIRST_FAILURE",
   "doctest.REPORT_UDIFF"
  ],
  "type": "function"
 },
 "_pytest.doctest._get_runner": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner": {
  "lineno": 128,
  "symbols_in_volume": [
   "doctest.DebugRunner"
  ],
  "type": "class"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.__init__": {
  "lineno": 134,
  "symbols_in_volume": [
   "doctest.DebugRunner.__init__"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.report_failure": {
  "lineno": 142,
  "symbols_in_volume": [
   "doctest.DocTestFailure"
  ],
  "type": "function"
 },
 "_pytest.doctest._init_runner_class.PytestDoctestRunner.report_unexpected_exception": {
  "lineno": 149,
  "symbols_in_volume": [
   "doctest.UnexpectedException"
  ],
  "type": "function"
 },
 "_pytest.doctest._is_doctest": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._is_setup_py": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures": {
  "lineno": 374,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest"
  ],
  "type": "function"
 },
 "_pytest.doctest._setup_fixtures.func": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.doctest_namespace": {
  "lineno": 507,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.doctest.get_optionflags": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.pytest_addoption": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.doctest.pytest_collect_file": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.fixtures.FixtureDef": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureDef.__init__": {
  "lineno": 819,
  "symbols_in_volume": [
   "_pytest.compat.getfuncargnames"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.__repr__": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.addfinalizer": {
  "lineno": 845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.execute": {
  "lineno": 873,
  "symbols_in_volume": [
   "functools.partial",
   "six.reraise"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureDef.finish": {
  "lineno": 848,
  "symbols_in_volume": [
   "six.reraise",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureFunctionMarker": {
  "lineno": 989,
  "symbols_in_volume": [
   "attr.converters.optional",
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureFunctionMarker.__call__": {
  "lineno": 997,
  "symbols_in_volume": [
   "_pytest.compat.isclass"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupError.__init__": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupError.formatrepr": {
  "lineno": 717,
  "symbols_in_volume": [
   "_pytest.compat.get_real_func",
   "_pytest.compat.getfslineno",
   "inspect.getsourcelines"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr": {
  "lineno": 757,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.__init__": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureLookupErrorRepr.toterminal": {
  "lineno": 765,
  "symbols_in_volume": [
   "py._code.code.FormattedExcinfo.fail_marker",
   "py._code.code.FormattedExcinfo.flow_marker"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.FixtureManager.__init__": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._getautousenames": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager._matchfactories": {
  "lineno": 1355,
  "symbols_in_volume": [
   "_pytest.nodes.ischildnode"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure": {
  "lineno": 1180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.merge": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureclosure.sort_by_scope": {
  "lineno": 1215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixturedefs": {
  "lineno": 1340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.getfixtureinfo": {
  "lineno": 1136,
  "symbols_in_volume": [
   "_pytest.compat.getfuncargnames",
   "more_itertools.flatten"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.parsefactories": {
  "lineno": 1259,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.compat.get_real_func",
   "_pytest.compat.get_real_method",
   "_pytest.compat.getfslineno",
   "_pytest.compat.safe_getattr",
   "_pytest.deprecated.FUNCARG_PREFIX.format",
   "_pytest.deprecated.RemovedInPytest4Warning",
   "six.PY2",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_collection_modifyitems": {
  "lineno": 1255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_generate_tests": {
  "lineno": 1226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureManager.pytest_plugin_registered": {
  "lineno": 1151,
  "symbols_in_volume": [
   "_pytest.nodes.SEP",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest": {
  "lineno": 340,
  "symbols_in_volume": [
   "_pytest.compat.FuncargnamesCompatAttr"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FixtureRequest.__init__": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.__repr__": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._addfinalizer": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._check_scope": {
  "lineno": 611,
  "symbols_in_volume": [
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._compute_fixture_value": {
  "lineno": 547,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.compat.exc_clear",
   "_pytest.compat.getlocation",
   "_pytest.outcomes.fail",
   "functools.partial",
   "inspect.getframeinfo",
   "inspect.stack",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._factorytraceback": {
  "lineno": 625,
  "symbols_in_volume": [
   "_pytest.compat._format_args",
   "_pytest.compat.getfslineno"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._fillfixtures": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_active_fixturedef": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._get_fixturestack": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getnextfixturedef": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest._getscopeitem": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.addfinalizer": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.applymarker": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cached_setup": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cached_setup.finalizer": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.cls": {
  "lineno": 396,
  "symbols_in_volume": [
   "_pytest.python.Class"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.config": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fixturenames": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.fspath": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.function": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfixturevalue": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.getfuncargvalue": {
  "lineno": 511,
  "symbols_in_volume": [
   "_pytest.deprecated.GETFUNCARGVALUE",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.instance": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.keywords": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.module": {
  "lineno": 413,
  "symbols_in_volume": [
   "_pytest.python.Module"
  ],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.node": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.raiseerror": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FixtureRequest.session": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.FuncFixtureInfo": {
  "lineno": 301,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.fixtures.FuncFixtureInfo.prune_dependency_tree": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.PseudoFixtureDef": {
  "lineno": 41,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.fixtures.ScopeMismatchError": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.SubRequest": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.fixtures.SubRequest.__init__": {
  "lineno": 659,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.__repr__": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.SubRequest.addfinalizer": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures._ensure_immutable_ids": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures._teardown_yield_fixture": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.add_funcarg_pseudo_fixture_def": {
  "lineno": 112,
  "symbols_in_volume": [
   "_pytest.python.Module"
  ],
  "type": "function"
 },
 "_pytest.fixtures.call_fixture_func": {
  "lineno": 791,
  "symbols_in_volume": [
   "_pytest.compat.is_generator",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.fixtures.fail_fixturefunc": {
  "lineno": 784,
  "symbols_in_volume": [
   "_pytest._code.Source",
   "_pytest.compat.getfslineno",
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.fixtures.fillfixtures": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.fix_cache_order": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.fixture": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_direct_param_fixture_func": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_parametrized_fixture_keys": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_scope_node": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.get_scope_package": {
  "lineno": 90,
  "symbols_in_volume": [
   "pytest.Package"
  ],
  "type": "function"
 },
 "_pytest.fixtures.getfixturemarker": {
  "lineno": 170,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytest_fixture_setup": {
  "lineno": 926,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytest_sessionstart": {
  "lineno": 47,
  "symbols_in_volume": [
   "_pytest.main.Session",
   "_pytest.nodes.Item",
   "_pytest.python.Class",
   "_pytest.python.Module",
   "_pytest.python.Package"
  ],
  "type": "function"
 },
 "_pytest.fixtures.pytestconfig": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.reorder_items": {
  "lineno": 213,
  "symbols_in_volume": [
   "collections.OrderedDict.fromkeys",
   "collections.defaultdict",
   "collections.deque"
  ],
  "type": "function"
 },
 "_pytest.fixtures.reorder_items_atscope": {
  "lineno": 235,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.OrderedDict.fromkeys",
   "collections.deque"
  ],
  "type": "function"
 },
 "_pytest.fixtures.resolve_fixture_function": {
  "lineno": 906,
  "symbols_in_volume": [
   "_pytest.compat.getimfunc"
  ],
  "type": "function"
 },
 "_pytest.fixtures.scope2index": {
  "lineno": 694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopemismatch": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.scopeproperty.decoratescope.provide": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.fixtures.wrap_function_to_warning_if_called_directly": {
  "lineno": 954,
  "symbols_in_volume": [
   "_pytest.compat._PytestWrapper",
   "_pytest.compat.is_generator",
   "_pytest.deprecated.FIXTURE_FUNCTION_CALL.format",
   "_pytest.deprecated.RemovedInPytest4Warning",
   "six.PY2"
  ],
  "type": "function"
 },
 "_pytest.fixtures.wrap_function_to_warning_if_called_directly.result": {
  "lineno": 973,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.fixtures.yield_fixture": {
  "lineno": 1065,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.freeze_support": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "lineno": 21,
  "symbols_in_volume": [
   "os.path.join",
   "pkgutil.iter_modules"
  ],
  "type": "function"
 },
 "_pytest.freeze_support.freeze_includes": {
  "lineno": 8,
  "symbols_in_volume": [
   "_pytest",
   "py"
  ],
  "type": "function"
 },
 "_pytest.helpconfig": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.helpconfig.HelpAction": {
  "lineno": 12,
  "symbols_in_volume": [
   "argparse.Action"
  ],
  "type": "class"
 },
 "_pytest.helpconfig.HelpAction.__call__": {
  "lineno": 31,
  "symbols_in_volume": [
   "_pytest.config.PrintHelp"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.HelpAction.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "lineno": 117,
  "symbols_in_volume": [
   "py.path.local",
   "pytest.__file__",
   "pytest.__version__",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "lineno": 86,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "py.__version__",
   "pytest.__version__",
   "pytest.hookimpl",
   "sys.stderr.write",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "lineno": 108,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "lineno": 195,
  "symbols_in_volume": [
   "py.__version__",
   "pytest.__version__"
  ],
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec": {
  "lineno": null,
  "symbols_in_volume": [
   "pluggy.HookspecMarker"
  ],
  "type": "module"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_doctest_prepare_content": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemstart": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_logwarning": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_namespace": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_collectionfinish": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logfinish": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.hookspec.pytest_warning_captured": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "sys.maxunicode",
   "sys.version_info"
  ],
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "lineno": 32,
  "symbols_in_volume": [
   "py.xml.Namespace"
  ],
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "lineno": 358,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.expanduser",
   "os.path.expandvars",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "lineno": 516,
  "symbols_in_volume": [
   "codecs.open",
   "os.makedirs",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "lineno": 513,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_attribute": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "lineno": 234,
  "symbols_in_volume": [
   "py.xml.raw"
  ],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.write_captured_output": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "lineno": 57,
  "symbols_in_volume": [
   "py.xml.escape",
   "py.xml.raw"
  ],
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.mangle_test_address": {
  "lineno": 342,
  "symbols_in_volume": [
   "_pytest.nodes.SEP"
  ],
  "type": "function"
 },
 "_pytest.junitxml.pytest_addoption": {
  "lineno": 291,
  "symbols_in_volume": [
   "_pytest.config.filename_arg",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.record_property": {
  "lineno": 240,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.junitxml.record_property.append_property": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute": {
  "lineno": 270,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.junitxml.record_xml_attribute.add_attr_noop": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.junitxml.record_xml_property": {
  "lineno": 260,
  "symbols_in_volume": [
   "_pytest.deprecated.RECORD_XML_PROPERTY",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.logging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.logging.ColoredLevelFormatter": {
  "lineno": 19,
  "symbols_in_volume": [
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.ERROR",
   "logging.Formatter",
   "logging.INFO",
   "logging.NOTSET",
   "logging.WARN",
   "logging.WARNING",
   "re.compile"
  ],
  "type": "class"
 },
 "_pytest.logging.ColoredLevelFormatter.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "logging.getLevelName",
   "six.PY2"
  ],
  "type": "function"
 },
 "_pytest.logging.ColoredLevelFormatter.format": {
  "lineno": 62,
  "symbols_in_volume": [
   "six.PY2"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.logging.LogCaptureFixture.__init__": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture._finalize": {
  "lineno": 218,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.at_level": {
  "lineno": 311,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.clear": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.get_records": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.handler": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.messages": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.record_tuples": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.records": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.set_level": {
  "lineno": 294,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureFixture.text": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler": {
  "lineno": 192,
  "symbols_in_volume": [
   "logging.StreamHandler"
  ],
  "type": "class"
 },
 "_pytest.logging.LogCaptureHandler.__init__": {
  "lineno": 195,
  "symbols_in_volume": [
   "logging.StreamHandler.__init__",
   "py.io.TextIO"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.emit": {
  "lineno": 200,
  "symbols_in_volume": [
   "logging.StreamHandler.emit"
  ],
  "type": "function"
 },
 "_pytest.logging.LogCaptureHandler.reset": {
  "lineno": 205,
  "symbols_in_volume": [
   "py.io.TextIO"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.logging.LoggingPlugin.__init__": {
  "lineno": 377,
  "symbols_in_volume": [
   "logging.FileHandler",
   "logging.Formatter"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._log_cli_enabled": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._runtest_for": {
  "lineno": 428,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin._setup_cli_logging": {
  "lineno": 498,
  "symbols_in_volume": [
   "_pytest.compat.dummy_context_manager",
   "_pytest.config.create_terminal_writer",
   "logging.Formatter"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_call": {
  "lineno": 462,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logfinish": {
  "lineno": 479,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_logstart": {
  "lineno": 472,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_setup": {
  "lineno": 457,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtest_teardown": {
  "lineno": 467,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging.LoggingPlugin.pytest_runtestloop": {
  "lineno": 484,
  "symbols_in_volume": [
   "contextlib.closing",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler": {
  "lineno": 539,
  "symbols_in_volume": [
   "logging.StreamHandler"
  ],
  "type": "class"
 },
 "_pytest.logging._LiveLoggingStreamHandler.__init__": {
  "lineno": 548,
  "symbols_in_volume": [
   "logging.StreamHandler.__init__"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.emit": {
  "lineno": 570,
  "symbols_in_volume": [
   "_pytest.compat.dummy_context_manager",
   "logging.StreamHandler.emit"
  ],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.reset": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging._LiveLoggingStreamHandler.set_when": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.caplog": {
  "lineno": 328,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.logging.catching_logs": {
  "lineno": 164,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "_pytest.logging.get_actual_log_level": {
  "lineno": 344,
  "symbols_in_volume": [
   "logging",
   "pytest.UsageError",
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.logging.get_option_ini": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.pytest_addoption": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.pytest_addoption.add_option_ini": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.logging.pytest_configure": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.main.FSHookProxy": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.FSHookProxy.__getattr__": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.FSHookProxy.__init__": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Failed": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.NoMatch": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.main.Session": {
  "lineno": 371,
  "symbols_in_volume": [
   "_pytest.nodes.FSCollector"
  ],
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "lineno": 375,
  "symbols_in_volume": [
   "_pytest.nodes.FSCollector.__init__",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "lineno": 486,
  "symbols_in_volume": [
   "_pytest.python.Package"
  ],
  "type": "function"
 },
 "_pytest.main.Session._collectfile": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "lineno": 616,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.runner.collect_one_node"
  ],
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "lineno": 588,
  "symbols_in_volume": [
   "_pytest.config.UsageError",
   "os.sep"
  ],
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "lineno": 439,
  "symbols_in_volume": [
   "_pytest.config.UsageError",
   "_pytest.runner.collect_one_node"
  ],
  "type": "function"
 },
 "_pytest.main.Session._recurse": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "lineno": 565,
  "symbols_in_volume": [
   "os.path.dirname",
   "pkgutil.find_loader"
  ],
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "lineno": 471,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "lineno": 653,
  "symbols_in_volume": [
   "_pytest.nodes.Collector",
   "_pytest.nodes.Item",
   "_pytest.runner.collect_one_node"
  ],
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "lineno": 605,
  "symbols_in_volume": [
   "_pytest.nodes"
  ],
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "lineno": 392,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "lineno": 399,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.main._in_venv": {
  "lineno": 244,
  "symbols_in_volume": [
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.main._main": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main._patched_find_module": {
  "lineno": 305,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pkgutil.ImpImporter.find_module",
   "six.PY2"
  ],
  "type": "function"
 },
 "_pytest.main._patched_find_module.find_module_patched": {
  "lineno": 319,
  "symbols_in_volume": [
   "pkgutil.ImpLoader",
   "pkgutil.imp.find_module"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_addoption": {
  "lineno": 30,
  "symbols_in_volume": [
   "_pytest.config.directory_arg",
   "functools.partial"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_collection_modifyitems": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_configure": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "lineno": 261,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.main.wrap_session": {
  "lineno": 167,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "_pytest.config.UsageError",
   "_pytest.outcomes.exit.Exception",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "_pytest.mark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.mark.MarkerError": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.deselect_by_keyword": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.deselect_by_mark": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.mark.evaluate.MarkEvaluator": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__bool__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._get_marks": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._getglobals": {
  "lineno": 65,
  "symbols_in_volume": [
   "os",
   "platform",
   "sys"
  ],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator._istrue": {
  "lineno": 71,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.get": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.getexplanation": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.invalidraise": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.istrue": {
  "lineno": 48,
  "symbols_in_volume": [
   "sys.exc_info",
   "traceback.format_exception_only"
  ],
  "type": "function"
 },
 "_pytest.mark.evaluate.MarkEvaluator.wasvalid": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.evaluate.cached_eval": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.legacy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.mark.legacy.KeywordMapping": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.legacy.KeywordMapping.__getitem__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.legacy.KeywordMapping.from_item": {
  "lineno": 35,
  "symbols_in_volume": [
   "pytest.Instance"
  ],
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping": {
  "lineno": 11,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.mark.legacy.MarkMapping.__getitem__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.legacy.MarkMapping.from_item": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.legacy.matchkeyword": {
  "lineno": 72,
  "symbols_in_volume": [
   "_pytest.config.UsageError",
   "keyword.iskeyword"
  ],
  "type": "function"
 },
 "_pytest.mark.legacy.matchmark": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.param": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_addoption": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "lineno": 159,
  "symbols_in_volume": [
   "_pytest.config.UsageError"
  ],
  "type": "function"
 },
 "_pytest.mark.pytest_unconfigure": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.mark.structures.Mark": {
  "lineno": 139,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.Mark.combined_with": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator": {
  "lineno": 162,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s",
   "attr.validators.instance_of"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.MarkDecorator.__call__": {
  "lineno": 224,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__eq__": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.__repr__": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.markname": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkDecorator.with_args": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkGenerator": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures.MarkGenerator.__getattr__": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkGenerator._check": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkInfo": {
  "lineno": 310,
  "symbols_in_volume": [
   "attr.Factory",
   "attr.ib",
   "attr.s",
   "functools.reduce"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.MarkInfo.__iter__": {
  "lineno": 349,
  "symbols_in_volume": [
   "six.moves.map"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.MarkInfo.__repr__": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkInfo.add_mark": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkInfo.for_mark": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.MarkInfo.validate_marks": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.mark.structures.NodeKeywords.__delitem__": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__getitem__": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__init__": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__iter__": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__len__": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__repr__": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords.__setitem__": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeKeywords._seen": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers": {
  "lineno": 431,
  "symbols_in_volume": [
   "attr.Factory",
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.NodeMarkers.__iter__": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.find": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.NodeMarkers.update": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet": {
  "lineno": 52,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "_pytest.mark.structures.ParameterSet._for_parametrize": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.extract_from": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.param": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.ParameterSet.param.param_extract_id": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures._marked": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.alias": {
  "lineno": 17,
  "symbols_in_volume": [
   "operator.attrgetter"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.alias.warned": {
  "lineno": 20,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.mark.structures.get_empty_parameterset_mark": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.get_unpacked_marks": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.istestfunc": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.normalize_mark_list": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.store_legacy_markinfo": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.store_mark": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.mark.structures.transfer_markers": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "lineno": 236,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.context": {
  "lineno": 106,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "lineno": 166,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "lineno": 221,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "lineno": 129,
  "symbols_in_volume": [
   "inspect.isclass",
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "lineno": 212,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "lineno": 230,
  "symbols_in_volume": [
   "sys.path",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "lineno": 247,
  "symbols_in_volume": [
   "os.chdir",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "lineno": 78,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "lineno": 15,
  "symbols_in_volume": [
   "_pytest.fixtures.fixture"
  ],
  "type": "function"
 },
 "_pytest.monkeypatch.resolve": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.__file__",
   "py.path.local"
  ],
  "type": "module"
 },
 "_pytest.nodes.Collector": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Collector.CollectError": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Collector._prunetraceback": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Collector.collect": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Collector.repr_failure": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.FSCollector": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.FSCollector.__init__": {
  "lineno": 449,
  "symbols_in_volume": [
   "os.sep",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.nodes.File": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Item": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Item.__init__": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Item.add_report_section": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Item.location": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Item.reportinfo": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.nodes.Node.__hash__": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.__init__": {
  "lineno": 76,
  "symbols_in_volume": [
   "_pytest.mark.structures.NodeKeywords"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.__repr__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node._getcustomclass": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node._legacy_warn": {
  "lineno": 186,
  "symbols_in_volume": [
   "_pytest.deprecated.NODE_WARN"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node._prunetraceback": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node._repr_failure_py": {
  "lineno": 349,
  "symbols_in_volume": [
   "_pytest._code.Traceback",
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node._std_warn": {
  "lineno": 206,
  "symbols_in_volume": [
   "_pytest.warning_types.PytestWarning",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.add_marker": {
  "lineno": 257,
  "symbols_in_volume": [
   "_pytest.mark.MARK_GEN",
   "_pytest.mark.MarkDecorator",
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.addfinalizer": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.get_closest_marker": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.get_marker": {
  "lineno": 306,
  "symbols_in_volume": [
   "_pytest.mark.structures.MarkInfo"
  ],
  "type": "function"
 },
 "_pytest.nodes.Node.getparent": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.ihook": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.iter_markers_with_node": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.listchain": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.listextrakeywords": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.listnames": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.nodeid": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.setup": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.teardown": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.Node.warn": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes._CompatProperty": {
  "lineno": 56,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.nodes._CompatProperty.__get__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes._check_initialpaths_for_relpath": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes._splitnode": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nodes.get_fslocation_from_item": {
  "lineno": 394,
  "symbols_in_volume": [
   "_pytest.compat.getfslineno"
  ],
  "type": "function"
 },
 "_pytest.nodes.ischildnode": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nose": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.nose.call_optional": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.nose.get_skip_exceptions": {
  "lineno": 10,
  "symbols_in_volume": [
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.nose.is_potential_nosetest": {
  "lineno": 57,
  "symbols_in_volume": [
   "_pytest.python.Function",
   "_pytest.unittest.TestCaseFunction"
  ],
  "type": "function"
 },
 "_pytest.nose.pytest_make_collect_report": {
  "lineno": 52,
  "symbols_in_volume": [
   "_pytest.python.Generator"
  ],
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_makereport": {
  "lineno": 19,
  "symbols_in_volume": [
   "_pytest.runner.skip"
  ],
  "type": "function"
 },
 "_pytest.nose.pytest_runtest_setup": {
  "lineno": 26,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.python.Generator",
   "_pytest.python.Instance"
  ],
  "type": "function"
 },
 "_pytest.nose.teardown_nose": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.outcomes.Exit": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.Exit.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.Failed": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.OutcomeException.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.OutcomeException.__repr__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.Skipped": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.Skipped.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.XFailed": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.outcomes.exit": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.fail": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.importorskip": {
  "lineno": 131,
  "symbols_in_volume": [
   "pkg_resources.parse_version",
   "sys.modules",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.outcomes.skip": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.outcomes.xfail": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.pastebin.create_new_paste": {
  "lineno": 60,
  "symbols_in_volume": [
   "re.search",
   "sys.version_info",
   "urllib.parse.urlencode",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_addoption": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.hookimpl",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "lineno": 35,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.paths.resolve_from_str": {
  "lineno": 5,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.expandvars",
   "os.path.isabs"
  ],
  "type": "function"
 },
 "_pytest.pytester": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "_pytest.pytester.CwdSnapshot": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.CwdSnapshot.__init__": {
  "lineno": 438,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "_pytest.pytester.CwdSnapshot.restore": {
  "lineno": 441,
  "symbols_in_volume": [
   "os.chdir"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.HookRecorder.__init__": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.after": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.__init__.before": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assert_contains": {
  "lineno": 249,
  "symbols_in_volume": [
   "pytest.fail",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.assertoutcome": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.clear": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.countoutcomes": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.finish_recording": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcall": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getcalls": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailedcollections": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getfailures": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.getreports": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.listoutcomes": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.matchreport": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.HookRecorder.popcall": {
  "lineno": 270,
  "symbols_in_volume": [
   "pytest.fail"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineComp": {
  "lineno": 1165,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LineComp.__init__": {
  "lineno": 1166,
  "symbols_in_volume": [
   "py.io.TextIO"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineComp.assert_contains_lines": {
  "lineno": 1169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher": {
  "lineno": 1183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LineMatcher.__init__": {
  "lineno": 1194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._getlines": {
  "lineno": 1202,
  "symbols_in_volume": [
   "_pytest._code.Source"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log": {
  "lineno": 1255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._log_text": {
  "lineno": 1258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._match_lines": {
  "lineno": 1283,
  "symbols_in_volume": [
   "pytest.fail"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher._match_lines_random": {
  "lineno": 1227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines": {
  "lineno": 1262,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.fnmatch_lines_random": {
  "lineno": 1209,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.get_lines_after": {
  "lineno": 1244,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.re_match_lines": {
  "lineno": 1272,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.re_match_lines_random": {
  "lineno": 1218,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher.str": {
  "lineno": 1198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LineMatcher_fixture": {
  "lineno": 358,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.LsofFdLeakChecker._exec_lsof": {
  "lineno": 70,
  "symbols_in_volume": [
   "os.getpid",
   "py.process.cmdexec"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker._parse_lsof_output.isopen": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.get_open_files": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.matching_platform": {
  "lineno": 97,
  "symbols_in_volume": [
   "py.process.cmdexec",
   "py.process.cmdexec.Error"
  ],
  "type": "function"
 },
 "_pytest.pytester.LsofFdLeakChecker.pytest_runtest_protocol": {
  "lineno": 108,
  "symbols_in_volume": [
   "gc.collect",
   "pytest.PytestWarning",
   "pytest.hookimpl",
   "sys"
  ],
  "type": "function"
 },
 "_pytest.pytester.ParsedCall": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.ParsedCall.__init__": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.ParsedCall.__repr__": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.PytestArg": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.PytestArg.__init__": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.PytestArg.gethookrecorder": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.RunResult.__init__": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult.assert_outcomes": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.RunResult.parseoutcomes": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.SysModulesSnapshot": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.SysModulesSnapshot.__init__": {
  "lineno": 446,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.pytester.SysModulesSnapshot.restore": {
  "lineno": 450,
  "symbols_in_volume": [
   "sys.modules.clear",
   "sys.modules.items",
   "sys.modules.update"
  ],
  "type": "function"
 },
 "_pytest.pytester.SysPathsSnapshot": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.SysPathsSnapshot.__init__": {
  "lineno": 460,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.pytester.SysPathsSnapshot.restore": {
  "lineno": 463,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.path"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir": {
  "lineno": 467,
  "symbols_in_volume": [
   "_pytest.main.Session"
  ],
  "type": "class"
 },
 "_pytest.pytester.Testdir.__init__": {
  "lineno": 485,
  "symbols_in_volume": [
   "weakref.WeakKeyDictionary"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__repr__": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__take_sys_modules_snapshot": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.__take_sys_modules_snapshot.preserve_module": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._dump_lines": {
  "lineno": 1080,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir._ensure_basetemp": {
  "lineno": 899,
  "symbols_in_volume": [
   "_pytest.compat.safe_str"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._getpytestargs": {
  "lineno": 1087,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile": {
  "lineno": 540,
  "symbols_in_volume": [
   "_pytest._code.Source"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._makefile.to_text": {
  "lineno": 543,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir._possibly_invalidate_import_caches": {
  "lineno": 619,
  "symbols_in_volume": [
   "importlib",
   "importlib.invalidate_caches"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.chdir": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.collect_by_name": {
  "lineno": 1003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.copy_example": {
  "lineno": 644,
  "symbols_in_volume": [
   "_pytest.warning_types.PYTESTER_COPY_EXAMPLE",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.finalize": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.genitems": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getinicfg": {
  "lineno": 591,
  "symbols_in_volume": [
   "py.iniconfig.IniConfig"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitem": {
  "lineno": 943,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getitems": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getmodulecol": {
  "lineno": 976,
  "symbols_in_volume": [
   "_pytest._code.Source",
   "_pytest.compat.Path"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getnode": {
  "lineno": 690,
  "symbols_in_volume": [
   "_pytest.main.EXIT_OK",
   "_pytest.main.Session",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.getpathnode": {
  "lineno": 708,
  "symbols_in_volume": [
   "_pytest.main.EXIT_OK",
   "_pytest.main.Session"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_genitems": {
  "lineno": 772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run": {
  "lineno": 784,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported",
   "pytest.main"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.Collect": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.Collect.pytest_configure": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_run.reprec": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.inline_run.revert_warn_already_imported": {
  "lineno": 809,
  "symbols_in_volume": [
   "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.inline_runsource": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.make_hook_recorder": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeconftest": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makefile": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makeini": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.makepyfile": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.maketxtfile": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkdir": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.mkpydir": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfig": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.parseconfigure": {
  "lineno": 931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.popen": {
  "lineno": 1020,
  "symbols_in_volume": [
   "os.environ.copy",
   "os.getcwd",
   "os.pathsep.join",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.run": {
  "lineno": 1042,
  "symbols_in_volume": [
   "codecs.open",
   "py.path.local",
   "sys.platform",
   "sys.stderr",
   "sys.stdout",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runitem": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess": {
  "lineno": 857,
  "symbols_in_volume": [
   "_pytest.capture.MultiCapture",
   "_pytest.capture.SysCapture",
   "sys.stderr.write",
   "sys.stdout.write",
   "time.time",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpytest_inprocess.reprec": {
  "lineno": 878,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.pytester.Testdir.runpytest_subprocess": {
  "lineno": 1102,
  "symbols_in_volume": [
   "py.path.local.make_numbered_dir"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython": {
  "lineno": 1090,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.runpython_c": {
  "lineno": 1098,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn": {
  "lineno": 1138,
  "symbols_in_volume": [
   "platform.machine",
   "pytest.importorskip",
   "pytest.skip",
   "pytest.xfail",
   "sys",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "_pytest.pytester.Testdir.spawn_pytest": {
  "lineno": 1124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.Testdir.syspathinsert": {
  "lineno": 604,
  "symbols_in_volume": [
   "sys.path.insert"
  ],
  "type": "function"
 },
 "_pytest.pytester._pytest": {
  "lineno": 185,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.anypython": {
  "lineno": 167,
  "symbols_in_volume": [
   "py.path.local",
   "pytest.fixture",
   "pytest.skip",
   "sys.platform"
  ],
  "type": "function"
 },
 "_pytest.pytester.get_public_names": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.getdecoded": {
  "lineno": 1156,
  "symbols_in_volume": [
   "py.io.saferepr"
  ],
  "type": "function"
 },
 "_pytest.pytester.getexecutable": {
  "lineno": 141,
  "symbols_in_volume": [
   "py.path.local.sysfind",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "_pytest.pytester.linecomp": {
  "lineno": 353,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.pytester.pytest_addoption": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.pytest_configure": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.pytester.testdir": {
  "lineno": 363,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.python": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.__file__",
   "pluggy.__file__.rstrip",
   "py.__file__",
   "py.path.local"
  ],
  "type": "module"
 },
 "_pytest.python.CallSpec2": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.CallSpec2.__init__": {
  "lineno": 833,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.python.CallSpec2._checkargnotcontained": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.copy": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.getparam": {
  "lineno": 860,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET"
  ],
  "type": "function"
 },
 "_pytest.python.CallSpec2.id": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.CallSpec2.setall": {
  "lineno": 882,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.fixtures.scopenum_function"
  ],
  "type": "function"
 },
 "_pytest.python.CallSpec2.setmulti2": {
  "lineno": 872,
  "symbols_in_volume": [
   "_pytest.mark.structures.normalize_mark_list"
  ],
  "type": "function"
 },
 "_pytest.python.Class": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Class.collect": {
  "lineno": 660,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr",
   "_pytest.warning_types.PytestWarning"
  ],
  "type": "function"
 },
 "_pytest.python.Class.setup": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function": {
  "lineno": 1362,
  "symbols_in_volume": [
   "_pytest.fixtures.FuncargnamesCompatAttr",
   "_pytest.nodes.Item"
  ],
  "type": "class"
 },
 "_pytest.python.Function.__init__": {
  "lineno": 1371,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.mark.structures.get_unpacked_marks",
   "_pytest.mark.structures.normalize_mark_list"
  ],
  "type": "function"
 },
 "_pytest.python.Function._getobj": {
  "lineno": 1438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function._initrequest": {
  "lineno": 1418,
  "symbols_in_volume": [
   "_pytest.fixtures.FixtureRequest"
  ],
  "type": "function"
 },
 "_pytest.python.Function._isyieldedfunction": {
  "lineno": 1450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function._pyfuncitem": {
  "lineno": 1445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.function": {
  "lineno": 1433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.runtest": {
  "lineno": 1453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Function.setup": {
  "lineno": 1457,
  "symbols_in_volume": [
   "_pytest.fixtures.fillfixtures"
  ],
  "type": "function"
 },
 "_pytest.python.FunctionDefinition": {
  "lineno": 1462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.FunctionDefinition.runtest": {
  "lineno": 1468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.FunctionMixin": {
  "lineno": 713,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.FunctionMixin._prunetraceback": {
  "lineno": 743,
  "symbols_in_volume": [
   "_pytest._code.Code",
   "_pytest.compat.get_real_func"
  ],
  "type": "function"
 },
 "_pytest.python.FunctionMixin._repr_failure_py": {
  "lineno": 764,
  "symbols_in_volume": [
   "_pytest.outcomes.fail.Exception",
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.python.FunctionMixin.repr_failure": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.FunctionMixin.setup": {
  "lineno": 717,
  "symbols_in_volume": [
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "_pytest.python.Generator": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Generator.collect": {
  "lineno": 779,
  "symbols_in_volume": [
   "_pytest.deprecated.YIELD_TESTS"
  ],
  "type": "function"
 },
 "_pytest.python.Generator.getcallargs": {
  "lineno": 807,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.python.Instance": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Instance._getobj": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Instance.collect": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Instance.newinstance": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Metafunc": {
  "lineno": 895,
  "symbols_in_volume": [
   "_pytest.fixtures.FuncargnamesCompatAttr"
  ],
  "type": "class"
 },
 "_pytest.python.Metafunc.__init__": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Metafunc._resolve_arg_ids": {
  "lineno": 1009,
  "symbols_in_volume": [
   "py.io.saferepr",
   "six.string_types"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc._resolve_arg_value_types": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Metafunc._validate_if_using_arg_names": {
  "lineno": 1067,
  "symbols_in_volume": [
   "_pytest.compat.get_default_arg_names"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc.addcall": {
  "lineno": 1090,
  "symbols_in_volume": [
   "_pytest.compat.NOTSET",
   "_pytest.deprecated.METAFUNC_ADD_CALL",
   "_pytest.outcomes.fail",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.python.Metafunc.parametrize": {
  "lineno": 929,
  "symbols_in_volume": [
   "_pytest.fixtures.scope2index",
   "_pytest.mark.ParameterSet._for_parametrize"
  ],
  "type": "function"
 },
 "_pytest.python.Module": {
  "lineno": 467,
  "symbols_in_volume": [
   "_pytest.nodes.File"
  ],
  "type": "class"
 },
 "_pytest.python.Module._getobj": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Module._importtestmodule": {
  "lineno": 477,
  "symbols_in_volume": [
   "_pytest._code.ExceptionInfo",
   "_pytest._code.code.ExceptionInfo",
   "_pytest.compat.safe_str",
   "_pytest.runner.Skipped",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.python.Module.collect": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Module.setup": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Package": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.Package.__init__": {
  "lineno": 542,
  "symbols_in_volume": [
   "_pytest.nodes.FSCollector.__init__"
  ],
  "type": "function"
 },
 "_pytest.python.Package._collectfile": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Package._recurse": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Package.collect": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.Package.gethookproxy": {
  "lineno": 563,
  "symbols_in_volume": [
   "_pytest.main.FSHookProxy"
  ],
  "type": "function"
 },
 "_pytest.python.Package.isinitpath": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector": {
  "lineno": 336,
  "symbols_in_volume": [
   "_pytest.nodes.Collector"
  ],
  "type": "class"
 },
 "_pytest.python.PyCollector._genfunctions": {
  "lineno": 417,
  "symbols_in_volume": [
   "_pytest.fixtures.add_funcarg_pseudo_fixture_def",
   "_pytest.mark.structures.transfer_markers"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector._makeitem": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector._matches_prefix_or_glob_option": {
  "lineno": 367,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.classnamefilter": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.collect": {
  "lineno": 384,
  "symbols_in_volume": [
   "inspect.getmro"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.funcnamefilter": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.isnosetest": {
  "lineno": 340,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.istestclass": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyCollector.istestfunction": {
  "lineno": 352,
  "symbols_in_volume": [
   "_pytest.compat.safe_getattr",
   "_pytest.fixtures.getfixturemarker"
  ],
  "type": "function"
 },
 "_pytest.python.PyCollector.makeitem": {
  "lineno": 409,
  "symbols_in_volume": [
   "_pytest.deprecated.COLLECTOR_MAKEITEM",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjContext": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.PyobjMixin": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python.PyobjMixin.__init__": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin._getfslineno": {
  "lineno": 316,
  "symbols_in_volume": [
   "_pytest.compat.getfslineno"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin._getobj": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.getmodpath": {
  "lineno": 296,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj.fget": {
  "lineno": 276,
  "symbols_in_volume": [
   "_pytest.mark.structures.get_unpacked_marks"
  ],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.obj.fset": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.PyobjMixin.reportinfo": {
  "lineno": 319,
  "symbols_in_volume": [
   "_pytest.compat.getfslineno",
   "sys.modules.__file__"
  ],
  "type": "function"
 },
 "_pytest.python._find_parametrized_scope": {
  "lineno": 1133,
  "symbols_in_volume": [
   "_pytest.fixtures.scopes"
  ],
  "type": "function"
 },
 "_pytest.python._get_xunit_func": {
  "lineno": 647,
  "symbols_in_volume": [
   "_pytest.fixtures.getfixturemarker"
  ],
  "type": "function"
 },
 "_pytest.python._get_xunit_setup_teardown": {
  "lineno": 627,
  "symbols_in_volume": [
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "_pytest.python._idval": {
  "lineno": 1161,
  "symbols_in_volume": [
   "_pytest.compat.NoneType",
   "_pytest.compat.REGEX_TYPE",
   "_pytest.compat.STRING_TYPES",
   "_pytest.compat.ascii_escaped",
   "_pytest.compat.enum",
   "_pytest.compat.enum.Enum",
   "_pytest.compat.isclass",
   "_pytest.compat.isfunction",
   "_pytest.warning_types.RemovedInPytest4Warning"
  ],
  "type": "function"
 },
 "_pytest.python._idvalset": {
  "lineno": 1198,
  "symbols_in_volume": [
   "_pytest.compat.ascii_escaped"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test": {
  "lineno": 1233,
  "symbols_in_volume": [
   "_pytest.config.create_terminal_writer",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.get_best_relpath": {
  "lineno": 1241,
  "symbols_in_volume": [
   "_pytest.compat.getlocation"
  ],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_fixture": {
  "lineno": 1245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python._show_fixtures_per_test.write_item": {
  "lineno": 1261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python._showfixtures_main": {
  "lineno": 1291,
  "symbols_in_volume": [
   "_pytest.compat.getlocation",
   "_pytest.config.create_terminal_writer",
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.filter_traceback": {
  "lineno": 61,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.python.hasinit": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.hasnew": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.idmaker": {
  "lineno": 1211,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "_pytest.python.path_matches_patterns": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pyobj_property": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pyobj_property.get": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_addoption": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_cmdline_main": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_collect_file": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_configure": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_generate_tests": {
  "lineno": 155,
  "symbols_in_volume": [
   "_pytest.mark.MarkerError"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_make_parametrize_id": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makeitem": {
  "lineno": 224,
  "symbols_in_volume": [
   "_pytest.compat.get_real_func",
   "_pytest.compat.getfslineno",
   "_pytest.compat.is_generator",
   "_pytest.compat.isclass",
   "_pytest.compat.isfunction",
   "_pytest.config.hookimpl",
   "_pytest.warning_types.PytestWarning",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.python.pytest_pycollect_makemodule": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python.pytest_pyfunc_call": {
  "lineno": 187,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.python.show_fixtures_per_test": {
  "lineno": 1227,
  "symbols_in_volume": [
   "_pytest.main.wrap_session"
  ],
  "type": "function"
 },
 "_pytest.python.showfixtures": {
  "lineno": 1285,
  "symbols_in_volume": [
   "_pytest.main.wrap_session"
  ],
  "type": "function"
 },
 "_pytest.python.write_docstring": {
  "lineno": 1346,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "_pytest.python_api": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat.STRING_TYPES",
   "_pytest.outcomes.fail.Exception"
  ],
  "type": "module"
 },
 "_pytest.python_api.ApproxBase": {
  "lineno": 48,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "class"
 },
 "_pytest.python_api.ApproxBase.__eq__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__init__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__ne__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase.__repr__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._approx_scalar": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._check_type": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxBase._yield_comparisons": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxDecimal": {
  "lineno": 336,
  "symbols_in_volume": [
   "decimal.Decimal"
  ],
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxMapping.__eq__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping.__repr__": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._check_type": {
  "lineno": 175,
  "symbols_in_volume": [
   "numbers.Number",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxMapping._yield_comparisons": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy": {
  "lineno": 111,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "class"
 },
 "_pytest.python_api.ApproxNumpy.__eq__": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy.__repr__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxNumpy._yield_comparisons": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.asscalar",
   "numpy.isscalar",
   "numpy.ndindex"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxScalar.__eq__": {
  "lineno": 254,
  "symbols_in_volume": [
   "math.isinf",
   "math.isnan"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.__repr__": {
  "lineno": 227,
  "symbols_in_volume": [
   "math.isinf",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance": {
  "lineno": 288,
  "symbols_in_volume": [
   "math.isnan"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxScalar.tolerance.set_default": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.ApproxSequence.__eq__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence.__repr__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence._check_type": {
  "lineno": 207,
  "symbols_in_volume": [
   "numbers.Number",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "_pytest.python_api.ApproxSequence._yield_comparisons": {
  "lineno": 204,
  "symbols_in_volume": [
   "six.moves.zip"
  ],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.python_api.RaisesContext.__enter__": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__exit__": {
  "lineno": 711,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "sys.exc_clear",
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.python_api.RaisesContext.__init__": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api._cmp_raises_type_error": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api._is_numpy_array": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy",
   "numpy.ndarray",
   "sys.modules.get"
  ],
  "type": "function"
 },
 "_pytest.python_api._non_numeric_type_error": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api._recursive_list_map": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.python_api.approx": {
  "lineno": 345,
  "symbols_in_volume": [
   "_pytest.compat.Mapping",
   "_pytest.compat.STRING_TYPES",
   "_pytest.compat.Sequence",
   "decimal.Decimal",
   "numbers.Number"
  ],
  "type": "function"
 },
 "_pytest.python_api.raises": {
  "lineno": 547,
  "symbols_in_volume": [
   "_pytest.compat.isclass",
   "_pytest.outcomes.fail",
   "more_itertools.more.always_iterable",
   "six.exec_",
   "six.moves.filterfalse",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.recwarn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.recwarn.WarningsChecker": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.recwarn.WarningsChecker.__exit__": {
  "lineno": 212,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "re.compile"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsChecker.__init__": {
  "lineno": 196,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder": {
  "lineno": 140,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "class"
 },
 "_pytest.recwarn.WarningsRecorder.__enter__": {
  "lineno": 180,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__exit__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__getitem__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__init__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__iter__": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.__len__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.clear": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.list": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.WarningsRecorder.pop": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.recwarn._DeprecatedCallContext.__enter__": {
  "lineno": 57,
  "symbols_in_volume": [
   "warnings.warn",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext.__exit__": {
  "lineno": 73,
  "symbols_in_volume": [
   "warnings.warn",
   "warnings.warn_explicit"
  ],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext._warn": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn._DeprecatedCallContext._warn_explicit": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.deprecated_call": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.recwarn.recwarn": {
  "lineno": 17,
  "symbols_in_volume": [
   "_pytest.fixtures.yield_fixture",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "_pytest.recwarn.warns": {
  "lineno": 87,
  "symbols_in_volume": [
   "six.exec_",
   "sys._getframe"
  ],
  "type": "function"
 },
 "_pytest.reports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.reports.BaseReport": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.reports.BaseReport.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.caplog": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstderr": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.capstdout": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.fspath": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.get_sections": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.BaseReport.longreprtext": {
  "lineno": 45,
  "symbols_in_volume": [
   "py.io.TerminalWriter"
  ],
  "type": "function"
 },
 "_pytest.reports.BaseReport.toterminal": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr": {
  "lineno": 191,
  "symbols_in_volume": [
   "_pytest._code.code.TerminalRepr"
  ],
  "type": "class"
 },
 "_pytest.reports.CollectErrorRepr.__init__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.CollectErrorRepr.toterminal": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.CollectReport": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.reports.CollectReport.__init__": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.CollectReport.__repr__": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.CollectReport.location": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.TeardownErrorReport": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.reports.TeardownErrorReport.__init__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.TestReport": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.reports.TestReport.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.TestReport.__repr__": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.reports.getslaveinfoline": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.resultlog.ResultLog": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "lineno": 116,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.generic_path": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.pytest_addoption": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "lineno": 22,
  "symbols_in_volume": [
   "_pytest.deprecated.RESULT_LOG",
   "_pytest.warning_types.RemovedInPytest4Warning",
   "_pytest.warnings._issue_config_warning",
   "os.makedirs",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.runner.CallInfo": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.CallInfo.__init__": {
  "lineno": 195,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.runner.CallInfo.__repr__": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.runner.SetupState.__init__": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState._callfinalizers": {
  "lineno": 307,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "six.reraise",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState._pop_and_teardown": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_towards": {
  "lineno": 342,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "six.reraise",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_with_finalization": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState.addfinalizer": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState.prepare": {
  "lineno": 357,
  "symbols_in_volume": [
   "_pytest.outcomes.TEST_OUTCOME",
   "six.reraise",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_all": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_exact": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner._update_current_test_var": {
  "lineno": 129,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.pop"
  ],
  "type": "function"
 },
 "_pytest.runner.call_and_report": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.call_runtest_hook": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.check_interactive_exception": {
  "lineno": 171,
  "symbols_in_volume": [
   "_pytest.outcomes.skip.Exception",
   "bdb.BdbQuit"
  ],
  "type": "function"
 },
 "_pytest.runner.collect_one_node": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_addoption": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_make_collect_report": {
  "lineno": 260,
  "symbols_in_volume": [
   "_pytest.nose.get_skip_exceptions",
   "_pytest.outcomes.Skipped"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_report_teststatus": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_call": {
  "lineno": 107,
  "symbols_in_volume": [
   "sys.exc_info",
   "sys.last_traceback",
   "sys.last_type",
   "sys.last_value"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_makereport": {
  "lineno": 220,
  "symbols_in_volume": [
   "_pytest._code.code.ExceptionInfo",
   "_pytest.outcomes.skip.Exception"
  ],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_protocol": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_setup": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_teardown": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_sessionfinish": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_sessionstart": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.pytest_terminal_summary": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.runtestprotocol": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.runner.show_test_item": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setuponly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.setuponly._show_fixture_action": {
  "lineno": 50,
  "symbols_in_volume": [
   "sys.stderr.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_addoption": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setuponly.pytest_cmdline_main": {
  "lineno": 82,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_post_finalizer": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setuponly.pytest_fixture_setup": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.setupplan": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.setupplan.pytest_addoption": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "lineno": 25,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.skipping": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.skipping.check_strict_xfail": {
  "lineno": 108,
  "symbols_in_volume": [
   "_pytest.outcomes.fail"
  ],
  "type": "function"
 },
 "_pytest.skipping.check_xfail_no_run": {
  "lineno": 99,
  "symbols_in_volume": [
   "_pytest.outcomes.xfail"
  ],
  "type": "function"
 },
 "_pytest.skipping.folded_skips": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_addoption": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_configure": {
  "lineno": 28,
  "symbols_in_volume": [
   "_pytest.outcomes.xfail.Exception",
   "pytest",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_configure.nop": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_pyfunc_call": {
  "lineno": 90,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_report_teststatus": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_makereport": {
  "lineno": 120,
  "symbols_in_volume": [
   "_pytest.compat._is_unittest_unexpected_success_a_failure",
   "_pytest.config.hookimpl",
   "_pytest.outcomes.xfail.Exception"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_runtest_setup": {
  "lineno": 68,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "_pytest.mark.evaluate.MarkEvaluator",
   "_pytest.outcomes.skip"
  ],
  "type": "function"
 },
 "_pytest.skipping.pytest_terminal_summary": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_simple": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_skipped": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_xfailed": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.show_xpassed": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.shower": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.skipping.shower.show_": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.terminal.MoreQuietAction": {
  "lineno": 32,
  "symbols_in_volume": [
   "argparse.Action"
  ],
  "type": "class"
 },
 "_pytest.terminal.MoreQuietAction.__call__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.MoreQuietAction.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.terminal.TerminalReporter.__init__": {
  "lineno": 226,
  "symbols_in_volume": [
   "py.path.local",
   "sys.stdout"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._determine_show_progress_info": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._get_progress_information_message": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getcrashline": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getfailureheadline": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline": {
  "lineno": 665,
  "symbols_in_volume": [
   "_pytest.nodes.SEP"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline.mkrel": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._outrep_summary": {
  "lineno": 802,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._printcollecteditems": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._report_keyboardinterrupt": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._width_of_current_line": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_progress_information_filling_space": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._write_report_lines_from_hooks": {
  "lineno": 551,
  "symbols_in_volume": [
   "more_itertools.collapse"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.ensure_newline": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.getreports": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.hasopt": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.line": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.print_teardown_sections": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_finish": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_modifyitems": {
  "lineno": 518,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collectreport": {
  "lineno": 480,
  "symbols_in_volume": [
   "pytest.Item"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_deselected": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_internalerror": {
  "lineno": 328,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_keyboard_interrupt": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_logwarning": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_plugin_registered": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_report_header": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logfinish": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logreport": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logstart": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionfinish": {
  "lineno": 615,
  "symbols_in_volume": [
   "_pytest.main.EXIT_INTERRUPTED",
   "_pytest.main.EXIT_NOTESTSCOLLECTED",
   "_pytest.main.EXIT_OK",
   "_pytest.main.EXIT_TESTSFAILED",
   "_pytest.main.EXIT_USAGEERROR",
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionstart": {
  "lineno": 522,
  "symbols_in_volume": [
   "platform.python_version",
   "pluggy.__version__",
   "py.__version__",
   "pytest.__version__",
   "pytest.hookimpl",
   "sys",
   "sys.executable",
   "sys.platform",
   "sys.pypy_version_info",
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_terminal_summary": {
  "lineno": 636,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_unconfigure": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_warning_captured": {
  "lineno": 340,
  "symbols_in_volume": [
   "_pytest.warnings.warning_record_to_str"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.report_collect": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.rewrite": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.section": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_errors": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_failures": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_passes": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_stats": {
  "lineno": 815,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings": {
  "lineno": 711,
  "symbols_in_volume": [
   "itertools.groupby"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_ensure_prefix": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_fspath_result": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_line": {
  "lineno": 294,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_sep": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.WarningReport": {
  "lineno": 188,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "_pytest.terminal.WarningReport.get_location": {
  "lineno": 206,
  "symbols_in_volume": [
   "py.path.local"
  ],
  "type": "function"
 },
 "_pytest.terminal._plugin_nameversions": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.build_summary_stats_line": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.getreportopt": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.pytest_addoption": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.pytest_configure": {
  "lineno": 148,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "_pytest.terminal.pytest_configure.mywriter": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.pytest_report_teststatus": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.terminal.repr_pythonversion": {
  "lineno": 827,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.tmpdir": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.ensuretemp": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.finish": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "lineno": 46,
  "symbols_in_volume": [
   "py.path.local",
   "py.path.local.get_temproot",
   "py.path.local.make_numbered_dir"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "lineno": 31,
  "symbols_in_volume": [
   "py.path.local.make_numbered_dir"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.get_user": {
  "lineno": 78,
  "symbols_in_volume": [
   "getpass.getuser"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.pytest_configure": {
  "lineno": 94,
  "symbols_in_volume": [
   "_pytest.monkeypatch.MonkeyPatch",
   "pytest"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir": {
  "lineno": 115,
  "symbols_in_volume": [
   "pytest.fixture",
   "re.sub"
  ],
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "lineno": 108,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "_pytest.unittest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.unittest.TestCaseFunction": {
  "lineno": 69,
  "symbols_in_volume": [
   "_pytest.python.Function"
  ],
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "lineno": 106,
  "symbols_in_volume": [
   "_pytest.outcomes.fail",
   "_pytest.outcomes.fail.Exception",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._fix_unittest_skip_decorator": {
  "lineno": 83,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._handle_skip": {
  "lineno": 163,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "lineno": 192,
  "symbols_in_volume": [
   "_pytest.python.Function._prunetraceback",
   "traceback"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "lineno": 148,
  "symbols_in_volume": [
   "_pytest.outcomes.xfail",
   "_pytest.outcomes.xfail.Exception",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "lineno": 141,
  "symbols_in_volume": [
   "_pytest.outcomes.skip",
   "_pytest.outcomes.skip.Exception",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase": {
  "lineno": 25,
  "symbols_in_volume": [
   "_pytest.python.Class"
  ],
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "lineno": 42,
  "symbols_in_volume": [
   "_pytest.python.Module",
   "_pytest.python.transfer_markers",
   "sys.modules.get",
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.setup": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "lineno": 245,
  "symbols_in_volume": [
   "twisted.trial.itrial.IReporter",
   "zope.interface.classImplements"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "lineno": 14,
  "symbols_in_volume": [
   "sys.modules.TestCase"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "lineno": 201,
  "symbols_in_volume": [
   "_pytest.config.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "lineno": 215,
  "symbols_in_volume": [
   "_pytest.config.hookimpl",
   "sys.modules"
  ],
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "lineno": 222,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "_pytest.warning_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.warning_types.PytestDeprecationWarning": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.PytestExperimentalApiWarning.simple": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.warning_types.PytestWarning": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warning_types.RemovedInPytest4Warning": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "_pytest.warnings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "_pytest.warnings._issue_config_warning": {
  "lineno": 158,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "_pytest.warnings._setoption": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.warnings.catch_warnings_for_item": {
  "lineno": 61,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "sys.warnoptions",
   "warnings",
   "warnings._setoption",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_addoption": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.warnings.pytest_collection": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_configure": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "_pytest.warnings.pytest_runtest_protocol": {
  "lineno": 132,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.warnings.pytest_terminal_summary": {
  "lineno": 149,
  "symbols_in_volume": [
   "pytest.hookimpl"
  ],
  "type": "function"
 },
 "_pytest.warnings.warning_record_to_str": {
  "lineno": 100,
  "symbols_in_volume": [
   "_pytest.compat.UNICODE_TYPES",
   "_pytest.compat._PY2",
   "_pytest.compat.ascii_escaped",
   "warnings.formatwarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pytest": {
  "lineno": null,
  "symbols_in_volume": [
   "_pytest.compat._setup_collect_fakemodule",
   "_pytest.debugging.pytestPDB.set_trace",
   "pytest.main"
  ],
  "type": "module"
 }
}