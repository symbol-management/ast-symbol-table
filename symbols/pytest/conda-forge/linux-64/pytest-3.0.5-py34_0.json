{
 "*": {
  "data": {
   "imports": [
    "_pytest.vendored_packages.pluggy",
    "pluggy"
   ]
  },
  "type": "star-import"
 },
 "_pytest": {
  "data": {},
  "type": "module"
 },
 "_pytest.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "_pytest._argcomplete": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest._argcomplete.FastFilesCompleter",
    "_pytest._argcomplete.os",
    "_pytest._argcomplete.sys"
   ]
  },
  "type": "module"
 },
 "_pytest._argcomplete.FastFilesCompleter": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "_pytest._argcomplete.FastFilesCompleter.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_pytest._argcomplete.os",
    "glob.glob",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest._argcomplete.FastFilesCompleter.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "_pytest._argcomplete.argcomplete.completers": {
  "data": {
   "shadows": "argcomplete.completers"
  },
  "type": "import"
 },
 "_pytest._argcomplete.filescompleter": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "_pytest._argcomplete.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "_pytest._argcomplete.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest._argcomplete.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest._argcomplete.try_argcomplete": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "_pytest._code": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback": {
  "data": {},
  "type": "module"
 },
 "_pytest._code._py2traceback._format_final_exc_line": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_pytest._code._py2traceback._some_str"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback._some_str": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "str",
    "type",
    "unicode"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.format_exception_only": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "BaseException",
    "Exception",
    "SyntaxError",
    "_pytest._code._py2traceback._format_final_exc_line",
    "_pytest._code._py2traceback.types",
    "bytes",
    "isinstance",
    "issubclass",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest._code._py2traceback.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest._code.compile": {
  "data": {
   "shadows": "compile_"
  },
  "type": "import"
 },
 "_pytest._pluggy": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "_pytest._pluggy.__version__": {
  "data": {
   "shadows": "pluggy.__version__"
  },
  "type": "import"
 },
 "_pytest.assertion": {
  "data": {
   "symbols_in_volume": [
    "_pytest.assertion.util.assertrepr_compare"
   ]
  },
  "type": "module"
 },
 "_pytest.assertion.AssertionState": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "_pytest.assertion.AssertionState.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "_pytest.assertion.DummyRewriteHook": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.DummyRewriteHook.mark_rewrite": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "_pytest.assertion._running_on_ci": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "_pytest.assertion.os",
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.install_importhook": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "SystemError",
    "_pytest.assertion.AssertionState",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.install_importhook.undo": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "_pytest.assertion.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.pytest_addoption": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_assertrepr_compare": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "_pytest.assertion.pytest_collection": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_namespace": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_setup.callbinrepr": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "_pytest.assertion._running_on_ci",
    "_pytest.assertion.py",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_runtest_teardown": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_pytest.assertion.util._reprcompare"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.pytest_sessionfinish": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.register_assert_rewrite": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.assertion.DummyRewriteHook",
    "_pytest.assertion.rewrite.AssertionRewritingHook",
    "_pytest.assertion.sys",
    "isinstance",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite": {
  "data": {
   "shadows": "_pytest.assertion.rewrite"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.AssertionRewriter": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.sys"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.__init__": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewriter",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.assign": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.builtin": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.display": {
  "data": {
   "lineno": 651
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.explanation_param": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.generic_visit": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.helper": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.pop_format_context": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "list",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.push_format_context": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.run": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.py",
    "aliases",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.variable": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Assert": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._NameConstant",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "_pytest.assertion.rewrite.itertools",
    "_pytest.assertion.rewrite.set_location",
    "_pytest.assertion.rewrite.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Attribute": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BinOp": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_BoolOp": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call",
    "enumerate",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_35": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Call_legacy": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Compare": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._ast",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.binop_map",
    "isinstance",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Name": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.ast_Call"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_Starred": {
  "data": {
   "lineno": 856
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewriter.visit_UnaryOp": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.unary_map"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._register_with_pkg_resources": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.assertion.rewrite.pkg_resources",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._should_rewrite": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "fnmatch.fnmatch",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook._warn_already_imported": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.find_module": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "ValueError",
    "_pytest.assertion.rewrite.PYC_TAIL",
    "_pytest.assertion.rewrite._make_rewritten_pyc",
    "_pytest.assertion.rewrite._read_pyc",
    "_pytest.assertion.rewrite._rewrite_test",
    "_pytest.assertion.rewrite.errno",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.os",
    "_pytest.assertion.rewrite.py",
    "_pytest.assertion.rewrite.sys",
    "hasattr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.get_data": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.is_package": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ImportError",
    "_pytest.assertion.rewrite.imp"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.load_module": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.py",
    "_pytest.assertion.rewrite.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.mark_rewrite": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.AssertionRewritingHook.set_session": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.BOM_UTF8": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.N": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_EXT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYC_TAIL": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.PYTEST_TAG": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.REWRITE_NEWLINES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.RN": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite._NameConstant": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.ast",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._ast": {
  "data": {
   "shadows": "_ast"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._call_reprcompare": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util._reprcompare",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_assertmsg": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "t"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_boolop": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "t"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._format_explanation": {
  "data": {
   "shadows": "_pytest.assertion.util.format_explanation"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite._make_rewritten_pyc": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite._write_pyc",
    "_pytest.assertion.rewrite.os",
    "_pytest.assertion.rewrite.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._read_pyc": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "EnvironmentError",
    "Exception",
    "IOError",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "_pytest.assertion.rewrite.types",
    "int",
    "isinstance",
    "len",
    "open",
    "trace"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._rewrite_test": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "EnvironmentError",
    "SyntaxError",
    "UnicodeDecodeError",
    "_pytest.assertion.rewrite.ASCII_IS_DEFAULT_ENCODING",
    "_pytest.assertion.rewrite.BOM_UTF8",
    "_pytest.assertion.rewrite.N",
    "_pytest.assertion.rewrite.REWRITE_NEWLINES",
    "_pytest.assertion.rewrite.RN",
    "_pytest.assertion.rewrite.ast",
    "_pytest.assertion.rewrite.cookie_re",
    "_pytest.assertion.rewrite.rewrite_asserts",
    "compile",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._saferepr": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "repr",
    "repr.replace",
    "t"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._should_repr_global_name": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.py",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite._write_pyc": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "IOError",
    "_pytest.assertion.rewrite.imp",
    "_pytest.assertion.rewrite.marshal",
    "_pytest.assertion.rewrite.struct",
    "_pytest.assertion.rewrite.sys",
    "int",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ast_Call": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.binop_map": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.cookie_re": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.fnmatch": {
  "data": {
   "shadows": "fnmatch.fnmatch"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.impl": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.marshal": {
  "data": {
   "shadows": "marshal"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.rewrite_asserts": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "_pytest.assertion.rewrite.AssertionRewriter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "_fix"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.set_location._fix": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "_fix",
    "_pytest.assertion.rewrite.ast"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.rewrite.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.unary_map": {
  "data": {
   "lineno": 472
  },
  "type": "constant"
 },
 "_pytest.assertion.rewrite.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.rewrite.ver": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "_pytest.assertion.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.assertion.util": {
  "data": {
   "shadows": "_pytest.assertion.util"
  },
  "type": "import"
 },
 "_pytest.assertion.util.BuiltinAssertionError": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "_pytest.assertion.util.Sequence": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "_pytest.assertion.util._compare_eq_dict": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "_pytest.assertion.util.pprint",
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "dict",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_iterable": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util.difflib",
    "_pytest.assertion.util.pprint",
    "_pytest.assertion.util.u",
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_sequence": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._compare_eq_set": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._diff_text": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "difflib.ndiff",
    "isinstance",
    "len",
    "min",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._format_lines": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_pytest.assertion.util.u",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._notin_text": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "_pytest.assertion.util._diff_text",
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.assertion.util._reprcompare": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.assertion.util._split_explanation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_pytest.assertion.util.u"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "_pytest.assertion.util._compare_eq_dict",
    "_pytest.assertion.util._compare_eq_iterable",
    "_pytest.assertion.util._compare_eq_sequence",
    "_pytest.assertion.util._compare_eq_set",
    "_pytest.assertion.util._diff_text",
    "_pytest.assertion.util._notin_text",
    "_pytest.assertion.util.basestring",
    "_pytest.assertion.util.ecu",
    "_pytest.assertion.util.py",
    "_pytest.assertion.util.u",
    "collections.Sequence",
    "dict",
    "frozenset",
    "int",
    "isdict",
    "isinstance",
    "isiterable",
    "issequence",
    "isset",
    "istext",
    "len",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.assertrepr_compare.isiterable": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "istext",
    "iter"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.basestring": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "_pytest.assertion.util.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "_pytest.assertion.util.ecu": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.assertion.util.u"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.format_explanation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_pytest.assertion.util._format_lines",
    "_pytest.assertion.util._split_explanation",
    "_pytest.assertion.util.ecu",
    "_pytest.assertion.util.u"
   ]
  },
  "type": "function"
 },
 "_pytest.assertion.util.ndiff": {
  "data": {
   "shadows": "difflib.ndiff"
  },
  "type": "import"
 },
 "_pytest.assertion.util.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "_pytest.assertion.util.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.assertion.util.u": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "_pytest.cacheprovider": {
  "data": {},
  "type": "module"
 },
 "_pytest.cacheprovider.Cache": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.cacheprovider.Cache.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache._getvaluepath": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.get": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.cacheprovider.json"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.makedir": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "os.path.altsep",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.Cache.set": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_pytest.cacheprovider.json",
    "_pytest.cacheprovider.py"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin": {
  "data": {
   "lineno": 90
  },
  "type": "class"
 },
 "_pytest.cacheprovider.LFPlugin.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_collectreport": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_report_header": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_runtest_logreport": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "_pytest.cacheprovider.LFPlugin.pytest_sessionfinish": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider._altsep": {
  "data": {
   "shadows": "os.path.altsep"
  },
  "type": "import"
 },
 "_pytest.cacheprovider._sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.cache": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.cacheshow": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "_pytest.cacheprovider.py",
    "object",
    "pprint.pprint",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.cacheprovider.pytest_addoption": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_cmdline_main": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_configure": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_pytest.cacheprovider.Cache",
    "_pytest.cacheprovider.LFPlugin",
    "_pytest.cacheprovider.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.pytest_report_header": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "_pytest.cacheprovider.py"
   ]
  },
  "type": "function"
 },
 "_pytest.cacheprovider.wrap_session": {
  "data": {
   "shadows": "_pytest.main.wrap_session"
  },
  "type": "import"
 },
 "_pytest.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest.compat._PY3",
    "_pytest.compat.inspect",
    "_pytest.compat.re",
    "_pytest.compat.sys",
    "bytes",
    "getattr",
    "hasattr",
    "object",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "_pytest.compat.NOTSET": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "_pytest.compat.NoneType": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "_pytest.compat.REGEX_TYPE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "_pytest.compat.STRING_TYPES": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "_pytest.compat._PY2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_pytest.compat._PY3": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "_pytest.compat._escape_strings": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._format_args": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_pytest.compat.inspect"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._is_unittest_unexpected_success_a_failure": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_pytest.compat.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.compat._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.compat.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "_pytest.compat.enum": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.compat.exc_clear": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "_pytest.compat.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.compat.get_real_func": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "_pytest.compat.functools",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfslineno": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_pytest.compat._pytest",
    "_pytest.compat.get_real_func",
    "hasattr",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getfuncargnames": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_pytest.compat._pytest",
    "_pytest.compat.functools",
    "_pytest.compat.inspect",
    "_pytest.compat.num_mock_patch_args",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getimfunc": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.getlocation": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "_pytest.compat.inspect",
    "_pytest.compat.py"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.compat.is_generator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.compat._pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isclass": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "_pytest.compat.types",
    "isinstance",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.isfunction": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "_pytest.compat.num_mock_patch_args": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_pytest.compat.sys",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.compat.safe_getattr": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "object"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.safe_str": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "UnicodeError",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.compat.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "_pytest.deprecated": {
  "data": {},
  "type": "module"
 },
 "_pytest.deprecated.FUNCARG_PREFIX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "_pytest.deprecated.GETFUNCARGVALUE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "_pytest.deprecated.MAIN_STR_ARGS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "_pytest.deprecated.RESULT_LOG": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.deprecated.SETUP_CFG_PYTEST": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "_pytest.deprecated.YIELD_TESTS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "_pytest.freeze_support": {
  "data": {},
  "type": "module"
 },
 "_pytest.freeze_support._iter_all_modules": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_pytest.freeze_support.os",
    "_pytest.freeze_support.pkgutil",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.freeze_support.freeze_includes": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_pytest.freeze_support._iter_all_modules",
    "_pytest.freeze_support._pytest",
    "_pytest.freeze_support.py",
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.freeze_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.freeze_support.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.freeze_support.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.freeze_support.pytest_namespace": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "_pytest.helpconfig": {
  "data": {},
  "type": "module"
 },
 "_pytest.helpconfig.conftest_options": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "_pytest.helpconfig.getpluginversioninfo": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "getattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.helpconfig.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.helpconfig.pytest_addoption": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_main": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_pytest.helpconfig.getpluginversioninfo",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.showhelp",
    "_pytest.helpconfig.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_pytest.helpconfig.os",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "_pytest.helpconfig.sys",
    "map",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_cmdline_parse.unset_tracing": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_pytest.helpconfig.sys",
    "undo_tracing"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.pytest_report_header": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_pytest.helpconfig.getpluginversioninfo",
    "_pytest.helpconfig.py",
    "_pytest.helpconfig.pytest",
    "hasattr",
    "repr"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.showhelp": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "help",
    "type",
    "vars"
   ]
  },
  "type": "function"
 },
 "_pytest.helpconfig.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.hookspec": {
  "data": {
   "symbols_in_volume": [
    "_pytest._pluggy.HookspecMarker"
   ]
  },
  "type": "module"
 },
 "_pytest.hookspec.HookspecMarker": {
  "data": {
   "shadows": "_pytest._pluggy.HookspecMarker"
  },
  "type": "import"
 },
 "_pytest.hookspec.hookspec": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "_pytest.hookspec.pytest_addhooks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_addoption": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_assertrepr_compare": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_main": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_parse": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_cmdline_preparse": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_directory": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collect_file": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_finish": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collection_modifyitems": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectreport": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_collectstart": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_configure": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_deselected": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_doctest_prepare_content": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_enter_pdb": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_exception_interact": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_post_finalizer": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_fixture_setup": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_generate_tests": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_ignore_collect": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_internalerror": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemcollected": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_itemstart": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_load_initial_conftests": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_logwarning": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_collect_report": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_make_parametrize_id": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_namespace": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_plugin_registered": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pycollect_makemodule": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_pyfunc_call": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_header": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_report_teststatus": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_call": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logreport": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_logstart": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_makereport": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_protocol": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_setup": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtest_teardown": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_runtestloop": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "_pytest.hookspec.hookspec"
   ]
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionfinish": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_sessionstart": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_terminal_summary": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "_pytest.hookspec.pytest_unconfigure": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "_pytest.junitxml": {
  "data": {
   "symbols_in_volume": [
    "_pytest.junitxml._legal_chars",
    "_pytest.junitxml._legal_ranges",
    "_pytest.junitxml._legal_xml_re",
    "_pytest.junitxml.re",
    "_pytest.junitxml.sys",
    "_pytest.junitxml.unichr",
    "_pytest.junitxml.unicode",
    "chr",
    "int",
    "str"
   ]
  },
  "type": "module"
 },
 "_pytest.junitxml.Junit": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml.LogXML.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "_pytest.junitxml.os",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._get_global_properties_node": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML._opentestcase": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_global_property": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.add_stats": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.finalize": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.node_reporter": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "_pytest.junitxml._NodeReporter",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_collectreport": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_internalerror": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_runtest_logreport": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionfinish": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.os",
    "_pytest.junitxml.time",
    "codecs.open"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_sessionstart": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "_pytest.junitxml.time"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.pytest_terminal_summary": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "_pytest.junitxml.LogXML.update_testcase_duration": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.junitxml._NodeReporter.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._add_simple": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "kind"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter._write_captured_output": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "getattr",
    "tag"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.add_property": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_error": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_collect_skipped": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_error": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_failure": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "_pytest.junitxml.unicode",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_pass": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.append_skipped": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit",
    "_pytest.junitxml.bin_xml_escape",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.finalize": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.make_properties_node": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.record_testreport": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_pytest.junitxml.bin_xml_escape",
    "_pytest.junitxml.mangle_test_address"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._NodeReporter.to_xml": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_pytest.junitxml.Junit"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml._legal_chars": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_ranges": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "_pytest.junitxml._legal_xml_re": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "_pytest.junitxml._py_ext_re": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "_pytest.junitxml.bin_xml_escape": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_pytest.junitxml.illegal_xml_re",
    "_pytest.junitxml.py"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.bin_xml_escape.repl": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_pytest.junitxml.unicode",
    "ord"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.filename_arg": {
  "data": {
   "shadows": "_pytest.config.filename_arg"
  },
  "type": "import"
 },
 "_pytest.junitxml.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.junitxml.illegal_xml_re": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "_pytest.junitxml.long": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "_pytest.junitxml.mangle_test_address": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.junitxml._py_ext_re"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.open": {
  "data": {
   "shadows": "codecs.open"
  },
  "type": "import"
 },
 "_pytest.junitxml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.junitxml.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.junitxml.pytest_addoption": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "_pytest.config.filename_arg",
    "_pytest.junitxml.functools"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_configure": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "_pytest.junitxml.LogXML",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.pytest_unconfigure": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.junitxml.record_xml_property": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "_pytest.junitxml.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.junitxml.record_xml_property.add_property_noop": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "_pytest.junitxml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.junitxml.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.junitxml.unichr": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.junitxml.unicode": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "_pytest.main": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "_pytest.main._pytest",
    "_pytest.main.py"
   ]
  },
  "type": "module"
 },
 "_pytest.main.Collector": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "_pytest.main.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Collector.CollectError": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Collector._memocollect": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Collector._prunetraceback": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "_pytest.main.tracebackcutdir",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Collector.collect": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Collector.repr_failure": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.EXIT_INTERNALERROR": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_INTERRUPTED": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_OK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_TESTSFAILED": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "_pytest.main.EXIT_USAGEERROR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "_pytest.main.FSCollector": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "_pytest.main.Collector"
   ]
  },
  "type": "class"
 },
 "_pytest.main.FSCollector.__init__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "_pytest.main.FSCollector",
    "_pytest.main.os",
    "_pytest.main.py",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.main.FSCollector._makeid": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "_pytest.main.os"
   ]
  },
  "type": "function"
 },
 "_pytest.main.FSHookProxy": {
  "data": {
   "lineno": 182
  },
  "type": "class"
 },
 "_pytest.main.FSHookProxy.__getattr__": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "_pytest.main.FSHookProxy.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "_pytest.main.File": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "_pytest.main.FSCollector"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Interrupted": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Item": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "_pytest.main.Node"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Item.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "_pytest.main.Item",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Item.add_report_section": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "_pytest.main.Item.location": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Item.reportinfo": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "_pytest.main.MappingMixin": {
  "data": {
   "shadows": "UserDict.DictMixin"
  },
  "type": "import"
 },
 "_pytest.main.MarkDecorator": {
  "data": {
   "shadows": "_pytest.mark.MarkDecorator"
  },
  "type": "import"
 },
 "_pytest.main.MarkInfo": {
  "data": {
   "shadows": "_pytest.mark.MarkInfo"
  },
  "type": "import"
 },
 "_pytest.main.NoMatch": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Node": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "_pytest.main.compatproperty",
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Node.__hash__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.__init__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "_pytest.main.NodeKeywords",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.__repr__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node._getcustomclass": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "_pytest.main.py",
    "_pytest.main.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node._makeid": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "_pytest.main.Node._memoizedcall": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "_pytest.main.py",
    "_pytest.main.sys",
    "function",
    "getattr",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node._prunetraceback": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "_pytest.main.Node._repr_failure_py": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "OSError",
    "_pytest.main._pytest",
    "_pytest.main.os",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.add_marker": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "_pytest.main.py",
    "_pytest.mark.MarkDecorator",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.addfinalizer": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "_pytest.main.Node.get_marker": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "_pytest.mark.MarkDecorator",
    "_pytest.mark.MarkInfo",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.getparent": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.ihook": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.listchain": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "_pytest.main.Node.listextrakeywords": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.listnames": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "_pytest.main.Node.nodeid": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Node.setup": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "_pytest.main.Node.teardown": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "_pytest.main.Node.warn": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "UserDict.DictMixin"
   ]
  },
  "type": "class"
 },
 "_pytest.main.NodeKeywords.__delitem__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__getitem__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__init__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__iter__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "iter",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__len__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__repr__": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.__setitem__": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "_pytest.main.NodeKeywords.keys": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "_pytest.main.FSCollector",
    "_pytest.main.Interrupted"
   ]
  },
  "type": "class"
 },
 "_pytest.main.Session.__init__": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "_pytest.main.FSCollector",
    "_pytest.main.py"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._collect": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "_pytest.main.Session._collectfile": {
  "data": {
   "lineno": 656
  },
  "type": "function"
 },
 "_pytest.main.Session._makeid": {
  "data": {
   "lineno": 550
  },
  "type": "function"
 },
 "_pytest.main.Session._matchnodes": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "_pytest.main.pytest",
    "_pytest.runner.collect_one_node",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._parsearg": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "_pytest.main.os",
    "_pytest.main.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._perform_collect": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "_pytest.main.pytest",
    "_pytest.runner.collect_one_node",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session._recurse": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "_pytest.main.Session._tryconvertpyarg": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "_pytest.main.os",
    "_pytest.main.pkgutil"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.collect": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "_pytest.main.sys",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.genitems": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "_pytest.main.pytest",
    "_pytest.runner.collect_one_node",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.gethookproxy": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "_pytest.main.FSHookProxy"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.isinitpath": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "_pytest.main.Session.matchnodes": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "_pytest.main.NoMatch",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.perform_collect": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_collectstart": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "_pytest.main.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.main.Session.pytest_runtest_logreport": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "_pytest.main.pytest",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main._main": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_TESTSFAILED"
   ]
  },
  "type": "function"
 },
 "_pytest.main._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "_pytest.main._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.main.collect_one_node": {
  "data": {
   "shadows": "_pytest.runner.collect_one_node"
  },
  "type": "import"
 },
 "_pytest.main.compatproperty": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.main.compatproperty.fget": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "_pytest.main.pytest",
    "_pytest.main.warnings",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.main.directory_arg": {
  "data": {
   "shadows": "_pytest.config.directory_arg"
  },
  "type": "import"
 },
 "_pytest.main.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "_pytest.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.main.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "_pytest.main.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.main.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.main.pytest_addoption": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.config.directory_arg",
    "_pytest.main.functools",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_cmdline_main": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_pytest.main.wrap_session"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_collection": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "_pytest.main.pytest_configure": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_pytest.main.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_ignore_collect": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "_pytest.main.py"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_namespace": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "_pytest.main.pytest_runtestloop": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.main.tracebackcutdir": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "_pytest.main.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "_pytest.main.wrap_session": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "SystemExit",
    "_pytest.main.EXIT_INTERNALERROR",
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main.Session",
    "_pytest.main._pytest",
    "_pytest.main.pytest",
    "_pytest.main.sys",
    "doit",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark": {
  "data": {
   "symbols_in_volume": [
    "_pytest.mark.pytest_cmdline_main"
   ]
  },
  "type": "module"
 },
 "_pytest.mark.KeywordMapping": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "_pytest.mark.KeywordMapping.__getitem__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "_pytest.mark.KeywordMapping.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator": {
  "data": {
   "lineno": 207
  },
  "type": "class"
 },
 "_pytest.mark.MarkDecorator.__call__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "_pytest.mark.MarkInfo",
    "_pytest.mark.inspect",
    "_pytest.mark.istestfunc",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__init__": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.__repr__": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "_pytest.mark.MarkDecorator.markname": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkGenerator": {
  "data": {
   "lineno": 170
  },
  "type": "class"
 },
 "_pytest.mark.MarkGenerator.__getattr__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.mark.MarkDecorator",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkGenerator._check": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "AttributeError",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo": {
  "data": {
   "lineno": 303
  },
  "type": "class"
 },
 "_pytest.mark.MarkInfo.__init__": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo.__iter__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "_pytest.mark.MarkInfo"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo.__repr__": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "_pytest.mark.MarkInfo.add": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "_pytest.mark.MarkMapping": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "_pytest.mark.MarkMapping.__getitem__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "_pytest.mark.MarkMapping.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.MarkerError": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.mark._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.mark.extract_argvalue": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "_pytest.mark.MarkDecorator",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.mark.istestfunc": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.matchkeyword": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "_pytest.mark.KeywordMapping",
    "_pytest.mark.pytest",
    "eval",
    "hasattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.matchmark": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "_pytest.mark.MarkMapping",
    "eval"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.mark.pytest_addoption": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "_pytest.mark.pytest_cmdline_main": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "_pytest.mark.pytest_collection_modifyitems": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_pytest.mark.matchkeyword",
    "_pytest.mark.matchmark"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_configure": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_pytest.mark.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.mark.pytest_namespace": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_pytest.mark.MarkGenerator"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch": {
  "data": {
   "symbols_in_volume": [
    "_pytest.monkeypatch.Notset",
    "_pytest.monkeypatch.re"
   ]
  },
  "type": "module"
 },
 "_pytest.monkeypatch.MonkeyPatch": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "_pytest.monkeypatch.MonkeyPatch.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.chdir": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delattr": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.notset",
    "delattr",
    "getattr",
    "hasattr",
    "isinstance",
    "py.builtin._basestring"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delenv": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.delitem": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setattr": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "_pytest.monkeypatch.derive_importpath",
    "_pytest.monkeypatch.inspect",
    "_pytest.monkeypatch.notset",
    "getattr",
    "isinstance",
    "py.builtin._basestring",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setenv": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "_pytest.monkeypatch.os",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.setitem": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_pytest.monkeypatch.notset"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.syspath_prepend": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "_pytest.monkeypatch.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.MonkeyPatch.undo": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "KeyError",
    "_pytest.monkeypatch.notset",
    "_pytest.monkeypatch.os",
    "_pytest.monkeypatch.sys",
    "delattr",
    "reversed",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.Notset": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "_pytest.monkeypatch.Notset.__repr__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "_pytest.monkeypatch.RE_IMPORT_ERROR_NAME": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "_pytest.monkeypatch._basestring": {
  "data": {
   "shadows": "py.builtin._basestring"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.annotated_getattr": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.derive_importpath": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "_pytest.monkeypatch.annotated_getattr",
    "_pytest.monkeypatch.resolve",
    "isinstance",
    "py.builtin._basestring"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.monkeypatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "_pytest.monkeypatch.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.notset": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "_pytest.monkeypatch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.monkeypatch.resolve": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__import__",
    "_pytest.monkeypatch.annotated_getattr",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.monkeypatch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pastebin": {
  "data": {},
  "type": "module"
 },
 "_pytest.pastebin._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.pastebin.create_new_paste": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "_pytest.pastebin.re",
    "_pytest.pastebin.sys",
    "urllib.parse.urlencode",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.pastebin.pytest_addoption": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_pytest.pastebin.pytest",
    "_pytest.pastebin.tempfile"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_configure.tee_write": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_pytest.pastebin.py",
    "oldwrite"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_terminal_summary": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.pastebin.create_new_paste",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.pytest_unconfigure": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_pytest.pastebin.create_new_paste",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.pastebin.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.pastebin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.pastebin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "_pytest.pastebin.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "_pytest.resultlog": {
  "data": {},
  "type": "module"
 },
 "_pytest.resultlog.RESULT_LOG": {
  "data": {
   "shadows": "_pytest.deprecated.RESULT_LOG"
  },
  "type": "import"
 },
 "_pytest.resultlog.ResultLog": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.resultlog.ResultLog.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.log_outcome": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_collectreport": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_internalerror": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "_pytest.resultlog.py",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.pytest_runtest_logreport": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.ResultLog.write_log_entry": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_pytest.resultlog.py"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.generic_path": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "_pytest.resultlog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "_pytest.resultlog.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.resultlog.pytest_addoption": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_configure": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_pytest.deprecated.RESULT_LOG",
    "_pytest.resultlog.ResultLog",
    "_pytest.resultlog.os",
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "_pytest.resultlog.pytest_unconfigure": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner": {
  "data": {
   "symbols_in_volume": [
    "_pytest.runner.Exit",
    "_pytest.runner.Failed",
    "_pytest.runner.Skipped",
    "_pytest.runner.exit",
    "_pytest.runner.fail",
    "_pytest.runner.skip"
   ]
  },
  "type": "module"
 },
 "_pytest.runner.BaseReport": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.BaseReport.__init__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.capstderr": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.capstdout": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.fspath": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.get_sections": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.longreprtext": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "_pytest.runner.py",
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.BaseReport.toterminal": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "_pytest.runner.getslaveinfoline",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CallInfo": {
  "data": {
   "lineno": 153
  },
  "type": "class"
 },
 "_pytest.runner.CallInfo.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "_pytest._code.code.ExceptionInfo",
    "func",
    "time.time"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CallInfo.__repr__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CollectErrorRepr": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "_pytest._code.code.TerminalRepr"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.CollectErrorRepr.__init__": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "_pytest.runner.CollectErrorRepr.toterminal": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "_pytest.runner.CollectReport": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "_pytest.runner.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.CollectReport.__init__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CollectReport.__repr__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.CollectReport.location": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.ExceptionInfo": {
  "data": {
   "shadows": "_pytest._code.code.ExceptionInfo"
  },
  "type": "import"
 },
 "_pytest.runner.Exit": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.Exit.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "KeyboardInterrupt.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.Failed": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "_pytest.runner.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.NodeInfo": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "_pytest.runner.NodeInfo.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "_pytest.runner.OutcomeException": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.OutcomeException.__init__": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.OutcomeException.__repr__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "_pytest.runner.py",
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.SetupState.__init__": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._callfinalizers": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "Exception",
    "_pytest.runner.py",
    "_pytest.runner.sys",
    "fin"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._pop_and_teardown": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_towards": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState._teardown_with_finalization": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.addfinalizer": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "_pytest.runner.py",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.prepare": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Exception",
    "_pytest.runner.py",
    "_pytest.runner.sys",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_all": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.SetupState.teardown_exact": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "_pytest.runner.Skipped": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "_pytest.runner.OutcomeException"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.Skipped.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "_pytest.runner.OutcomeException"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.TeardownErrorReport": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "_pytest.runner.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.TeardownErrorReport.__init__": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "_pytest.runner.TerminalRepr": {
  "data": {
   "shadows": "_pytest._code.code.TerminalRepr"
  },
  "type": "import"
 },
 "_pytest.runner.TestReport": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "_pytest.runner.BaseReport"
   ]
  },
  "type": "class"
 },
 "_pytest.runner.TestReport.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.TestReport.__repr__": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "_pytest.runner.bdb": {
  "data": {
   "shadows": "bdb"
  },
  "type": "import"
 },
 "_pytest.runner.call_and_report": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_pytest.runner.call_runtest_hook",
    "_pytest.runner.check_interactive_exception"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.call_runtest_hook": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_pytest.runner.CallInfo",
    "getattr",
    "ihook"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.check_interactive_exception": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "_pytest.runner.bdb",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.collect_one_node": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "_pytest.runner.check_interactive_exception",
    "ihook",
    "ihook.pytest_collectstart",
    "ihook.pytest_exception_interact",
    "ihook.pytest_make_collect_report"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.exit": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "_pytest.runner.Exit"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.fail": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "_pytest.runner.Failed"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.getslaveinfoline": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.importorskip": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "_pytest.runner.Skipped",
    "_pytest.runner.sys",
    "compile",
    "getattr",
    "pkg_resources.parse_version"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.nose": {
  "data": {
   "shadows": "_pytest.nose"
  },
  "type": "import"
 },
 "_pytest.runner.pv": {
  "data": {
   "shadows": "pkg_resources.parse_version"
  },
  "type": "import"
 },
 "_pytest.runner.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.runner.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.runner.pytest_addoption": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_make_collect_report": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_pytest.nose.get_skip_exceptions",
    "_pytest.runner.CallInfo",
    "_pytest.runner.CollectErrorRepr",
    "_pytest.runner.CollectReport",
    "getattr",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_namespace": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "_pytest.runner.pytest_report_teststatus": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_call": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception",
    "_pytest.runner.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_makereport": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "_pytest._code.code.ExceptionInfo",
    "_pytest.runner.TestReport",
    "_pytest.runner.pytest",
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_protocol": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_pytest.runner.runtestprotocol"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_setup": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "_pytest.runner.pytest_runtest_teardown": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "_pytest.runner.pytest_sessionfinish": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "_pytest.runner.pytest_sessionstart": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "_pytest.runner.SetupState"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.pytest_terminal_summary": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.runtestprotocol": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_pytest.runner.call_and_report",
    "_pytest.runner.show_test_item",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.show_test_item": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.skip": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "_pytest.runner.Skipped"
   ]
  },
  "type": "function"
 },
 "_pytest.runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.runner.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "_pytest.setupplan": {
  "data": {},
  "type": "module"
 },
 "_pytest.setupplan.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.setupplan.pytest_addoption": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_cmdline_main": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.setupplan.pytest_fixture_setup": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_pytest.setupplan.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal": {
  "data": {},
  "type": "module"
 },
 "_pytest.terminal.EXIT_INTERRUPTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_INTERRUPTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_NOTESTSCOLLECTED": {
  "data": {
   "shadows": "_pytest.main.EXIT_NOTESTSCOLLECTED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_OK": {
  "data": {
   "shadows": "_pytest.main.EXIT_OK"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_TESTSFAILED": {
  "data": {
   "shadows": "_pytest.main.EXIT_TESTSFAILED"
  },
  "type": "import"
 },
 "_pytest.terminal.EXIT_USAGEERROR": {
  "data": {
   "shadows": "_pytest.main.EXIT_USAGEERROR"
  },
  "type": "import"
 },
 "_pytest.terminal.TerminalReporter": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "_pytest.terminal.TerminalReporter.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_pytest.terminal.getreportopt",
    "_pytest.terminal.py",
    "_pytest.terminal.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getcrashline": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "AttributeError",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._getfailureheadline": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "mkrel"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._locationline.mkrel": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._outrep_summary": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._printcollecteditems": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter._report_keyboardinterrupt": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.ensure_newline": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.getreports": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.hasopt": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.line": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.print_teardown_sections": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_finish": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collection_modifyitems": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_collectreport": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "_pytest.terminal.pytest",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_deselected": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_internalerror": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_pytest.terminal.py"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_keyboard_interrupt": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_logwarning": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_pytest.terminal.WarningReport",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_plugin_registered": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_report_header": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "_pytest.terminal._plugin_nameversions"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logreport": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_runtest_logstart": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionfinish": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "_pytest.main.EXIT_INTERRUPTED",
    "_pytest.main.EXIT_NOTESTSCOLLECTED",
    "_pytest.main.EXIT_OK",
    "_pytest.main.EXIT_TESTSFAILED",
    "_pytest.main.EXIT_USAGEERROR",
    "_pytest.terminal.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_sessionstart": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "_pytest._pluggy.__version__",
    "_pytest.terminal.flatten",
    "_pytest.terminal.platform",
    "_pytest.terminal.py",
    "_pytest.terminal.pytest",
    "_pytest.terminal.sys",
    "_pytest.terminal.time",
    "getattr",
    "hasattr",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.pytest_unconfigure": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.report_collect": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.rewrite": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.section": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_deselected": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_errors": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_failures": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_passes": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_stats": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "_pytest.terminal.build_summary_stats_line",
    "_pytest.terminal.time"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.summary_warnings": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_ensure_prefix": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_fspath_result": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_line": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "_pytest.terminal.py"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.TerminalReporter.write_sep": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "_pytest.terminal.WarningReport": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "_pytest.terminal.WarningReport.__init__": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "_pytest.terminal._plugin_nameversions": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "_pytest.terminal._pytest.config": {
  "data": {
   "shadows": "_pytest.config"
  },
  "type": "import"
 },
 "_pytest.terminal.build_summary_stats_line": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.flatten": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.getreportopt": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "_pytest.terminal.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "_pytest.terminal.pluggy": {
  "data": {
   "shadows": "_pytest._pluggy"
  },
  "type": "import"
 },
 "_pytest.terminal.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.terminal.pytest_addoption": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_pytest.terminal.TerminalReporter",
    "_pytest.terminal.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_configure.mywriter": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.pytest_report_teststatus": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "_pytest.terminal.repr_pythonversion": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_pytest.terminal.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.terminal.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.terminal.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "_pytest.tmpdir": {
  "data": {
   "symbols_in_volume": [
    "_pytest.tmpdir.TempdirFactory"
   ]
  },
  "type": "module"
 },
 "_pytest.tmpdir.MonkeyPatch": {
  "data": {
   "shadows": "_pytest.monkeypatch.MonkeyPatch"
  },
  "type": "import"
 },
 "_pytest.tmpdir.TempdirFactory": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "_pytest.tmpdir.TempdirFactory.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.ensuretemp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.finish": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.getbasetemp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.tmpdir.get_user",
    "_pytest.tmpdir.py"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirFactory.mktemp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_pytest.tmpdir.py"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.TempdirHandler": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "_pytest.tmpdir.get_user": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "_pytest.tmpdir.getpass"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "_pytest.tmpdir.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.tmpdir.pytest_configure": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_pytest.monkeypatch.MonkeyPatch",
    "_pytest.tmpdir.TempdirFactory",
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "_pytest.tmpdir.tmpdir": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest",
    "_pytest.tmpdir.re",
    "_pytest.tmpdir.tmpdir_factory",
    "len"
   ]
  },
  "type": "function"
 },
 "_pytest.tmpdir.tmpdir_factory": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "_pytest.tmpdir.pytest"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest": {
  "data": {},
  "type": "module"
 },
 "_pytest.unittest.IReporter": {
  "data": {
   "shadows": "twisted.trial.itrial.IReporter"
  },
  "type": "import"
 },
 "_pytest.unittest.MarkEvaluator": {
  "data": {
   "shadows": "_pytest.skipping.MarkEvaluator"
  },
  "type": "import"
 },
 "_pytest.unittest.TestCaseFunction": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_pytest.unittest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.TestCaseFunction._addexcinfo": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "TypeError",
    "_pytest.unittest.pytest",
    "_pytest.unittest.traceback",
    "getattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._fix_unittest_skip_decorator": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_pytest.unittest.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction._prunetraceback": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_pytest.unittest.pytest",
    "_pytest.unittest.traceback"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addError": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addExpectedFailure": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "_pytest.unittest.pytest",
    "_pytest.unittest.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addFailure": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSkip": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_pytest.skipping.MarkEvaluator",
    "_pytest.unittest.pytest",
    "_pytest.unittest.sys"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addSuccess": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.addUnexpectedSuccess": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.runtest": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.setup": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.startTest": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.stopTest": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "_pytest.unittest.TestCaseFunction.teardown": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.TestLoader": {
  "data": {
   "shadows": "unittest.TestLoader"
  },
  "type": "import"
 },
 "_pytest.unittest.UnitTestCase": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_pytest.unittest.pytest"
   ]
  },
  "type": "class"
 },
 "_pytest.unittest.UnitTestCase.collect": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_pytest.python.transfer_markers",
    "_pytest.unittest.TestCaseFunction",
    "_pytest.unittest.pytest",
    "_pytest.unittest.sys",
    "getattr",
    "unittest.TestLoader"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.UnitTestCase.setup": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_pytest.unittest.UnitTestCase",
    "getattr",
    "setup",
    "super"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest._pytest._code": {
  "data": {
   "shadows": "_pytest._code"
  },
  "type": "import"
 },
 "_pytest.unittest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "_pytest.unittest.check_testcase_implements_trial_reporter": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "_pytest.unittest.TestCaseFunction",
    "twisted.trial.itrial.IReporter",
    "zope.interface.classImplements"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.classImplements": {
  "data": {
   "shadows": "zope.interface.classImplements"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "_pytest.unittest.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "_pytest.unittest.UnitTestCase",
    "_pytest.unittest.sys",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_makereport": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "AttributeError",
    "_pytest.unittest.TestCaseFunction",
    "_pytest.unittest.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Failure__init__",
    "_pytest.unittest.TestCaseFunction",
    "_pytest.unittest.check_testcase_implements_trial_reporter",
    "_pytest.unittest.pytest",
    "_pytest.unittest.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.pytest_runtest_protocol.excstore": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "Failure__init__",
    "TypeError",
    "_pytest.unittest.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "_pytest.unittest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "_pytest.unittest.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "_pytest.unittest.transfer_markers": {
  "data": {
   "shadows": "_pytest.python.transfer_markers"
  },
  "type": "import"
 },
 "_pytest.vendored_packages": {
  "data": {},
  "type": "module"
 },
 "pytest": {
  "data": {
   "symbols_in_volume": [
    "SystemExit",
    "__name__",
    "_pytest.config._preloadplugins",
    "pytest.pytest"
   ]
  },
  "type": "module"
 },
 "pytest.UsageError": {
  "data": {
   "shadows": "_pytest.config.UsageError"
  },
  "type": "import"
 },
 "pytest.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pytest.__version__": {
  "data": {
   "shadows": "_pytest.__version__"
  },
  "type": "import"
 },
 "pytest._preloadplugins": {
  "data": {
   "shadows": "_pytest.config._preloadplugins"
  },
  "type": "import"
 },
 "pytest.cmdline": {
  "data": {
   "shadows": "_pytest.config.cmdline"
  },
  "type": "import"
 },
 "pytest.hookimpl": {
  "data": {
   "shadows": "_pytest.config.hookimpl"
  },
  "type": "import"
 },
 "pytest.hookspec": {
  "data": {
   "shadows": "_pytest.config.hookspec"
  },
  "type": "import"
 },
 "pytest.main": {
  "data": {
   "shadows": "_pytest.config.main"
  },
  "type": "import"
 },
 "pytest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 }
}