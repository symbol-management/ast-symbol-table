{
 "point_cloud_utils": {
  "data": {},
  "type": "module"
 },
 "point_cloud_utils.sinkhorn": {
  "data": {},
  "type": "module"
 },
 "point_cloud_utils.sinkhorn.chamfer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "numpy.newaxis",
    "point_cloud_utils.sinkhorn.pairwise_distances"
   ]
  },
  "type": "function"
 },
 "point_cloud_utils.sinkhorn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "point_cloud_utils.sinkhorn.pairwise_distances": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.newaxis",
    "numpy.power",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "point_cloud_utils.sinkhorn.sinkhorn": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.abs",
    "numpy.exp",
    "numpy.expand_dims",
    "numpy.log",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.transpose",
    "numpy.zeros_like",
    "range",
    "stabilized_log_sum_exp",
    "str"
   ]
  },
  "type": "function"
 },
 "point_cloud_utils.sinkhorn.sinkhorn.stabilized_log_sum_exp": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.test_examples": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tests.test_examples.unittest"
   ]
  },
  "type": "module"
 },
 "tests.test_examples.TestDenseBindings": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "tests.test_examples.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_examples.TestDenseBindings.setUp": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "tests.test_examples.os"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.TestDenseBindings.test_batched_chamfer": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.random.rand",
    "point_cloud_utils.chamfer"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.TestDenseBindings.test_batched_sinkhorn": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.rand",
    "point_cloud_utils.pairwise_distances",
    "point_cloud_utils.sinkhorn"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.TestDenseBindings.test_chamfer": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.random.rand",
    "point_cloud_utils.chamfer"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.TestDenseBindings.test_hausdorff_and_nearest_neighbor": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "max",
    "numpy.random.rand",
    "numpy.sum",
    "point_cloud_utils.hausdorff",
    "point_cloud_utils.point_cloud_distance"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.TestDenseBindings.test_lloyd_relaxation": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "point_cloud_utils.lloyd_2d",
    "point_cloud_utils.lloyd_3d",
    "point_cloud_utils.read_obj",
    "point_cloud_utils.sample_mesh_lloyd",
    "tests.test_examples.os"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.TestDenseBindings.test_poisson_disk_sampling": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "point_cloud_utils.read_obj",
    "point_cloud_utils.sample_mesh_poisson_disk",
    "point_cloud_utils.sample_mesh_random",
    "tests.test_examples.os"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.TestDenseBindings.test_sinkhorn": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.rand",
    "point_cloud_utils.pairwise_distances",
    "point_cloud_utils.sinkhorn"
   ]
  },
  "type": "function"
 },
 "tests.test_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_examples.pcu": {
  "data": {
   "shadows": "point_cloud_utils"
  },
  "type": "import"
 },
 "tests.test_examples.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tests.test_examples.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}