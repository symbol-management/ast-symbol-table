{
 "sklego": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.base.Clusterer": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.base.ClustererMeta": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.base.ClustererMeta.__instancecheck__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.base.ProbabilisticClassifier": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.base.ProbabilisticClassifierMeta": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.base.ProbabilisticClassifierMeta.__instancecheck__": {
  "lineno": 2,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.common.TrainOnlyTransformerMixin": {
  "lineno": 10,
  "symbols_in_volume": [
   "hashlib.sha256",
   "numpy.memmap",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.util.hash_pandas_object",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.common.TrainOnlyTransformerMixin._hash": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.fit": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.transform": {
  "lineno": 69,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.transform_test": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.transform_train": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.common.as_list": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.common.expanding_list": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.common.flatten": {
  "lineno": 120,
  "symbols_in_volume": [
   "collections.abc.Iterable"
  ],
  "type": "function"
 },
 "sklego.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.datasets.load_abalone": {
  "lineno": 46,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "sklego.datasets.load_chicken": {
  "lineno": 7,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "sklego.datasets.load_heroes": {
  "lineno": 84,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "sklego.datasets.make_simpleseries": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.pi",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.sin",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "sklego.dummy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.dummy.RandomRegressor": {
  "lineno": 7,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.RegressorMixin"
  ],
  "type": "class"
 },
 "sklego.dummy.RandomRegressor.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.dummy.RandomRegressor.fit": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max",
   "numpy.mean",
   "numpy.min",
   "numpy.std",
   "sklearn.utils.check_X_y",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.dummy.RandomRegressor.predict": {
  "lineno": 41,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklego.linear_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.linear_model.DeadZoneRegressor": {
  "lineno": 21,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.RegressorMixin"
  ],
  "type": "class"
 },
 "sklego.linear_model.DeadZoneRegressor.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.fit": {
  "lineno": 43,
  "symbols_in_volume": [
   "autograd.grad",
   "autograd.numpy.random.normal",
   "autograd.numpy.zeros",
   "autograd.test_util.check_grads",
   "sklearn.utils.check_X_y",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.fit.deadzone": {
  "lineno": 48,
  "symbols_in_volume": [
   "autograd.numpy.where",
   "autograd.numpy.zeros"
  ],
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.fit.training_loss": {
  "lineno": 56,
  "symbols_in_volume": [
   "autograd.numpy.abs",
   "autograd.numpy.dot",
   "autograd.numpy.mean"
  ],
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.predict": {
  "lineno": 84,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.linear_model.DemographicParityClassifier": {
  "lineno": 192,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.linear_model.base.LinearClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.linear_model.DemographicParityClassifier.__new__": {
  "lineno": 230,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.multiclass.OneVsRestClassifier"
  ],
  "type": "function"
 },
 "sklego.linear_model.EqualOpportunityClassifier": {
  "lineno": 269,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.linear_model.base.LinearClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.linear_model.EqualOpportunityClassifier.__new__": {
  "lineno": 308,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.multiclass.OneVsRestClassifier"
  ],
  "type": "function"
 },
 "sklego.linear_model.FairClassifier": {
  "lineno": 240,
  "symbols_in_volume": [
   "deprecated.sphinx.deprecated"
  ],
  "type": "class"
 },
 "sklego.linear_model.FairClassifier.__init__": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model._DemographicParityClassifer": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.linear_model._DemographicParityClassifer.__init__": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model._DemographicParityClassifer._get_param_names": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model._DemographicParityClassifer.constraints": {
  "lineno": 254,
  "symbols_in_volume": [
   "autograd.numpy.mean",
   "cvxpy.abs"
  ],
  "type": "function"
 },
 "sklego.linear_model._EqualOpportunityClassifier": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.linear_model._EqualOpportunityClassifier.__init__": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model._EqualOpportunityClassifier._get_param_names": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model._EqualOpportunityClassifier.constraints": {
  "lineno": 324,
  "symbols_in_volume": [
   "autograd.numpy.mean",
   "cvxpy.abs"
  ],
  "type": "function"
 },
 "sklego.linear_model._FairClassifier": {
  "lineno": 90,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.linear_model.base.LinearClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.linear_model._FairClassifier.__init__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model._FairClassifier._add_intercept": {
  "lineno": 187,
  "symbols_in_volume": [
   "autograd.numpy.c_",
   "autograd.numpy.ones"
  ],
  "type": "function"
 },
 "sklego.linear_model._FairClassifier._solve": {
  "lineno": 144,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "autograd.numpy.newaxis",
   "autograd.numpy.zeros",
   "cvxpy.Maximize",
   "cvxpy.Problem",
   "cvxpy.Variable",
   "cvxpy.hstack",
   "cvxpy.log_sum_exp",
   "cvxpy.multiply",
   "cvxpy.norm",
   "cvxpy.reshape",
   "cvxpy.sum"
  ],
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.constraints": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.decision_function": {
  "lineno": 180,
  "symbols_in_volume": [
   "autograd.numpy.delete",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.fit": {
  "lineno": 107,
  "symbols_in_volume": [
   "autograd.numpy.delete",
   "pandas.DataFrame",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils.check_X_y",
   "sklearn.utils.validation.column_or_1d"
  ],
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.predict_proba": {
  "lineno": 175,
  "symbols_in_volume": [
   "autograd.numpy.c_",
   "scipy.special._ufuncs.expit"
  ],
  "type": "function"
 },
 "sklego.meta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.meta.ConfusionBalancer": {
  "lineno": 482,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "sklego.meta.ConfusionBalancer.__init__": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.ConfusionBalancer.fit": {
  "lineno": 503,
  "symbols_in_volume": [
   "sklearn.metrics.confusion_matrix",
   "sklearn.utils.multiclass.unique_labels",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_X_y",
   "sklego.base.ProbabilisticClassifier"
  ],
  "type": "function"
 },
 "sklego.meta.ConfusionBalancer.predict": {
  "lineno": 531,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.ConfusionBalancer.predict_proba": {
  "lineno": 520,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklego.meta.DecayEstimator": {
  "lineno": 377,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklego.meta.DecayEstimator.__init__": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.DecayEstimator._is_classifier": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.DecayEstimator.fit": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.cumprod",
   "numpy.ones",
   "sklearn.clone",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklego.meta.DecayEstimator.predict": {
  "lineno": 418,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.DecayEstimator.score": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.EstimatorTransformer": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.meta.EstimatorTransformer.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.EstimatorTransformer.fit": {
  "lineno": 26,
  "symbols_in_volume": [
   "sklearn.clone",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklego.meta.EstimatorTransformer.transform": {
  "lineno": 34,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator": {
  "lineno": 74,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklego.meta.GroupedEstimator.__check_cols_exist": {
  "lineno": 141,
  "symbols_in_volume": [
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__check_missing_and_inf": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isinf",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__check_shrinkage_func": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__fit_grouped_estimator": {
  "lineno": 187,
  "symbols_in_volume": [
   "sklearn.clone"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__get_shrinkage_factor": {
  "lineno": 200,
  "symbols_in_volume": [
   "sklego.common.as_list",
   "sklego.common.expanding_list"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__init__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__predict_group": {
  "lineno": 290,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__predict_shrinkage_groups": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__prepare_input_data": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__set_shrinkage_function": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.__validate": {
  "lineno": 166,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y",
   "sklearn.utils.validation.check_array",
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.fit": {
  "lineno": 243,
  "symbols_in_volume": [
   "sklearn.clone",
   "sklego.common.as_list",
   "sklego.common.expanding_list"
  ],
  "type": "function"
 },
 "sklego.meta.GroupedEstimator.predict": {
  "lineno": 332,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.OutlierRemover": {
  "lineno": 350,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklego.common.TrainOnlyTransformerMixin"
  ],
  "type": "class"
 },
 "sklego.meta.OutlierRemover.__init__": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.OutlierRemover.fit": {
  "lineno": 363,
  "symbols_in_volume": [
   "sklearn.clone"
  ],
  "type": "function"
 },
 "sklego.meta.OutlierRemover.transform_train": {
  "lineno": 370,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier": {
  "lineno": 543,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin",
   "sklearn.base.MetaEstimatorMixin"
  ],
  "type": "class"
 },
 "sklego.meta.SubjectiveClassifier.__init__": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier._evidence": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier._likelihood": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier._posterior": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier._to_discrete": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier._weighted_proba": {
  "lineno": 623,
  "symbols_in_volume": [
   "sklearn.preprocessing.normalize"
  ],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier.classes_": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier.fit": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "sklearn.base.ClassifierMixin",
   "sklearn.metrics.confusion_matrix",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier.predict": {
  "lineno": 651,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.SubjectiveClassifier.predict_proba": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.Thresholder": {
  "lineno": 434,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.meta.Thresholder.__init__": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.Thresholder.fit": {
  "lineno": 445,
  "symbols_in_volume": [
   "sklearn.clone",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_X_y",
   "sklego.base.ProbabilisticClassifier"
  ],
  "type": "function"
 },
 "sklego.meta.Thresholder.predict": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.where",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.Thresholder.predict_proba": {
  "lineno": 474,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.meta.Thresholder.score": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.meta.constant_shrinkage": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklego.meta.min_n_obs_shrinkage": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.array",
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklego.meta.relative_shrinkage": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklego.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.metrics.correlation_score": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.metrics.correlation_score.correlation_metric": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.corrcoef",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklego.metrics.equal_opportunity_score": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.metrics.equal_opportunity_score.impl": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "numpy.mean",
   "numpy.minimum",
   "numpy.ndarray",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklego.metrics.p_percent_score": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.metrics.p_percent_score.impl": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "numpy.mean",
   "numpy.minimum",
   "numpy.ndarray",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklego.mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.mixture.BayesianGMMClassifier": {
  "lineno": 72,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.mixture.BayesianGMMClassifier.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMClassifier.fit": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.expand_dims",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils.check_X_y",
   "sklearn.utils.multiclass.unique_labels",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMClassifier.predict": {
  "lineno": 131,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMClassifier.predict_proba": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.newaxis",
   "numpy.zeros",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMOutlierDetector": {
  "lineno": 248,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.OutlierMixin"
  ],
  "type": "class"
 },
 "sklego.mixture.BayesianGMMOutlierDetector.__init__": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMOutlierDetector.decision_function": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMOutlierDetector.fit": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.expand_dims",
   "numpy.quantile",
   "numpy.std",
   "scipy.optimize.minimize_scalar",
   "scipy.stats.gaussian_kde",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMOutlierDetector.predict": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.int"
  ],
  "type": "function"
 },
 "sklego.mixture.BayesianGMMOutlierDetector.score_samples": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.mixture.GMMClassifier": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.mixture.GMMClassifier.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.mixture.GMMClassifier.fit": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.expand_dims",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils.check_X_y",
   "sklearn.utils.multiclass.unique_labels",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.mixture.GMMClassifier.predict": {
  "lineno": 58,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.mixture.GMMClassifier.predict_proba": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.newaxis",
   "numpy.zeros",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.mixture.GMMOutlierDetector": {
  "lineno": 145,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.OutlierMixin"
  ],
  "type": "class"
 },
 "sklego.mixture.GMMOutlierDetector.__init__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.mixture.GMMOutlierDetector.decision_function": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.mixture.GMMOutlierDetector.fit": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.expand_dims",
   "numpy.quantile",
   "numpy.std",
   "scipy.optimize.minimize_scalar",
   "scipy.stats.gaussian_kde",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklego.mixture.GMMOutlierDetector.predict": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.int"
  ],
  "type": "function"
 },
 "sklego.mixture.GMMOutlierDetector.score_samples": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.model_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.model_selection.KlusterFoldValidation": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.model_selection.KlusterFoldValidation.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "sklego.base.Clusterer"
  ],
  "type": "function"
 },
 "sklego.model_selection.KlusterFoldValidation._method_is_fitted": {
  "lineno": 122,
  "symbols_in_volume": [
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "sklego.model_selection.KlusterFoldValidation.split": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.unique",
   "numpy.where",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklego.model_selection.TimeGapSplit.__init__": {
  "lineno": 36,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit.get_n_splits": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit.split": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklego.naive_bayes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB": {
  "lineno": 79,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.fit": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.expand_dims",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils.check_X_y",
   "sklearn.utils.multiclass.unique_labels",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.predict": {
  "lineno": 145,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.predict_proba": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.array",
   "numpy.exp",
   "numpy.expand_dims",
   "numpy.zeros",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.naive_bayes.GaussianMixtureNB": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklego.naive_bayes.GaussianMixtureNB.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.naive_bayes.GaussianMixtureNB.fit": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.expand_dims",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils.check_X_y",
   "sklearn.utils.multiclass.unique_labels",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.naive_bayes.GaussianMixtureNB.predict": {
  "lineno": 60,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.naive_bayes.GaussianMixtureNB.predict_proba": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.array",
   "numpy.exp",
   "numpy.expand_dims",
   "numpy.zeros",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.pandas_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.pandas_utils._add_lagged_numpy_columns": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.asarray",
   "numpy.column_stack",
   "numpy.isnan",
   "scipy.ndimage.interpolation.shift",
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "sklego.pandas_utils._add_lagged_pandas_columns": {
  "lineno": 156,
  "symbols_in_volume": [
   "pandas.concat",
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "sklego.pandas_utils.add_lags": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.frame.DataFrame",
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "sklego.pandas_utils.log_step": {
  "lineno": 14,
  "symbols_in_volume": [
   "functools.partial",
   "logging.INFO"
  ],
  "type": "function"
 },
 "sklego.pandas_utils.log_step.wrapper": {
  "lineno": 31,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "functools.wraps",
   "inspect.signature",
   "logging.getLogger",
   "sys.modules.__name__"
  ],
  "type": "function"
 },
 "sklego.pipeline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.pipeline.DebugPipeline": {
  "lineno": 83,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "class"
 },
 "sklego.pipeline.DebugPipeline.__init__": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.pipeline.DebugPipeline.log_callback": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.pipeline.DebugPipeline.memory": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.pipeline._cache_with_function_log_statement": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.pipeline._cache_with_function_log_statement._": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.pipeline._log_wrapper": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.pipeline._log_wrapper._": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.pipeline._log_wrapper._._": {
  "lineno": 51,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "sklego.pipeline.default_log_callback": {
  "lineno": 13,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "sklego.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.preprocessing.ColumnCapper": {
  "lineno": 216,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.ColumnCapper.__init__": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnCapper._check_interpolation": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnCapper._check_quantile_range": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnCapper.fit": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanquantile",
   "numpy.putmask",
   "sklearn.utils.check_array",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.preprocessing.ColumnCapper.transform": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.nan",
   "numpy.putmask",
   "sklearn.utils.check_array",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.preprocessing.ColumnDropper": {
  "lineno": 523,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.ColumnDropper.__init__": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnDropper._check_X_for_type": {
  "lineno": 612,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "sklego.preprocessing.ColumnDropper._check_column_names": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnDropper.fit": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnDropper.transform": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnSelector": {
  "lineno": 121,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.ColumnSelector.__init__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnSelector._check_X_for_type": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "sklego.preprocessing.ColumnSelector._check_column_names": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnSelector.fit": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.ColumnSelector.transform": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.InformationFilter": {
  "lineno": 438,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.InformationFilter.__init__": {
  "lineno": 465,
  "symbols_in_volume": [
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "sklego.preprocessing.InformationFilter._check_coltype": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.ndarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "sklego.preprocessing.InformationFilter._col_idx": {
  "lineno": 482,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklego.preprocessing.InformationFilter._make_v_vectors": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklego.preprocessing.InformationFilter.fit": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.linalg.lstsq",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklego.preprocessing.InformationFilter.transform": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.delete",
   "sklearn.utils.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.preprocessing.OrthogonalTransformer": {
  "lineno": 387,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.OrthogonalTransformer.__init__": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.OrthogonalTransformer.fit": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.linalg.inv",
   "numpy.linalg.norm",
   "numpy.linalg.qr",
   "numpy.ones",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklego.preprocessing.OrthogonalTransformer.transform": {
  "lineno": 418,
  "symbols_in_volume": [
   "sklearn.utils.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.preprocessing.PandasTypeSelector": {
  "lineno": 67,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.PandasTypeSelector.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.PandasTypeSelector._check_X_for_type": {
  "lineno": 114,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "sklego.preprocessing.PandasTypeSelector.fit": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.PandasTypeSelector.transform": {
  "lineno": 93,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.preprocessing.PatsyTransformer": {
  "lineno": 33,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.PatsyTransformer.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.PatsyTransformer.fit": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.array",
   "patsy.dmatrix"
  ],
  "type": "function"
 },
 "sklego.preprocessing.PatsyTransformer.transform": {
  "lineno": 54,
  "symbols_in_volume": [
   "patsy.PatsyError",
   "patsy.build_design_matrices",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.preprocessing.RandomAdder": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklego.common.TrainOnlyTransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.RandomAdder.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.RandomAdder.fit": {
  "lineno": 17,
  "symbols_in_volume": [
   "sklearn.utils.check_X_y",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklego.preprocessing.RandomAdder.transform_train": {
  "lineno": 24,
  "symbols_in_volume": [
   "sklearn.utils.check_array",
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklearn.utils.validation.check_is_fitted",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklego.preprocessing.RepeatingBasisFunction": {
  "lineno": 619,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing.RepeatingBasisFunction.__init__": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.RepeatingBasisFunction.fit": {
  "lineno": 661,
  "symbols_in_volume": [
   "sklearn.compose.ColumnTransformer"
  ],
  "type": "function"
 },
 "sklego.preprocessing.RepeatingBasisFunction.transform": {
  "lineno": 679,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.preprocessing._RepeatingBasisFunction": {
  "lineno": 684,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklego.preprocessing._RepeatingBasisFunction.__init__": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing._RepeatingBasisFunction._array_base_distance": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.concatenate",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklego.preprocessing._RepeatingBasisFunction._array_bases_distances": {
  "lineno": 730,
  "symbols_in_volume": [
   "numpy.apply_along_axis"
  ],
  "type": "function"
 },
 "sklego.preprocessing._RepeatingBasisFunction._rbf": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklego.preprocessing._RepeatingBasisFunction.fit": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklego.preprocessing._RepeatingBasisFunction.transform": {
  "lineno": 704,
  "symbols_in_volume": [
   "sklearn.utils.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklego.preprocessing.scalar_projection": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.preprocessing.vector_projection": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklego.testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklego.testing.check_shape_remains_same_classifier": {
  "lineno": 21,
  "symbols_in_volume": [
   "copy.copy",
   "itertools.product",
   "sklearn.datasets.make_classification",
   "sklearn.utils.testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklego.testing.check_shape_remains_same_regressor": {
  "lineno": 8,
  "symbols_in_volume": [
   "copy.copy",
   "itertools.product",
   "sklearn.datasets.make_regression",
   "sklearn.utils.testing.ignore_warnings"
  ],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
   "sklearn.utils.estimator_checks.check_classifiers_classes",
   "sklearn.utils.estimator_checks.check_classifiers_one_label",
   "sklearn.utils.estimator_checks.check_classifiers_train",
   "sklearn.utils.estimator_checks.check_complex_data",
   "sklearn.utils.estimator_checks.check_decision_proba_consistency",
   "sklearn.utils.estimator_checks.check_dict_unchanged",
   "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
   "sklearn.utils.estimator_checks.check_dtype_object",
   "sklearn.utils.estimator_checks.check_estimator_sparse_data",
   "sklearn.utils.estimator_checks.check_estimators_dtypes",
   "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
   "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
   "sklearn.utils.estimator_checks.check_estimators_nan_inf",
   "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
   "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
   "sklearn.utils.estimator_checks.check_estimators_pickle",
   "sklearn.utils.estimator_checks.check_estimators_unfitted",
   "sklearn.utils.estimator_checks.check_fit1d",
   "sklearn.utils.estimator_checks.check_fit2d_1feature",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_fit2d_predict1d",
   "sklearn.utils.estimator_checks.check_fit_score_takes_y",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_methods_subset_invariance",
   "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
   "sklearn.utils.estimator_checks.check_outliers_fit_predict",
   "sklearn.utils.estimator_checks.check_outliers_train",
   "sklearn.utils.estimator_checks.check_pipeline_consistency",
   "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
   "sklearn.utils.estimator_checks.check_regressors_int",
   "sklearn.utils.estimator_checks.check_regressors_no_decision_function",
   "sklearn.utils.estimator_checks.check_regressors_train",
   "sklearn.utils.estimator_checks.check_sample_weights_invariance",
   "sklearn.utils.estimator_checks.check_sample_weights_list",
   "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklearn.utils.estimator_checks.check_supervised_y_2d",
   "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
   "sklearn.utils.estimator_checks.check_transformer_data_not_an_array",
   "sklearn.utils.estimator_checks.check_transformer_general",
   "sklearn.utils.estimator_checks.check_transformers_unfitted"
  ],
  "type": "module"
 },
 "tests.conftest.id_func": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_clf": {
  "lineno": 88,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_multiclf": {
  "lineno": 97,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.normal",
   "numpy.random.seed",
   "pandas.cut",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_regr": {
  "lineno": 79,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.sensitive_classification_dataset": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.sensitive_multiclass_classification_dataset": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_common.test_basics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_common.test_basics.test_as_list_ints": {
  "lineno": 9,
  "symbols_in_volume": [
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "tests.test_common.test_basics.test_as_list_other": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "tests.test_common.test_basics.test_as_list_other.f": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_common.test_basics.test_as_list_strings": {
  "lineno": 4,
  "symbols_in_volume": [
   "sklego.common.as_list"
  ],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklego.common.TrainOnlyTransformerMixin"
  ],
  "type": "class"
 },
 "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer.fit": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer.transform_train": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_bare_trainonlytransformer": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_bare_trainonlytransformer_pandas": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.all",
   "pandas.DataFrame",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_hash_numpy": {
  "lineno": 22,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.normal",
   "sklego.common.TrainOnlyTransformerMixin._hash",
   "tests.conftest.k_vals",
   "tests.conftest.n_vals",
   "tests.conftest.np_types"
  ],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_hash_pandas": {
  "lineno": 33,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.normal",
   "pandas.DataFrame",
   "sklego.common.TrainOnlyTransformerMixin._hash",
   "tests.conftest.k_vals",
   "tests.conftest.n_vals",
   "tests.conftest.np_types"
  ],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_pipeline_trainonlytransformer": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.model_selection.train_test_split",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_pipeline_trainonlytransformer_pandas": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.all",
   "pandas.DataFrame",
   "sklearn.model_selection.train_test_split",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "tests.test_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_datasets.test_abalone1": {
  "lineno": 16,
  "symbols_in_volume": [
   "sklego.datasets.load_abalone"
  ],
  "type": "function"
 },
 "tests.test_datasets.test_abalone2": {
  "lineno": 22,
  "symbols_in_volume": [
   "sklego.datasets.load_abalone"
  ],
  "type": "function"
 },
 "tests.test_datasets.test_chickweight1": {
  "lineno": 5,
  "symbols_in_volume": [
   "sklego.datasets.load_chicken"
  ],
  "type": "function"
 },
 "tests.test_datasets.test_chickweight2": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklego.datasets.load_chicken"
  ],
  "type": "function"
 },
 "tests.test_datasets.test_simpleseries_constant_season": {
  "lineno": 27,
  "symbols_in_volume": [
   "pytest.approx",
   "sklego.datasets.make_simpleseries"
  ],
  "type": "function"
 },
 "tests.test_estimators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_basics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_basics.test_shape_classification": {
  "lineno": 24,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklego.mixture.BayesianGMMClassifier",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.GMMClassifier",
   "sklego.mixture.GMMOutlierDetector",
   "tests.conftest.id_func"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_basics.test_shape_regression": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklego.dummy.RandomRegressor",
   "sklego.linear_model.DeadZoneRegressor",
   "tests.conftest.id_func"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_deadzone": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_deadzone.dataset": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_deadzone.mod": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.fixture",
   "sklego.linear_model.DeadZoneRegressor"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_deadzone.test_deadzone": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklego.linear_model.DeadZoneRegressor",
   "sklego.linear_model.DeadZoneRegressor.__name__",
   "sklego.testing.check_shape_remains_same_regressor"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_deadzone.test_values_uniform": {
  "lineno": 30,
  "symbols_in_volume": [
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_demographic_parity._test_same": {
  "lineno": 28,
  "symbols_in_volume": [
   "cvxpy.SolverError",
   "numpy.delete",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "sklearn.linear_model.LogisticRegression",
   "sklego.linear_model.DemographicParityClassifier"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_deprecation": {
  "lineno": 102,
  "symbols_in_volume": [
   "sklego.linear_model.FairClassifier",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_fairness": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.inf",
   "sklego.linear_model.DemographicParityClassifier",
   "sklego.metrics.p_percent_score"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_regularization": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.inf",
   "numpy.sum",
   "sklego.linear_model.DemographicParityClassifier"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_same_logistic": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_same_logistic_multiclass": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_standard_checks": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.linear_model.DemographicParityClassifier",
   "sklego.linear_model.DemographicParityClassifier.__name__",
   "tests.conftest.classifier_checks",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_equal_opportunity._test_same": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.delete",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "sklearn.linear_model.LogisticRegression",
   "sklego.linear_model.EqualOpportunityClassifier"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_fairness": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.inf",
   "sklego.linear_model.EqualOpportunityClassifier",
   "sklego.metrics.equal_opportunity_score"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_regularization": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.inf",
   "numpy.sum",
   "sklego.linear_model.EqualOpportunityClassifier"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_same_logistic": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_same_logistic_multiclass": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_standard_checks": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.linear_model.EqualOpportunityClassifier",
   "sklego.linear_model.EqualOpportunityClassifier.__name__",
   "tests.conftest.classifier_checks",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_gmm_naive_bayes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_gmm_naive_bayes.dataset": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_gmm_naive_bayes.test_estimator_checks": {
  "lineno": 10,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.naive_bayes.BayesianGaussianMixtureNB",
   "sklego.naive_bayes.BayesianGaussianMixtureNB.__name__",
   "sklego.naive_bayes.GaussianMixtureNB",
   "sklego.naive_bayes.GaussianMixtureNB.__name__",
   "sklego.testing.check_shape_remains_same_classifier",
   "tests.conftest.estimator_checks.check_classifier_data_not_an_array",
   "tests.conftest.estimator_checks.check_classifiers_classes",
   "tests.conftest.estimator_checks.check_classifiers_one_label",
   "tests.conftest.estimator_checks.check_classifiers_train",
   "tests.conftest.estimator_checks.check_decision_proba_consistency",
   "tests.conftest.estimator_checks.check_estimators_partial_fit_n_features",
   "tests.conftest.estimator_checks.check_estimators_unfitted",
   "tests.conftest.estimator_checks.check_supervised_y_2d",
   "tests.conftest.estimator_checks.check_supervised_y_no_nan",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_gmm_naive_bayes.test_obvious_usecase": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.random.normal",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklego.naive_bayes.BayesianGaussianMixtureNB",
   "sklego.naive_bayes.GaussianMixtureNB"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_classifier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_mixture_classifier.test_estimator_checks": {
  "lineno": 10,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMClassifier",
   "sklego.mixture.BayesianGMMClassifier.__name__",
   "sklego.mixture.GMMClassifier",
   "sklego.mixture.GMMClassifier.__name__",
   "sklego.testing.check_shape_remains_same_classifier",
   "tests.conftest.estimator_checks.check_classifier_data_not_an_array",
   "tests.conftest.estimator_checks.check_classifiers_classes",
   "tests.conftest.estimator_checks.check_classifiers_one_label",
   "tests.conftest.estimator_checks.check_classifiers_train",
   "tests.conftest.estimator_checks.check_decision_proba_consistency",
   "tests.conftest.estimator_checks.check_estimators_partial_fit_n_features",
   "tests.conftest.estimator_checks.check_estimators_unfitted",
   "tests.conftest.estimator_checks.check_supervised_y_2d",
   "tests.conftest.estimator_checks.check_supervised_y_no_nan",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_classifier.test_obvious_usecase": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.random.normal",
   "numpy.zeros",
   "sklego.mixture.BayesianGMMClassifier",
   "sklego.mixture.GMMClassifier"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_mixture_detector.dataset": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_estimator_checks": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
   "sklearn.utils.estimator_checks.check_estimators_unfitted",
   "sklearn.utils.estimator_checks.check_outliers_fit_predict",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.BayesianGMMOutlierDetector.__name__",
   "sklego.mixture.GMMOutlierDetector",
   "sklego.mixture.GMMOutlierDetector.__name__",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_obvious_usecase_github": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_obvious_usecase_quantile": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_obvious_usecase_stddev": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_thresh_effect_quantile": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_thresh_effect_stddev": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_value_error_threshold": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklego.common.flatten",
   "sklego.mixture.BayesianGMMOutlierDetector",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_estimators.test_randomregressor.test_bad_values": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.raises",
   "sklego.dummy.RandomRegressor"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor.test_estimator_checks": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.estimator_checks.check_dict_unchanged",
   "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
   "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
   "sklearn.utils.estimator_checks.check_estimators_unfitted",
   "sklearn.utils.estimator_checks.check_fit1d",
   "sklearn.utils.estimator_checks.check_fit2d_1feature",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_fit2d_predict1d",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
   "sklearn.utils.estimator_checks.check_regressors_int",
   "sklearn.utils.estimator_checks.check_regressors_no_decision_function",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklearn.utils.estimator_checks.check_supervised_y_2d",
   "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
   "sklego.common.flatten",
   "sklego.dummy.RandomRegressor",
   "sklego.dummy.RandomRegressor.__name__",
   "sklego.testing.check_shape_remains_same_regressor",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor.test_values_normal": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std",
   "pytest.approx",
   "sklego.dummy.RandomRegressor"
  ],
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor.test_values_uniform": {
  "lineno": 43,
  "symbols_in_volume": [
   "pytest.approx",
   "sklego.dummy.RandomRegressor"
  ],
  "type": "function"
 },
 "tests.test_meta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_confusion_balancer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_confusion_balancer.test_estimator_checks_classification": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklego.common.flatten",
   "sklego.meta.ConfusionBalancer",
   "sklego.meta.ConfusionBalancer.__name__",
   "tests.conftest.classifier_checks",
   "tests.conftest.general_checks"
  ],
  "type": "function"
 },
 "tests.test_meta.test_confusion_balancer.test_sum_equals_one": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.concatenate",
   "numpy.isclose",
   "numpy.ones",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.zeros",
   "sklearn.linear_model.LogisticRegression",
   "sklego.meta.ConfusionBalancer"
  ],
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_decay_estimator.test_decay_weight_clf": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.normal",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.tree.DecisionTreeClassifier",
   "sklego.common.flatten",
   "sklego.meta.DecayEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_decay_weight_regr": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.random.normal",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.tree.DecisionTreeRegressor",
   "sklego.common.flatten",
   "sklego.meta.DecayEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_estimator_checks_classification": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklego.common.flatten",
   "sklego.meta.DecayEstimator",
   "sklego.meta.DecayEstimator.__name__",
   "tests.conftest.classifier_checks",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_estimator_checks_regression": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "sklego.common.flatten",
   "sklego.meta.DecayEstimator",
   "sklego.meta.DecayEstimator.__name__",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks",
   "tests.conftest.regressor_checks"
  ],
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_throw_warning": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.random.normal",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklego.common.flatten",
   "sklego.meta.DecayEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_estimatortransformer.test_estimator_checks": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "sklego.common.flatten",
   "sklego.meta.EstimatorTransformer",
   "sklego.meta.EstimatorTransformer.__name__",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks",
   "tests.conftest.transformer_checks"
  ],
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_get_params": {
  "lineno": 43,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier",
   "sklego.meta.EstimatorTransformer"
  ],
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_set_params": {
  "lineno": 35,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier",
   "sklego.meta.EstimatorTransformer"
  ],
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_shape": {
  "lineno": 56,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.pipeline.Pipeline",
   "sklego.meta.EstimatorTransformer"
  ],
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_values_uniform": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.clone",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils.check_X_y",
   "sklego.meta.EstimatorTransformer"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_grouped_model.shrinkage_data": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_bad_shrinkage_value_error": {
  "lineno": 447,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_chickweight_can_do_fallback": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_chickweight_df1_keys": {
  "lineno": 37,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_chickweight_df2_keys": {
  "lineno": 44,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_chickweight_np_keys": {
  "lineno": 92,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_chickweight_raise_error_cols_missing1": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_chickweight_raise_error_cols_missing2": {
  "lineno": 83,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_chickweigt_string_groups": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_constant_shrinkage": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage.shrinkage_func": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage_raises_error": {
  "lineno": 280,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage_raises_error.shrinkage_func": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage_wrong_length": {
  "lineno": 261,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage_wrong_length.shrinkage_func": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage_wrong_return_type": {
  "lineno": 243,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_custom_shrinkage_wrong_return_type.shrinkage_func": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_estimator_checks": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
   "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
   "sklearn.utils.estimator_checks.check_estimators_nan_inf",
   "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
   "sklearn.utils.estimator_checks.check_estimators_pickle",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_fit_score_takes_y",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_sample_weights_invariance",
   "sklearn.utils.estimator_checks.check_sample_weights_list",
   "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklego.common.flatten",
   "sklego.meta.GroupedEstimator",
   "sklego.meta.GroupedEstimator.__name__"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_fallback_can_raise_error": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "sklearn.linear_model.LinearRegression",
   "sklego.datasets.load_chicken",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_global_model_shrinkage": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_invalid_shrinkage": {
  "lineno": 298,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_min_n_obs_shrinkage": {
  "lineno": 176,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_min_n_obs_shrinkage_too_little_obs": {
  "lineno": 198,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_predict_missing_group_column": {
  "lineno": 410,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_predict_missing_value_column": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.random.normal",
   "pytest.raises",
   "sklearn.linear_model.LinearRegression",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_relative_shrinkage": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_shrinkage_single_group": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_shrinkage_single_group_no_global": {
  "lineno": 359,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_unexisting_shrinkage_func": {
  "lineno": 374,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_grouped_model.test_unseen_groups_shrinkage": {
  "lineno": 391,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pytest.raises",
   "sklearn.dummy.DummyRegressor",
   "sklego.meta.GroupedEstimator"
  ],
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_outlier_remover.test_do_not_refit": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array",
   "sklego.meta.OutlierRemover"
  ],
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_estimator_checks": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.IsolationForest",
   "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
   "sklearn.utils.estimator_checks.check_fit1d",
   "sklearn.utils.estimator_checks.check_fit2d_1feature",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_fit2d_predict1d",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklearn.utils.estimator_checks.check_transformers_unfitted",
   "sklego.common.flatten",
   "sklego.meta.OutlierRemover",
   "sklego.meta.OutlierRemover.__name__",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_no_outliers": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.array",
   "sklego.meta.OutlierRemover"
  ],
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_pipeline_integration": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.normal",
   "numpy.random.seed",
   "sklearn.cluster.KMeans",
   "sklearn.ensemble.IsolationForest",
   "sklearn.pipeline.Pipeline",
   "sklego.meta.OutlierRemover",
   "sklego.mixture.GMMOutlierDetector"
  ],
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_remove_outlier": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array",
   "sklego.meta.OutlierRemover"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_subjective_classifier.test_estimator_checks_classification": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklego.common.flatten",
   "sklego.meta.SubjectiveClassifier",
   "sklego.meta.SubjectiveClassifier.__name__",
   "tests.conftest.classifier_checks",
   "tests.conftest.general_checks"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_fit_y_data_inconsistent_with_prior_failure_conditions": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.RandomForestClassifier",
   "sklego.meta.SubjectiveClassifier"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_params_failure_conditions": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.cluster.DBSCAN",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.linear_model.Ridge",
   "sklego.meta.SubjectiveClassifier"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_posterior_computation": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "numpy.zeros",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.ensemble.RandomForestClassifier",
   "sklego.meta.SubjectiveClassifier"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_posterior_computation.mock_confusion_matrix": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_predict_proba": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.ensemble.RandomForestClassifier",
   "sklego.meta.SubjectiveClassifier"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_predict_proba.mock_confusion_matrix": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_to_discrete": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "sklego.meta.SubjectiveClassifier._to_discrete"
  ],
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_weighted_proba": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "pytest.mark.parametrize",
   "sklego.meta.SubjectiveClassifier._weighted_proba"
  ],
  "type": "function"
 },
 "tests.test_meta.test_thresholder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_meta.test_thresholder.test_diff_threshold": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.seed",
   "sklearn.linear_model.LogisticRegression",
   "sklego.meta.Thresholder"
  ],
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_raise_error1": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.raises",
   "sklearn.linear_model.LinearRegression",
   "sklego.meta.Thresholder"
  ],
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_raise_error2": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.raises",
   "sklearn.linear_model.LinearRegression",
   "sklego.meta.Thresholder"
  ],
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_same_threshold": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.random.normal",
   "sklearn.linear_model.LogisticRegression",
   "sklego.meta.Thresholder"
  ],
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_standard_checks": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
   "sklearn.utils.estimator_checks.check_classifiers_one_label",
   "sklearn.utils.estimator_checks.check_decision_proba_consistency",
   "sklearn.utils.estimator_checks.check_dict_unchanged",
   "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
   "sklearn.utils.estimator_checks.check_estimators_unfitted",
   "sklearn.utils.estimator_checks.check_fit1d",
   "sklearn.utils.estimator_checks.check_fit2d_1feature",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
   "sklego.common.flatten",
   "sklego.meta.Thresholder",
   "sklego.meta.Thresholder.__name__"
  ],
  "type": "function"
 },
 "tests.test_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_metrics.test_correlation_score": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_metrics.test_correlation_score.test_corr_numpy": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.linear_model.Ridge",
   "sklego.metrics.correlation_score"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_correlation_score.test_corr_pandas": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.linear_model.Ridge",
   "sklego.metrics.correlation_score"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_metrics.test_equal_opportunity.test_equal_opportunity_pandas": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "sklego.metrics.equal_opportunity_score",
   "types.SimpleNamespace"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity.test_p_percent_numpy": {
  "lineno": 59,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklego.metrics.equal_opportunity_score"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity.test_p_percent_pandas_multiclass": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "sklego.metrics.equal_opportunity_score",
   "types.SimpleNamespace"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity.test_warning_is_logged": {
  "lineno": 66,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklego.metrics.equal_opportunity_score",
   "sklego.preprocessing.ColumnSelector",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_p_percent": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_metrics.test_p_percent.test_p_percent_numpy": {
  "lineno": 37,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklego.metrics.p_percent_score"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_p_percent.test_p_percent_pandas": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklego.metrics.p_percent_score",
   "sklego.preprocessing.ColumnSelector"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_p_percent.test_p_percent_pandas_multiclass": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklego.metrics.p_percent_score",
   "sklego.preprocessing.ColumnSelector"
  ],
  "type": "function"
 },
 "tests.test_metrics.test_p_percent.test_warning_is_logged": {
  "lineno": 44,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklego.metrics.p_percent_score",
   "sklego.preprocessing.ColumnSelector",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_model_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_model_selection.test_klusterfold": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "module"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster": {
  "lineno": 15,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.fit": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.fit_predict": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.predict": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.test_no_split": {
  "lineno": 58,
  "symbols_in_volume": [
   "pytest.raises",
   "sklego.model_selection.KlusterFoldValidation"
  ],
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.test_splits_fitted": {
  "lineno": 43,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.clone",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklego.model_selection.KlusterFoldValidation",
   "tests.conftest.id_func"
  ],
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.test_splits_not_fitted": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.clone",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklego.model_selection.KlusterFoldValidation",
   "tests.conftest.id_func"
  ],
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "module"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit": {
  "lineno": 23,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "datetime.timedelta",
   "sklego.model_selection.TimeGapSplit"
  ],
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_too_big_gap": {
  "lineno": 44,
  "symbols_in_volume": [
   "datetime.timedelta",
   "sklego.model_selection.TimeGapSplit"
  ],
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_with_a_gap": {
  "lineno": 54,
  "symbols_in_volume": [
   "datetime.timedelta",
   "sklego.model_selection.TimeGapSplit"
  ],
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_with_gridsearch": {
  "lineno": 71,
  "symbols_in_volume": [
   "datetime.timedelta",
   "sklearn.linear_model.Lasso",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline",
   "sklego.model_selection.TimeGapSplit"
  ],
  "type": "function"
 },
 "tests.test_preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_columncapper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_columncapper.test_X_types_and_transformed_shapes": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_X_types_and_transformed_shapes.expect_value_error": {
  "lineno": 86,
  "symbols_in_volume": [
   "pytest.raises",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_dtype_classification": {
  "lineno": 130,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_dtype_regression": {
  "lineno": 125,
  "symbols_in_volume": [
   "sklearn.utils.validation.FLOAT_DTYPES",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_estimator_checks": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.estimator_checks.check_complex_data",
   "sklearn.utils.estimator_checks.check_dtype_object",
   "sklearn.utils.estimator_checks.check_estimator_sparse_data",
   "sklearn.utils.estimator_checks.check_estimators_dtypes",
   "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
   "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
   "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
   "sklearn.utils.estimator_checks.check_estimators_pickle",
   "sklearn.utils.estimator_checks.check_fit_score_takes_y",
   "sklearn.utils.estimator_checks.check_pipeline_consistency",
   "sklearn.utils.estimator_checks.check_sample_weights_invariance",
   "sklearn.utils.estimator_checks.check_sample_weights_list",
   "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
   "sklego.common.flatten",
   "sklego.preprocessing.ColumnCapper",
   "sklego.preprocessing.ColumnCapper.__name__",
   "tests.conftest.general_checks",
   "tests.conftest.transformer_checks"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_interpolation": {
  "lineno": 66,
  "symbols_in_volume": [
   "pytest.raises",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_nan_inf": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.inf.sum",
   "numpy.isnan",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_quantile_range": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_quantile_range.expect_type_error": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.raises",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_quantile_range.expect_value_error": {
  "lineno": 43,
  "symbols_in_volume": [
   "pytest.raises",
   "sklego.preprocessing.ColumnCapper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.valid_df": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_columndropper.df": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_none": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "sklego.preprocessing.ColumnDropper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_not_in_frame": {
  "lineno": 43,
  "symbols_in_volume": [
   "pytest.raises",
   "sklego.preprocessing.ColumnDropper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_one": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "sklego.preprocessing.ColumnDropper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_one_in_pipeline": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "sklearn.pipeline.make_pipeline",
   "sklego.preprocessing.ColumnDropper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_two": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "sklego.preprocessing.ColumnDropper"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_informationfilter.test_estimator_checks": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.estimator_checks.check_complex_data",
   "sklearn.utils.estimator_checks.check_dtype_object",
   "sklearn.utils.estimator_checks.check_estimator_sparse_data",
   "sklearn.utils.estimator_checks.check_estimators_dtypes",
   "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
   "sklearn.utils.estimator_checks.check_estimators_nan_inf",
   "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
   "sklearn.utils.estimator_checks.check_estimators_pickle",
   "sklearn.utils.estimator_checks.check_fit_score_takes_y",
   "sklearn.utils.estimator_checks.check_pipeline_consistency",
   "sklearn.utils.estimator_checks.check_sample_weights_invariance",
   "sklearn.utils.estimator_checks.check_sample_weights_list",
   "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
   "sklego.common.flatten",
   "sklego.preprocessing.InformationFilter",
   "sklego.preprocessing.InformationFilter.__name__",
   "tests.conftest.general_checks",
   "tests.conftest.transformer_checks"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_output_orthogonal": {
  "lineno": 46,
  "symbols_in_volume": [
   "sklearn.datasets.load_boston",
   "sklego.preprocessing.InformationFilter"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_output_orthogonal_general_cols": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.datasets.load_boston",
   "sklego.preprocessing.InformationFilter"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_output_orthogonal_pandas": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.datasets.load_boston",
   "sklego.preprocessing.InformationFilter"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_pipeline_gridsearch": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.datasets.load_boston",
   "sklearn.linear_model.LinearRegression",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline",
   "sklego.preprocessing.InformationFilter"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_v_columns_orthogonal": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.datasets.load_boston",
   "sklego.preprocessing.InformationFilter"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthogonal": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.eye",
   "numpy.max"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthonormal": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.sample_df": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.sample_matrix": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_estimator_checks": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklego.common.flatten",
   "sklego.preprocessing.OrthogonalTransformer",
   "sklego.preprocessing.OrthogonalTransformer.__name__",
   "tests.conftest.general_checks",
   "tests.conftest.nonmeta_checks",
   "tests.conftest.transformer_checks"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_orthogonal_transformer": {
  "lineno": 60,
  "symbols_in_volume": [
   "sklego.preprocessing.OrthogonalTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_orthogonal_with_df": {
  "lineno": 89,
  "symbols_in_volume": [
   "sklego.preprocessing.OrthogonalTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_orthonormal_transformer": {
  "lineno": 75,
  "symbols_in_volume": [
   "sklego.preprocessing.OrthogonalTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_get_params_np": {
  "lineno": 38,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.datetime64",
   "numpy.float64",
   "numpy.int64",
   "numpy.timedelta64",
   "pytest.mark.parametrize",
   "sklego.preprocessing.PandasTypeSelector"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_get_params_str": {
  "lineno": 27,
  "symbols_in_volume": [
   "itertools.combinations",
   "pytest.mark.parametrize",
   "sklego.preprocessing.PandasTypeSelector"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_len_classification": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklego.preprocessing.PandasTypeSelector",
   "tests.conftest.id_func"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_len_regression": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "sklego.preprocessing.PandasTypeSelector",
   "tests.conftest.id_func"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_value_error_differrent_dtyes": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "sklego.preprocessing.PandasTypeSelector"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_value_error_empty": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "sklego.preprocessing.PandasTypeSelector"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_value_error_inequal": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "sklego.preprocessing.PandasTypeSelector"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_patsy_transformer.df": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.log",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_apply_numpy_transform": {
  "lineno": 33,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_basic_usage": {
  "lineno": 21,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_design_matrix_error": {
  "lineno": 91,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_design_matrix_in_pipeline": {
  "lineno": 67,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_min_sign_usage": {
  "lineno": 27,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_mult_usage": {
  "lineno": 60,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_multiply_columns": {
  "lineno": 39,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_subset_categories_in_test": {
  "lineno": 77,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_transform_dummy1": {
  "lineno": 46,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_transform_dummy2": {
  "lineno": 53,
  "symbols_in_volume": [
   "sklego.preprocessing.PatsyTransformer"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_randomadder.test_dtype_classification": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.float",
   "sklego.preprocessing.RandomAdder"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder.test_dtype_regression": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.float",
   "sklego.preprocessing.RandomAdder"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder.test_estimator_checks": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.estimator_checks.check_dict_unchanged",
   "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
   "sklearn.utils.estimator_checks.check_fit1d",
   "sklearn.utils.estimator_checks.check_fit2d_1feature",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_fit2d_predict1d",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklearn.utils.estimator_checks.check_transformers_unfitted",
   "sklego.common.flatten",
   "sklego.preprocessing.RandomAdder",
   "sklego.preprocessing.RandomAdder.__name__",
   "tests.conftest.nonmeta_checks"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder.test_only_transform_train": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.model_selection.train_test_split",
   "sklego.preprocessing.RandomAdder"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.df": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.log",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_dataframe_equals_array": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklego.preprocessing.RepeatingBasisFunction"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_drop_remainder": {
  "lineno": 33,
  "symbols_in_volume": [
   "sklego.preprocessing.RepeatingBasisFunction"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_int_indexing": {
  "lineno": 21,
  "symbols_in_volume": [
   "sklego.preprocessing.RepeatingBasisFunction"
  ],
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_str_indexing": {
  "lineno": 27,
  "symbols_in_volume": [
   "sklego.preprocessing.RepeatingBasisFunction"
  ],
  "type": "function"
 }
}