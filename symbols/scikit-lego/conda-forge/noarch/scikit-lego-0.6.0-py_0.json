{
 "sklego": {
  "data": {},
  "type": "module"
 },
 "sklego.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "sklego.base": {
  "data": {},
  "type": "module"
 },
 "sklego.base.Clusterer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklego.base.ClustererMeta"
   ]
  },
  "type": "class"
 },
 "sklego.base.ClustererMeta": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "sklego.base.ClustererMeta.__instancecheck__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklego.base.OutlierMixin": {
  "data": {
   "shadows": "sklearn.base.OutlierMixin"
  },
  "type": "import"
 },
 "sklego.base.OutlierModel": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklego.base.OutlierModelMeta"
   ]
  },
  "type": "class"
 },
 "sklego.base.OutlierModelMeta": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "sklego.base.OutlierModelMeta.__instancecheck__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "isinstance",
    "sklearn.base.OutlierMixin"
   ]
  },
  "type": "function"
 },
 "sklego.base.ProbabilisticClassifier": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklego.base.ProbabilisticClassifierMeta"
   ]
  },
  "type": "class"
 },
 "sklego.base.ProbabilisticClassifierMeta": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "sklego.base.ProbabilisticClassifierMeta.__instancecheck__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklego.common": {
  "data": {},
  "type": "module"
 },
 "sklego.common.TrainOnlyTransformerMixin": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "hash",
    "numpy.memmap",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.util.hash_pandas_object",
    "sklearn.base.TransformerMixin",
    "sklego.common.hashlib"
   ]
  },
  "type": "class"
 },
 "sklego.common.TrainOnlyTransformerMixin._hash": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "hasher",
    "sklego.common.TrainOnlyTransformerMixin",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.fit": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_X_y",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.transform": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.transform_test": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "sklego.common.TrainOnlyTransformerMixin.transform_train": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklego.common.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.common.as_list": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.common.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklego.common.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.common.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.common.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "sklego.common.expanding_list": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "return_type",
    "sklego.common.as_list"
   ]
  },
  "type": "function"
 },
 "sklego.common.flatten": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "sklego.common.collections",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.common.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "sklego.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.datasets": {
  "data": {},
  "type": "module"
 },
 "sklego.datasets.fetch_creditcard": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "sklearn.datasets.fetch_openml"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.fetch_openml": {
  "data": {
   "shadows": "sklearn.datasets.fetch_openml"
  },
  "type": "import"
 },
 "sklego.datasets.load_abalone": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.read_csv",
    "pkg_resources.resource_filename",
    "sklego.datasets.os",
    "sklego.datasets.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.load_arrests": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.read_csv",
    "pkg_resources.resource_filename",
    "sklego.datasets.os",
    "sklego.datasets.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.load_chicken": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.read_csv",
    "pkg_resources.resource_filename",
    "sklego.datasets.os",
    "sklego.datasets.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.load_hearts": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.read_csv",
    "pkg_resources.resource_filename",
    "sklego.datasets.os",
    "sklego.datasets.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.load_heroes": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.read_csv",
    "pkg_resources.resource_filename",
    "sklego.datasets.os",
    "sklego.datasets.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.load_penguins": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.read_csv",
    "pkg_resources.resource_filename",
    "sklego.datasets.os",
    "sklego.datasets.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.make_simpleseries": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.date_range",
    "sklego.datasets.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sklego.datasets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.datasets.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "sklego.datasets.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklego.decomposition": {
  "data": {},
  "type": "module"
 },
 "sklego.decomposition.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sklego.decomposition.pca_reconstruction": {
  "data": {},
  "type": "module"
 },
 "sklego.decomposition.pca_reconstruction.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.decomposition.pca_reconstruction.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.decomposition.pca_reconstruction.OutlierMixin": {
  "data": {
   "shadows": "sklearn.base.OutlierMixin"
  },
  "type": "import"
 },
 "sklego.decomposition.pca_reconstruction.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.OutlierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection.decision_function": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection.difference": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection.fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.decomposition.PCA",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection.predict": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.ones",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection.score_samples": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "sklego.decomposition.pca_reconstruction.PCAOutlierDetection.transform": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.pca_reconstruction.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.decomposition.pca_reconstruction.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.decomposition.pca_reconstruction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.decomposition.umap_reconstruction": {
  "data": {},
  "type": "module"
 },
 "sklego.decomposition.umap_reconstruction.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.decomposition.umap_reconstruction.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.decomposition.umap_reconstruction.OutlierMixin": {
  "data": {
   "shadows": "sklearn.base.OutlierMixin"
  },
  "type": "import"
 },
 "sklego.decomposition.umap_reconstruction.UMAPOutlierDetection": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.OutlierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.decomposition.umap_reconstruction.UMAPOutlierDetection.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "sklego.decomposition.umap_reconstruction.UMAPOutlierDetection.difference": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.umap_reconstruction.UMAPOutlierDetection.fit": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklego.decomposition.umap_reconstruction.umap"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.umap_reconstruction.UMAPOutlierDetection.predict": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.ones",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.umap_reconstruction.UMAPOutlierDetection.transform": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.decomposition.umap_reconstruction.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.decomposition.umap_reconstruction.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.decomposition.umap_reconstruction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.decomposition.umap_reconstruction.umap": {
  "data": {
   "shadows": "umap"
  },
  "type": "import"
 },
 "sklego.dummy": {
  "data": {},
  "type": "module"
 },
 "sklego.dummy.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.dummy.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.dummy.RandomRegressor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.RegressorMixin"
   ]
  },
  "type": "class"
 },
 "sklego.dummy.RandomRegressor.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "sklego.dummy.RandomRegressor.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "sklearn.utils.check_X_y",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.dummy.RandomRegressor.predict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklego.dummy.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "sklego.dummy.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.dummy.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.dummy.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.dummy.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklego.dummy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.linear_model": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "cvxpy",
    "sklego.notinstalled.NotInstalledPackage"
   ]
  },
  "type": "module"
 },
 "sklego.linear_model.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.linear_model.DeadZoneRegressor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.RegressorMixin"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model.DeadZoneRegressor.__init__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.fit": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "autograd.grad",
    "autograd.numpy.random.normal",
    "autograd.numpy.zeros",
    "autograd.test_util.check_grads",
    "range",
    "sklearn.utils.check_X_y",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "training_gradient_fun",
    "training_loss"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.fit.deadzone": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "autograd.numpy.where",
    "autograd.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.fit.training_loss": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "autograd.numpy.abs",
    "autograd.numpy.dot",
    "autograd.numpy.mean",
    "deadzone"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.DeadZoneRegressor.predict": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.DemographicParityClassifier": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.linear_model.base.LinearClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model.DemographicParityClassifier.__new__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "_DemographicParityClassifier",
    "multiclass_meta",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.EqualOpportunityClassifier": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.linear_model.base.LinearClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model.EqualOpportunityClassifier.__new__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "_EqualOpportunityClassifier",
    "multiclass_meta",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.linear_model.FairClassifier": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "deprecated.sphinx.deprecated",
    "sklego.linear_model.DemographicParityClassifier"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model.FairClassifier.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "sklego.linear_model.LinearClassifierMixin": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearClassifierMixin"
  },
  "type": "import"
 },
 "sklego.linear_model.LowessRegression": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.RegressorMixin"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model.LowessRegression.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sklego.linear_model.LowessRegression._calc_wts": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "autograd.numpy.exp",
    "autograd.numpy.linalg.norm",
    "autograd.numpy.quantile",
    "range"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.LowessRegression.fit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_X_y",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.LowessRegression.predict": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "autograd.numpy.average",
    "autograd.numpy.zeros",
    "range",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.NotInstalledPackage": {
  "data": {
   "shadows": "sklego.notinstalled.NotInstalledPackage"
  },
  "type": "import"
 },
 "sklego.linear_model.OneVsOneClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsOneClassifier"
  },
  "type": "import"
 },
 "sklego.linear_model.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "sklego.linear_model.ProbWeightRegression": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.RegressorMixin"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model.ProbWeightRegression.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "sklego.linear_model.ProbWeightRegression.fit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "cvxpy.Minimize",
    "cvxpy.Problem",
    "cvxpy.Variable",
    "cvxpy.sum_squares",
    "sklearn.utils.check_X_y",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.ProbWeightRegression.predict": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "sklego.linear_model._DemographicParityClassifier": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "sklego.linear_model._FairClassifier"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model._DemographicParityClassifier.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._DemographicParityClassifier.constraints": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "autograd.numpy.mean",
    "cvxpy.abs"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._EqualOpportunityClassifier": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "sklego.linear_model._FairClassifier"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model._EqualOpportunityClassifier.__init__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._EqualOpportunityClassifier.constraints": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "autograd.numpy.mean",
    "cvxpy.abs",
    "len"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._FairClassifier": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.linear_model.base.LinearClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.linear_model._FairClassifier.__init__": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "sklego.linear_model._FairClassifier._add_intercept": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "autograd.numpy.c_",
    "autograd.numpy.ones",
    "len"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._FairClassifier._solve": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "autograd.numpy.array",
    "autograd.numpy.newaxis",
    "autograd.numpy.zeros",
    "cvxpy.Maximize",
    "cvxpy.Problem",
    "cvxpy.Variable",
    "cvxpy.hstack",
    "cvxpy.log_sum_exp",
    "cvxpy.multiply",
    "cvxpy.norm",
    "cvxpy.reshape",
    "cvxpy.sum"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.constraints": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.decision_function": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "autograd.numpy.delete",
    "sklearn.utils.validation.check_array",
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.fit": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "autograd.numpy.delete",
    "enumerate",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.utils.check_X_y",
    "sklearn.utils.validation.column_or_1d"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model._FairClassifier.predict_proba": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "autograd.numpy.c_",
    "scipy.special._ufuncs.expit"
   ]
  },
  "type": "function"
 },
 "sklego.linear_model.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.linear_model.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.linear_model.check_grads": {
  "data": {
   "shadows": "autograd.test_util.check_grads"
  },
  "type": "import"
 },
 "sklego.linear_model.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.linear_model.column_or_1d": {
  "data": {
   "shadows": "sklearn.utils.validation.column_or_1d"
  },
  "type": "import"
 },
 "sklego.linear_model.cp": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklego.linear_model.deprecated": {
  "data": {
   "shadows": "deprecated.sphinx.deprecated"
  },
  "type": "import"
 },
 "sklego.linear_model.expit": {
  "data": {
   "shadows": "scipy.special._ufuncs.expit"
  },
  "type": "import"
 },
 "sklego.linear_model.grad": {
  "data": {
   "shadows": "autograd.grad"
  },
  "type": "import"
 },
 "sklego.linear_model.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "sklego.linear_model.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.meta": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "sklego.meta._grouped_utils": {
  "data": {},
  "type": "module"
 },
 "sklego.meta._grouped_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "sklego.meta._grouped_utils._check_grouping_columns": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.meta._grouped_utils._data_format_checks": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "scipy.sparse.issparse",
    "sklearn.utils.validation._ensure_no_complex_data"
   ]
  },
  "type": "function"
 },
 "sklego.meta._grouped_utils._ensure_no_complex_data": {
  "data": {
   "shadows": "sklearn.utils.validation._ensure_no_complex_data"
  },
  "type": "import"
 },
 "sklego.meta._grouped_utils._shape_check": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sklego.meta._grouped_utils._split_groups_and_values": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "ValueError",
    "_check_grouping_columns",
    "_data_format_checks",
    "_shape_check",
    "isinstance",
    "numpy.delete",
    "numpy.ndarray",
    "pandas.DataFrame",
    "range",
    "sklearn.utils.check_array",
    "sklego.common.as_list",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "sklego.meta._grouped_utils.as_list": {
  "data": {
   "shadows": "sklego.common.as_list"
  },
  "type": "import"
 },
 "sklego.meta._grouped_utils.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.meta._grouped_utils.constant_shrinkage": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "sklego.meta._grouped_utils.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "sklego.meta._grouped_utils.min_n_obs_shrinkage": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "max",
    "numpy.argmin",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklego.meta._grouped_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta._grouped_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.meta._grouped_utils.relative_shrinkage": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklego.meta.confusion_balancer": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.confusion_balancer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.ConfusionBalancer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin",
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.confusion_balancer.ConfusionBalancer.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklego.meta.confusion_balancer.ConfusionBalancer.fit": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.metrics.confusion_matrix",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_X_y",
    "sklego.base.ProbabilisticClassifier"
   ]
  },
  "type": "function"
 },
 "sklego.meta.confusion_balancer.ConfusionBalancer.predict": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.confusion_balancer.ConfusionBalancer.predict_proba": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.meta.confusion_balancer.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.ProbabilisticClassifier": {
  "data": {
   "shadows": "sklego.base.ProbabilisticClassifier"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklego.meta.confusion_balancer.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklego.meta.decay_estimator": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.decay_estimator.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.decay_estimator.DecayEstimator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklego.meta.decay_estimator.DecayEstimator.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklego.meta.decay_estimator.DecayEstimator._is_classifier": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "any",
    "type"
   ]
  },
  "type": "function"
 },
 "sklego.meta.decay_estimator.DecayEstimator.fit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "numpy.cumprod",
    "numpy.ones",
    "sklearn.clone",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_X_y",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "sklego.meta.decay_estimator.DecayEstimator.predict": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.decay_estimator.DecayEstimator.score": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "sklego.meta.decay_estimator.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.meta.decay_estimator.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklego.meta.decay_estimator.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.decay_estimator.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "sklego.meta.decay_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.estimator_transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer.EstimatorTransformer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.MetaEstimatorMixin",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.estimator_transformer.EstimatorTransformer.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sklego.meta.estimator_transformer.EstimatorTransformer.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklearn.clone",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklego.meta.estimator_transformer.EstimatorTransformer.transform": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "getattr",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.estimator_transformer.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "sklego.meta.estimator_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta.grouped_estimator": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.grouped_estimator.GroupedEstimator": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "GroupedPredictor",
    "deprecated.deprecated"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_estimator.deprecated": {
  "data": {
   "shadows": "deprecated.deprecated"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.grouped_predictor.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__add_shrinkage_column": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__check_shrinkage_func": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__fit_grouped_estimator": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__fit_shrinkage_groups": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__fit_single_group": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "sklearn.clone",
    "type"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__get_shrinkage_factor": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "sklego.common.as_list",
    "sklego.common.expanding_list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__predict_groups": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__predict_shrinkage_groups": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.DataFrame.from_dict",
    "pandas.Series",
    "pandas.concat",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__predict_single_group": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.__set_shrinkage_function": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "callable",
    "isinstance",
    "len",
    "list",
    "sklego.common.as_list",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.fit": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "_split_groups_and_values",
    "list",
    "sklearn.clone",
    "sklearn.utils.validation.check_array",
    "sklego.common.as_list",
    "sklego.common.expanding_list"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.GroupedPredictor.predict": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "_split_groups_and_values",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_predictor.as_list": {
  "data": {
   "shadows": "sklego.common.as_list"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor.expanding_list": {
  "data": {
   "shadows": "sklego.common.expanding_list"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta.grouped_predictor.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.meta.grouped_transformer": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.grouped_transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.__check_transformer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.__fit_grouped_transformer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.__fit_single_group": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "sklearn.base.clone",
    "type"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.__transform_groups": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.__transform_single_group": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.fit": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_split_groups_and_values",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.GroupedTransformer.transform": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_split_groups_and_values",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.grouped_transformer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.meta.grouped_transformer.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.grouped_transformer.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "sklego.meta.grouped_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta.grouped_transformer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.meta.outlier_classifier": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.outlier_classifier.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.outlier_classifier.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.meta.outlier_classifier.OutlierClassifier": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.outlier_classifier.OutlierClassifier.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "sklego.meta.outlier_classifier.OutlierClassifier._is_outlier_model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "isinstance",
    "sklego.base.OutlierModel"
   ]
  },
  "type": "function"
 },
 "sklego.meta.outlier_classifier.OutlierClassifier.fit": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklearn.utils.validation.check_X_y"
   ]
  },
  "type": "function"
 },
 "sklego.meta.outlier_classifier.OutlierClassifier.predict": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.zeros",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.outlier_classifier.OutlierModel": {
  "data": {
   "shadows": "sklego.base.OutlierModel"
  },
  "type": "import"
 },
 "sklego.meta.outlier_classifier.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklego.meta.outlier_classifier.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.outlier_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta.outlier_remover": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.outlier_remover.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.outlier_remover.OutlierRemover": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "deprecated.deprecated",
    "sklearn.base.BaseEstimator",
    "sklego.common.TrainOnlyTransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.outlier_remover.OutlierRemover.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "sklego.meta.outlier_remover.OutlierRemover.fit": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "sklearn.clone",
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.meta.outlier_remover.OutlierRemover.transform_train": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.outlier_remover.TrainOnlyTransformerMixin": {
  "data": {
   "shadows": "sklego.common.TrainOnlyTransformerMixin"
  },
  "type": "import"
 },
 "sklego.meta.outlier_remover.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.meta.outlier_remover.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.outlier_remover.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "sklego.meta.outlier_remover.deprecated": {
  "data": {
   "shadows": "deprecated.deprecated"
  },
  "type": "import"
 },
 "sklego.meta.regression_outlier_detector": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.regression_outlier_detector.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.regression_outlier_detector.OutlierMixin": {
  "data": {
   "shadows": "sklearn.base.OutlierMixin"
  },
  "type": "import"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.OutlierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector._handle_thresholds": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector._is_regression_model": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "any",
    "type"
   ]
  },
  "type": "function"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector.fit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.argmax",
    "numpy.std",
    "pandas.DataFrame",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector.predict": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector.score_samples": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.regression_outlier_detector.RegressionOutlierDetector.to_x_y": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sklego.meta.regression_outlier_detector.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.meta.regression_outlier_detector.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.regression_outlier_detector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta.regression_outlier_detector.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.subjective_classifier.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin",
    "sklearn.base.MetaEstimatorMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier._evidence": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier._likelihood": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier._posterior": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier._to_discrete": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier._weighted_proba": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sklearn.preprocessing.normalize",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier.classes_": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier.fit": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array",
    "numpy.isclose",
    "range",
    "set",
    "sklearn.base.ClassifierMixin",
    "sklearn.metrics.confusion_matrix",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_X_y",
    "sum"
   ]
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier.predict": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.SubjectiveClassifier.predict_proba": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.subjective_classifier.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.confusion_matrix": {
  "data": {
   "shadows": "sklearn.metrics.confusion_matrix"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing.normalize"
  },
  "type": "import"
 },
 "sklego.meta.subjective_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.meta.thresholder": {
  "data": {},
  "type": "module"
 },
 "sklego.meta.thresholder.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.meta.thresholder.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.meta.thresholder.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.meta.thresholder.ProbabilisticClassifier": {
  "data": {
   "shadows": "sklego.base.ProbabilisticClassifier"
  },
  "type": "import"
 },
 "sklego.meta.thresholder.Thresholder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.meta.thresholder.Thresholder.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sklego.meta.thresholder.Thresholder.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "sklearn.clone",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_X_y",
    "sklego.base.ProbabilisticClassifier"
   ]
  },
  "type": "function"
 },
 "sklego.meta.thresholder.Thresholder.predict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.where",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.thresholder.Thresholder.predict_proba": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.meta.thresholder.Thresholder.score": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sklego.meta.thresholder.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.validation.check_X_y"
  },
  "type": "import"
 },
 "sklego.meta.thresholder.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.meta.thresholder.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "sklego.meta.thresholder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.metrics": {
  "data": {},
  "type": "module"
 },
 "sklego.metrics.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "sklego.metrics.correlation_score": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "sklego.metrics.correlation_score.correlation_metric": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklego.metrics.equal_opportunity_score": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "sklego.metrics.equal_opportunity_score.impl": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.isnan",
    "numpy.mean",
    "numpy.minimum",
    "numpy.ndarray",
    "numpy.unique",
    "sklego.metrics.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.metrics.p_percent_score": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "sklego.metrics.p_percent_score.impl": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "isinstance",
    "numpy.all",
    "numpy.isnan",
    "numpy.mean",
    "numpy.minimum",
    "numpy.ndarray",
    "numpy.unique",
    "sklego.metrics.warnings"
   ]
  },
  "type": "function"
 },
 "sklego.metrics.subset_score": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "sklego.metrics.subset_score.sliced_metric": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "isinstance",
    "len",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.sum",
    "score",
    "sklego.metrics.warnings",
    "subset_picker"
   ]
  },
  "type": "function"
 },
 "sklego.metrics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sklego.mixture": {
  "data": {},
  "type": "module"
 },
 "sklego.mixture.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "sklego.mixture.bayesian_gmm_classifier": {
  "data": {},
  "type": "module"
 },
 "sklego.mixture.bayesian_gmm_classifier.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.BayesianGMMClassifier": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.mixture.bayesian_gmm_classifier.BayesianGMMClassifier.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_classifier.BayesianGMMClassifier.fit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.expand_dims",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.check_X_y",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_classifier.BayesianGMMClassifier.predict": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_classifier.BayesianGMMClassifier.predict_proba": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "enumerate",
    "numpy.exp",
    "numpy.newaxis",
    "numpy.zeros",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_classifier.BayesianGaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.BayesianGaussianMixture"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_classifier.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector": {
  "data": {},
  "type": "module"
 },
 "sklego.mixture.bayesian_gmm_detector.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.BayesianGMMOutlierDetector": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.OutlierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.mixture.bayesian_gmm_detector.BayesianGMMOutlierDetector.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_detector.BayesianGMMOutlierDetector.decision_function": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_detector.BayesianGMMOutlierDetector.fit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "density",
    "len",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.quantile",
    "numpy.std",
    "scipy.optimize.minimize_scalar",
    "scipy.stats.gaussian_kde",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_detector.BayesianGMMOutlierDetector.predict": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_detector.BayesianGMMOutlierDetector.score_samples": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "numpy.expand_dims",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.bayesian_gmm_detector.BayesianGaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.BayesianGaussianMixture"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.OutlierMixin": {
  "data": {
   "shadows": "sklearn.base.OutlierMixin"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.minimize_scalar": {
  "data": {
   "shadows": "scipy.optimize.minimize_scalar"
  },
  "type": "import"
 },
 "sklego.mixture.bayesian_gmm_detector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier": {
  "data": {},
  "type": "module"
 },
 "sklego.mixture.gmm_classifier.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.GMMClassifier": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.mixture.gmm_classifier.GMMClassifier.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "sklego.mixture.gmm_classifier.GMMClassifier.fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.expand_dims",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils.check_X_y",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.gmm_classifier.GMMClassifier.predict": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.gmm_classifier.GMMClassifier.predict_proba": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "enumerate",
    "numpy.exp",
    "numpy.newaxis",
    "numpy.zeros",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.gmm_classifier.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_classifier.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector": {
  "data": {},
  "type": "module"
 },
 "sklego.mixture.gmm_outlier_detector.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.GMMOutlierDetector": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.OutlierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.mixture.gmm_outlier_detector.GMMOutlierDetector.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "sklego.mixture.gmm_outlier_detector.GMMOutlierDetector.decision_function": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "sklego.mixture.gmm_outlier_detector.GMMOutlierDetector.fit": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "density",
    "len",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.quantile",
    "numpy.std",
    "scipy.optimize.minimize_scalar",
    "scipy.stats.gaussian_kde",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.gmm_outlier_detector.GMMOutlierDetector.predict": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.gmm_outlier_detector.GMMOutlierDetector.score_samples": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len",
    "numpy.expand_dims",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.mixture.gmm_outlier_detector.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.OutlierMixin": {
  "data": {
   "shadows": "sklearn.base.OutlierMixin"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.minimize_scalar": {
  "data": {
   "shadows": "scipy.optimize.minimize_scalar"
  },
  "type": "import"
 },
 "sklego.mixture.gmm_outlier_detector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.model_selection": {
  "data": {},
  "type": "module"
 },
 "sklego.model_selection.Clusterer": {
  "data": {
   "shadows": "sklego.base.Clusterer"
  },
  "type": "import"
 },
 "sklego.model_selection.KlusterFoldValidation": {
  "data": {
   "lineno": 206
  },
  "type": "class"
 },
 "sklego.model_selection.KlusterFoldValidation.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklego.base.Clusterer"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.KlusterFoldValidation._method_is_fitted": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "sklearn.exceptions.NotFittedError"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.KlusterFoldValidation.split": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.unique",
    "numpy.where",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "sklego.model_selection.TimeGapSplit": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sklego.model_selection.TimeGapSplit.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit._join_date_and_x": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit.get_n_splits": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit.split": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit.summary": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "get_split_info",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.TimeGapSplit.summary.get_split_info": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "sklego.model_selection.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.model_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.model_selection.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.model_selection.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "sklego.naive_bayes": {
  "data": {},
  "type": "module"
 },
 "sklego.naive_bayes.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.naive_bayes.BayesianGaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.BayesianGaussianMixture"
  },
  "type": "import"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.__init__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.fit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.expand_dims",
    "range",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.utils.check_X_y",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.predict": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.naive_bayes.BayesianGaussianMixtureNB.predict_proba": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "numpy.argwhere",
    "numpy.array",
    "numpy.exp",
    "numpy.expand_dims",
    "numpy.zeros",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.naive_bayes.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.naive_bayes.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.naive_bayes.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "sklego.naive_bayes.GaussianMixtureNB": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.naive_bayes.GaussianMixtureNB.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "sklego.naive_bayes.GaussianMixtureNB.fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.expand_dims",
    "range",
    "sklearn.mixture.GaussianMixture",
    "sklearn.utils.check_X_y",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.naive_bayes.GaussianMixtureNB.predict": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.naive_bayes.GaussianMixtureNB.predict_proba": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "numpy.argwhere",
    "numpy.array",
    "numpy.exp",
    "numpy.expand_dims",
    "numpy.zeros",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.naive_bayes.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.naive_bayes.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.naive_bayes.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.naive_bayes.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklego.neighbors": {
  "data": {},
  "type": "module"
 },
 "sklego.neighbors.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.neighbors.BayesianKernelDensityClassifier": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin"
   ]
  },
  "type": "class"
 },
 "sklego.neighbors.BayesianKernelDensityClassifier.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "sklego.neighbors.BayesianKernelDensityClassifier.fit": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "numpy.log",
    "numpy.ndarray",
    "sklearn.neighbors.KernelDensity",
    "sklearn.utils.check_X_y",
    "sklearn.utils.multiclass.unique_labels",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.neighbors.BayesianKernelDensityClassifier.predict": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.argmax",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.neighbors.BayesianKernelDensityClassifier.predict_proba": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.exp",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.neighbors.ClassifierMixin": {
  "data": {
   "shadows": "sklearn.base.ClassifierMixin"
  },
  "type": "import"
 },
 "sklego.neighbors.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.neighbors.KernelDensity": {
  "data": {
   "shadows": "sklearn.neighbors.KernelDensity"
  },
  "type": "import"
 },
 "sklego.neighbors.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.neighbors.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.neighbors.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.neighbors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.neighbors.unique_labels": {
  "data": {
   "shadows": "sklearn.utils.multiclass.unique_labels"
  },
  "type": "import"
 },
 "sklego.notinstalled": {
  "data": {},
  "type": "module"
 },
 "sklego.notinstalled.KNOWN_PACKAGES": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "sklego.notinstalled.NotInstalledPackage": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "sklego.notinstalled.NotInstalledPackage.__getattr__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "sklego.notinstalled.NotInstalledPackage.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "sklego.notinstalled.KNOWN_PACKAGES",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.pandas_utils": {
  "data": {},
  "type": "module"
 },
 "sklego.pandas_utils._add_lagged_numpy_columns": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "all",
    "float",
    "int",
    "isinstance",
    "numpy.NaN",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.isnan",
    "scipy.ndimage.interpolation.shift",
    "sklego.common.as_list"
   ]
  },
  "type": "function"
 },
 "sklego.pandas_utils._add_lagged_pandas_columns": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "KeyError",
    "all",
    "pandas.concat",
    "sklego.common.as_list",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.pandas_utils.add_lags": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "handler",
    "int",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.core.frame.DataFrame",
    "sklego.common.as_list",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.pandas_utils.as_list": {
  "data": {
   "shadows": "sklego.common.as_list"
  },
  "type": "import"
 },
 "sklego.pandas_utils.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "sklego.pandas_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "sklego.pandas_utils.log_step": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "functools.partial",
    "sklego.pandas_utils.logging"
   ]
  },
  "type": "function"
 },
 "sklego.pandas_utils.log_step.wrapper": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "func",
    "func.__name__",
    "functools.wraps",
    "list",
    "sklego.pandas_utils.inspect",
    "sklego.pandas_utils.logging",
    "sklego.pandas_utils.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.pandas_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklego.pandas_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.pandas_utils.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklego.pandas_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.pandas_utils.shift": {
  "data": {
   "shadows": "scipy.ndimage.interpolation.shift"
  },
  "type": "import"
 },
 "sklego.pandas_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sklego.pandas_utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "sklego.pipeline": {
  "data": {},
  "type": "module"
 },
 "sklego.pipeline.DebugPipeline": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "class"
 },
 "sklego.pipeline.DebugPipeline.__init__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "log_callback",
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline.DebugPipeline.log_callback": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "func",
    "log_callback.setter",
    "sklego.pipeline.default_log_callback"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline.DebugPipeline.memory": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "sklego.pipeline.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "sklego.pipeline._cache_with_function_log_statement": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklego.pipeline.default_log_callback"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline._cache_with_function_log_statement._": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "callable",
    "func",
    "log_callback",
    "sklego.pipeline._log_wrapper"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline._log_wrapper": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sklego.pipeline.default_log_callback"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline._log_wrapper._": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "sklego.pipeline._log_wrapper._._": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "func",
    "log_callback",
    "sklego.pipeline.time"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline._name_estimators": {
  "data": {
   "shadows": "sklearn.pipeline._name_estimators"
  },
  "type": "import"
 },
 "sklego.pipeline.check_memory": {
  "data": {
   "shadows": "sklearn.utils.validation.check_memory"
  },
  "type": "import"
 },
 "sklego.pipeline.default_log_callback": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "__name__",
    "int",
    "sklego.pipeline.logging"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "sklego.pipeline.make_debug_pipeline": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "log_callback",
    "sklearn.pipeline._name_estimators",
    "sklego.pipeline.DebugPipeline"
   ]
  },
  "type": "function"
 },
 "sklego.pipeline.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sklego.preprocessing": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "sklego.preprocessing.columncapper": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.columncapper.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.columncapper.ColumnCapper": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.columncapper.ColumnCapper.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sklego.preprocessing.columncapper.ColumnCapper._check_interpolation": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.columncapper.ColumnCapper._check_quantile_range": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.columncapper.ColumnCapper.fit": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nanquantile",
    "numpy.putmask",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.FLOAT_DTYPES"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.columncapper.ColumnCapper.transform": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.nan",
    "numpy.putmask",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.columncapper.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.preprocessing.columncapper.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.columncapper.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.columncapper.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.columncapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.preprocessing.dictmapper": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.dictmapper.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.dictmapper.DictMapper": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.dictmapper.DictMapper.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "sklego.preprocessing.dictmapper.DictMapper.fit": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.dictmapper.DictMapper.transform": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.vectorize",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.dictmapper.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.dictmapper.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.dictmapper.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.dictmapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.preprocessing.dictmapper.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "sklego.preprocessing.identitytransformer": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.identitytransformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.identitytransformer.IdentityTransformer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.identitytransformer.IdentityTransformer.fit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.identitytransformer.IdentityTransformer.transform": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.identitytransformer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.identitytransformer.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.identitytransformer.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.intervalencoder": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "cvxpy",
    "sklego.notinstalled.NotInstalledPackage"
   ]
  },
  "type": "module"
 },
 "sklego.preprocessing.intervalencoder.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.intervalencoder.IntervalEncoder": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.intervalencoder.IntervalEncoder.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "sklego.preprocessing.intervalencoder.IntervalEncoder.fit": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "average_func",
    "numpy.linspace",
    "numpy.quantile",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_X_y",
    "sklego.preprocessing.intervalencoder._mk_average",
    "sklego.preprocessing.intervalencoder._mk_monotonic_average"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.intervalencoder.IntervalEncoder.transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "numpy.interp",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.intervalencoder.NotInstalledPackage": {
  "data": {
   "shadows": "sklego.notinstalled.NotInstalledPackage"
  },
  "type": "import"
 },
 "sklego.preprocessing.intervalencoder.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.intervalencoder._mk_average": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.abs",
    "numpy.average",
    "numpy.exp",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.intervalencoder._mk_monotonic_average": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "cvxpy.Minimize",
    "cvxpy.Problem",
    "cvxpy.Variable",
    "cvxpy.sum_squares",
    "numpy.array",
    "numpy.float",
    "range"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.intervalencoder.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.preprocessing.intervalencoder.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.intervalencoder.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.intervalencoder.cp": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sklego.preprocessing.intervalencoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.preprocessing.outlier_remover": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.outlier_remover.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.outlier_remover.OutlierRemover": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklego.common.TrainOnlyTransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.outlier_remover.OutlierRemover.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "sklego.preprocessing.outlier_remover.OutlierRemover.fit": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.clone",
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.outlier_remover.OutlierRemover.transform_train": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.outlier_remover.TrainOnlyTransformerMixin": {
  "data": {
   "shadows": "sklego.common.TrainOnlyTransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.outlier_remover.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.outlier_remover.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.outlier_remover.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "sklego.preprocessing.pandastransformers": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.pandastransformers.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper._check_X_for_type": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.DataFrame",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper._check_column_length": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper._check_column_names": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper.fit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "list",
    "sklego.common.as_list"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper.get_feature_names": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnDropper.transform": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector._check_X_for_type": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.DataFrame",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector._check_column_length": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector._check_column_names": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector.fit": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "sklego.common.as_list"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector.get_feature_names": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.ColumnSelector.transform": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.PandasTypeSelector": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.pandastransformers.PandasTypeSelector.__init__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.PandasTypeSelector._check_X_for_type": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.DataFrame",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.PandasTypeSelector.fit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.PandasTypeSelector.get_feature_names": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.PandasTypeSelector.transform": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.pandastransformers.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.pandastransformers.as_list": {
  "data": {
   "shadows": "sklego.common.as_list"
  },
  "type": "import"
 },
 "sklego.preprocessing.pandastransformers.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.pandastransformers.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.preprocessing.patsytransformer": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.patsytransformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.patsytransformer.PatsyError": {
  "data": {
   "shadows": "patsy.PatsyError"
  },
  "type": "import"
 },
 "sklego.preprocessing.patsytransformer.PatsyTransformer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.patsytransformer.PatsyTransformer.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "sklego.preprocessing.patsytransformer.PatsyTransformer.fit": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array",
    "patsy.dmatrix"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.patsytransformer.PatsyTransformer.transform": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "patsy.PatsyError",
    "patsy.build_design_matrices",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.patsytransformer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.patsytransformer.build_design_matrices": {
  "data": {
   "shadows": "patsy.build_design_matrices"
  },
  "type": "import"
 },
 "sklego.preprocessing.patsytransformer.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.patsytransformer.dmatrix": {
  "data": {
   "shadows": "patsy.dmatrix"
  },
  "type": "import"
 },
 "sklego.preprocessing.patsytransformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.projections.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections.InformationFilter": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.projections.InformationFilter.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.InformationFilter._check_coltype": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.ndarray",
    "pandas.DataFrame",
    "range",
    "sklego.common.as_list",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.InformationFilter._col_idx": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "numpy.ndarray",
    "str"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.InformationFilter._make_v_vectors": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "range",
    "sklego.preprocessing.projections.vector_projection"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.InformationFilter.fit": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "numpy.linalg.lstsq",
    "sklearn.utils.check_array",
    "sklego.common.as_list",
    "sklego.preprocessing.projections.vector_projection"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.InformationFilter.transform": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.delete",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.OrthogonalTransformer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.projections.OrthogonalTransformer.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.OrthogonalTransformer.fit": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "numpy.linalg.inv",
    "numpy.linalg.norm",
    "numpy.linalg.qr",
    "numpy.ones",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.OrthogonalTransformer.transform": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.utils.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections.as_list": {
  "data": {
   "shadows": "sklego.common.as_list"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "sklego.preprocessing.projections.scalar_projection": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "sklego.preprocessing.projections.vector_projection": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sklego.preprocessing.projections.scalar_projection"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.randomadder": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.randomadder.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.randomadder.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "sklego.preprocessing.randomadder.RandomAdder": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklego.common.TrainOnlyTransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.randomadder.RandomAdder.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "sklego.preprocessing.randomadder.RandomAdder.fit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.utils.check_X_y",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "super"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.randomadder.RandomAdder.transform_train": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.utils.check_array",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_is_fitted",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.randomadder.TrainOnlyTransformerMixin": {
  "data": {
   "shadows": "sklego.common.TrainOnlyTransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.randomadder.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "sklego.preprocessing.randomadder.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.randomadder.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.randomadder.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "sklego.preprocessing.repeatingbasis": {
  "data": {},
  "type": "module"
 },
 "sklego.preprocessing.repeatingbasis.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "sklego.preprocessing.repeatingbasis.ColumnTransformer": {
  "data": {
   "shadows": "sklearn.compose.ColumnTransformer"
  },
  "type": "import"
 },
 "sklego.preprocessing.repeatingbasis.RepeatingBasisFunction": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.repeatingbasis.RepeatingBasisFunction.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis.RepeatingBasisFunction.fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_RepeatingBasisFunction",
    "sklearn.compose.ColumnTransformer"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis.RepeatingBasisFunction.transform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction._array_base_distance": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "float",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction._array_bases_distances": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.apply_along_axis"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction._rbf": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction.fit": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.linspace",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction.transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.check_array",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "sklego.preprocessing.repeatingbasis.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "sklego.preprocessing.repeatingbasis.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "sklego.preprocessing.repeatingbasis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sklego.testing": {
  "data": {},
  "type": "module"
 },
 "sklego.testing.check_shape_remains_same_classifier": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "copy.copy",
    "itertools.product",
    "sklearn.datasets.make_classification",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklego.testing.check_shape_remains_same_regressor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "copy.copy",
    "itertools.product",
    "sklearn.datasets.make_regression",
    "sklearn.utils.testing.ignore_warnings"
   ]
  },
  "type": "function"
 },
 "sklego.testing.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "sklego.testing.ignore_warnings": {
  "data": {
   "shadows": "sklearn.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "sklego.testing.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sklego.testing.make_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_classification"
  },
  "type": "import"
 },
 "sklego.testing.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "sklego.this": {
  "data": {
   "symbols_in_volume": [
    "print",
    "sklego.this.poem"
   ]
  },
  "type": "module"
 },
 "sklego.this.poem": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
    "sklearn.utils.estimator_checks.check_classifiers_classes",
    "sklearn.utils.estimator_checks.check_classifiers_one_label",
    "sklearn.utils.estimator_checks.check_classifiers_train",
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_decision_proba_consistency",
    "sklearn.utils.estimator_checks.check_dict_unchanged",
    "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
    "sklearn.utils.estimator_checks.check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_fit2d_predict1d",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_methods_subset_invariance",
    "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
    "sklearn.utils.estimator_checks.check_outliers_fit_predict",
    "sklearn.utils.estimator_checks.check_outliers_train",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
    "sklearn.utils.estimator_checks.check_regressors_int",
    "sklearn.utils.estimator_checks.check_regressors_no_decision_function",
    "sklearn.utils.estimator_checks.check_regressors_train",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklearn.utils.estimator_checks.check_supervised_y_2d",
    "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
    "sklearn.utils.estimator_checks.check_transformer_data_not_an_array",
    "sklearn.utils.estimator_checks.check_transformer_general",
    "sklearn.utils.estimator_checks.check_transformers_unfitted"
   ]
  },
  "type": "module"
 },
 "tests.conftest.classifier_checks": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tests.conftest.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.conftest.general_checks": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tests.conftest.id_func": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "tests.conftest.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tests.conftest.k_vals": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "tests.conftest.n_vals": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.conftest.nonmeta_checks": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tests.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.conftest.np_types": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "tests.conftest.outlier_checks": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tests.conftest.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.conftest.random_xy_dataset_clf": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.conftest.k_vals",
    "tests.conftest.n_vals",
    "tests.conftest.np_types",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_multiclf": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.random.normal",
    "numpy.random.seed",
    "pandas.cut",
    "tests.conftest.k_vals",
    "tests.conftest.n_vals",
    "tests.conftest.np_types",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_regr": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.conftest.k_vals",
    "tests.conftest.n_vals",
    "tests.conftest.np_types",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_regr_small": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.conftest.np_types",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.regressor_checks": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tests.conftest.select_tests": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "tests.conftest.sensitive_classification_dataset": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.sensitive_multiclass_classification_dataset": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.transformer_checks": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.test_common": {
  "data": {},
  "type": "module"
 },
 "tests.test_common.test_basics": {
  "data": {},
  "type": "module"
 },
 "tests.test_common.test_basics.as_list": {
  "data": {
   "shadows": "sklego.common.as_list"
  },
  "type": "import"
 },
 "tests.test_common.test_basics.test_as_list_ints": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklego.common.as_list"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_basics.test_as_list_other": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "range",
    "sklego.common.as_list"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_basics.test_as_list_other.f": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "tests.test_common.test_basics.test_as_list_strings": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "sklego.common.as_list"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin": {
  "data": {},
  "type": "module"
 },
 "tests.test_common.test_transformerselectormixin.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklego.common.TrainOnlyTransformerMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer.fit": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer.transform_train": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.TrainOnlyTransformerMixin": {
  "data": {
   "shadows": "sklego.common.TrainOnlyTransformerMixin"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.k_vals": {
  "data": {
   "shadows": "tests.conftest.k_vals"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.n_vals": {
  "data": {
   "shadows": "tests.conftest.n_vals"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.np_types": {
  "data": {
   "shadows": "tests.conftest.np_types"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_common.test_transformerselectormixin.test_bare_trainonlytransformer": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.model_selection.train_test_split",
    "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_bare_trainonlytransformer_pandas": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pandas.DataFrame",
    "sklearn.model_selection.train_test_split",
    "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_hash_numpy": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "numpy.random.normal",
    "set",
    "sklego.common.TrainOnlyTransformerMixin._hash",
    "tests.conftest.k_vals",
    "tests.conftest.n_vals",
    "tests.conftest.np_types"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_hash_pandas": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "numpy.random.normal",
    "pandas.DataFrame",
    "set",
    "sklego.common.TrainOnlyTransformerMixin._hash",
    "tests.conftest.k_vals",
    "tests.conftest.n_vals",
    "tests.conftest.np_types"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_pipeline_trainonlytransformer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.make_pipeline",
    "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.test_pipeline_trainonlytransformer_pandas": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pandas.DataFrame",
    "sklearn.model_selection.train_test_split",
    "sklearn.pipeline.make_pipeline",
    "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_transformerselectormixin.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "tests.test_datasets": {
  "data": {},
  "type": "module"
 },
 "tests.test_datasets.load_abalone": {
  "data": {
   "shadows": "sklego.datasets.load_abalone"
  },
  "type": "import"
 },
 "tests.test_datasets.load_chicken": {
  "data": {
   "shadows": "sklego.datasets.load_chicken"
  },
  "type": "import"
 },
 "tests.test_datasets.load_hearts": {
  "data": {
   "shadows": "sklego.datasets.load_hearts"
  },
  "type": "import"
 },
 "tests.test_datasets.load_penguins": {
  "data": {
   "shadows": "sklego.datasets.load_penguins"
  },
  "type": "import"
 },
 "tests.test_datasets.make_simpleseries": {
  "data": {
   "shadows": "sklego.datasets.make_simpleseries"
  },
  "type": "import"
 },
 "tests.test_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_datasets.test_abalone1": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklego.datasets.load_abalone"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_abalone2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklego.datasets.load_abalone"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_chickweight1": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "sklego.datasets.load_chicken"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_chickweight2": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklego.datasets.load_chicken"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_load_hearts": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklego.datasets.load_hearts"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_penguin1": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sklego.datasets.load_penguins"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_penguin2": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sklego.datasets.load_penguins"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_simpleseries_constant_season": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sklego.datasets.make_simpleseries",
    "tests.test_datasets.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_basics": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_basics.BayesianGMMClassifier": {
  "data": {
   "shadows": "sklego.mixture.BayesianGMMClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.BayesianGMMOutlierDetector": {
  "data": {
   "shadows": "sklego.mixture.BayesianGMMOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.DeadZoneRegressor": {
  "data": {
   "shadows": "sklego.linear_model.DeadZoneRegressor"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.GMMClassifier": {
  "data": {
   "shadows": "sklego.mixture.GMMClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.GMMOutlierDetector": {
  "data": {
   "shadows": "sklego.mixture.GMMOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.RandomRegressor": {
  "data": {
   "shadows": "sklego.dummy.RandomRegressor"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.id_func": {
  "data": {
   "shadows": "tests.conftest.id_func"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_basics.test_shape_classification": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklego.mixture.BayesianGMMClassifier",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.GMMClassifier",
    "sklego.mixture.GMMOutlierDetector",
    "tests.conftest.id_func",
    "tests.test_estimators.test_basics.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_basics.test_shape_regression": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklego.dummy.RandomRegressor",
    "sklego.linear_model.DeadZoneRegressor",
    "tests.conftest.id_func",
    "tests.test_estimators.test_basics.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_deadzone": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_deadzone.DeadZoneRegressor": {
  "data": {
   "shadows": "sklego.linear_model.DeadZoneRegressor"
  },
  "type": "import"
 },
 "tests.test_estimators.test_deadzone.check_shape_remains_same_regressor": {
  "data": {
   "shadows": "sklego.testing.check_shape_remains_same_regressor"
  },
  "type": "import"
 },
 "tests.test_estimators.test_deadzone.dataset": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.test_estimators.test_deadzone.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_deadzone.mod": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklego.linear_model.DeadZoneRegressor",
    "tests.test_estimators.test_deadzone.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_deadzone.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_deadzone.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_deadzone.test_deadzone": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklego.linear_model.DeadZoneRegressor",
    "sklego.linear_model.DeadZoneRegressor.__name__",
    "sklego.testing.check_shape_remains_same_regressor",
    "test_fn",
    "tests.test_estimators.test_deadzone.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_deadzone.test_values_uniform": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tests.test_estimators.test_deadzone.dataset",
    "tests.test_estimators.test_deadzone.mod",
    "tests.test_estimators.test_deadzone.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_demographic_parity.DemographicParityClassifier": {
  "data": {
   "shadows": "sklego.linear_model.DemographicParityClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.FairClassifier": {
  "data": {
   "shadows": "sklego.linear_model.FairClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.SolverError": {
  "data": {
   "shadows": "cvxpy.SolverError"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity._test_same": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "cvxpy.SolverError",
    "len",
    "numpy.delete",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "sklearn.linear_model.LogisticRegression",
    "sklego.linear_model.DemographicParityClassifier"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.classifier_checks": {
  "data": {
   "shadows": "tests.conftest.classifier_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.p_percent_score": {
  "data": {
   "shadows": "sklego.metrics.p_percent_score"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_demographic_parity.test_deprecation": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "DeprecationWarning",
    "issubclass",
    "sklego.linear_model.FairClassifier",
    "tests.test_estimators.test_demographic_parity.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_fairness": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.inf",
    "scorer",
    "sklego.linear_model.DemographicParityClassifier",
    "sklego.metrics.p_percent_score"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_regularization": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.inf",
    "numpy.sum",
    "sklego.linear_model.DemographicParityClassifier"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_same_logistic": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tests.test_estimators.test_demographic_parity._test_same"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_same_logistic_multiclass": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tests.test_estimators.test_demographic_parity._test_same"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.test_standard_checks": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.linear_model.DemographicParityClassifier",
    "sklego.linear_model.DemographicParityClassifier.__name__",
    "test_fn",
    "tests.conftest.classifier_checks",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.test_estimators.test_demographic_parity.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_demographic_parity.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_equal_opportunity.EqualOpportunityClassifier": {
  "data": {
   "shadows": "sklego.linear_model.EqualOpportunityClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity._test_same": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "numpy.delete",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "sklearn.linear_model.LogisticRegression",
    "sklego.linear_model.EqualOpportunityClassifier"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.classifier_checks": {
  "data": {
   "shadows": "tests.conftest.classifier_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.equal_opportunity_score": {
  "data": {
   "shadows": "sklego.metrics.equal_opportunity_score"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_equal_opportunity.test_fairness": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.inf",
    "scorer",
    "sklego.linear_model.EqualOpportunityClassifier",
    "sklego.metrics.equal_opportunity_score"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_regularization": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.inf",
    "numpy.sum",
    "sklego.linear_model.EqualOpportunityClassifier"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_same_logistic": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tests.test_estimators.test_equal_opportunity._test_same"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_same_logistic_multiclass": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tests.test_estimators.test_equal_opportunity._test_same"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_equal_opportunity.test_standard_checks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.linear_model.EqualOpportunityClassifier",
    "sklego.linear_model.EqualOpportunityClassifier.__name__",
    "test_fn",
    "tests.conftest.classifier_checks",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.test_estimators.test_equal_opportunity.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_gmm_naive_bayes": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_gmm_naive_bayes.BayesianGaussianMixtureNB": {
  "data": {
   "shadows": "sklego.naive_bayes.BayesianGaussianMixtureNB"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.GaussianMixtureNB": {
  "data": {
   "shadows": "sklego.naive_bayes.GaussianMixtureNB"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.check_shape_remains_same_classifier": {
  "data": {
   "shadows": "sklego.testing.check_shape_remains_same_classifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.dataset": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.test_estimators.test_gmm_naive_bayes.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_gmm_naive_bayes.estimator_checks": {
  "data": {
   "shadows": "tests.conftest.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_gmm_naive_bayes.test_estimator_checks": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.naive_bayes.BayesianGaussianMixtureNB",
    "sklego.naive_bayes.BayesianGaussianMixtureNB.__name__",
    "sklego.naive_bayes.GaussianMixtureNB",
    "sklego.naive_bayes.GaussianMixtureNB.__name__",
    "sklego.testing.check_shape_remains_same_classifier",
    "test_fn",
    "tests.conftest.estimator_checks.check_classifier_data_not_an_array",
    "tests.conftest.estimator_checks.check_classifiers_classes",
    "tests.conftest.estimator_checks.check_classifiers_one_label",
    "tests.conftest.estimator_checks.check_classifiers_train",
    "tests.conftest.estimator_checks.check_decision_proba_consistency",
    "tests.conftest.estimator_checks.check_estimators_partial_fit_n_features",
    "tests.conftest.estimator_checks.check_estimators_unfitted",
    "tests.conftest.estimator_checks.check_supervised_y_2d",
    "tests.conftest.estimator_checks.check_supervised_y_no_nan",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.test_estimators.test_gmm_naive_bayes.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_gmm_naive_bayes.test_obvious_usecase": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.zeros",
    "sklego.naive_bayes.BayesianGaussianMixtureNB",
    "sklego.naive_bayes.GaussianMixtureNB",
    "tests.test_estimators.test_gmm_naive_bayes.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_lowess": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_lowess.LowessRegression": {
  "data": {
   "shadows": "sklego.linear_model.LowessRegression"
  },
  "type": "import"
 },
 "tests.test_estimators.test_lowess.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_lowess.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_lowess.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_lowess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_lowess.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_lowess.regressor_checks": {
  "data": {
   "shadows": "tests.conftest.regressor_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_lowess.test_estimator_checks": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.linear_model.LowessRegression",
    "sklego.linear_model.LowessRegression.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.conftest.regressor_checks",
    "tests.test_estimators.test_lowess.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_lowess.test_obvious_usecase": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.isclose",
    "numpy.linspace",
    "numpy.ones",
    "sklego.linear_model.LowessRegression"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_classifier": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_mixture_classifier.BayesianGMMClassifier": {
  "data": {
   "shadows": "sklego.mixture.BayesianGMMClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.GMMClassifier": {
  "data": {
   "shadows": "sklego.mixture.GMMClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.check_shape_remains_same_classifier": {
  "data": {
   "shadows": "sklego.testing.check_shape_remains_same_classifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.estimator_checks": {
  "data": {
   "shadows": "tests.conftest.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_classifier.test_estimator_checks": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMClassifier",
    "sklego.mixture.BayesianGMMClassifier.__name__",
    "sklego.mixture.GMMClassifier",
    "sklego.mixture.GMMClassifier.__name__",
    "sklego.testing.check_shape_remains_same_classifier",
    "test_fn",
    "tests.conftest.estimator_checks.check_classifier_data_not_an_array",
    "tests.conftest.estimator_checks.check_classifiers_classes",
    "tests.conftest.estimator_checks.check_classifiers_one_label",
    "tests.conftest.estimator_checks.check_classifiers_train",
    "tests.conftest.estimator_checks.check_decision_proba_consistency",
    "tests.conftest.estimator_checks.check_estimators_partial_fit_n_features",
    "tests.conftest.estimator_checks.check_estimators_unfitted",
    "tests.conftest.estimator_checks.check_supervised_y_2d",
    "tests.conftest.estimator_checks.check_supervised_y_no_nan",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.test_estimators.test_mixture_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_classifier.test_obvious_usecase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.zeros",
    "sklego.mixture.BayesianGMMClassifier",
    "sklego.mixture.GMMClassifier"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_mixture_detector.BayesianGMMOutlierDetector": {
  "data": {
   "shadows": "sklego.mixture.BayesianGMMOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.GMMOutlierDetector": {
  "data": {
   "shadows": "sklego.mixture.GMMOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.dataset": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_mixture_detector.test_estimator_checks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.estimator_checks.check_outliers_fit_predict",
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.BayesianGMMOutlierDetector.__name__",
    "sklego.mixture.GMMOutlierDetector",
    "sklego.mixture.GMMOutlierDetector.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_obvious_usecase_github": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "model",
    "numpy.random.normal",
    "numpy.random.seed",
    "pandas.DataFrame",
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.GMMOutlierDetector",
    "str",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_obvious_usecase_quantile": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "model",
    "numpy.array",
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.GMMOutlierDetector",
    "tests.test_estimators.test_mixture_detector.dataset",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_obvious_usecase_stddev": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "model",
    "numpy.array",
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.GMMOutlierDetector",
    "tests.test_estimators.test_mixture_detector.dataset",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_thresh_effect_quantile": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "model",
    "numpy.sum",
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.GMMOutlierDetector",
    "tests.test_estimators.test_mixture_detector.dataset",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_thresh_effect_stddev": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "model",
    "numpy.sum",
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.GMMOutlierDetector",
    "tests.test_estimators.test_mixture_detector.dataset",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_mixture_detector.test_value_error_threshold": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "sklego.common.flatten",
    "sklego.mixture.BayesianGMMOutlierDetector",
    "sklego.mixture.GMMOutlierDetector",
    "tests.test_estimators.test_mixture_detector.dataset",
    "tests.test_estimators.test_mixture_detector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_neighbor_classifier": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_neighbor_classifier.BayesianKernelDensityClassifier": {
  "data": {
   "shadows": "sklego.neighbors.BayesianKernelDensityClassifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.check_shape_remains_same_classifier": {
  "data": {
   "shadows": "sklego.testing.check_shape_remains_same_classifier"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.estimator_checks": {
  "data": {
   "shadows": "tests.conftest.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_neighbor_classifier.simple_dataset": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.zeros",
    "tests.test_estimators.test_neighbor_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_neighbor_classifier.test_estimator_checks": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.neighbors.BayesianKernelDensityClassifier",
    "sklego.neighbors.BayesianKernelDensityClassifier.__name__",
    "sklego.testing.check_shape_remains_same_classifier",
    "test_fn",
    "tests.conftest.estimator_checks.check_classifier_data_not_an_array",
    "tests.conftest.estimator_checks.check_classifiers_classes",
    "tests.conftest.estimator_checks.check_classifiers_one_label",
    "tests.conftest.estimator_checks.check_classifiers_train",
    "tests.conftest.estimator_checks.check_estimators_unfitted",
    "tests.conftest.estimator_checks.check_supervised_y_2d",
    "tests.conftest.estimator_checks.check_supervised_y_no_nan",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.test_estimators.test_neighbor_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_neighbor_classifier.test_trivial_classification": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklego.neighbors.BayesianKernelDensityClassifier",
    "tests.test_estimators.test_neighbor_classifier.simple_dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_pca_reconstruction": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_pca_reconstruction.PCAOutlierDetection": {
  "data": {
   "shadows": "sklego.decomposition.PCAOutlierDetection"
  },
  "type": "import"
 },
 "tests.test_estimators.test_pca_reconstruction.dataset": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.test_estimators.test_pca_reconstruction.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_pca_reconstruction.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_pca_reconstruction.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_pca_reconstruction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_pca_reconstruction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_pca_reconstruction.test_estimator_checks": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_dict_unchanged",
    "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
    "sklearn.utils.estimator_checks.check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_fit2d_predict1d",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_methods_subset_invariance",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklego.common.flatten",
    "sklego.decomposition.PCAOutlierDetection",
    "sklego.decomposition.PCAOutlierDetection.__name__",
    "test_fn",
    "tests.test_estimators.test_pca_reconstruction.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_pca_reconstruction.test_obvious_usecase": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.array",
    "sklego.decomposition.PCAOutlierDetection",
    "tests.test_estimators.test_pca_reconstruction.dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_probweight_regression": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_probweight_regression.ProbWeightRegression": {
  "data": {
   "shadows": "sklego.linear_model.ProbWeightRegression"
  },
  "type": "import"
 },
 "tests.test_estimators.test_probweight_regression.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_probweight_regression.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_probweight_regression.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_probweight_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_probweight_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_probweight_regression.regressor_checks": {
  "data": {
   "shadows": "tests.conftest.regressor_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_probweight_regression.test_estimator_checks": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.linear_model.ProbWeightRegression",
    "sklego.linear_model.ProbWeightRegression.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.conftest.regressor_checks",
    "tests.test_estimators.test_probweight_regression.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_probweight_regression.test_shape_trained_model": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.testing.assert_approx_equal",
    "sklego.linear_model.ProbWeightRegression"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_randomregressor.RandomRegressor": {
  "data": {
   "shadows": "sklego.dummy.RandomRegressor"
  },
  "type": "import"
 },
 "tests.test_estimators.test_randomregressor.check_shape_remains_same_regressor": {
  "data": {
   "shadows": "sklego.testing.check_shape_remains_same_regressor"
  },
  "type": "import"
 },
 "tests.test_estimators.test_randomregressor.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_randomregressor.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_randomregressor.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_randomregressor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_randomregressor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_randomregressor.test_bad_values": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.normal",
    "numpy.random.seed",
    "sklego.dummy.RandomRegressor",
    "tests.test_estimators.test_randomregressor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor.test_estimator_checks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_dict_unchanged",
    "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
    "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_fit2d_predict1d",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
    "sklearn.utils.estimator_checks.check_regressors_int",
    "sklearn.utils.estimator_checks.check_regressors_no_decision_function",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklearn.utils.estimator_checks.check_supervised_y_2d",
    "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
    "sklego.common.flatten",
    "sklego.dummy.RandomRegressor",
    "sklego.dummy.RandomRegressor.__name__",
    "sklego.testing.check_shape_remains_same_regressor",
    "test_fn",
    "tests.conftest.nonmeta_checks",
    "tests.test_estimators.test_randomregressor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor.test_values_normal": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "sklego.dummy.RandomRegressor",
    "tests.test_estimators.test_randomregressor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_randomregressor.test_values_uniform": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sklego.dummy.RandomRegressor",
    "tests.test_estimators.test_randomregressor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_umap_reconstruction": {
  "data": {},
  "type": "module"
 },
 "tests.test_estimators.test_umap_reconstruction.UMAPOutlierDetection": {
  "data": {
   "shadows": "sklego.decomposition.UMAPOutlierDetection"
  },
  "type": "import"
 },
 "tests.test_estimators.test_umap_reconstruction.dataset": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.test_estimators.test_umap_reconstruction.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_umap_reconstruction.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_estimators.test_umap_reconstruction.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_estimators.test_umap_reconstruction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_estimators.test_umap_reconstruction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_estimators.test_umap_reconstruction.test_estimator_checks": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_outliers_fit_predict",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklego.common.flatten",
    "sklego.decomposition.UMAPOutlierDetection",
    "sklego.decomposition.UMAPOutlierDetection.__name__",
    "test_fn",
    "tests.test_estimators.test_umap_reconstruction.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_estimators.test_umap_reconstruction.test_obvious_usecase": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.array",
    "sklego.decomposition.UMAPOutlierDetection",
    "tests.test_estimators.test_umap_reconstruction.dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_meta": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_confusion_balancer": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_confusion_balancer.ConfusionBalancer": {
  "data": {
   "shadows": "sklego.meta.ConfusionBalancer"
  },
  "type": "import"
 },
 "tests.test_meta.test_confusion_balancer.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_confusion_balancer.classifier_checks": {
  "data": {
   "shadows": "tests.conftest.classifier_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_confusion_balancer.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_confusion_balancer.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_confusion_balancer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_confusion_balancer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_confusion_balancer.test_estimator_checks_classification": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklego.common.flatten",
    "sklego.meta.ConfusionBalancer",
    "sklego.meta.ConfusionBalancer.__name__",
    "test_fn",
    "tests.conftest.classifier_checks",
    "tests.conftest.general_checks",
    "tests.test_meta.test_confusion_balancer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_confusion_balancer.test_sum_equals_one": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.concatenate",
    "numpy.isclose",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.zeros",
    "sklearn.linear_model.LogisticRegression",
    "sklego.meta.ConfusionBalancer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_decay_estimator.DecayEstimator": {
  "data": {
   "shadows": "sklego.meta.DecayEstimator"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.KNeighborsClassifier"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.classifier_checks": {
  "data": {
   "shadows": "tests.conftest.classifier_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.regressor_checks": {
  "data": {
   "shadows": "tests.conftest.regressor_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_decay_estimator.test_decay_weight_clf": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.random.normal",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.tree.DecisionTreeClassifier",
    "sklego.common.flatten",
    "sklego.meta.DecayEstimator",
    "tests.test_meta.test_decay_estimator.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_decay_weight_regr": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.random.normal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.tree.DecisionTreeRegressor",
    "sklego.common.flatten",
    "sklego.meta.DecayEstimator",
    "tests.test_meta.test_decay_estimator.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_estimator_checks_classification": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklego.common.flatten",
    "sklego.meta.DecayEstimator",
    "sklego.meta.DecayEstimator.__name__",
    "test_fn",
    "tests.conftest.classifier_checks",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.test_meta.test_decay_estimator.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_estimator_checks_regression": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklego.common.flatten",
    "sklego.meta.DecayEstimator",
    "sklego.meta.DecayEstimator.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.conftest.regressor_checks",
    "tests.test_meta.test_decay_estimator.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_decay_estimator.test_throw_warning": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.normal",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklego.common.flatten",
    "sklego.meta.DecayEstimator",
    "str",
    "tests.test_meta.test_decay_estimator.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_estimatortransformer.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.EstimatorTransformer": {
  "data": {
   "shadows": "sklego.meta.EstimatorTransformer"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.FeatureUnion": {
  "data": {
   "shadows": "sklearn.pipeline.FeatureUnion"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_estimatortransformer.test_estimator_checks": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklego.common.flatten",
    "sklego.meta.EstimatorTransformer",
    "sklego.meta.EstimatorTransformer.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.conftest.transformer_checks",
    "tests.test_meta.test_estimatortransformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_get_params": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklego.meta.EstimatorTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_set_params": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sklearn.dummy.DummyClassifier",
    "sklego.meta.EstimatorTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_shape": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline.Pipeline",
    "sklego.meta.EstimatorTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.test_values_uniform": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.clone",
    "sklearn.dummy.DummyClassifier",
    "sklearn.utils.check_X_y",
    "sklego.meta.EstimatorTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_estimatortransformer.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_grouped_predictor.DummyRegressor": {
  "data": {
   "shadows": "sklearn.dummy.DummyRegressor"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.GroupedPredictor": {
  "data": {
   "shadows": "sklego.meta.GroupedPredictor"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.load_chicken": {
  "data": {
   "shadows": "sklego.datasets.load_chicken"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.select_tests": {
  "data": {
   "shadows": "tests.conftest.select_tests"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_predictor.shrinkage_data": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "tests.test_meta.test_grouped_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_bad_shrinkage_value_error": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_chickweight_can_do_fallback": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "set",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_chickweight_df1_keys": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "set",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_chickweight_df2_keys": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "range",
    "set",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_chickweight_np_keys": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_chickweight_raise_error_group_col_missing": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_chickweight_raise_error_value_col_missing": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor",
    "tests.test_meta.test_grouped_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_chickweigt_string_groups": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_constant_shrinkage": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage.shrinkage_func": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "len",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage_raises_error": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage_raises_error.shrinkage_func": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage_wrong_length": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage_wrong_length.shrinkage_func": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage_wrong_return_type": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_custom_shrinkage_wrong_return_type.shrinkage_func": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_estimator_checks": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklego.common.flatten",
    "sklego.meta.GroupedPredictor",
    "sklego.meta.GroupedPredictor.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.conftest.select_tests",
    "tests.test_meta.test_grouped_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_fallback_can_raise_error": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "sklearn.linear_model.LinearRegression",
    "sklego.datasets.load_chicken",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_global_model_shrinkage": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pandas.testing.assert_series_equal",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_invalid_shrinkage": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "list",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_min_n_obs_shrinkage": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_min_n_obs_shrinkage_too_little_obs": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_predict_missing_group_column": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_predict_missing_value_column": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.normal",
    "sklearn.linear_model.LinearRegression",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_relative_shrinkage": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_shrinkage_single_group": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_shrinkage_single_group_no_global": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_unexisting_shrinkage_func": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_predictor.test_unseen_groups_shrinkage": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.concat",
    "sklearn.dummy.DummyRegressor",
    "sklego.meta.GroupedPredictor",
    "str",
    "tests.test_meta.test_grouped_predictor.pytest",
    "tests.test_meta.test_grouped_predictor.shrinkage_data"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_grouped_transformer.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.GroupedTransformer": {
  "data": {
   "shadows": "sklego.meta.GroupedTransformer"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.check_X_y": {
  "data": {
   "shadows": "sklearn.utils.check_X_y"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.dataset_with_multiple_grouping": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.tile",
    "sklearn.utils.check_X_y",
    "tests.conftest.k_vals",
    "tests.conftest.n_vals",
    "tests.conftest.np_types",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.dataset_with_single_grouping": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.repeat",
    "sklearn.utils.check_X_y",
    "tests.conftest.k_vals",
    "tests.conftest.n_vals",
    "tests.conftest.np_types",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.k_vals": {
  "data": {
   "shadows": "tests.conftest.k_vals"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.load_penguins": {
  "data": {
   "shadows": "sklego.datasets.load_penguins"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.multiple_obs_fitter": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "MultipleObsFitter",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.multiple_obs_fitter.MultipleObsFitter": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_meta.test_grouped_transformer.multiple_obs_fitter.MultipleObsFitter.fit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.multiple_obs_fitter.MultipleObsFitter.transform": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.n_vals": {
  "data": {
   "shadows": "tests.conftest.n_vals"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.np_types": {
  "data": {
   "shadows": "tests.conftest.np_types"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.penguins": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tests.test_meta.test_grouped_transformer.penguins_df",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.penguins_df": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sklego.datasets.load_penguins",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.scaling_range": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.select_tests": {
  "data": {
   "shadows": "tests.conftest.select_tests"
  },
  "type": "import"
 },
 "tests.test_meta.test_grouped_transformer.test_all_groups_scaled": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "sklearn.preprocessing.MinMaxScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.dataset_with_single_grouping",
    "tests.test_meta.test_grouped_transformer.scaling_range"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_array_with_multiple_string_cols": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.penguins"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_array_with_strings": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.array",
    "sklearn.preprocessing.MinMaxScaler",
    "sklego.meta.GroupedTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_df": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.penguins_df"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_df_missing_group": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.penguins_df",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_estimator_checks": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklego.common.flatten",
    "sklego.meta.GroupedTransformer",
    "sklego.meta.GroupedTransformer.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.conftest.select_tests",
    "tests.conftest.transformer_checks",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_exception_in_group": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "sklego.meta.GroupedTransformer",
    "str",
    "tests.test_meta.test_grouped_transformer.multiple_obs_fitter",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_get_params": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_group_correlation_minmaxscaler": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandas.Series",
    "pandas.concat",
    "range",
    "sklearn.preprocessing.MinMaxScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.dataset_with_single_grouping",
    "tests.test_meta.test_grouped_transformer.scaling_range"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_grouping_column_not_in_array": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.penguins",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_grouping_column_not_in_df": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.penguins_df",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_missing_groups_transform_global": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.concatenate",
    "numpy.stack",
    "sklearn.preprocessing.MinMaxScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.dataset_with_single_grouping",
    "tests.test_meta.test_grouped_transformer.scaling_range"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_missing_groups_transform_noglobal": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.concatenate",
    "numpy.stack",
    "sklearn.preprocessing.MinMaxScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.dataset_with_single_grouping",
    "tests.test_meta.test_grouped_transformer.pytest",
    "tests.test_meta.test_grouped_transformer.scaling_range"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_multiple_grouping_columns": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.any",
    "numpy.isclose",
    "pandas.DataFrame",
    "pandas.concat",
    "sklearn.preprocessing.MinMaxScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.dataset_with_multiple_grouping",
    "tests.test_meta.test_grouped_transformer.scaling_range"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_no_grouping": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.penguins_df"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_non_transformer": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.linear_model.LinearRegression",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.dataset_with_single_grouping",
    "tests.test_meta.test_grouped_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_set_params": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.test_with_y": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "sklearn.preprocessing.StandardScaler",
    "sklego.meta.GroupedTransformer",
    "tests.test_meta.test_grouped_transformer.penguins_df"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_grouped_transformer.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_outlier_classifier.GMMOutlierDetector": {
  "data": {
   "shadows": "sklego.mixture.GMMOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.OutlierClassifier": {
  "data": {
   "shadows": "sklego.meta.OutlierClassifier"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.dataset": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.test_meta.test_outlier_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_classifier.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_classifier.test_estimator_checks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
    "sklearn.utils.estimator_checks.check_decision_proba_consistency",
    "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
    "sklearn.utils.estimator_checks.check_supervised_y_2d",
    "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
    "sklego.common.flatten",
    "sklego.meta.OutlierClassifier",
    "sklego.mixture.GMMOutlierDetector",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.test_meta.test_outlier_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_classifier.test_obvious_usecase_quantile": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.array",
    "numpy.int",
    "sklego.meta.OutlierClassifier",
    "sklego.mixture.GMMOutlierDetector",
    "tests.test_meta.test_outlier_classifier.dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_classifier.test_raises_error": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int",
    "sklearn.linear_model.LinearRegression",
    "sklego.meta.OutlierClassifier",
    "tests.test_meta.test_outlier_classifier.dataset",
    "tests.test_meta.test_outlier_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_outlier_remover.GMMOutlierDetector": {
  "data": {
   "shadows": "sklego.mixture.GMMOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.IsolationForest": {
  "data": {
   "shadows": "sklearn.ensemble.IsolationForest"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.OutlierRemover": {
  "data": {
   "shadows": "sklego.meta.OutlierRemover"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_outlier_remover.test_do_not_refit": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.array",
    "sklego.meta.OutlierRemover"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_estimator_checks": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_fit2d_predict1d",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklearn.utils.estimator_checks.check_transformers_unfitted",
    "sklego.common.flatten",
    "sklego.meta.OutlierRemover",
    "sklego.meta.OutlierRemover.__name__",
    "sklego.mixture.GMMOutlierDetector",
    "test_fn",
    "tests.test_meta.test_outlier_remover.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_no_outliers": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklego.meta.OutlierRemover"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_pipeline_integration": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "sklearn.cluster.KMeans",
    "sklearn.ensemble.IsolationForest",
    "sklearn.pipeline.Pipeline",
    "sklego.meta.OutlierRemover",
    "sklego.mixture.GMMOutlierDetector"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_outlier_remover.test_remove_outlier": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklego.meta.OutlierRemover"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_regression_outlier": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_regression_outlier.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.RegressionOutlierDetector": {
  "data": {
   "shadows": "sklego.meta.RegressionOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.outlier_checks": {
  "data": {
   "shadows": "tests.conftest.outlier_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.select_tests": {
  "data": {
   "shadows": "tests.conftest.select_tests"
  },
  "type": "import"
 },
 "tests.test_meta.test_regression_outlier.test_estimator_checks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.linear_model.LinearRegression",
    "sklego.common.flatten",
    "sklego.meta.RegressionOutlierDetector",
    "sklego.meta.RegressionOutlierDetector.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.outlier_checks",
    "tests.conftest.select_tests",
    "tests.test_meta.test_regression_outlier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_regression_outlier.test_obvious_example": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sum",
    "sklearn.linear_model.LinearRegression",
    "sklego.meta.RegressionOutlierDetector"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_regression_outlier.test_obvious_example_pandas": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.normal",
    "numpy.random.seed",
    "pandas.DataFrame",
    "sklearn.linear_model.LinearRegression",
    "sklego.meta.RegressionOutlierDetector"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_regression_outlier.test_raises_error": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.normal",
    "numpy.random.seed",
    "pandas.DataFrame",
    "sklearn.linear_model.LogisticRegression",
    "sklego.meta.RegressionOutlierDetector",
    "tests.test_meta.test_regression_outlier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_subjective_classifier.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.RandomForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestClassifier"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.SubjectiveClassifier": {
  "data": {
   "shadows": "sklego.meta.SubjectiveClassifier"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.classifier_checks": {
  "data": {
   "shadows": "tests.conftest.classifier_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_subjective_classifier.test_estimator_checks_classification": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklego.common.flatten",
    "sklego.meta.SubjectiveClassifier",
    "sklego.meta.SubjectiveClassifier.__name__",
    "test_fn",
    "tests.conftest.classifier_checks",
    "tests.conftest.general_checks",
    "tests.test_meta.test_subjective_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_fit_y_data_inconsistent_with_prior_failure_conditions": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.zeros",
    "sklearn.ensemble.RandomForestClassifier",
    "sklego.meta.SubjectiveClassifier",
    "str",
    "tests.test_meta.test_subjective_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_params_failure_conditions": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "sklearn.cluster.DBSCAN",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.linear_model.Ridge",
    "sklego.meta.SubjectiveClassifier",
    "str",
    "tests.test_meta.test_subjective_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_posterior_computation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.isclose",
    "numpy.zeros",
    "sklearn.ensemble.RandomForestClassifier",
    "sklego.meta.SubjectiveClassifier",
    "tests.test_meta.test_subjective_classifier.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_posterior_computation.mock_confusion_matrix": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_predict_proba": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isclose",
    "numpy.zeros",
    "sklearn.ensemble.RandomForestClassifier",
    "sklego.meta.SubjectiveClassifier",
    "tests.test_meta.test_subjective_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_predict_proba.mock_confusion_matrix": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_to_discrete": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isclose",
    "sklego.meta.SubjectiveClassifier._to_discrete"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_subjective_classifier.test_weighted_proba": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isclose",
    "sklego.meta.SubjectiveClassifier._weighted_proba",
    "tests.test_meta.test_subjective_classifier.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_thresholder": {
  "data": {},
  "type": "module"
 },
 "tests.test_meta.test_thresholder.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_thresholder.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_meta.test_thresholder.Thresholder": {
  "data": {
   "shadows": "sklego.meta.Thresholder"
  },
  "type": "import"
 },
 "tests.test_meta.test_thresholder.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_meta.test_thresholder.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_meta.test_thresholder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_meta.test_thresholder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_meta.test_thresholder.test_diff_threshold": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.random.normal",
    "numpy.random.seed",
    "sklearn.linear_model.LogisticRegression",
    "sklego.meta.Thresholder"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_raise_error1": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.normal",
    "numpy.random.seed",
    "sklearn.linear_model.LinearRegression",
    "sklego.meta.Thresholder",
    "tests.test_meta.test_thresholder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_raise_error2": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.random.seed",
    "sklearn.linear_model.LinearRegression",
    "sklego.meta.Thresholder",
    "tests.test_meta.test_thresholder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_same_threshold": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.random.normal",
    "sklearn.linear_model.LogisticRegression",
    "sklego.meta.Thresholder"
   ]
  },
  "type": "function"
 },
 "tests.test_meta.test_thresholder.test_standard_checks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
    "sklearn.utils.estimator_checks.check_classifiers_one_label",
    "sklearn.utils.estimator_checks.check_decision_proba_consistency",
    "sklearn.utils.estimator_checks.check_dict_unchanged",
    "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
    "sklearn.utils.estimator_checks.check_estimators_unfitted",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
    "sklego.common.flatten",
    "sklego.meta.Thresholder",
    "sklego.meta.Thresholder.__name__",
    "test_fn",
    "tests.test_meta.test_thresholder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics": {
  "data": {},
  "type": "module"
 },
 "tests.test_metrics.test_correlation_score": {
  "data": {},
  "type": "module"
 },
 "tests.test_metrics.test_correlation_score.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "tests.test_metrics.test_correlation_score.correlation_score": {
  "data": {
   "shadows": "sklego.metrics.correlation_score"
  },
  "type": "import"
 },
 "tests.test_metrics.test_correlation_score.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_metrics.test_correlation_score.test_corr_numpy": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abs",
    "pandas.DataFrame",
    "sklearn.linear_model.Ridge",
    "sklego.metrics.correlation_score"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_correlation_score.test_corr_pandas": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "abs",
    "pandas.DataFrame",
    "sklearn.linear_model.Ridge",
    "sklego.metrics.correlation_score"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity": {
  "data": {},
  "type": "module"
 },
 "tests.test_metrics.test_equal_opportunity.ColumnSelector": {
  "data": {
   "shadows": "sklego.preprocessing.ColumnSelector"
  },
  "type": "import"
 },
 "tests.test_metrics.test_equal_opportunity.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_metrics.test_equal_opportunity.equal_opportunity_score": {
  "data": {
   "shadows": "sklego.metrics.equal_opportunity_score"
  },
  "type": "import"
 },
 "tests.test_metrics.test_equal_opportunity.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "tests.test_metrics.test_equal_opportunity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_metrics.test_equal_opportunity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_metrics.test_equal_opportunity.test_equal_opportunity_pandas": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "sklego.metrics.equal_opportunity_score",
    "tests.test_metrics.test_equal_opportunity.types"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity.test_p_percent_numpy": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklego.metrics.equal_opportunity_score"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity.test_p_percent_pandas_multiclass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "sklego.metrics.equal_opportunity_score",
    "tests.test_metrics.test_equal_opportunity.types"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity.test_warning_is_logged": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklego.metrics.equal_opportunity_score",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_metrics.test_equal_opportunity.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_equal_opportunity.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "tests.test_metrics.test_equal_opportunity.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_metrics.test_p_percent": {
  "data": {},
  "type": "module"
 },
 "tests.test_metrics.test_p_percent.ColumnSelector": {
  "data": {
   "shadows": "sklego.preprocessing.ColumnSelector"
  },
  "type": "import"
 },
 "tests.test_metrics.test_p_percent.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_metrics.test_p_percent.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "tests.test_metrics.test_p_percent.p_percent_score": {
  "data": {
   "shadows": "sklego.metrics.p_percent_score"
  },
  "type": "import"
 },
 "tests.test_metrics.test_p_percent.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_metrics.test_p_percent.test_p_percent_numpy": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklego.metrics.p_percent_score"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_p_percent.test_p_percent_pandas": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklego.metrics.p_percent_score",
    "sklego.preprocessing.ColumnSelector"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_p_percent.test_p_percent_pandas_multiclass": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklego.metrics.p_percent_score",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_metrics.test_p_percent.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_p_percent.test_warning_is_logged": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeWarning",
    "issubclass",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.make_pipeline",
    "sklego.metrics.p_percent_score",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_metrics.test_p_percent.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_p_percent.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric": {
  "data": {},
  "type": "module"
 },
 "tests.test_metrics.test_subset_metric.ColumnSelector": {
  "data": {
   "shadows": "sklego.preprocessing.ColumnSelector"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.DisabledCV": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "tests.test_metrics.test_subset_metric.DisabledCV.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.DisabledCV.get_n_splits": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.DisabledCV.split": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.DummyClassifier": {
  "data": {
   "shadows": "sklearn.dummy.DummyClassifier"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.slicing_classification_dataset": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "tests.test_metrics.test_subset_metric.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.subset_score": {
  "data": {
   "shadows": "sklego.metrics.subset_score"
  },
  "type": "import"
 },
 "tests.test_metrics.test_subset_metric.test_subset_score_accuracy_numpy": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "accuracy_x1_0",
    "accuracy_x1_1",
    "sklearn.dummy.DummyClassifier",
    "sklearn.metrics.accuracy_score",
    "sklego.metrics.subset_score",
    "tests.test_metrics.test_subset_metric.slicing_classification_dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.test_subset_score_accuracy_pandas": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "accuracy_x1_0",
    "accuracy_x1_1",
    "sklearn.dummy.DummyClassifier",
    "sklearn.metrics.accuracy_score",
    "sklego.metrics.subset_score",
    "tests.test_metrics.test_subset_metric.slicing_classification_dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.test_subset_score_gridsearch": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "accuracy_x1_0",
    "sklearn.dummy.DummyClassifier",
    "sklearn.metrics.accuracy_score",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.make_pipeline",
    "sklego.metrics.subset_score",
    "tests.test_metrics.test_subset_metric.DisabledCV",
    "tests.test_metrics.test_subset_metric.slicing_classification_dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.test_subset_score_pipeline": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "accuracy_x1_0",
    "sklearn.dummy.DummyClassifier",
    "sklearn.metrics.accuracy_score",
    "sklearn.pipeline.make_pipeline",
    "sklego.metrics.subset_score",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_metrics.test_subset_metric.slicing_classification_dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.test_warning_is_logged_empty_slice": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "RuntimeWarning",
    "accuracy_x1_0",
    "issubclass",
    "sklearn.dummy.DummyClassifier",
    "sklearn.metrics.accuracy_score",
    "sklego.metrics.subset_score",
    "tests.test_metrics.test_subset_metric.slicing_classification_dataset",
    "tests.test_metrics.test_subset_metric.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.test_wrong_subset_dimensions_raise_value_error": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "accuracy_x1_0",
    "sklearn.dummy.DummyClassifier",
    "sklearn.metrics.accuracy_score",
    "sklego.metrics.subset_score",
    "tests.test_metrics.test_subset_metric.pytest",
    "tests.test_metrics.test_subset_metric.slicing_classification_dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_metrics.test_subset_metric.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_model_selection": {
  "data": {},
  "type": "module"
 },
 "tests.test_model_selection.test_klusterfold": {
  "data": {
   "symbols_in_volume": [
    "sklearn.cluster.KMeans",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "module"
 },
 "tests.test_model_selection.test_klusterfold.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.fit": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.fit_predict": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.DummyCluster.predict": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.KlusterFoldValidation": {
  "data": {
   "shadows": "sklego.model_selection.KlusterFoldValidation"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.MiniBatchKMeans": {
  "data": {
   "shadows": "sklearn.cluster.MiniBatchKMeans"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.clone": {
  "data": {
   "shadows": "sklearn.clone"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.id_func": {
  "data": {
   "shadows": "tests.conftest.id_func"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.k_means_pipeline": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.test_model_selection.test_klusterfold.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_klusterfold.test_no_split": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sklego.model_selection.KlusterFoldValidation",
    "tests.test_model_selection.test_klusterfold.DummyCluster",
    "tests.test_model_selection.test_klusterfold.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.test_splits_fitted": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "sklearn.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklego.model_selection.KlusterFoldValidation",
    "tests.conftest.id_func",
    "tests.test_model_selection.test_klusterfold.DummyCluster",
    "tests.test_model_selection.test_klusterfold.k_means_pipeline",
    "tests.test_model_selection.test_klusterfold.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_klusterfold.test_splits_not_fitted": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "sklearn.clone",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MiniBatchKMeans",
    "sklego.model_selection.KlusterFoldValidation",
    "tests.conftest.id_func",
    "tests.test_model_selection.test_klusterfold.DummyCluster",
    "tests.test_model_selection.test_klusterfold.k_means_pipeline",
    "tests.test_model_selection.test_klusterfold.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.date_range",
    "str",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.train"
   ]
  },
  "type": "module"
 },
 "tests.test_model_selection.test_timegapsplit.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.TimeGapSplit": {
  "data": {
   "shadows": "sklego.model_selection.TimeGapSplit"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.X_train": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tests.test_model_selection.test_timegapsplit.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.df": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.test_model_selection.test_timegapsplit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "datetime.timedelta",
    "enumerate",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.X_train",
    "tests.test_model_selection.test_timegapsplit.datetime",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.y_train"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_summary": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "datetime.timedelta",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.X_train",
    "tests.test_model_selection.test_timegapsplit.df"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_too_big_gap": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "print",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.df"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_too_many_splits": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "list",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.X_train",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.pytest",
    "tests.test_model_selection.test_timegapsplit.y_train"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_train_or_nsplit": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_using_splits": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "list",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.X_train",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.y_train"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_with_a_gap": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "datetime.timedelta",
    "enumerate",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.X_train",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.y_train"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_with_gridsearch": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "datetime.timedelta",
    "sklearn.linear_model.Lasso",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.X_train",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.y_train"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.test_timegapsplit_without_train_duration": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "list",
    "sklego.model_selection.TimeGapSplit",
    "tests.test_model_selection.test_timegapsplit.X_train",
    "tests.test_model_selection.test_timegapsplit.df",
    "tests.test_model_selection.test_timegapsplit.y_train"
   ]
  },
  "type": "function"
 },
 "tests.test_model_selection.test_timegapsplit.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "tests.test_model_selection.test_timegapsplit.train": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tests.test_model_selection.test_timegapsplit.y_train": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.test_notinstalled": {
  "data": {},
  "type": "module"
 },
 "tests.test_notinstalled.NotInstalledPackage": {
  "data": {
   "shadows": "sklego.notinstalled.NotInstalledPackage"
  },
  "type": "import"
 },
 "tests.test_notinstalled.package": {
  "data": {
   "shadows": "thispackagedoesnotexist"
  },
  "type": "import"
 },
 "tests.test_notinstalled.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_notinstalled.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_notinstalled.test_installed_package_works": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ImportError",
    "pandas",
    "pandas.__version__",
    "sklego.notinstalled.NotInstalledPackage"
   ]
  },
  "type": "function"
 },
 "tests.test_notinstalled.test_uninstsalled_package_raises": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ImportError",
    "sklego.notinstalled.NotInstalledPackage",
    "str",
    "tests.test_notinstalled.pytest",
    "thispackagedoesnotexist",
    "thispackagedoesnotexist.__version__"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_columncapper": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_columncapper.ColumnCapper": {
  "data": {
   "shadows": "sklego.preprocessing.ColumnCapper"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.test_X_types_and_transformed_shapes": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "expect_value_error",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "sklego.preprocessing.ColumnCapper",
    "tests.test_preprocessing.test_columncapper.valid_df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_X_types_and_transformed_shapes.expect_value_error": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "sklego.preprocessing.ColumnCapper",
    "tests.test_preprocessing.test_columncapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_dtype_classification": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklego.preprocessing.ColumnCapper"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_dtype_regression": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklego.preprocessing.ColumnCapper"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_estimator_checks": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklego.common.flatten",
    "sklego.preprocessing.ColumnCapper",
    "sklego.preprocessing.ColumnCapper.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.transformer_checks",
    "tests.test_preprocessing.test_columncapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_interpolation": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "sklego.preprocessing.ColumnCapper",
    "tests.test_preprocessing.test_columncapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_nan_inf": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.inf.sum",
    "numpy.isnan",
    "sklego.preprocessing.ColumnCapper",
    "tests.test_preprocessing.test_columncapper.valid_df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_quantile_range": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "expect_type_error",
    "expect_value_error",
    "set"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_quantile_range.expect_type_error": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "sklego.preprocessing.ColumnCapper",
    "tests.test_preprocessing.test_columncapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.test_quantile_range.expect_value_error": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "sklego.preprocessing.ColumnCapper",
    "tests.test_preprocessing.test_columncapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columncapper.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columncapper.valid_df": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "tests.test_preprocessing.test_columncapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_columndropper.ColumnDropper": {
  "data": {
   "shadows": "sklego.preprocessing.ColumnDropper"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columndropper.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columndropper.df": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "tests.test_preprocessing.test_columndropper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columndropper.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columndropper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_all": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "sklego.preprocessing.ColumnDropper",
    "tests.test_preprocessing.test_columndropper.df",
    "tests.test_preprocessing.test_columndropper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_none": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "sklego.preprocessing.ColumnDropper",
    "tests.test_preprocessing.test_columndropper.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_not_in_frame": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "KeyError",
    "sklego.preprocessing.ColumnDropper",
    "tests.test_preprocessing.test_columndropper.df",
    "tests.test_preprocessing.test_columndropper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_one": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "sklego.preprocessing.ColumnDropper",
    "tests.test_preprocessing.test_columndropper.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_one_in_pipeline": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "sklearn.pipeline.make_pipeline",
    "sklego.preprocessing.ColumnDropper",
    "tests.test_preprocessing.test_columndropper.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_drop_two": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "sklego.preprocessing.ColumnDropper",
    "tests.test_preprocessing.test_columndropper.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columndropper.test_get_feature_names": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sklego.preprocessing.ColumnDropper",
    "tests.test_preprocessing.test_columndropper.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_columnselector.ColumnSelector": {
  "data": {
   "shadows": "sklego.preprocessing.ColumnSelector"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columnselector.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columnselector.df": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "tests.test_preprocessing.test_columnselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columnselector.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columnselector.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_columnselector.test_get_feature_names": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_preprocessing.test_columnselector.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector.test_select_all": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_preprocessing.test_columnselector.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector.test_select_none": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_preprocessing.test_columnselector.df",
    "tests.test_preprocessing.test_columnselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector.test_select_not_in_frame": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "KeyError",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_preprocessing.test_columnselector.df",
    "tests.test_preprocessing.test_columnselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector.test_select_one": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_preprocessing.test_columnselector.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector.test_select_one_in_pipeline": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "sklearn.pipeline.make_pipeline",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_preprocessing.test_columnselector.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_columnselector.test_select_two": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "sklego.preprocessing.ColumnSelector",
    "tests.test_preprocessing.test_columnselector.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_dictmapper": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_dictmapper.DictMapper": {
  "data": {
   "shadows": "sklego.preprocessing.DictMapper"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_dictmapper.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_dictmapper.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_dictmapper.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_dictmapper.mapper": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tests.test_preprocessing.test_dictmapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_dictmapper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_dictmapper.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_dictmapper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_dictmapper.test_array": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "sklego.preprocessing.DictMapper",
    "tests.test_preprocessing.test_dictmapper.mapper",
    "tests.test_preprocessing.test_dictmapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_dictmapper.test_estimator_checks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklego.common.flatten",
    "sklego.preprocessing.DictMapper",
    "sklego.preprocessing.DictMapper.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.transformer_checks",
    "tests.test_preprocessing.test_dictmapper.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_dictmapper.test_no_mapper": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object",
    "pandas.DataFrame",
    "sklego.preprocessing.DictMapper",
    "tests.test_preprocessing.test_dictmapper.mapper"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_dictmapper.test_pandas": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object",
    "pandas.DataFrame",
    "sklego.preprocessing.DictMapper",
    "tests.test_preprocessing.test_dictmapper.mapper"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_dictmapper.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_identitytransformer": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_identitytransformer.IdentityTransformer": {
  "data": {
   "shadows": "sklego.preprocessing.IdentityTransformer"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_identitytransformer.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_identitytransformer.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_identitytransformer.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_identitytransformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_identitytransformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_identitytransformer.test_estimator_checks": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklego.common.flatten",
    "sklego.preprocessing.IdentityTransformer",
    "sklego.preprocessing.IdentityTransformer.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.transformer_checks",
    "tests.test_preprocessing.test_identitytransformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_identitytransformer.test_same_values": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.isclose",
    "sklego.preprocessing.IdentityTransformer"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_identitytransformer.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_informationfilter.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.InformationFilter": {
  "data": {
   "shadows": "sklego.preprocessing.InformationFilter"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.load_boston": {
  "data": {
   "shadows": "sklearn.datasets.load_boston"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_informationfilter.test_alpha_param1": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.delete",
    "numpy.isclose",
    "sklearn.datasets.load_boston",
    "sklego.preprocessing.InformationFilter"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_alpha_param2": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandas.DataFrame",
    "sklearn.datasets.load_boston",
    "sklego.preprocessing.InformationFilter"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_estimator_checks": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_dtype_object",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklego.common.flatten",
    "sklego.preprocessing.InformationFilter",
    "sklego.preprocessing.InformationFilter.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.transformer_checks",
    "tests.test_preprocessing.test_informationfilter.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_output_orthogonal": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "all",
    "sklearn.datasets.load_boston",
    "sklego.preprocessing.InformationFilter"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_output_orthogonal_general_cols": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "all",
    "pandas.DataFrame",
    "sklearn.datasets.load_boston",
    "sklego.preprocessing.InformationFilter"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_output_orthogonal_pandas": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "all",
    "pandas.DataFrame",
    "sklearn.datasets.load_boston",
    "sklego.preprocessing.InformationFilter"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_pipeline_gridsearch": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sklearn.datasets.load_boston",
    "sklearn.linear_model.LinearRegression",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.Pipeline",
    "sklego.preprocessing.InformationFilter"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.test_v_columns_orthogonal": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "sklearn.datasets.load_boston",
    "sklego.preprocessing.InformationFilter",
    "tests.test_preprocessing.test_informationfilter.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_informationfilter.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_interval_encoder": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_interval_encoder.IntervalEncoder": {
  "data": {
   "shadows": "sklego.preprocessing.IntervalEncoder"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_interval_encoder.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_interval_encoder.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_interval_encoder.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_interval_encoder.generate_dataset": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.pi",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_interval_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_interval_encoder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_interval_encoder.test_estimator_checks": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_complex_data",
    "sklearn.utils.estimator_checks.check_estimator_sparse_data",
    "sklearn.utils.estimator_checks.check_estimators_dtypes",
    "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
    "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
    "sklearn.utils.estimator_checks.check_estimators_nan_inf",
    "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
    "sklearn.utils.estimator_checks.check_estimators_pickle",
    "sklearn.utils.estimator_checks.check_fit_score_takes_y",
    "sklearn.utils.estimator_checks.check_pipeline_consistency",
    "sklearn.utils.estimator_checks.check_sample_weights_invariance",
    "sklearn.utils.estimator_checks.check_sample_weights_list",
    "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
    "sklego.common.flatten",
    "sklego.preprocessing.IntervalEncoder",
    "sklego.preprocessing.IntervalEncoder.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.transformer_checks",
    "tests.test_preprocessing.test_interval_encoder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_interval_encoder.test_monotonicity_decreasing": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "print",
    "range",
    "sklego.preprocessing.IntervalEncoder",
    "tests.test_preprocessing.test_interval_encoder.generate_dataset",
    "tests.test_preprocessing.test_interval_encoder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_interval_encoder.test_monotonicity_increasing": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "range",
    "sklego.preprocessing.IntervalEncoder",
    "tests.test_preprocessing.test_interval_encoder.generate_dataset",
    "tests.test_preprocessing.test_interval_encoder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_interval_encoder.test_obvious_cases_one": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose",
    "numpy.ones",
    "sklego.preprocessing.IntervalEncoder",
    "tests.test_preprocessing.test_interval_encoder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_interval_encoder.test_obvious_cases_two": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose",
    "numpy.ones",
    "sklego.preprocessing.IntervalEncoder",
    "tests.test_preprocessing.test_interval_encoder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_interval_encoder.test_throw_valuerror_given_nonsense": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "sklego.preprocessing.IntervalEncoder",
    "tests.test_preprocessing.test_interval_encoder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_interval_encoder.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.OrthogonalTransformer": {
  "data": {
   "shadows": "sklego.preprocessing.OrthogonalTransformer"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthogonal": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.abs",
    "numpy.dot",
    "numpy.eye",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthonormal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "AssertionError",
    "max",
    "min",
    "numpy.linalg.norm",
    "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthogonal"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.general_checks": {
  "data": {
   "shadows": "tests.conftest.general_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.sample_df": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "tests.test_preprocessing.test_orthogonal_transformer.pytest",
    "tests.test_preprocessing.test_orthogonal_transformer.sample_matrix"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.sample_matrix": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.random.normal",
    "numpy.random.seed",
    "tests.test_preprocessing.test_orthogonal_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_estimator_checks": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklego.common.flatten",
    "sklego.preprocessing.OrthogonalTransformer",
    "sklego.preprocessing.OrthogonalTransformer.__name__",
    "test_fn",
    "tests.conftest.general_checks",
    "tests.conftest.nonmeta_checks",
    "tests.conftest.transformer_checks",
    "tests.test_preprocessing.test_orthogonal_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_orthogonal_transformer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "all",
    "hasattr",
    "sklego.preprocessing.OrthogonalTransformer",
    "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthogonal",
    "tests.test_preprocessing.test_orthogonal_transformer.sample_matrix"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_orthogonal_with_df": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "sklego.preprocessing.OrthogonalTransformer",
    "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthogonal",
    "tests.test_preprocessing.test_orthogonal_transformer.sample_df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.test_orthonormal_transformer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "hasattr",
    "sklego.preprocessing.OrthogonalTransformer",
    "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthonormal",
    "tests.test_preprocessing.test_orthogonal_transformer.sample_matrix"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_orthogonal_transformer.transformer_checks": {
  "data": {
   "shadows": "tests.conftest.transformer_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_outlier_remover.GMMOutlierDetector": {
  "data": {
   "shadows": "sklego.mixture.GMMOutlierDetector"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.IsolationForest": {
  "data": {
   "shadows": "sklearn.ensemble.IsolationForest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.OutlierRemover": {
  "data": {
   "shadows": "sklego.preprocessing.OutlierRemover"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_outlier_remover.test_do_not_refit": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.array",
    "sklego.preprocessing.OutlierRemover"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_outlier_remover.test_estimator_checks": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.ensemble.IsolationForest",
    "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_fit2d_predict1d",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklearn.utils.estimator_checks.check_transformers_unfitted",
    "sklego.common.flatten",
    "sklego.mixture.GMMOutlierDetector",
    "sklego.preprocessing.OutlierRemover",
    "sklego.preprocessing.OutlierRemover.__name__",
    "test_fn",
    "tests.test_preprocessing.test_outlier_remover.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_outlier_remover.test_no_outliers": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklego.preprocessing.OutlierRemover"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_outlier_remover.test_pipeline_integration": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.seed",
    "sklearn.cluster.KMeans",
    "sklearn.ensemble.IsolationForest",
    "sklearn.pipeline.Pipeline",
    "sklego.mixture.GMMOutlierDetector",
    "sklego.preprocessing.OutlierRemover"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_outlier_remover.test_remove_outlier": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklego.preprocessing.OutlierRemover"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_pandastypeselector.PandasTypeSelector": {
  "data": {
   "shadows": "sklego.preprocessing.PandasTypeSelector"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_pandastypeselector.id_func": {
  "data": {
   "shadows": "tests.conftest.id_func"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_pandastypeselector.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_pandastypeselector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_pandastypeselector.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_pandastypeselector.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_get_feature_names": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sklego.preprocessing.PandasTypeSelector"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_get_params_np": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "itertools.combinations",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.timedelta64",
    "sklego.preprocessing.PandasTypeSelector",
    "tests.test_preprocessing.test_pandastypeselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_get_params_str": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "itertools.combinations",
    "sklego.preprocessing.PandasTypeSelector",
    "tests.test_preprocessing.test_pandastypeselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_len_classification": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sklego.preprocessing.PandasTypeSelector",
    "tests.conftest.id_func",
    "tests.test_preprocessing.test_pandastypeselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_len_regression": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sklego.preprocessing.PandasTypeSelector",
    "tests.conftest.id_func",
    "tests.test_preprocessing.test_pandastypeselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_value_error_differrent_dtyes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "sklego.preprocessing.PandasTypeSelector",
    "tests.test_preprocessing.test_pandastypeselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_value_error_empty": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "sklego.preprocessing.PandasTypeSelector",
    "tests.test_preprocessing.test_pandastypeselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_pandastypeselector.test_value_error_inequal": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "sklego.preprocessing.PandasTypeSelector",
    "tests.test_preprocessing.test_pandastypeselector.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_patsy_transformer.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_patsy_transformer.PatsyTransformer": {
  "data": {
   "shadows": "sklego.preprocessing.PatsyTransformer"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_patsy_transformer.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_patsy_transformer.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_patsy_transformer.df": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.log",
    "pandas.DataFrame",
    "tests.test_preprocessing.test_patsy_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_patsy_transformer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_patsy_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_apply_numpy_transform": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_basic_usage": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_design_matrix_error": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "RuntimeError",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df",
    "tests.test_preprocessing.test_patsy_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_design_matrix_in_pipeline": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "sklearn.pipeline.Pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_min_sign_usage": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_mult_usage": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "print",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_multiply_columns": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "print",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_return_type_dataframe": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_return_type_dmatrix": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_subset_categories_in_test": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_transform_dummy1": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "print",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_patsy_transformer.test_transform_dummy2": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "print",
    "sklego.preprocessing.PatsyTransformer",
    "tests.test_preprocessing.test_patsy_transformer.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_randomadder.RandomAdder": {
  "data": {
   "shadows": "sklego.preprocessing.RandomAdder"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_randomadder.check_transformers_unfitted": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_transformers_unfitted"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_randomadder.estimator_checks": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_randomadder.flatten": {
  "data": {
   "shadows": "sklego.common.flatten"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_randomadder.nonmeta_checks": {
  "data": {
   "shadows": "tests.conftest.nonmeta_checks"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_randomadder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_randomadder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_randomadder.test_dtype_classification": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.float",
    "sklego.preprocessing.RandomAdder"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder.test_dtype_regression": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.float",
    "sklego.preprocessing.RandomAdder"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder.test_estimator_checks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_dict_unchanged",
    "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
    "sklearn.utils.estimator_checks.check_fit1d",
    "sklearn.utils.estimator_checks.check_fit2d_1feature",
    "sklearn.utils.estimator_checks.check_fit2d_1sample",
    "sklearn.utils.estimator_checks.check_fit2d_predict1d",
    "sklearn.utils.estimator_checks.check_get_params_invariance",
    "sklearn.utils.estimator_checks.check_set_params",
    "sklearn.utils.estimator_checks.check_transformers_unfitted",
    "sklego.common.flatten",
    "sklego.preprocessing.RandomAdder",
    "sklego.preprocessing.RandomAdder.__name__",
    "test_fn",
    "tests.conftest.nonmeta_checks",
    "tests.test_preprocessing.test_randomadder.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder.test_only_transform_train": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.all",
    "sklearn.model_selection.train_test_split",
    "sklego.preprocessing.RandomAdder"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_randomadder.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction": {
  "data": {},
  "type": "module"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.RepeatingBasisFunction": {
  "data": {
   "shadows": "sklego.preprocessing.RepeatingBasisFunction"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction._RepeatingBasisFunction": {
  "data": {
   "shadows": "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.df": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.log",
    "pandas.DataFrame",
    "tests.test_preprocessing.test_repeatingbasisfunction.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_dataframe_equals_array": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "sklego.preprocessing.RepeatingBasisFunction",
    "tests.test_preprocessing.test_repeatingbasisfunction.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_drop_remainder": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklego.preprocessing.RepeatingBasisFunction",
    "tests.test_preprocessing.test_repeatingbasisfunction.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_int_indexing": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklego.preprocessing.RepeatingBasisFunction",
    "tests.test_preprocessing.test_repeatingbasisfunction.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_str_indexing": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklego.preprocessing.RepeatingBasisFunction",
    "tests.test_preprocessing.test_repeatingbasisfunction.df"
   ]
  },
  "type": "function"
 },
 "tests.test_preprocessing.test_repeatingbasisfunction.test_when_rbf_helper_receives_more_than_one_col_raises_value_error": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction",
    "tests.test_preprocessing.test_repeatingbasisfunction.df",
    "tests.test_preprocessing.test_repeatingbasisfunction.pytest"
   ]
  },
  "type": "function"
 }
}