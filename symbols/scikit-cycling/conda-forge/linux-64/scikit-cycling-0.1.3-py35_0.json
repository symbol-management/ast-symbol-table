{
 "skcycling": {
  "data": {},
  "type": "module"
 },
 "skcycling.__check_build": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "skcycling.__check_build.PACKAGE_NAME",
    "skcycling.__check_build.raise_build_error"
   ]
  },
  "type": "module"
 },
 "skcycling.__check_build.ERROR_TEMPLATE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skcycling.__check_build.INPLACE_MSG": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "skcycling.__check_build.PACKAGE_NAME": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "skcycling.__check_build.STANDARD_MSG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "skcycling.__check_build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skcycling.__check_build.raise_build_error": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ImportError",
    "enumerate",
    "list",
    "skcycling.__check_build.ERROR_TEMPLATE",
    "skcycling.__check_build.INPLACE_MSG",
    "skcycling.__check_build.PACKAGE_NAME",
    "skcycling.__check_build.STANDARD_MSG",
    "skcycling.__check_build.os"
   ]
  },
  "type": "function"
 },
 "skcycling.__check_build.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "skcycling.__check_build.setup.configuration"
   ]
  },
  "type": "module"
 },
 "skcycling.__check_build.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "skcycling.__check_build.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "skcycling.__check_build.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.__check_build.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "skcycling._version": {
  "data": {},
  "type": "module"
 },
 "skcycling._version.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "skcycling.base": {
  "data": {},
  "type": "module"
 },
 "skcycling.base.Rider": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skcycling.base.Rider.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "skcycling.base.Rider.__repr__": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "skcycling.base.Rider.add_activities": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "activity_power_profile",
    "bikeread",
    "pandas.concat",
    "validate_filenames"
   ]
  },
  "type": "function"
 },
 "skcycling.base.Rider.delete_activities": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "_strict_comparison",
    "isinstance",
    "len",
    "list",
    "numpy.any",
    "numpy.bitwise_and",
    "numpy.bitwise_not",
    "pandas.DateOffset",
    "pandas.Timestamp",
    "tuple"
   ]
  },
  "type": "function"
 },
 "skcycling.base.Rider.delete_activities._strict_comparison": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.bitwise_and",
    "pandas.DateOffset",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "skcycling.base.Rider.from_csv": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pandas.MultiIndex",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "skcycling.base.Rider.record_power_profile": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "bool",
    "numpy.bitwise_and",
    "numpy.ones_like",
    "pandas.DataFrame",
    "pandas.DateOffset",
    "pandas.Series",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "skcycling.base.Rider.to_csv": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "skcycling.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.datasets": {
  "data": {},
  "type": "module"
 },
 "skcycling.datasets.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skcycling.datasets.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "skcycling.datasets.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "skcycling.datasets.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "skcycling.datasets.load_fit": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "os.listdir",
    "os.path.dirname",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skcycling.datasets.load_rider": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "skcycling.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "skcycling.datasets.tests.test_datasets": {
  "data": {},
  "type": "module"
 },
 "skcycling.datasets.tests.test_datasets.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "skcycling.datasets.tests.test_datasets.load_fit": {
  "data": {
   "shadows": "skcycling.datasets.load_fit"
  },
  "type": "import"
 },
 "skcycling.datasets.tests.test_datasets.load_rider": {
  "data": {
   "shadows": "skcycling.datasets.load_rider"
  },
  "type": "import"
 },
 "skcycling.datasets.tests.test_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "skcycling.datasets.tests.test_datasets.test_load_fit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "skcycling.datasets.load_fit",
    "skcycling.datasets.tests.test_datasets.pytest",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "skcycling.datasets.tests.test_datasets.test_load_rider": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "os.path.join",
    "skcycling.datasets.load_rider"
   ]
  },
  "type": "function"
 },
 "skcycling.exceptions": {
  "data": {},
  "type": "module"
 },
 "skcycling.exceptions.MissingDataError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "skcycling.exceptions.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "skcycling.extraction": {
  "data": {},
  "type": "module"
 },
 "skcycling.extraction.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "skcycling.extraction.gradient": {
  "data": {},
  "type": "module"
 },
 "skcycling.extraction.gradient.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "skcycling.extraction.gradient.acceleration": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "MissingDataError"
   ]
  },
  "type": "function"
 },
 "skcycling.extraction.gradient.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skcycling.extraction.gradient.gradient_activity": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "skcycling.extraction.gradient.gradient_elevation": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "MissingDataError"
   ]
  },
  "type": "function"
 },
 "skcycling.extraction.gradient.gradient_heart_rate": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "MissingDataError"
   ]
  },
  "type": "function"
 },
 "skcycling.extraction.gradient.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.extraction.power_profile": {
  "data": {},
  "type": "module"
 },
 "skcycling.extraction.power_profile.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "skcycling.extraction.power_profile.activity_power_profile": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_associated_data_power_profile",
    "datetime.timedelta",
    "int",
    "isinstance",
    "max_mean_power_interval",
    "min",
    "numbers.Integral",
    "numpy.arange",
    "numpy.array",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.timedelta_range",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "skcycling.extraction.power_profile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.extraction.power_profile.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.extraction.power_profile.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "skcycling.extraction.power_profile.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "skcycling.extraction.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "skcycling.extraction.setup.configuration"
   ]
  },
  "type": "module"
 },
 "skcycling.extraction.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "skcycling.extraction.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "skcycling.extraction.setup.numpy"
   ]
  },
  "type": "function"
 },
 "skcycling.extraction.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.extraction.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "skcycling.io": {
  "data": {},
  "type": "module"
 },
 "skcycling.io.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skcycling.io.base": {
  "data": {},
  "type": "module"
 },
 "skcycling.io.base.DROP_OPTIONS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skcycling.io.base.bikeread": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "load_power_from_fit",
    "numpy.nan",
    "skcycling.io.base.DROP_OPTIONS"
   ]
  },
  "type": "function"
 },
 "skcycling.io.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.io.fit": {
  "data": {},
  "type": "module"
 },
 "skcycling.io.fit.FIELDS_DATA": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skcycling.io.fit.FitFile": {
  "data": {
   "shadows": "fitparse.FitFile"
  },
  "type": "import"
 },
 "skcycling.io.fit.check_filename_fit": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "skcycling.io.fit.os",
    "skcycling.io.fit.six",
    "type"
   ]
  },
  "type": "function"
 },
 "skcycling.io.fit.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "skcycling.io.fit.load_power_from_fit": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "IOError",
    "collections.defaultdict",
    "fitparse.FitFile",
    "list",
    "numpy.NaN",
    "pandas.DataFrame",
    "skcycling.io.fit.FIELDS_DATA",
    "skcycling.io.fit.check_filename_fit"
   ]
  },
  "type": "function"
 },
 "skcycling.io.fit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.io.fit.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skcycling.io.fit.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.io.fit.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "skcycling.io.tests": {
  "data": {},
  "type": "module"
 },
 "skcycling.io.tests.test_fit": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "skcycling.io.tests.test_fit.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "skcycling.io.tests.test_fit.check_filename_fit": {
  "data": {
   "shadows": "skcycling.io.fit.check_filename_fit"
  },
  "type": "import"
 },
 "skcycling.io.tests.test_fit.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "skcycling.io.tests.test_fit.load_fit": {
  "data": {
   "shadows": "skcycling.datasets.load_fit"
  },
  "type": "import"
 },
 "skcycling.io.tests.test_fit.load_power_from_fit": {
  "data": {
   "shadows": "skcycling.io.fit.load_power_from_fit"
  },
  "type": "import"
 },
 "skcycling.io.tests.test_fit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.io.tests.test_fit.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "skcycling.io.tests.test_fit.ride": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skcycling.io.tests.test_fit.test_check_check_filename_error": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "skcycling.io.fit.check_filename_fit",
    "skcycling.io.tests.test_fit.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.io.tests.test_fit.test_check_filename_fit": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "skcycling.datasets.load_fit",
    "skcycling.io.fit.check_filename_fit"
   ]
  },
  "type": "function"
 },
 "skcycling.io.tests.test_fit.test_load_power_error": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "skcycling.io.fit.load_power_from_fit",
    "skcycling.io.tests.test_fit.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.io.tests.test_fit.test_load_power_if_no_record": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "IOError",
    "skcycling.datasets.load_fit",
    "skcycling.io.fit.load_power_from_fit",
    "skcycling.io.tests.test_fit.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.io.tests.test_fit.test_load_power_normal_file": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.testing.assert_allclose",
    "skcycling.datasets.load_fit",
    "skcycling.io.fit.load_power_from_fit",
    "skcycling.io.tests.test_fit.ride"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics": {
  "data": {},
  "type": "module"
 },
 "skcycling.metrics.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "skcycling.metrics.activity": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "skcycling.metrics.activity.ESIE_SCALE_GRAPPE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "skcycling.metrics.activity.TS_SCALE_GRAPPE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skcycling.metrics.activity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skcycling.metrics.activity.ftp2mpa": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "skcycling.metrics.activity.intensity_factor_score": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "skcycling.metrics.activity.mpa2ftp",
    "skcycling.metrics.activity.normalized_power_score"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.activity.mpa2ftp": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "skcycling.metrics.activity.normalized_power_score": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "skcycling.metrics.activity.ESIE_SCALE_GRAPPE"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.activity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.metrics.activity.training_load_score": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.bitwise_and",
    "skcycling.metrics.activity.ESIE_SCALE_GRAPPE",
    "skcycling.metrics.activity.TS_SCALE_GRAPPE"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.activity.training_stress_score": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "skcycling.metrics.activity.intensity_factor_score"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.power_profile": {
  "data": {
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "module"
 },
 "skcycling.metrics.power_profile.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "skcycling.metrics.power_profile.SAMPLING_WKO": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "skcycling.metrics.power_profile.aerobic_meta_model": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.bitwise_and",
    "numpy.count_nonzero",
    "numpy.flatnonzero",
    "numpy.log",
    "numpy.timedelta64",
    "skcycling.metrics.power_profile.SAMPLING_WKO",
    "skcycling.metrics.power_profile.std_dev_squared_error",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.power_profile.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skcycling.metrics.power_profile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.metrics.power_profile.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.metrics.power_profile.std_dev_squared_error": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.tests": {
  "data": {},
  "type": "module"
 },
 "skcycling.metrics.tests.data": {
  "data": {},
  "type": "module"
 },
 "skcycling.metrics.tests.test_activity": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "module"
 },
 "skcycling.metrics.tests.test_activity.ftp": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "skcycling.metrics.tests.test_activity.ftp2mpa": {
  "data": {
   "shadows": "skcycling.metrics.ftp2mpa"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.intensity_factor_score": {
  "data": {
   "shadows": "skcycling.metrics.intensity_factor_score"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.mpa": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skcycling.metrics.tests.test_activity.mpa2ftp": {
  "data": {
   "shadows": "skcycling.metrics.mpa2ftp"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.normalized_power_score": {
  "data": {
   "shadows": "skcycling.metrics.normalized_power_score"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.ride": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "skcycling.metrics.tests.test_activity.ride_2": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "skcycling.metrics.tests.test_activity.test_convert_mpa_ftp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "skcycling.metrics.ftp2mpa",
    "skcycling.metrics.mpa2ftp",
    "skcycling.metrics.tests.test_activity.ftp",
    "skcycling.metrics.tests.test_activity.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.tests.test_activity.test_scores": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "score_func",
    "skcycling.metrics.intensity_factor_score",
    "skcycling.metrics.normalized_power_score",
    "skcycling.metrics.tests.test_activity.mpa",
    "skcycling.metrics.tests.test_activity.pytest",
    "skcycling.metrics.tests.test_activity.ride",
    "skcycling.metrics.tests.test_activity.ride_2",
    "skcycling.metrics.training_load_score",
    "skcycling.metrics.training_stress_score"
   ]
  },
  "type": "function"
 },
 "skcycling.metrics.tests.test_activity.training_load_score": {
  "data": {
   "shadows": "skcycling.metrics.training_load_score"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_activity.training_stress_score": {
  "data": {
   "shadows": "skcycling.metrics.training_stress_score"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_power_profile": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join",
    "skcycling.Rider.from_csv",
    "skcycling.metrics.tests.test_power_profile.filename_csv",
    "skcycling.metrics.tests.test_power_profile.module_path"
   ]
  },
  "type": "module"
 },
 "skcycling.metrics.tests.test_power_profile.Rider": {
  "data": {
   "shadows": "skcycling.Rider"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_power_profile.aerobic_meta_model": {
  "data": {
   "shadows": "skcycling.metrics.aerobic_meta_model"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_power_profile.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_power_profile.filename_csv": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "skcycling.metrics.tests.test_power_profile.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_power_profile.module_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "skcycling.metrics.tests.test_power_profile.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_power_profile.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "skcycling.metrics.tests.test_power_profile.rider": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skcycling.metrics.tests.test_power_profile.test_aerobic_meta_model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.timedelta_range",
    "print",
    "skcycling.metrics.aerobic_meta_model",
    "skcycling.metrics.tests.test_power_profile.pytest",
    "skcycling.metrics.tests.test_power_profile.rider"
   ]
  },
  "type": "function"
 },
 "skcycling.model": {
  "data": {},
  "type": "module"
 },
 "skcycling.model.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skcycling.model.power": {
  "data": {},
  "type": "module"
 },
 "skcycling.model.power.constants": {
  "data": {
   "shadows": "scipy.constants"
  },
  "type": "import"
 },
 "skcycling.model.power.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "skcycling.model.power.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.model.power.strava_power_model": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "acceleration",
    "gradient_elevation",
    "numpy.arctan",
    "numpy.sin",
    "scipy.constants.convert_temperature",
    "scipy.constants.g",
    "scipy.constants.gas_constant",
    "scipy.constants.physical_constants"
   ]
  },
  "type": "function"
 },
 "skcycling.model.tests": {
  "data": {},
  "type": "module"
 },
 "skcycling.model.tests.test_power": {
  "data": {
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.ones",
    "pandas.DataFrame",
    "skcycling.model.tests.test_power.distance",
    "skcycling.model.tests.test_power.elevation",
    "skcycling.model.tests.test_power.speed"
   ]
  },
  "type": "module"
 },
 "skcycling.model.tests.test_power.MissingDataError": {
  "data": {
   "shadows": "skcycling.exceptions.MissingDataError"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.acceleration": {
  "data": {
   "shadows": "skcycling.extraction.acceleration"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.activity": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "skcycling.model.tests.test_power.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.assert_series_equal": {
  "data": {
   "shadows": "pandas.testing.assert_series_equal"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.distance": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "skcycling.model.tests.test_power.elevation": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "skcycling.model.tests.test_power.gradient_elevation": {
  "data": {
   "shadows": "skcycling.extraction.gradient_elevation"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.speed": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "skcycling.model.tests.test_power.strava_power_model": {
  "data": {
   "shadows": "skcycling.model.strava_power_model"
  },
  "type": "import"
 },
 "skcycling.model.tests.test_power.test_strava_power_model": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less",
    "skcycling.model.strava_power_model",
    "skcycling.model.tests.test_power.activity"
   ]
  },
  "type": "function"
 },
 "skcycling.model.tests.test_power.test_strava_power_model_auto_compute": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.testing.assert_series_equal",
    "skcycling.extraction.acceleration",
    "skcycling.extraction.gradient_elevation",
    "skcycling.model.strava_power_model",
    "skcycling.model.tests.test_power.activity"
   ]
  },
  "type": "function"
 },
 "skcycling.model.tests.test_power.test_strava_power_model_error": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "skcycling.exceptions.MissingDataError",
    "skcycling.model.strava_power_model",
    "skcycling.model.tests.test_power.activity",
    "skcycling.model.tests.test_power.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "skcycling.setup.configuration"
   ]
  },
  "type": "module"
 },
 "skcycling.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "skcycling.setup.PACKAGE_NAME": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "skcycling.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "skcycling.setup.PACKAGE_NAME"
   ]
  },
  "type": "function"
 },
 "skcycling.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "skcycling.tests": {
  "data": {},
  "type": "module"
 },
 "skcycling.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "skcycling.tests.test_base.Rider": {
  "data": {
   "shadows": "skcycling.base.Rider"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.load_fit": {
  "data": {
   "shadows": "skcycling.datasets.load_fit"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.load_rider": {
  "data": {
   "shadows": "skcycling.datasets.load_rider"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "skcycling.tests.test_base.test_dump_load_rider": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "skcycling.base.Rider",
    "skcycling.base.Rider.from_csv",
    "skcycling.datasets.load_fit",
    "skcycling.tests.test_base.os",
    "skcycling.tests.test_base.shutil",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "skcycling.tests.test_base.test_rider_add_activities": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "skcycling.base.Rider",
    "skcycling.datasets.load_fit",
    "skcycling.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.tests.test_base.test_rider_add_activities_update": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "skcycling.base.Rider.from_csv",
    "skcycling.datasets.load_fit",
    "skcycling.datasets.load_rider",
    "skcycling.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.tests.test_base.test_rider_delete_activities": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "skcycling.base.Rider.from_csv",
    "skcycling.datasets.load_rider",
    "skcycling.tests.test_base.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "skcycling.tests.test_base.test_rider_delete_activities_error": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "skcycling.base.Rider.from_csv",
    "skcycling.datasets.load_rider",
    "skcycling.tests.test_base.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "skcycling.tests.test_base.test_rider_record_power_profile": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "skcycling.base.Rider.from_csv",
    "skcycling.datasets.load_rider",
    "skcycling.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "skcycling.utils": {
  "data": {},
  "type": "module"
 },
 "skcycling.utils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skcycling.utils.tests": {
  "data": {},
  "type": "module"
 },
 "skcycling.utils.tests.test_validation": {
  "data": {
   "symbols_in_volume": [
    "skcycling.datasets.load_fit"
   ]
  },
  "type": "module"
 },
 "skcycling.utils.tests.test_validation.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "skcycling.utils.tests.test_validation.filenames": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skcycling.utils.tests.test_validation.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "skcycling.utils.tests.test_validation.load_fit": {
  "data": {
   "shadows": "skcycling.datasets.load_fit"
  },
  "type": "import"
 },
 "skcycling.utils.tests.test_validation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "skcycling.utils.tests.test_validation.test_validate_filenames": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "list",
    "os.path.dirname",
    "os.path.join",
    "skcycling.utils.tests.test_validation.filenames",
    "skcycling.utils.tests.test_validation.pytest",
    "skcycling.utils.validate_filenames"
   ]
  },
  "type": "function"
 },
 "skcycling.utils.tests.test_validation.validate_filenames": {
  "data": {
   "shadows": "skcycling.utils.validate_filenames"
  },
  "type": "import"
 },
 "skcycling.utils.validation": {
  "data": {},
  "type": "module"
 },
 "skcycling.utils.validation.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "skcycling.utils.validation.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "skcycling.utils.validation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skcycling.utils.validation.validate_filenames": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "isinstance",
    "itertools.chain.from_iterable",
    "list",
    "skcycling.utils.validation.glob",
    "skcycling.utils.validation.os",
    "sorted"
   ]
  },
  "type": "function"
 }
}