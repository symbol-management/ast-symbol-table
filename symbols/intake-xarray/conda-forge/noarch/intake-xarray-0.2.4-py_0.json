{
 "intake_xarray": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "intake_xarray.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "intake_xarray._version": {
  "data": {},
  "type": "module"
 },
 "intake_xarray._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "intake_xarray._version.json",
    "intake_xarray._version.version_json"
   ]
  },
  "type": "function"
 },
 "intake_xarray._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "intake_xarray._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "intake_xarray.base": {
  "data": {},
  "type": "module"
 },
 "intake_xarray.base.DataSource": {
  "data": {
   "shadows": "intake.source.base.DataSource"
  },
  "type": "import"
 },
 "intake_xarray.base.DataSourceMixin": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "intake.source.base.DataSource"
   ]
  },
  "type": "class"
 },
 "intake_xarray.base.DataSourceMixin._get_schema": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "intake.source.base.Schema",
    "list",
    "serialize_zarr_ds",
    "tuple"
   ]
  },
  "type": "function"
 },
 "intake_xarray.base.DataSourceMixin.close": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "intake_xarray.base.DataSourceMixin.read": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "intake_xarray.base.DataSourceMixin.read_chunked": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "intake_xarray.base.DataSourceMixin.read_partition": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "intake_xarray.base.DataSourceMixin.to_dask": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "intake_xarray.base.PatternMixin": {
  "data": {
   "shadows": "intake.source.base.PatternMixin"
  },
  "type": "import"
 },
 "intake_xarray.base.Schema": {
  "data": {
   "shadows": "intake.source.base.Schema"
  },
  "type": "import"
 },
 "intake_xarray.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "intake_xarray.intake.container": {
  "data": {
   "shadows": "intake.container"
  },
  "type": "import"
 },
 "intake_xarray.netcdf": {
  "data": {},
  "type": "module"
 },
 "intake_xarray.netcdf.NetCDFSource": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "intake_xarray.netcdf.NetCDFSource.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "intake_xarray.netcdf.NetCDFSource",
    "super"
   ]
  },
  "type": "function"
 },
 "intake_xarray.netcdf.NetCDFSource._open_dataset": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_open_dataset",
    "xarray.open_dataset",
    "xarray.open_mfdataset"
   ]
  },
  "type": "function"
 },
 "intake_xarray.netcdf.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "intake_xarray.raster": {
  "data": {},
  "type": "module"
 },
 "intake_xarray.raster.PatternMixin": {
  "data": {
   "shadows": "intake.source.base.PatternMixin"
  },
  "type": "import"
 },
 "intake_xarray.raster.RasterIOSource": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "intake.source.base.PatternMixin"
   ]
  },
  "type": "class"
 },
 "intake_xarray.raster.RasterIOSource.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "intake_xarray.raster.RasterIOSource",
    "super"
   ]
  },
  "type": "function"
 },
 "intake_xarray.raster.RasterIOSource._get_schema": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Schema",
    "TypeError",
    "dict",
    "getattr",
    "intake_xarray.raster.msgpack",
    "list",
    "serialize_zarr_ds",
    "str",
    "tuple",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "intake_xarray.raster.RasterIOSource._open_dataset": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "intake_xarray.raster.glob",
    "isinstance",
    "len",
    "list",
    "sorted",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "intake_xarray.raster.RasterIOSource._open_files": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "enumerate",
    "intake.source.utils.reverse_formats",
    "numpy.full",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "intake_xarray.raster.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "intake_xarray.raster.msgpack": {
  "data": {
   "shadows": "msgpack"
  },
  "type": "import"
 },
 "intake_xarray.raster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "intake_xarray.raster.reverse_formats": {
  "data": {
   "shadows": "intake.source.utils.reverse_formats"
  },
  "type": "import"
 },
 "intake_xarray.raster.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "intake_xarray.xarray_container": {
  "data": {},
  "type": "module"
 },
 "intake_xarray.xarray_container.RemoteSource": {
  "data": {
   "shadows": "intake.container.base.RemoteSource"
  },
  "type": "import"
 },
 "intake_xarray.xarray_container.RemoteXarray": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "intake.container.base.RemoteSource"
   ]
  },
  "type": "class"
 },
 "intake_xarray.xarray_container.RemoteXarray.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "intake_xarray.xarray_container.RemoteXarray",
    "super",
    "xarray.open_zarr"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.RemoteXarray._get_partition": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "intake.container.base.get_partition"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.RemoteXarray._get_schema": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dask.array.Array",
    "dict",
    "getattr",
    "intake.container.base.get_partition",
    "intake.source.base.Schema",
    "intake_xarray.xarray_container.itertools",
    "intake_xarray.xarray_container.serialize_zarr_ds",
    "len",
    "list",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.RemoteXarray.close": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.RemoteXarray.read_chunked": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.RemoteXarray.to_dask": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.Schema": {
  "data": {
   "shadows": "intake.source.base.Schema"
  },
  "type": "import"
 },
 "intake_xarray.xarray_container.ZarrSerialiser": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "intake_xarray.xarray_container.ZarrSerialiser.__setitem__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dict.__setitem__",
    "intake_xarray.xarray_container.os"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "intake_xarray.xarray_container.get_partition": {
  "data": {
   "shadows": "intake.container.base.get_partition"
  },
  "type": "import"
 },
 "intake_xarray.xarray_container.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "intake_xarray.xarray_container.noop": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "intake_xarray.xarray_container.serialize_zarr_ds": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dask.array.Array",
    "intake_xarray.xarray_container.ZarrSerialiser",
    "intake_xarray.xarray_container.noop",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xarray_container.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "intake_xarray.xzarr": {
  "data": {},
  "type": "module"
 },
 "intake_xarray.xzarr.GCSMap": {
  "data": {
   "shadows": "gcsfs.mapping.GCSMap"
  },
  "type": "import"
 },
 "intake_xarray.xzarr.S3Map": {
  "data": {
   "shadows": "s3fs.mapping.S3Map"
  },
  "type": "import"
 },
 "intake_xarray.xzarr.ZarrSource": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "intake_xarray.xzarr.ZarrSource.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "intake_xarray.xzarr.ZarrSource",
    "super"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xzarr.ZarrSource._open_dataset": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dask.bytes.core.get_fs",
    "dask.bytes.core.infer_options",
    "dask.bytes.core.update_storage_options",
    "get_mapper",
    "xarray.open_zarr"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xzarr.ZarrSource.close": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "intake_xarray.xzarr.ZarrSource",
    "super"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xzarr.get_fs": {
  "data": {
   "shadows": "dask.bytes.core.get_fs"
  },
  "type": "import"
 },
 "intake_xarray.xzarr.get_mapper": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "gcsfs.mapping.GCSMap",
    "s3fs.mapping.S3Map"
   ]
  },
  "type": "function"
 },
 "intake_xarray.xzarr.infer_options": {
  "data": {
   "shadows": "dask.bytes.core.infer_options"
  },
  "type": "import"
 },
 "intake_xarray.xzarr.update_storage_options": {
  "data": {
   "shadows": "dask.bytes.core.update_storage_options"
  },
  "type": "import"
 },
 "intake_xarray.xzarr.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.test_catalog": {
  "data": {},
  "type": "module"
 },
 "tests.test_catalog.catalog1": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "intake.open_catalog",
    "tests.test_catalog.os",
    "tests.test_catalog.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_catalog.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_catalog.open_catalog": {
  "data": {
   "shadows": "intake.open_catalog"
  },
  "type": "import"
 },
 "tests.test_catalog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_catalog.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_catalog.test_catalog": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.all",
    "tests.test_catalog.catalog1"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray": {
  "data": {
   "symbols_in_volume": [
    "tests.test_intake_xarray.os"
   ]
  },
  "type": "module"
 },
 "tests.test_intake_xarray.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "tests.test_intake_xarray.here": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.test_intake_xarray.intake": {
  "data": {
   "shadows": "intake"
  },
  "type": "import"
 },
 "tests.test_intake_xarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_intake_xarray.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_intake_xarray.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_intake_xarray.test_discover": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict",
    "set",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_grib_dask": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "len",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_rasterio": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_rasterio_cached_glob": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_rasterio_empty_glob": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_rasterio_glob": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.all",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_partition_cdf": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "numpy.all",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_partition_tiff": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "numpy.all",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_partition_zarr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "numpy.all",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_pattern_concat_on_existing_dim": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.band.all",
    "dask.array.color",
    "dask.array.color.data",
    "dask.array.color.sel",
    "dask.array.color.shape",
    "dask.array.sel",
    "dask.array.shape",
    "enumerate",
    "len",
    "set",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_pattern_concat_on_new_dim": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.color",
    "dask.array.color.data",
    "dask.array.color.sel",
    "dask.array.color.shape",
    "dask.array.sel",
    "dask.array.shape",
    "enumerate",
    "len",
    "set",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_pattern_field_as_band": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.band",
    "dask.array.band.data",
    "dask.array.band.shape",
    "dask.array.band.values.all",
    "dask.array.shape",
    "dask.array.values.all",
    "enumerate",
    "len",
    "set",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_pattern_path_as_pattern_as_str_with_list_of_urlpaths": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.color",
    "dask.array.color.data",
    "dask.array.sel",
    "dask.array.shape",
    "enumerate",
    "len",
    "set",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_read_pattern_path_not_as_pattern": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.band",
    "len",
    "tests.test_intake_xarray.here",
    "tests.test_intake_xarray.intake",
    "tests.test_intake_xarray.os",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_intake_xarray.test_to_dask": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.all",
    "tests.test_intake_xarray.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_remote": {
  "data": {
   "symbols_in_volume": [
    "tests.test_remote.here",
    "tests.test_remote.os"
   ]
  },
  "type": "module"
 },
 "tests.test_remote.PORT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "tests.test_remote.cat_file": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.test_remote.here": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "tests.test_remote.intake": {
  "data": {
   "shadows": "intake"
  },
  "type": "import"
 },
 "tests.test_remote.intake_server": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "str",
    "tests.test_remote.PORT",
    "tests.test_remote.cat_file",
    "tests.test_remote.pytest",
    "tests.test_remote.requests",
    "tests.test_remote.subprocess",
    "tests.test_remote.time"
   ]
  },
  "type": "function"
 },
 "tests.test_remote.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_remote.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_remote.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "tests.test_remote.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "tests.test_remote.test_remote_netcdf": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "tests.test_remote.cat_file",
    "tests.test_remote.intake",
    "tests.test_remote.intake_server",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_remote.test_remote_tiff": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "tests.test_remote.cat_file",
    "tests.test_remote.intake",
    "tests.test_remote.intake_server",
    "tests.test_remote.pytest",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "tests.test_remote.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_remote.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.util": {
  "data": {
   "symbols_in_volume": [
    "tests.util.TEST_DATA",
    "tests.util.TEST_DATA_DIR",
    "tests.util.os"
   ]
  },
  "type": "module"
 },
 "tests.util.NetCDFSource": {
  "data": {
   "shadows": "intake_xarray.netcdf.NetCDFSource"
  },
  "type": "import"
 },
 "tests.util.TEST_DATA": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tests.util.TEST_DATA_DIR": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.util.TEST_URLPATH": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tests.util.ZarrSource": {
  "data": {
   "shadows": "intake_xarray.xzarr.ZarrSource"
  },
  "type": "import"
 },
 "tests.util.cdf_source": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "intake_xarray.netcdf.NetCDFSource",
    "tests.util.TEST_URLPATH",
    "tests.util.pytest"
   ]
  },
  "type": "function"
 },
 "tests.util.dataset": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "tests.util.TEST_URLPATH",
    "tests.util.pytest",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "tests.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.util.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.util.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tests.util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tests.util.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.util.zarr_source": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "intake_xarray.xzarr.ZarrSource",
    "tests.util.TEST_URLPATH",
    "tests.util.pytest",
    "tests.util.shutil",
    "tests.util.tempfile",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 }
}