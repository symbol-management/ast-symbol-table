{
 "benchmarks": {
  "data": {},
  "type": "module"
 },
 "benchmarks.arithmetic_ops": {
  "data": {},
  "type": "module"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.setup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "fletcher.FletcherContinuousArray",
    "numpy.random.rand",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.arrays.IntegerArray",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_chunked_sum": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_chunked_sum_na": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_cont_sum": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_cont_sum_na": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_pd_sum": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_pd_sum_na": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.arithmetic_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.arithmetic_ops.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.arithmetic_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.benchmarks": {
  "data": {},
  "type": "module"
 },
 "benchmarks.benchmarks.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "benchmarks.benchmarks.Indexing": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object",
    "typing.Any"
   ]
  },
  "type": "class"
 },
 "benchmarks.benchmarks.Indexing.setup": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "benchmarks.benchmarks.generate_test_array",
    "bool",
    "fletcher.FletcherChunkedArray",
    "len",
    "list",
    "numpy.array",
    "numpy.array_split",
    "numpy.zeros",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.string",
    "range",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.benchmarks.Indexing.time_getitem": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "benchmarks.benchmarks.Indexing.time_getitem_obj": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "benchmarks.benchmarks.Indexing.time_setitem": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "benchmarks.benchmarks.Indexing.time_setitem_obj": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "benchmarks.benchmarks.TimeSuite.setup": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "benchmarks.benchmarks.generate_test_array",
    "fletcher.FletcherChunkedArray",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_cat": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_cat_ext": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_concat": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_concat_ext": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_no_regex": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_no_regex_ext": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_no_regex_ignore_case_ext": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_no_regex_ignore_cast": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_regex": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_regex_ext": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_regex_ignore_case": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_contains_regex_ignore_case_ext": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_endswith": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_endswith_ext": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_isnull": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_isnull_ext": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_startswith": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_startswith_ext": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_zfill": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuite.time_zfill_ext": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuiteNonNull": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "benchmarks.benchmarks.TimeSuiteNonNull.setup": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "benchmarks.benchmarks.generate_test_array_non_null",
    "fletcher.FletcherChunkedArray",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuiteNonNull.time_contains_no_regex": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "benchmarks.benchmarks.TimeSuiteNonNull.time_contains_no_regex_ext": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "benchmarks.benchmarks.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.benchmarks.generate_test_array": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "benchmarks.benchmarks.six",
    "range"
   ]
  },
  "type": "function"
 },
 "benchmarks.benchmarks.generate_test_array_non_null": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "benchmarks.benchmarks.six",
    "range"
   ]
  },
  "type": "function"
 },
 "benchmarks.benchmarks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.benchmarks.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.benchmarks.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.benchmarks.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "benchmarks.boolean": {
  "data": {},
  "type": "module"
 },
 "benchmarks.boolean.BooleanAll": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "benchmarks.boolean.BooleanAll.setup": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "fletcher.FletcherChunkedArray",
    "numpy.float32",
    "numpy.ones",
    "object",
    "pandas.Series",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_fletcher": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_fletcher_withna": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_numpy": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_numpy_withna": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "benchmarks.boolean.BooleanAny.setup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "fletcher.FletcherChunkedArray",
    "numpy.float32",
    "numpy.zeros",
    "object",
    "pandas.Series",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_fletcher": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_fletcher_withna": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_numpy": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_numpy_withna": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_fletcher": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_fletcher_withna": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_numpy": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_numpy_withna": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "benchmarks.boolean.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.boolean.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.boolean.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.boolean.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops": {
  "data": {},
  "type": "module"
 },
 "benchmarks.comparison_ops.ComparisonOps": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "benchmarks.comparison_ops.ComparisonOps.setup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "fletcher.FletcherContinuousArray",
    "numpy.random.rand",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.arrays.IntegerArray",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_chunked_lt": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_chunked_lt_na": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_cont_lt": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_cont_lt_na": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_pd_lt": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_pd_lt_na": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.take": {
  "data": {
   "symbols_in_volume": [
    "benchmarks.take.Take",
    "benchmarks.take._take_nofill_random",
    "benchmarks.take._take_nofill_random_negative",
    "benchmarks.take._take_nofill_range",
    "benchmarks.take.attrs",
    "benchmarks.take.functions",
    "benchmarks.take.itertools",
    "functools.partialmethod",
    "setattr"
   ]
  },
  "type": "module"
 },
 "benchmarks.take.Take": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "benchmarks.take.Take.setup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "fletcher.FletcherContinuousArray",
    "len",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.Series",
    "pandas.arrays.IntegerArray",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_fill_random": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_nofill_random": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_nofill_random_negative": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_nofill_range": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take.attrs": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "benchmarks.take.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.take.functions": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "benchmarks.take.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "benchmarks.take.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.take.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.take.partialmethod": {
  "data": {
   "shadows": "functools.partialmethod"
  },
  "type": "import"
 },
 "benchmarks.take.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fletcher": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "fletcher.pkg_resources"
   ]
  },
  "type": "module"
 },
 "fletcher.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "fletcher.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "fletcher._algorithms": {
  "data": {
   "symbols_in_volume": [
    "fletcher._algorithms.np_reduce_op",
    "fletcher._algorithms.pd_nanop",
    "functools.partial",
    "numpy.amax",
    "numpy.amin",
    "numpy.array",
    "numpy.prod",
    "numpy.sum",
    "numpy.uint8",
    "pandas.core.nanops.nankurt",
    "pandas.core.nanops.nanmedian",
    "pandas.core.nanops.nanskew",
    "pandas.core.nanops.nanstd",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "module"
 },
 "fletcher._algorithms.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher._algorithms.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fletcher._algorithms.EMPTY_BUFFER_VIEW": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fletcher._algorithms.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher._algorithms.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher._algorithms._buffer_to_view": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fletcher._algorithms.EMPTY_BUFFER_VIEW",
    "numpy.asanyarray",
    "numpy.ndarray",
    "numpy.uint8",
    "pyarrow.Buffer",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._extract_data_buffer_as_np_array": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bool",
    "fletcher._algorithms._buffer_to_view",
    "len",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.unpackbits",
    "pyarrow.Array",
    "pyarrow.types.is_boolean"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._extract_isnull_bitmap": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "fletcher._algorithms._buffer_to_view",
    "int",
    "len",
    "numpy.full",
    "numpy.uint8",
    "pyarrow.Array"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._extract_isnull_bytemap": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bytes",
    "int",
    "numba.njit",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._isnull": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numba.njit",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._merge_non_aligned_bitmaps": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "int",
    "numba.njit",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._merge_valid_bitmaps": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_isnull_bitmap",
    "fletcher._algorithms._merge_non_aligned_bitmaps",
    "len",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.dispatch_chunked_binary_map": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map"
  },
  "type": "import"
 },
 "fletcher._algorithms.extract_isnull_bytemap": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "fletcher._algorithms._extract_isnull_bytemap",
    "isinstance",
    "len",
    "memoryview",
    "numpy.full",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.isnull": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "fletcher._algorithms._isnull",
    "numba.njit",
    "numpy.empty",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.kurt_op": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "fletcher._algorithms.max_op": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "fletcher._algorithms.median_op": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "fletcher._algorithms.min_op": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "fletcher._algorithms.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "fletcher._algorithms.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "fletcher._algorithms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher._algorithms.np_reduce_op": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "int",
    "isinstance",
    "len",
    "npop",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.NA",
    "pyarrow.array",
    "typing.Callable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_array_array": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "op",
    "pyarrow.Array",
    "pyarrow.array",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_array_scalar": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "op",
    "pyarrow.Array",
    "pyarrow.array",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_op": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "fletcher._algorithms.np_ufunc_array_array",
    "fletcher._algorithms.np_ufunc_array_scalar",
    "fletcher._algorithms.np_ufunc_scalar_array",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "functools.partial",
    "op",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_scalar_array": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "numpy.array",
    "numpy.isscalar",
    "op",
    "pyarrow.Array",
    "pyarrow.array",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher._algorithms.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "fletcher._algorithms.pd_nanop": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bool",
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "isinstance",
    "nanop",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.concat_arrays",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.prod_op": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "fletcher._algorithms.skew_op": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "fletcher._algorithms.std_op": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "fletcher._algorithms.str_length": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.empty",
    "numpy.uint32",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.sum_op": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "fletcher._algorithms.var_op": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "fletcher.algorithms": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.bool": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.bool.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool._all_op": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._all_op_nonnull": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._any_op": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._any_op_nonnull": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._any_op_skipna": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._or_na": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.all_op": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "all",
    "bool",
    "fletcher.algorithms.bool._all_op",
    "fletcher.algorithms.bool._all_op_nonnull",
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.all_true": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.full",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.all_true_like": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.full",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.any_op": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "any",
    "bool",
    "fletcher.algorithms.bool._any_op",
    "fletcher.algorithms.bool._any_op_nonnull",
    "fletcher.algorithms.bool._any_op_skipna",
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.apply_per_chunk": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking.apply_per_chunk"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.bitmap_or_unaligned": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy_nonnull": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "bytes",
    "fletcher.algorithms.bool.numba",
    "int",
    "numba.njit",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.dispatch_chunked_binary_map": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.masked_bitmap_or_unaligned": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bytes",
    "int",
    "numba.njit",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.njit": {
  "data": {
   "shadows": "numba.njit"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.or_array_array": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "fletcher.algorithms.bool.bitmap_or_unaligned",
    "fletcher.algorithms.bool.masked_bitmap_or_unaligned",
    "len",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.or_array_nparray": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy",
    "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy_nonnull",
    "len",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.or_na": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "fletcher.algorithms.bool._or_na",
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.or_vectorised": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "fletcher.algorithms.bool.or_array_array",
    "fletcher.algorithms.bool.or_array_nparray",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.algorithms.numpy_ufunc": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.utils": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.utils.chunking": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.utils.chunking.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking._1": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "isinstance",
    "len",
    "numpy.isscalar",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._2": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._not_implemented_path",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "isinstance",
    "len",
    "numpy.isscalar",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._calculate_chunk_offsets": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ndarray",
    "pyarrow.ChunkedArray"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._in_chunk_offsets",
    "int",
    "list",
    "pyarrow.ChunkedArray",
    "set",
    "sorted",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._in_chunk_offsets": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "len",
    "pyarrow.ChunkedArray",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._not_implemented_path": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.apply_per_chunk": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.apply_per_chunk.wrapper": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "isinstance",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._not_implemented_path",
    "functools.singledispatch",
    "isinstance",
    "len",
    "numpy.isscalar",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.singledispatch": {
  "data": {
   "shadows": "functools.singledispatch"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "fletcher.base": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bytes",
    "distutils.version.LooseVersion",
    "fletcher.base.PANDAS_GE_0_26_0",
    "fletcher.base.datetime",
    "float",
    "int",
    "list",
    "pandas.__version__",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.duration",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "str",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "fletcher.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fletcher.base.ExtensionArray": {
  "data": {
   "shadows": "pandas.core.arrays.ExtensionArray"
  },
  "type": "import"
 },
 "fletcher.base.ExtensionDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.ExtensionDtype"
  },
  "type": "import"
 },
 "fletcher.base.FletcherBaseArray": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "fletcher.base.operator",
    "functools.partialmethod",
    "numpy.ndarray.__add__",
    "numpy.ndarray.__eq__",
    "numpy.ndarray.__floordiv__",
    "numpy.ndarray.__ge__",
    "numpy.ndarray.__gt__",
    "numpy.ndarray.__le__",
    "numpy.ndarray.__lt__",
    "numpy.ndarray.__mod__",
    "numpy.ndarray.__mul__",
    "numpy.ndarray.__ne__",
    "numpy.ndarray.__pow__",
    "numpy.ndarray.__radd__",
    "numpy.ndarray.__rfloordiv__",
    "numpy.ndarray.__rmod__",
    "numpy.ndarray.__rmul__",
    "numpy.ndarray.__rpow__",
    "numpy.ndarray.__rsub__",
    "numpy.ndarray.__rtruediv__",
    "numpy.ndarray.__sub__",
    "numpy.ndarray.__truediv__",
    "pandas.core.arrays.ExtensionArray"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherBaseArray.__array__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__array_ufunc__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "NotImplementedError",
    "fletcher._algorithms.np_ufunc_op",
    "fletcher.algorithms.bool.any_op",
    "fletcher.base.FletcherBaseArray",
    "getattr",
    "isinstance",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__arrow_array__": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__divmod__": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__len__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__or__": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "fletcher.algorithms.bool.all_true",
    "fletcher.algorithms.bool.or_na",
    "fletcher.algorithms.bool.or_vectorised",
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "pandas.NA",
    "pandas.api.types.is_scalar",
    "pandas.isna",
    "pyarrow.types.is_boolean",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._np_compare_op": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "NotImplemented",
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "op",
    "pandas.Series",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._np_ufunc_op": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "NotImplemented",
    "fletcher._algorithms.np_ufunc_op",
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "pandas.Series",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._pd_object_take": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ndarray",
    "object",
    "pandas.core.algorithms.take",
    "pandas.core.arrays.ExtensionArray",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._reduce": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "fletcher._algorithms.kurt_op",
    "fletcher._algorithms.max_op",
    "fletcher._algorithms.median_op",
    "fletcher._algorithms.min_op",
    "fletcher._algorithms.prod_op",
    "fletcher._algorithms.skew_op",
    "fletcher._algorithms.std_op",
    "fletcher._algorithms.sum_op",
    "fletcher._algorithms.var_op",
    "fletcher.algorithms.bool.all_op",
    "fletcher.algorithms.bool.any_op",
    "len",
    "pyarrow.types.is_boolean",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._take_array": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "ValueError",
    "bool",
    "collections.abc.Iterable",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.ndarray",
    "pandas.api.types.is_array_like",
    "pandas.api.types.is_integer_dtype",
    "pandas.core.arrays.ExtensionArray",
    "pandas.isna",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.types.is_integer",
    "type",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.all": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "fletcher.algorithms.bool.all_op",
    "pyarrow.types.is_boolean",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.any": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "fletcher.algorithms.bool.any_op",
    "pyarrow.types.is_boolean",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.astype": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "arrow_class",
    "fletcher.base.FletcherChunkedDtype",
    "fletcher.base.FletcherContinuousDtype",
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "numpy.dtype",
    "pandas.StringDtype",
    "pandas.array",
    "pyarrow.DataType",
    "pyarrow.types.is_list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.base": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "property",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.dtype": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.ExtensionDtype",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.isna": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "fletcher._algorithms.extract_isnull_bytemap",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.ndim": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.shape": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.size": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.sum": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.unique": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "NotImplementedError",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.value_counts": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "numpy.array",
    "object",
    "pandas.Index",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.ExtensionDtype"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherBaseDtype.__eq__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.__from_arrow__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.__hash__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyarrow.DataType"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype._is_boolean": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "property",
    "pyarrow.types.is_boolean"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype._is_numeric": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "fletcher.base._is_numeric",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.kind": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "pyarrow.types.is_date",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.name": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.type": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "fletcher.base._python_type_map",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseArray"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherChunkedArray.__getitem__": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "IndexError",
    "collections.abc.Iterable",
    "fletcher.base.PANDAS_GE_0_26_0",
    "isinstance",
    "len",
    "min",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asarray",
    "pandas.api.types.is_array_like",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_integer_dtype",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.__init__": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "fletcher.base.FletcherChunkedDtype",
    "isinstance",
    "len",
    "list",
    "pandas.api.types.is_array_like",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.__setitem__": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "fletcher.base.PANDAS_GE_0_26_0",
    "isinstance",
    "len",
    "list",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.unique",
    "numpy.zeros_like",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_scalar",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.types.is_boolean",
    "pyarrow.types.is_date",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_list",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._calculate_chunk_offsets": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._concat_same_type": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._from_sequence": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "fletcher.base.FletcherChunkedArray",
    "fletcher.base.FletcherChunkedDtype",
    "isinstance",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._get_chunk_indexer": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "len",
    "numpy.broadcast_to",
    "numpy.digitize"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.copy": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.factorize": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "numpy.int64",
    "numpy.isnan",
    "pandas.api.types.is_int64_dtype",
    "pandas.factorize",
    "pyarrow.types.is_dictionary",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.fillna": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "len",
    "object",
    "pandas.api.types.is_array_like",
    "pandas.core.missing.backfill_1d",
    "pandas.core.missing.pad_1d",
    "pandas.util._validators.validate_fillna_kwargs"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.nbytes": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.take": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ndarray",
    "object",
    "pandas.core.algorithms.take",
    "pandas.core.arrays.ExtensionArray",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseDtype",
    "pandas.core.dtypes.dtypes.register_extension_dtype"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherChunkedDtype.__repr__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype.__str__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype.construct_array_type": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype.construct_from_string": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.type_for_alias",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseArray"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherContinuousArray.__getitem__": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "IndexError",
    "collections.abc.Iterable",
    "fletcher.base.PANDAS_GE_0_26_0",
    "isinstance",
    "len",
    "min",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asarray",
    "pandas.api.types.is_array_like",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_integer_dtype",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.__init__": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "fletcher.base.FletcherContinuousDtype",
    "isinstance",
    "list",
    "pandas.api.types.is_array_like",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.concat_arrays",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.__setitem__": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "fletcher.base.PANDAS_GE_0_26_0",
    "isinstance",
    "len",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.zeros_like",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_scalar",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.array",
    "pyarrow.types.is_boolean",
    "pyarrow.types.is_date",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_list",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray._concat_same_type": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pyarrow.concat_arrays"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray._from_sequence": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "fletcher.base.FletcherContinuousArray",
    "fletcher.base.FletcherContinuousDtype",
    "isinstance",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.copy": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.factorize": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "int",
    "numpy.int64",
    "numpy.isnan",
    "pandas.api.types.is_int64_dtype",
    "pyarrow.types.is_dictionary",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.fillna": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "len",
    "object",
    "pandas.api.types.is_array_like",
    "pandas.core.missing.backfill_1d",
    "pandas.core.missing.pad_1d",
    "pandas.util._validators.validate_fillna_kwargs"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.nbytes": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.take": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ndarray",
    "pandas.core.arrays.ExtensionArray",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseDtype",
    "pandas.core.dtypes.dtypes.register_extension_dtype"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherContinuousDtype.__repr__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype.__str__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype.construct_array_type": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype.construct_from_string": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.type_for_alias",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "fletcher.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.base.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "fletcher.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher.base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "fletcher.base.PANDAS_GE_0_26_0": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "fletcher.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "fletcher.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "fletcher.base.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "fletcher.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.base._calculate_chunk_offsets": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking._calculate_chunk_offsets"
  },
  "type": "import"
 },
 "fletcher.base._is_numeric": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "pyarrow.DataType",
    "pyarrow.types.is_decimal",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer"
   ]
  },
  "type": "function"
 },
 "fletcher.base._python_type_map": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "fletcher.base._string_type_map": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "fletcher.base.all_op": {
  "data": {
   "shadows": "fletcher.algorithms.bool.all_op"
  },
  "type": "import"
 },
 "fletcher.base.all_true": {
  "data": {
   "shadows": "fletcher.algorithms.bool.all_true"
  },
  "type": "import"
 },
 "fletcher.base.any_op": {
  "data": {
   "shadows": "fletcher.algorithms.bool.any_op"
  },
  "type": "import"
 },
 "fletcher.base.backfill_1d": {
  "data": {
   "shadows": "pandas.core.missing.backfill_1d"
  },
  "type": "import"
 },
 "fletcher.base.check_array_indexer": {
  "data": {
   "shadows": "pandas.core.indexers.check_array_indexer"
  },
  "type": "import"
 },
 "fletcher.base.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "fletcher.base.extract_isnull_bytemap": {
  "data": {
   "shadows": "fletcher._algorithms.extract_isnull_bytemap"
  },
  "type": "import"
 },
 "fletcher.base.is_array_like": {
  "data": {
   "shadows": "pandas.api.types.is_array_like"
  },
  "type": "import"
 },
 "fletcher.base.is_bool_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_bool_dtype"
  },
  "type": "import"
 },
 "fletcher.base.is_int64_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_int64_dtype"
  },
  "type": "import"
 },
 "fletcher.base.is_integer": {
  "data": {
   "shadows": "pandas.api.types.is_integer"
  },
  "type": "import"
 },
 "fletcher.base.is_integer_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_integer_dtype"
  },
  "type": "import"
 },
 "fletcher.base.kurt_op": {
  "data": {
   "shadows": "fletcher._algorithms.kurt_op"
  },
  "type": "import"
 },
 "fletcher.base.max_op": {
  "data": {
   "shadows": "fletcher._algorithms.max_op"
  },
  "type": "import"
 },
 "fletcher.base.median_op": {
  "data": {
   "shadows": "fletcher._algorithms.median_op"
  },
  "type": "import"
 },
 "fletcher.base.min_op": {
  "data": {
   "shadows": "fletcher._algorithms.min_op"
  },
  "type": "import"
 },
 "fletcher.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.base.np_ufunc_op": {
  "data": {
   "shadows": "fletcher._algorithms.np_ufunc_op"
  },
  "type": "import"
 },
 "fletcher.base.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "fletcher.base.or_na": {
  "data": {
   "shadows": "fletcher.algorithms.bool.or_na"
  },
  "type": "import"
 },
 "fletcher.base.or_vectorised": {
  "data": {
   "shadows": "fletcher.algorithms.bool.or_vectorised"
  },
  "type": "import"
 },
 "fletcher.base.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.base.pad_1d": {
  "data": {
   "shadows": "pandas.core.missing.pad_1d"
  },
  "type": "import"
 },
 "fletcher.base.pandas_from_arrow": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "NotImplementedError",
    "array_type",
    "bool",
    "collections.OrderedDict",
    "enumerate",
    "fletcher.base.FletcherChunkedArray",
    "fletcher.base.FletcherContinuousArray",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.RecordBatch",
    "pyarrow.Table",
    "type",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.base.partialmethod": {
  "data": {
   "shadows": "functools.partialmethod"
  },
  "type": "import"
 },
 "fletcher.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fletcher.base.prod_op": {
  "data": {
   "shadows": "fletcher._algorithms.prod_op"
  },
  "type": "import"
 },
 "fletcher.base.register_extension_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.register_extension_dtype"
  },
  "type": "import"
 },
 "fletcher.base.skew_op": {
  "data": {
   "shadows": "fletcher._algorithms.skew_op"
  },
  "type": "import"
 },
 "fletcher.base.std_op": {
  "data": {
   "shadows": "fletcher._algorithms.std_op"
  },
  "type": "import"
 },
 "fletcher.base.sum_op": {
  "data": {
   "shadows": "fletcher._algorithms.sum_op"
  },
  "type": "import"
 },
 "fletcher.base.take": {
  "data": {
   "shadows": "pandas.core.algorithms.take"
  },
  "type": "import"
 },
 "fletcher.base.validate_fillna_kwargs": {
  "data": {
   "shadows": "pandas.util._validators.validate_fillna_kwargs"
  },
  "type": "import"
 },
 "fletcher.base.var_op": {
  "data": {
   "shadows": "fletcher._algorithms.var_op"
  },
  "type": "import"
 },
 "fletcher.io": {
  "data": {},
  "type": "module"
 },
 "fletcher.io.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.io.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher.io.pandas_from_arrow": {
  "data": {
   "shadows": "fletcher.base.pandas_from_arrow"
  },
  "type": "import"
 },
 "fletcher.io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fletcher.io.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "fletcher.io.read_parquet": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "fletcher.base.pandas_from_arrow",
    "pandas.DataFrame",
    "pyarrow.parquet.read_table",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "fletcher.string_array": {
  "data": {},
  "type": "module"
 },
 "fletcher.string_array.FletcherBaseArray": {
  "data": {
   "shadows": "fletcher.base.FletcherBaseArray"
  },
  "type": "import"
 },
 "fletcher.string_array.FletcherChunkedArray": {
  "data": {
   "shadows": "fletcher.base.FletcherChunkedArray"
  },
  "type": "import"
 },
 "fletcher.string_array.FletcherContinuousArray": {
  "data": {
   "shadows": "fletcher.base.FletcherContinuousArray"
  },
  "type": "import"
 },
 "fletcher.string_array.NumbaString": {
  "data": {
   "shadows": "fletcher._numba_compat.NumbaString"
  },
  "type": "import"
 },
 "fletcher.string_array.NumbaStringArray": {
  "data": {
   "shadows": "fletcher._numba_compat.NumbaStringArray"
  },
  "type": "import"
 },
 "fletcher.string_array.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher.string_array.TextAccessor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.api.extensions.register_series_accessor"
   ]
  },
  "type": "class"
 },
 "fletcher.string_array.TextAccessor.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AttributeError",
    "fletcher.base.FletcherBaseArray",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor._call_str_accessor": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor._call_x_with": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool",
    "fletcher._numba_compat.NumbaString.make",
    "fletcher._numba_compat.NumbaStringArray.make",
    "impl",
    "isinstance",
    "len",
    "numpy.uint8",
    "numpy.zeros",
    "pandas.Series",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor._series_like": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.cat": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "fletcher.algorithms.string._text_cat",
    "fletcher.algorithms.string._text_cat_chunked",
    "fletcher.algorithms.string._text_cat_chunked_mixed",
    "fletcher.base.FletcherBaseArray",
    "fletcher.base.FletcherChunkedArray",
    "fletcher.base.FletcherContinuousArray",
    "isinstance",
    "pandas.Series",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.contains": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "fletcher.algorithms.bool.all_true_like",
    "fletcher.algorithms.string._text_contains_case_sensitive",
    "len",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.endswith": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "fletcher.algorithms.string._endswith"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.startswith": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "fletcher.algorithms.string._startswith"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.zfill": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.string_array._endswith": {
  "data": {
   "shadows": "fletcher.algorithms.string._endswith"
  },
  "type": "import"
 },
 "fletcher.string_array._startswith": {
  "data": {
   "shadows": "fletcher.algorithms.string._startswith"
  },
  "type": "import"
 },
 "fletcher.string_array._text_cat": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_cat"
  },
  "type": "import"
 },
 "fletcher.string_array._text_cat_chunked": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_cat_chunked"
  },
  "type": "import"
 },
 "fletcher.string_array._text_cat_chunked_mixed": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_cat_chunked_mixed"
  },
  "type": "import"
 },
 "fletcher.string_array._text_contains_case_sensitive": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_contains_case_sensitive"
  },
  "type": "import"
 },
 "fletcher.string_array.all_true_like": {
  "data": {
   "shadows": "fletcher.algorithms.bool.all_true_like"
  },
  "type": "import"
 },
 "fletcher.string_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.string_array.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.string_array.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 }
}