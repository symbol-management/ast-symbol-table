{
 "benchmarks": {
  "data": {},
  "type": "module"
 },
 "benchmarks.arithmetic_ops": {
  "data": {},
  "type": "module"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.setup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "fletcher.FletcherContinuousArray",
    "numpy.random.rand",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.arrays.IntegerArray",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_chunked_sum": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_chunked_sum_na": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_cont_sum": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_fr_cont_sum_na": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_pd_sum": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.ArithmeticOps.time_pd_sum_na": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "benchmarks.arithmetic_ops.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.arithmetic_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.arithmetic_ops.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.arithmetic_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.boolean": {
  "data": {},
  "type": "module"
 },
 "benchmarks.boolean.BooleanAll": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "benchmarks.boolean.BooleanAll.setup": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "fletcher.FletcherChunkedArray",
    "numpy.float32",
    "numpy.ones",
    "object",
    "pandas.Series",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_fletcher": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_fletcher_withna": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_numpy": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAll.time_numpy_withna": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "benchmarks.boolean.BooleanAny.setup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "fletcher.FletcherChunkedArray",
    "numpy.float32",
    "numpy.zeros",
    "object",
    "pandas.Series",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_fletcher": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_fletcher_withna": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_numpy": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.time_numpy_withna": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_fletcher": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_fletcher_withna": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_numpy": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "benchmarks.boolean.BooleanAny.track_size_numpy_withna": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "benchmarks.boolean.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.boolean.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.boolean.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.boolean.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops": {
  "data": {},
  "type": "module"
 },
 "benchmarks.comparison_ops.ComparisonOps": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "benchmarks.comparison_ops.ComparisonOps.setup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "fletcher.FletcherContinuousArray",
    "numpy.random.rand",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.arrays.IntegerArray",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_chunked_lt": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_chunked_lt_na": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_cont_lt": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_fr_cont_lt_na": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_pd_lt": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.ComparisonOps.time_pd_lt_na": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "benchmarks.comparison_ops.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.comparison_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.take": {
  "data": {
   "symbols_in_volume": [
    "benchmarks.take.Take",
    "benchmarks.take._take_nofill_random",
    "benchmarks.take._take_nofill_random_negative",
    "benchmarks.take._take_nofill_range",
    "benchmarks.take.attrs",
    "benchmarks.take.functions",
    "benchmarks.take.itertools",
    "functools.partialmethod",
    "setattr"
   ]
  },
  "type": "module"
 },
 "benchmarks.take.Take": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "benchmarks.take.Take.setup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "fletcher.FletcherContinuousArray",
    "len",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.Series",
    "pandas.arrays.IntegerArray",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_fill_random": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_nofill_random": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_nofill_random_negative": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take._take_nofill_range": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.take.attrs": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "benchmarks.take.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.take.functions": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "benchmarks.take.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "benchmarks.take.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.take.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.take.partialmethod": {
  "data": {
   "shadows": "functools.partialmethod"
  },
  "type": "import"
 },
 "benchmarks.take.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.text": {
  "data": {},
  "type": "module"
 },
 "benchmarks.text.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "benchmarks.text.Dummies": {
  "data": {
   "lineno": 565
  },
  "type": "class"
 },
 "benchmarks.text.Dummies.setup": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "pandas.Series",
    "pandas._testing.makeStringIndex",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "benchmarks.text.Dummies.time_get_dummies": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "benchmarks.text.Dummies.time_get_dummies_ext": {
  "data": {
   "lineno": 575
  },
  "type": "function"
 },
 "benchmarks.text.Dummies.time_get_dummies_ext_fr": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "benchmarks.text.Indexing": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "class"
 },
 "benchmarks.text.Indexing.setup": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "NotImplementedError",
    "benchmarks.text.generate_test_array",
    "bool",
    "fletcher.FletcherChunkedArray",
    "len",
    "list",
    "numpy.array",
    "numpy.array_split",
    "numpy.zeros",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.string",
    "range",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.text.Indexing.time_getitem": {
  "data": {
   "lineno": 632
  },
  "type": "function"
 },
 "benchmarks.text.Indexing.time_getitem_obj": {
  "data": {
   "lineno": 635
  },
  "type": "function"
 },
 "benchmarks.text.Indexing.time_setitem": {
  "data": {
   "lineno": 638
  },
  "type": "function"
 },
 "benchmarks.text.Indexing.time_setitem_obj": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "benchmarks.text.TimeSuitePatterns.setup": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "fletcher.FletcherChunkedArray",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.string",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_contains_no_regex": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_contains_no_regex_ext": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_contains_no_regex_ext_fr": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_count_no_regex": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_count_no_regex_ext": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_count_no_regex_ext_fr": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_replace_no_regex": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_replace_no_regex_ext": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuitePatterns.time_replace_no_regex_ext_fr": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "benchmarks.text.TimeSuiteText.setup": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "benchmarks.text.generate_test_array",
    "fletcher.FletcherChunkedArray",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_capitalize": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_capitalize_ext": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_capitalize_ext_fr": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_casefold": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_casefold_ext": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_casefold_ext_fr": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_cat": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_cat_ext": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_cat_ext_fr": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_concat": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_concat_ext": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_no_regex": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_no_regex_ext": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_no_regex_ext_fr": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_no_regex_ignore_case": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_no_regex_ignore_case_ext": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_no_regex_ignore_case_ext_fr": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_regex": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_regex_ext": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_regex_ext_fr": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_regex_ignore_case": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_regex_ignore_case_ext": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_contains_regex_ignore_case_ext_fr": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_count_no_regex": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_count_no_regex_ext": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_count_no_regex_ext_fr": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_count_regex": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_count_regex_ext": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_count_regex_ext_fr": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_endswith": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_endswith_ext": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_endswith_ext_fr": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_extract": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_extract_ext": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_extract_ext_fr": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_extractall": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_extractall_ext": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_extractall_ext_fr": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_find": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_find_ext": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_find_ext_fr": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_findall": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_findall_ext": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_findall_ext_fr": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_get": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_get_ext": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_get_ext_fr": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isalnum": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isalnum_ext": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isalnum_ext_fr": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isalpha": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isalpha_ext": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isalpha_ext_fr": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isdecimal": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isdecimal_ext": {
  "data": {
   "lineno": 558
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isdecimal_ext_fr": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isdigit": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isdigit_ext": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isdigit_ext_fr": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_islower": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_islower_ext": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_islower_ext_fr": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isnull": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isnull_ext": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isnumeric": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isnumeric_ext": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isnumeric_ext_fr": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isspace": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isspace_ext": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isspace_ext_fr": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_istitle": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_istitle_ext": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_istitle_ext_fr": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isupper": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isupper_ext": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_isupper_ext_fr": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_len": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_len_ext": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_len_ext_fr": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_ljust": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_ljust_ext": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_ljust_ext_fr": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_lower": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_lower_ext": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_lower_ext_fr": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_lstrip": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_lstrip_ext": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_lstrip_ext_fr": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_match": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_match_ext": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_match_ext_fr": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_normalize": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_normalize_ext": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_normalize_ext_fr": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_partition": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_repeat": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_repeat_ext": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_repeat_ext_fr": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_replace_no_regex": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_replace_no_regex_ext": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_replace_no_regex_ext_fr": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_replace_regex": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_replace_regex_ext": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_replace_regex_ext_fr": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rfind": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rfind_ext": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rfind_ext_fr": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rjust": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rjust_ext": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rjust_ext_fr": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rpartition": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rsplit": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rsplit_ext": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rsplit_ext_fr": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rstrip": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rstrip_ext": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_rstrip_ext_fr": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_slice": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_slice_ext": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_slice_replace": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_slice_replace_ext": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_slice_replace_ext_fr": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_slice_step2": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_slice_step2_ext": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_split": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_split_ext": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_split_ext_fr": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_startswith": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_startswith_ext": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_startswith_ext_fr": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_strip": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_strip_ext": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_swapcase": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_swapcase_ext": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_swapcase_ext_fr": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_title": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_title_ext": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_title_ext_fr": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_translate": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_translate_ext": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_translate_ext_fr": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_upper": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_upper_ext": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_upper_ext_fr": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_wrap": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_wrap_ext": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_wrap_ext_fr": {
  "data": {
   "lineno": 471
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_zfill": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_zfill_ext": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "benchmarks.text.TimeSuiteText.time_zfill_ext_fr": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "benchmarks.text.fr": {
  "data": {
   "shadows": "fletcher"
  },
  "type": "import"
 },
 "benchmarks.text.generate_test_array": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "benchmarks.text.six",
    "range"
   ]
  },
  "type": "function"
 },
 "benchmarks.text.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "benchmarks.text.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "benchmarks.text.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "benchmarks.text.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "fletcher": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "fletcher.pkg_resources"
   ]
  },
  "type": "module"
 },
 "fletcher.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "fletcher.__version__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "fletcher._algorithms": {
  "data": {
   "symbols_in_volume": [
    "fletcher._algorithms.np_reduce_op",
    "fletcher._algorithms.pd_nanop",
    "functools.partial",
    "numpy.amax",
    "numpy.amin",
    "numpy.array",
    "numpy.prod",
    "numpy.sum",
    "numpy.uint8",
    "pandas.core.nanops.nankurt",
    "pandas.core.nanops.nanmedian",
    "pandas.core.nanops.nanskew",
    "pandas.core.nanops.nanstd",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "module"
 },
 "fletcher._algorithms.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher._algorithms.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fletcher._algorithms.EMPTY_BUFFER_VIEW": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "fletcher._algorithms.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher._algorithms.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher._algorithms._buffer_to_view": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fletcher._algorithms.EMPTY_BUFFER_VIEW",
    "numpy.asanyarray",
    "numpy.ndarray",
    "numpy.uint8",
    "pyarrow.Buffer",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._extract_data_buffer_as_np_array": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_buffer_to_view",
    "bool",
    "len",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.unpackbits",
    "pyarrow.Array",
    "pyarrow.types.is_boolean"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._extract_isnull_bitmap": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "fletcher._algorithms._buffer_to_view",
    "int",
    "len",
    "numpy.full",
    "numpy.uint8",
    "pyarrow.Array"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._extract_isnull_bytemap": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "int",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._fill_up_indices": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "len",
    "numba.prange"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._get_new_indptr": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._isnull": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._merge_non_aligned_bitmaps": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms._merge_valid_bitmaps": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_isnull_bitmap",
    "fletcher._algorithms._merge_non_aligned_bitmaps",
    "len",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.dispatch_chunked_binary_map": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map"
  },
  "type": "import"
 },
 "fletcher._algorithms.extract_isnull_bytemap": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "fletcher._algorithms._extract_isnull_bytemap",
    "isinstance",
    "len",
    "memoryview",
    "numpy.full",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.isnull": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_isnull",
    "fletcher._compat.njit",
    "numpy.empty",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.kurt_op": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "fletcher._algorithms.max_op": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "fletcher._algorithms.median_op": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "fletcher._algorithms.min_op": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "fletcher._algorithms.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "fletcher._algorithms.njit": {
  "data": {
   "shadows": "fletcher._compat.njit"
  },
  "type": "import"
 },
 "fletcher._algorithms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher._algorithms.np_reduce_op": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "int",
    "isinstance",
    "len",
    "npop",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.NA",
    "pyarrow.array",
    "typing.Callable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_array_array": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "op",
    "pyarrow.Array",
    "pyarrow.array",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_array_scalar": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "op",
    "pyarrow.Array",
    "pyarrow.array",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_op": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "fletcher._algorithms.np_ufunc_array_array",
    "fletcher._algorithms.np_ufunc_array_scalar",
    "fletcher._algorithms.np_ufunc_scalar_array",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "functools.partial",
    "op",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.np_ufunc_scalar_array": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "numpy.array",
    "numpy.isscalar",
    "op",
    "pyarrow.Array",
    "pyarrow.array",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher._algorithms.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "fletcher._algorithms.pd_nanop": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "bool",
    "fletcher._algorithms._extract_data_buffer_as_np_array",
    "fletcher._algorithms.extract_isnull_bytemap",
    "isinstance",
    "nanop",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.concat_arrays",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "fletcher._algorithms.prod_op": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "fletcher._algorithms.skew_op": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "fletcher._algorithms.std_op": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "fletcher._algorithms.str_length": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "numpy.empty",
    "numpy.uint32",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.sum_op": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "fletcher._algorithms.take_on_pyarrow_list": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "fletcher._algorithms._fill_up_indices",
    "fletcher._algorithms._get_new_indptr",
    "len",
    "map",
    "numpy.asarray",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.int64",
    "numpy.zeros",
    "pyarrow.LargeListArray",
    "pyarrow.ListArray",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "fletcher._algorithms.var_op": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "fletcher._compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "fletcher._compat.HAS_DASK": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fletcher._compat.dask.dataframe": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "fletcher._compat.njit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "RuntimeWarning",
    "fletcher._compat.numba",
    "fletcher._compat.warnings"
   ]
  },
  "type": "function"
 },
 "fletcher._compat.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "fletcher._compat.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "fletcher._dask_compat": {
  "data": {},
  "type": "module"
 },
 "fletcher._dask_compat.FletcherChunkedDtype": {
  "data": {
   "shadows": "fletcher.base.FletcherChunkedDtype"
  },
  "type": "import"
 },
 "fletcher._dask_compat.FletcherContinuousDtype": {
  "data": {
   "shadows": "fletcher.base.FletcherContinuousDtype"
  },
  "type": "import"
 },
 "fletcher._dask_compat._0": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dask.dataframe.extensions.make_array_nonempty.register",
    "fletcher.base.FletcherChunkedDtype"
   ]
  },
  "type": "function"
 },
 "fletcher._dask_compat._1": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dask.dataframe.extensions.make_array_nonempty.register",
    "fletcher.base.FletcherContinuousDtype"
   ]
  },
  "type": "function"
 },
 "fletcher._dask_compat.make_array_nonempty": {
  "data": {
   "shadows": "dask.dataframe.extensions.make_array_nonempty"
  },
  "type": "import"
 },
 "fletcher.algorithms": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.bool": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.bool.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool._all_op": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._all_op_nonnull": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._any_op": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._any_op_nonnull": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._any_op_skipna": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool._or_na": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.all_op": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "all",
    "bool",
    "fletcher.algorithms.bool._all_op",
    "fletcher.algorithms.bool._all_op_nonnull",
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.all_true": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.full",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.all_true_like": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.full",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.any_op": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "any",
    "bool",
    "fletcher.algorithms.bool._any_op",
    "fletcher.algorithms.bool._any_op_nonnull",
    "fletcher.algorithms.bool._any_op_skipna",
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.apply_per_chunk": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking.apply_per_chunk"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.bitmap_or_unaligned": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy_nonnull": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.bool.numba",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.dispatch_chunked_binary_map": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.masked_bitmap_or_unaligned": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.njit": {
  "data": {
   "shadows": "fletcher._compat.njit"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "fletcher.algorithms.bool.or_array_array": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "fletcher.algorithms.bool.bitmap_or_unaligned",
    "fletcher.algorithms.bool.masked_bitmap_or_unaligned",
    "len",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.or_array_nparray": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy",
    "fletcher.algorithms.bool.bitmap_or_unaligned_with_numpy_nonnull",
    "len",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.or_na": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "fletcher.algorithms.bool._or_na",
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.or_vectorised": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "fletcher.algorithms.bool.or_array_array",
    "fletcher.algorithms.bool.or_array_nparray",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.bool.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.algorithms.numpy_ufunc": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.string": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.string.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.StringArrayBuilder": {
  "data": {
   "shadows": "fletcher.algorithms.string_builder.StringArrayBuilder"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.algorithms.string._apply_binary_str_array": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "bool",
    "call",
    "fletcher._algorithms._merge_valid_bitmaps",
    "fletcher.algorithms.string._apply_no_nulls",
    "fletcher.algorithms.string._apply_no_nulls_parallel",
    "fletcher.algorithms.string._apply_with_nulls",
    "fletcher.algorithms.string._apply_with_nulls_parallel",
    "fletcher.algorithms.string._extract_string_buffers",
    "func",
    "len",
    "numpy.empty",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.py_buffer",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._apply_no_nulls": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "func",
    "int",
    "range",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._apply_no_nulls_parallel": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "func",
    "int",
    "numba.prange",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._apply_with_nulls": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "func",
    "int",
    "numpy.uint8",
    "range",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._apply_with_nulls_parallel": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "func",
    "int",
    "numba.prange",
    "numpy.uint8",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._buffer_to_view": {
  "data": {
   "shadows": "fletcher._algorithms._buffer_to_view"
  },
  "type": "import"
 },
 "fletcher.algorithms.string._calculate_chunk_offsets": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking._calculate_chunk_offsets"
  },
  "type": "import"
 },
 "fletcher.algorithms.string._check_valid_row": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "bool",
    "fletcher._compat.njit",
    "int",
    "numpy.ndarray",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._combined_in_chunk_offsets": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets"
  },
  "type": "import"
 },
 "fletcher.algorithms.string._do_strip": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "bool",
    "fletcher._compat.njit",
    "fletcher.algorithms.string._extract_striped_string",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._endswith": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._extract_string_buffers": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "numpy.asanyarray",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.uint8",
    "pyarrow.Array",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._extract_striped_string": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "chr",
    "fletcher._compat.njit",
    "fletcher.algorithms.string._utf8_chr2",
    "fletcher.algorithms.string._utf8_chr3",
    "fletcher.algorithms.string._utf8_chr4"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._merge_string_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._merge_valid_bitmaps": {
  "data": {
   "shadows": "fletcher._algorithms._merge_valid_bitmaps"
  },
  "type": "import"
 },
 "fletcher.algorithms.string._shift_unaligned_bitmap": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "int",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._slice_generic": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.string.get_utf8_size",
    "fletcher.algorithms.string_builder.StringArrayBuilder",
    "int",
    "len",
    "numba.prange",
    "numpy.uint8",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._slice_handle_chunk": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "ValueError",
    "_slice_generic",
    "_slice_pos_inputs_nostep",
    "_slice_pos_inputs_step",
    "fletcher._algorithms._buffer_to_view",
    "fletcher.algorithms.string._extract_string_buffers",
    "fletcher.algorithms.string_builder.finalize_string_array",
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._slice_pos_inputs_nostep": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "fletcher.algorithms.string.get_utf8_size",
    "fletcher.algorithms.string_builder.StringArrayBuilder",
    "int",
    "len",
    "numba.prange",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._slice_pos_inputs_step": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.string.get_utf8_size",
    "fletcher.algorithms.string_builder.StringArrayBuilder",
    "int",
    "len",
    "numba.prange",
    "numpy.uint8",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._startswith": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_cat": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "fletcher._algorithms._merge_valid_bitmaps",
    "fletcher.algorithms.string._extract_string_buffers",
    "fletcher.algorithms.string._merge_string_data",
    "len",
    "numpy.empty",
    "numpy.int32",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.py_buffer",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_cat_chunked": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError",
    "functools.singledispatch",
    "pyarrow.ChunkedArray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_cat_chunked_1": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_text_cat",
    "fletcher.algorithms.string._text_cat_chunked",
    "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_cat_chunked_2": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "_text_cat",
    "fletcher.algorithms.string._text_cat_chunked",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "len",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_cat_chunked_mixed": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_text_cat",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "len",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_contains_case_sensitive": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "bytes",
    "fletcher._algorithms._buffer_to_view",
    "fletcher.algorithms.string._extract_string_buffers",
    "fletcher.algorithms.string._text_contains_case_sensitive_numba",
    "fletcher.algorithms.string.shift_unaligned_bitmap",
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.empty",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.bool_",
    "pyarrow.py_buffer",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_contains_case_sensitive_numba": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.string._check_valid_row",
    "fletcher.algorithms.utils.kmp.compute_kmp_failure_function",
    "int",
    "len",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_count_case_sensitive": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "bytes",
    "fletcher._algorithms._buffer_to_view",
    "fletcher.algorithms.string._extract_string_buffers",
    "fletcher.algorithms.string._text_count_case_sensitive_numba",
    "fletcher.algorithms.string.shift_unaligned_bitmap",
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "numpy.empty",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.int64",
    "pyarrow.py_buffer",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_count_case_sensitive_numba": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.string._check_valid_row",
    "fletcher.algorithms.utils.kmp.compute_kmp_failure_function",
    "int",
    "len",
    "numpy.empty",
    "numpy.int64",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_replace_case_sensitive": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "bytes",
    "fletcher._algorithms._buffer_to_view",
    "fletcher.algorithms.string._extract_string_buffers",
    "fletcher.algorithms.string._text_replace_case_sensitive_empty_pattern",
    "fletcher.algorithms.string._text_replace_case_sensitive_numba",
    "fletcher.algorithms.string.shift_unaligned_bitmap",
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "int",
    "len",
    "numpy.empty",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.py_buffer",
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_replace_case_sensitive_empty_pattern": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.string._check_valid_row",
    "int",
    "len",
    "min",
    "numpy.empty",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_replace_case_sensitive_numba": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "fletcher.algorithms.string._check_valid_row",
    "fletcher.algorithms.utils.kmp.compute_kmp_failure_function",
    "int",
    "len",
    "numpy.empty",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.uint8",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._text_strip": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "_do_strip",
    "fletcher.algorithms.string._extract_string_buffers",
    "fletcher.algorithms.string_builder.StringArrayBuilder",
    "fletcher.algorithms.string_builder.finalize_string_array",
    "fletcher.algorithms.utils.chunking.apply_per_chunk",
    "len",
    "max",
    "pyarrow.Array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._utf8_chr2": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "chr",
    "fletcher._compat.njit",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._utf8_chr3": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "chr",
    "fletcher._compat.njit",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string._utf8_chr4": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "chr",
    "fletcher._compat.njit",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string.apply_binary_str": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "fletcher.algorithms.string._apply_binary_str_array",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets",
    "func",
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "type",
    "typing.Callable",
    "typing.List",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string.apply_per_chunk": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking.apply_per_chunk"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.compute_kmp_failure_function": {
  "data": {
   "shadows": "fletcher.algorithms.utils.kmp.compute_kmp_failure_function"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.finalize_string_array": {
  "data": {
   "shadows": "fletcher.algorithms.string_builder.finalize_string_array"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.get_utf8_size": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "fletcher._compat.njit",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string.njit": {
  "data": {
   "shadows": "fletcher._compat.njit"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.prange": {
  "data": {
   "shadows": "numba.prange"
  },
  "type": "import"
 },
 "fletcher.algorithms.string.shift_unaligned_bitmap": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "fletcher.algorithms.string._shift_unaligned_bitmap",
    "int",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.Buffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string.singledispatch": {
  "data": {
   "shadows": "functools.singledispatch"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder": {
  "data": {
   "symbols_in_volume": [
    "ctypes.c_int",
    "ctypes.c_size_t",
    "ctypes.c_void_p",
    "ctypes.cdll.LoadLibrary",
    "ctypes.cdll.msvcrt",
    "ctypes.util.find_library",
    "fletcher.algorithms.string_builder.LibcMalloc",
    "fletcher.algorithms.string_builder.libc",
    "fletcher.algorithms.string_builder.malloc_callable",
    "fletcher.algorithms.string_builder.malloc_nojit",
    "fletcher.algorithms.string_builder.numba",
    "fletcher.algorithms.string_builder.os",
    "str",
    "typing.cast"
   ]
  },
  "type": "module"
 },
 "fletcher.algorithms.string_builder.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder.BitVector": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.numba"
   ]
  },
  "type": "class"
 },
 "fletcher.algorithms.string_builder.BitVector.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.malloc",
    "fletcher.algorithms.string_builder.memset",
    "fletcher.algorithms.string_builder.numba",
    "fletcher.algorithms.string_builder.numba_byte",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.BitVector.append_false": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.BitVector.append_true": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.BitVector.delete": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.free"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.BitVector.expand": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.free",
    "fletcher.algorithms.string_builder.malloc",
    "fletcher.algorithms.string_builder.memcpy",
    "fletcher.algorithms.string_builder.memset",
    "fletcher.algorithms.string_builder.numba",
    "fletcher.algorithms.string_builder.numba_byte",
    "max"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.BitVector.get": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.numba"
   ]
  },
  "type": "class"
 },
 "fletcher.algorithms.string_builder.ByteVector.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.malloc",
    "fletcher.algorithms.string_builder.memset",
    "fletcher.algorithms.string_builder.numba",
    "fletcher.algorithms.string_builder.numba_byte",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.append": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.append_bytes": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.append_int16": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.append_int32": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.append_int64": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.append_uint32": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.delete": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.free"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.expand": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.free",
    "fletcher.algorithms.string_builder.malloc",
    "fletcher.algorithms.string_builder.memcpy",
    "fletcher.algorithms.string_builder.memset",
    "fletcher.algorithms.string_builder.numba",
    "fletcher.algorithms.string_builder.numba_byte",
    "max"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.get_int16": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.get_int32": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.get_int64": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.get_uint32": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.ByteVector.get_uint8": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.C": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder.LibcMalloc": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.numba"
   ]
  },
  "type": "class"
 },
 "fletcher.algorithms.string_builder.LibcMalloc.__wrapper_address__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ctypes.c_void_p",
    "ctypes.cast",
    "fletcher.algorithms.string_builder.libc"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.LibcMalloc.signature": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.numba"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.StringArrayBuilder": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.BitVector",
    "fletcher.algorithms.string_builder.ByteVector",
    "fletcher.algorithms.string_builder.numba",
    "fletcher.algorithms.string_builder.os"
   ]
  },
  "type": "class"
 },
 "fletcher.algorithms.string_builder.StringArrayBuilder.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.BitVector",
    "fletcher.algorithms.string_builder.ByteVector",
    "fletcher.algorithms.string_builder.byte_for_bits",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.StringArrayBuilder.append_null": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.StringArrayBuilder.append_value": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.StringArrayBuilder.delete": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.byte_for_bits": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.numba"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder.finalize_string_array": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder.byte_for_bits",
    "numpy.copy",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.find_library": {
  "data": {
   "shadows": "ctypes.util.find_library"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder.free": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "fletcher.algorithms.string_builder.libc": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "fletcher.algorithms.string_builder.malloc": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "fletcher.algorithms.string_builder.malloc_callable": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "fletcher.algorithms.string_builder.malloc_nojit": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ctypes.c_void_p",
    "fletcher.algorithms.string_builder.libc",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder.memcpy": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "fletcher.algorithms.string_builder.memset": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "fletcher.algorithms.string_builder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder.numba_byte": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "fletcher.algorithms.string_builder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder_nojit": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.string_builder_nojit.BitVector": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "fletcher.algorithms.string_builder_nojit.BitVector.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.BitVector.append_false": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.BitVector.append_true": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.BitVector.delete": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.BitVector.expand": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.BitVector.get": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.append": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.append_bytes": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.append_int16": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.uint16",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.append_int32": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.append_int64": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.append_uint32": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.uint32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.delete": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.expand": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.get_int16": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.get_int32": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.get_int64": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.get_uint32": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.ByteVector.get_uint8": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder_nojit.StringArrayBuilder": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "fletcher.algorithms.string_builder_nojit.StringArrayBuilder.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder_nojit.BitVector",
    "fletcher.algorithms.string_builder_nojit.ByteVector",
    "fletcher.algorithms.string_builder_nojit.byte_for_bits",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.StringArrayBuilder.append_null": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.StringArrayBuilder.append_value": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.StringArrayBuilder.delete": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.byte_for_bits": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "fletcher.algorithms.string_builder_nojit.math"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.finalize_string_array": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.copy",
    "numpy.uint8",
    "pyarrow.Array",
    "pyarrow.Array.from_buffers",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.string_builder_nojit.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder_nojit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder_nojit.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "fletcher.algorithms.string_builder_nojit.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.utils.chunking": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.utils.chunking.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking._1": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "isinstance",
    "len",
    "numpy.isscalar",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._2": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._not_implemented_path",
    "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
    "isinstance",
    "len",
    "numpy.isscalar",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._calculate_chunk_offsets": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ndarray",
    "pyarrow.ChunkedArray"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._in_chunk_offsets",
    "int",
    "list",
    "pyarrow.ChunkedArray",
    "set",
    "sorted",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._in_chunk_offsets": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "len",
    "pyarrow.ChunkedArray",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking._not_implemented_path": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.apply_per_chunk": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.apply_per_chunk.wrapper": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "isinstance",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "fletcher.algorithms.utils.chunking._not_implemented_path",
    "functools.singledispatch",
    "isinstance",
    "len",
    "numpy.isscalar",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.chunking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.singledispatch": {
  "data": {
   "shadows": "functools.singledispatch"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.chunking.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.kmp": {
  "data": {},
  "type": "module"
 },
 "fletcher.algorithms.utils.kmp.append_to_kmp_matching": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.kmp.compute_kmp_failure_function": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bytes",
    "fletcher._compat.njit",
    "len",
    "numpy.empty",
    "numpy.int32",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "fletcher.algorithms.utils.kmp.njit": {
  "data": {
   "shadows": "fletcher._compat.njit"
  },
  "type": "import"
 },
 "fletcher.algorithms.utils.kmp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.base": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bytes",
    "dict",
    "distutils.version.LooseVersion",
    "fletcher.base.PANDAS_GE_0_26_0",
    "fletcher.base.datetime",
    "float",
    "int",
    "list",
    "numpy.float16",
    "pandas.__version__",
    "pyarrow.__version__",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.dictionary",
    "pyarrow.duration",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "str",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "fletcher.base.ARROW_GE_0_18_0": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "fletcher.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "fletcher.base.ExtensionArray": {
  "data": {
   "shadows": "pandas.core.arrays.ExtensionArray"
  },
  "type": "import"
 },
 "fletcher.base.ExtensionDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.ExtensionDtype"
  },
  "type": "import"
 },
 "fletcher.base.FletcherBaseArray": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "fletcher.base.operator",
    "fletcher.string_mixin.StringSupportingExtensionArray",
    "functools.partialmethod",
    "numpy.ndarray.__add__",
    "numpy.ndarray.__eq__",
    "numpy.ndarray.__floordiv__",
    "numpy.ndarray.__ge__",
    "numpy.ndarray.__gt__",
    "numpy.ndarray.__le__",
    "numpy.ndarray.__lt__",
    "numpy.ndarray.__mod__",
    "numpy.ndarray.__mul__",
    "numpy.ndarray.__ne__",
    "numpy.ndarray.__pow__",
    "numpy.ndarray.__radd__",
    "numpy.ndarray.__rfloordiv__",
    "numpy.ndarray.__rmod__",
    "numpy.ndarray.__rmul__",
    "numpy.ndarray.__rpow__",
    "numpy.ndarray.__rsub__",
    "numpy.ndarray.__rtruediv__",
    "numpy.ndarray.__sub__",
    "numpy.ndarray.__truediv__"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherBaseArray.__array__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__array_ufunc__": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "NotImplementedError",
    "fletcher._algorithms.np_ufunc_op",
    "fletcher.algorithms.bool.any_op",
    "fletcher.base.FletcherBaseArray",
    "getattr",
    "isinstance",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__arrow_array__": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__divmod__": {
  "data": {
   "lineno": 626
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__len__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.__or__": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "fletcher.algorithms.bool.all_true",
    "fletcher.algorithms.bool.or_na",
    "fletcher.algorithms.bool.or_vectorised",
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "pandas.NA",
    "pandas.api.types.is_scalar",
    "pandas.isna",
    "pyarrow.types.is_boolean",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._as_pandas_scalar": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "pyarrow.Scalar"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._np_compare_op": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "NotImplemented",
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "op",
    "pandas.DataFrame",
    "pandas.Series",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._np_ufunc_op": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "NotImplemented",
    "fletcher._algorithms.np_ufunc_op",
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._pd_object_take": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ndarray",
    "object",
    "pandas.core.algorithms.take",
    "pandas.core.arrays.ExtensionArray",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._reduce": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "fletcher._algorithms.kurt_op",
    "fletcher._algorithms.max_op",
    "fletcher._algorithms.median_op",
    "fletcher._algorithms.min_op",
    "fletcher._algorithms.prod_op",
    "fletcher._algorithms.skew_op",
    "fletcher._algorithms.std_op",
    "fletcher._algorithms.sum_op",
    "fletcher._algorithms.var_op",
    "fletcher.algorithms.bool.all_op",
    "fletcher.algorithms.bool.any_op",
    "len",
    "pyarrow.types.is_boolean",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray._take_array": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "ValueError",
    "bool",
    "collections.abc.Iterable",
    "fletcher._algorithms.take_on_pyarrow_list",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.ndarray",
    "pandas.api.types.is_array_like",
    "pandas.api.types.is_integer_dtype",
    "pandas.core.arrays.ExtensionArray",
    "pandas.isna",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.types.is_integer",
    "type",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.all": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "fletcher.algorithms.bool.all_op",
    "pyarrow.types.is_boolean",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.any": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "fletcher.algorithms.bool.any_op",
    "pyarrow.types.is_boolean",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.astype": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "arrow_class",
    "copy.copy",
    "fletcher.base.FletcherChunkedDtype",
    "fletcher.base.FletcherContinuousDtype",
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "numpy.dtype",
    "pandas.StringDtype",
    "pandas.array",
    "pyarrow.DataType",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.base": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "property",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.dtype": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.ExtensionDtype",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.isna": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "fletcher._algorithms.extract_isnull_bytemap",
    "hasattr",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.ndim": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.shape": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.size": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.sum": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.unique": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "NotImplementedError",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseArray.value_counts": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "numpy.array",
    "object",
    "pandas.Index",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.NA",
    "pandas.core.dtypes.dtypes.ExtensionDtype"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherBaseDtype.__eq__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.__from_arrow__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.__hash__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyarrow.DataType"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype._is_boolean": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "property",
    "pyarrow.types.is_boolean"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype._is_list": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property",
    "pyarrow.types.is_large_list",
    "pyarrow.types.is_list"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype._is_numeric": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "fletcher.base._is_numeric",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.example": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "fletcher.base._get_example"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.kind": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "pyarrow.types.is_date",
    "pyarrow.types.is_string",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.name": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherBaseDtype.type": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "fletcher.base._python_type_map",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseArray"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherChunkedArray.__getitem__": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "IndexError",
    "collections.abc.Iterable",
    "fletcher.base.ARROW_GE_0_18_0",
    "fletcher.base.PANDAS_GE_0_26_0",
    "int",
    "isinstance",
    "len",
    "min",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asarray",
    "pandas.api.types.is_array_like",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_integer_dtype",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.__init__": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "fletcher.base.FletcherChunkedDtype",
    "isinstance",
    "len",
    "list",
    "pandas.api.types.is_array_like",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.__setitem__": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "fletcher.base.PANDAS_GE_0_26_0",
    "isinstance",
    "len",
    "list",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.unique",
    "numpy.zeros_like",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_scalar",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.types.is_boolean",
    "pyarrow.types.is_date",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._calculate_chunk_offsets": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._concat_same_type": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._from_sequence": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "fletcher.base.ARROW_GE_0_18_0",
    "fletcher.base.FletcherChunkedArray",
    "fletcher.base.FletcherChunkedDtype",
    "isinstance",
    "pandas.NA",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray._get_chunk_indexer": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "len",
    "numpy.broadcast_to",
    "numpy.digitize"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.copy": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.factorize": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "numpy.int64",
    "numpy.isnan",
    "pandas.api.types.is_int64_dtype",
    "pandas.core.arrays.ExtensionArray.factorize",
    "pandas.util._decorators.doc",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.types.is_dictionary",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.fillna": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "hasattr",
    "len",
    "object",
    "pandas.api.types.is_array_like",
    "pandas.core.missing",
    "pandas.core.missing.backfill_1d",
    "pandas.core.missing.get_fill_func",
    "pandas.core.missing.pad_1d",
    "pandas.util._validators.validate_fillna_kwargs"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.flatten": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "pyarrow.chunked_array",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.nbytes": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedArray.take": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ndarray",
    "object",
    "pandas.core.algorithms.take",
    "pandas.core.arrays.ExtensionArray",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseDtype",
    "pandas.core.dtypes.dtypes.register_extension_dtype"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherChunkedDtype.__repr__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype.__str__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype.construct_array_type": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherChunkedDtype.construct_from_string": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.type_for_alias",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseArray"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherContinuousArray.__getitem__": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "IndexError",
    "collections.abc.Iterable",
    "fletcher.base.ARROW_GE_0_18_0",
    "fletcher.base.PANDAS_GE_0_26_0",
    "int",
    "isinstance",
    "len",
    "min",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asarray",
    "pandas.api.types.is_array_like",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_integer_dtype",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.__init__": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "fletcher.base.FletcherContinuousDtype",
    "isinstance",
    "list",
    "pandas.api.types.is_array_like",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.concat_arrays",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.__setitem__": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "fletcher.base.PANDAS_GE_0_26_0",
    "isinstance",
    "len",
    "numpy.argwhere",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.zeros_like",
    "pandas.NA",
    "pandas.api.types.is_bool_dtype",
    "pandas.api.types.is_integer",
    "pandas.api.types.is_scalar",
    "pandas.core.indexers.check_array_indexer",
    "pandas.isna",
    "pyarrow.array",
    "pyarrow.types.is_boolean",
    "pyarrow.types.is_date",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray._concat_same_type": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pyarrow.concat_arrays"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray._from_sequence": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "fletcher.base.ARROW_GE_0_18_0",
    "fletcher.base.FletcherContinuousArray",
    "fletcher.base.FletcherContinuousDtype",
    "isinstance",
    "pandas.NA",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.copy": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.factorize": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.isnan",
    "pandas.api.types.is_int64_dtype",
    "pandas.core.arrays.ExtensionArray.factorize",
    "pandas.util._decorators.doc",
    "pyarrow.types.is_dictionary",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.fillna": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "hasattr",
    "len",
    "object",
    "pandas.api.types.is_array_like",
    "pandas.core.missing",
    "pandas.core.missing.backfill_1d",
    "pandas.core.missing.get_fill_func",
    "pandas.core.missing.pad_1d",
    "pandas.util._validators.validate_fillna_kwargs"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.flatten": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.nbytes": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousArray.take": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ndarray",
    "pandas.core.arrays.ExtensionArray",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseDtype",
    "pandas.core.dtypes.dtypes.register_extension_dtype"
   ]
  },
  "type": "class"
 },
 "fletcher.base.FletcherContinuousDtype.__repr__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype.__str__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype.construct_array_type": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "fletcher.base.FletcherContinuousDtype.construct_from_string": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.type_for_alias",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.base.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "fletcher.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.base.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "fletcher.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher.base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "fletcher.base.PANDAS_GE_0_26_0": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "fletcher.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "fletcher.base.StringSupportingExtensionArray": {
  "data": {
   "shadows": "fletcher.string_mixin.StringSupportingExtensionArray"
  },
  "type": "import"
 },
 "fletcher.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "fletcher.base.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "fletcher.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.base._calculate_chunk_offsets": {
  "data": {
   "shadows": "fletcher.algorithms.utils.chunking._calculate_chunk_offsets"
  },
  "type": "import"
 },
 "fletcher.base._examples": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "fletcher.base._get_example": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "fletcher.base._examples",
    "isinstance",
    "pyarrow.Array",
    "pyarrow.DataType",
    "pyarrow.ListType",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "fletcher.base._is_numeric": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "pyarrow.DataType",
    "pyarrow.types.is_decimal",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer"
   ]
  },
  "type": "function"
 },
 "fletcher.base._python_type_map": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "fletcher.base._string_type_map": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "fletcher.base.all_op": {
  "data": {
   "shadows": "fletcher.algorithms.bool.all_op"
  },
  "type": "import"
 },
 "fletcher.base.all_true": {
  "data": {
   "shadows": "fletcher.algorithms.bool.all_true"
  },
  "type": "import"
 },
 "fletcher.base.any_op": {
  "data": {
   "shadows": "fletcher.algorithms.bool.any_op"
  },
  "type": "import"
 },
 "fletcher.base.check_array_indexer": {
  "data": {
   "shadows": "pandas.core.indexers.check_array_indexer"
  },
  "type": "import"
 },
 "fletcher.base.copycopy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "fletcher.base.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "fletcher.base.doc": {
  "data": {
   "shadows": "pandas.util._decorators.doc"
  },
  "type": "import"
 },
 "fletcher.base.extract_isnull_bytemap": {
  "data": {
   "shadows": "fletcher._algorithms.extract_isnull_bytemap"
  },
  "type": "import"
 },
 "fletcher.base.is_array_like": {
  "data": {
   "shadows": "pandas.api.types.is_array_like"
  },
  "type": "import"
 },
 "fletcher.base.is_bool_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_bool_dtype"
  },
  "type": "import"
 },
 "fletcher.base.is_int64_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_int64_dtype"
  },
  "type": "import"
 },
 "fletcher.base.is_integer": {
  "data": {
   "shadows": "pandas.api.types.is_integer"
  },
  "type": "import"
 },
 "fletcher.base.is_integer_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_integer_dtype"
  },
  "type": "import"
 },
 "fletcher.base.kurt_op": {
  "data": {
   "shadows": "fletcher._algorithms.kurt_op"
  },
  "type": "import"
 },
 "fletcher.base.max_op": {
  "data": {
   "shadows": "fletcher._algorithms.max_op"
  },
  "type": "import"
 },
 "fletcher.base.median_op": {
  "data": {
   "shadows": "fletcher._algorithms.median_op"
  },
  "type": "import"
 },
 "fletcher.base.min_op": {
  "data": {
   "shadows": "fletcher._algorithms.min_op"
  },
  "type": "import"
 },
 "fletcher.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.base.np_ufunc_op": {
  "data": {
   "shadows": "fletcher._algorithms.np_ufunc_op"
  },
  "type": "import"
 },
 "fletcher.base.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "fletcher.base.or_na": {
  "data": {
   "shadows": "fletcher.algorithms.bool.or_na"
  },
  "type": "import"
 },
 "fletcher.base.or_vectorised": {
  "data": {
   "shadows": "fletcher.algorithms.bool.or_vectorised"
  },
  "type": "import"
 },
 "fletcher.base.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.base.pandas_from_arrow": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "NotImplementedError",
    "array_type",
    "bool",
    "collections.OrderedDict",
    "enumerate",
    "fletcher.base.FletcherChunkedArray",
    "fletcher.base.FletcherContinuousArray",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "pyarrow.RecordBatch",
    "pyarrow.Table",
    "type",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "fletcher.base.partialmethod": {
  "data": {
   "shadows": "functools.partialmethod"
  },
  "type": "import"
 },
 "fletcher.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fletcher.base.pd_missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "fletcher.base.prod_op": {
  "data": {
   "shadows": "fletcher._algorithms.prod_op"
  },
  "type": "import"
 },
 "fletcher.base.register_extension_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.register_extension_dtype"
  },
  "type": "import"
 },
 "fletcher.base.skew_op": {
  "data": {
   "shadows": "fletcher._algorithms.skew_op"
  },
  "type": "import"
 },
 "fletcher.base.std_op": {
  "data": {
   "shadows": "fletcher._algorithms.std_op"
  },
  "type": "import"
 },
 "fletcher.base.sum_op": {
  "data": {
   "shadows": "fletcher._algorithms.sum_op"
  },
  "type": "import"
 },
 "fletcher.base.take": {
  "data": {
   "shadows": "pandas.core.algorithms.take"
  },
  "type": "import"
 },
 "fletcher.base.take_on_pyarrow_list": {
  "data": {
   "shadows": "fletcher._algorithms.take_on_pyarrow_list"
  },
  "type": "import"
 },
 "fletcher.base.validate_fillna_kwargs": {
  "data": {
   "shadows": "pandas.util._validators.validate_fillna_kwargs"
  },
  "type": "import"
 },
 "fletcher.base.var_op": {
  "data": {
   "shadows": "fletcher._algorithms.var_op"
  },
  "type": "import"
 },
 "fletcher.fletcher._dask_compat": {
  "data": {
   "shadows": "fletcher._dask_compat"
  },
  "type": "import"
 },
 "fletcher.io": {
  "data": {},
  "type": "module"
 },
 "fletcher.io.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.io.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher.io.pandas_from_arrow": {
  "data": {
   "shadows": "fletcher.base.pandas_from_arrow"
  },
  "type": "import"
 },
 "fletcher.io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fletcher.io.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "fletcher.io.read_parquet": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "fletcher.base.pandas_from_arrow",
    "pandas.DataFrame",
    "pyarrow.parquet.read_table",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "fletcher.string_array": {
  "data": {
   "symbols_in_volume": [
    "any",
    "fletcher.base.FletcherBaseArray.mro",
    "fletcher.string_array.NumbaString",
    "fletcher.string_array.NumbaStringArray",
    "fletcher.string_array.SUPPORTS_STR_ON_FLETCHER",
    "fletcher.string_array.TextAccessor",
    "fletcher.string_array._make",
    "fletcher.string_array._make_string",
    "fletcher.string_array.types",
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_alnum",
    "pyarrow.compute.utf8_is_alpha",
    "pyarrow.compute.utf8_is_decimal",
    "pyarrow.compute.utf8_is_digit",
    "pyarrow.compute.utf8_is_lower",
    "pyarrow.compute.utf8_is_numeric",
    "pyarrow.compute.utf8_is_space",
    "pyarrow.compute.utf8_is_title",
    "pyarrow.compute.utf8_is_upper",
    "str"
   ]
  },
  "type": "module"
 },
 "fletcher.string_array.FletcherBaseArray": {
  "data": {
   "shadows": "fletcher.base.FletcherBaseArray"
  },
  "type": "import"
 },
 "fletcher.string_array.FletcherChunkedArray": {
  "data": {
   "shadows": "fletcher.base.FletcherChunkedArray"
  },
  "type": "import"
 },
 "fletcher.string_array.FletcherContinuousArray": {
  "data": {
   "shadows": "fletcher.base.FletcherContinuousArray"
  },
  "type": "import"
 },
 "fletcher.string_array.NumbaString": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "fletcher.string_array.numba"
   ]
  },
  "type": "class"
 },
 "fletcher.string_array.NumbaString.__init__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaString.get_byte": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaString.length": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "fletcher.string_array.numba"
   ]
  },
  "type": "class"
 },
 "fletcher.string_array.NumbaStringArray.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.byte_length": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.byte_size": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.decode": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.get": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.get_byte": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.isnull": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.length": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArray.size": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArrayBuilder": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "fletcher.string_array.numba"
   ]
  },
  "type": "class"
 },
 "fletcher.string_array.NumbaStringArrayBuilder.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_missing_capactiy",
    "numpy.ones",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArrayBuilder.finish": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "_missing_capactiy"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArrayBuilder.finish_null": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "fletcher.string_array.math",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArrayBuilder.finish_string": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "fletcher.string_array.math",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArrayBuilder.increase_byte_capacity": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArrayBuilder.increase_string_capacity": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "_missing_capactiy",
    "numpy.uint32",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.NumbaStringArrayBuilder.put_byte": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "fletcher.string_array.math",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "fletcher.string_array.SUPPORTS_STR_ON_FLETCHER": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "fletcher.string_array.StringMethods": {
  "data": {
   "shadows": "pandas.core.strings.StringMethods"
  },
  "type": "import"
 },
 "fletcher.string_array.TextAccessor": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "fletcher.string_array.TextAccessorBase",
    "pandas.api.extensions.register_series_accessor"
   ]
  },
  "type": "class"
 },
 "fletcher.string_array.TextAccessor.__init__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "AttributeError",
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor._call_x_with": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "bool",
    "fletcher.string_array.NumbaString",
    "fletcher.string_array.NumbaStringArray",
    "impl",
    "isinstance",
    "len",
    "numpy.uint8",
    "numpy.zeros",
    "pandas.Series",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.cat": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "NotImplementedError",
    "fletcher.algorithms.string._text_cat",
    "fletcher.algorithms.string._text_cat_chunked",
    "fletcher.algorithms.string._text_cat_chunked_mixed",
    "fletcher.base.FletcherBaseArray",
    "fletcher.base.FletcherChunkedArray",
    "fletcher.base.FletcherContinuousArray",
    "isinstance",
    "pandas.Series",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.contains": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "bool",
    "contains_exact",
    "fletcher.algorithms.bool.all_true_like",
    "fletcher.algorithms.string._text_contains_case_sensitive",
    "getattr",
    "len",
    "pandas.Series",
    "pyarrow.compute",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.count": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "bool",
    "fletcher.algorithms.string._text_count_case_sensitive",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.endswith": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "fletcher.algorithms.string._endswith"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.replace": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "bool",
    "fletcher.algorithms.string._text_replace_case_sensitive",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.slice": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "fletcher.algorithms.string._slice_handle_chunk"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.startswith": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "fletcher.algorithms.string._startswith"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.strip": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "fletcher.algorithms.string._text_strip"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessor.zfill": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "int",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorBase": {
  "data": {
   "lineno": 258
  },
  "type": "class"
 },
 "fletcher.string_array.TextAccessorBase.__init__": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorBase._call_str_accessor": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pyarrow.array",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorBase._series_like": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.Array",
    "pyarrow.ChunkedArray",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorBase._validate_str_accessor": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "AttributeError",
    "callable",
    "getattr",
    "hasattr",
    "pandas.core.strings.StringMethods",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorBase._wrap_str_accessor": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorBase._wrap_str_accessor._wrapped_str_accessor": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorExt": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "fletcher.string_array.TextAccessorBase",
    "pandas.api.extensions.register_series_accessor"
   ]
  },
  "type": "class"
 },
 "fletcher.string_array.TextAccessorExt.__getattr__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "TextAccessor",
    "callable",
    "fletcher.base.FletcherBaseArray",
    "fletcher.string_array.TextAccessorBase",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.TextAccessorExt.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "fletcher.base.FletcherBaseArray",
    "isinstance",
    "pandas.core.strings.StringMethods",
    "super"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "fletcher.string_array._endswith": {
  "data": {
   "shadows": "fletcher.algorithms.string._endswith"
  },
  "type": "import"
 },
 "fletcher.string_array._extract_isnull_bitmap": {
  "data": {
   "shadows": "fletcher._algorithms._extract_isnull_bitmap"
  },
  "type": "import"
 },
 "fletcher.string_array._make": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "cls",
    "fletcher.string_array.buffers_as_arrays",
    "isinstance",
    "pyarrow.StringArray",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array._make_string": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "isinstance",
    "len",
    "memoryview",
    "numpy.asarray",
    "str"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array._missing_capactiy": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "fletcher.string_array.math",
    "fletcher.string_array.numba",
    "int"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array._slice_handle_chunk": {
  "data": {
   "shadows": "fletcher.algorithms.string._slice_handle_chunk"
  },
  "type": "import"
 },
 "fletcher.string_array._startswith": {
  "data": {
   "shadows": "fletcher.algorithms.string._startswith"
  },
  "type": "import"
 },
 "fletcher.string_array._text_cat": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_cat"
  },
  "type": "import"
 },
 "fletcher.string_array._text_cat_chunked": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_cat_chunked"
  },
  "type": "import"
 },
 "fletcher.string_array._text_cat_chunked_mixed": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_cat_chunked_mixed"
  },
  "type": "import"
 },
 "fletcher.string_array._text_contains_case_sensitive": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_contains_case_sensitive"
  },
  "type": "import"
 },
 "fletcher.string_array._text_count_case_sensitive": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_count_case_sensitive"
  },
  "type": "import"
 },
 "fletcher.string_array._text_replace_case_sensitive": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_replace_case_sensitive"
  },
  "type": "import"
 },
 "fletcher.string_array._text_strip": {
  "data": {
   "shadows": "fletcher.algorithms.string._text_strip"
  },
  "type": "import"
 },
 "fletcher.string_array.all_true_like": {
  "data": {
   "shadows": "fletcher.algorithms.bool.all_true_like"
  },
  "type": "import"
 },
 "fletcher.string_array.buffers_as_arrays": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "fletcher._algorithms._extract_isnull_bitmap",
    "len",
    "numpy.asarray",
    "numpy.uint32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "fletcher.string_array.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "fletcher.string_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.string_array.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "fletcher.string_array.numba.experimental": {
  "data": {
   "shadows": "numba.experimental"
  },
  "type": "import"
 },
 "fletcher.string_array.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.string_array.pc": {
  "data": {
   "shadows": "pyarrow.compute"
  },
  "type": "import"
 },
 "fletcher.string_array.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "fletcher.string_array.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "fletcher.string_mixin": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "fletcher.string_mixin.ExtensionArray": {
  "data": {
   "shadows": "pandas.core.arrays.ExtensionArray"
  },
  "type": "import"
 },
 "fletcher.string_mixin.ObjectStringArrayMixin": {
  "data": {
   "shadows": "pandas.core.strings.object_array.ObjectStringArrayMixin"
  },
  "type": "import"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "fletcher.string_mixin._IntermediateExtensionArray"
   ]
  },
  "type": "class"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_contains": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "hasattr",
    "numpy.nan",
    "pyarrow.bool_",
    "pyarrow.compute",
    "pyarrow.compute.match_substring",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_endswith": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_isalnum": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_alnum",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_isalpha": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_alpha",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_isdecimal": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_decimal",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_isdigit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_digit",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_islower": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_lower",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_isnumeric": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_numeric",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_isspace": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_space",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_istitle": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_title",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_isupper": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "hasattr",
    "pyarrow.compute",
    "pyarrow.compute.utf8_is_upper",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_map": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin.StringSupportingExtensionArray._str_startswith": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "fletcher.string_mixin._IntermediateExtensionArray": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.core.arrays.ExtensionArray"
   ]
  },
  "type": "class"
 },
 "fletcher.string_mixin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fletcher.string_mixin.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "fletcher.string_mixin.pc": {
  "data": {
   "shadows": "pyarrow.compute"
  },
  "type": "import"
 },
 "fletcher.testing": {
  "data": {},
  "type": "module"
 },
 "fletcher.testing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "fletcher.testing.Example": {
  "data": {
   "shadows": "hypothesis.core.Example"
  },
  "type": "import"
 },
 "fletcher.testing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "fletcher.testing.examples": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "fletcher.testing.examples.accept": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "hypothesis.core.Example"
   ]
  },
  "type": "function"
 }
}