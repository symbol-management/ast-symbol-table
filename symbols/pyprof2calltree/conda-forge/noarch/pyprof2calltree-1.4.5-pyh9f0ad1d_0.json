{
 "pyprof2calltree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyprof2calltree.main",
    "pyprof2calltree.sys"
   ]
  },
  "type": "module"
 },
 "pyprof2calltree.CalltreeConverter": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyprof2calltree.CalltreeConverter.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "collections.defaultdict",
    "isinstance",
    "pyprof2calltree.is_basestring",
    "pyprof2calltree.pstats",
    "pyprof2calltree.pstats2entries",
    "set"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter._add_code_by_position": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pyprof2calltree.cProfile"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter._output_entry": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "int",
    "pyprof2calltree.SCALE",
    "pyprof2calltree._entry_sort_key",
    "pyprof2calltree.cProfile",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter._output_subentry": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pyprof2calltree.cProfile"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter._output_summary": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "int",
    "max",
    "pyprof2calltree.SCALE"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter._populate_code_by_position": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter.munged_function_name": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len",
    "pyprof2calltree.cProfile"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter.output": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyprof2calltree._entry_sort_key",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.CalltreeConverter.visualize": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyprof2calltree.KCACHEGRIND_EXECUTABLES",
    "pyprof2calltree.io",
    "pyprof2calltree.is_installed",
    "pyprof2calltree.os",
    "pyprof2calltree.subprocess",
    "pyprof2calltree.sys",
    "pyprof2calltree.tempfile"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.Code": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyprof2calltree.Code.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyprof2calltree.Code.__repr__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyprof2calltree.Entry": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyprof2calltree.Entry.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyprof2calltree.Entry.__repr__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyprof2calltree.KCACHEGRIND_EXECUTABLES": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "pyprof2calltree.SCALE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyprof2calltree.Subentry": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyprof2calltree.Subentry.__init__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyprof2calltree.Subentry.__repr__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "pyprof2calltree.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyprof2calltree._entry_sort_key": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyprof2calltree.cProfile"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pyprof2calltree.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "pyprof2calltree.convert": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "open",
    "pyprof2calltree.CalltreeConverter",
    "pyprof2calltree.is_basestring"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyprof2calltree.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "pyprof2calltree.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyprof2calltree.is_basestring": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NameError",
    "bytes",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.is_installed": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "OSError",
    "open",
    "pyprof2calltree.errno",
    "pyprof2calltree.os",
    "pyprof2calltree.subprocess"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.main": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "open",
    "pyprof2calltree.CalltreeConverter",
    "pyprof2calltree.argparse",
    "pyprof2calltree.os",
    "pyprof2calltree.pstats",
    "pyprof2calltree.subprocess",
    "pyprof2calltree.sys",
    "pyprof2calltree.tempfile"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyprof2calltree.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "pyprof2calltree.pstats2entries": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "list",
    "pyprof2calltree.Code",
    "pyprof2calltree.Entry",
    "pyprof2calltree.Subentry",
    "pyprof2calltree.cProfile"
   ]
  },
  "type": "function"
 },
 "pyprof2calltree.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyprof2calltree.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyprof2calltree.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyprof2calltree.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pyprof2calltree.visualize": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pyprof2calltree.CalltreeConverter"
   ]
  },
  "type": "function"
 }
}