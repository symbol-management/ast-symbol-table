{
 "fast_histogram": {
  "data": {},
  "type": "module"
 },
 "fast_histogram.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "fast_histogram.histogram": {
  "data": {},
  "type": "module"
 },
 "fast_histogram.histogram.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "fast_histogram.histogram.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "fast_histogram.histogram.histogram1d": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_histogram1d",
    "_histogram1d_weighted",
    "numpy.isfinite",
    "numpy.isscalar",
    "range"
   ]
  },
  "type": "function"
 },
 "fast_histogram.histogram.histogram2d": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_histogram2d",
    "_histogram2d_weighted",
    "fast_histogram.histogram.numbers",
    "isinstance",
    "numpy.isfinite",
    "numpy.isscalar",
    "range"
   ]
  },
  "type": "function"
 },
 "fast_histogram.histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fast_histogram.histogram.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "fast_histogram.tests": {
  "data": {},
  "type": "module"
 },
 "fast_histogram.tests.test_histogram": {
  "data": {},
  "type": "module"
 },
 "fast_histogram.tests.test_histogram.arrays": {
  "data": {
   "shadows": "hypothesis.extra.numpy.arrays"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.example": {
  "data": {
   "shadows": "hypothesis.example"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "fast_histogram.tests.test_histogram.test_1d_compare_with_numpy": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "histogram1d",
    "hypothesis.assume",
    "hypothesis.extra.numpy.arrays",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.allclose",
    "numpy.float32",
    "numpy.histogram",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "fast_histogram.tests.test_histogram.test_2d_compare_with_numpy": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception",
    "histogram2d",
    "hypothesis.assume",
    "hypothesis.example",
    "hypothesis.extra.numpy.arrays",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.allclose",
    "numpy.histogram2d",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "fast_histogram.tests.test_histogram.test_array_bins": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "fast_histogram.tests.test_histogram.pytest",
    "histogram1d",
    "histogram2d",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "fast_histogram.tests.test_histogram.test_list": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "histogram1d",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "fast_histogram.tests.test_histogram.test_nd_arrays": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "histogram1d",
    "histogram2d",
    "numpy.random.random",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "fast_histogram.tests.test_histogram.test_non_contiguous": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "histogram1d",
    "histogram2d",
    "numpy.random.random",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 }
}