{
 "qsymm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm._static_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm._version": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "os.path.basename",
   "os.path.dirname",
   "os.path.realpath"
  ],
  "type": "module"
 },
 "qsymm._version._build_py": {
  "lineno": 152,
  "symbols_in_volume": [
   "distutils.command.build_py.build_py"
  ],
  "type": "class"
 },
 "qsymm._version._build_py.run": {
  "lineno": 153,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "qsymm._version._sdist": {
  "lineno": 159,
  "symbols_in_volume": [
   "setuptools.command.sdist.sdist"
  ],
  "type": "class"
 },
 "qsymm._version._sdist.make_release_tree": {
  "lineno": 160,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "qsymm._version._write_version": {
  "lineno": 140,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "qsymm._version.get_version": {
  "lineno": 24,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "qsymm._version.get_version_from_git": {
  "lineno": 57,
  "symbols_in_volume": [
   "os.path.samefile",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "qsymm._version.get_version_from_git_archive": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm._version.pep440_format": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.groups.ContinuousGroupGenerator": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "class"
 },
 "qsymm.groups.ContinuousGroupGenerator.__init__": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups.ContinuousGroupGenerator.__repr__": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups.ContinuousGroupGenerator.apply": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups.ContinuousGroupGenerator.apply.trf": {
  "lineno": 326,
  "symbols_in_volume": [
   "itertools.product",
   "sympy.diff"
  ],
  "type": "function"
 },
 "qsymm.groups.L_matrices": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "qsymm.groups.PointGroupElement.__eq__": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.__hash__": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.__init__": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sympy.ImmutableMatrix",
   "sympy.matrices.MatrixBase",
   "tinyarray.ndarray_int"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.__lt__": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.eye",
   "tinyarray.array"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.__mul__": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.__pow__": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.__repr__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement._strictereq": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.apply": {
  "lineno": 221,
  "symbols_in_volume": [
   "scipy.linalg.inv",
   "sympy.matrices.MatrixBase",
   "tinyarray.ndarray_int"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.identity": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.eye",
   "sympy.ImmutableMatrix",
   "sympy.eye",
   "sympy.matrices.MatrixBase",
   "tinyarray.identity",
   "tinyarray.ndarray_int"
  ],
  "type": "function"
 },
 "qsymm.groups.PointGroupElement.inv": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.ndarray",
   "scipy.linalg.inv",
   "sympy.matrices.MatrixBase",
   "tinyarray.ndarray_int"
  ],
  "type": "function"
 },
 "qsymm.groups._make_int": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.round",
   "tinyarray.array"
  ],
  "type": "function"
 },
 "qsymm.groups.cubic": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.eye",
   "tinyarray.array"
  ],
  "type": "function"
 },
 "qsymm.groups.generate_group": {
  "lineno": 337,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "qsymm.groups.generate_subgroups": {
  "lineno": 375,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "qsymm.groups.hexagonal": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.eye",
   "numpy.sqrt",
   "sympy.ImmutableMatrix",
   "sympy.Rational",
   "sympy.eye",
   "sympy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.groups.identity": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.eye",
   "tinyarray.identity"
  ],
  "type": "function"
 },
 "qsymm.groups.is_sympy_matrix": {
  "lineno": 31,
  "symbols_in_volume": [
   "sympy.ImmutableMatrix",
   "sympy.matrices.MatrixBase"
  ],
  "type": "function"
 },
 "qsymm.groups.name_PG_elements": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.float_",
   "numpy.isclose",
   "scipy.linalg.block_diag",
   "scipy.linalg.det",
   "scipy.linalg.eigvals"
  ],
  "type": "function"
 },
 "qsymm.groups.name_PG_elements.axisname": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.groups.name_PG_elements.find_axis": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.real",
   "scipy.linalg.eig"
  ],
  "type": "function"
 },
 "qsymm.groups.name_PG_elements.find_direction": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.cross",
   "numpy.eye",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "qsymm.groups.name_PG_elements.find_order": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "qsymm.groups.rmul": {
  "lineno": 14,
  "symbols_in_volume": [
   "functools.lru_cache"
  ],
  "type": "function"
 },
 "qsymm.groups.set_multiply": {
  "lineno": 370,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "qsymm.groups.spin_matrices": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.diag",
   "numpy.eye",
   "numpy.isclose",
   "numpy.round",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.groups.spin_rotation": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.real",
   "numpy.round",
   "numpy.tensordot",
   "scipy.linalg.expm",
   "tinyarray.array"
  ],
  "type": "function"
 },
 "qsymm.groups.symmetry_from_permutation": {
  "lineno": 666,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.eye",
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.hamiltonian_generator.bloch_family": {
  "lineno": 563,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "copy.deepcopy",
   "numpy.allclose",
   "numpy.concatenate",
   "numpy.eye",
   "numpy.zeros",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.check_symmetry": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.constrain_family": {
  "lineno": 361,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.any",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.continuum_hamiltonian": {
  "lineno": 16,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.continuum_pairing": {
  "lineno": 85,
  "symbols_in_volume": [
   "copy.deepcopy",
   "itertools.product",
   "numpy.array",
   "numpy.block",
   "numpy.eye",
   "numpy.kron",
   "numpy.ones",
   "numpy.zeros",
   "scipy.linalg.block_diag"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.continuum_variables": {
  "lineno": 185,
  "symbols_in_volume": [
   "itertools.product",
   "sympy.Mul",
   "sympy.Pow"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.display_family": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.hamiltonian_from_family": {
  "lineno": 258,
  "symbols_in_volume": [
   "sympy.symbols"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.make_basis_pretty": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.remove_duplicates": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.round_family": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.subtract_family": {
  "lineno": 501,
  "symbols_in_volume": [
   "numpy.log10"
  ],
  "type": "function"
 },
 "qsymm.hamiltonian_generator.symmetrize_monomial": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.kwant_continuum": {
  "lineno": null,
  "symbols_in_volume": [
   "sympy.MutableDenseMatrix",
   "sympy.abc._clash.copy",
   "sympy.core.core.all_classes",
   "sympy.eye",
   "sympy.physics.matrices.msigma",
   "sympy.physics.quantum.TensorProduct",
   "sympy.symbols"
  ],
  "type": "module"
 },
 "qsymm.kwant_continuum._expression_monomials": {
  "lineno": 285,
  "symbols_in_volume": [
   "collections.defaultdict",
   "sympy.Integer",
   "sympy.Mul",
   "sympy.expand"
  ],
  "type": "function"
 },
 "qsymm.kwant_continuum.gcd": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.kwant_continuum.lambdify": {
  "lineno": 76,
  "symbols_in_volume": [
   "sympy.Function",
   "sympy.Symbol",
   "sympy.core.function.AppliedUndef",
   "sympy.lambdify"
  ],
  "type": "function"
 },
 "qsymm.kwant_continuum.make_commutative": {
  "lineno": 229,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "qsymm.kwant_continuum.monomials": {
  "lineno": 248,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.ndenumerate",
   "sympy.MatrixBase",
   "sympy.Symbol",
   "sympy.zeros"
  ],
  "type": "function"
 },
 "qsymm.kwant_continuum.sympify": {
  "lineno": 113,
  "symbols_in_volume": [
   "keyword.iskeyword",
   "sympy.Function",
   "sympy.Matrix",
   "sympy.core.core.all_classes",
   "sympy.core.sympify.converter",
   "sympy.core.sympify.converter.pop",
   "sympy.sympify",
   "warnings.warn"
  ],
  "type": "function"
 },
 "qsymm.kwant_linalg_lll": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.kwant_linalg_lll.cvp": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.asarray",
   "numpy.diag",
   "numpy.diff",
   "numpy.max",
   "numpy.mgrid",
   "numpy.round",
   "numpy.sqrt",
   "numpy.where",
   "scipy.linalg.inv",
   "scipy.linalg.lstsq",
   "scipy.linalg.norm"
  ],
  "type": "function"
 },
 "qsymm.kwant_linalg_lll.gs": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "qsymm.kwant_linalg_lll.gs_coefficient": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "qsymm.kwant_linalg_lll.is_c_reduced": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.apply_along_axis",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "qsymm.kwant_linalg_lll.lll": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.asarray",
   "numpy.identity",
   "numpy.linalg.lstsq",
   "numpy.linalg.norm",
   "numpy.round"
  ],
  "type": "function"
 },
 "qsymm.kwant_linalg_lll.lll.ll_reduce": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.round"
  ],
  "type": "function"
 },
 "qsymm.kwant_linalg_lll.voronoi": {
  "lineno": 262,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.abs",
   "numpy.all",
   "numpy.array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.round"
  ],
  "type": "function"
 },
 "qsymm.kwant_rmt": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.linalg.qr"
  ],
  "type": "module"
 },
 "qsymm.kwant_rmt.c": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.kwant_rmt.circular": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.allclose",
   "numpy.arange",
   "numpy.array",
   "numpy.diag",
   "numpy.dot",
   "numpy.linalg.det",
   "numpy.resize"
  ],
  "type": "function"
 },
 "qsymm.kwant_rmt.ensure_rng": {
  "lineno": 325,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.random.RandomState",
   "numpy.random.mtrand._rand"
  ],
  "type": "function"
 },
 "qsymm.kwant_rmt.gaussian": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.kwant_rmt.p": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.kwant_rmt.t": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.linalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.linalg._inv_int": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.round",
   "scipy.linalg.det",
   "scipy.linalg.inv",
   "tinyarray.array"
  ],
  "type": "function"
 },
 "qsymm.linalg.allclose": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.allclose",
   "numpy.asarray",
   "numpy.max"
  ],
  "type": "function"
 },
 "qsymm.linalg.commutator": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "qsymm.linalg.family_to_vectors": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.hstack",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "qsymm.linalg.family_to_vectors.matrix_to_vector": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "qsymm.linalg.matrix_basis": {
  "lineno": 53,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.zeros",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "qsymm.linalg.mtm": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "qsymm.linalg.nullspace": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.allclose",
   "numpy.concatenate",
   "numpy.eye",
   "numpy.invert",
   "numpy.isclose",
   "numpy.max",
   "scipy.linalg.qr",
   "scipy.linalg.svd",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.linalg.eigsh"
  ],
  "type": "function"
 },
 "qsymm.linalg.prop_to_id": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.eye",
   "numpy.isclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "qsymm.linalg.rref": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.allclose",
   "numpy.argmax",
   "numpy.array",
   "numpy.eye",
   "numpy.max"
  ],
  "type": "function"
 },
 "qsymm.linalg.rref.pivot": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "qsymm.linalg.rref.rowmul": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "qsymm.linalg.rref.rowsub": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "qsymm.linalg.simult_diag": {
  "lineno": 259,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.all",
   "numpy.allclose",
   "numpy.diag",
   "numpy.diagonal",
   "numpy.dot",
   "numpy.eye",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "qsymm.linalg.simult_diag.grouped_diag": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.argsort",
   "numpy.array",
   "numpy.diag",
   "scipy.linalg.eig",
   "scipy.linalg.eigh",
   "scipy.linalg.qr",
   "scipy.sparse.csgraph.connected_components",
   "scipy.spatial.distance.cdist"
  ],
  "type": "function"
 },
 "qsymm.linalg.solve_mat_eqn": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.block",
   "numpy.empty",
   "numpy.vstack",
   "scipy.sparse.bmat",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "qsymm.linalg.sparse_basis": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.hstack",
   "numpy.imag",
   "numpy.real",
   "numpy.round",
   "numpy.split",
   "numpy.vstack",
   "warnings.warn"
  ],
  "type": "function"
 },
 "qsymm.linalg.split_list": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.append",
   "numpy.array",
   "numpy.diff",
   "numpy.insert",
   "numpy.where"
  ],
  "type": "function"
 },
 "qsymm.model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.model.BlochCoeff": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "qsymm.model.BlochCoeff.__deepcopy__": {
  "lineno": 89,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "qsymm.model.BlochCoeff.__eq__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.BlochCoeff.__hash__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.BlochCoeff.__mul__": {
  "lineno": 72,
  "symbols_in_volume": [
   "sympy.Expr"
  ],
  "type": "function"
 },
 "qsymm.model.BlochCoeff.__new__": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sympy.Expr",
   "sympy.add.Add"
  ],
  "type": "function"
 },
 "qsymm.model.BlochCoeff.__rmul__": {
  "lineno": 82,
  "symbols_in_volume": [
   "sympy.Expr"
  ],
  "type": "function"
 },
 "qsymm.model.BlochCoeff.tosympy": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.vectorize",
   "sympy.nsimplify"
  ],
  "type": "function"
 },
 "qsymm.model.BlochModel": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "class"
 },
 "qsymm.model.BlochModel.__init__": {
  "lineno": 480,
  "symbols_in_volume": [
   "collections.abc.Mapping",
   "collections.defaultdict",
   "numpy.zeros",
   "sympy.core.basic.Basic"
  ],
  "type": "function"
 },
 "qsymm.model.BlochModel.conj": {
  "lineno": 541,
  "symbols_in_volume": [
   "sympy.I"
  ],
  "type": "function"
 },
 "qsymm.model.BlochModel.rotate_momenta": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "qsymm.model.BlochModel.subs": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.BlochModel.tomodel": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.BlochModel.tosympy": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.BlochModel.transform_symbolic": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model": {
  "lineno": 102,
  "symbols_in_volume": [
   "collections.UserDict"
  ],
  "type": "class"
 },
 "qsymm.model.Model.T": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.__add__": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.__eq__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.__init__": {
  "lineno": 107,
  "symbols_in_volume": [
   "collections.abc.Mapping",
   "collections.defaultdict",
   "numpy.allclose",
   "numpy.array",
   "numpy.sum",
   "sympy.Matrix",
   "sympy.Mul",
   "sympy.Symbol",
   "sympy.core.basic.Basic",
   "sympy.matrices.MatrixBase"
  ],
  "type": "function"
 },
 "qsymm.model.Model.__missing__": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "qsymm.model.Model.__mul__": {
  "lineno": 243,
  "symbols_in_volume": [
   "itertools.product",
   "numbers.Number",
   "numpy.allclose",
   "numpy.dot",
   "numpy.isclose",
   "numpy.ndarray",
   "numpy.zeros",
   "sympy.core.basic.Basic"
  ],
  "type": "function"
 },
 "qsymm.model.Model.__neg__": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.__radd__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.__repr__": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.__rmul__": {
  "lineno": 274,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.allclose",
   "numpy.dot",
   "numpy.ndarray",
   "numpy.zeros",
   "sympy.core.basic.Basic"
  ],
  "type": "function"
 },
 "qsymm.model.Model.__sub__": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.around": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.around"
  ],
  "type": "function"
 },
 "qsymm.model.Model.conj": {
  "lineno": 389,
  "symbols_in_volume": [
   "sympy.I"
  ],
  "type": "function"
 },
 "qsymm.model.Model.copy": {
  "lineno": 435,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "qsymm.model.Model.lambdify": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.e",
   "sympy.Matrix",
   "sympy.Symbol",
   "sympy.lambdify"
  ],
  "type": "function"
 },
 "qsymm.model.Model.rotate_momenta": {
  "lineno": 318,
  "symbols_in_volume": [
   "sympy.Matrix"
  ],
  "type": "function"
 },
 "qsymm.model.Model.rotate_momenta.trf": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.subs": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.e",
   "numpy.prod",
   "sympy.Basic",
   "sympy.Symbol",
   "sympy.expand"
  ],
  "type": "function"
 },
 "qsymm.model.Model.tosympy": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.vectorize",
   "sympy.ImmutableDenseMatrix",
   "sympy.ImmutableDenseNDimArray",
   "sympy.MatAdd",
   "sympy.Matrix",
   "sympy.MatrixBase",
   "sympy.nsimplify",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "qsymm.model.Model.transform_symbolic": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.value_list": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.Model.zeros_like": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model._find_momenta": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model._find_shape": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model._to_bloch_coeff": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "sympy.Add",
   "sympy.Expr",
   "sympy.I",
   "sympy.Mul",
   "sympy.add.Add",
   "sympy.expand",
   "sympy.nsimplify",
   "sympy.numbers.One",
   "sympy.power.Pow",
   "sympy.powsimp",
   "sympy.simplify",
   "sympy.symbol.Symbol"
  ],
  "type": "function"
 },
 "qsymm.model._to_bloch_coeff.is_hopping_expo": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.model.substitute_exponents": {
  "lineno": 22,
  "symbols_in_volume": [
   "sympy.Function",
   "sympy.core.function.AppliedUndef"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.symmetry_finder._construct_unitary": {
  "lineno": 599,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.all",
   "numpy.eye",
   "numpy.tensordot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder._find_unitary": {
  "lineno": 451,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.allclose",
   "numpy.array"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder._find_unitary_blocks": {
  "lineno": 518,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.imag",
   "numpy.isclose",
   "numpy.real",
   "numpy.sqrt",
   "scipy.linalg.det",
   "scipy.linalg.eigvalsh"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder._nice_square": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.isclose",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder._reduce_hamiltonian": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.eye"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder._reduced_model": {
  "lineno": 737,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.bravais_group_2d": {
  "lineno": 827,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.bravais_group_3d": {
  "lineno": 865,
  "symbols_in_volume": [
   "numpy.cross"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.bravais_point_group": {
  "lineno": 765,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.diag",
   "numpy.eye",
   "numpy.sign",
   "scipy.linalg.qr"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.casimir": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.tensordot",
   "scipy.linalg.det",
   "scipy.linalg.inv"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.check_bravais_symmetry": {
  "lineno": 1060,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.conserved_quantities": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.tensordot",
   "numpy.trace"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.continuous_symmetries": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.einsum",
   "numpy.hstack",
   "numpy.sum",
   "numpy.vstack",
   "numpy.zeros",
   "scipy.linalg.block_diag"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.discrete_symmetries": {
  "lineno": 366,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.array",
   "numpy.eye"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.equals": {
  "lineno": 985,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argsort",
   "numpy.array",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.outer"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.killing": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.tensordot"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.mirror": {
  "lineno": 974,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.outer"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.pick_perp": {
  "lineno": 1008,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isclose",
   "numpy.sum"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.rotation": {
  "lineno": 979,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pi",
   "numpy.real",
   "scipy.linalg.norm"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.separate_lie_algebra": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.tensordot"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.struct_const": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.struct_const.expand": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isclose",
   "scipy.linalg.lstsq"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.symmetries": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.symmetry_adapted_sun": {
  "lineno": 163,
  "symbols_in_volume": [
   "itertools.combinations_with_replacement",
   "numpy.all",
   "numpy.allclose",
   "numpy.array",
   "numpy.eye",
   "numpy.hstack",
   "numpy.split",
   "numpy.sqrt",
   "scipy.linalg.eigh",
   "scipy.linalg.svd"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.threefold_axis": {
  "lineno": 1019,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.abs",
   "numpy.allclose",
   "numpy.cross",
   "numpy.diag"
  ],
  "type": "function"
 },
 "qsymm.symmetry_finder.twofold_axis": {
  "lineno": 1049,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product"
  ],
  "type": "function"
 },
 "qsymm.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.tests.test_hamiltonian_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.tests.test_hamiltonian_generator.test_bloch_generator": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.eye",
   "sympy.Matrix",
   "sympy.cos",
   "sympy.pi",
   "sympy.sin"
  ],
  "type": "function"
 },
 "qsymm.tests.test_hamiltonian_generator.test_check_symmetry": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.diag",
   "numpy.eye",
   "numpy.identity",
   "numpy.kron",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "qsymm.tests.test_hamiltonian_generator.test_continuum_variables": {
  "lineno": 113,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "qsymm.tests.test_hamiltonian_generator.test_pairing_generator": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.eye",
   "numpy.hstack",
   "numpy.kron",
   "numpy.random.rand",
   "scipy.linalg.block_diag"
  ],
  "type": "function"
 },
 "qsymm.tests.test_hamiltonian_generator.test_pretty_basis": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.isclose",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "qsymm.tests.test_hamiltonian_generator.test_subtract_family": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.hstack",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "qsymm.tests.test_model": {
  "lineno": null,
  "symbols_in_volume": [
   "sympy.symbols"
  ],
  "type": "module"
 },
 "qsymm.tests.test_model.test_BlochCoeff": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sympy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.tests.test_model.test_BlochModel": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.sqrt",
   "pytest.raises",
   "sympy.numbers.One"
  ],
  "type": "function"
 },
 "qsymm.tests.test_model.test_Model": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand",
   "numpy.sqrt",
   "pytest.raises"
  ],
  "type": "function"
 },
 "qsymm.tests.test_model.test_Model_subs": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.random.randint",
   "numpy.sqrt",
   "sympy.numbers.One",
   "sympy.simplify",
   "sympy.sqrt",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "qsymm.tests.test_model.test_to_bloch_coeff": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt",
   "pytest.raises",
   "sympy.simplify",
   "sympy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.tests.test_mutual": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.tests.test_mutual.test_mutual_continuum": {
  "lineno": 17,
  "symbols_in_volume": [
   "copy.deepcopy",
   "itertools.product",
   "numpy.arange",
   "numpy.array",
   "numpy.eye",
   "numpy.isclose",
   "numpy.kron",
   "numpy.pi",
   "scipy.linalg.block_diag"
  ],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.tests.test_symmetry_finder.productrep": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder.sumrep": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder.test_bloch": {
  "lineno": 509,
  "symbols_in_volume": [
   "sympy.ImmutableMatrix",
   "sympy.Rational",
   "sympy.eye",
   "sympy.sqrt"
  ],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder.test_bravais_symmetry": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder.test_cont_finder": {
  "lineno": 30,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product"
  ],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder.test_continuum": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder.test_disc_finder": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.tests.test_symmetry_finder.test_simult_diag": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "qsymm.tests.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "qsymm.tests.test_util.test_sparse_basis": {
  "lineno": 13,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.rand",
   "numpy.random.randint",
   "scipy.linalg.expm",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "qsymm.tests.test_util.test_spatial_types": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.random.rand",
   "pytest.raises",
   "sympy.Matrix",
   "sympy.eye"
  ],
  "type": "function"
 }
}