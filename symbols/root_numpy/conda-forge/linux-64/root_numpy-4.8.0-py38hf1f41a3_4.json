{
 "root_numpy": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.__version__",
   "re.escape",
   "sys.argv",
   "sys.argv.endswith",
   "warnings.filterwarnings",
   "warnings.warn"
  ],
  "type": "module"
 },
 "root_numpy._array": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy._array.array": {
  "lineno": 10,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TArrayC",
   "ROOT.TArrayD",
   "ROOT.TArrayF",
   "ROOT.TArrayI",
   "ROOT.TArrayL",
   "ROOT.TArrayS",
   "numpy.copy"
  ],
  "type": "function"
 },
 "root_numpy._evaluate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy._evaluate.evaluate": {
  "lineno": 13,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TF1",
   "ROOT.TF2",
   "ROOT.TF3",
   "ROOT.TFormula",
   "ROOT.TGraph",
   "ROOT.TH1",
   "ROOT.TH2",
   "ROOT.TH3",
   "ROOT.TSpline",
   "numpy.asarray",
   "numpy.double",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "root_numpy._graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy._graph.fill_graph": {
  "lineno": 10,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TGraph",
   "ROOT.TGraph2D",
   "numpy.asarray",
   "numpy.double"
  ],
  "type": "function"
 },
 "root_numpy._hist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy._hist.array2hist": {
  "lineno": 263,
  "symbols_in_volume": [
   "ROOT",
   "ROOT.AsCObject",
   "ROOT.TH1",
   "ROOT.TH2",
   "ROOT.TH3",
   "numpy.ascontiguousarray",
   "numpy.dtype",
   "numpy.float64",
   "numpy.ravel",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "root_numpy._hist.fill_hist": {
  "lineno": 22,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TH1",
   "ROOT.TH2",
   "ROOT.TH3",
   "numpy.asarray",
   "numpy.double"
  ],
  "type": "function"
 },
 "root_numpy._hist.fill_profile": {
  "lineno": 81,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TProfile",
   "ROOT.TProfile2D",
   "ROOT.TProfile3D",
   "numpy.asarray",
   "numpy.double"
  ],
  "type": "function"
 },
 "root_numpy._hist.hist2array": {
  "lineno": 132,
  "symbols_in_volume": [
   "ROOT",
   "ROOT.AsCObject",
   "ROOT.TH1",
   "ROOT.TH2",
   "ROOT.TH3",
   "ROOT.THnBase",
   "ROOT.THnSparse",
   "numpy.copy",
   "numpy.double",
   "numpy.dtype",
   "numpy.empty",
   "numpy.ndarray",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "root_numpy._matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy._matrix.matrix": {
  "lineno": 9,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TMatrixD",
   "ROOT.TMatrixDSym",
   "ROOT.TMatrixF",
   "ROOT.TMatrixFSym"
  ],
  "type": "function"
 },
 "root_numpy._sample": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy._sample.random_sample": {
  "lineno": 9,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TF1",
   "ROOT.TF2",
   "ROOT.TF3",
   "ROOT.TH1",
   "ROOT.TH2",
   "ROOT.TH3",
   "ROOT.gRandom.SetSeed"
  ],
  "type": "function"
 },
 "root_numpy._tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy._tree._glob": {
  "lineno": 23,
  "symbols_in_volume": [
   "glob.glob"
  ],
  "type": "function"
 },
 "root_numpy._tree.array2root": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy._tree.array2tree": {
  "lineno": 488,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.BindObject",
   "ROOT.TTree"
  ],
  "type": "function"
 },
 "root_numpy._tree.list_branches": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy._tree.list_directories": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy._tree.list_structures": {
  "lineno": 95,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "root_numpy._tree.list_trees": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy._tree.root2array": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy._tree.root2rec": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.recarray",
   "warnings.warn"
  ],
  "type": "function"
 },
 "root_numpy._tree.tree2array": {
  "lineno": 291,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TTree"
  ],
  "type": "function"
 },
 "root_numpy._tree.tree2rec": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.recarray",
   "warnings.warn"
  ],
  "type": "function"
 },
 "root_numpy._utils": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.vectorize"
  ],
  "type": "module"
 },
 "root_numpy._utils.blockwise_inner_join": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy._utils.dup_idx": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.logical_or.reduce",
   "numpy.newaxis",
   "numpy.nonzero",
   "numpy.unique"
  ],
  "type": "function"
 },
 "root_numpy._utils.rec2array": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.dstack"
  ],
  "type": "function"
 },
 "root_numpy._utils.stack": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "root_numpy._utils.stretch": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array_equal",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.hstack",
   "numpy.repeat",
   "numpy.sum",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "root_numpy._warnings": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "root_numpy._warnings.RootNumpyUnconvertibleWarning": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.extern.ordereddict": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.extern.ordereddict.OrderedDict": {
  "lineno": 25,
  "symbols_in_volume": [
   "UserDict.DictMixin",
   "UserDict.DictMixin.items",
   "UserDict.DictMixin.iteritems",
   "UserDict.DictMixin.iterkeys",
   "UserDict.DictMixin.itervalues",
   "UserDict.DictMixin.pop",
   "UserDict.DictMixin.setdefault",
   "UserDict.DictMixin.update",
   "UserDict.DictMixin.values"
  ],
  "type": "class"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__delitem__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__eq__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__iter__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__ne__": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__reduce__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__repr__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__reversed__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.__setitem__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.clear": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.copy": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.fromkeys": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.keys": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.ordereddict.OrderedDict.popitem": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six": {
  "lineno": null,
  "symbols_in_volume": [
   "StringIO",
   "StringIO.StringIO",
   "functools.partial",
   "functools.wraps",
   "io.BytesIO",
   "io.StringIO",
   "itertools.imap",
   "operator.attrgetter",
   "operator.getitem",
   "operator.itemgetter",
   "operator.methodcaller",
   "sys.maxsize",
   "sys.meta_path",
   "sys.meta_path.append",
   "sys.platform.startswith",
   "sys.version_info",
   "types.ClassType",
   "types.MethodType"
  ],
  "type": "module"
 },
 "root_numpy.extern.six.Iterator": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.Iterator.next": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.Module_six_moves_urllib": {
  "lineno": 453,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "root_numpy.extern.six.Module_six_moves_urllib.__dir__": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.Module_six_moves_urllib_error": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.Module_six_moves_urllib_parse": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.Module_six_moves_urllib_request": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.Module_six_moves_urllib_response": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.Module_six_moves_urllib_robotparser": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.MovedAttribute": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.MovedAttribute.__init__": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.MovedAttribute._resolve": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.MovedModule": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.MovedModule.__getattr__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.MovedModule.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.MovedModule._resolve": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.X": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.X.__len__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._LazyDescr": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six._LazyDescr.__get__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._LazyDescr.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._LazyModule": {
  "lineno": 122,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "root_numpy.extern.six._LazyModule.__dir__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._LazyModule.__init__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._MovedItems": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six._SixMetaPathImporter": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six._SixMetaPathImporter.__get_module": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._SixMetaPathImporter.__init__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._SixMetaPathImporter._add_module": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._SixMetaPathImporter._get_module": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._SixMetaPathImporter.find_module": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._SixMetaPathImporter.get_code": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._SixMetaPathImporter.is_package": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._SixMetaPathImporter.load_module": {
  "lineno": 191,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "root_numpy.extern.six._add_doc": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six._import_module": {
  "lineno": 78,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "root_numpy.extern.six.add_metaclass": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.add_metaclass.wrapper": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.add_move": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.advance_iterator": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.assertCountEqual": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.assertRaisesRegex": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.assertRegex": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.b": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.byte2int": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.callable": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.create_bound_method": {
  "lineno": 529,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "root_numpy.extern.six.exec_": {
  "lineno": 662,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "root_numpy.extern.six.get_unbound_function": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.indexbytes": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.int2byte": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.iteritems": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.iterkeys": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.iterlists": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.itervalues": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.print_": {
  "lineno": 751,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "root_numpy.extern.six.print_.write": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.python_2_unicode_compatible": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.raise_from": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.remove_move": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.reraise": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.u": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.with_metaclass": {
  "lineno": 771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.with_metaclass.metaclass": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.extern.six.with_metaclass.metaclass.__new__": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.extern.six.wraps": {
  "lineno": 761,
  "symbols_in_volume": [
   "functools.WRAPPER_ASSIGNMENTS",
   "functools.WRAPPER_UPDATES"
  ],
  "type": "function"
 },
 "root_numpy.extern.six.wraps.wrapper": {
  "lineno": 763,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "root_numpy.info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.setup_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.setup_utils.ROOTVersion": {
  "lineno": 8,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "root_numpy.setup_utils.ROOTVersion.__eq__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__ge__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__gt__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__le__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__lt__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__ne__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__new__": {
  "lineno": 11,
  "symbols_in_volume": [
   "numbers.Integral",
   "re.match"
  ],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__repr__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.ROOTVersion.__str__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.setup_utils.get_config": {
  "lineno": 115,
  "symbols_in_volume": [
   "json.load",
   "os.path.isfile",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "root_numpy.setup_utils.root_flags": {
  "lineno": 76,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "root_numpy.setup_utils.root_has_feature": {
  "lineno": 89,
  "symbols_in_volume": [
   "os.getenv",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "root_numpy.setup_utils.root_version_active": {
  "lineno": 110,
  "symbols_in_volume": [
   "ROOT.gROOT.GetVersionInt"
  ],
  "type": "function"
 },
 "root_numpy.setup_utils.root_version_installed": {
  "lineno": 101,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "root_numpy.testdata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.testdata.get_file": {
  "lineno": 15,
  "symbols_in_volume": [
   "ROOT.TFile",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "root_numpy.testdata.get_filepath": {
  "lineno": 11,
  "symbols_in_volume": [
   "os.path.join",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "root_numpy.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "ROOT.gErrorIgnoreLevel",
   "ROOT.kFatal",
   "numpy.random.RandomState",
   "root_numpy.RootNumpyUnconvertibleWarning",
   "threading.RLock",
   "warnings.filterwarnings"
  ],
  "type": "module"
 },
 "root_numpy.tests.load": {
  "lineno": 20,
  "symbols_in_volume": [
   "root_numpy.testdata.get_filepath"
  ],
  "type": "function"
 },
 "root_numpy.tests.silence": {
  "lineno": 78,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "root_numpy.tests.silence_serr": {
  "lineno": 58,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.O_WRONLY",
   "os.close",
   "os.devnull",
   "os.dup",
   "os.dup2",
   "os.fdopen",
   "os.open",
   "sys.__stderr__",
   "sys.__stderr__.fileno",
   "sys.__stderr__.flush"
  ],
  "type": "function"
 },
 "root_numpy.tests.silence_sout": {
  "lineno": 38,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.O_WRONLY",
   "os.close",
   "os.devnull",
   "os.dup",
   "os.dup2",
   "os.fdopen",
   "os.open",
   "sys.__stdout__",
   "sys.__stdout__.fileno",
   "sys.__stdout__.flush"
  ],
  "type": "function"
 },
 "root_numpy.tests.temp": {
  "lineno": 26,
  "symbols_in_volume": [
   "ROOT.TFile.Open",
   "contextlib.contextmanager",
   "os.close",
   "os.remove",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_array": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tests.test_array.check_array": {
  "lineno": 6,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_array.check_matrix": {
  "lineno": 25,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.matrix"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_array.check_matrix_sym": {
  "lineno": 32,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.matrix"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_array.test_array": {
  "lineno": 14,
  "symbols_in_volume": [
   "ROOT",
   "ROOT.TArrayC",
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "root_numpy.array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_array.test_matrix": {
  "lineno": 39,
  "symbols_in_volume": [
   "ROOT",
   "nose.tools.assert_raises",
   "root_numpy.matrix"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_evaluate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tests.test_evaluate.test_evaluate_func": {
  "lineno": 8,
  "symbols_in_volume": [
   "ROOT.TF1",
   "ROOT.TF2",
   "ROOT.TF3",
   "ROOT.TFormula",
   "nose.tools.assert_raises",
   "numpy.testing.assert_array_equal",
   "root_numpy.evaluate"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_evaluate.test_evaluate_graph": {
  "lineno": 76,
  "symbols_in_volume": [
   "ROOT.TGraph",
   "ROOT.TSpline3",
   "nose.tools.assert_raises",
   "numpy.testing.assert_array_equal",
   "root_numpy.evaluate"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_evaluate.test_evaluate_hist": {
  "lineno": 50,
  "symbols_in_volume": [
   "ROOT.TH1D",
   "ROOT.TH2D",
   "ROOT.TH3D",
   "nose.tools.assert_raises",
   "numpy.testing.assert_array_equal",
   "root_numpy.evaluate"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tests.test_hist.check_array2hist": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "root_numpy.array2hist",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.check_hist2array": {
  "lineno": 36,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_true",
   "numpy.sum",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.check_hist2array_THn": {
  "lineno": 51,
  "symbols_in_volume": [
   "ROOT.THn.CreateHn",
   "nose.tools.assert_true",
   "numpy.any",
   "numpy.testing.assert_array_equal",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.check_hist2array_THnSparse": {
  "lineno": 61,
  "symbols_in_volume": [
   "ROOT.THnSparse.CreateSparse",
   "nose.tools.assert_true",
   "numpy.any",
   "numpy.testing.assert_array_equal",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.check_hist2array_edges": {
  "lineno": 113,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.arange",
   "numpy.double",
   "numpy.testing.assert_array_equal",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.make_histogram": {
  "lineno": 10,
  "symbols_in_volume": [
   "ROOT",
   "ROOT.TF1",
   "ROOT.TF2",
   "ROOT.TF3"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_array2hist": {
  "lineno": 180,
  "symbols_in_volume": [
   "ROOT.TH1D",
   "ROOT.TH2D",
   "nose.tools.assert_raises",
   "numpy.arange",
   "numpy.array",
   "root_numpy.array2hist"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_fill_graph": {
  "lineno": 299,
  "symbols_in_volume": [
   "ROOT.TGraph",
   "ROOT.TGraph2D",
   "nose.tools.assert_raises",
   "root_numpy.fill_graph"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_fill_hist": {
  "lineno": 210,
  "symbols_in_volume": [
   "ROOT.TH1D",
   "ROOT.TH2D",
   "ROOT.TH3D",
   "nose.tools.assert_almost_equal",
   "nose.tools.assert_raises",
   "numpy.empty",
   "numpy.ones",
   "root_numpy.fill_hist"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_fill_profile": {
  "lineno": 255,
  "symbols_in_volume": [
   "ROOT.TH1D",
   "ROOT.TProfile",
   "ROOT.TProfile2D",
   "ROOT.TProfile3D",
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "nose.tools.assert_true",
   "numpy.empty",
   "numpy.ones",
   "root_numpy.fill_profile"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_hist2array": {
  "lineno": 71,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "nose.tools.assert_true",
   "numpy.sum",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_hist2array_THn": {
  "lineno": 97,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_hist2array_THnSparse": {
  "lineno": 105,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "root_numpy.hist2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_hist.test_hist2array_edges": {
  "lineno": 120,
  "symbols_in_volume": [
   "ROOT.THn.CreateHn",
   "ROOT.THnSparse.CreateSparse"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_sample": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tests.test_sample.check_random_sample": {
  "lineno": 7,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_true",
   "numpy.testing.assert_array_equal",
   "root_numpy.random_sample"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_sample.test_random_sample": {
  "lineno": 22,
  "symbols_in_volume": [
   "ROOT.TF1",
   "ROOT.TF2",
   "ROOT.TF3",
   "ROOT.TH1D",
   "ROOT.TH2D",
   "ROOT.TH3D"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_sample.test_random_sample_bad_input": {
  "lineno": 39,
  "symbols_in_volume": [
   "ROOT.TF1",
   "nose.tools.assert_raises",
   "root_numpy.random_sample"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tests.test_tree.check_single": {
  "lineno": 21,
  "symbols_in_volume": [
   "nose.tools.assert_almost_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.check_truncate_impute": {
  "lineno": 532,
  "symbols_in_volume": [
   "ROOT.TFile.Open",
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "nose.tools.assert_true",
   "numpy.testing.assert_array_equal",
   "root_numpy.list_trees",
   "root_numpy.root2array",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_array2root": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.hstack",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "root_numpy.array2root",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_array2tree": {
  "lineno": 586,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.hstack",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "root_numpy.array2tree",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_array2tree_charstar": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "root_numpy.array2root",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_array2tree_fixed_length_arrays": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "root_numpy.array2root",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_branch_DNE": {
  "lineno": 375,
  "symbols_in_volume": [
   "ROOT.TChain",
   "nose.tools.raises",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_chain": {
  "lineno": 89,
  "symbols_in_volume": [
   "ROOT.TChain",
   "root_numpy.root2array",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_duplicate_branch_name": {
  "lineno": 153,
  "symbols_in_volume": [
   "ROOT.TTree",
   "array.array",
   "nose.tools.assert_equal",
   "nose.tools.assert_true",
   "root_numpy.tree2array",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_empty_branches": {
  "lineno": 135,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_empty_tree": {
  "lineno": 145,
  "symbols_in_volume": [
   "ROOT.TTree",
   "array.array",
   "nose.tools.assert_equal",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_expression": {
  "lineno": 290,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.arange",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_fixed_length_array_expression": {
  "lineno": 331,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_true",
   "numpy.all",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_fixed_length_arrays": {
  "lineno": 198,
  "symbols_in_volume": [
   "nose.tools.assert_almost_equal",
   "nose.tools.assert_equal",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_list_branches": {
  "lineno": 55,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.list_branches"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_list_directories": {
  "lineno": 60,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.list_directories"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_list_structures": {
  "lineno": 65,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.extern.ordereddict.OrderedDict",
   "root_numpy.list_structures"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_list_trees": {
  "lineno": 33,
  "symbols_in_volume": [
   "ROOT.TTree",
   "nose.tools.assert_equal",
   "root_numpy.list_trees"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_no_supported_branches": {
  "lineno": 183,
  "symbols_in_volume": [
   "ROOT.TLorentzVector",
   "ROOT.TTree",
   "nose.tools.assert_raises",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_ntuple": {
  "lineno": 99,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_object_expression": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.testing.assert_array_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_object_selection": {
  "lineno": 339,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "nose.tools.assert_true",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_preserve_branch_order": {
  "lineno": 190,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_root2array_multiple_trees_and_name_not_specified": {
  "lineno": 129,
  "symbols_in_volume": [
   "nose.tools.raises",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_root2array_no_filename": {
  "lineno": 112,
  "symbols_in_volume": [
   "nose.tools.raises",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_root2array_no_trees_in_file": {
  "lineno": 117,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_root2array_single_filename_DNE": {
  "lineno": 123,
  "symbols_in_volume": [
   "nose.tools.raises",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_root2array_single_pattern_DNE": {
  "lineno": 106,
  "symbols_in_volume": [
   "nose.tools.raises",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_selection": {
  "lineno": 271,
  "symbols_in_volume": [
   "ROOT.TChain",
   "nose.tools.assert_equal",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_selection_and_expression": {
  "lineno": 300,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_single": {
  "lineno": 74,
  "symbols_in_volume": [
   "root_numpy.root2array",
   "root_numpy.testdata.get_file",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_single_branch": {
  "lineno": 262,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.dtype",
   "root_numpy.root2array",
   "root_numpy.testdata.get_file",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_slice": {
  "lineno": 495,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.recarray",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_specific_branch": {
  "lineno": 387,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_string": {
  "lineno": 482,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_struct": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_testdata": {
  "lineno": 17,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "root_numpy.testdata.get_file"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_tree2array_wrong_type": {
  "lineno": 382,
  "symbols_in_volume": [
   "nose.tools.raises",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_tree_without_branches": {
  "lineno": 140,
  "symbols_in_volume": [
   "ROOT.TTree",
   "nose.tools.assert_raises",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_truncate_impute": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_unsupported_branch_in_branches": {
  "lineno": 173,
  "symbols_in_volume": [
   "ROOT.TLorentzVector",
   "ROOT.TTree",
   "nose.tools.assert_raises",
   "numpy.array",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_variable_length_array_expression": {
  "lineno": 324,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_variable_length_arrays": {
  "lineno": 222,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.recarray",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_vector": {
  "lineno": 392,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object",
   "numpy.recarray",
   "root_numpy.root2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_vector.assert_equal_array": {
  "lineno": 454,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_tree.test_weights": {
  "lineno": 509,
  "symbols_in_volume": [
   "ROOT.TFile",
   "numpy.concatenate",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "root_numpy.root2array",
   "root_numpy.tree2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tests.test_utils.test_blockwise_inner_join": {
  "lineno": 176,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.array",
   "numpy.float",
   "numpy.int",
   "numpy.testing.assert_array_equal",
   "root_numpy.blockwise_inner_join"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_utils.test_dup_idx": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "root_numpy.dup_idx"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_utils.test_rec2array": {
  "lineno": 9,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "root_numpy.rec2array"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_utils.test_stack": {
  "lineno": 95,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "numpy.lib.recfunctions.drop_fields",
   "root_numpy.root2array",
   "root_numpy.stack"
  ],
  "type": "function"
 },
 "root_numpy.tests.test_utils.test_stretch": {
  "lineno": 114,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "numpy.array",
   "numpy.double",
   "numpy.empty",
   "numpy.float",
   "numpy.int",
   "numpy.repeat",
   "numpy.testing.assert_array_equal",
   "numpy.vectorize",
   "root_numpy.stretch"
  ],
  "type": "function"
 },
 "root_numpy.tmva": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "root_numpy.tmva._data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tmva._data.add_classification_events": {
  "lineno": 16,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TMVA.DataLoader",
   "ROOT.TMVA.Factory",
   "numpy.asarray",
   "numpy.ascontiguousarray",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.unique",
   "numpy.where"
  ],
  "type": "function"
 },
 "root_numpy.tmva._data.add_regression_events": {
  "lineno": 103,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TMVA.DataLoader",
   "ROOT.TMVA.Factory",
   "numpy.asarray",
   "numpy.ascontiguousarray",
   "numpy.float64",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "root_numpy.tmva._evaluate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "root_numpy.tmva._evaluate.evaluate_method": {
  "lineno": 55,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TMVA.MethodBase",
   "numpy.ascontiguousarray",
   "numpy.float64",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "root_numpy.tmva._evaluate.evaluate_reader": {
  "lineno": 13,
  "symbols_in_volume": [
   "ROOT.AsCObject",
   "ROOT.TMVA.Reader",
   "numpy.ascontiguousarray",
   "numpy.float64",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "ROOT.gErrorIgnoreLevel",
   "ROOT.kFatal",
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "root_numpy.tmva.tests.TMVA_Estimator": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "root_numpy.tmva.tests.TMVA_Estimator.__del__": {
  "lineno": 60,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.TMVA_Estimator.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "ROOT.TFile",
   "ROOT.TMVA.Factory",
   "os.path.join",
   "root_numpy.tmva._data.NEW_TMVA_API",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.TMVA_Estimator.fit": {
  "lineno": 64,
  "symbols_in_volume": [
   "ROOT.TCut",
   "ROOT.TMVA.DataLoader",
   "ROOT.TMVA.gConfig",
   "nose.tools.assert_raises",
   "numpy.newaxis",
   "root_numpy.tmva._data.NEW_TMVA_API",
   "root_numpy.tmva.add_classification_events",
   "root_numpy.tmva.add_regression_events"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.TMVA_Estimator.predict": {
  "lineno": 131,
  "symbols_in_volume": [
   "ROOT.TMVA.Reader",
   "ROOT.gROOT.GetVersionInt",
   "array.array",
   "nose.tools.assert_raises",
   "numpy.testing.assert_array_equal",
   "os.path.join",
   "root_numpy.tmva.evaluate_method",
   "root_numpy.tmva.evaluate_reader"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.make_classification": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.ones",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.maybe_skip": {
  "lineno": 33,
  "symbols_in_volume": [
   "nose.plugins.skip.SkipTest"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.test_tmva_methodcuts": {
  "lineno": 180,
  "symbols_in_volume": [
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.test_tmva_multiclass": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.test_tmva_regression": {
  "lineno": 257,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_true",
   "numpy.any",
   "numpy.c_",
   "numpy.linspace",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.ravel",
   "numpy.sin",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "root_numpy.tmva.tests.test_tmva_twoclass": {
  "lineno": 193,
  "symbols_in_volume": [
   "nose.tools.assert_true",
   "numpy.abs",
   "numpy.any",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 }
}