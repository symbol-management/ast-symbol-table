{
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_quickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_quickle.Fruit": {
  "lineno": 728,
  "symbols_in_volume": [
   "enum.IntEnum"
  ],
  "type": "class"
 },
 "tests.test_quickle.MyStruct": {
  "lineno": 575,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_quickle.MyStruct2": {
  "lineno": 580,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_quickle.MyStruct3": {
  "lineno": 587,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_quickle.PyObjects": {
  "lineno": 734,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "tests.test_quickle.check": {
  "lineno": 26,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.opcode_in_pickle": {
  "lineno": 239,
  "symbols_in_volume": [
   "pickle",
   "pickletools.genops"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_bad_stack_or_mark": {
  "lineno": 463,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.DecodingError",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_dumps_and_loads_unpickleable_types": {
  "lineno": 433,
  "symbols_in_volume": [
   "itertools.count",
   "pickle.dumps",
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.DecodingError",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_getsizeof": {
  "lineno": 455,
  "symbols_in_volume": [
   "quickle.Decoder",
   "quickle.Encoder",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_loads_bad_pickle": {
  "lineno": 450,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.DecodingError",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_loads_buffers_errors": {
  "lineno": 422,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.DecodingError",
   "quickle.PickleBuffer",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_loads_truncated_input": {
  "lineno": 444,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.DecodingError",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_module_version": {
  "lineno": 22,
  "symbols_in_volume": [
   "distutils.version.StrictVersion",
   "quickle.__version__"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_objects_with_only_one_refcount_arent_memoized": {
  "lineno": 822,
  "symbols_in_volume": [
   "pickle.MEMOIZE",
   "quickle.dumps"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_objects_with_only_one_refcount_arent_memoized.Test": {
  "lineno": 823,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_quickle.test_objects_with_only_one_refcount_arent_memoized.rstr": {
  "lineno": 827,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_a_little_bit_of_everything": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_bool": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_bytearray": {
  "lineno": 94,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_bytes": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_complex": {
  "lineno": 815,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_dict": {
  "lineno": 174,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.parametrize",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_enum": {
  "lineno": 747,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_enum_code_out_of_range": {
  "lineno": 766,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_enum_code_out_of_range.Fruit": {
  "lineno": 767,
  "symbols_in_volume": [
   "enum.IntEnum"
  ],
  "type": "class"
 },
 "tests.test_quickle.test_pickle_enum_codes": {
  "lineno": 755,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_errors_enum_missing_from_registry": {
  "lineno": 778,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_errors_struct_missing_from_registry": {
  "lineno": 663,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_float": {
  "lineno": 64,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_frozenset": {
  "lineno": 119,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_highly_nested_list": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_int": {
  "lineno": 54,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_intenum": {
  "lineno": 740,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_large_memo": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_list": {
  "lineno": 143,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_memoize_class_setting": {
  "lineno": 246,
  "symbols_in_volume": [
   "pickle.MEMOIZE",
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.Encoder"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_memoize_false_recursion_error": {
  "lineno": 296,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_memoize_function_settings": {
  "lineno": 279,
  "symbols_in_volume": [
   "pickle.MEMOIZE",
   "pytest.mark.parametrize",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_none": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_picklebuffer_no_callback": {
  "lineno": 303,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.PickleBuffer"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_recursive_dict": {
  "lineno": 182,
  "symbols_in_volume": [
   "pickle.loads",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_recursive_list": {
  "lineno": 148,
  "symbols_in_volume": [
   "pickle.loads",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_recursive_tuple": {
  "lineno": 129,
  "symbols_in_volume": [
   "pickle.loads",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_set": {
  "lineno": 114,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_struct": {
  "lineno": 607,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.Decoder",
   "quickle.Encoder",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_struct_code_out_of_range": {
  "lineno": 643,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_struct_codes": {
  "lineno": 630,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_struct_recursive": {
  "lineno": 653,
  "symbols_in_volume": [
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_tuple": {
  "lineno": 124,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_unicode": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickle_unicode_edgecases": {
  "lineno": 106,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_picklebuffer_is_shared": {
  "lineno": 18,
  "symbols_in_volume": [
   "pickle.PickleBuffer",
   "quickle.PickleBuffer"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickler_collect_buffers_false": {
  "lineno": 351,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.Encoder",
   "quickle.PickleBuffer",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickler_collect_buffers_true": {
  "lineno": 310,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.Encoder",
   "quickle.PickleBuffer",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_pickler_unpickler_registry_kwarg_errors": {
  "lineno": 593,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.Decoder",
   "quickle.Encoder"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_quickle_pickle_collect_buffers_false_compatibility": {
  "lineno": 406,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "quickle.PickleBuffer",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_quickle_pickle_collect_buffers_true_compatibility": {
  "lineno": 389,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "quickle.PickleBuffer",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_struct_registry_mismatch_extra_args_are_ignored": {
  "lineno": 718,
  "symbols_in_volume": [
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_struct_registry_mismatch_fewer_args_default_parameters_respected": {
  "lineno": 705,
  "symbols_in_volume": [
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_struct_registry_mismatch_fewer_args_no_defaults_errors": {
  "lineno": 698,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_truncated_data": {
  "lineno": 513,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.DecodingError",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_unpickle_errors_buildstruct_on_non_struct_object": {
  "lineno": 692,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.DecodingError",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_unpickle_errors_enum_missing_attribute": {
  "lineno": 806,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_unpickle_errors_enum_missing_attribute.PyObjects2": {
  "lineno": 807,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "tests.test_quickle.test_unpickle_errors_enum_typecode_missing_from_registry": {
  "lineno": 785,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.dumps"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_unpickle_errors_intenum_missing_value": {
  "lineno": 797,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_unpickle_errors_intenum_missing_value.Fruit2": {
  "lineno": 798,
  "symbols_in_volume": [
   "enum.IntEnum"
  ],
  "type": "class"
 },
 "tests.test_quickle.test_unpickle_errors_obj_in_registry_is_not_enum_type": {
  "lineno": 791,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_unpickle_errors_obj_in_registry_is_not_struct_type": {
  "lineno": 682,
  "symbols_in_volume": [
   "pytest.raises",
   "quickle.dumps",
   "quickle.loads"
  ],
  "type": "function"
 },
 "tests.test_quickle.test_unpickle_errors_obj_in_registry_is_not_struct_type.Foo": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_quickle.test_unpickle_errors_struct_typecode_missing_from_registry": {
  "lineno": 672,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "quickle.dumps"
  ],
  "type": "function"
 },
 "tests.test_struct": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_struct.Point": {
  "lineno": 446,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.as_tuple": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_struct_class_attributes": {
  "lineno": 15,
  "symbols_in_volume": [
   "quickle.Struct.__module__",
   "quickle.Struct.__slots__",
   "quickle.Struct.__struct_defaults__",
   "quickle.Struct.__struct_fields__"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_comparison": {
  "lineno": 383,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_comparison.Test": {
  "lineno": 392,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_comparison.Test2": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_struct.test_struct_comparison.assert_eq": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_struct_comparison.assert_neq": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_struct_copy": {
  "lineno": 369,
  "symbols_in_volume": [
   "copy.copy",
   "quickle.Struct"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_copy.Test": {
  "lineno": 373,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_empty_mutable_defaults_fast_copy": {
  "lineno": 436,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_empty_mutable_defaults_fast_copy.Test": {
  "lineno": 438,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_immutable_defaults_use_instance": {
  "lineno": 412,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "quickle.PickleBuffer"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_immutable_defaults_use_instance.Test": {
  "lineno": 429,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_init": {
  "lineno": 323,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_init.Test": {
  "lineno": 324,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_instance_attributes": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_struct_instance_attributes.Test": {
  "lineno": 23,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_mutable_defaults_deep_copy": {
  "lineno": 451,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_mutable_defaults_deep_copy.Test": {
  "lineno": 462,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_reference_counting": {
  "lineno": 473,
  "symbols_in_volume": [
   "quickle.dumps",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_reference_counting.Test": {
  "lineno": 476,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_repr": {
  "lineno": 354,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_repr.Test": {
  "lineno": 362,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_init_new_slots": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_subclass_forbids_init_new_slots.Test1": {
  "lineno": 42,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_init_new_slots.Test1.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_struct_subclass_forbids_init_new_slots.Test2": {
  "lineno": 50,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_init_new_slots.Test2.__new__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_struct_subclass_forbids_init_new_slots.Test3": {
  "lineno": 58,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_mixed_layouts": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_subclass_forbids_mixed_layouts.A": {
  "lineno": 75,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_mixed_layouts.B": {
  "lineno": 79,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_mixed_layouts.C": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_non_struct_bases": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_struct.test_struct_subclass_forbids_non_struct_bases.Mixin": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_struct.test_struct_subclass_forbids_non_struct_bases.Mixin.method": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_struct_subclass_forbids_non_struct_bases.Test": {
  "lineno": 70,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_keyword_only": {
  "lineno": 157,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_keyword_only.Test": {
  "lineno": 158,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_no_args": {
  "lineno": 90,
  "symbols_in_volume": [
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_no_args.Test": {
  "lineno": 91,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_positional_and_keyword": {
  "lineno": 124,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_positional_and_keyword.Test": {
  "lineno": 125,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_positional_only": {
  "lineno": 102,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_positional_only.Test": {
  "lineno": 103,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_extends": {
  "lineno": 207,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_subclass_extends.Test": {
  "lineno": 208,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_extends.Test2": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_mixin_struct_base": {
  "lineno": 288,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_subclass_mixin_struct_base.A": {
  "lineno": 289,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_mixin_struct_base.B": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_mixin_struct_base.Mixin": {
  "lineno": 293,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_mixin_struct_base.Mixin.as_dict": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_subclass_no_change": {
  "lineno": 182,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_subclass_no_change.Test": {
  "lineno": 183,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_no_change.Test2": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_overrides": {
  "lineno": 253,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature"
  ],
  "type": "function"
 },
 "tests.test_struct.test_structmeta_subclass_overrides.Test": {
  "lineno": 254,
  "symbols_in_volume": [
   "quickle.Struct"
  ],
  "type": "class"
 },
 "tests.test_struct.test_structmeta_subclass_overrides.Test2": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "class"
 }
}