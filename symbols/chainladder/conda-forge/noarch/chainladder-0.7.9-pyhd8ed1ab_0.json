{
 "*": {
  "data": {
   "imports": [
    "chainladder.core",
    "chainladder.development",
    "chainladder.methods",
    "chainladder.tails",
    "chainladder.utils",
    "chainladder.workflow"
   ]
  },
  "type": "star-import"
 },
 "chainladder": {
  "data": {},
  "type": "module"
 },
 "chainladder.ARRAY_BACKEND": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "chainladder.ARRAY_PRIORITY": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "chainladder.AUTO_SPARSE": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "chainladder.ULT_VAL": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "chainladder.__version__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "chainladder.array_backend": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "chainladder.ARRAY_BACKEND"
   ]
  },
  "type": "function"
 },
 "chainladder.auto_sparse": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "chainladder.AUTO_SPARSE"
   ]
  },
  "type": "function"
 },
 "chainladder.core": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.DevelopmentCorrelation": {
  "data": {
   "shadows": "chainladder.core.correlation.DevelopmentCorrelation"
  },
  "type": "import"
 },
 "chainladder.core.Triangle": {
  "data": {
   "shadows": "chainladder.core.triangle.Triangle"
  },
  "type": "import"
 },
 "chainladder.core.ValuationCorrelation": {
  "data": {
   "shadows": "chainladder.core.correlation.ValuationCorrelation"
  },
  "type": "import"
 },
 "chainladder.core.base": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.base.ARRAY_BACKEND": {
  "data": {
   "shadows": "chainladder.ARRAY_BACKEND"
  },
  "type": "import"
 },
 "chainladder.core.base.AUTO_SPARSE": {
  "data": {
   "shadows": "chainladder.AUTO_SPARSE"
  },
  "type": "import"
 },
 "chainladder.core.base.Common": {
  "data": {
   "shadows": "chainladder.core.common.Common"
  },
  "type": "import"
 },
 "chainladder.core.base.TriangleBase": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "chainladder.core.common.Common",
    "chainladder.core.display.TriangleDisplay",
    "chainladder.core.dunders.TriangleDunders",
    "chainladder.core.io.TriangleIO",
    "chainladder.core.pandas.TrianglePandas",
    "chainladder.core.slice.TriangleSlicer"
   ]
  },
  "type": "class"
 },
 "chainladder.core.base.TriangleBase.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "chainladder.ARRAY_BACKEND",
    "chainladder.AUTO_SPARSE",
    "chainladder.ULT_VAL",
    "chainladder.ULT_VAL.copy",
    "chainladder.core.base.TriangleBase",
    "chainladder.core.base.warnings",
    "chainladder.utils.sparse.sp",
    "chainladder.utils.utility_functions.concat",
    "chainladder.utils.utility_functions.num_to_nan",
    "dict",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.sort",
    "numpy.unique",
    "pandas.DatetimeIndex",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Timestamp",
    "pandas.tseries.offsets.MonthEnd",
    "range",
    "set_idx",
    "str",
    "str_to_list",
    "sum",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._auto_sparse": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "chainladder.AUTO_SPARSE",
    "list",
    "numpy.isnan",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._cartesian_product": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.ix_",
    "numpy.result_type",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._development_lag": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "chainladder.core.base.TriangleBase",
    "dict",
    "numpy.all",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._get_date_axes": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "complete_date_range",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._get_date_axes.complete_date_range": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "chainladder.core.base.TriangleBase",
    "max",
    "pandas.DataFrame",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._get_grain": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "len",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._len_check": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase._to_datetime": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "chainladder.core.base.TriangleBase",
    "dict",
    "format",
    "hasattr",
    "len",
    "pandas.Period",
    "pandas.to_datetime",
    "staticmethod",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase.copy": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "chainladder.core.base.TriangleBase",
    "vars"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase.get_array_module": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.utils.cupy.cp",
    "chainladder.utils.sparse.sp",
    "numpy"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase.nan_triangle": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "min",
    "numpy.array",
    "numpy.where",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase.shape": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleBase.valuation": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "chainladder.ULT_VAL",
    "len",
    "numpy.concatenate",
    "numpy.datetime64",
    "numpy.minimum",
    "numpy.repeat",
    "numpy.timedelta64",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "property",
    "slice"
   ]
  },
  "type": "function"
 },
 "chainladder.core.base.TriangleDisplay": {
  "data": {
   "shadows": "chainladder.core.display.TriangleDisplay"
  },
  "type": "import"
 },
 "chainladder.core.base.TriangleDunders": {
  "data": {
   "shadows": "chainladder.core.dunders.TriangleDunders"
  },
  "type": "import"
 },
 "chainladder.core.base.TriangleIO": {
  "data": {
   "shadows": "chainladder.core.io.TriangleIO"
  },
  "type": "import"
 },
 "chainladder.core.base.TrianglePandas": {
  "data": {
   "shadows": "chainladder.core.pandas.TrianglePandas"
  },
  "type": "import"
 },
 "chainladder.core.base.TriangleSlicer": {
  "data": {
   "shadows": "chainladder.core.slice.TriangleSlicer"
  },
  "type": "import"
 },
 "chainladder.core.base.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.core.base.concat": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.concat"
  },
  "type": "import"
 },
 "chainladder.core.base.cp": {
  "data": {
   "shadows": "chainladder.utils.cupy.cp"
  },
  "type": "import"
 },
 "chainladder.core.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.base.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.core.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.base.sp": {
  "data": {
   "shadows": "chainladder.utils.sparse.sp"
  },
  "type": "import"
 },
 "chainladder.core.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.core.common": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.common.Common": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "chainladder.core.common.Common.cdf_": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.common.Common.full_expectation_": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "AttributeError",
    "chainladder.core.common._get_full_expectation",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.common.Common.full_triangle_": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AttributeError",
    "chainladder.core.common._get_full_triangle",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.common.Common.has_ldf": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.common.Common.ibnr_": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.common.Common.set_backend": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "chainladder.core.common.Common",
    "chainladder.utils.cupy.cp.array",
    "chainladder.utils.cupy.cp.asnumpy",
    "chainladder.utils.sparse.sp.array",
    "hasattr",
    "isinstance",
    "vars"
   ]
  },
  "type": "function"
 },
 "chainladder.core.common._get_full_expectation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "list",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "chainladder.core.common._get_full_triangle": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "chainladder.core.common.cp": {
  "data": {
   "shadows": "chainladder.utils.cupy.cp"
  },
  "type": "import"
 },
 "chainladder.core.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.common.sp": {
  "data": {
   "shadows": "chainladder.utils.sparse.sp"
  },
  "type": "import"
 },
 "chainladder.core.correlation": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.correlation.DevelopmentCorrelation": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "chainladder.core.correlation.DevelopmentCorrelation.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "range",
    "scipy.stats.norm.ppf",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "chainladder.core.correlation.ValuationCorrelation": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "chainladder.core.correlation.ValuationCorrelation.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "pZlower",
    "pandas.DataFrame",
    "range",
    "scipy.special.comb",
    "scipy.stats.norm.ppf",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "chainladder.core.correlation.ValuationCorrelation.__init__.pZlower": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "min",
    "scipy.stats.binom.cdf"
   ]
  },
  "type": "function"
 },
 "chainladder.core.correlation.binom": {
  "data": {
   "shadows": "scipy.stats.binom"
  },
  "type": "import"
 },
 "chainladder.core.correlation.comb": {
  "data": {
   "shadows": "scipy.special.comb"
  },
  "type": "import"
 },
 "chainladder.core.correlation.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "chainladder.core.correlation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.correlation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.correlation.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "chainladder.core.display": {
  "data": {
   "symbols_in_volume": [
    "IPython.core.display.HTML"
   ]
  },
  "type": "module"
 },
 "chainladder.core.display.HTML": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "chainladder.core.display.TriangleDisplay": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "chainladder.core.display.TriangleDisplay.__repr__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "chainladder.core.display.TriangleDisplay._get_format_str": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abs",
    "numpy.all",
    "numpy.isnan",
    "numpy.nanmean"
   ]
  },
  "type": "function"
 },
 "chainladder.core.display.TriangleDisplay._repr_format": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "chainladder.core.display.TriangleDisplay._repr_html_": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.options.display.max_columns",
    "pandas.options.display.max_rows",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.display.TriangleDisplay._summary_frame": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "chainladder.core.display.TriangleDisplay.heatmap": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "IPython.core.display.HTML",
    "ImportError",
    "ValueError",
    "chainladder.core.display.re",
    "chainladder.core.display.warnings",
    "int",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.display.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.display.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.display.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "chainladder.core.display.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.core.dunders": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.dunders.ARRAY_PRIORITY": {
  "data": {
   "shadows": "chainladder.ARRAY_PRIORITY"
  },
  "type": "import"
 },
 "chainladder.core.dunders.TriangleDunders": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "chainladder.core.dunders.TriangleDunders.__abs__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__add__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__contains__": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__eq__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "chainladder.ARRAY_PRIORITY",
    "chainladder.ARRAY_PRIORITY.index",
    "chainladder.core.dunders.TriangleDunders",
    "isinstance",
    "min"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__le__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__len__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__lt__": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__mul__": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__neg__": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__pos__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__pow__": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__radd__": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__rmul__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__round__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__rsub__": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__rtruediv__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.num_to_nan"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__sub__": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders.__truediv__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders._arithmetic_cleanup": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.num_to_nan"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders._compatibility_check": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.utils.utility_functions.set_common_backend"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders._prep_columns": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders._prep_index": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "apply_axis",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders._prep_index.apply_axis": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "chainladder.core.dunders.TriangleDunders._validate_arithmetic": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "chainladder.core.dunders.TriangleDunders",
    "int",
    "isinstance",
    "len",
    "max",
    "numpy.all",
    "numpy.array",
    "numpy.where",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.concat",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.dunders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.dunders.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.core.dunders.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.dunders.set_common_backend": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.set_common_backend"
  },
  "type": "import"
 },
 "chainladder.core.dunders.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.core.io": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.io.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.core.io.EstimatorIO": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "chainladder.core.io.EstimatorIO.to_json": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "chainladder.core.io.json",
    "isinstance",
    "j",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "function"
 },
 "chainladder.core.io.EstimatorIO.to_pickle": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "chainladder.core.io.joblib"
   ]
  },
  "type": "function"
 },
 "chainladder.core.io.TriangleIO": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "chainladder.core.io.TriangleIO.to_json": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "chainladder.core.io.TriangleIO",
    "chainladder.core.io.json",
    "getattr",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "vars"
   ]
  },
  "type": "function"
 },
 "chainladder.core.io.TriangleIO.to_pickle": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "chainladder.core.io.joblib"
   ]
  },
  "type": "function"
 },
 "chainladder.core.io.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "chainladder.core.io.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "chainladder.core.io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.slice": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.slice.Ilocation": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "chainladder.core.slice._LocBase"
   ]
  },
  "type": "class"
 },
 "chainladder.core.slice.Ilocation.__getitem__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sparse._slicing.normalize_index"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.Ilocation.__setitem__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sparse._slicing.normalize_index",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.Location": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "chainladder.core.slice._LocBase"
   ]
  },
  "type": "class"
 },
 "chainladder.core.slice.Location.__getitem__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "chainladder.core.slice.Location.__setitem__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.Location.format_key": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Ellipsis",
    "len",
    "list",
    "norm",
    "normalize",
    "pandas.Series",
    "range",
    "slice",
    "sparse._slicing.normalize_index",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.Location.format_key.normalize": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "norm",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.TriangleSlicer": {
  "data": {
   "lineno": 139
  },
  "type": "class"
 },
 "chainladder.core.slice.TriangleSlicer.__getitem__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.ndarray",
    "numpy.prod",
    "pandas.Series",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.TriangleSlicer.__setitem__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.concatenate",
    "numpy.where",
    "xp",
    "xp.concatenate"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.TriangleSlicer._set_slicers": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "chainladder.core.slice.Ilocation",
    "chainladder.core.slice.Location"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.TriangleSlicer._slice": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "chainladder.core.slice._LocBase",
    "getattr",
    "len",
    "list",
    "numpy.arange",
    "setattr",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.TriangleSlicer._slice_valuation": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "chainladder.core.slice._LocBase",
    "min",
    "numpy.arange",
    "numpy.isnan",
    "numpy.nan",
    "numpy.ones",
    "numpy.sum",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice._LocBase": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "chainladder.core.slice._LocBase.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "chainladder.core.slice._LocBase.__setitem__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "print",
    "slice",
    "sparse._slicing.normalize_index",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice._LocBase._contig_slice": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "max",
    "min",
    "numpy.diff",
    "numpy.int32",
    "numpy.int64",
    "pandas.Series",
    "slice",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice._LocBase.get_idx": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.core.slice.Ilocation",
    "chainladder.core.slice.Location",
    "chainladder.core.slice._LocBase",
    "numpy.minimum",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.slice.normalize_index": {
  "data": {
   "shadows": "sparse._slicing.normalize_index"
  },
  "type": "import"
 },
 "chainladder.core.slice.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.slice.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.tests": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.tests.test_correlation": {
  "data": {
   "symbols_in_volume": [
    "rpy2.robjects.packages.importr"
   ]
  },
  "type": "module"
 },
 "chainladder.core.tests.test_correlation.CL": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_correlation.atol": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "chainladder.core.tests.test_correlation.pytest"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.ci": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_correlation.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_correlation.data": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_correlation.dev_corr_p": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.dev_corr_r": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.importr": {
  "data": {
   "shadows": "rpy2.robjects.packages.importr"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_correlation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_correlation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_correlation.r": {
  "data": {
   "shadows": "rpy2.robjects.r"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_correlation.test_dev_corr": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "chainladder.core.tests.test_correlation.atol",
    "chainladder.core.tests.test_correlation.ci",
    "chainladder.core.tests.test_correlation.data",
    "chainladder.core.tests.test_correlation.dev_corr_p",
    "chainladder.core.tests.test_correlation.dev_corr_r",
    "chainladder.core.tests.test_correlation.pytest",
    "numpy.allclose",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.test_dev_corr_range": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "chainladder.core.tests.test_correlation.atol",
    "chainladder.core.tests.test_correlation.ci",
    "chainladder.core.tests.test_correlation.data",
    "chainladder.core.tests.test_correlation.dev_corr_p",
    "chainladder.core.tests.test_correlation.dev_corr_r",
    "chainladder.core.tests.test_correlation.pytest",
    "numpy.allclose",
    "numpy.array",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.test_dev_corr_var": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "chainladder.core.tests.test_correlation.atol",
    "chainladder.core.tests.test_correlation.ci",
    "chainladder.core.tests.test_correlation.data",
    "chainladder.core.tests.test_correlation.dev_corr_p",
    "chainladder.core.tests.test_correlation.dev_corr_r",
    "chainladder.core.tests.test_correlation.pytest",
    "numpy.allclose",
    "numpy.array",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.test_val_corr_e": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "chainladder.core.tests.test_correlation.atol",
    "chainladder.core.tests.test_correlation.ci",
    "chainladder.core.tests.test_correlation.data",
    "chainladder.core.tests.test_correlation.pytest",
    "chainladder.core.tests.test_correlation.val_corr_p",
    "chainladder.core.tests.test_correlation.val_corr_r",
    "numpy.allclose",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.test_val_corr_var": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "chainladder.core.tests.test_correlation.atol",
    "chainladder.core.tests.test_correlation.ci",
    "chainladder.core.tests.test_correlation.data",
    "chainladder.core.tests.test_correlation.pytest",
    "chainladder.core.tests.test_correlation.val_corr_p",
    "chainladder.core.tests.test_correlation.val_corr_r",
    "numpy.allclose",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.test_val_corr_z": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "chainladder.core.tests.test_correlation.atol",
    "chainladder.core.tests.test_correlation.ci",
    "chainladder.core.tests.test_correlation.data",
    "chainladder.core.tests.test_correlation.pytest",
    "chainladder.core.tests.test_correlation.val_corr_p",
    "chainladder.core.tests.test_correlation.val_corr_r",
    "numpy.allclose",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.val_corr_p": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_correlation.val_corr_r": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle": {
  "data": {
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.copy",
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.load_sample"
   ]
  },
  "type": "module"
 },
 "chainladder.core.tests.test_triangle.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_triangle.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_triangle.missing_first_lag": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_triangle.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.tests.test_triangle.qtr": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_triangle.qtr_gt": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_triangle.raa": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_triangle.raa_gt": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_triangle.test_4loc": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_append": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_arithmetic_1": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "chainladder.load_sample",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_arithmetic_2": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "chainladder.load_sample",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_arithmetic_across_keys": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_arithmetic_union": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_assign_existing_col": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_backends": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_base_minimum_exposure_triangle": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "chainladder.Triangle",
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt",
    "str"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_boolean_groupby_eq_groupby_loc": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_broadcasting": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt",
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_commutative": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "abs",
    "chainladder.Chainladder",
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_create_new_value": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_df_period_input": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "chainladder.Triangle",
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_dropna": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_exposure_tri": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "chainladder.Triangle",
    "chainladder.load_sample",
    "str"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_grain": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_grain_increm_arg": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_grain_returns_valid_tri": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_incr_to_cum": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_init_vector": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "chainladder.Triangle",
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt",
    "numpy.all",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_jagged_1_add": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_jagged_2_add": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_latest_diagonal_two_routes": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_latest_diagonal_val_to_dev": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_link_ratio": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_loc_ellipsis": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_multiindex_broadcast": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_multilevel_index_groupby_sum1": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_multilevel_index_groupby_sum2": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_off_cycle_val_date": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_origin_and_value_setters": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt",
    "list",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_printer": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "chainladder.load_sample",
    "print"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_quantile_vs_median": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_reassignment": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_repr": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt",
    "numpy.testing.assert_array_equal",
    "pandas.read_html"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_rtruediv": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "abs",
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_shift": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_slice_by_boolean": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_slice_by_loc": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_slice_by_loc_iloc": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_slice_development": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_slice_origin": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_slicers_honor_order": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_sum_of_diff_eq_diff_of_sum": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_sumdiff_to_diffsum": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_to_frame_unusual": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_trend": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "abs",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_trend_on_vector": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt",
    "int"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_union_columns": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_valdev1": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_valdev2": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_valdev3": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_valdev5": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_valdev6": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_valdev7": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "chainladder.Chainladder",
    "chainladder.core.tests.test_triangle.qtr",
    "chainladder.core.tests.test_triangle.qtr_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_value_order": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.tri",
    "chainladder.core.tests.test_triangle.tri_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.test_vector_division": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "chainladder.core.tests.test_triangle.raa",
    "chainladder.core.tests.test_triangle.raa_gt"
   ]
  },
  "type": "function"
 },
 "chainladder.core.tests.test_triangle.tri": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "chainladder.core.tests.test_triangle.tri_gt": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "chainladder.core.triangle": {
  "data": {},
  "type": "module"
 },
 "chainladder.core.triangle.AUTO_SPARSE": {
  "data": {
   "shadows": "chainladder.AUTO_SPARSE"
  },
  "type": "import"
 },
 "chainladder.core.triangle.DevelopmentCorrelation": {
  "data": {
   "shadows": "chainladder.core.correlation.DevelopmentCorrelation"
  },
  "type": "import"
 },
 "chainladder.core.triangle.Triangle": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "chainladder.core.base.TriangleBase"
   ]
  },
  "type": "class"
 },
 "chainladder.core.triangle.Triangle._dstep": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle._val_dev": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "chainladder.AUTO_SPARSE",
    "len",
    "list",
    "numpy.arange",
    "numpy.max",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.age_to_age": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.broadcast_axis": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.columns": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.copy": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "chainladder.core.triangle.Triangle",
    "vars"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.cum_to_incr": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.concat"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.dev_to_val": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.concat",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.development": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.development_correlation": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "chainladder.core.correlation.DevelopmentCorrelation"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.grain": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "chainladder.utils.utility_functions.concat",
    "getattr",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.repeat",
    "numpy.unique",
    "pandas.PeriodIndex",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.incr_to_cum": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.num_to_nan",
    "l1",
    "l2",
    "l3",
    "numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.index": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.is_full": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.prod",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.is_ultimate": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "chainladder.ULT_VAL",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.is_val_tri": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.latest_diagonal": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.link_ratio": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.origin": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "list",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.set_index": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.trend": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.core.triangle.warnings",
    "numpy.datetime64",
    "numpy.max",
    "numpy.min",
    "pandas.DataFrame",
    "pandas.PeriodIndex",
    "pandas.Series",
    "val_vector"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.trend.val_vector": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.val_to_dev": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.concat",
    "numpy.arange",
    "numpy.array",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.Triangle.valuation_correlation": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "chainladder.core.correlation.ValuationCorrelation"
   ]
  },
  "type": "function"
 },
 "chainladder.core.triangle.TriangleBase": {
  "data": {
   "shadows": "chainladder.core.base.TriangleBase"
  },
  "type": "import"
 },
 "chainladder.core.triangle.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.core.triangle.ValuationCorrelation": {
  "data": {
   "shadows": "chainladder.core.correlation.ValuationCorrelation"
  },
  "type": "import"
 },
 "chainladder.core.triangle.concat": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.concat"
  },
  "type": "import"
 },
 "chainladder.core.triangle.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "chainladder.core.triangle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.core.triangle.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.core.triangle.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.core.triangle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.development": {
  "data": {},
  "type": "module"
 },
 "chainladder.development.ClarkLDF": {
  "data": {
   "shadows": "chainladder.development.clark.ClarkLDF"
  },
  "type": "import"
 },
 "chainladder.development.Development": {
  "data": {
   "shadows": "chainladder.development.base.Development"
  },
  "type": "import"
 },
 "chainladder.development.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.base.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.development.DevelopmentConstant": {
  "data": {
   "shadows": "chainladder.development.constant.DevelopmentConstant"
  },
  "type": "import"
 },
 "chainladder.development.IncrementalAdditive": {
  "data": {
   "shadows": "chainladder.development.incremental.IncrementalAdditive"
  },
  "type": "import"
 },
 "chainladder.development.MunichAdjustment": {
  "data": {
   "shadows": "chainladder.development.munich.MunichAdjustment"
  },
  "type": "import"
 },
 "chainladder.development.base": {
  "data": {},
  "type": "module"
 },
 "chainladder.development.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.development.base.Common": {
  "data": {
   "shadows": "chainladder.core.common.Common"
  },
  "type": "import"
 },
 "chainladder.development.base.Development": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "chainladder.development.base.DevelopmentBase"
   ]
  },
  "type": "class"
 },
 "chainladder.development.base.Development.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "chainladder.development.base.Development._assign_n_periods_weight": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development._assign_n_periods_weight_int": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "chainladder.development.base.Development._assign_n_periods_weight_list": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "enumerate",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development._drop": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "list",
    "numpy.where",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development._drop_adjustment": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "chainladder.development.base.Development._drop_hilo": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "bool",
    "chainladder.development.base.warnings",
    "enumerate",
    "len",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development._drop_valuation": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "list",
    "pandas.PeriodIndex",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development._param_property": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "chainladder.ULT_VAL",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development.fit": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.development.base.warnings",
    "chainladder.utils.WeightedRegression",
    "chainladder.utils.utility_functions.num_to_nan",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development.transform": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.Development.weight_": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.base.DevelopmentBase": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "chainladder.core.common.Common",
    "chainladder.core.io.EstimatorIO",
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "chainladder.development.base.EstimatorIO": {
  "data": {
   "shadows": "chainladder.core.io.EstimatorIO"
  },
  "type": "import"
 },
 "chainladder.development.base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "chainladder.development.base.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.development.base.WeightedRegression": {
  "data": {
   "shadows": "chainladder.utils.WeightedRegression"
  },
  "type": "import"
 },
 "chainladder.development.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.development.base.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.development.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.development.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.development.clark": {
  "data": {},
  "type": "module"
 },
 "chainladder.development.clark.ClarkLDF": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "chainladder.development.base.DevelopmentBase"
   ]
  },
  "type": "class"
 },
 "chainladder.development.clark.ClarkLDF.G_": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.clark.ClarkLDF._G": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "chainladder.development.clark.ClarkLDF.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "chainladder.development.clark.ClarkLDF.fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "chainladder.ULT_VAL",
    "len",
    "numpy.repeat",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "range",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "chainladder.development.clark.ClarkLDF.fit.solver": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ldf"
   ]
  },
  "type": "function"
 },
 "chainladder.development.clark.ClarkLDF.norm_resid_": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.sqrt",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.clark.ClarkLDF.scale_": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.clark.ClarkLDF.transform": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "chainladder.development.clark.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.base.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.development.clark.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.development.clark.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "chainladder.development.clark.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.development.clark.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.development.constant": {
  "data": {},
  "type": "module"
 },
 "chainladder.development.constant.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.base.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.development.constant.DevelopmentConstant": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "chainladder.development.base.DevelopmentBase"
   ]
  },
  "type": "class"
 },
 "chainladder.development.constant.DevelopmentConstant.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "chainladder.development.constant.DevelopmentConstant.fit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "callable",
    "chainladder.ULT_VAL",
    "float",
    "len",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "chainladder.development.constant.DevelopmentConstant.transform": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "chainladder.development.constant.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.development.constant.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.development.incremental": {
  "data": {},
  "type": "module"
 },
 "chainladder.development.incremental.Development": {
  "data": {
   "shadows": "chainladder.development.base.Development"
  },
  "type": "import"
 },
 "chainladder.development.incremental.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.base.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.development.incremental.IncrementalAdditive": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "chainladder.development.base.DevelopmentBase"
   ]
  },
  "type": "class"
 },
 "chainladder.development.incremental.IncrementalAdditive.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "chainladder.development.incremental.IncrementalAdditive.fit": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.ULT_VAL",
    "chainladder.development.base.Development",
    "chainladder.utils.utility_functions.num_to_nan",
    "len",
    "numpy.ndarray",
    "pandas.to_datetime",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.incremental.IncrementalAdditive.transform": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "chainladder.development.incremental.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.development.incremental.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.development.incremental.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.development.incremental.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.development.munich": {
  "data": {},
  "type": "module"
 },
 "chainladder.development.munich.Chainladder": {
  "data": {
   "shadows": "chainladder.methods.Chainladder"
  },
  "type": "import"
 },
 "chainladder.development.munich.Development": {
  "data": {
   "shadows": "chainladder.development.Development"
  },
  "type": "import"
 },
 "chainladder.development.munich.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.development.munich.MunichAdjustment": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "chainladder.development.DevelopmentBase"
   ]
  },
  "type": "class"
 },
 "chainladder.development.munich.MunichAdjustment.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "chainladder.development.munich.warnings",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._get_MCL_lambda": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "chainladder.utils.weighted_regression.WeightedRegression"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._get_MCL_model": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "chainladder.utils.weighted_regression.WeightedRegression"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._get_MCL_resids": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._get_mcl_cdf": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.where",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._get_munich_full_triangle_": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "hasattr",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._get_p_to_i_object": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._p_to_i_concate": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._reshape": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "len",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment._set_ldf": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.basic_cdf_": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.basic_sigma_": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.fit": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.ULT_VAL",
    "chainladder.development.Development",
    "chainladder.methods.Chainladder",
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.lambda_": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.munich_full_triangle_": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.q_": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.q_resids_": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.resids_": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.MunichAdjustment.transform": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "chainladder.development.Development",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "chainladder.development.munich.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.development.munich.WeightedRegression": {
  "data": {
   "shadows": "chainladder.utils.weighted_regression.WeightedRegression"
  },
  "type": "import"
 },
 "chainladder.development.munich.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.development.munich.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.development.munich.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.methods": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.Benktander": {
  "data": {
   "shadows": "chainladder.methods.benktander.Benktander"
  },
  "type": "import"
 },
 "chainladder.methods.BornhuetterFerguson": {
  "data": {
   "shadows": "chainladder.methods.bornferg.BornhuetterFerguson"
  },
  "type": "import"
 },
 "chainladder.methods.CapeCod": {
  "data": {
   "shadows": "chainladder.methods.capecod.CapeCod"
  },
  "type": "import"
 },
 "chainladder.methods.Chainladder": {
  "data": {
   "shadows": "chainladder.methods.chainladder.Chainladder"
  },
  "type": "import"
 },
 "chainladder.methods.MackChainladder": {
  "data": {
   "shadows": "chainladder.methods.mack.MackChainladder"
  },
  "type": "import"
 },
 "chainladder.methods.MethodBase": {
  "data": {
   "shadows": "chainladder.methods.base.MethodBase"
  },
  "type": "import"
 },
 "chainladder.methods.base": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.methods.base.Common": {
  "data": {
   "shadows": "chainladder.core.common.Common"
  },
  "type": "import"
 },
 "chainladder.methods.base.Development": {
  "data": {
   "shadows": "chainladder.development.Development"
  },
  "type": "import"
 },
 "chainladder.methods.base.EstimatorIO": {
  "data": {
   "shadows": "chainladder.core.io.EstimatorIO"
  },
  "type": "import"
 },
 "chainladder.methods.base.MethodBase": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "chainladder.core.common.Common",
    "chainladder.core.io.EstimatorIO",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "chainladder.methods.base.MethodBase._align_cdf": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.num_to_nan",
    "int",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase._include_process_variance": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase._set_ult_attr": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "chainladder.ULT_VAL",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase.fit": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase.fit_predict": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase.latest_diagonal": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase.ldf_": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase.predict": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase.validate_X": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "chainladder.development.Development",
    "chainladder.tails.TailConstant",
    "len"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.base.MethodBase.validate_weight": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "chainladder.methods.base.warnings"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.base.TailConstant": {
  "data": {
   "shadows": "chainladder.tails.TailConstant"
  },
  "type": "import"
 },
 "chainladder.methods.base.ULT_VAL": {
  "data": {
   "shadows": "chainladder.ULT_VAL"
  },
  "type": "import"
 },
 "chainladder.methods.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.methods.base.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.methods.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.methods.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.methods.benktander": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.benktander.Benktander": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "chainladder.methods.MethodBase"
   ]
  },
  "type": "class"
 },
 "chainladder.methods.benktander.Benktander.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "chainladder.methods.benktander.Benktander._get_ultimate": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.num_to_nan",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.benktander.Benktander.fit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.benktander.MethodBase": {
  "data": {
   "shadows": "chainladder.methods.MethodBase"
  },
  "type": "import"
 },
 "chainladder.methods.benktander.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.methods.bornferg": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.bornferg.Benktander": {
  "data": {
   "shadows": "chainladder.methods.Benktander"
  },
  "type": "import"
 },
 "chainladder.methods.bornferg.BornhuetterFerguson": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "chainladder.methods.Benktander"
   ]
  },
  "type": "class"
 },
 "chainladder.methods.bornferg.BornhuetterFerguson.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "chainladder.methods.bornferg.BornhuetterFerguson.fit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.capecod": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.capecod.CapeCod": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "chainladder.methods.MethodBase"
   ]
  },
  "type": "class"
 },
 "chainladder.methods.capecod.CapeCod.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "chainladder.methods.capecod.CapeCod._get_ultimate": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "chainladder.methods.capecod.warnings",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.capecod.CapeCod.fit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.capecod.CapeCod.predict": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "chainladder.methods.capecod.MethodBase": {
  "data": {
   "shadows": "chainladder.methods.MethodBase"
  },
  "type": "import"
 },
 "chainladder.methods.capecod.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.methods.chainladder": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.chainladder.Chainladder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "chainladder.methods.MethodBase"
   ]
  },
  "type": "class"
 },
 "chainladder.methods.chainladder.Chainladder._get_ultimate": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "chainladder.methods.chainladder.Chainladder.fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.chainladder.MethodBase": {
  "data": {
   "shadows": "chainladder.methods.MethodBase"
  },
  "type": "import"
 },
 "chainladder.methods.mack": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.mack.Chainladder": {
  "data": {
   "shadows": "chainladder.methods.Chainladder"
  },
  "type": "import"
 },
 "chainladder.methods.mack.MackChainladder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "chainladder.methods.Chainladder"
   ]
  },
  "type": "class"
 },
 "chainladder.methods.mack.MackChainladder._get_full_std_err_": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.num_to_nan",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder._get_total_mack_std_err_": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder._mack_recursion": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder.fit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder.full_std_err_": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder.mack_std_err_": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder.predict": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder.summary_": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder.total_mack_std_err_": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.MackChainladder.total_process_risk_": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.mack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.methods.mack.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.methods.mack.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.methods.tests": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.tests.test_benktander": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.tests.test_benktander.atol": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_benktander.pytest"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_benktander.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_benktander.data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_benktander.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_benktander.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_benktander.test_benktander_to_chainladder": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "chainladder.Benktander",
    "chainladder.Chainladder",
    "chainladder.load_sample",
    "chainladder.methods.tests.test_benktander.atol",
    "chainladder.methods.tests.test_benktander.data",
    "chainladder.methods.tests.test_benktander.pytest"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_benktander.test_bf_eq_cl_when_using_cl_apriori": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "chainladder.BornhuetterFerguson",
    "chainladder.Chainladder",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_benktander.test_different_backends": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abs",
    "chainladder.BornhuetterFerguson",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_capecod": {
  "data": {},
  "type": "module"
 },
 "chainladder.methods.tests.test_capecod.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_capecod.test_struhuss": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "chainladder.CapeCod",
    "chainladder.Development",
    "chainladder.TailConstant",
    "chainladder.load_sample",
    "int"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack": {
  "data": {
   "symbols_in_volume": [
    "rpy2.robjects.packages.importr"
   ]
  },
  "type": "module"
 },
 "chainladder.methods.tests.test_mack.CL": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_mack.atol": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_mack.pytest"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.averages": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_mack.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_mack.data": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_mack.est_sigma": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_mack.importr": {
  "data": {
   "shadows": "rpy2.robjects.packages.importr"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_mack.mack_p": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "chainladder.Development",
    "chainladder.MackChainladder",
    "chainladder.TailCurve",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.mack_r": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_mack.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_mack.r": {
  "data": {
   "shadows": "rpy2.robjects.r"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_mack.tail": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_mack.test_mack_asymmetric": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "chainladder.MackChainladder",
    "chainladder.load_sample",
    "float",
    "round",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.test_mack_full_std_err": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_mack.atol",
    "chainladder.methods.tests.test_mack.averages",
    "chainladder.methods.tests.test_mack.data",
    "chainladder.methods.tests.test_mack.est_sigma",
    "chainladder.methods.tests.test_mack.mack_p",
    "chainladder.methods.tests.test_mack.mack_r",
    "chainladder.methods.tests.test_mack.pytest",
    "chainladder.methods.tests.test_mack.tail",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.test_mack_mack_std_err_": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_mack.atol",
    "chainladder.methods.tests.test_mack.averages",
    "chainladder.methods.tests.test_mack.data",
    "chainladder.methods.tests.test_mack.est_sigma",
    "chainladder.methods.tests.test_mack.mack_p",
    "chainladder.methods.tests.test_mack.mack_r",
    "chainladder.methods.tests.test_mack.pytest",
    "chainladder.methods.tests.test_mack.tail",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.test_mack_parameter_risk": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_mack.atol",
    "chainladder.methods.tests.test_mack.averages",
    "chainladder.methods.tests.test_mack.data",
    "chainladder.methods.tests.test_mack.est_sigma",
    "chainladder.methods.tests.test_mack.mack_p",
    "chainladder.methods.tests.test_mack.mack_r",
    "chainladder.methods.tests.test_mack.pytest",
    "chainladder.methods.tests.test_mack.tail",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.test_mack_process_risk": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_mack.atol",
    "chainladder.methods.tests.test_mack.averages",
    "chainladder.methods.tests.test_mack.data",
    "chainladder.methods.tests.test_mack.est_sigma",
    "chainladder.methods.tests.test_mack.mack_p",
    "chainladder.methods.tests.test_mack.mack_r",
    "chainladder.methods.tests.test_mack.pytest",
    "chainladder.methods.tests.test_mack.tail",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.test_mack_to_triangle": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "chainladder.Development",
    "chainladder.MackChainladder",
    "chainladder.TailConstant",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.test_mack_total_parameter_risk": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_mack.atol",
    "chainladder.methods.tests.test_mack.averages",
    "chainladder.methods.tests.test_mack.data",
    "chainladder.methods.tests.test_mack.est_sigma",
    "chainladder.methods.tests.test_mack.mack_p",
    "chainladder.methods.tests.test_mack.mack_r",
    "chainladder.methods.tests.test_mack.pytest",
    "chainladder.methods.tests.test_mack.tail",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_mack.test_mack_total_process_risk": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "chainladder.methods.tests.test_mack.atol",
    "chainladder.methods.tests.test_mack.averages",
    "chainladder.methods.tests.test_mack.data",
    "chainladder.methods.tests.test_mack.est_sigma",
    "chainladder.methods.tests.test_mack.mack_p",
    "chainladder.methods.tests.test_mack.mack_r",
    "chainladder.methods.tests.test_mack.pytest",
    "chainladder.methods.tests.test_mack.tail",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_predict": {
  "data": {
   "symbols_in_volume": [
    "chainladder.Chainladder",
    "chainladder.load_sample",
    "chainladder.methods.tests.test_predict.apriori",
    "chainladder.methods.tests.test_predict.cl_ult",
    "chainladder.methods.tests.test_predict.raa",
    "float"
   ]
  },
  "type": "module"
 },
 "chainladder.methods.tests.test_predict.apriori": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_predict.apriori_1989": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_predict.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.methods.tests.test_predict.cl_ult": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_predict.raa": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_predict.raa_1989": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "chainladder.methods.tests.test_predict.test_basic_transform": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "chainladder.BootstrapODPSample",
    "chainladder.ClarkLDF",
    "chainladder.Development",
    "chainladder.IncrementalAdditive",
    "chainladder.TailBondy",
    "chainladder.TailClark",
    "chainladder.TailConstant",
    "chainladder.TailCurve",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_predict.test_bf_predict": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "chainladder.BornhuetterFerguson",
    "chainladder.methods.tests.test_predict.apriori",
    "chainladder.methods.tests.test_predict.apriori_1989",
    "chainladder.methods.tests.test_predict.raa",
    "chainladder.methods.tests.test_predict.raa_1989"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_predict.test_bs_random_state_predict": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abs",
    "chainladder.BootstrapODPSample",
    "chainladder.BornhuetterFerguson",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_predict.test_cc_predict": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "chainladder.CapeCod",
    "chainladder.methods.tests.test_predict.apriori",
    "chainladder.methods.tests.test_predict.apriori_1989",
    "chainladder.methods.tests.test_predict.raa",
    "chainladder.methods.tests.test_predict.raa_1989"
   ]
  },
  "type": "function"
 },
 "chainladder.methods.tests.test_predict.test_mack_predict": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "chainladder.MackChainladder",
    "chainladder.methods.tests.test_predict.raa_1989"
   ]
  },
  "type": "function"
 },
 "chainladder.tails": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.TailBase": {
  "data": {
   "shadows": "chainladder.tails.base.TailBase"
  },
  "type": "import"
 },
 "chainladder.tails.TailBondy": {
  "data": {
   "shadows": "chainladder.tails.bondy.TailBondy"
  },
  "type": "import"
 },
 "chainladder.tails.TailClark": {
  "data": {
   "shadows": "chainladder.tails.clark.TailClark"
  },
  "type": "import"
 },
 "chainladder.tails.TailConstant": {
  "data": {
   "shadows": "chainladder.tails.constant.TailConstant"
  },
  "type": "import"
 },
 "chainladder.tails.TailCurve": {
  "data": {
   "shadows": "chainladder.tails.curve.TailCurve"
  },
  "type": "import"
 },
 "chainladder.tails.base": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.tails.base.Common": {
  "data": {
   "shadows": "chainladder.core.common.Common"
  },
  "type": "import"
 },
 "chainladder.tails.base.Development": {
  "data": {
   "shadows": "chainladder.development.Development"
  },
  "type": "import"
 },
 "chainladder.tails.base.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.tails.base.EstimatorIO": {
  "data": {
   "shadows": "chainladder.core.io.EstimatorIO"
  },
  "type": "import"
 },
 "chainladder.tails.base.TailBase": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "chainladder.core.common.Common",
    "chainladder.core.io.EstimatorIO",
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "chainladder.tails.base.TailBase._apply_decay": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase._get_initial_ldf": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase._get_tail_prediction": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase._get_tail_stats": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "chainladder.utils.WeightedRegression",
    "chainladder.utils.utility_functions.num_to_nan"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase._get_tail_weighted_time_period": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "chainladder.utils.WeightedRegression"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase._tail_": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.all",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase.fit": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "chainladder.development.Development",
    "getattr",
    "hasattr",
    "numpy",
    "numpy.array",
    "numpy.concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase.tail_": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "chainladder.tails.base.TailBase",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.base.TailBase.transform": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "chainladder.tails.base.WeightedRegression": {
  "data": {
   "shadows": "chainladder.utils.WeightedRegression"
  },
  "type": "import"
 },
 "chainladder.tails.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.tails.base.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.tails.bondy": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.bondy.Development": {
  "data": {
   "shadows": "chainladder.development.Development"
  },
  "type": "import"
 },
 "chainladder.tails.bondy.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.tails.bondy.TailBase": {
  "data": {
   "shadows": "chainladder.tails.TailBase"
  },
  "type": "import"
 },
 "chainladder.tails.bondy.TailBondy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "chainladder.tails.TailBase"
   ]
  },
  "type": "class"
 },
 "chainladder.tails.bondy.TailBondy.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "chainladder.tails.bondy.TailBondy._solver": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.bondy.TailBondy.fit": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.development.Development",
    "chainladder.tails.bondy.TailBondy",
    "int",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "range",
    "scipy.optimize.least_squares",
    "sum",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.bondy.TailBondy.transform": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.bondy.least_squares": {
  "data": {
   "shadows": "scipy.optimize.least_squares"
  },
  "type": "import"
 },
 "chainladder.tails.bondy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.tails.bondy.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.tails.clark": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.clark.ClarkLDF": {
  "data": {
   "shadows": "chainladder.development.clark.ClarkLDF"
  },
  "type": "import"
 },
 "chainladder.tails.clark.TailBase": {
  "data": {
   "shadows": "chainladder.tails.TailBase"
  },
  "type": "import"
 },
 "chainladder.tails.clark.TailClark": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "chainladder.tails.TailBase"
   ]
  },
  "type": "class"
 },
 "chainladder.tails.clark.TailClark.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "chainladder.tails.clark.TailClark.fit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "chainladder.development.clark.ClarkLDF",
    "hasattr",
    "range",
    "sum",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.clark.TailClark.transform": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.constant": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.constant.Development": {
  "data": {
   "shadows": "chainladder.development.Development"
  },
  "type": "import"
 },
 "chainladder.tails.constant.TailBase": {
  "data": {
   "shadows": "chainladder.tails.TailBase"
  },
  "type": "import"
 },
 "chainladder.tails.constant.TailConstant": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "chainladder.tails.TailBase"
   ]
  },
  "type": "class"
 },
 "chainladder.tails.constant.TailConstant.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "chainladder.tails.constant.TailConstant.fit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "chainladder.development.Development",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.curve": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.curve.Development": {
  "data": {
   "shadows": "chainladder.development.Development"
  },
  "type": "import"
 },
 "chainladder.tails.curve.TailBase": {
  "data": {
   "shadows": "chainladder.tails.TailBase"
  },
  "type": "import"
 },
 "chainladder.tails.curve.TailCurve": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "chainladder.tails.TailBase"
   ]
  },
  "type": "class"
 },
 "chainladder.tails.curve.TailCurve.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "chainladder.tails.curve.TailCurve._get_x": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "chainladder.utils.WeightedRegression"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.curve.TailCurve._predict_tail": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "chainladder.tails.curve.TailCurve.fit": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "chainladder.development.Development",
    "chainladder.tails.curve.warnings",
    "chainladder.utils.WeightedRegression",
    "int",
    "len",
    "list",
    "slice",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.curve.TailCurve.intercept_": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.curve.TailCurve.slope_": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.curve.WeightedRegression": {
  "data": {
   "shadows": "chainladder.utils.WeightedRegression"
  },
  "type": "import"
 },
 "chainladder.tails.curve.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.tails.curve.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.tails.curve.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.tails.tests": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.tests.test_bondy": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.tests.test_bondy.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_bondy.test_bondy1": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "chainladder.Development",
    "chainladder.TailBondy",
    "chainladder.load_sample",
    "float",
    "round"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_constant": {
  "data": {},
  "type": "module"
 },
 "chainladder.tails.tests.test_constant.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_constant.cp": {
  "data": {
   "shadows": "chainladder.utils.cupy.cp"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_constant.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_constant.test_constant_balances": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "chainladder.TailConstant",
    "chainladder.load_sample",
    "float",
    "round"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential": {
  "data": {
   "symbols_in_volume": [
    "rpy2.robjects.packages.importr"
   ]
  },
  "type": "module"
 },
 "chainladder.tails.tests.test_exponential.CL": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "chainladder.tails.tests.test_exponential.atol": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "chainladder.tails.tests.test_exponential.pytest"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.averages": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "chainladder.tails.tests.test_exponential.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_exponential.data": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "chainladder.tails.tests.test_exponential.est_sigma": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "chainladder.tails.tests.test_exponential.importr": {
  "data": {
   "shadows": "rpy2.robjects.packages.importr"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_exponential.mack_p": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "chainladder.Development",
    "chainladder.TailCurve",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.mack_p_no_tail": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "chainladder.Development",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.mack_r": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_exponential.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_exponential.r": {
  "data": {
   "shadows": "rpy2.robjects.r"
  },
  "type": "import"
 },
 "chainladder.tails.tests.test_exponential.test_fit_period": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "chainladder.Development",
    "chainladder.TailCurve",
    "chainladder.load_sample",
    "round"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.test_mack_tail_ldf": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "chainladder.tails.tests.test_exponential.atol",
    "chainladder.tails.tests.test_exponential.averages",
    "chainladder.tails.tests.test_exponential.data",
    "chainladder.tails.tests.test_exponential.est_sigma",
    "chainladder.tails.tests.test_exponential.mack_p",
    "chainladder.tails.tests.test_exponential.mack_r",
    "chainladder.tails.tests.test_exponential.pytest",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.test_mack_tail_sigma": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "chainladder.tails.tests.test_exponential.atol",
    "chainladder.tails.tests.test_exponential.averages",
    "chainladder.tails.tests.test_exponential.data",
    "chainladder.tails.tests.test_exponential.est_sigma",
    "chainladder.tails.tests.test_exponential.mack_p",
    "chainladder.tails.tests.test_exponential.mack_r",
    "chainladder.tails.tests.test_exponential.pytest",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.test_mack_tail_std_err": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "chainladder.tails.tests.test_exponential.atol",
    "chainladder.tails.tests.test_exponential.averages",
    "chainladder.tails.tests.test_exponential.data",
    "chainladder.tails.tests.test_exponential.est_sigma",
    "chainladder.tails.tests.test_exponential.mack_p",
    "chainladder.tails.tests.test_exponential.mack_r",
    "chainladder.tails.tests.test_exponential.pytest",
    "rpy2.robjects.r"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.test_tail_doesnt_mutate_ldf_": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "chainladder.load_sample",
    "chainladder.tails.tests.test_exponential.averages",
    "chainladder.tails.tests.test_exponential.data",
    "chainladder.tails.tests.test_exponential.est_sigma",
    "chainladder.tails.tests.test_exponential.mack_p",
    "chainladder.tails.tests.test_exponential.mack_p_no_tail",
    "chainladder.tails.tests.test_exponential.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.test_tail_doesnt_mutate_sigma_": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "chainladder.tails.tests.test_exponential.averages",
    "chainladder.tails.tests.test_exponential.data",
    "chainladder.tails.tests.test_exponential.est_sigma",
    "chainladder.tails.tests.test_exponential.mack_p",
    "chainladder.tails.tests.test_exponential.mack_p_no_tail",
    "chainladder.tails.tests.test_exponential.pytest"
   ]
  },
  "type": "function"
 },
 "chainladder.tails.tests.test_exponential.test_tail_doesnt_mutate_std_err": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "chainladder.tails.tests.test_exponential.averages",
    "chainladder.tails.tests.test_exponential.data",
    "chainladder.tails.tests.test_exponential.est_sigma",
    "chainladder.tails.tests.test_exponential.mack_p",
    "chainladder.tails.tests.test_exponential.mack_p_no_tail",
    "chainladder.tails.tests.test_exponential.pytest"
   ]
  },
  "type": "function"
 },
 "chainladder.utils": {
  "data": {},
  "type": "module"
 },
 "chainladder.utils.CSpacer": {
  "data": {
   "shadows": "chainladder.utils.exhibits.CSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.Column": {
  "data": {
   "shadows": "chainladder.utils.exhibits.Column"
  },
  "type": "import"
 },
 "chainladder.utils.DataFrame": {
  "data": {
   "shadows": "chainladder.utils.exhibits.DataFrame"
  },
  "type": "import"
 },
 "chainladder.utils.HSpacer": {
  "data": {
   "shadows": "chainladder.utils.exhibits.HSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.Image": {
  "data": {
   "shadows": "chainladder.utils.exhibits.Image"
  },
  "type": "import"
 },
 "chainladder.utils.RSpacer": {
  "data": {
   "shadows": "chainladder.utils.exhibits.RSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.Row": {
  "data": {
   "shadows": "chainladder.utils.exhibits.Row"
  },
  "type": "import"
 },
 "chainladder.utils.Series": {
  "data": {
   "shadows": "chainladder.utils.exhibits.Series"
  },
  "type": "import"
 },
 "chainladder.utils.Sheet": {
  "data": {
   "shadows": "chainladder.utils.exhibits.Sheet"
  },
  "type": "import"
 },
 "chainladder.utils.Tabs": {
  "data": {
   "shadows": "chainladder.utils.exhibits.Tabs"
  },
  "type": "import"
 },
 "chainladder.utils.Title": {
  "data": {
   "shadows": "chainladder.utils.exhibits.Title"
  },
  "type": "import"
 },
 "chainladder.utils.VSpacer": {
  "data": {
   "shadows": "chainladder.utils.exhibits.VSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.WeightedRegression": {
  "data": {
   "shadows": "chainladder.utils.weighted_regression.WeightedRegression"
  },
  "type": "import"
 },
 "chainladder.utils.concat": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.concat"
  },
  "type": "import"
 },
 "chainladder.utils.cp": {
  "data": {
   "shadows": "chainladder.utils.cupy.cp"
  },
  "type": "import"
 },
 "chainladder.utils.cupy": {
  "data": {
   "symbols_in_volume": [
    "chainladder.ARRAY_BACKEND",
    "chainladder.utils.cupy.module",
    "chainladder.utils.cupy.nanmean",
    "chainladder.utils.cupy.nanmedian",
    "chainladder.utils.cupy.nanquantile",
    "chainladder.utils.cupy.nansum",
    "chainladder.utils.cupy.unique",
    "chainladder.utils.cupy.warnings",
    "cupy.array",
    "int",
    "numpy.__version__.split",
    "numpy.nanmean",
    "numpy.nanmedian",
    "numpy.nanquantile",
    "numpy.nansum",
    "numpy.unique"
   ]
  },
  "type": "module"
 },
 "chainladder.utils.cupy.ARRAY_BACKEND": {
  "data": {
   "shadows": "chainladder.ARRAY_BACKEND"
  },
  "type": "import"
 },
 "chainladder.utils.cupy.cp": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.utils.cupy.module": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "chainladder.utils.cupy.nanmean": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan_to_num",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.cupy.nanmedian": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asnumpy",
    "numpy.nanmedian"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.cupy.nanquantile": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asnumpy",
    "numpy.nanquantile"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.cupy.nansum": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.nan_to_num",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.cupy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.utils.cupy.sp": {
  "data": {
   "shadows": "chainladder.utils.sparse.sp"
  },
  "type": "import"
 },
 "chainladder.utils.cupy.unique": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asnumpy",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.cupy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits": {
  "data": {},
  "type": "module"
 },
 "chainladder.utils.exhibits.CSpacer": {
  "data": {
   "shadows": "xlcompose.CSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.Column": {
  "data": {
   "shadows": "xlcompose.Column"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.DataFrame": {
  "data": {
   "shadows": "xlcompose.DataFrame"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.HSpacer": {
  "data": {
   "shadows": "xlcompose.HSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.Image": {
  "data": {
   "shadows": "xlcompose.Image"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.RSpacer": {
  "data": {
   "shadows": "xlcompose.RSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.Row": {
  "data": {
   "shadows": "xlcompose.Row"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.Series": {
  "data": {
   "shadows": "xlcompose.Series"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.Sheet": {
  "data": {
   "shadows": "xlcompose.Sheet"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.Tabs": {
  "data": {
   "shadows": "xlcompose.Tabs"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.Title": {
  "data": {
   "shadows": "xlcompose.Title"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.VSpacer": {
  "data": {
   "shadows": "xlcompose.VSpacer"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.load_template": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "chainladder.utils.exhibits.os",
    "xlcompose.load_yaml"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.exhibits.load_yaml": {
  "data": {
   "shadows": "xlcompose.load_yaml"
  },
  "type": "import"
 },
 "chainladder.utils.exhibits.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "chainladder.utils.load_dataset": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.load_dataset"
  },
  "type": "import"
 },
 "chainladder.utils.load_sample": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.load_sample"
  },
  "type": "import"
 },
 "chainladder.utils.load_template": {
  "data": {
   "shadows": "chainladder.utils.exhibits.load_template"
  },
  "type": "import"
 },
 "chainladder.utils.maximum": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.maximum"
  },
  "type": "import"
 },
 "chainladder.utils.minimum": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.minimum"
  },
  "type": "import"
 },
 "chainladder.utils.parallelogram_olf": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.parallelogram_olf"
  },
  "type": "import"
 },
 "chainladder.utils.read_json": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.read_json"
  },
  "type": "import"
 },
 "chainladder.utils.read_pickle": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.read_pickle"
  },
  "type": "import"
 },
 "chainladder.utils.sp": {
  "data": {
   "shadows": "chainladder.utils.sparse.sp"
  },
  "type": "import"
 },
 "chainladder.utils.sparse": {
  "data": {
   "symbols_in_volume": [
    "chainladder.utils.sparse.allclose",
    "chainladder.utils.sparse.apply_along_axis",
    "chainladder.utils.sparse.arange",
    "chainladder.utils.sparse.around",
    "chainladder.utils.sparse.array",
    "chainladder.utils.sparse.floor",
    "chainladder.utils.sparse.maximum",
    "chainladder.utils.sparse.minimum",
    "chainladder.utils.sparse.nan_to_num",
    "chainladder.utils.sparse.nanmean",
    "chainladder.utils.sparse.nanmedian",
    "chainladder.utils.sparse.nanquantile",
    "chainladder.utils.sparse.ones",
    "chainladder.utils.sparse.repeat",
    "chainladder.utils.sparse.sparse",
    "chainladder.utils.sparse.swapaxes",
    "chainladder.utils.sparse.unique",
    "chainladder.utils.sparse.where",
    "numpy.abs",
    "numpy.array",
    "numpy.exp",
    "numpy.isnan",
    "numpy.log",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.testing",
    "numpy.testing.assert_equal",
    "sparse.COO.abs",
    "sparse.COO.allclose",
    "sparse.COO.apply_along_axis",
    "sparse.COO.arange",
    "sparse.COO.around",
    "sparse.COO.array",
    "sparse.COO.concatenate",
    "sparse.COO.diagonal",
    "sparse.COO.exp",
    "sparse.COO.floor",
    "sparse.COO.isnan",
    "sparse.COO.log",
    "sparse.COO.maximum",
    "sparse.COO.minimum",
    "sparse.COO.nan",
    "sparse.COO.nan_to_num",
    "sparse.COO.nanmax",
    "sparse.COO.nanmean",
    "sparse.COO.nanmedian",
    "sparse.COO.nanmin",
    "sparse.COO.nanquantile",
    "sparse.COO.nansum",
    "sparse.COO.newaxis",
    "sparse.COO.ones",
    "sparse.COO.repeat",
    "sparse.COO.sqrt",
    "sparse.COO.swapaxes",
    "sparse.COO.testing",
    "sparse.COO.testing.assert_array_equal",
    "sparse.COO.unique",
    "sparse.COO.where",
    "sparse.COO.zeros"
   ]
  },
  "type": "module"
 },
 "chainladder.utils.sparse.ARRAY_BACKEND": {
  "data": {
   "shadows": "chainladder.ARRAY_BACKEND"
  },
  "type": "import"
 },
 "chainladder.utils.sparse.allclose": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.nan_to_num"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.apply_along_axis": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "sparse.COO"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.arange": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "chainladder.utils.sparse.sparse",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.around": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.around",
    "sparse.COO"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.array": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "sparse.COO",
    "sparse.COO.nan",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "chainladder.utils.sparse.elemwise": {
  "data": {
   "shadows": "sparse.elemwise"
  },
  "type": "import"
 },
 "chainladder.utils.sparse.floor": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.maximum": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.minimum": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.all",
    "numpy.minimum",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.nan_to_num": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "int",
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan_to_num",
    "sparse.COO",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.nanmean": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.nan",
    "sparse.COO",
    "sparse.COO.nan_to_num",
    "sparse.COO.nansum"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.nanmedian": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.nan_to_num",
    "numpy.nanmedian",
    "sparse.COO"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.nanquantile": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.nan_to_num",
    "numpy.nanquantile",
    "sparse.COO"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.utils.sparse.ones": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.ones",
    "sparse.COO",
    "sparse.COO.nan"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.utils.sparse.repeat": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.tile",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.sp": {
  "data": {
   "shadows": "sparse.COO"
  },
  "type": "import"
 },
 "chainladder.utils.sparse.sparse": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "chainladder.utils.sparse.swapaxes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.arange",
    "range",
    "sparse.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.unique": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.unique",
    "sparse.COO"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.sparse.where": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.where",
    "sparse.elemwise"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests": {
  "data": {},
  "type": "module"
 },
 "chainladder.utils.tests.test_exhibits": {
  "data": {},
  "type": "module"
 },
 "chainladder.utils.tests.test_exhibits.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.utils.tests.test_exhibits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.utils.tests.test_exhibits.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.utils.tests.test_exhibits.test_simple_exhibit": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "chainladder.Column",
    "chainladder.DataFrame",
    "chainladder.Row",
    "chainladder.Tabs",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities": {
  "data": {},
  "type": "module"
 },
 "chainladder.utils.tests.test_utilities.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.utils.tests.test_utilities.cp": {
  "data": {
   "shadows": "chainladder.utils.cupy.cp"
  },
  "type": "import"
 },
 "chainladder.utils.tests.test_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.utils.tests.test_utilities.test_concat": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "chainladder.concat",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_estimator_json_io": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "chainladder.Development",
    "chainladder.read_json"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_json_df": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "abs",
    "chainladder.MunichAdjustment",
    "chainladder.load_sample",
    "chainladder.read_json"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_json_for_val": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "chainladder.load_sample",
    "chainladder.read_json"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_json_subtri": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abs",
    "chainladder.Chainladder",
    "chainladder.load_sample",
    "chainladder.read_json"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_non_vertical_line": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "chainladder.parallelogram_olf"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_pipeline_json_io": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "chainladder.BornhuetterFerguson",
    "chainladder.Development",
    "chainladder.Pipeline",
    "chainladder.read_json"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_triangle_json_io": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "chainladder.load_sample",
    "chainladder.read_json",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.tests.test_utilities.test_vertical_line": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abs",
    "chainladder.parallelogram_olf"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions": {
  "data": {},
  "type": "module"
 },
 "chainladder.utils.utility_functions.ARRAY_BACKEND": {
  "data": {
   "shadows": "chainladder.ARRAY_BACKEND"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.Pipeline": {
  "data": {
   "shadows": "chainladder.workflow.Pipeline"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.Triangle": {
  "data": {
   "shadows": "chainladder.Triangle"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.concat": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.copy",
    "chainladder.utils.utility_functions.set_common_backend",
    "getattr",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ndarray",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "set",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.cp": {
  "data": {
   "shadows": "chainladder.utils.cupy.cp"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.load_dataset": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.load_sample",
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.load_sample": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "chainladder.Triangle",
    "chainladder.utils.utility_functions.os",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.maximum": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.minimum": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.num_to_nan": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "chainladder.utils.cupy.cp.nan",
    "chainladder.utils.sparse.sp",
    "chainladder.utils.sparse.sp.isnan",
    "chainladder.utils.sparse.sp.nan",
    "numpy.nan",
    "numpy.nan_to_num"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.parallelogram_olf": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cumprod",
    "pandas.Series",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.tseries.offsets.DateOffset",
    "str"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.priority": {
  "data": {
   "shadows": "chainladder.ARRAY_PRIORITY"
  },
  "type": "import"
 },
 "chainladder.utils.utility_functions.read_json": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "chainladder.ARRAY_BACKEND",
    "chainladder.Triangle",
    "chainladder.__dict__",
    "chainladder.utils.utility_functions.json",
    "chainladder.workflow.Pipeline",
    "len",
    "list",
    "pandas.read_json",
    "pandas.to_datetime",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.read_pickle": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.joblib"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.set_common_backend": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "chainladder.ARRAY_PRIORITY",
    "chainladder.ARRAY_PRIORITY.index",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.utility_functions.sp": {
  "data": {
   "shadows": "chainladder.utils.sparse.sp"
  },
  "type": "import"
 },
 "chainladder.utils.weighted_regression": {
  "data": {},
  "type": "module"
 },
 "chainladder.utils.weighted_regression.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.utils.weighted_regression.WeightedRegression": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "chainladder.utils.weighted_regression.WeightedRegression.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression._fit_OLS": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "chainladder.utils.sparse.sp",
    "chainladder.utils.sparse.sp.nan",
    "chainladder.utils.utility_functions.num_to_nan"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression._fit_OLS_thru_orig": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "chainladder.utils.sparse.sp",
    "chainladder.utils.utility_functions.num_to_nan"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression.fit": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression.infer_x_w": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression.loglinear_interpolation": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.num_to_nan",
    "chainladder.utils.weighted_regression.WeightedRegression"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression.mack_interpolation": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abs",
    "chainladder.utils.utility_functions.num_to_nan",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression.sigma_fill": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.WeightedRegression.std_err_fill": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "chainladder.utils.weighted_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.utils.weighted_regression.num_to_nan": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.num_to_nan"
  },
  "type": "import"
 },
 "chainladder.utils.weighted_regression.sp": {
  "data": {
   "shadows": "chainladder.utils.sparse.sp"
  },
  "type": "import"
 },
 "chainladder.workflow": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.BerquistSherman": {
  "data": {
   "shadows": "chainladder.workflow.berqsherm.BerquistSherman"
  },
  "type": "import"
 },
 "chainladder.workflow.BootstrapODPSample": {
  "data": {
   "shadows": "chainladder.workflow.bootstrap.BootstrapODPSample"
  },
  "type": "import"
 },
 "chainladder.workflow.GridSearch": {
  "data": {
   "shadows": "chainladder.workflow.gridsearch.GridSearch"
  },
  "type": "import"
 },
 "chainladder.workflow.ParallelogramOLF": {
  "data": {
   "shadows": "chainladder.workflow.parallelogram.ParallelogramOLF"
  },
  "type": "import"
 },
 "chainladder.workflow.Pipeline": {
  "data": {
   "shadows": "chainladder.workflow.gridsearch.Pipeline"
  },
  "type": "import"
 },
 "chainladder.workflow.Trend": {
  "data": {
   "shadows": "chainladder.workflow.trend.Trend"
  },
  "type": "import"
 },
 "chainladder.workflow.berqsherm": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.berqsherm.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.workflow.berqsherm.BerquistSherman": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "chainladder.core.io.EstimatorIO",
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "chainladder.workflow.berqsherm.BerquistSherman.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "chainladder.workflow.berqsherm.BerquistSherman.fit": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.methods.chainladder.Chainladder",
    "chainladder.workflow.berqsherm.warnings",
    "numpy.exp",
    "numpy.maximum",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.berqsherm.BerquistSherman.set_params": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.read_json",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.berqsherm.BerquistSherman.transform": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "chainladder.workflow.berqsherm.Chainladder": {
  "data": {
   "shadows": "chainladder.methods.chainladder.Chainladder"
  },
  "type": "import"
 },
 "chainladder.workflow.berqsherm.EstimatorIO": {
  "data": {
   "shadows": "chainladder.core.io.EstimatorIO"
  },
  "type": "import"
 },
 "chainladder.workflow.berqsherm.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "chainladder.workflow.berqsherm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.workflow.berqsherm.read_json": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.read_json"
  },
  "type": "import"
 },
 "chainladder.workflow.berqsherm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "chainladder.workflow.bootstrap": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "chainladder.development.base.DevelopmentBase"
   ]
  },
  "type": "class"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample._get_design_matrix": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample._get_hat": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "int",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample._get_hetero_adjustment": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample._get_simulation": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "abs",
    "numpy.arange",
    "range",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample.fit": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "chainladder.development.base.Development",
    "chainladder.methods.chainladder.Chainladder",
    "numpy.ndarray",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.BootstrapODPSample.transform": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "chainladder.workflow.bootstrap.types"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.Chainladder": {
  "data": {
   "shadows": "chainladder.methods.chainladder.Chainladder"
  },
  "type": "import"
 },
 "chainladder.workflow.bootstrap.Development": {
  "data": {
   "shadows": "chainladder.development.base.Development"
  },
  "type": "import"
 },
 "chainladder.workflow.bootstrap.DevelopmentBase": {
  "data": {
   "shadows": "chainladder.development.base.DevelopmentBase"
  },
  "type": "import"
 },
 "chainladder.workflow.bootstrap._get_process_variance": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.bootstrap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.workflow.bootstrap.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.workflow.bootstrap.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "chainladder.workflow.bootstrap.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "chainladder.workflow.gridsearch": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.gridsearch.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.workflow.gridsearch.EstimatorIO": {
  "data": {
   "shadows": "chainladder.core.io.EstimatorIO"
  },
  "type": "import"
 },
 "chainladder.workflow.gridsearch.GridSearch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "chainladder.workflow.gridsearch.GridSearch.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "chainladder.workflow.gridsearch.GridSearch.fit": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "chainladder.workflow.gridsearch.copy",
    "dict",
    "enumerate",
    "list",
    "pandas.DataFrame",
    "sklearn.model_selection.ParameterGrid",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.gridsearch.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "chainladder.workflow.gridsearch.Pipeline": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "chainladder.core.io.EstimatorIO",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "class"
 },
 "chainladder.workflow.gridsearch.Pipeline.fit": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.gridsearch.Pipeline.fit_predict": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "chainladder.workflow.gridsearch.Pipeline.predict": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.gridsearch.Pipeline.to_json": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "chainladder.workflow.gridsearch.json"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.gridsearch.PipelineSL": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "chainladder.workflow.gridsearch.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "chainladder.workflow.gridsearch.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "chainladder.workflow.gridsearch.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.workflow.parallelogram": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.parallelogram.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.workflow.parallelogram.EstimatorIO": {
  "data": {
   "shadows": "chainladder.core.io.EstimatorIO"
  },
  "type": "import"
 },
 "chainladder.workflow.parallelogram.ParallelogramOLF": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "chainladder.core.io.EstimatorIO",
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "chainladder.workflow.parallelogram.ParallelogramOLF.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "chainladder.workflow.parallelogram.ParallelogramOLF.fit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "chainladder.utils.utility_functions.concat",
    "chainladder.utils.utility_functions.parallelogram_olf",
    "dict",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.parallelogram.ParallelogramOLF.transform": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.parallelogram.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "chainladder.workflow.parallelogram.concat": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.concat"
  },
  "type": "import"
 },
 "chainladder.workflow.parallelogram.parallelogram_olf": {
  "data": {
   "shadows": "chainladder.utils.utility_functions.parallelogram_olf"
  },
  "type": "import"
 },
 "chainladder.workflow.tests": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.tests.test_berqsherm": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.tests.test_berqsherm.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.workflow.tests.test_berqsherm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.workflow.tests.test_berqsherm.test_preserve_diagonal": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "chainladder.BerquistSherman",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.tests.test_boostrap": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.tests.test_boostrap.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.workflow.tests.test_boostrap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "chainladder.workflow.tests.test_boostrap.test_bs_sample": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abs",
    "chainladder.BootstrapODPSample",
    "chainladder.Development",
    "chainladder.load_sample"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.tests.test_parallelogram": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.tests.test_parallelogram.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.workflow.tests.test_parallelogram.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "chainladder.workflow.tests.test_parallelogram.test_parallelogram": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "chainladder.ParallelogramOLF",
    "chainladder.load_sample",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.tests.test_workflow": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.tests.test_workflow.cl": {
  "data": {
   "shadows": "chainladder"
  },
  "type": "import"
 },
 "chainladder.workflow.tests.test_workflow.test_grid": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "chainladder.Benktander",
    "chainladder.Development",
    "chainladder.GridSearch",
    "chainladder.Pipeline",
    "chainladder.TailCurve",
    "chainladder.load_sample",
    "dict"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.trend": {
  "data": {},
  "type": "module"
 },
 "chainladder.workflow.trend.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "chainladder.workflow.trend.EstimatorIO": {
  "data": {
   "shadows": "chainladder.core.io.EstimatorIO"
  },
  "type": "import"
 },
 "chainladder.workflow.trend.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "chainladder.workflow.trend.Trend": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "chainladder.core.io.EstimatorIO",
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "chainladder.workflow.trend.Trend.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.trend.Trend.fit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "enumerate",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.trend.Trend.transform": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "chainladder.workflow.trend.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 }
}