{
 "powerlaw": {
  "data": {},
  "type": "module"
 },
 "powerlaw.Distribution": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "powerlaw.Distribution.KS": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "cdf",
    "hasattr",
    "len",
    "max",
    "numpy.mean",
    "numpy.nan",
    "powerlaw.sys",
    "print",
    "sum",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.__init__": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "powerlaw.Distribution._cdf_xmin": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution._double_search_discrete": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "bisect_map",
    "int"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution._pdf_continuous_normalizer": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution._pdf_discrete_normalizer": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.ccdf": {
  "data": {
   "lineno": 705
  },
  "type": "function"
 },
 "powerlaw.Distribution.cdf": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.isnan",
    "numpy.min",
    "numpy.ones",
    "numpy.tile",
    "powerlaw.sys",
    "print",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.fit": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "fit_function",
    "hasattr",
    "iter",
    "powerlaw.sys",
    "print",
    "scipy.optimize.fmin",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.fit.fit_function": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "powerlaw.Distribution.generate_random": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "numpy.array",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.in_range": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "getattr"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.initial_parameters": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.likelihoods": {
  "data": {
   "lineno": 941
  },
  "type": "function"
 },
 "powerlaw.Distribution.loglikelihoods": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.parameter_range": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "type",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.pdf": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.tile",
    "sum",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.plot_ccdf": {
  "data": {
   "lineno": 956
  },
  "type": "function"
 },
 "powerlaw.Distribution.plot_cdf": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.pyplot.subplots",
    "numpy.unique",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution.plot_pdf": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.plot",
    "numpy.nan",
    "numpy.unique",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution_Fit": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "powerlaw.Distribution_Fit.__getattr__": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "AttributeError",
    "distribution_fit",
    "getattr",
    "len",
    "power_law_ks_distance",
    "powerlaw.sys",
    "print",
    "setattr"
   ]
  },
  "type": "function"
 },
 "powerlaw.Distribution_Fit.__init__": {
  "data": {
   "lineno": 2127
  },
  "type": "function"
 },
 "powerlaw.Exponential": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "powerlaw.Distribution"
   ]
  },
  "type": "class"
 },
 "powerlaw.Exponential._cdf_base_function": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential._generate_random_continuous": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential._in_standard_parameter_range": {
  "data": {
   "lineno": 1210
  },
  "type": "function"
 },
 "powerlaw.Exponential._initial_parameters": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential._pdf_base_function": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential._pdf_continuous_normalizer": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "numpy.exp",
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential._pdf_discrete_normalizer": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "numpy.exp",
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential.loglikelihoods": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "hasattr",
    "numpy.log",
    "powerlaw.Distribution",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential.name": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Exponential.parameters": {
  "data": {
   "lineno": 1197
  },
  "type": "function"
 },
 "powerlaw.Exponential.pdf": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "hasattr",
    "numpy.exp",
    "powerlaw.Distribution",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "powerlaw.Fit.__getattr__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "AttributeError",
    "Power_Law",
    "dist",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Power_Law",
    "ValueError",
    "all",
    "cdf",
    "float",
    "getattr",
    "len",
    "list",
    "numpy.asarray",
    "numpy.sort",
    "powerlaw.sys",
    "print",
    "range",
    "setattr",
    "sum",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.ccdf": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "cdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.cdf": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "cdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.distribution_compare": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "getattr",
    "loglikelihood_ratio",
    "powerlaw.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.find_xmin": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "len",
    "list",
    "map",
    "max",
    "min",
    "numpy.argmin",
    "numpy.array",
    "numpy.asarray",
    "numpy.ma.masked_array",
    "numpy.nan",
    "numpy.unique",
    "powerlaw.sys",
    "print",
    "setattr"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.find_xmin.fit_function": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Power_Law",
    "getattr"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.loglikelihood_ratio": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "powerlaw.Fit.nested_distribution_compare": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "powerlaw.Fit.pdf": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "pdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.plot_ccdf": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "plot_cdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.plot_cdf": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "plot_cdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.Fit.plot_pdf": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "plot_pdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "powerlaw.Lognormal": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "powerlaw.Distribution"
   ]
  },
  "type": "class"
 },
 "powerlaw.Lognormal._cdf_base_function": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "scipy.special.erf"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal._generate_random_continuous": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "mpmath.erf",
    "mpmath.erfinv",
    "numpy.exp",
    "numpy.frompyfunc",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal._in_standard_parameter_range": {
  "data": {
   "lineno": 1627
  },
  "type": "function"
 },
 "powerlaw.Lognormal._initial_parameters": {
  "data": {
   "lineno": 1622,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.mean",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal._pdf_base_function": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal._pdf_continuous_normalizer": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "float",
    "mpmath.erfc",
    "numpy.log",
    "numpy.sqrt",
    "property",
    "scipy.constants.pi"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal._pdf_discrete_normalizer": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal._round_discrete_approx": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "scipy.special.erfc"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal.cdf": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.isnan",
    "numpy.log",
    "numpy.min",
    "numpy.sqrt",
    "numpy.tile",
    "powerlaw.sys",
    "print",
    "scipy.special.erfc",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal.name": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal.parameters": {
  "data": {
   "lineno": 1455
  },
  "type": "function"
 },
 "powerlaw.Lognormal.pdf": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.sum",
    "numpy.tile",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Lognormal_Positive": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "powerlaw.Lognormal"
   ]
  },
  "type": "class"
 },
 "powerlaw.Lognormal_Positive._in_standard_parameter_range": {
  "data": {
   "lineno": 1696
  },
  "type": "function"
 },
 "powerlaw.Lognormal_Positive.name": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "powerlaw.Distribution"
   ]
  },
  "type": "class"
 },
 "powerlaw.Power_Law.__init__": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "powerlaw.Distribution"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law._cdf_base_function": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "scipy.special.zeta"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law._generate_random_continuous": {
  "data": {
   "lineno": 1188
  },
  "type": "function"
 },
 "powerlaw.Power_Law._generate_random_discrete_estimate": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law._in_standard_parameter_range": {
  "data": {
   "lineno": 1131
  },
  "type": "function"
 },
 "powerlaw.Power_Law._initial_parameters": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "len",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law._pdf_base_function": {
  "data": {
   "lineno": 1173
  },
  "type": "function"
 },
 "powerlaw.Power_Law._pdf_continuous_normalizer": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law._pdf_discrete_normalizer": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law.fit": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.log",
    "numpy.sum",
    "powerlaw.Distribution",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law.name": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Power_Law.parameters": {
  "data": {
   "lineno": 1115
  },
  "type": "function"
 },
 "powerlaw.Power_Law.sigma": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "numpy.sqrt",
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "powerlaw.Distribution"
   ]
  },
  "type": "class"
 },
 "powerlaw.Stretched_Exponential._cdf_base_function": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential._generate_random_continuous": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential._in_standard_parameter_range": {
  "data": {
   "lineno": 1291
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential._initial_parameters": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential._pdf_base_function": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential._pdf_continuous_normalizer": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "numpy.exp",
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential._pdf_discrete_normalizer": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential.loglikelihoods": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "hasattr",
    "numpy.inf",
    "numpy.log",
    "powerlaw.Distribution",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential.name": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential.parameters": {
  "data": {
   "lineno": 1275
  },
  "type": "function"
 },
 "powerlaw.Stretched_Exponential.pdf": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "hasattr",
    "numpy.exp",
    "powerlaw.Distribution",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "powerlaw.Distribution"
   ]
  },
  "type": "class"
 },
 "powerlaw.Truncated_Power_Law._cdf_base_function": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "mpmath.gammainc",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law._generate_random_continuous": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law._generate_random_continuous.helper": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law._in_standard_parameter_range": {
  "data": {
   "lineno": 1377
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law._initial_parameters": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "len",
    "numpy.log",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law._pdf_base_function": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law._pdf_continuous_normalizer": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "float",
    "mpmath.gammainc",
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law._pdf_discrete_normalizer": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "float",
    "mpmath.exp",
    "mpmath.lerchphi",
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law.name": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law.parameters": {
  "data": {
   "lineno": 1359
  },
  "type": "function"
 },
 "powerlaw.Truncated_Power_Law.pdf": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "mpmath.gammainc",
    "numpy.exp",
    "powerlaw.Distribution",
    "sys.float_info.min_10_exp",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "powerlaw.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "powerlaw.argmin": {
  "data": {
   "shadows": "numpy.argmin"
  },
  "type": "import"
 },
 "powerlaw.around": {
  "data": {
   "shadows": "numpy.around"
  },
  "type": "import"
 },
 "powerlaw.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "powerlaw.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "powerlaw.bisect_map": {
  "data": {
   "lineno": 2087,
   "symbols_in_volume": [
    "function"
   ]
  },
  "type": "function"
 },
 "powerlaw.ccdf": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "cumulative_distribution_function"
   ]
  },
  "type": "function"
 },
 "powerlaw.cdf": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "cumulative_distribution_function"
   ]
  },
  "type": "function"
 },
 "powerlaw.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "powerlaw.checkunique": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "powerlaw.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "powerlaw.comb": {
  "data": {
   "shadows": "scipy.misc.comb"
  },
  "type": "import"
 },
 "powerlaw.cumulative_distribution_function": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "any",
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "numpy.searchsorted",
    "numpy.sort",
    "numpy.unique",
    "trim_to_range"
   ]
  },
  "type": "function"
 },
 "powerlaw.distribution_compare": {
  "data": {
   "lineno": 2405,
   "symbols_in_volume": [
    "all",
    "likelihood_function1",
    "likelihood_function2",
    "likelihood_function_generator",
    "numpy.log",
    "powerlaw.loglikelihood_ratio",
    "powerlaw.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "powerlaw.distribution_fit": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": [
    "all",
    "distribution_compare",
    "find_xmin",
    "float",
    "iter",
    "len",
    "likelihood_function",
    "likelihood_function_generator",
    "list",
    "numpy.around",
    "numpy.array",
    "numpy.log",
    "numpy.mean",
    "numpy.nan",
    "numpy.std",
    "numpy.sum",
    "powerlaw.is_discrete",
    "powerlaw.sys",
    "print",
    "scipy.optimize.fmin",
    "sys.float_info.max_10_exp",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "powerlaw.erf": {
  "data": {
   "shadows": "mpmath.erf"
  },
  "type": "import"
 },
 "powerlaw.erfc": {
  "data": {
   "shadows": "scipy.special.erfc"
  },
  "type": "import"
 },
 "powerlaw.erfinv": {
  "data": {
   "shadows": "mpmath.erfinv"
  },
  "type": "import"
 },
 "powerlaw.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "powerlaw.exponential_likelihoods": {
  "data": {
   "lineno": 2656,
   "symbols_in_volume": [
    "len",
    "numpy.exp",
    "numpy.tile",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.find_xmin": {
  "data": {
   "lineno": 2478,
   "symbols_in_volume": [
    "all",
    "len",
    "list",
    "map",
    "max",
    "numpy.arange",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.min",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.vstack",
    "power_law_ks_distance",
    "powerlaw.distribution_fit",
    "powerlaw.sys",
    "print",
    "range",
    "sys.float_info.max_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.float_info": {
  "data": {
   "shadows": "sys.float_info"
  },
  "type": "import"
 },
 "powerlaw.floor": {
  "data": {
   "shadows": "numpy.floor"
  },
  "type": "import"
 },
 "powerlaw.fmin": {
  "data": {
   "shadows": "scipy.optimize.fmin"
  },
  "type": "import"
 },
 "powerlaw.frompyfunc": {
  "data": {
   "shadows": "numpy.frompyfunc"
  },
  "type": "import"
 },
 "powerlaw.gamma_likelihoods": {
  "data": {
   "lineno": 2712,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "max",
    "mpmath.gammainc",
    "numpy.arange",
    "numpy.exp",
    "numpy.sum",
    "numpy.tile",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.gammainc": {
  "data": {
   "shadows": "mpmath.gammainc"
  },
  "type": "import"
 },
 "powerlaw.histogram": {
  "data": {
   "shadows": "numpy.histogram"
  },
  "type": "import"
 },
 "powerlaw.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "powerlaw.is_discrete": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "float",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "powerlaw.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "powerlaw.lerchphi": {
  "data": {
   "shadows": "mpmath.lerchphi"
  },
  "type": "import"
 },
 "powerlaw.likelihood_function_generator": {
  "data": {
   "lineno": 2439,
   "symbols_in_volume": [
    "exponential_likelihoods",
    "gamma_likelihoods",
    "likelihood_function",
    "lognormal_likelihoods",
    "negative_binomial_likelihoods",
    "power_law_likelihoods",
    "stretched_exponential_likelihoods",
    "truncated_power_law_likelihoods"
   ]
  },
  "type": "function"
 },
 "powerlaw.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "powerlaw.log10": {
  "data": {
   "shadows": "math.log10"
  },
  "type": "import"
 },
 "powerlaw.loglikelihood_ratio": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "abs",
    "float",
    "len",
    "numpy.asarray",
    "numpy.inf",
    "numpy.log",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.special.erfc",
    "scipy.stats.chi2.cdf",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.lognormal_likelihoods": {
  "data": {
   "lineno": 2778,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "max",
    "numpy.arange",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.tile",
    "scipy.constants.pi",
    "scipy.special.erfc",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.logspace": {
  "data": {
   "shadows": "numpy.logspace"
  },
  "type": "import"
 },
 "powerlaw.masked_array": {
  "data": {
   "shadows": "numpy.ma.masked_array"
  },
  "type": "import"
 },
 "powerlaw.mean": {
  "data": {
   "shadows": "numpy.mean"
  },
  "type": "import"
 },
 "powerlaw.min": {
  "data": {
   "shadows": "numpy.min"
  },
  "type": "import"
 },
 "powerlaw.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "powerlaw.negative_binomial_likelihoods": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "float",
    "list",
    "map",
    "max",
    "numpy.arange",
    "numpy.asarray",
    "numpy.sum",
    "scipy.misc.comb",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.nested_loglikelihood_ratio": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "loglikelihood_ratio"
   ]
  },
  "type": "function"
 },
 "powerlaw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "powerlaw.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "powerlaw.pdf": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "int",
    "math.ceil",
    "math.log10",
    "max",
    "numpy.asarray",
    "numpy.floor",
    "numpy.histogram",
    "numpy.logspace",
    "numpy.min",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "powerlaw.pi": {
  "data": {
   "shadows": "scipy.constants.pi"
  },
  "type": "import"
 },
 "powerlaw.plot_ccdf": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "plot_cdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.plot_cdf": {
  "data": {
   "lineno": 2025,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.plot",
    "powerlaw.cdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.plot_pdf": {
  "data": {
   "lineno": 2054,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.plot",
    "numpy.nan",
    "powerlaw.pdf"
   ]
  },
  "type": "function"
 },
 "powerlaw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "powerlaw.power_law_ks_distance": {
  "data": {
   "lineno": 2554,
   "symbols_in_volume": [
    "all",
    "float",
    "len",
    "max",
    "numpy.arange",
    "numpy.mean",
    "numpy.sort",
    "powerlaw.cumulative_distribution_function",
    "scipy.special.zeta"
   ]
  },
  "type": "function"
 },
 "powerlaw.power_law_likelihoods": {
  "data": {
   "lineno": 2595,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.tile",
    "scipy.special.zeta",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "powerlaw.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "powerlaw.searchsorted": {
  "data": {
   "shadows": "numpy.searchsorted"
  },
  "type": "import"
 },
 "powerlaw.sort": {
  "data": {
   "shadows": "numpy.sort"
  },
  "type": "import"
 },
 "powerlaw.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "powerlaw.ss": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "powerlaw.std": {
  "data": {
   "shadows": "numpy.std"
  },
  "type": "import"
 },
 "powerlaw.stretched_exponential_likelihoods": {
  "data": {
   "lineno": 2683,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "numpy.arange",
    "numpy.exp",
    "numpy.sum",
    "numpy.tile",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "powerlaw.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "powerlaw.tile": {
  "data": {
   "shadows": "numpy.tile"
  },
  "type": "import"
 },
 "powerlaw.trim_to_range": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "powerlaw.truncated_power_law_likelihoods": {
  "data": {
   "lineno": 2744,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "max",
    "mpmath.gammainc",
    "numpy.arange",
    "numpy.exp",
    "numpy.sum",
    "numpy.tile",
    "sys.float_info.min_10_exp"
   ]
  },
  "type": "function"
 },
 "powerlaw.unique": {
  "data": {
   "shadows": "numpy.unique"
  },
  "type": "import"
 },
 "powerlaw.vectorize": {
  "data": {
   "shadows": "numpy.vectorize"
  },
  "type": "import"
 },
 "powerlaw.vstack": {
  "data": {
   "shadows": "numpy.vstack"
  },
  "type": "import"
 },
 "powerlaw.zeta": {
  "data": {
   "shadows": "scipy.special.zeta"
  },
  "type": "import"
 }
}