{
 "nlp_primitives": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.conftest.add_primitives": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "nlp_primitives.conftest.universal_sentence_encoder": {
  "lineno": 6,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "nlp_primitives.diversity_score": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.diversity_score.DiversityScore": {
  "lineno": 9,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.diversity_score.DiversityScore.get_function": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.diversity_score.DiversityScore.get_function.diversity_score": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "nlp_primitives.lsa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.lsa.LSA": {
  "lineno": 14,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.lsa.LSA.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "nltk.corpus.brown.sents",
   "nltk.download",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "nlp_primitives.lsa.LSA.get_function": {
  "lineno": 65,
  "symbols_in_volume": [
   "nltk.tokenize.treebank.TreebankWordDetokenizer"
  ],
  "type": "function"
 },
 "nlp_primitives.lsa.LSA.get_function.lsa": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "nlp_primitives.mean_characters_per_word": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.mean_characters_per_word.MeanCharactersPerWord": {
  "lineno": 9,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.mean_characters_per_word.MeanCharactersPerWord.get_function": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.mean_characters_per_word.MeanCharactersPerWord.get_function.mean_characters_per_word": {
  "lineno": 31,
  "symbols_in_volume": [
   "re.compile",
   "re.escape"
  ],
  "type": "function"
 },
 "nlp_primitives.part_of_speech_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount": {
  "lineno": 10,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount.get_function": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount.get_function.part_of_speech_count": {
  "lineno": 40,
  "symbols_in_volume": [
   "nltk.FreqDist",
   "nltk.download",
   "nltk.pos_tag",
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "nlp_primitives.polarity_score": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.polarity_score.PolarityScore": {
  "lineno": 12,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.polarity_score.PolarityScore.get_function": {
  "lineno": 31,
  "symbols_in_volume": [
   "nltk.tokenize.treebank.TreebankWordDetokenizer"
  ],
  "type": "function"
 },
 "nlp_primitives.polarity_score.PolarityScore.get_function.polarity_score": {
  "lineno": 34,
  "symbols_in_volume": [
   "nltk.download",
   "nltk.sentiment.vader.SentimentIntensityAnalyzer",
   "numpy.nan",
   "pandas.Series",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "nlp_primitives.polarity_score.PolarityScore.get_function.polarity_score.vader_pol": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.punctuation_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.punctuation_count.PunctuationCount": {
  "lineno": 11,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.punctuation_count.PunctuationCount.get_function": {
  "lineno": 33,
  "symbols_in_volume": [
   "re.escape",
   "string.punctuation"
  ],
  "type": "function"
 },
 "nlp_primitives.punctuation_count.PunctuationCount.get_function.punctuation_count": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "nlp_primitives.stopword_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.stopword_count.StopwordCount": {
  "lineno": 9,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.stopword_count.StopwordCount.get_function": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.stopword_count.StopwordCount.get_function.stopword_count": {
  "lineno": 32,
  "symbols_in_volume": [
   "nltk.corpus.stopwords.words",
   "nltk.download",
   "nltk.tokenize.word_tokenize",
   "numpy.nan",
   "pandas.Series",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "nlp_primitives.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_diversity_score": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore.test_nan": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore.test_primitive_func_1": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore.test_with_featuretools": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_lsa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_lsa.TestLSA": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_lsa.TestLSA.test_nan": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.nan",
   "numpy.testing.assert_array_almost_equal",
   "pandas.Series"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_lsa.TestLSA.test_strings": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.testing.assert_array_almost_equal",
   "pandas.Series"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_lsa.TestLSA.test_with_featuretools": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_multiline": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_nans": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_punctuation": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_sentences": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_with_featuretools": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_part_of_speech_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount.test_nan": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount.test_strings": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount.test_with_featuretools": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_polarity_score": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore.test_nan": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore.test_primitive_func_1": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore.test_with_featuretools": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_multiline": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_nan": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_punctuation": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_with_featuretools": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_stopword_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount.test_nan": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount.test_strings": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount.test_with_featuretools": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_title_word_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount.test_nan": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount.test_strings": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount.test_with_featuretools": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.mock_remove_tensorflow": {
  "lineno": 28,
  "symbols_in_volume": [
   "pytest.fixture",
   "sys.modules"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_feature_serialization": {
  "lineno": 62,
  "symbols_in_volume": [
   "featuretools.EntitySet",
   "featuretools.calculate_feature_matrix",
   "featuretools.dfs",
   "featuretools.load_features",
   "featuretools.save_features",
   "featuretools.variable_types.Text",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_primitive_serialization": {
  "lineno": 44,
  "symbols_in_volume": [
   "featuretools.primitives.utils.PrimitivesDeserializer",
   "featuretools.primitives.utils.serialize_primitive",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_regular": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_without_tensorflow": {
  "lineno": 37,
  "symbols_in_volume": [
   "nlp_primitives.UniversalSentenceEncoder",
   "pytest.raises"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_upper_case_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount.test_nan": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount.test_strings": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount.test_with_featuretools": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.title_word_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.title_word_count.TitleWordCount": {
  "lineno": 7,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.title_word_count.TitleWordCount.get_function": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.title_word_count.TitleWordCount.get_function.title_word_count": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "nlp_primitives.universal_sentence_encoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder": {
  "lineno": 6,
  "symbols_in_volume": [
   "featuretools.primitives.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "featuretools.utils.gen_utils.import_or_raise"
  ],
  "type": "function"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder.get_function": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder.get_function.universal_sentence_encoder": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.upper_case_count": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.upper_case_count.UpperCaseCount": {
  "lineno": 7,
  "symbols_in_volume": [
   "featuretools.primitives.base.TransformPrimitive",
   "featuretools.variable_types.Numeric",
   "featuretools.variable_types.Text"
  ],
  "type": "class"
 },
 "nlp_primitives.upper_case_count.UpperCaseCount.get_function": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.upper_case_count.UpperCaseCount.get_function.upper_case_count": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "nlp_primitives.utilities": {
  "lineno": null,
  "symbols_in_volume": [
   "nltk.WordNetLemmatizer"
  ],
  "type": "module"
 },
 "nlp_primitives.utilities.clean_tokens": {
  "lineno": 9,
  "symbols_in_volume": [
   "nltk.corpus.stopwords.words",
   "nltk.download",
   "nltk.tokenize.word_tokenize",
   "re.search",
   "string.punctuation"
  ],
  "type": "function"
 },
 "nlp_primitives.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nlp_primitives.utils.PrimitiveT": {
  "lineno": 16,
  "symbols_in_volume": [
   "featuretools.primitives.Absolute"
  ],
  "type": "class"
 },
 "nlp_primitives.utils.PrimitiveT.es": {
  "lineno": 19,
  "symbols_in_volume": [
   "featuretools.tests.testing_utils.make_ecommerce_entityset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "nlp_primitives.utils.PrimitiveT.test_arg_init": {
  "lineno": 41,
  "symbols_in_volume": [
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "nlp_primitives.utils.PrimitiveT.test_name_and_desc": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.utils.PrimitiveT.test_not_duplicate_of_default": {
  "lineno": 35,
  "symbols_in_volume": [
   "featuretools.list_primitives"
  ],
  "type": "function"
 },
 "nlp_primitives.utils.convert": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.utils.find_applicable_primitives": {
  "lineno": 55,
  "symbols_in_volume": [
   "featuretools.primitives.utils.get_aggregation_primitives",
   "featuretools.primitives.utils.get_transform_primitives"
  ],
  "type": "function"
 },
 "nlp_primitives.utils.find_stackable_primitives": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nlp_primitives.utils.valid_dfs": {
  "lineno": 81,
  "symbols_in_volume": [
   "featuretools.calculate_feature_matrix",
   "featuretools.dfs",
   "featuretools.encode_features"
  ],
  "type": "function"
 }
}