{
 "nlp_primitives": {
  "data": {
   "symbols_in_volume": [
    "nlp_primitives.nltk_data_path",
    "nlp_primitives.pkg_resources"
   ]
  },
  "type": "module"
 },
 "nlp_primitives.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "nlp_primitives.diversity_score": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.diversity_score.DiversityScore": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.diversity_score.DiversityScore.get_function": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "nlp_primitives.diversity_score.DiversityScore.get_function.diversity_score": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "clean_tokens",
    "float",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull",
    "set"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.diversity_score.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.diversity_score.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.diversity_score.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.diversity_score.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.diversity_score.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.lsa": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.lsa.LSA": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.lsa.LSA.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "nlp_primitives.lsa.nltk",
    "sklearn.decomposition.TruncatedSVD",
    "sklearn.feature_extraction.text.TfidfVectorizer",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.lsa.LSA.get_function": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "nltk.tokenize.treebank.TreebankWordDetokenizer"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.lsa.LSA.get_function.lsa": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "clean_tokens",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.lsa.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.TfidfVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.TfidfVectorizer"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.TreebankWordDetokenizer": {
  "data": {
   "shadows": "nltk.tokenize.treebank.TreebankWordDetokenizer"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.TruncatedSVD": {
  "data": {
   "shadows": "sklearn.decomposition.TruncatedSVD"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.nltk": {
  "data": {
   "shadows": "nltk"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.lsa.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.mean_characters_per_word": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.mean_characters_per_word.MeanCharactersPerWord": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.mean_characters_per_word.MeanCharactersPerWord.get_function": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "nlp_primitives.mean_characters_per_word.MeanCharactersPerWord.get_function.mean_characters_per_word": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nlp_primitives.mean_characters_per_word.re"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.mean_characters_per_word.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.mean_characters_per_word.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.mean_characters_per_word.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.mean_characters_per_word.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nlp_primitives.nltk.data": {
  "data": {
   "shadows": "nltk.data"
  },
  "type": "import"
 },
 "nlp_primitives.nltk_data_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "nlp_primitives.part_of_speech_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.part_of_speech_count.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.part_of_speech_count.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount.get_function": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "nlp_primitives.part_of_speech_count.PartOfSpeechCount.get_function.part_of_speech_count": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "clean_tokens",
    "float",
    "nlp_primitives.part_of_speech_count.nltk",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.part_of_speech_count.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.part_of_speech_count.nltk": {
  "data": {
   "shadows": "nltk"
  },
  "type": "import"
 },
 "nlp_primitives.part_of_speech_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.part_of_speech_count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "nlp_primitives.polarity_score": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.polarity_score.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.polarity_score.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.polarity_score.PolarityScore": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.polarity_score.PolarityScore.get_function": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nltk.tokenize.treebank.TreebankWordDetokenizer"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.polarity_score.PolarityScore.get_function.polarity_score": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "clean_tokens",
    "len",
    "nltk.sentiment.vader.SentimentIntensityAnalyzer",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull",
    "vader_pol"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.polarity_score.PolarityScore.get_function.polarity_score.vader_pol": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "nlp_primitives.polarity_score.SentimentIntensityAnalyzer": {
  "data": {
   "shadows": "nltk.sentiment.vader.SentimentIntensityAnalyzer"
  },
  "type": "import"
 },
 "nlp_primitives.polarity_score.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.polarity_score.TreebankWordDetokenizer": {
  "data": {
   "shadows": "nltk.tokenize.treebank.TreebankWordDetokenizer"
  },
  "type": "import"
 },
 "nlp_primitives.polarity_score.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.polarity_score.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.punctuation_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.punctuation_count.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.punctuation_count.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.punctuation_count.PunctuationCount": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.punctuation_count.PunctuationCount.get_function": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nlp_primitives.punctuation_count.re",
    "nlp_primitives.punctuation_count.string"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.punctuation_count.PunctuationCount.get_function.punctuation_count": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "float",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.punctuation_count.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.punctuation_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.punctuation_count.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nlp_primitives.punctuation_count.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "nlp_primitives.stopword_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.stopword_count.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.stopword_count.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.stopword_count.StopwordCount": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.stopword_count.StopwordCount.get_function": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "nlp_primitives.stopword_count.StopwordCount.get_function.stopword_count": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "nlp_primitives.stopword_count.nltk",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull",
    "set",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.stopword_count.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.stopword_count.nltk": {
  "data": {
   "shadows": "nltk"
  },
  "type": "import"
 },
 "nlp_primitives.stopword_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.stopword_count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.conftest.UniversalSentenceEncoder": {
  "data": {
   "shadows": "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder"
  },
  "type": "import"
 },
 "nlp_primitives.tests.conftest.add_primitives": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "nlp_primitives.tests.conftest.pytest",
    "nlp_primitives.tests.conftest.universal_sentence_encoder"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "nlp_primitives.tests.conftest.universal_sentence_encoder": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "nlp_primitives.tests.conftest.pytest",
    "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_diversity_score": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore.test_nan": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore.test_primitive_func_1": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_diversity_score.TestDiversityScore.test_with_featuretools": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_diversity_score.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_diversity_score.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_lsa": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_lsa.TestLSA": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_lsa.TestLSA.test_nan": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal",
    "pandas.Series",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_lsa.TestLSA.test_strings": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.testing.assert_array_almost_equal",
    "pandas.Series",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_lsa.TestLSA.test_with_featuretools": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_lsa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_lsa.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_mean_characters_per_word": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_multiline": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_nans": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_punctuation": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_sentences": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.TestMeanCharactersPerWord.test_with_featuretools": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_mean_characters_per_word.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_part_of_speech_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount.test_nan": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount.test_strings": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_part_of_speech_count.TestPartOfSpeechCount.test_with_featuretools": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_part_of_speech_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_part_of_speech_count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_polarity_score": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore.test_nan": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore.test_primitive_func_1": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_polarity_score.TestPolarityScore.test_with_featuretools": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_polarity_score.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_polarity_score.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_punctuation_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_multiline": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_nan": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_punctuation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count.TestPunctuationCount.test_with_featuretools": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_punctuation_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_punctuation_count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_stopword_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount.test_nan": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount.test_strings": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_stopword_count.TestStopwordCount.test_with_featuretools": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_stopword_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_stopword_count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_title_word_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount.test_nan": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount.test_strings": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_title_word_count.TestTitleWordCount.test_with_featuretools": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_title_word_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_title_word_count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.PrimitivesDeserializer": {
  "data": {
   "shadows": "featuretools.primitives.utils.PrimitivesDeserializer"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.UniversalSentenceEncoder": {
  "data": {
   "shadows": "nlp_primitives.UniversalSentenceEncoder"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.ft": {
  "data": {
   "shadows": "featuretools"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.mock_remove_tensorflow": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nlp_primitives.tests.test_universal_sentence_encoder.pytest",
    "nlp_primitives.tests.test_universal_sentence_encoder.sys"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.serialize_primitive": {
  "data": {
   "shadows": "featuretools.primitives.utils.serialize_primitive"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_feature_serialization": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "featuretools.EntitySet",
    "featuretools.calculate_feature_matrix",
    "featuretools.dfs",
    "featuretools.load_features",
    "featuretools.save_features",
    "featuretools.variable_types.NaturalLanguage",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "str",
    "universal_sentence_encoder"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_primitive_serialization": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "deserialized_primitive",
    "featuretools.primitives.utils.PrimitivesDeserializer",
    "featuretools.primitives.utils.serialize_primitive",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "universal_sentence_encoder"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_regular": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "universal_sentence_encoder"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_universal_sentence_encoder.test_without_tensorflow": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ImportError",
    "nlp_primitives.UniversalSentenceEncoder",
    "nlp_primitives.tests.test_universal_sentence_encoder.pytest"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_upper_case_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount.test_nan": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount.test_strings": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "primitive_func"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_upper_case_count.TestUpperCaseCount.test_with_featuretools": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "find_applicable_primitives",
    "valid_dfs"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_upper_case_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_upper_case_count.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "nlp_primitives.tests.test_utils.Absolute": {
  "data": {
   "shadows": "featuretools.primitives.Absolute"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.PrimitiveT": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "featuretools.primitives.Absolute",
    "object"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.tests.test_utils.PrimitiveT.es": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "featuretools.tests.testing_utils.make_ecommerce_entityset",
    "nlp_primitives.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_utils.PrimitiveT.test_arg_init": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "funcsigs.signature",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_utils.PrimitiveT.test_name_and_desc": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_utils.PrimitiveT.test_not_duplicate_of_default": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "featuretools.list_primitives"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_utils.convert": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_utils.dfs": {
  "data": {
   "shadows": "featuretools.dfs"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.find_applicable_primitives": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "featuretools.primitives.utils.get_aggregation_primitives",
    "featuretools.primitives.utils.get_transform_primitives",
    "list",
    "nlp_primitives.tests.test_utils.find_stackable_primitives"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_utils.find_stackable_primitives": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "nlp_primitives.tests.test_utils.ft": {
  "data": {
   "shadows": "featuretools"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.get_aggregation_primitives": {
  "data": {
   "shadows": "featuretools.primitives.utils.get_aggregation_primitives"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.get_transform_primitives": {
  "data": {
   "shadows": "featuretools.primitives.utils.get_transform_primitives"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.list_primitives": {
  "data": {
   "shadows": "featuretools.list_primitives"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.make_ecommerce_entityset": {
  "data": {
   "shadows": "featuretools.tests.testing_utils.make_ecommerce_entityset"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.signature": {
  "data": {
   "shadows": "funcsigs.signature"
  },
  "type": "import"
 },
 "nlp_primitives.tests.test_utils.valid_dfs": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "featuretools.calculate_feature_matrix",
    "featuretools.dfs",
    "featuretools.encode_features",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.title_word_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.title_word_count.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.title_word_count.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.title_word_count.TitleWordCount": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.title_word_count.TitleWordCount.get_function": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "nlp_primitives.title_word_count.TitleWordCount.get_function.title_word_count": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.title_word_count.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.title_word_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.universal_sentence_encoder": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.universal_sentence_encoder.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.universal_sentence_encoder.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.universal_sentence_encoder.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "featuretools.primitives.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "featuretools.utils.gen_utils.import_or_raise"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder.get_function": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "nlp_primitives.universal_sentence_encoder.UniversalSentenceEncoder.get_function.universal_sentence_encoder": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "nlp_primitives.universal_sentence_encoder.import_or_raise": {
  "data": {
   "shadows": "featuretools.utils.gen_utils.import_or_raise"
  },
  "type": "import"
 },
 "nlp_primitives.upper_case_count": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.upper_case_count.NaturalLanguage": {
  "data": {
   "shadows": "featuretools.variable_types.NaturalLanguage"
  },
  "type": "import"
 },
 "nlp_primitives.upper_case_count.Numeric": {
  "data": {
   "shadows": "featuretools.variable_types.Numeric"
  },
  "type": "import"
 },
 "nlp_primitives.upper_case_count.TransformPrimitive": {
  "data": {
   "shadows": "featuretools.primitives.base.TransformPrimitive"
  },
  "type": "import"
 },
 "nlp_primitives.upper_case_count.UpperCaseCount": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "featuretools.primitives.base.TransformPrimitive",
    "featuretools.variable_types.NaturalLanguage",
    "featuretools.variable_types.Numeric"
   ]
  },
  "type": "class"
 },
 "nlp_primitives.upper_case_count.UpperCaseCount.get_function": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "nlp_primitives.upper_case_count.UpperCaseCount.get_function.upper_case_count": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.upper_case_count.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nlp_primitives.utilities": {
  "data": {},
  "type": "module"
 },
 "nlp_primitives.utilities.clean_tokens": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "any",
    "len",
    "map",
    "nlp_primitives.utilities.nltk",
    "nlp_primitives.utilities.string",
    "set",
    "str.isdigit",
    "str.maketrans"
   ]
  },
  "type": "function"
 },
 "nlp_primitives.utilities.nltk": {
  "data": {
   "shadows": "nltk"
  },
  "type": "import"
 },
 "nlp_primitives.utilities.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 }
}