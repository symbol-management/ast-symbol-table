{
 "pymedphys": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1.dcmutilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1.dcmutilities.average_bounding_profiles": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.bounding_vals": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.create_dvh": {
  "lineno": 230,
  "symbols_in_volume": [
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.ylabel",
   "numpy.append",
   "numpy.cumsum",
   "numpy.histogram"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.extract_depth_dose": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.extract_profiles": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.find_dose_within_structure": {
  "lineno": 195,
  "symbols_in_volume": [
   "matplotlib.path.Path",
   "numpy.append",
   "numpy.array",
   "numpy.meshgrid",
   "numpy.swapaxes",
   "numpy.vstack",
   "numpy.where"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.get_index": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.list_structures": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.load_dicom_data": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.load_dose_from_dicom": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.load_xyz_from_dicom": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.nearest_negative": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.copy",
   "numpy.inf"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.pull_structure": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "pymedphys.level1.dcmutilities.pull_structure_by_number": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1.electronfactors._single_calculate_deformability": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.max",
   "scipy.interpolate.SmoothBivariateSpline"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.calculate_deformability": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.shape",
   "numpy.size"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.calculate_length": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.calculate_percent_prediction_differences": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.delete"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.calculate_width": {
  "lineno": 298,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.convert2_ratio_perim_area": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.create_transformed_mesh": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.ceil",
   "numpy.floor",
   "numpy.invert",
   "numpy.isnan",
   "numpy.max",
   "numpy.meshgrid",
   "numpy.min",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.parameterise_insert": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.parameterise_insert_with_visual_alignment": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.search_for_centre_of_largest_bounded_circle": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.hypot",
   "numpy.squeeze",
   "scipy.optimize.basinhopping"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.search_for_centre_of_largest_bounded_circle.minimising_function": {
  "lineno": 273,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.shapely_insert": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.transpose",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.spline_model": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "scipy.interpolate.SmoothBivariateSpline"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.spline_model_with_deformability": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.visual_alignment_of_equivalent_ellipse": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.pi",
   "numpy.squeeze",
   "scipy.optimize.basinhopping",
   "shapely.affinity.scale",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "pymedphys.level1.electronfactors.visual_alignment_of_equivalent_ellipse.minimising_function": {
  "lineno": 336,
  "symbols_in_volume": [
   "shapely.affinity.rotate",
   "shapely.affinity.translate"
  ],
  "type": "function"
 },
 "pymedphys.level1.msqconnect": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1.msqconnect.execute_sql": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.mosaiq_connect": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pymedphys.level1.msqconnect.mosaiq_connect.__enter__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.mosaiq_connect.__exit__": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.mosaiq_connect.__init__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.multi_close": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.multi_connect": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.multi_mosaiq_connect": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pymedphys.level1.msqconnect.multi_mosaiq_connect.__enter__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.multi_mosaiq_connect.__exit__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.multi_mosaiq_connect.__init__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.single_close": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.single_connect": {
  "lineno": 61,
  "symbols_in_volume": [
   "getpass.getpass",
   "keyring.get_password",
   "keyring.set_password",
   "pymssql.connect"
  ],
  "type": "function"
 },
 "pymedphys.level1.msqconnect.sql_connection": {
  "lineno": 121,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1.mudensity.calc_a_single_blocked_fraction": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.copy",
   "numpy.isnan",
   "numpy.nan",
   "numpy.ones",
   "numpy.shape"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.calc_blocked_fraction": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.expand_dims",
   "numpy.max",
   "psutil.virtual_memory"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.calc_jaw_blocked_fraction": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.calc_leaf_blocked_fraction_define_subset": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.mudensity.calc_leaf_blocked_fractions": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.mudensity.calc_max_index": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level1.mudensity.calc_mu_density": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.floor",
   "numpy.ix_",
   "numpy.where",
   "numpy.zeros_like",
   "psutil.virtual_memory"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.calc_mu_density_over_slice": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.determine_calc_grid_and_adjustments": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.argmin",
   "numpy.ceil",
   "numpy.floor",
   "numpy.max",
   "numpy.meshgrid",
   "numpy.min",
   "numpy.unique"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.determine_full_grid": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.meshgrid",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.determine_leaf_y": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.determine_leaves_to_be_calced": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.intersect1d",
   "numpy.invert",
   "numpy.max",
   "numpy.min",
   "numpy.unique"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.determine_x_pos_to_be_calced": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.invert",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "pymedphys.level1.mudensity.remove_irrelevant_control_points": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.hstack",
   "numpy.invert"
  ],
  "type": "function"
 },
 "pymedphys.level1.raytracing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1.raytracing.main": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.float32",
   "numpy.float64",
   "numpy.nonzero",
   "numpy.size",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pymedphys.level1.raytracing.main_loop": {
  "lineno": 66,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.array",
   "numpy.float32",
   "numpy.floor",
   "numpy.linalg.norm",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pymedphys.level1.raytracing.onemove_in_cube_true_numba": {
  "lineno": 44,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.abs",
   "numpy.argmin",
   "numpy.floor",
   "numpy.sign",
   "numpy.spacing"
  ],
  "type": "function"
 },
 "pymedphys.level1.trfdecode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level1.trfdecode.DeliveryData": {
  "lineno": 37,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "pymedphys.level1.trfdecode.Header": {
  "lineno": 61,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "pymedphys.level1.trfdecode.hash_file": {
  "lineno": 46,
  "symbols_in_volume": [
   "hashlib.sha1"
  ],
  "type": "function"
 },
 "pymedphys.level2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level2.msqdelivery": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pymedphys.level2.msqdelivery.MultipleMosaiqEntries": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pymedphys.level2.msqdelivery.NoMosaiqEntries": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pymedphys.level2.msqdelivery.OISDeliveryDetails": {
  "lineno": 51,
  "symbols_in_volume": [
   "attr.ib",
   "attr.s"
  ],
  "type": "class"
 },
 "pymedphys.level2.msqdelivery.append_x00_byte_to_all": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.check_all_items_equal_length": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.collimation_to_bipolar_mm": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.convert_angle_to_bipolar": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.argmin",
   "numpy.copy",
   "numpy.invert",
   "numpy.sign",
   "numpy.where"
  ],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.decode_msq_mlc": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.array",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.delivery_data_from_mosaiq": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.diff",
   "numpy.shape",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.delivery_data_sql": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.fetch_and_verify_mosaiq_sql": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.get_field_type": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.get_mosaiq_delivery_details": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.mosaiq_mlc_missing_byte_workaround": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pymedphys.level2.msqdelivery.patient_fields": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 }
}