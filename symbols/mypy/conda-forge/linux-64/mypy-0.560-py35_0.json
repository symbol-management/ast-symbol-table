{
 "mypy": {
  "data": {},
  "type": "module"
 },
 "mypy.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mypy.main.main"
   ]
  },
  "type": "module"
 },
 "mypy.__main__.console_entry": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "mypy.main.main"
   ]
  },
  "type": "function"
 },
 "mypy.__main__.main": {
  "data": {
   "shadows": "mypy.main.main"
  },
  "type": "import"
 },
 "mypy.api": {
  "data": {},
  "type": "module"
 },
 "mypy.api.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.api.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mypy.api.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.api.main": {
  "data": {
   "shadows": "mypy.main.main"
  },
  "type": "import"
 },
 "mypy.api.run": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "SystemExit",
    "int",
    "io.StringIO",
    "mypy.api.sys",
    "mypy.main.main",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.applytype": {
  "data": {},
  "type": "module"
 },
 "mypy.applytype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.applytype.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.applytype.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.applytype.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.applytype.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.applytype.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.applytype.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.applytype.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.applytype.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.applytype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.applytype.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.applytype.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.applytype.apply_generic_arguments": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "all",
    "any",
    "callable",
    "callable.arg_types",
    "callable.copy_modified",
    "callable.ret_type",
    "callable.variables",
    "callable.variables.name",
    "callable.variables.upper_bound",
    "callable.variables.values",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mypy.expandtype.expand_type",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "type",
    "type.values",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.applytype.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.applytype.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.applytype.mypy.subtypes": {
  "data": {
   "shadows": "mypy.subtypes"
  },
  "type": "import"
 },
 "mypy.binder": {
  "data": {
   "symbols_in_volume": [
    "mypy.binder.MYPY",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.types.Type",
    "typing.DefaultDict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.binder.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.binder.Assigns": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mypy.binder.BindableExpression": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mypy.binder.BindableTypes": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mypy.binder.ConditionalTypeBinder": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "mypy.binder.ConditionalTypeBinder.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.binder.DeclarationsFrame",
    "mypy.binder.Frame",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder._add_dependencies": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.subkeys",
    "set",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder._cleanse_key": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "mypy.literals.Key"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder._get": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.literals.Key",
    "mypy.types.Type",
    "range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder._put": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "mypy.literals.Key",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.accumulate_type_assignments": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "collections.defaultdict",
    "contextlib.contextmanager",
    "list"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.allow_jump": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.binder.Frame"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.assign_type": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.binder.BindableTypes",
    "mypy.literals.literal",
    "mypy.nodes.Expression",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.cleanse": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mypy.literals.literal_hash",
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.frame_context": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "bool",
    "contextlib.contextmanager",
    "int",
    "len",
    "mypy.binder.Frame",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.get": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mypy.literals.literal_hash",
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.handle_break": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.handle_continue": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.invalidate_dependencies": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "mypy.binder.BindableExpression",
    "mypy.literals.literal_hash",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.is_unreachable": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "any",
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.most_recent_enclosing_type": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "get_declaration",
    "isinstance",
    "mypy.binder.BindableExpression",
    "mypy.literals.literal_hash",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.pop_frame": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.binder.Frame"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.push_frame": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mypy.binder.Frame"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.put": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "get_declaration",
    "isinstance",
    "mypy.binder.BindableTypes",
    "mypy.literals.literal",
    "mypy.literals.literal_hash",
    "mypy.nodes.Expression",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.top_frame_context": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "len",
    "mypy.binder.Frame",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.unreachable": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "mypy.binder.ConditionalTypeBinder.update_from_options": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "all",
    "any",
    "bool",
    "isinstance",
    "mypy.binder.Frame",
    "mypy.join.join_simple",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "set",
    "type",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.binder.DeclarationsFrame": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.types.Type",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "mypy.binder.DeclarationsFrame.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mypy.binder.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "mypy.binder.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.binder.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.binder.Frame": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "mypy.binder.Frame.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mypy.binder.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.binder.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.binder.Key": {
  "data": {
   "shadows": "mypy.literals.Key"
  },
  "type": "import"
 },
 "mypy.binder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.binder.MYPY": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mypy.binder.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.binder.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.binder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.binder.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.binder.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.binder.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.binder.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.binder.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.binder.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.binder.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.binder.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.binder.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.binder.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.binder.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.binder.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.binder.get_declaration": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "isinstance",
    "mypy.binder.BindableExpression",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.binder.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.binder.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.binder.join_simple": {
  "data": {
   "shadows": "mypy.join.join_simple"
  },
  "type": "import"
 },
 "mypy.binder.literal": {
  "data": {
   "shadows": "mypy.literals.literal"
  },
  "type": "import"
 },
 "mypy.binder.literal_hash": {
  "data": {
   "shadows": "mypy.literals.literal_hash"
  },
  "type": "import"
 },
 "mypy.binder.subkeys": {
  "data": {
   "shadows": "mypy.literals.subkeys"
  },
  "type": "import"
 },
 "mypy.build": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.build.MYPY",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.types.Type",
    "object",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.NamedTuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mypy.build.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "mypy.build.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.build.BuildManager": {
  "data": {
   "lineno": 499
  },
  "type": "class"
 },
 "mypy.build.BuildManager.__init__": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "mypy.build.BuildSourceSet",
    "mypy.build.SavedCache",
    "mypy.build.time",
    "mypy.errors.Errors",
    "mypy.indirection.TypeIndirectionVisitor",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "mypy.report.Reports",
    "mypy.semanal.SemanticAnalyzerPass2",
    "mypy.semanal_pass3.SemanticAnalyzerPass3",
    "set",
    "str",
    "tuple",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.add_stats": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.all_imported_modules_in_file": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "correct_rel_imp",
    "id",
    "id.split",
    "int",
    "isinstance",
    "len",
    "mypy.build.PRI_HIGH",
    "mypy.build.PRI_LOW",
    "mypy.build.PRI_MED",
    "mypy.build.import_priority",
    "mypy.nodes.Import",
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportFrom",
    "mypy.nodes.MypyFile",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.all_imported_modules_in_file.correct_rel_imp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportFrom",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.get_stat": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.is_module": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "bool",
    "find_module",
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.log": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "mypy.build.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.maybe_swap_for_shadow_path": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.module_not_found": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "int",
    "mypy.moduleinfo.is_py2_std_lib_module",
    "mypy.moduleinfo.is_py3_std_lib_module",
    "mypy.moduleinfo.is_third_party_module",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.parse_file": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "bool",
    "id",
    "int",
    "mypy.nodes.MypyFile",
    "mypy.parse.parse",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.report_file": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.stats_summary": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "object",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildManager.trace": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "mypy.build.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildResult": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "mypy.build.BuildResult.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mypy.build.Graph"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildSource": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "mypy.build.BuildSource.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildSource.__repr__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildSourceSet": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "mypy.build.BuildSourceSet.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "set",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.BuildSourceSet.is_source": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.build.CacheMeta": {
  "data": {
   "lineno": 341
  },
  "type": "constant"
 },
 "mypy.build.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.build.ChainedPlugin": {
  "data": {
   "shadows": "mypy.plugin.ChainedPlugin"
  },
  "type": "import"
 },
 "mypy.build.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.build.DecodeError": {
  "data": {
   "shadows": "mypy.errors.DecodeError"
  },
  "type": "import"
 },
 "mypy.build.DefaultPlugin": {
  "data": {
   "shadows": "mypy.plugin.DefaultPlugin"
  },
  "type": "import"
 },
 "mypy.build.Deque": {
  "data": {
   "shadows": "typing.Deque"
  },
  "type": "import"
 },
 "mypy.build.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.build.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.build.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.build.FreshState": {
  "data": {
   "lineno": 2166,
   "symbols_in_volume": [
    "mypy.build.State"
   ]
  },
  "type": "class"
 },
 "mypy.build.Graph": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mypy.build.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.build.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.build.ImportBase": {
  "data": {
   "shadows": "mypy.nodes.ImportBase"
  },
  "type": "import"
 },
 "mypy.build.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.build.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.build.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.build.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.build.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.build.MYPY": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.build.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.build.ModuleNotFound": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.build.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.build.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.build.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.build.NodeInfo": {
  "data": {
   "lineno": 2028
  },
  "type": "class"
 },
 "mypy.build.NodeInfo.__init__": {
  "data": {
   "lineno": 2031,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.NodeInfo.dumps": {
  "data": {
   "lineno": 2037,
   "symbols_in_volume": [
    "mypy.build.json",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mypy.build.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.build.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.build.PRI_ALL": {
  "data": {
   "lineno": 394
  },
  "type": "constant"
 },
 "mypy.build.PRI_HIGH": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "mypy.build.PRI_INDIRECT": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "mypy.build.PRI_LOW": {
  "data": {
   "lineno": 391
  },
  "type": "constant"
 },
 "mypy.build.PRI_MED": {
  "data": {
   "lineno": 390
  },
  "type": "constant"
 },
 "mypy.build.PRI_MYPY": {
  "data": {
   "lineno": 392
  },
  "type": "constant"
 },
 "mypy.build.PYTHON3_VERSION_MIN": {
  "data": {
   "shadows": "mypy.defaults.PYTHON3_VERSION_MIN"
  },
  "type": "import"
 },
 "mypy.build.PYTHON_EXTENSIONS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mypy.build.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.build.Reports": {
  "data": {
   "shadows": "mypy.report.Reports"
  },
  "type": "import"
 },
 "mypy.build.SavedCache": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "mypy.build.SemanticAnalyzerPass1": {
  "data": {
   "shadows": "mypy.semanal_pass1.SemanticAnalyzerPass1"
  },
  "type": "import"
 },
 "mypy.build.SemanticAnalyzerPass2": {
  "data": {
   "shadows": "mypy.semanal.SemanticAnalyzerPass2"
  },
  "type": "import"
 },
 "mypy.build.SemanticAnalyzerPass3": {
  "data": {
   "shadows": "mypy.semanal_pass3.SemanticAnalyzerPass3"
  },
  "type": "import"
 },
 "mypy.build.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.build.State": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "mypy.build.State.__init__": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "bool",
    "id",
    "int",
    "len",
    "list",
    "mypy.build.BuildManager",
    "mypy.build.ModuleNotFound",
    "mypy.build.State",
    "mypy.build.find_cache_meta",
    "mypy.build.find_module",
    "mypy.build.validate_meta",
    "mypy.errors.CompileError",
    "set",
    "str",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.build.State._patch_indirect_dependencies": {
  "data": {
   "lineno": 1914,
   "symbols_in_volume": [
    "mypy.build.PRI_INDIRECT",
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.add_ancestors": {
  "data": {
   "lineno": 1620
  },
  "type": "function"
 },
 "mypy.build.State.calculate_mros": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "mypy.fixup.fixup_module_pass_two"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.check_blockers": {
  "data": {
   "lineno": 1664
  },
  "type": "function"
 },
 "mypy.build.State.dependency_priorities": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "int",
    "mypy.build.PRI_HIGH",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.finish_passes": {
  "data": {
   "lineno": 1895,
   "symbols_in_volume": [
    "mypy.stats.dump_type_stats"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.fix_cross_refs": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "mypy.fixup.fixup_module_pass_one"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.fix_suppressed_dependencies": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "mypy.build.Graph"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.has_new_submodules": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": [
    "bool",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.is_fresh": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "bool",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.is_interface_fresh": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.load_tree": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "mypy.build.json",
    "mypy.nodes.MypyFile.deserialize",
    "open"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.mark_as_rechecked": {
  "data": {
   "lineno": 1654
  },
  "type": "function"
 },
 "mypy.build.State.mark_interface_stale": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.parse_file": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "IOError",
    "UnicodeDecodeError",
    "id",
    "min",
    "mypy.build.PRI_ALL",
    "mypy.build.read_with_python_encoding",
    "mypy.errors.CompileError",
    "mypy.errors.DecodeError",
    "mypy.semanal_pass1.SemanticAnalyzerPass1",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.patch_dependency_parents": {
  "data": {
   "lineno": 1705
  },
  "type": "function"
 },
 "mypy.build.State.semantic_analysis": {
  "data": {
   "lineno": 1851
  },
  "type": "function"
 },
 "mypy.build.State.semantic_analysis_apply_patches": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "patch_func"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.semantic_analysis_pass_three": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": [
    "mypy.stats.dump_type_stats"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.skipping_ancestor": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.skipping_module": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.type_check_first_pass": {
  "data": {
   "lineno": 1872
  },
  "type": "function"
 },
 "mypy.build.State.type_check_second_pass": {
  "data": {
   "lineno": 1889,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.type_checker": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "mypy.checker.TypeChecker"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.type_map": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.valid_references": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.wrap_context": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "Exception",
    "mypy.build.contextlib",
    "mypy.errors.CompileError",
    "mypy.errors.report_internal_error",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.build.State.write_cache": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "list",
    "mypy.build.delete_cache",
    "mypy.build.write_cache"
   ]
  },
  "type": "function"
 },
 "mypy.build.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.build.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.build.TypeChecker": {
  "data": {
   "shadows": "mypy.checker.TypeChecker"
  },
  "type": "import"
 },
 "mypy.build.TypeIndirectionVisitor": {
  "data": {
   "shadows": "mypy.indirection.TypeIndirectionVisitor"
  },
  "type": "import"
 },
 "mypy.build.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.build.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.build.atomic_write": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "bool",
    "mypy.build.random_string",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "mypy.build.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "mypy.build.build": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "BuildManager",
    "default_data_dir",
    "default_lib_path",
    "dir",
    "dispatch",
    "find_module_clear_caches",
    "len",
    "load_plugins",
    "mypy.build.BuildResult",
    "mypy.build.BuildSource",
    "mypy.build.BuildSourceSet",
    "mypy.build.SavedCache",
    "mypy.build.gc",
    "mypy.build.time",
    "mypy.errors.Errors",
    "mypy.options.Options",
    "mypy.report.Reports",
    "mypy.version.__version__",
    "mypy_path",
    "os.path.dirname",
    "remove_cwd_prefix_from_path",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.cache_meta_from_dict": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "int",
    "mypy.build.CacheMeta",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.build.can_reuse_in_memory_tree": {
  "data": {
   "lineno": 2422,
   "symbols_in_volume": [
    "all",
    "bool",
    "id",
    "id.dependencies",
    "mypy.build.BuildManager",
    "mypy.build.Graph",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.build.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mypy.build.compute_hash": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "mypy.build.hashlib",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "mypy.build.default_data_dir": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "dir",
    "dir.endswith",
    "distutils.sysconfig.get_python_lib",
    "mypy.build.site",
    "mypy.build.sys",
    "range",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.default_lib_path": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "int",
    "mypy.build.sys",
    "mypy.defaults.PYTHON3_VERSION_MIN",
    "print",
    "range",
    "reversed",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.build.delete_cache": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "OSError",
    "id",
    "mypy.build.BuildManager",
    "mypy.build.errno",
    "mypy.build.get_cache_names",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.deps_filtered": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "id",
    "int",
    "mypy.build.Graph",
    "mypy.build.PRI_HIGH",
    "str",
    "typing.AbstractSet",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mypy.build.dispatch": {
  "data": {
   "lineno": 1973,
   "symbols_in_volume": [
    "dump_graph",
    "len",
    "load_graph",
    "mypy.build.BuildManager",
    "mypy.build.BuildSource",
    "mypy.build.Graph",
    "mypy.build.find_module_cache",
    "mypy.build.find_module_dir_cache",
    "mypy.build.find_module_is_file_cache",
    "mypy.build.find_module_isdir_cache",
    "mypy.build.find_module_listdir_cache",
    "mypy.build.time",
    "mypy.server.deps.dump_all_dependencies",
    "mypy.version.__version__",
    "preserve_cache",
    "print",
    "process_graph",
    "set",
    "sum",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.dump_all_dependencies": {
  "data": {
   "shadows": "mypy.server.deps.dump_all_dependencies"
  },
  "type": "import"
 },
 "mypy.build.dump_graph": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "enumerate",
    "mypy.build.Graph",
    "mypy.build.NodeInfo",
    "order_ascc",
    "print",
    "sorted_components"
   ]
  },
  "type": "function"
 },
 "mypy.build.dump_type_stats": {
  "data": {
   "shadows": "mypy.stats.dump_type_stats"
  },
  "type": "import"
 },
 "mypy.build.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "mypy.build.find_cache_meta": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "id",
    "isinstance",
    "len",
    "mypy.build.BuildManager",
    "mypy.build.CacheMeta",
    "mypy.build.cache_meta_from_dict",
    "mypy.build.get_cache_names",
    "mypy.build.json",
    "open",
    "repr",
    "set",
    "sorted",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.find_config_file_line_number": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "OSError",
    "enumerate",
    "int",
    "len",
    "mypy.build.re",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.find_module": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "find",
    "id",
    "mypy.build.find_module_cache",
    "str",
    "tuple",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.find_module.find": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "dir",
    "id",
    "id.split",
    "mypy.build.PYTHON_EXTENSIONS",
    "mypy.build.find_module_dir_cache",
    "mypy.build.find_module_isdir_cache",
    "mypy.build.is_file",
    "str",
    "typing.Optional",
    "verify_module"
   ]
  },
  "type": "function"
 },
 "mypy.build.find_module_cache": {
  "data": {
   "lineno": 736
  },
  "type": "constant"
 },
 "mypy.build.find_module_clear_caches": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "mypy.build.find_module_cache",
    "mypy.build.find_module_dir_cache",
    "mypy.build.find_module_is_file_cache",
    "mypy.build.find_module_isdir_cache",
    "mypy.build.find_module_listdir_cache"
   ]
  },
  "type": "function"
 },
 "mypy.build.find_module_dir_cache": {
  "data": {
   "lineno": 742
  },
  "type": "constant"
 },
 "mypy.build.find_module_is_file_cache": {
  "data": {
   "lineno": 752
  },
  "type": "constant"
 },
 "mypy.build.find_module_isdir_cache": {
  "data": {
   "lineno": 755
  },
  "type": "constant"
 },
 "mypy.build.find_module_listdir_cache": {
  "data": {
   "lineno": 749
  },
  "type": "constant"
 },
 "mypy.build.find_modules_recursive": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.find_module",
    "set",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.fixup_module_pass_one": {
  "data": {
   "shadows": "mypy.fixup.fixup_module_pass_one"
  },
  "type": "import"
 },
 "mypy.build.fixup_module_pass_two": {
  "data": {
   "shadows": "mypy.fixup.fixup_module_pass_two"
  },
  "type": "import"
 },
 "mypy.build.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "mypy.build.get_cache_names": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "id.split",
    "mypy.build.BuildManager",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.build.get_python_lib": {
  "data": {
   "shadows": "distutils.sysconfig.get_python_lib"
  },
  "type": "import"
 },
 "mypy.build.getmtime": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mypy.build.import_priority": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "int",
    "max",
    "mypy.build.PRI_LOW",
    "mypy.build.PRI_MYPY",
    "mypy.nodes.ImportBase"
   ]
  },
  "type": "function"
 },
 "mypy.build.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.build.is_file": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "bool",
    "mypy.build.find_module_is_file_cache",
    "mypy.build.list_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.build.list_dir": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "OSError",
    "mypy.build.find_module_listdir_cache",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.load_graph": {
  "data": {
   "lineno": 2084,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildManager",
    "mypy.build.BuildSource",
    "mypy.build.Graph",
    "mypy.build.ModuleNotFound",
    "mypy.build.PRI_INDIRECT",
    "mypy.build.State",
    "mypy.build.collections",
    "set",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.load_plugins": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "Exception",
    "find_config_file_line_number",
    "getattr",
    "hasattr",
    "isinstance",
    "issubclass",
    "mypy.build.importlib",
    "mypy.build.sys",
    "mypy.errors.Errors",
    "mypy.options.Options",
    "mypy.plugin.ChainedPlugin",
    "mypy.plugin.DefaultPlugin",
    "mypy.plugin.Plugin",
    "mypy.version.__version__",
    "plugin_error",
    "plugin_type",
    "plugin_type.__name__",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.build.load_plugins.plugin_error": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.maybe_reuse_in_memory_tree": {
  "data": {
   "lineno": 2376,
   "symbols_in_volume": [
    "bool",
    "can_reuse_in_memory_tree",
    "id",
    "list",
    "mypy.build.BuildManager",
    "mypy.build.Graph",
    "mypy.nodes.MODULE_REF",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.moduleinfo": {
  "data": {
   "shadows": "mypy.moduleinfo"
  },
  "type": "import"
 },
 "mypy.build.mypy_path": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.order_ascc": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "id",
    "id.order",
    "int",
    "len",
    "max",
    "mypy.build.Graph",
    "mypy.build.PRI_ALL",
    "mypy.build.PRI_HIGH",
    "set",
    "sorted",
    "sorted_components",
    "str",
    "typing.AbstractSet",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.build.parse": {
  "data": {
   "shadows": "mypy.parse.parse"
  },
  "type": "import"
 },
 "mypy.build.preserve_cache": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "id",
    "mypy.build.Graph",
    "mypy.build.SavedCache"
   ]
  },
  "type": "function"
 },
 "mypy.build.process_fresh_scc": {
  "data": {
   "lineno": 2359,
   "symbols_in_volume": [
    "id",
    "id.calculate_mros",
    "id.fix_cross_refs",
    "id.load_tree",
    "id.patch_dependency_parents",
    "mypy.build.BuildManager",
    "mypy.build.Graph",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.process_graph": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": [
    "any",
    "id",
    "id.dependencies",
    "id.is_fresh",
    "id.is_interface_fresh",
    "id.meta",
    "id.meta.data_mtime",
    "id.priorities",
    "id.suppressed",
    "id.transitive_error",
    "len",
    "max",
    "maybe_reuse_in_memory_tree",
    "min",
    "mypy.build.BuildManager",
    "mypy.build.FreshState",
    "mypy.build.Graph",
    "order_ascc",
    "process_fresh_scc",
    "process_stale_scc",
    "set",
    "sorted",
    "sorted_components",
    "str",
    "sum",
    "typing.Dict",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.build.process_stale_scc": {
  "data": {
   "lineno": 2441,
   "symbols_in_volume": [
    "any",
    "id",
    "id.calculate_mros",
    "id.finish_passes",
    "id.fix_cross_refs",
    "id.fix_suppressed_dependencies",
    "id.is_fresh",
    "id.load_tree",
    "id.mark_as_rechecked",
    "id.parse_file",
    "id.semantic_analysis",
    "id.semantic_analysis_apply_patches",
    "id.semantic_analysis_pass_three",
    "id.transitive_error",
    "id.type_check_first_pass",
    "id.type_check_second_pass",
    "id.write_cache",
    "id.xpath",
    "mypy.build.BuildManager",
    "mypy.build.Graph",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.build.random_string": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "mypy.build.binascii",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.build.read_with_python_encoding": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "LookupError",
    "bytearray",
    "int",
    "mypy.build.hashlib",
    "mypy.errors.DecodeError",
    "mypy.util.find_python_encoding",
    "open",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.build.remove_cwd_prefix_from_path": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "dir",
    "len",
    "os.path.basename",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.report_internal_error": {
  "data": {
   "shadows": "mypy.errors.report_internal_error"
  },
  "type": "import"
 },
 "mypy.build.site": {
  "data": {
   "shadows": "site"
  },
  "type": "import"
 },
 "mypy.build.sorted_components": {
  "data": {
   "lineno": 2491,
   "symbols_in_volume": [
    "deps_filtered",
    "frozenset",
    "id",
    "id.order",
    "int",
    "list",
    "min",
    "mypy.build.Graph",
    "mypy.build.PRI_ALL",
    "set",
    "sorted",
    "str",
    "strongly_connected_components",
    "topsort",
    "typing.AbstractSet",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mypy.build.strongly_connected_components": {
  "data": {
   "lineno": 2540,
   "symbols_in_volume": [
    "dfs",
    "set",
    "str",
    "typing.AbstractSet",
    "typing.Dict",
    "typing.Iterator",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.build.strongly_connected_components.dfs": {
  "data": {
   "lineno": 2561,
   "symbols_in_volume": [
    "dfs",
    "len",
    "set",
    "str",
    "typing.Iterator",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.build.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.build.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.build.topsort": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": [
    "set",
    "set.union",
    "str",
    "typing.AbstractSet",
    "typing.Dict",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.build.util": {
  "data": {
   "shadows": "mypy.util"
  },
  "type": "import"
 },
 "mypy.build.validate_meta": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "bool",
    "id",
    "int",
    "mypy.build.BuildManager",
    "mypy.build.CacheMeta",
    "mypy.build.atomic_write",
    "mypy.build.get_cache_names",
    "mypy.build.getmtime",
    "mypy.build.hashlib",
    "mypy.build.json",
    "mypy.build.stat",
    "open",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.build.verify_module": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "any",
    "bool",
    "id.count",
    "mypy.build.PYTHON_EXTENSIONS",
    "mypy.build.is_file",
    "os.path.dirname",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.build.write_cache": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "OSError",
    "bool",
    "id",
    "int",
    "mypy.build.BuildManager",
    "mypy.build.CacheMeta",
    "mypy.build.atomic_write",
    "mypy.build.cache_meta_from_dict",
    "mypy.build.compute_hash",
    "mypy.build.get_cache_names",
    "mypy.build.getmtime",
    "mypy.build.json",
    "mypy.nodes.MypyFile",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncDef",
    "mypy.nodes.LambdaExpr",
    "mypy.nodes.MypyFile",
    "mypy.nodes.TypeInfo",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.NamedTuple",
    "typing.Optional",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.checker.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.checker.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.checker.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.checker.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.checker.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.checker.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.checker.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.checker.BreakStmt": {
  "data": {
   "shadows": "mypy.nodes.BreakStmt"
  },
  "type": "import"
 },
 "mypy.checker.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.checker.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.checker.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.checker.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.checker.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.checker.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.checker.CheckerPluginInterface": {
  "data": {
   "shadows": "mypy.plugin.CheckerPluginInterface"
  },
  "type": "import"
 },
 "mypy.checker.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.checker.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.checker.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.checker.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.checker.ConditionalTypeBinder": {
  "data": {
   "shadows": "mypy.binder.ConditionalTypeBinder"
  },
  "type": "import"
 },
 "mypy.checker.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.checker.ContinueStmt": {
  "data": {
   "shadows": "mypy.nodes.ContinueStmt"
  },
  "type": "import"
 },
 "mypy.checker.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.checker.DeferredNode": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mypy.checker.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.checker.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.checker.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.checker.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.checker.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.checker.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.checker.EnumCallExpr": {
  "data": {
   "shadows": "mypy.nodes.EnumCallExpr"
  },
  "type": "import"
 },
 "mypy.checker.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.checker.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.checker.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.checker.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.checker.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.checker.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.checker.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.checker.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.checker.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.checker.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.checker.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.checker.INVARIANT": {
  "data": {
   "shadows": "mypy.nodes.INVARIANT"
  },
  "type": "import"
 },
 "mypy.checker.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.checker.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.checker.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.checker.ImportBase": {
  "data": {
   "shadows": "mypy.nodes.ImportBase"
  },
  "type": "import"
 },
 "mypy.checker.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.checker.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.checker.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.checker.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.checker.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.checker.LAST_PASS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mypy.checker.LITERAL_TYPE": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_TYPE"
  },
  "type": "import"
 },
 "mypy.checker.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.checker.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.checker.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.checker.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.checker.Lvalue": {
  "data": {
   "shadows": "mypy.nodes.Lvalue"
  },
  "type": "import"
 },
 "mypy.checker.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "mypy.checker.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.checker.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.checker.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.checker.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.checker.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.checker.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.checker.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.checker.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.checker.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.checker.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.checker.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.checker.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.checker.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.checker.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.checker.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.checker.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.checker.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.checker.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "mypy.checker.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.checker.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.checker.PromoteExpr": {
  "data": {
   "shadows": "mypy.nodes.PromoteExpr"
  },
  "type": "import"
 },
 "mypy.checker.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.checker.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.checker.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.checker.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.checker.Scope": {
  "data": {
   "lineno": 3461
  },
  "type": "class"
 },
 "mypy.checker.Scope.__init__": {
  "data": {
   "lineno": 3465,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Scope.active_class": {
  "data": {
   "lineno": 3480,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.TypeInfo",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Scope.active_self_type": {
  "data": {
   "lineno": 3495,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.typevars.fill_typevars",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Scope.enclosing_class": {
  "data": {
   "lineno": 3485,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.TypeInfo",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Scope.push_class": {
  "data": {
   "lineno": 3507,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mypy.nodes.TypeInfo",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Scope.push_function": {
  "data": {
   "lineno": 3501,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mypy.nodes.FuncItem",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Scope.top_function": {
  "data": {
   "lineno": 3468,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncItem",
    "reversed",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Scope.top_non_lambda_function": {
  "data": {
   "lineno": 3474,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncItem",
    "mypy.nodes.LambdaExpr",
    "reversed",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.checker.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.checker.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.checker.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.checker.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.checker.Statement": {
  "data": {
   "shadows": "mypy.nodes.Statement"
  },
  "type": "import"
 },
 "mypy.checker.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.checker.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.checker.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.checker.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.checker.T": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mypy.checker.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.checker.TransformVisitor": {
  "data": {
   "shadows": "mypy.treetransform.TransformVisitor"
  },
  "type": "import"
 },
 "mypy.checker.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.checker.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.checker.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.checker.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.checker.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.checker.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.checker.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.checker.TypeChecker": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "globals",
    "mypy.plugin.CheckerPluginInterface",
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.checker.TypeChecker.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Scope",
    "any",
    "mypy.binder.ConditionalTypeBinder",
    "mypy.checker.fnmatch",
    "mypy.errors.Errors",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.accept": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "Exception",
    "mypy.errors.report_internal_error",
    "mypy.nodes.Statement"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.accept_loop": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.Statement",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.analyze_async_iterable_item_type": {
  "data": {
   "lineno": 2422,
   "symbols_in_volume": [
    "mypy.messages.ASYNC_ITERABLE_EXPECTED",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_ASYNC_FOR",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.analyze_index_variables": {
  "data": {
   "lineno": 2467,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.analyze_iterable_item_type": {
  "data": {
   "lineno": 2439,
   "symbols_in_volume": [
    "isinstance",
    "mypy.join.join_types",
    "mypy.messages.ITERABLE_EXPECTED",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_assignment": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "bool",
    "is_literal_none",
    "is_valid_inferred_type",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.Lvalue",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.Var",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.PartialType",
    "mypy.types.TypeType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_assignment_to_multiple_lvalues": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.Lvalue",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr",
    "next",
    "typing.List",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_async_with_item": {
  "data": {
   "lineno": 2560,
   "symbols_in_volume": [
    "bool",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AENTER",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AEXIT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_compatibility": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkmember.bind_self",
    "mypy.nodes.Context",
    "mypy.nodes.FuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.subtypes.is_equivalent",
    "mypy.subtypes.is_subtype",
    "mypy.types.FunctionLike",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_compatibility_all_supers": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.Expression",
    "mypy.nodes.MDEF",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_compatibility_classvar_super": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Node",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_compatibility_super": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "bool",
    "is_node_static",
    "isinstance",
    "mypy.checkmember.bind_self",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_ASSIGNMENT",
    "mypy.nodes.Decorator",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Node",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_except_handler_test": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.INVALID_EXCEPTION_TYPE",
    "mypy.nodes.Expression",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_first_pass": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.experiments.strict_optional_set",
    "mypy.messages.ALL_MUST_BE_SEQ_STR.format",
    "mypy.subtypes.is_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_for_missing_annotations": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "any",
    "is_unannotated_any",
    "isinstance",
    "mypy.messages.ARGUMENT_TYPE_EXPECTED",
    "mypy.messages.FUNCTION_TYPE_EXPECTED",
    "mypy.messages.RETURN_TYPE_EXPECTED",
    "mypy.nodes.FuncItem",
    "mypy.types.CallableType",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_for_missing_annotations.is_unannotated_any": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_for_untyped_decorator": {
  "data": {
   "lineno": 2523,
   "symbols_in_volume": [
    "is_typed_callable",
    "is_untyped_decorator",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncDef",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_func_def": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "mypy.binder.ConditionalTypeBinder",
    "mypy.checkmember.erase_to_bound",
    "mypy.messages.FUNCTION_PARAMETER_CANNOT_BE_COVARIANT",
    "mypy.messages.INVALID_GENERATOR_RETURN_ITEM_TYPE",
    "mypy.messages.INVALID_IMPLICIT_RETURN",
    "mypy.messages.INVALID_RETURN_TYPE_FOR_ASYNC_GENERATOR",
    "mypy.messages.INVALID_RETURN_TYPE_FOR_GENERATOR",
    "mypy.messages.MISSING_RETURN_STATEMENT",
    "mypy.messages.MUST_HAVE_NONE_RETURN_TYPE.format",
    "mypy.messages.RETURN_TYPE_CANNOT_BE_CONTRAVARIANT",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.FuncDef",
    "mypy.nodes.FuncItem",
    "mypy.nodes.reverse_op_method_set",
    "mypy.sametypes.is_same_type",
    "mypy.subtypes.is_subtype_ignoring_tvars",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TypeVarType",
    "mypy.types.UninhabitedType",
    "mypy.types.is_named_instance",
    "range",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_func_item": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.FuncItem",
    "mypy.types.CallableType",
    "nothing",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_getattr_method": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_import": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "mypy.messages.INCOMPATIBLE_IMPORT_OF",
    "mypy.nodes.ImportBase",
    "mypy.nodes.NameExpr",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_incompatible_property_override": {
  "data": {
   "lineno": 2532,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.READ_ONLY_PROPERTY_OVERRIDES_READ_WRITE",
    "mypy.nodes.Decorator",
    "mypy.nodes.OverloadedFuncDef",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_indexed_assignment": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_inplace_operator_method": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "is_more_general_arg_prefix",
    "isinstance",
    "mypy.checkmember.bind_self",
    "mypy.nodes.FuncBase",
    "mypy.nodes.inplace_operator_methods",
    "mypy.types.FunctionLike",
    "mypy.typevars.fill_typevars"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_lvalue": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.Lvalue",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.Var",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "typing.Optional",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_member_assignment": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.checkmember.bind_self",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.TempNode",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeType",
    "mypy.types.function_type",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_method_or_accessor_override_for_base": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncBase",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.inplace_operator_methods",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_method_override": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncBase",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_method_override_for_base_with_name": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "is_static",
    "isinstance",
    "mypy.checkmember.bind_self",
    "mypy.checkmember.map_type_from_supertype",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncBase",
    "mypy.nodes.FuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.subtypes.is_equivalent",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "str",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_multi_assignment": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.Lvalue",
    "mypy.nodes.StarExpr",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.UnionType",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_multi_assignment_from_iterable": {
  "data": {
   "lineno": 1825,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.Lvalue",
    "mypy.nodes.StarExpr",
    "mypy.types.Instance",
    "mypy.types.Type",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_multi_assignment_from_tuple": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.Lvalue",
    "mypy.nodes.StarExpr",
    "mypy.types.TupleType",
    "mypy.types.UnionType",
    "next",
    "typing.List",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_multi_assignment_from_union": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.StarExpr",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union",
    "tuple",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_multiple_inheritance": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_overlapping_op_methods": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "is_unsafe_overlapping_signatures",
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.union_items",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_overlapping_overloads": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "enumerate",
    "is_unsafe_overlapping_signatures",
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.subtypes.is_callable_subtype",
    "mypy.subtypes.is_subtype",
    "mypy.subtypes.unify_generic_callable",
    "mypy.types.AnyType",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_override": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "erase_override",
    "isinstance",
    "len",
    "mypy.nodes.Context",
    "mypy.nodes.FuncItem",
    "mypy.nodes.reverse_op_methods.keys",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Overloaded",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_override.erase_override": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "mypy.erasetype.erase_typevars",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_partial": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.LambdaExpr",
    "mypy.nodes.MypyFile",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_protocol_variance": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "enumerate",
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.ClassDef",
    "mypy.nodes.INVARIANT",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_return_stmt": {
  "data": {
   "lineno": 2104,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.INCOMPATIBLE_RETURN_VALUE_TYPE",
    "mypy.messages.NO_RETURN_EXPECTED",
    "mypy.messages.NO_RETURN_VALUE_EXPECTED",
    "mypy.messages.RETURN_VALUE_EXPECTED",
    "mypy.nodes.LambdaExpr",
    "mypy.nodes.ReturnStmt",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_reverse_op_method": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.nodes.FuncItem",
    "mypy.nodes.normal_from_reverse_op",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_rvalue_count_in_assignment": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "any",
    "bool",
    "int",
    "isinstance",
    "len",
    "mypy.nodes.Context",
    "mypy.nodes.Lvalue",
    "mypy.nodes.StarExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_second_pass": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bool",
    "mypy.checker.DeferredNode",
    "mypy.experiments.strict_optional_set",
    "nothing",
    "set",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_setattr_method": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_simple_assignment": {
  "data": {
   "lineno": 1967,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_ASSIGNMENT",
    "mypy.nodes.Context",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.DeletedType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_subtype": {
  "data": {
   "lineno": 2608,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.messages.INCOMPATIBLE_TYPES",
    "mypy.messages.make_inferred_type_note",
    "mypy.nodes.Context",
    "mypy.subtypes.find_member",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_top_level": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_untyped_after_decorator": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.check_with_item": {
  "data": {
   "lineno": 2576,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.contains_none": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.enter_attribute_inference_context": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.enter_partial_types": {
  "data": {
   "lineno": 2743,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "isinstance",
    "mypy.messages.NEED_ANNOTATION_FOR_VAR",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.PartialType",
    "mypy.types.TypeOfAny.from_error",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.expand_typevars": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "dict",
    "expand_func",
    "mypy.checker.itertools",
    "mypy.expandtype.expand_type",
    "mypy.nodes.FuncItem",
    "mypy.types.CallableType",
    "typing.List",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.fail": {
  "data": {
   "lineno": 2778,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.find_isinstance_check": {
  "data": {
   "lineno": 2811,
   "symbols_in_volume": [
    "find_isinstance_check",
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.find_partial_types": {
  "data": {
   "lineno": 2765,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.Var",
    "reversed",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.flatten_lvalues": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.function_type": {
  "data": {
   "lineno": 2808,
   "symbols_in_volume": [
    "mypy.nodes.FuncBase",
    "mypy.types.FunctionLike",
    "mypy.types.function_type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.get_generator_receive_type": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.get_generator_return_type": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.get_generator_yield_type": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.get_types_from_except_handler": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.is_named_instance",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.handle_cannot_determine_type": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checker.DeferredNode",
    "mypy.checker.LAST_PASS",
    "mypy.nodes.Context",
    "mypy.nodes.FuncDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.in_checked_function": {
  "data": {
   "lineno": 2696,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.infer_partial_type": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "mypy.nodes.Lvalue",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.infer_variable_type": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "is_valid_inferred_type",
    "isinstance",
    "mypy.messages.NEED_ANNOTATION_FOR_VAR",
    "mypy.nodes.Context",
    "mypy.nodes.Lvalue",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.Var",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.DeletedType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.strip_type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.is_async_generator_return_type": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.is_definition": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Lvalue",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.is_generator_return_type": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.is_trivial_body": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.Block",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.ExpressionStmt",
    "mypy.nodes.PassStmt",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.iterable_item_type": {
  "data": {
   "lineno": 2790,
   "symbols_in_volume": [
    "isinstance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.subtypes.find_member",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.lookup": {
  "data": {
   "lineno": 2708,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.lookup_qualified": {
  "data": {
   "lineno": 2722,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "mypy.nodes.GDEF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "range",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.lookup_typeinfo": {
  "data": {
   "lineno": 2677,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.TypeInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.lvalue_type_for_inference": {
  "data": {
   "lineno": 1767,
   "symbols_in_volume": [
    "append_types_for_inference",
    "enumerate",
    "isinstance",
    "len",
    "mypy.nodes.Lvalue",
    "mypy.nodes.StarExpr",
    "mypy.types.PartialType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "next",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.lvalue_type_for_inference.append_types_for_inference": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.lvalue_type_from_base": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "isinstance",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.Node",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.types.CallableType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.typevars.has_no_typevars",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.named_generic_type": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.named_type": {
  "data": {
   "lineno": 2655,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.note": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.push_type_map": {
  "data": {
   "lineno": 2814,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.set_inference_error_fallback_type": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.Lvalue",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.set_inferred_type": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Lvalue",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.Var",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.should_suppress_optional_error": {
  "data": {
   "lineno": 2652,
   "symbols_in_volume": [
    "any",
    "bool",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.split_around_star": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.checker.T",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.store_type": {
  "data": {
   "lineno": 2692,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.str_type": {
  "data": {
   "lineno": 2688,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.temp_node": {
  "data": {
   "lineno": 2771,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.TempNode",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.try_infer_partial_type_from_indexed_assignment": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "is_valid_inferred_type",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var",
    "mypy.types.PartialType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.type_check_raise": {
  "data": {
   "lineno": 2251,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.messages.INVALID_EXCEPTION",
    "mypy.nodes.Expression",
    "mypy.nodes.RaiseStmt",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.type_is_iterable": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "type",
    "type.fallback",
    "type.is_type_obj"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.type_type": {
  "data": {
   "lineno": 2684,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_assert_stmt": {
  "data": {
   "lineno": 2230,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.messages.MALFORMED_ASSERT",
    "mypy.nodes.AssertStmt",
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_assignment_stmt": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.TupleExpr",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_block": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_break_stmt": {
  "data": {
   "lineno": 2597,
   "symbols_in_volume": [
    "mypy.nodes.BreakStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_class_def": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "mypy.binder.ConditionalTypeBinder",
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_continue_stmt": {
  "data": {
   "lineno": 2600,
   "symbols_in_volume": [
    "mypy.nodes.ContinueStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_decorator": {
  "data": {
   "lineno": 2487,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Decorator",
    "mypy.nodes.RefExpr",
    "mypy.semanal.refers_to_fullname",
    "mypy.semanal.set_callable_name",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.TypeOfAny.special_form",
    "reversed",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_del_stmt": {
  "data": {
   "lineno": 2472,
   "symbols_in_volume": [
    "flatten",
    "isinstance",
    "mypy.binder.get_declaration",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.CallExpr",
    "mypy.nodes.DelStmt",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_expression_stmt": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "mypy.nodes.ExpressionStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_for_stmt": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_func_def": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.INCOMPATIBLE_REDEFINITION",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.sametypes.is_same_type",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_if_stmt": {
  "data": {
   "lineno": 2175,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.NON_BOOLEAN_IN_CONDITIONAL",
    "mypy.nodes.IfStmt",
    "mypy.types.AnyType",
    "mypy.types.DeletedType",
    "mypy.types.Instance",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_import": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_import_all": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_import_from": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 2212,
   "symbols_in_volume": [
    "infer_operator_assignment_method",
    "mypy.nodes.OpExpr",
    "mypy.nodes.OperatorAssignmentStmt",
    "mypy.subtypes.is_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_overloaded_func_def": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.messages.INCONSISTENT_ABSTRACT_OVERLOAD",
    "mypy.nodes.Decorator",
    "mypy.nodes.OverloadedFuncDef",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_print_stmt": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.PrintStmt",
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_raise_stmt": {
  "data": {
   "lineno": 2243,
   "symbols_in_volume": [
    "mypy.nodes.RaiseStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_return_stmt": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "mypy.nodes.ReturnStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_try_stmt": {
  "data": {
   "lineno": 2277,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.TryStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_try_without_finally": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "bool",
    "len",
    "mypy.nodes.TryStmt",
    "mypy.nodes.Var",
    "mypy.types.DeletedType",
    "range",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_while_stmt": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "mypy.nodes.IfStmt",
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.visit_with_stmt": {
  "data": {
   "lineno": 2545,
   "symbols_in_volume": [
    "mypy.nodes.WithStmt",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeChecker.warn": {
  "data": {
   "lineno": 2782,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.checker.TypeMap": {
  "data": {
   "lineno": 2836
  },
  "type": "constant"
 },
 "mypy.checker.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.checker.TypeRange": {
  "data": {
   "lineno": 2840
  },
  "type": "constant"
 },
 "mypy.checker.TypeTransformVisitor": {
  "data": {
   "lineno": 3260,
   "symbols_in_volume": [
    "mypy.treetransform.TransformVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.checker.TypeTransformVisitor.__init__": {
  "data": {
   "lineno": 3261,
   "symbols_in_volume": [
    "map",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeTransformVisitor.type": {
  "data": {
   "lineno": 3265,
   "symbols_in_volume": [
    "mypy.expandtype.expand_type",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checker.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.checker.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.checker.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.checker.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.checker.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.checker.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.checker.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.checker.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.checker.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.checker.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.checker.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.checker.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.checker.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.checker.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.checker.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.checker.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.checker.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.checker.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.checker.and_conditional_maps": {
  "data": {
   "lineno": 3014,
   "symbols_in_volume": [
    "mypy.checker.TypeMap",
    "mypy.literals.literal_hash",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.checker.bind_self": {
  "data": {
   "shadows": "mypy.checkmember.bind_self"
  },
  "type": "import"
 },
 "mypy.checker.builtin_item_type": {
  "data": {
   "lineno": 2981,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType.make_simplified_union",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.checker.check_for_explicit_any": {
  "data": {
   "shadows": "mypy.typeanal.check_for_explicit_any"
  },
  "type": "import"
 },
 "mypy.checker.conditional_callable_type_map": {
  "data": {
   "lineno": 2928,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.checker.TypeMap",
    "mypy.checker.partition_by_callable",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.UnionType.make_union",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.conditional_type_map": {
  "data": {
   "lineno": 2848,
   "symbols_in_volume": [
    "any",
    "len",
    "mypy.checker.TypeMap",
    "mypy.checker.TypeRange",
    "mypy.meet.is_overlapping_types",
    "mypy.nodes.Expression",
    "mypy.subtypes.is_proper_subtype",
    "mypy.subtypes.restrict_subtype_away",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.checker.convert_to_typetype": {
  "data": {
   "lineno": 3058,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checker.TypeMap",
    "mypy.types.Instance",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.erase_to_bound": {
  "data": {
   "shadows": "mypy.checkmember.erase_to_bound"
  },
  "type": "import"
 },
 "mypy.checker.erase_typevars": {
  "data": {
   "shadows": "mypy.erasetype.erase_typevars"
  },
  "type": "import"
 },
 "mypy.checker.expand_func": {
  "data": {
   "lineno": 3253,
   "symbols_in_volume": [
    "TypeTransformVisitor",
    "isinstance",
    "map",
    "mypy.nodes.FuncItem",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.checker.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.checker.expand_type_by_instance": {
  "data": {
   "shadows": "mypy.expandtype.expand_type_by_instance"
  },
  "type": "import"
 },
 "mypy.checker.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.checker.false_only": {
  "data": {
   "shadows": "mypy.types.false_only"
  },
  "type": "import"
 },
 "mypy.checker.fill_typevars": {
  "data": {
   "shadows": "mypy.typevars.fill_typevars"
  },
  "type": "import"
 },
 "mypy.checker.find_isinstance_check": {
  "data": {
   "lineno": 3070,
   "symbols_in_volume": [
    "any",
    "get_isinstance_type",
    "isinstance",
    "len",
    "map",
    "mypy.checker.TypeMap",
    "mypy.checker.TypeRange",
    "mypy.checker.and_conditional_maps",
    "mypy.checker.builtin_item_type",
    "mypy.checker.conditional_callable_type_map",
    "mypy.checker.conditional_type_map",
    "mypy.checker.convert_to_typetype",
    "mypy.checker.is_false_literal",
    "mypy.checker.is_literal_none",
    "mypy.checker.is_optional",
    "mypy.checker.is_true_literal",
    "mypy.checker.or_conditional_maps",
    "mypy.checker.remove_optional",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.literals.literal",
    "mypy.meet.is_overlapping_types",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.LITERAL_TYPE",
    "mypy.nodes.OpExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.UnaryExpr",
    "mypy.semanal.refers_to_fullname",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "mypy.types.false_only",
    "mypy.types.true_only",
    "type",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.find_member": {
  "data": {
   "shadows": "mypy.subtypes.find_member"
  },
  "type": "import"
 },
 "mypy.checker.flatten": {
  "data": {
   "lineno": 3208,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.TupleExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checker.flatten_types": {
  "data": {
   "lineno": 3216,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checker.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mypy.checker.function_type": {
  "data": {
   "shadows": "mypy.types.function_type"
  },
  "type": "import"
 },
 "mypy.checker.get_declaration": {
  "data": {
   "shadows": "mypy.binder.get_declaration"
  },
  "type": "import"
 },
 "mypy.checker.get_isinstance_type": {
  "data": {
   "lineno": 3224,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checker.TypeRange",
    "mypy.checker.flatten_types",
    "mypy.erasetype.erase_typevars",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.has_any_from_unimported_type": {
  "data": {
   "shadows": "mypy.typeanal.has_any_from_unimported_type"
  },
  "type": "import"
 },
 "mypy.checker.has_no_typevars": {
  "data": {
   "shadows": "mypy.typevars.has_no_typevars"
  },
  "type": "import"
 },
 "mypy.checker.infer_operator_assignment_method": {
  "data": {
   "lineno": 3397,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.op_methods",
    "mypy.nodes.ops_with_inplace_method",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_callable_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_callable_subtype"
  },
  "type": "import"
 },
 "mypy.checker.is_equivalent": {
  "data": {
   "shadows": "mypy.subtypes.is_equivalent"
  },
  "type": "import"
 },
 "mypy.checker.is_equivalent_type_var_def": {
  "data": {
   "lineno": 3360,
   "symbols_in_volume": [
    "bool",
    "mypy.sametypes.is_same_type",
    "mypy.sametypes.is_same_types",
    "mypy.types.TypeVarDef"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_false_literal": {
  "data": {
   "lineno": 2961,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.IntExpr",
    "mypy.semanal.refers_to_fullname"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_literal_none": {
  "data": {
   "lineno": 2966,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_more_general_arg_prefix": {
  "data": {
   "lineno": 3319,
   "symbols_in_volume": [
    "all",
    "bool",
    "is_same_arg_prefix",
    "isinstance",
    "len",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "unify_generic_callables",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_more_precise": {
  "data": {
   "shadows": "mypy.subtypes.is_more_precise"
  },
  "type": "import"
 },
 "mypy.checker.is_more_precise_signature": {
  "data": {
   "lineno": 3380,
   "symbols_in_volume": [
    "bool",
    "mypy.subtypes.is_more_precise",
    "mypy.types.CallableType",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_named_instance": {
  "data": {
   "shadows": "mypy.types.is_named_instance"
  },
  "type": "import"
 },
 "mypy.checker.is_node_static": {
  "data": {
   "lineno": 3449,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.Node",
    "mypy.nodes.Var",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_optional": {
  "data": {
   "lineno": 2970,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_overlapping_types": {
  "data": {
   "shadows": "mypy.meet.is_overlapping_types"
  },
  "type": "import"
 },
 "mypy.checker.is_proper_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_proper_subtype"
  },
  "type": "import"
 },
 "mypy.checker.is_same_arg_prefix": {
  "data": {
   "lineno": 3374,
   "symbols_in_volume": [
    "all",
    "bool",
    "mypy.sametypes.is_same_type",
    "mypy.types.CallableType",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.checker.is_same_types": {
  "data": {
   "shadows": "mypy.sametypes.is_same_types"
  },
  "type": "import"
 },
 "mypy.checker.is_static": {
  "data": {
   "lineno": 3532,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncBase",
    "mypy.nodes.FuncItem",
    "mypy.nodes.OverloadedFuncDef",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.checker.is_subtype_ignoring_tvars": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype_ignoring_tvars"
  },
  "type": "import"
 },
 "mypy.checker.is_true_literal": {
  "data": {
   "lineno": 2956,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.IntExpr",
    "mypy.semanal.refers_to_fullname"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_typed_callable": {
  "data": {
   "lineno": 3519,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_unsafe_overlapping_signatures": {
  "data": {
   "lineno": 3269,
   "symbols_in_volume": [
    "all",
    "bool",
    "is_more_general_arg_prefix",
    "is_more_precise_signature",
    "isinstance",
    "len",
    "max",
    "min",
    "mypy.meet.is_overlapping_types",
    "mypy.sametypes.is_same_type",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_untyped_decorator": {
  "data": {
   "lineno": 3526,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_valid_inferred_type": {
  "data": {
   "lineno": 3412,
   "symbols_in_volume": [
    "bool",
    "is_valid_inferred_type_component",
    "isinstance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.is_valid_inferred_type_component": {
  "data": {
   "lineno": 3430,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.checker.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mypy.checker.join_types": {
  "data": {
   "shadows": "mypy.join.join_types"
  },
  "type": "import"
 },
 "mypy.checker.literal": {
  "data": {
   "shadows": "mypy.literals.literal"
  },
  "type": "import"
 },
 "mypy.checker.literal_hash": {
  "data": {
   "shadows": "mypy.literals.literal_hash"
  },
  "type": "import"
 },
 "mypy.checker.make_inferred_type_note": {
  "data": {
   "shadows": "mypy.messages.make_inferred_type_note"
  },
  "type": "import"
 },
 "mypy.checker.map_instance_to_supertype": {
  "data": {
   "shadows": "mypy.maptype.map_instance_to_supertype"
  },
  "type": "import"
 },
 "mypy.checker.map_type_from_supertype": {
  "data": {
   "shadows": "mypy.checkmember.map_type_from_supertype"
  },
  "type": "import"
 },
 "mypy.checker.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.checker.mypy.checkexpr": {
  "data": {
   "shadows": "mypy.checkexpr"
  },
  "type": "import"
 },
 "mypy.checker.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.checker.nothing": {
  "data": {
   "lineno": 3514,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.checker.or_conditional_maps": {
  "data": {
   "lineno": 3036,
   "symbols_in_volume": [
    "mypy.checker.TypeMap",
    "mypy.literals.literal_hash",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.partition_by_callable": {
  "data": {
   "lineno": 2886,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType",
    "mypy.types.UnionType",
    "type",
    "type.erase_to_union_or_bound",
    "type.relevant_items",
    "type.type.get_method",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checker.refers_to_fullname": {
  "data": {
   "shadows": "mypy.semanal.refers_to_fullname"
  },
  "type": "import"
 },
 "mypy.checker.remove_optional": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_union"
   ]
  },
  "type": "function"
 },
 "mypy.checker.report_internal_error": {
  "data": {
   "shadows": "mypy.errors.report_internal_error"
  },
  "type": "import"
 },
 "mypy.checker.restrict_subtype_away": {
  "data": {
   "shadows": "mypy.subtypes.restrict_subtype_away"
  },
  "type": "import"
 },
 "mypy.checker.set_callable_name": {
  "data": {
   "shadows": "mypy.semanal.set_callable_name"
  },
  "type": "import"
 },
 "mypy.checker.strip_type": {
  "data": {
   "shadows": "mypy.types.strip_type"
  },
  "type": "import"
 },
 "mypy.checker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.checker.true_only": {
  "data": {
   "shadows": "mypy.types.true_only"
  },
  "type": "import"
 },
 "mypy.checker.unify_generic_callable": {
  "data": {
   "shadows": "mypy.subtypes.unify_generic_callable"
  },
  "type": "import"
 },
 "mypy.checker.unify_generic_callables": {
  "data": {
   "lineno": 3337,
   "symbols_in_volume": [
    "is_equivalent_type_var_def",
    "mypy.expandtype.expand_type",
    "mypy.types.CallableType",
    "mypy.types.TypeVarDef.new_unification_variable",
    "mypy.types.TypeVarType",
    "typing.Tuple",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checker.union_items": {
  "data": {
   "shadows": "mypy.types.union_items"
  },
  "type": "import"
 },
 "mypy.checkexpr": {
  "data": {
   "symbols_in_volume": [
    "int",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "mypy.checkexpr.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.checkexpr.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.checkexpr.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.checkexpr.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.checkexpr.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.checkexpr.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.checkexpr.ArgChecker": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mypy.checkexpr.ArgInferSecondPassQuery": {
  "data": {
   "lineno": 2728,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.checkexpr.ArgInferSecondPassQuery.__init__": {
  "data": {
   "lineno": 2735,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ArgInferSecondPassQuery.visit_callable_type": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "HasTypeVarQuery",
    "bool",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.checkexpr.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.checkexpr.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.checkexpr.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.checkexpr.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.checkexpr.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.checkexpr.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.checkexpr.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.EnumCallExpr": {
  "data": {
   "shadows": "mypy.nodes.EnumCallExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.checkexpr.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.checkexpr.ExpressionChecker": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.checkexpr.ExpressionChecker.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.checkstrformat.StringFormatterChecker",
    "mypy.messages.MessageBuilder",
    "mypy.plugin.Plugin"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker._check_op_for_errors": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker._get_value": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.IntExpr",
    "mypy.nodes.UnaryExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.accept": {
  "data": {
   "lineno": 2348,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "has_any_type",
    "isinstance",
    "mypy.errors.report_internal_error",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.YieldFromExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_cond_branch": {
  "data": {
   "lineno": 2329,
   "symbols_in_volume": [
    "map",
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_descriptor_access": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkmember.bind_self",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.nodes.TempNode",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.function_type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_external_member_access": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "mypy.checkmember.analyze_member_access",
    "mypy.nodes.Context",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_ordinary_member_access": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "bool",
    "mypy.checkmember.analyze_member_access",
    "mypy.nodes.MemberExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_ref_expr": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "isinstance",
    "mypy.checkmember.type_object_type",
    "mypy.erasetype.erase_typevars",
    "mypy.messages.NEED_ANNOTATION_FOR_VAR",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MypyFile",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeType",
    "mypy.types.function_type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_super": {
  "data": {
   "lineno": 2159,
   "symbols_in_volume": [
    "bool",
    "len",
    "mypy.checkmember.analyze_member_access",
    "mypy.nodes.SuperExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeOfAny.unannotated",
    "mypy.typevars.fill_typevars"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_type_type_callee": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkmember.type_object_type",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeVarType",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.analyze_var_ref": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.apply_function_plugin": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "callback",
    "enumerate",
    "int",
    "method_callback",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.plugin.FunctionContext",
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "range",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.apply_generic_arguments": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "callable",
    "mypy.applytype.apply_generic_arguments",
    "mypy.nodes.Context",
    "mypy.types",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.apply_inferred_arguments": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "enumerate",
    "has_erased_component",
    "len",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.apply_method_signature_hook": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "map_actuals_to_formals",
    "mypy.nodes.CallExpr",
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "range",
    "signature_hook",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.bool_type": {
  "data": {
   "lineno": 2587,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_arg": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.messages.MessageBuilder",
    "mypy.messages.deleted_as_rvalue",
    "mypy.messages.incompatible_argument",
    "mypy.nodes.Context",
    "mypy.subtypes.find_member",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.DeletedType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_argument_count": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "int",
    "is_duplicate_mapping",
    "is_empty_tuple",
    "isinstance",
    "len",
    "mypy.messages",
    "mypy.messages.MessageBuilder",
    "mypy.messages.duplicate_argument_value",
    "mypy.messages.missing_named_argument",
    "mypy.messages.too_few_arguments",
    "mypy.messages.too_many_arguments",
    "mypy.messages.too_many_positional_arguments",
    "mypy.messages.unexpected_keyword_argument",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_argument_types": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "check_arg",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "mypy.checkexpr.ArgChecker",
    "mypy.constraints.get_actual_type",
    "mypy.messages",
    "mypy.messages.MessageBuilder",
    "mypy.messages.invalid_keyword_var_arg",
    "mypy.messages.invalid_var_arg",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Context",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_awaitable_expr": {
  "data": {
   "lineno": 2464,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_boolean_op": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.OpExpr",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType.make_simplified_union",
    "mypy.types.false_only",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_call": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "map_actuals_to_formals",
    "mypy.checkmember.analyze_member_access",
    "mypy.expandtype.freshen_function_type_vars",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.RefExpr",
    "mypy.subtypes.is_equivalent",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.TypeVarType",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union",
    "str",
    "type",
    "type.abstract_attributes",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_call_expr_with_callee_type": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr",
    "mypy.types.Type",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_for_comp": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension",
    "mypy.nodes.GeneratorExpr",
    "type",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_generator_or_comprehension": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.GeneratorExpr",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_list_multiply": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_lst_expr": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.StarExpr",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_op": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.TempNode",
    "mypy.nodes.comparison_fallback_method",
    "mypy.nodes.ops_falling_back_to_cmp",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_op_local": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkmember.analyze_member_access",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_protocol_issubclass": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.subtypes.non_method_protocol_members",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_runtime_protocol_test": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_super_arguments": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.messages.UNSUPPORTED_ARGUMENT_2_FOR_SUPER",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.SuperExpr",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_typeddict_call": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "all",
    "collections.OrderedDict",
    "int",
    "isinstance",
    "len",
    "mypy.messages.INVALID_TYPEDDICT_ARGS",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Context",
    "mypy.nodes.DictExpr",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_typeddict_call_with_dict": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "mypy.messages.TYPEDDICT_KEY_MUST_BE_STRING_LITERAL",
    "mypy.nodes.Context",
    "mypy.nodes.DictExpr",
    "mypy.nodes.StrExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.check_typeddict_call_with_kwargs": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "list",
    "mypy.messages.INCOMPATIBLE_TYPES",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.erased_signature_similarity": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "check_arg",
    "int",
    "map_actuals_to_formals",
    "mypy.checkexpr.Finished",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.erased_signature_similarity.check_arg": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "int",
    "min",
    "mypy.checkexpr.Finished",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "overload_arg_similarity"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.find_typeddict_context": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.get_arg_infer_passes": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "ArgInferSecondPassQuery",
    "enumerate",
    "int",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.get_operator_method": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "mypy.nodes.op_methods",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.get_reverse_op_method": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "mypy.nodes.reverse_op_methods",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.has_member": {
  "data": {
   "lineno": 2416,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.infer_arg_types_in_context": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "enumerate",
    "has_erased_component",
    "len",
    "min",
    "mypy.nodes.Expression",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.infer_arg_types_in_context2": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "int",
    "len",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Expression",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.infer_function_type_arguments": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "len",
    "mypy.infer.infer_function_type_arguments",
    "mypy.messages.KEYWORD_ARGUMENT_REQUIRES_STR_KEY_TYPE",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.unannotated",
    "mypy.types.UninhabitedType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.infer_function_type_arguments_pass2": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "enumerate",
    "has_erased_component",
    "int",
    "isinstance",
    "list",
    "mypy.infer.infer_function_type_arguments",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.infer_function_type_arguments_using_context": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "callable",
    "callable.ret_type",
    "callable.type_var_ids",
    "has_erased_component",
    "has_uninhabited_component",
    "isinstance",
    "mypy.erasetype.replace_meta_vars",
    "mypy.infer.infer_type_arguments",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.ErasedType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.infer_lambda_type_using_context": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.erasetype.replace_meta_vars",
    "mypy.messages.CANNOT_INFER_LAMBDA_TYPE",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.LambdaExpr",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.ErasedType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.is_valid_keyword_var_arg": {
  "data": {
   "lineno": 2398,
   "symbols_in_volume": [
    "bool",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.is_valid_var_arg": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.match_signature_types": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "bool",
    "check_arg",
    "int",
    "map_actuals_to_formals",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.match_signature_types.check_arg": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "int",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.named_type": {
  "data": {
   "lineno": 2385,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.narrow_type_from_binder": {
  "data": {
   "lineno": 2591,
   "symbols_in_volume": [
    "mypy.literals.literal",
    "mypy.meet.narrow_declared_type",
    "mypy.nodes.Expression",
    "mypy.nodes.LITERAL_TYPE",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.nonliteral_tuple_index_helper": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": [
    "mypy.messages.INVALID_TUPLE_INDEX_TYPE",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.UnionType.make_simplified_union",
    "mypy.types.UnionType.make_union"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.not_ready_callback": {
  "data": {
   "lineno": 2433,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.object_type": {
  "data": {
   "lineno": 2583,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.overload_call_target": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "any",
    "any_arg_causes_overload_ambiguity",
    "int",
    "isinstance",
    "len",
    "max",
    "mypy.messages",
    "mypy.messages.MessageBuilder",
    "mypy.messages.no_variant_matches_arguments",
    "mypy.nodes.Context",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.try_infer_partial_type": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.CallExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var",
    "mypy.types.Instance",
    "mypy.types.PartialType",
    "mypy.types.UnionType.make_simplified_union",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit__promote_expr": {
  "data": {
   "lineno": 2577,
   "symbols_in_volume": [
    "mypy.nodes.PromoteExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_await_expr": {
  "data": {
   "lineno": 2455,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_AWAIT",
    "mypy.nodes.AwaitExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_backquote_expr": {
  "data": {
   "lineno": 2340,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_bytes_expr": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "mypy.nodes.BytesExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_call_expr": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "isinstance",
    "len",
    "map_actuals_to_formals",
    "mypy.join.join_type_list",
    "mypy.messages.CANNOT_ISINSTANCE_NEWTYPE",
    "mypy.messages.CANNOT_ISINSTANCE_TYPEDDICT",
    "mypy.nodes.CallExpr",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.LambdaExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeAliasExpr",
    "mypy.nodes.TypeApplication",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType",
    "mypy.types.UninhabitedType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_cast_expr": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr",
    "mypy.sametypes.is_same_type",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_comparison_expr": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mypy.join.join_types",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.op_methods",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_complex_expr": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "mypy.nodes.ComplexExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_conditional_expr": {
  "data": {
   "lineno": 2293,
   "symbols_in_volume": [
    "isinstance",
    "mypy.join.join_types",
    "mypy.messages.NON_BOOLEAN_IN_CONDITIONAL",
    "mypy.nodes.ConditionalExpr",
    "mypy.subtypes.is_equivalent",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_dict_expr": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.DictExpr",
    "mypy.nodes.TupleExpr",
    "mypy.types.CallableType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_dictionary_comprehension": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.DictionaryComprehension",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_ellipsis": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_enum_call_expr": {
  "data": {
   "lineno": 2559,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.EnumCallExpr",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_enum_index_expr": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.UnionType.make_union"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_float_expr": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "mypy.nodes.FloatExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_generator_expr": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "any",
    "mypy.nodes.GeneratorExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_index_expr": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_index_expr_helper": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.messages.TUPLE_INDEX_OUT_OF_RANGE",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.SliceExpr",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_int_expr": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "mypy.nodes.IntExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_lambda_expr": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.LambdaExpr",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.callable_type",
    "replace_callable_return_type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_list_comprehension": {
  "data": {
   "lineno": 2209,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_list_expr": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_member_expr": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "mypy.checkexpr.extract_refexpr_names",
    "mypy.nodes.MemberExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_name_expr": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mypy.checkexpr.extract_refexpr_names",
    "mypy.nodes.NameExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_namedtuple_expr": {
  "data": {
   "lineno": 2549,
   "symbols_in_volume": [
    "mypy.nodes.NamedTupleExpr",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_newtype_expr": {
  "data": {
   "lineno": 2546,
   "symbols_in_volume": [
    "mypy.nodes.NewTypeExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_op_expr": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.OpExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.nodes.op_methods",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_reveal_type_expr": {
  "data": {
   "lineno": 1786,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_set_comprehension": {
  "data": {
   "lineno": 2213,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_set_expr": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "mypy.nodes.SetExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_slice_expr": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": [
    "mypy.messages.INVALID_SLICE_INDEX",
    "mypy.nodes.SliceExpr",
    "mypy.typeanal.make_optional_type",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_star_expr": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr",
    "mypy.types.StarType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_str_expr": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "mypy.nodes.StrExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_super_expr": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "mypy.nodes.SuperExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_temp_node": {
  "data": {
   "lineno": 2540,
   "symbols_in_volume": [
    "mypy.nodes.TempNode",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_tuple_expr": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.join.join_type_list",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.is_named_instance",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_tuple_slice_helper": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_type_alias_expr": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.checkmember.type_object_type",
    "mypy.nodes.TypeAliasExpr",
    "mypy.typeanal.set_any_tvars",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_type_application": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.messages.ONLY_CLASS_APPLICATION",
    "mypy.nodes.TypeApplication",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_type_var_expr": {
  "data": {
   "lineno": 2543,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_typeddict_expr": {
  "data": {
   "lineno": 2574,
   "symbols_in_volume": [
    "mypy.nodes.TypedDictExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_typeddict_index_expr": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_unary_expr": {
  "data": {
   "lineno": 1653,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr",
    "mypy.nodes.unary_op_methods",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_unicode_expr": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_yield_expr": {
  "data": {
   "lineno": 2441,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_YIELD",
    "mypy.messages.YIELD_VALUE_EXPECTED",
    "mypy.nodes.YieldExpr",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionChecker.visit_yield_from_expr": {
  "data": {
   "lineno": 2477,
   "symbols_in_volume": [
    "bool",
    "has_coroutine_decorator",
    "is_async_def",
    "isinstance",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_YIELD_FROM",
    "mypy.nodes.YieldFromExpr",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.ExpressionVisitor": {
  "data": {
   "shadows": "mypy.visitor.ExpressionVisitor"
  },
  "type": "import"
 },
 "mypy.checkexpr.Finished": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.checkexpr.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.checkexpr.FunctionContext": {
  "data": {
   "shadows": "mypy.plugin.FunctionContext"
  },
  "type": "import"
 },
 "mypy.checkexpr.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.checkexpr.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.HasAnyType": {
  "data": {
   "lineno": 2605,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.checkexpr.HasAnyType.__init__": {
  "data": {
   "lineno": 2606,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.HasAnyType.visit_any": {
  "data": {
   "lineno": 2609,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.HasErasedComponentsQuery": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.checkexpr.HasErasedComponentsQuery.__init__": {
  "data": {
   "lineno": 2757,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.HasErasedComponentsQuery.visit_erased_type": {
  "data": {
   "lineno": 2760,
   "symbols_in_volume": [
    "bool",
    "mypy.types.ErasedType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.HasTypeVarQuery": {
  "data": {
   "lineno": 2742,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.checkexpr.HasTypeVarQuery.__init__": {
  "data": {
   "lineno": 2744,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.HasTypeVarQuery.visit_type_var": {
  "data": {
   "lineno": 2747,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.HasUninhabitedComponentsQuery": {
  "data": {
   "lineno": 2768,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.checkexpr.HasUninhabitedComponentsQuery.__init__": {
  "data": {
   "lineno": 2770,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.HasUninhabitedComponentsQuery.visit_uninhabited_type": {
  "data": {
   "lineno": 2773,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.checkexpr.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.checkexpr.LITERAL_TYPE": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_TYPE"
  },
  "type": "import"
 },
 "mypy.checkexpr.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.checkexpr.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.checkexpr.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.checkexpr.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.checkexpr.MethodContext": {
  "data": {
   "shadows": "mypy.plugin.MethodContext"
  },
  "type": "import"
 },
 "mypy.checkexpr.MethodSigContext": {
  "data": {
   "shadows": "mypy.plugin.MethodSigContext"
  },
  "type": "import"
 },
 "mypy.checkexpr.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.checkexpr.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.checkexpr.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.checkexpr.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.checkexpr.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.checkexpr.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.checkexpr.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.checkexpr.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.checkexpr.PromoteExpr": {
  "data": {
   "shadows": "mypy.nodes.PromoteExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.checkexpr.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.checkexpr.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.checkexpr.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.StarType": {
  "data": {
   "shadows": "mypy.types.StarType"
  },
  "type": "import"
 },
 "mypy.checkexpr.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.StringFormatterChecker": {
  "data": {
   "shadows": "mypy.checkstrformat.StringFormatterChecker"
  },
  "type": "import"
 },
 "mypy.checkexpr.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.TVAR": {
  "data": {
   "shadows": "mypy.nodes.TVAR"
  },
  "type": "import"
 },
 "mypy.checkexpr.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.checkexpr.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.checkexpr.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.checkexpr.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.checkexpr.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.checkexpr.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.checkexpr.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.checkexpr.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.checkexpr.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.checkexpr.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.checkexpr.all_same_types": {
  "data": {
   "lineno": 2916,
   "symbols_in_volume": [
    "all",
    "bool",
    "len",
    "list",
    "mypy.sametypes.is_same_type",
    "mypy.types",
    "mypy.types.Type",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.analyze_member_access": {
  "data": {
   "shadows": "mypy.checkmember.analyze_member_access"
  },
  "type": "import"
 },
 "mypy.checkexpr.any_arg_causes_overload_ambiguity": {
  "data": {
   "lineno": 2874,
   "symbols_in_volume": [
    "all_same_types",
    "bool",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "map_formals_to_actuals",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.applytype": {
  "data": {
   "shadows": "mypy.applytype"
  },
  "type": "import"
 },
 "mypy.checkexpr.bind_self": {
  "data": {
   "shadows": "mypy.checkmember.bind_self"
  },
  "type": "import"
 },
 "mypy.checkexpr.callable_type": {
  "data": {
   "shadows": "mypy.types.callable_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.checkexpr.check_for_explicit_any": {
  "data": {
   "shadows": "mypy.typeanal.check_for_explicit_any"
  },
  "type": "import"
 },
 "mypy.checkexpr.erasetype": {
  "data": {
   "shadows": "mypy.erasetype"
  },
  "type": "import"
 },
 "mypy.checkexpr.expand_type_by_instance": {
  "data": {
   "shadows": "mypy.expandtype.expand_type_by_instance"
  },
  "type": "import"
 },
 "mypy.checkexpr.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.checkexpr.extract_refexpr_names": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.util.split_module_names",
    "set",
    "str",
    "type",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.false_only": {
  "data": {
   "shadows": "mypy.types.false_only"
  },
  "type": "import"
 },
 "mypy.checkexpr.fill_typevars": {
  "data": {
   "shadows": "mypy.typevars.fill_typevars"
  },
  "type": "import"
 },
 "mypy.checkexpr.find_member": {
  "data": {
   "shadows": "mypy.subtypes.find_member"
  },
  "type": "import"
 },
 "mypy.checkexpr.freshen_function_type_vars": {
  "data": {
   "shadows": "mypy.expandtype.freshen_function_type_vars"
  },
  "type": "import"
 },
 "mypy.checkexpr.function_type": {
  "data": {
   "shadows": "mypy.types.function_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.get_actual_type": {
  "data": {
   "shadows": "mypy.constraints.get_actual_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.get_typ_args": {
  "data": {
   "shadows": "mypy.types.get_typ_args"
  },
  "type": "import"
 },
 "mypy.checkexpr.has_any_from_unimported_type": {
  "data": {
   "shadows": "mypy.typeanal.has_any_from_unimported_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.has_any_type": {
  "data": {
   "lineno": 2600,
   "symbols_in_volume": [
    "HasAnyType",
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.has_coroutine_decorator": {
  "data": {
   "lineno": 2613,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.has_erased_component": {
  "data": {
   "lineno": 2751,
   "symbols_in_volume": [
    "HasErasedComponentsQuery",
    "bool",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.has_uninhabited_component": {
  "data": {
   "lineno": 2764,
   "symbols_in_volume": [
    "HasUninhabitedComponentsQuery",
    "bool",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.infer_function_type_arguments": {
  "data": {
   "shadows": "mypy.infer.infer_function_type_arguments"
  },
  "type": "import"
 },
 "mypy.checkexpr.infer_type_arguments": {
  "data": {
   "shadows": "mypy.infer.infer_type_arguments"
  },
  "type": "import"
 },
 "mypy.checkexpr.is_async_def": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.is_duplicate_mapping": {
  "data": {
   "lineno": 2712,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.is_empty_tuple": {
  "data": {
   "lineno": 2708,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.is_equivalent": {
  "data": {
   "shadows": "mypy.subtypes.is_equivalent"
  },
  "type": "import"
 },
 "mypy.checkexpr.is_named_instance": {
  "data": {
   "shadows": "mypy.types.is_named_instance"
  },
  "type": "import"
 },
 "mypy.checkexpr.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.checkexpr.join": {
  "data": {
   "shadows": "mypy.join"
  },
  "type": "import"
 },
 "mypy.checkexpr.literal": {
  "data": {
   "shadows": "mypy.literals.literal"
  },
  "type": "import"
 },
 "mypy.checkexpr.make_optional_type": {
  "data": {
   "shadows": "mypy.typeanal.make_optional_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.map_actuals_to_formals": {
  "data": {
   "lineno": 2639,
   "symbols_in_volume": [
    "caller_arg_type",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "map",
    "map.append",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "range",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.map_formals_to_actuals": {
  "data": {
   "lineno": 2923,
   "symbols_in_volume": [
    "caller_arg_type",
    "enumerate",
    "int",
    "mypy.checkexpr.map_actuals_to_formals",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.map_instance_to_supertype": {
  "data": {
   "shadows": "mypy.maptype.map_instance_to_supertype"
  },
  "type": "import"
 },
 "mypy.checkexpr.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.checkexpr.mypy.checker": {
  "data": {
   "shadows": "mypy.checker"
  },
  "type": "import"
 },
 "mypy.checkexpr.narrow_declared_type": {
  "data": {
   "shadows": "mypy.meet.narrow_declared_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.checkexpr.non_method_protocol_members": {
  "data": {
   "shadows": "mypy.subtypes.non_method_protocol_members"
  },
  "type": "import"
 },
 "mypy.checkexpr.overload_arg_similarity": {
  "data": {
   "lineno": 2777,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "max",
    "mypy.erasetype.erase_type",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.sametypes.is_same_type",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Overloaded",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.replace_callable_return_type": {
  "data": {
   "lineno": 2723,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkexpr.replace_meta_vars": {
  "data": {
   "shadows": "mypy.erasetype.replace_meta_vars"
  },
  "type": "import"
 },
 "mypy.checkexpr.report_internal_error": {
  "data": {
   "shadows": "mypy.errors.report_internal_error"
  },
  "type": "import"
 },
 "mypy.checkexpr.set_any_tvars": {
  "data": {
   "shadows": "mypy.typeanal.set_any_tvars"
  },
  "type": "import"
 },
 "mypy.checkexpr.set_typ_args": {
  "data": {
   "shadows": "mypy.types.set_typ_args"
  },
  "type": "import"
 },
 "mypy.checkexpr.split_module_names": {
  "data": {
   "shadows": "mypy.util.split_module_names"
  },
  "type": "import"
 },
 "mypy.checkexpr.true_only": {
  "data": {
   "shadows": "mypy.types.true_only"
  },
  "type": "import"
 },
 "mypy.checkexpr.type_object_type": {
  "data": {
   "shadows": "mypy.checkmember.type_object_type"
  },
  "type": "import"
 },
 "mypy.checkexpr.types": {
  "data": {
   "shadows": "mypy.types"
  },
  "type": "import"
 },
 "mypy.checkmember": {
  "data": {
   "symbols_in_volume": [
    "mypy.checkmember.MYPY",
    "mypy.types.FunctionLike",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.checkmember.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.checkmember.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.checkmember.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.checkmember.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.checkmember.AttributeContext": {
  "data": {
   "shadows": "mypy.plugin.AttributeContext"
  },
  "type": "import"
 },
 "mypy.checkmember.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.checkmember.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.checkmember.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.checkmember.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.checkmember.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.checkmember.F": {
  "data": {
   "lineno": 621
  },
  "type": "constant"
 },
 "mypy.checkmember.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.checkmember.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.checkmember.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.checkmember.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.checkmember.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.checkmember.MYPY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mypy.checkmember.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.checkmember.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.checkmember.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.checkmember.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.checkmember.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.checkmember.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.checkmember.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.checkmember.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.checkmember.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "mypy.checkmember.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.checkmember.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.checkmember.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.checkmember.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.checkmember.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.checkmember.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.checkmember.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.checkmember.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.checkmember.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.checkmember.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.checkmember.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.checkmember.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.checkmember.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.checkmember.add_class_tvars": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "bind_self",
    "bool",
    "builtin_type",
    "enumerate",
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "str",
    "typing.Callable",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.analyze_class_attribute_access": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "add_class_tvars",
    "bool",
    "builtin_type",
    "isinstance",
    "mypy.checkmember.handle_partial_attribute_type",
    "mypy.messages.CANNOT_ASSIGN_TO_TYPE",
    "mypy.messages.GENERIC_INSTANCE_VAR_CLASS_ACCESS",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncBase",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MypyFile",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.TypeVarExpr",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarType",
    "mypy.types.function_type",
    "mypy.types.get_type_vars",
    "not_ready_callback",
    "str",
    "type_object_type",
    "typing.Callable",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.analyze_member_access": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "analyze_class_attribute_access",
    "analyze_member_var_access",
    "analyze_var",
    "bind_self",
    "bool",
    "builtin_type",
    "freeze_type_vars",
    "isinstance",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.expandtype.freshen_function_type_vars",
    "mypy.experiments.find_occurrences",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.messages.CANNOT_ACCESS_INIT",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.nodes.Decorator",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.DeletedType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union",
    "mypy.types.function_type",
    "repr",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.analyze_member_var_access": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "analyze_var",
    "bind_self",
    "bool",
    "builtin_type",
    "isinstance",
    "len",
    "lookup_member_var_or_accessor",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.function_type",
    "str",
    "type_object_type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.analyze_var": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "bind_self",
    "bool",
    "check_self_arg",
    "handle_partial_attribute_type",
    "hook",
    "isinstance",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.meet.meet_types",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.plugin.AttributeContext",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "not_ready_callback",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.bind_self": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "bool",
    "erase_to_bound",
    "expand",
    "isinstance",
    "mypy.checkmember.F",
    "mypy.infer.infer_type_arguments",
    "mypy.nodes.ARG_STAR",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.TypeVarType",
    "mypy.types.UninhabitedType",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.bind_self.expand": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "mypy.expandtype.expand_type",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.checkmember.check_self_arg": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "bool",
    "erase_to_bound",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.Context",
    "mypy.subtypes.is_subtype",
    "mypy.types.FunctionLike",
    "mypy.types.Type",
    "mypy.types.TypeType.make_normalized",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.class_callable": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.typevars.fill_typevars",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.erase_to_bound": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.checkmember.expand_type_by_instance": {
  "data": {
   "shadows": "mypy.expandtype.expand_type_by_instance"
  },
  "type": "import"
 },
 "mypy.checkmember.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.checkmember.fill_typevars": {
  "data": {
   "shadows": "mypy.typevars.fill_typevars"
  },
  "type": "import"
 },
 "mypy.checkmember.freeze_type_vars": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.freshen_function_type_vars": {
  "data": {
   "shadows": "mypy.expandtype.freshen_function_type_vars"
  },
  "type": "import"
 },
 "mypy.checkmember.function_type": {
  "data": {
   "shadows": "mypy.types.function_type"
  },
  "type": "import"
 },
 "mypy.checkmember.get_type_vars": {
  "data": {
   "shadows": "mypy.types.get_type_vars"
  },
  "type": "import"
 },
 "mypy.checkmember.handle_partial_attribute_type": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "bool",
    "mypy.messages.MessageBuilder",
    "mypy.messages.NEED_ANNOTATION_FOR_VAR",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.infer_type_arguments": {
  "data": {
   "shadows": "mypy.infer.infer_type_arguments"
  },
  "type": "import"
 },
 "mypy.checkmember.lookup_member_var_or_accessor": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.TypeInfo",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.map_instance_to_supertype": {
  "data": {
   "shadows": "mypy.maptype.map_instance_to_supertype"
  },
  "type": "import"
 },
 "mypy.checkmember.map_type_from_supertype": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "isinstance",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.nodes.TypeInfo",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.typevars.fill_typevars"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.meet": {
  "data": {
   "shadows": "mypy.meet"
  },
  "type": "import"
 },
 "mypy.checkmember.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.checkmember.mypy.checker": {
  "data": {
   "shadows": "mypy.checker"
  },
  "type": "import"
 },
 "mypy.checkmember.subtypes": {
  "data": {
   "shadows": "mypy.subtypes"
  },
  "type": "import"
 },
 "mypy.checkmember.type_object_type": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "builtin_type",
    "class_callable",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "type_object_type_from_function",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.checkmember.type_object_type_from_function": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "bind_self",
    "class_callable",
    "isinstance",
    "map_type_from_supertype",
    "mypy.nodes.FuncBase",
    "mypy.nodes.TypeInfo",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.function_type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Type",
    "typing.Callable",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.checkstrformat.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.checkstrformat.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Checkers": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mypy.checkstrformat.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.checkstrformat.ConversionSpecifier": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "mypy.checkstrformat.ConversionSpecifier.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.ConversionSpecifier.has_key": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.ConversionSpecifier.has_star": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.checkstrformat.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.checkstrformat.FormatStringExpr": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mypy.checkstrformat.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.checkstrformat.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.checkstrformat.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.checkstrformat.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.StringFormatterChecker": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "mypy.checkstrformat.StringFormatterChecker.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mypy.messages.MessageBuilder"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.accept": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "all",
    "any",
    "bool",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.nodes.Context",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.build_replacement_checkers": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.messages.FORMAT_REQUIRES_MAPPING",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.DictExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.check_simple_str_interpolation": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "any",
    "check_node",
    "check_type",
    "isinstance",
    "len",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.check_str_interpolation": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_c_type": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "check_type",
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_c_type.check_expr": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "check_type",
    "isinstance",
    "len",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_c_type.check_type": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "mypy.messages.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_regular_type": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "check_type",
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_regular_type.check_expr": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "check_type",
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_regular_type.check_type": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.messages.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_star": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "check_type",
    "mypy.checkstrformat.Checkers",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_star.check_expr": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "check_type",
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_star.check_type": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.conversion_type": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.named_type": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.parse_conversion_specifiers": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "format",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.re",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.replacement_checkers": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.checkstrformat.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.checkstrformat.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.checkstrformat.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.checkstrformat.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.checkstrformat.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.checkstrformat.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.checkstrformat.mypy.checker": {
  "data": {
   "shadows": "mypy.checker"
  },
  "type": "import"
 },
 "mypy.checkstrformat.mypy.checkexpr": {
  "data": {
   "shadows": "mypy.checkexpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.constraints": {
  "data": {},
  "type": "module"
 },
 "mypy.constraints.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.constraints.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.constraints.CompleteTypeVisitor": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.constraints.CompleteTypeVisitor.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "all",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.CompleteTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.Constraint": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "mypy.constraints.Constraint.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "mypy.types.Type",
    "mypy.types.TypeVarId"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.Constraint.__repr__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mypy.constraints.SUPERTYPE_OF",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.TypeVisitor",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "mypy.constraints.ConstraintBuilderVisitor.__init__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "int",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.infer_against_any": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.infer_against_overloaded": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "find_matching_overload_item",
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.infer_constraints_from_protocol_members": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.Instance",
    "mypy.types.Type",
    "neg_op",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_any": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.AnyType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_callable_type": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "isinstance",
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeType",
    "neg_op",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_deleted_type": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.DeletedType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_erased_type": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.ErasedType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_instance": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "len",
    "mypy.constraints.Constraint",
    "mypy.constraints.SUBTYPE_OF",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.constraints.infer_constraints",
    "mypy.erasetype.erase_typevars",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.TypedDictType",
    "mypy.types.is_named_instance",
    "neg_op",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_none_type": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.NoneTyp",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_overloaded": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.Overloaded",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_partial_type": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.PartialType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_tuple_type": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_type_type": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "isinstance",
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.TypeType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_type_var": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.TypeVarType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "isinstance",
    "mypy.constraints.Constraint",
    "mypy.constraints.infer_constraints",
    "mypy.types.AnyType",
    "mypy.types.TypedDictType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_unbound_type": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.UnboundType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.UninhabitedType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.ConstraintBuilderVisitor.visit_union_type": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.types.UnionType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.constraints.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.constraints.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.constraints.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.constraints.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.constraints.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.constraints.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.constraints.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.constraints.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.constraints.SUBTYPE_OF": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mypy.constraints.SUPERTYPE_OF": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mypy.constraints.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.constraints.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.constraints.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.constraints.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.constraints.TypeQuery": {
  "data": {
   "shadows": "mypy.types.TypeQuery"
  },
  "type": "import"
 },
 "mypy.constraints.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.constraints.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.constraints.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.constraints.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.constraints.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.constraints.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.constraints.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.constraints.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.constraints.any_constraints": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "all",
    "bool",
    "is_same_constraints",
    "len",
    "mypy.constraints.Constraint",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.erase_typevars": {
  "data": {
   "shadows": "mypy.erasetype.erase_typevars"
  },
  "type": "import"
 },
 "mypy.constraints.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.constraints.find_matching_overload_item": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.get_actual_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.infer_constraints": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ConstraintBuilderVisitor",
    "any_constraints",
    "infer_constraints_if_possible",
    "int",
    "isinstance",
    "mypy.constraints.Constraint",
    "mypy.constraints.SUBTYPE_OF",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "mypy.types.UnionType",
    "simplify_away_incomplete_types",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.infer_constraints_for_callable": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "enumerate",
    "get_actual_type",
    "infer_constraints",
    "int",
    "mypy.constraints.Constraint",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.infer_constraints_if_possible": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "mypy.constraints.Constraint",
    "mypy.constraints.SUBTYPE_OF",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.constraints.infer_constraints",
    "mypy.erasetype.erase_typevars",
    "mypy.types.Type",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.is_complete_type": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "CompleteTypeVisitor",
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.is_named_instance": {
  "data": {
   "shadows": "mypy.types.is_named_instance"
  },
  "type": "import"
 },
 "mypy.constraints.is_same_constraint": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bool",
    "mypy.constraints.Constraint",
    "mypy.sametypes.is_same_type"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.is_same_constraints": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "any",
    "bool",
    "is_same_constraint",
    "mypy.constraints.Constraint",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.constraints.map_instance_to_supertype": {
  "data": {
   "shadows": "mypy.maptype.map_instance_to_supertype"
  },
  "type": "import"
 },
 "mypy.constraints.mypy.subtypes": {
  "data": {
   "shadows": "mypy.subtypes"
  },
  "type": "import"
 },
 "mypy.constraints.neg_op": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mypy.constraints.SUBTYPE_OF",
    "mypy.constraints.SUPERTYPE_OF"
   ]
  },
  "type": "function"
 },
 "mypy.constraints.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.constraints.simplify_away_incomplete_types": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "is_complete_type",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.defaults": {
  "data": {},
  "type": "module"
 },
 "mypy.defaults.CACHE_DIR": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mypy.defaults.CONFIG_FILE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mypy.defaults.PYTHON2_VERSION": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mypy.defaults.PYTHON3_VERSION": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "mypy.defaults.PYTHON3_VERSION_MIN": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mypy.dmypy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mypy.dmypy.argparse",
    "mypy.dmypy.check_parser",
    "mypy.dmypy.daemon_parser",
    "mypy.dmypy.main",
    "mypy.dmypy.parser",
    "mypy.dmypy.recheck_parser",
    "mypy.dmypy.restart_parser",
    "mypy.dmypy.start_parser",
    "mypy.dmypy.subparsers",
    "str",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "mypy.dmypy.ActionFunction": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mypy.dmypy.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.dmypy.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.dmypy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.dmypy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.dmypy.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.dmypy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.dmypy.STATUS_FILE": {
  "data": {
   "shadows": "mypy.dmypy_util.STATUS_FILE"
  },
  "type": "import"
 },
 "mypy.dmypy.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.dmypy.Server": {
  "data": {
   "shadows": "mypy.dmypy_server.Server"
  },
  "type": "import"
 },
 "mypy.dmypy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.dmypy.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.dmypy.action": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mypy.dmypy.ActionFunction",
    "mypy.dmypy.argparse",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.action.register": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.dmypy.ActionFunction"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "mypy.dmypy.check_output": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "mypy.dmypy.sys",
    "show_stats",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.check_parser": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mypy.dmypy.check_status": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "OSError",
    "SystemExit",
    "int",
    "isinstance",
    "mypy.dmypy.os",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.daemon_parser": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mypy.dmypy.daemonize": {
  "data": {
   "shadows": "mypy.dmypy_server.daemonize"
  },
  "type": "import"
 },
 "mypy.dmypy.do_check": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "check_output",
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.check_parser",
    "mypy.dmypy.time",
    "request"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_daemon": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.daemon_parser",
    "mypy.dmypy_server.Server"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_hang": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.hang_parser",
    "request"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_help": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.help_parser",
    "mypy.dmypy.parser"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_kill": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "get_status",
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.kill_parser",
    "mypy.dmypy.os",
    "mypy.dmypy.signal",
    "mypy.dmypy.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_recheck": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "check_output",
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.recheck_parser",
    "mypy.dmypy.time",
    "request"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_restart": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "SystemExit",
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.restart_parser",
    "mypy.dmypy.sys",
    "mypy.dmypy_server.Server",
    "mypy.dmypy_server.daemonize",
    "print",
    "request",
    "str",
    "wait_for_server"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_start": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "SystemExit",
    "get_status",
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.start_parser",
    "mypy.dmypy.sys",
    "mypy.dmypy_server.Server",
    "mypy.dmypy_server.daemonize",
    "wait_for_server"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_status": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "check_status",
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.status_parser",
    "mypy.dmypy.sys",
    "print",
    "read_status",
    "request",
    "show_stats"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.do_stop": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "Exception",
    "mypy.dmypy.action",
    "mypy.dmypy.argparse",
    "mypy.dmypy.stop_parser",
    "mypy.dmypy.sys",
    "print",
    "request"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.get_status": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "check_status",
    "int",
    "read_status",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.hang_parser": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mypy.dmypy.help_parser": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mypy.dmypy.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.dmypy.kill_parser": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mypy.dmypy.main": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mypy.dmypy.parser"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.dmypy.parser": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mypy.dmypy.read_status": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "dict",
    "isinstance",
    "mypy.dmypy.json",
    "mypy.dmypy.os",
    "mypy.dmypy_util.STATUS_FILE",
    "object",
    "open",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.receive": {
  "data": {
   "shadows": "mypy.dmypy_util.receive"
  },
  "type": "import"
 },
 "mypy.dmypy.recheck_parser": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mypy.dmypy.request": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "OSError",
    "dict",
    "get_status",
    "mypy.dmypy.json",
    "mypy.dmypy.socket",
    "mypy.dmypy_util.receive",
    "object",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.restart_parser": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mypy.dmypy.show_stats": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "object",
    "print",
    "sorted",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "mypy.dmypy.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mypy.dmypy.start_parser": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mypy.dmypy.status_parser": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mypy.dmypy.stop_parser": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mypy.dmypy.subparsers": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mypy.dmypy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.dmypy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.dmypy.wait_for_server": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "SystemExit",
    "check_status",
    "float",
    "mypy.dmypy.sys",
    "mypy.dmypy.time",
    "print",
    "read_status"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server": {
  "data": {},
  "type": "module"
 },
 "mypy.dmypy_server.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.dmypy_server.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.dmypy_server.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.dmypy_server.GcLogger": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "mypy.dmypy_server.GcLogger.__enter__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mypy.dmypy_server.gc",
    "mypy.dmypy_server.time"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.GcLogger.__exit__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "mypy.dmypy_server.gc",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.GcLogger.gc_callback": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "mypy.dmypy_server.time",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.GcLogger.get_stats": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "float",
    "mypy.dmypy_server.time",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.dmypy_server.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.dmypy_server.MiB": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "mypy.dmypy_server.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.dmypy_server.SOCKET_NAME": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mypy.dmypy_server.STATUS_FILE": {
  "data": {
   "shadows": "mypy.dmypy_util.STATUS_FILE"
  },
  "type": "import"
 },
 "mypy.dmypy_server.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.dmypy_server.Server": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "mypy.dmypy_server.Server.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mypy.dmypy_server.os",
    "mypy.dmypy_server.sys",
    "mypy.dmypy_util.STATUS_FILE",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.check": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "GcLogger",
    "get_meminfo",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.cmd_check": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "SystemExit",
    "mypy.dmypy_server.io",
    "mypy.dmypy_server.sys",
    "object",
    "str",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.cmd_hang": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "mypy.dmypy_server.time",
    "object",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.cmd_recheck": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "object",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.cmd_status": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "get_meminfo",
    "object",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.cmd_stop": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.create_listening_socket": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "mypy.dmypy_server.SOCKET_NAME",
    "mypy.dmypy_server.os",
    "mypy.dmypy_server.socket"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.run_command": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "getattr",
    "method",
    "object",
    "str",
    "typing.Dict",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.Server.serve": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "OSError",
    "isinstance",
    "mypy.dmypy_server.json",
    "mypy.dmypy_server.os",
    "mypy.dmypy_server.sys",
    "mypy.dmypy_util.STATUS_FILE",
    "mypy.dmypy_util.receive",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.daemonize": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "func",
    "int",
    "mypy.dmypy_server.os",
    "mypy.dmypy_server.sys",
    "open",
    "print",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "mypy.dmypy_server.get_meminfo": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ImportError",
    "float",
    "mypy.dmypy_server.MiB",
    "mypy.dmypy_server.os",
    "mypy.dmypy_server.psutil",
    "mypy.dmypy_server.resource",
    "mypy.dmypy_server.sys",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_server.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "mypy.dmypy_server.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.dmypy_server.mypy.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.dmypy_server.mypy.errors": {
  "data": {
   "shadows": "mypy.errors"
  },
  "type": "import"
 },
 "mypy.dmypy_server.mypy.main": {
  "data": {
   "shadows": "mypy.main"
  },
  "type": "import"
 },
 "mypy.dmypy_server.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.dmypy_server.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "mypy.dmypy_server.receive": {
  "data": {
   "shadows": "mypy.dmypy_util.receive"
  },
  "type": "import"
 },
 "mypy.dmypy_server.resource": {
  "data": {
   "shadows": "resource"
  },
  "type": "import"
 },
 "mypy.dmypy_server.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mypy.dmypy_server.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.dmypy_server.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.dmypy_util": {
  "data": {},
  "type": "module"
 },
 "mypy.dmypy_util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.dmypy_util.STATUS_FILE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.dmypy_util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.dmypy_util.receive": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "OSError",
    "bytearray",
    "dict",
    "isinstance",
    "mypy.dmypy_util.json",
    "mypy.dmypy_util.socket",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mypy.erasetype": {
  "data": {},
  "type": "module"
 },
 "mypy.erasetype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.erasetype.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.erasetype.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.erasetype.Container": {
  "data": {
   "shadows": "typing.Container"
  },
  "type": "import"
 },
 "mypy.erasetype.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.erasetype.EraseTypeVisitor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_any": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.types.ErasedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_instance": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_none_type": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mypy.types.Overloaded",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_type_type": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_type_var": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.EraseTypeVisitor.visit_union_type": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mypy.erasetype.erase_type",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.erasetype.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.erasetype.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.erasetype.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.erasetype.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.erasetype.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.erasetype.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.erasetype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.erasetype.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.erasetype.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.erasetype.TypeTranslator": {
  "data": {
   "shadows": "mypy.types.TypeTranslator"
  },
  "type": "import"
 },
 "mypy.erasetype.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.erasetype.TypeVarEraser": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "mypy.types.TypeTranslator"
   ]
  },
  "type": "class"
 },
 "mypy.erasetype.TypeVarEraser.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.TypeVarEraser.visit_type_var": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.erasetype.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.erasetype.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.erasetype.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.erasetype.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.erasetype.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.erasetype.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.erasetype.erase_type": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "EraseTypeVisitor",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.erase_typevars": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeVarEraser",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarId",
    "typing.Container",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.erase_typevars.erase_id": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bool",
    "id",
    "mypy.types.TypeVarId"
   ]
  },
  "type": "function"
 },
 "mypy.erasetype.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.erasetype.replace_meta_vars": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeVarEraser",
    "id.is_meta_var",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.errors": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.errors.CompileError": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.errors.CompileError.__init__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "bool",
    "str",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.errors.DecodeError": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.errors.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.errors.ErrorInfo": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.errors.ErrorInfo.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "mypy.errors.Errors.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.add_error_info": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "int",
    "mypy.errors.ErrorInfo",
    "str",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.blocker_module": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.copy": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mypy.errors.Errors"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.current_module": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.current_target": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.enter_function": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.enter_type": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.generate_unused_ignore_notes": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mypy.errors.ErrorInfo"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.import_context": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.initialize": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "collections.defaultdict",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.is_blockers": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "any",
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.is_errors": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.is_errors_for_file": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.is_typeshed_file": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.messages": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.num_messages": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.pop_function": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "mypy.errors.Errors.pop_target_component": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "mypy.errors.Errors.pop_type": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "mypy.errors.Errors.push_function": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.push_target_component": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.push_type": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.raise_error": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "CompileError"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.remove_duplicates": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.errors.allowed_duplicates",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.render_messages": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.errors.ErrorInfo",
    "remove_path_prefix",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.report": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.errors.ErrorInfo",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.reset": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "mypy.errors.Errors.set_file": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.set_file_ignored_lines": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.set_ignore_prefix": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.set_import_context": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.simplify_path": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "remove_path_prefix",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.sort_messages": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "len",
    "mypy.errors.ErrorInfo",
    "sorted",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Errors.targets": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.errors.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.errors.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.errors.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.errors.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.errors.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.errors.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.errors.T": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mypy.errors.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.errors.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.errors.allowed_duplicates": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mypy.errors.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.errors.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.errors.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.errors.mypy_version": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.errors.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.errors.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "mypy.errors.remove_path_prefix": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.errors.report_internal_error": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "int",
    "mypy.errors.Errors",
    "mypy.errors.pdb",
    "mypy.errors.sys",
    "mypy.errors.traceback",
    "mypy.options.Options",
    "mypy.version.__version__",
    "print",
    "repr",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.errors.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.errors.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mypy.expandtype": {
  "data": {
   "symbols_in_volume": [
    "mypy.types.FunctionLike",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.expandtype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.expandtype.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.expandtype.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.expandtype.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.expandtype.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.expandtype.ExpandTypeVisitor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.expandtype.ExpandTypeVisitor.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.expand_types": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "mypy.types.Type",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_any": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.types.ErasedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_instance": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_none_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_type_type": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_type_var": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_union_type": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.F": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.expandtype.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.expandtype.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.expandtype.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.expandtype.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.expandtype.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.expandtype.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.expandtype.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.expandtype.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.expandtype.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.expandtype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.expandtype.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.expandtype.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.expandtype.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.expandtype.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.expandtype.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.expandtype.expand_type": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ExpandTypeVisitor",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.expand_type_by_instance": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mypy.expandtype.expand_type",
    "mypy.types.Instance",
    "mypy.types.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.freshen_function_type_vars": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "mypy.expandtype.F",
    "mypy.expandtype.expand_type",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.TypeVarDef.new_unification_variable",
    "mypy.types.TypeVarType",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.experiments": {
  "data": {},
  "type": "module"
 },
 "mypy.experiments.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.experiments.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.experiments.STRICT_OPTIONAL": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mypy.experiments.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.experiments.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.experiments.find_occurrences": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mypy.experiments.strict_optional_set": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool",
    "contextlib.contextmanager",
    "mypy.experiments.STRICT_OPTIONAL",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.exprtotype": {
  "data": {},
  "type": "module"
 },
 "mypy.exprtotype.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.exprtotype.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.exprtotype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.exprtotype.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.CallableArgument": {
  "data": {
   "shadows": "mypy.types.CallableArgument"
  },
  "type": "import"
 },
 "mypy.exprtotype.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.exprtotype.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.exprtotype.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.Optional": {
  "data": {
   "shadows": "mypy.types.Optional"
  },
  "type": "import"
 },
 "mypy.exprtotype.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.exprtotype.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.exprtotype.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.exprtotype.TypeTranslationError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.exprtotype.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.exprtotype.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype._extract_argument_name": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Optional",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.exprtotype.expr_to_unanalyzed_type": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "SyntaxError",
    "enumerate",
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype._extract_argument_name",
    "mypy.fastparse.parse_type_comment",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.CallExpr",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.nodes.get_member_expr_fullname",
    "mypy.types.AnyType",
    "mypy.types.CallableArgument",
    "mypy.types.EllipsisType",
    "mypy.types.Optional",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "mypy.types.TypeOfAny.unannotated",
    "mypy.types.UnboundType",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mypy.exprtotype.get_member_expr_fullname": {
  "data": {
   "shadows": "mypy.nodes.get_member_expr_fullname"
  },
  "type": "import"
 },
 "mypy.exprtotype.parse_type_comment": {
  "data": {
   "shadows": "mypy.fastparse.parse_type_comment"
  },
  "type": "import"
 },
 "mypy.fastparse": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mypy.fastparse.sys",
    "mypy.nodes.Node",
    "print",
    "typed_ast.ast3.expr",
    "typed_ast.ast3.stmt",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.fastparse.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.fastparse.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.fastparse.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.fastparse.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.fastparse.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.fastparse.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.fastparse.ASTConverter": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "hasattr",
    "typed_ast.ast3",
    "typed_ast.ast3.Add",
    "typed_ast.ast3.BitAnd",
    "typed_ast.ast3.BitOr",
    "typed_ast.ast3.BitXor",
    "typed_ast.ast3.Div",
    "typed_ast.ast3.Eq",
    "typed_ast.ast3.FloorDiv",
    "typed_ast.ast3.Gt",
    "typed_ast.ast3.GtE",
    "typed_ast.ast3.In",
    "typed_ast.ast3.Is",
    "typed_ast.ast3.IsNot",
    "typed_ast.ast3.LShift",
    "typed_ast.ast3.Lt",
    "typed_ast.ast3.LtE",
    "typed_ast.ast3.MatMult",
    "typed_ast.ast3.Mod",
    "typed_ast.ast3.Mult",
    "typed_ast.ast3.NodeTransformer",
    "typed_ast.ast3.NotEq",
    "typed_ast.ast3.NotIn",
    "typed_ast.ast3.Pow",
    "typed_ast.ast3.RShift",
    "typed_ast.ast3.Sub"
   ]
  },
  "type": "class"
 },
 "mypy.fastparse.ASTConverter.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bool",
    "mypy.errors.Errors",
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.as_block": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Block",
    "typed_ast.ast3.stmt",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.as_required_block": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Block",
    "typed_ast.ast3.stmt",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.do_func_def": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "SyntaxError",
    "TypeConverter",
    "any",
    "bool",
    "isinstance",
    "len",
    "mypy.fastparse.TYPE_COMMENT_SYNTAX_ERROR",
    "mypy.fastparse._dummy_fallback",
    "mypy.fastparse.is_no_type_check_decorator",
    "mypy.messages.DUPLICATE_TYPE_SIGNATURES",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.Var",
    "mypy.sharedparse.argument_elide_name",
    "mypy.sharedparse.special_function_elide_names",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.EllipsisType",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeOfAny.unannotated",
    "typed_ast.ast3.AsyncFunctionDef",
    "typed_ast.ast3.Ellipsis",
    "typed_ast.ast3.FunctionDef",
    "typed_ast.ast3.FunctionType",
    "typed_ast.ast3.parse",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.fail": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.fix_function_overloads": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.Statement",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.from_comp_operator": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse.ASTConverter",
    "str",
    "type",
    "typed_ast.ast3.cmpop"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.from_operator": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse.ASTConverter",
    "str",
    "type",
    "typed_ast.ast3.operator"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.generic_visit": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "RuntimeError",
    "str",
    "type",
    "typed_ast.ast3.AST"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.in_class": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.note": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.set_type_optional": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "type",
    "type.optional",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.transform_args": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "make_argument",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Argument",
    "mypy.nodes.check_arg_names",
    "typed_ast.ast3.arguments",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.transform_args.fail_arg": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "str",
    "typed_ast.ast3.arg"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.transform_args.make_argument": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "TypeConverter",
    "int",
    "mypy.fastparse.parse_type_comment",
    "mypy.messages.DUPLICATE_TYPE_SIGNATURES",
    "mypy.nodes.Argument",
    "mypy.nodes.Var",
    "typed_ast.ast3.arg",
    "typed_ast.ast3.expr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.translate_expr_list": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "typed_ast.ast3.AST",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.translate_module_id": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.translate_stmt_list": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Statement",
    "typed_ast.ast3.AST",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "super",
    "typed_ast.ast3.AST",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_AnnAssign": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "TypeConverter",
    "mypy.fastparse.with_line",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.TempNode",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "typed_ast.ast3.AnnAssign"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Assert": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.AssertStmt",
    "typed_ast.ast3.Assert"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Assign": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse.with_line",
    "mypy.nodes.AssignmentStmt",
    "typed_ast.ast3.Assign"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_AsyncFor": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse.with_line",
    "mypy.nodes.ForStmt",
    "typed_ast.ast3.AsyncFor"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_AsyncFunctionDef": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "typed_ast.ast3.AsyncFunctionDef",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_AsyncWith": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse.with_line",
    "mypy.nodes.WithStmt",
    "typed_ast.ast3.AsyncWith"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Attribute": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "isinstance",
    "mypy.fastparse.with_line",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.SuperExpr",
    "typed_ast.ast3.Attribute",
    "typed_ast.ast3.Call",
    "typed_ast.ast3.Name",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_AugAssign": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.OperatorAssignmentStmt",
    "typed_ast.ast3.AugAssign"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Await": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.AwaitExpr",
    "typed_ast.ast3.Await"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_BinOp": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse.with_line",
    "mypy.nodes.OpExpr",
    "str",
    "type",
    "typed_ast.ast3.BinOp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_BoolOp": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "RuntimeError",
    "group",
    "isinstance",
    "len",
    "mypy.fastparse.with_line",
    "mypy.nodes.OpExpr",
    "str",
    "type",
    "typed_ast.ast3.And",
    "typed_ast.ast3.BoolOp",
    "typed_ast.ast3.Or"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_BoolOp.group": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "group",
    "len",
    "mypy.nodes.Expression",
    "mypy.nodes.OpExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Break": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.BreakStmt",
    "typed_ast.ast3.Break"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Bytes": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.StrExpr",
    "str",
    "typed_ast.ast3.Bytes",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Call": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "is_star2arg",
    "isinstance",
    "len",
    "mypy.fastparse.with_line",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.CallExpr",
    "str",
    "typed_ast.ast3.Call",
    "typed_ast.ast3.Starred",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Call.is_star2arg": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "bool",
    "typed_ast.ast3.keyword"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_ClassDef": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "dict",
    "mypy.fastparse.with_line",
    "mypy.nodes.ClassDef",
    "typed_ast.ast3.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Compare": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ComparisonExpr",
    "typed_ast.ast3.Compare"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Continue": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ContinueStmt",
    "typed_ast.ast3.Continue"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Delete": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "len",
    "mypy.fastparse.with_line",
    "mypy.nodes.DelStmt",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast3.Delete"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Dict": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "list",
    "mypy.fastparse.with_line",
    "mypy.nodes.DictExpr",
    "typed_ast.ast3.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_DictComp": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "bool",
    "mypy.fastparse.with_line",
    "mypy.nodes.DictionaryComprehension",
    "typed_ast.ast3.DictComp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Ellipsis": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.EllipsisExpr",
    "typed_ast.ast3.Ellipsis"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Expr": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ExpressionStmt",
    "typed_ast.ast3.Expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_ExtSlice": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr",
    "typed_ast.ast3.ExtSlice"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_For": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse.with_line",
    "mypy.nodes.ForStmt",
    "typed_ast.ast3.For"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_FormattedValue": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.StrExpr",
    "typed_ast.ast3.FormattedValue"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_FunctionDef": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "typed_ast.ast3.FunctionDef",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_GeneratorExp": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "bool",
    "mypy.fastparse.with_line",
    "mypy.nodes.GeneratorExpr",
    "typed_ast.ast3.GeneratorExp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Global": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.GlobalDecl",
    "typed_ast.ast3.Global"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_If": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.IfStmt",
    "typed_ast.ast3.If"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_IfExp": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ConditionalExpr",
    "typed_ast.ast3.IfExp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Import": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.Import",
    "typed_ast.ast3.Import"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_ImportFrom": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "len",
    "mypy.fastparse.with_line",
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportBase",
    "mypy.nodes.ImportFrom",
    "typed_ast.ast3.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Index": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "typed_ast.ast3.Index"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_JoinedStr": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.StrExpr",
    "typed_ast.ast3.JoinedStr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Lambda": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.LambdaExpr",
    "typed_ast.ast3.Lambda",
    "typed_ast.ast3.Return"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_List": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ListExpr",
    "typed_ast.ast3.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_ListComp": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ListComprehension",
    "typed_ast.ast3.GeneratorExp",
    "typed_ast.ast3.ListComp",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Module": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "typed_ast.ast3.Module"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Name": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.NameExpr",
    "typed_ast.ast3.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_NameConstant": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "str",
    "typed_ast.ast3.NameConstant"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Nonlocal": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.NonlocalDecl",
    "typed_ast.ast3.Nonlocal"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Num": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "RuntimeError",
    "complex",
    "float",
    "int",
    "isinstance",
    "mypy.fastparse.with_line",
    "mypy.nodes.ComplexExpr",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IntExpr",
    "str",
    "type",
    "typed_ast.ast3.Num",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Pass": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.PassStmt",
    "typed_ast.ast3.Pass"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Raise": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.RaiseStmt",
    "typed_ast.ast3.Raise"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Return": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.ReturnStmt",
    "typed_ast.ast3.Return"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Set": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.SetExpr",
    "typed_ast.ast3.Set"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_SetComp": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.SetComprehension",
    "typed_ast.ast3.GeneratorExp",
    "typed_ast.ast3.SetComp",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Slice": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr",
    "typed_ast.ast3.Slice"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Starred": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.StarExpr",
    "typed_ast.ast3.Starred"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Str": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "typed_ast.ast3.Str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Subscript": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.IndexExpr",
    "typed_ast.ast3.Subscript"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Try": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TryStmt",
    "typed_ast.ast3.Try"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Tuple": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast3.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_UnaryOp": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mypy.fastparse.with_line",
    "mypy.nodes.UnaryExpr",
    "str",
    "type",
    "typed_ast.ast3.Invert",
    "typed_ast.ast3.Not",
    "typed_ast.ast3.UAdd",
    "typed_ast.ast3.USub",
    "typed_ast.ast3.UnaryOp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_While": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.WhileStmt",
    "typed_ast.ast3.While"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_With": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse.with_line",
    "mypy.nodes.WithStmt",
    "typed_ast.ast3.With"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_Yield": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.YieldExpr",
    "typed_ast.ast3.Yield"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.ASTConverter.visit_YieldFrom": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "mypy.fastparse.with_line",
    "mypy.nodes.YieldFromExpr",
    "typed_ast.ast3.YieldFrom"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.fastparse.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.fastparse.Argument": {
  "data": {
   "shadows": "mypy.nodes.Argument"
  },
  "type": "import"
 },
 "mypy.fastparse.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.fastparse.BreakStmt": {
  "data": {
   "shadows": "mypy.nodes.BreakStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.fastparse.CallableArgument": {
  "data": {
   "shadows": "mypy.types.CallableArgument"
  },
  "type": "import"
 },
 "mypy.fastparse.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.fastparse.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.fastparse.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.ContinueStmt": {
  "data": {
   "shadows": "mypy.nodes.ContinueStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.fastparse.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.fastparse.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.fastparse.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.fastparse.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.fastparse.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.GlobalDecl": {
  "data": {
   "shadows": "mypy.nodes.GlobalDecl"
  },
  "type": "import"
 },
 "mypy.fastparse.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.fastparse.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.fastparse.ImportBase": {
  "data": {
   "shadows": "mypy.nodes.ImportBase"
  },
  "type": "import"
 },
 "mypy.fastparse.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.fastparse.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.fastparse.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.fastparse.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.fastparse.NonlocalDecl": {
  "data": {
   "shadows": "mypy.nodes.NonlocalDecl"
  },
  "type": "import"
 },
 "mypy.fastparse.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.fastparse.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.fastparse.OverloadPart": {
  "data": {
   "shadows": "mypy.nodes.OverloadPart"
  },
  "type": "import"
 },
 "mypy.fastparse.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.fastparse.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.fastparse.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.fastparse.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.Statement": {
  "data": {
   "shadows": "mypy.nodes.Statement"
  },
  "type": "import"
 },
 "mypy.fastparse.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.T": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mypy.fastparse.TYPE_COMMENT_AST_ERROR": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mypy.fastparse.TYPE_COMMENT_SYNTAX_ERROR": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mypy.fastparse.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.fastparse.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.fastparse.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.fastparse.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.fastparse.TypeConverter": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "mypy.fastparse.sys",
    "typed_ast.ast3.NodeTransformer"
   ]
  },
  "type": "class"
 },
 "mypy.fastparse.TypeConverter.__init__": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "int",
    "mypy.errors.Errors",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter._extract_argument_name": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "type",
    "typed_ast.ast3.NameConstant",
    "typed_ast.ast3.Str",
    "typed_ast.ast3.expr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter._visit_implementation": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "mypy.types.Type",
    "super",
    "typed_ast.ast3.AST",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.fail": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.generic_visit": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "getattr",
    "mypy.fastparse.TYPE_COMMENT_AST_ERROR",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "typed_ast.ast3.AST"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.note": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.parent": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "len",
    "typed_ast.ast3.AST",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.translate_argument_list": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "mypy.types.TypeList",
    "typed_ast.ast3.expr",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.translate_expr_list": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "mypy.types.Type",
    "typed_ast.ast3.expr",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "typed_ast.ast3.AST",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_Attribute": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mypy.fastparse.TYPE_COMMENT_AST_ERROR",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.UnboundType",
    "typed_ast.ast3.Attribute"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_Call": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "f.col_offset",
    "f.lineno",
    "isinstance",
    "mypy.fastparse.TYPE_COMMENT_AST_ERROR",
    "mypy.types.AnyType",
    "mypy.types.CallableArgument",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "stringify_name",
    "typed_ast.ast3.Call",
    "typed_ast.ast3.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_Ellipsis": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "mypy.types.EllipsisType",
    "mypy.types.Type",
    "typed_ast.ast3.Ellipsis"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_List": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "mypy.types.Type",
    "typed_ast.ast3.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_Name": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "typed_ast.ast3.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_NameConstant": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "str",
    "typed_ast.ast3.NameConstant"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_Str": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "typed_ast.ast3.Str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_Subscript": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "mypy.fastparse.TYPE_COMMENT_AST_ERROR",
    "mypy.fastparse.TYPE_COMMENT_SYNTAX_ERROR",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.UnboundType",
    "typed_ast.ast3.Index",
    "typed_ast.ast3.Subscript",
    "typed_ast.ast3.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_Tuple": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "mypy.fastparse._dummy_fallback",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typed_ast.ast3.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeConverter.visit_raw_str": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.fastparse.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.fastparse.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.fastparse.U": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mypy.fastparse.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.fastparse.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.fastparse.V": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mypy.fastparse.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.fastparse.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.fastparse.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.fastparse.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.fastparse._dummy_fallback": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mypy.fastparse.argument_elide_name": {
  "data": {
   "shadows": "mypy.sharedparse.argument_elide_name"
  },
  "type": "import"
 },
 "mypy.fastparse.ast3": {
  "data": {
   "shadows": "typed_ast.ast3"
  },
  "type": "import"
 },
 "mypy.fastparse.ast35": {
  "data": {
   "shadows": "typed_ast.ast35"
  },
  "type": "import"
 },
 "mypy.fastparse.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.fastparse.check_arg_names": {
  "data": {
   "shadows": "mypy.nodes.check_arg_names"
  },
  "type": "import"
 },
 "mypy.fastparse.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.fastparse.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.fastparse.find": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bool",
    "f",
    "mypy.fastparse.V",
    "typing.Callable",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.is_no_type_check_decorator": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typed_ast.ast3.Attribute",
    "typed_ast.ast3.Name",
    "typed_ast.ast3.expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.fastparse.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "mypy.fastparse.parse": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ASTConverter",
    "SyntaxError",
    "bytes",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.errors.Errors",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "set",
    "str",
    "typed_ast.ast3.parse",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.parse_type_comment": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "SyntaxError",
    "TypeConverter",
    "int",
    "isinstance",
    "mypy.errors.Errors",
    "mypy.fastparse.TYPE_COMMENT_SYNTAX_ERROR",
    "mypy.types.Type",
    "str",
    "typed_ast.ast3.Expression",
    "typed_ast.ast3.parse",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.special_function_elide_names": {
  "data": {
   "shadows": "mypy.sharedparse.special_function_elide_names"
  },
  "type": "import"
 },
 "mypy.fastparse.stringify_name": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typed_ast.ast3.AST",
    "typed_ast.ast3.Attribute",
    "typed_ast.ast3.Name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.fastparse.with_line": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "mypy.fastparse.T",
    "mypy.fastparse.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.with_line.wrapper": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "mypy.fastparse.T",
    "mypy.fastparse.U"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mypy.fastparse2": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mypy.fastparse2.sys",
    "mypy.nodes.Node",
    "print",
    "typed_ast.ast27.expr",
    "typed_ast.ast27.stmt",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.fastparse2.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.fastparse2.ASTConverter": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "typed_ast.ast27.Add",
    "typed_ast.ast27.BitAnd",
    "typed_ast.ast27.BitOr",
    "typed_ast.ast27.BitXor",
    "typed_ast.ast27.Div",
    "typed_ast.ast27.Eq",
    "typed_ast.ast27.FloorDiv",
    "typed_ast.ast27.Gt",
    "typed_ast.ast27.GtE",
    "typed_ast.ast27.In",
    "typed_ast.ast27.Is",
    "typed_ast.ast27.IsNot",
    "typed_ast.ast27.LShift",
    "typed_ast.ast27.Lt",
    "typed_ast.ast27.LtE",
    "typed_ast.ast27.Mod",
    "typed_ast.ast27.Mult",
    "typed_ast.ast27.NodeTransformer",
    "typed_ast.ast27.NotEq",
    "typed_ast.ast27.NotIn",
    "typed_ast.ast27.Pow",
    "typed_ast.ast27.RShift",
    "typed_ast.ast27.Sub"
   ]
  },
  "type": "class"
 },
 "mypy.fastparse2.ASTConverter.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "bool",
    "mypy.errors.Errors",
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.as_block": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Block",
    "typed_ast.ast27.stmt",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.as_required_block": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Block",
    "typed_ast.ast27.stmt",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.fail": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.fix_function_overloads": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.Statement",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.from_comp_operator": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse2.ASTConverter",
    "str",
    "type",
    "typed_ast.ast27.cmpop"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.from_operator": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse2.ASTConverter",
    "str",
    "type",
    "typed_ast.ast27.operator"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.generic_visit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "RuntimeError",
    "str",
    "type",
    "typed_ast.ast27.AST"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.in_class": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.set_type_optional": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "type",
    "type.optional",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.stringify_name": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "type",
    "typed_ast.ast27.AST",
    "typed_ast.ast27.Attribute",
    "typed_ast.ast27.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "convert_arg",
    "enumerate",
    "extract_names",
    "get_type",
    "int",
    "len",
    "mypy.fastparse.TypeConverter",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Argument",
    "mypy.nodes.Statement",
    "mypy.nodes.Var",
    "mypy.nodes.check_arg_names",
    "typed_ast.ast27.arguments",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.convert_arg": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.Tuple",
    "typed_ast.ast27.dump",
    "typed_ast.ast27.expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.extract_names": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "extract_names",
    "isinstance",
    "str",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.Tuple",
    "typed_ast.ast27.expr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.fail_arg": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.get_type": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.translate_expr_list": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "typed_ast.ast27.AST",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.translate_module_id": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.translate_stmt_list": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Statement",
    "typed_ast.ast27.AST",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.try_handler": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TryStmt",
    "typed_ast.ast27.ExceptHandler",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.stmt",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "super",
    "typed_ast.ast27.AST",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Assert": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.AssertStmt",
    "typed_ast.ast27.Assert"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Assign": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse2.with_line",
    "mypy.nodes.AssignmentStmt",
    "typed_ast.ast27.Assign"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Attribute": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.SuperExpr",
    "typed_ast.ast27.Attribute",
    "typed_ast.ast27.Call",
    "typed_ast.ast27.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_AugAssign": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.OperatorAssignmentStmt",
    "typed_ast.ast27.AugAssign"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_BinOp": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse2.with_line",
    "mypy.nodes.OpExpr",
    "str",
    "type",
    "typed_ast.ast27.BinOp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_BoolOp": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "RuntimeError",
    "group",
    "isinstance",
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.OpExpr",
    "str",
    "type",
    "typed_ast.ast27.And",
    "typed_ast.ast27.BoolOp",
    "typed_ast.ast27.Or"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_BoolOp.group": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "group",
    "len",
    "mypy.nodes.Expression",
    "mypy.nodes.OpExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Break": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.BreakStmt",
    "typed_ast.ast27.Break"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Call": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.CallExpr",
    "typed_ast.ast27.Call"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ClassDef": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ClassDef",
    "typed_ast.ast27.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Compare": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ComparisonExpr",
    "typed_ast.ast27.Compare"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Continue": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ContinueStmt",
    "typed_ast.ast27.Continue"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Delete": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.DelStmt",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.Delete"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Dict": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "list",
    "mypy.fastparse2.with_line",
    "mypy.nodes.DictExpr",
    "typed_ast.ast27.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_DictComp": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.DictionaryComprehension",
    "typed_ast.ast27.DictComp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Ellipsis": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr",
    "typed_ast.ast27.Ellipsis"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Exec": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ExecStmt",
    "typed_ast.ast27.Exec"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Expr": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ExpressionStmt",
    "typed_ast.ast27.Expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ExtSlice": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.ExtSlice"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_For": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse2.with_line",
    "mypy.nodes.ForStmt",
    "typed_ast.ast27.For"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_FunctionDef": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "SyntaxError",
    "any",
    "isinstance",
    "len",
    "mypy.fastparse.TypeConverter",
    "mypy.fastparse2.TYPE_COMMENT_SYNTAX_ERROR",
    "mypy.fastparse2._dummy_fallback",
    "mypy.fastparse2.is_no_type_check_decorator",
    "mypy.fastparse2.with_line",
    "mypy.messages.DUPLICATE_TYPE_SIGNATURES",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.Statement",
    "mypy.nodes.Var",
    "mypy.sharedparse.argument_elide_name",
    "mypy.sharedparse.special_function_elide_names",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.EllipsisType",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeOfAny.unannotated",
    "typed_ast.ast27.FunctionDef",
    "typed_ast.ast3.Ellipsis",
    "typed_ast.ast3.FunctionType",
    "typed_ast.ast3.parse",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_GeneratorExp": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.GeneratorExpr",
    "typed_ast.ast27.GeneratorExp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Global": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.GlobalDecl",
    "typed_ast.ast27.Global"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_If": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.IfStmt",
    "typed_ast.ast27.If"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_IfExp": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ConditionalExpr",
    "typed_ast.ast27.IfExp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Import": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.Import",
    "typed_ast.ast27.Import"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ImportFrom": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportBase",
    "mypy.nodes.ImportFrom",
    "typed_ast.ast27.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Index": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typed_ast.ast27.Index"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Lambda": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.LambdaExpr",
    "typed_ast.ast27.Lambda",
    "typed_ast.ast27.Return"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_List": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ListExpr",
    "typed_ast.ast27.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ListComp": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ListComprehension",
    "typed_ast.ast27.GeneratorExp",
    "typed_ast.ast27.ListComp",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Module": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "typed_ast.ast27.Module"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Name": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.NameExpr",
    "typed_ast.ast27.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Num": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "RuntimeError",
    "complex",
    "float",
    "int",
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.ComplexExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.UnaryExpr",
    "str",
    "type",
    "typed_ast.ast27.Num"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Pass": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.PassStmt",
    "typed_ast.ast27.Pass"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Print": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.PrintStmt",
    "typed_ast.ast27.Print"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Raise": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.RaiseStmt",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.Raise"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Repr": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.BackquoteExpr",
    "typed_ast.ast27.Repr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Return": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ReturnStmt",
    "typed_ast.ast27.Return"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Set": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.SetExpr",
    "typed_ast.ast27.Set"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_SetComp": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.SetComprehension",
    "typed_ast.ast27.GeneratorExp",
    "typed_ast.ast27.SetComp",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Slice": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr",
    "typed_ast.ast27.Slice"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Str": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "str",
    "typed_ast.ast27.Str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Subscript": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.IndexExpr",
    "typed_ast.ast27.Subscript"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_TryExcept": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.TryStmt",
    "typed_ast.ast27.TryExcept"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_TryFinally": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.TryStmt",
    "typed_ast.ast27.TryExcept",
    "typed_ast.ast27.TryFinally"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Tuple": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_UnaryOp": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.UnaryExpr",
    "str",
    "type",
    "typed_ast.ast27.Invert",
    "typed_ast.ast27.Not",
    "typed_ast.ast27.UAdd",
    "typed_ast.ast27.USub",
    "typed_ast.ast27.UnaryOp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_While": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.WhileStmt",
    "typed_ast.ast27.While"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_With": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse2.with_line",
    "mypy.nodes.WithStmt",
    "typed_ast.ast27.With"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Yield": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.YieldExpr",
    "typed_ast.ast27.Yield"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.fastparse2.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.fastparse2.Argument": {
  "data": {
   "shadows": "mypy.nodes.Argument"
  },
  "type": "import"
 },
 "mypy.fastparse2.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.fastparse2.BreakStmt": {
  "data": {
   "shadows": "mypy.nodes.BreakStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.fastparse2.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.fastparse2.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.fastparse2.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ContinueStmt": {
  "data": {
   "shadows": "mypy.nodes.ContinueStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.fastparse2.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse2.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.fastparse2.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.fastparse2.ExecStmt": {
  "data": {
   "shadows": "mypy.nodes.ExecStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.fastparse2.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.fastparse2.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.GlobalDecl": {
  "data": {
   "shadows": "mypy.nodes.GlobalDecl"
  },
  "type": "import"
 },
 "mypy.fastparse2.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.fastparse2.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.fastparse2.ImportBase": {
  "data": {
   "shadows": "mypy.nodes.ImportBase"
  },
  "type": "import"
 },
 "mypy.fastparse2.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.fastparse2.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.fastparse2.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse2.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.fastparse2.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.fastparse2.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.fastparse2.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.fastparse2.OverloadPart": {
  "data": {
   "shadows": "mypy.nodes.OverloadPart"
  },
  "type": "import"
 },
 "mypy.fastparse2.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.fastparse2.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.fastparse2.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.fastparse2.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse2.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Statement": {
  "data": {
   "shadows": "mypy.nodes.Statement"
  },
  "type": "import"
 },
 "mypy.fastparse2.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.T": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mypy.fastparse2.TYPE_COMMENT_AST_ERROR": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mypy.fastparse2.TYPE_COMMENT_SYNTAX_ERROR": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mypy.fastparse2.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.fastparse2.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.fastparse2.TypeConverter": {
  "data": {
   "shadows": "mypy.fastparse.TypeConverter"
  },
  "type": "import"
 },
 "mypy.fastparse2.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.fastparse2.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.fastparse2.U": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mypy.fastparse2.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.fastparse2.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.fastparse2.V": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mypy.fastparse2.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.fastparse2.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2._dummy_fallback": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mypy.fastparse2.argument_elide_name": {
  "data": {
   "shadows": "mypy.sharedparse.argument_elide_name"
  },
  "type": "import"
 },
 "mypy.fastparse2.ast27": {
  "data": {
   "shadows": "typed_ast.ast27"
  },
  "type": "import"
 },
 "mypy.fastparse2.ast3": {
  "data": {
   "shadows": "typed_ast.ast3"
  },
  "type": "import"
 },
 "mypy.fastparse2.ast35": {
  "data": {
   "shadows": "typed_ast.ast35"
  },
  "type": "import"
 },
 "mypy.fastparse2.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.fastparse2.check_arg_names": {
  "data": {
   "shadows": "mypy.nodes.check_arg_names"
  },
  "type": "import"
 },
 "mypy.fastparse2.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.fastparse2.find": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bool",
    "f",
    "mypy.fastparse2.V",
    "typing.Callable",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.is_no_type_check_decorator": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typed_ast.ast27.Attribute",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.fastparse2.parse": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ASTConverter",
    "SyntaxError",
    "bytes",
    "isinstance",
    "mypy.errors.Errors",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "set",
    "str",
    "typed_ast.ast27.parse",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.parse_type_comment": {
  "data": {
   "shadows": "mypy.fastparse.parse_type_comment"
  },
  "type": "import"
 },
 "mypy.fastparse2.special_function_elide_names": {
  "data": {
   "shadows": "mypy.sharedparse.special_function_elide_names"
  },
  "type": "import"
 },
 "mypy.fastparse2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.fastparse2.with_line": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mypy.fastparse2.T",
    "mypy.fastparse2.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.with_line.wrapper": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "mypy.fastparse2.T",
    "mypy.fastparse2.U"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mypy.fixup": {
  "data": {},
  "type": "module"
 },
 "mypy.fixup.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.fixup.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.fixup.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.fixup.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.fixup.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.fixup.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.fixup.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.fixup.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.fixup.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.fixup.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.fixup.LDEF": {
  "data": {
   "shadows": "mypy.nodes.LDEF"
  },
  "type": "import"
 },
 "mypy.fixup.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "mypy.fixup.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.fixup.NOT_READY": {
  "data": {
   "shadows": "mypy.types.NOT_READY"
  },
  "type": "import"
 },
 "mypy.fixup.NodeFixer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.fixup.NodeFixer.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeFixer",
    "bool",
    "mypy.nodes.MypyFile",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_class_def": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_decorator": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "mypy.nodes.Decorator"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_func_def": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_overloaded_func_def": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mypy.nodes.OverloadedFuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_symbol_table": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "lookup_qualified_stnode",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "stale_info"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_type_info": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_type_var_expr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeFixer.visit_var": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.fixup.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.fixup.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.fixup.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.fixup.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "mypy.fixup.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.fixup.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.fixup.TYPE_ALIAS": {
  "data": {
   "shadows": "mypy.nodes.TYPE_ALIAS"
  },
  "type": "import"
 },
 "mypy.fixup.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.fixup.TypeFixer": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.fixup.TypeFixer.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.MypyFile",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_any": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_callable_type": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_deleted_type": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_instance": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "lookup_qualified",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "mypy.types.NOT_READY",
    "stale_info"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_none_type": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_overloaded": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_partial_type": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "RuntimeError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_tuple_type": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_type_type": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_type_var": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_typeddict_type": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_unbound_type": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_uninhabited_type": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_union_type": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeFixer.visit_void": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.fixup.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.fixup.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.fixup.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.fixup.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.fixup.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.fixup.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.fixup.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.fixup.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.fixup.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.fixup.compute_all_mros": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.GDEF",
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.fixup_module_pass_one": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NodeFixer",
    "bool",
    "mypy.nodes.MypyFile",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.fixup_module_pass_two": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bool",
    "compute_all_mros",
    "mypy.nodes.MypyFile",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.lookup_qualified": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "bool",
    "lookup_qualified_stnode",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolNode",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.lookup_qualified_stnode": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fixup.stale_info": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "mypy.nodes.ClassDef",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.git": {
  "data": {
   "symbols_in_volume": [
    "mypy.git.MYPY"
   ]
  },
  "type": "module"
 },
 "mypy.git.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.git.MYPY": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mypy.git.chdir_prefix": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dir",
    "mypy.git.os",
    "mypy.git.pipes",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.error_submodule_not_initialized": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dir",
    "mypy.git.chdir_prefix",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.error_submodule_not_updated": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dir",
    "mypy.git.chdir_prefix",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.get_submodules": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dir",
    "mypy.git.subprocess",
    "mypy.git.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.git_revision": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bytes",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.has_extra_files": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.have_git": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "OSError",
    "bool",
    "mypy.git.subprocess"
   ]
  },
  "type": "function"
 },
 "mypy.git.is_dirty": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.is_git_repo": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bool",
    "dir",
    "mypy.git.os",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.git.pipes": {
  "data": {
   "shadows": "pipes"
  },
  "type": "import"
 },
 "mypy.git.submodule_revision": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bytes",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.git.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.git.verify_git_integrity_or_abort": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "mypy.git.error_submodule_not_initialized",
    "mypy.git.error_submodule_not_updated",
    "mypy.git.get_submodules",
    "mypy.git.git_revision",
    "mypy.git.has_extra_files",
    "mypy.git.have_git",
    "mypy.git.is_dirty",
    "mypy.git.is_git_repo",
    "mypy.git.os",
    "mypy.git.submodule_revision",
    "mypy.git.sys",
    "mypy.git.warn_dirty",
    "mypy.git.warn_extra_files",
    "mypy.git.warn_no_git_executable",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.warn_dirty": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dir",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.warn_extra_files": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "dir",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.warn_no_git_executable": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.git.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.indirection": {
  "data": {},
  "type": "module"
 },
 "mypy.indirection.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.indirection.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.indirection.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.indirection.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.indirection.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.indirection.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.indirection.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.indirection.SyntheticTypeVisitor": {
  "data": {
   "shadows": "mypy.types.SyntheticTypeVisitor"
  },
  "type": "import"
 },
 "mypy.indirection.TypeIndirectionVisitor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.types.SyntheticTypeVisitor",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "mypy.indirection.TypeIndirectionVisitor.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor._visit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mypy.types.Type",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.find_modules": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mypy.types.Type",
    "str",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_any": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_callable_argument": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.types.CallableArgument",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_callable_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.indirection.extract_module_names",
    "mypy.types.CallableType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_deleted_type": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_ellipsis_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.types.EllipsisType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_erased_type": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_forwardref_type": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_instance": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.util.split_module_names",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_none_type": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_overloaded": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.types.Overloaded",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_partial_type": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_star_type": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mypy.types.StarType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_tuple_type": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "mypy.types.TupleType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_type_list": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mypy.types.TypeList",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_type_type": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mypy.types.TypeType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_type_var": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mypy.types.TypeVarType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.types.TypedDictType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_unbound_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mypy.types.UnboundType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "mypy.types.UninhabitedType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_union_type": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.types.UnionType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.indirection.extract_module_names": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mypy.util.split_module_names",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.indirection.split_module_names": {
  "data": {
   "shadows": "mypy.util.split_module_names"
  },
  "type": "import"
 },
 "mypy.indirection.types": {
  "data": {
   "shadows": "mypy.types"
  },
  "type": "import"
 },
 "mypy.infer": {
  "data": {},
  "type": "module"
 },
 "mypy.infer.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.infer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.infer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.infer.SUBTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUBTYPE_OF"
  },
  "type": "import"
 },
 "mypy.infer.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.infer.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.infer.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.infer.infer_constraints": {
  "data": {
   "shadows": "mypy.constraints.infer_constraints"
  },
  "type": "import"
 },
 "mypy.infer.infer_constraints_for_callable": {
  "data": {
   "shadows": "mypy.constraints.infer_constraints_for_callable"
  },
  "type": "import"
 },
 "mypy.infer.infer_function_type_arguments": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.constraints.infer_constraints_for_callable",
    "mypy.solve.solve_constraints",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.infer.infer_type_arguments": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mypy.constraints.SUBTYPE_OF",
    "mypy.constraints.infer_constraints",
    "mypy.solve.solve_constraints",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.infer.solve_constraints": {
  "data": {
   "shadows": "mypy.solve.solve_constraints"
  },
  "type": "import"
 },
 "mypy.join": {
  "data": {},
  "type": "module"
 },
 "mypy.join.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.join.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.join.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.join.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.join.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.join.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.join.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.join.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.join.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.join.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.join.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.join.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.join.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.join.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.join.TypeJoinVisitor": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.join.TypeJoinVisitor.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.default": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnboundType",
    "object_from_instance"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.join": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "mypy.join.join_types",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_any": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_callable_type": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "any",
    "combine_similar_callables",
    "is_similar_callables",
    "isinstance",
    "join_similar_callables",
    "mypy.join.join_types",
    "mypy.subtypes.is_equivalent",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_deleted_type": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_erased_type": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_instance": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "is_better",
    "isinstance",
    "join_instances",
    "mypy.join.join_types",
    "mypy.subtypes.is_protocol_implementation",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_none_type": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_overloaded": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "combine_similar_callables",
    "is_similar_callables",
    "isinstance",
    "len",
    "mypy.join.join_types",
    "mypy.subtypes.is_equivalent",
    "mypy.subtypes.is_subtype",
    "mypy.types.FunctionLike",
    "mypy.types.Overloaded",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_partial_type": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_tuple_type": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "isinstance",
    "join_instances",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_type_type": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_type_var": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "join_type_list",
    "list",
    "mypy.join.join_types",
    "mypy.subtypes.is_equivalent",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_unbound_type": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeJoinVisitor.visit_union_type": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "mypy.subtypes.is_subtype",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.join.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.join.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.join.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.join.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.join.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.join.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.join.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.join.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.join.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.join.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.join.combine_similar_callables": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "len",
    "mypy.join.join_types",
    "mypy.types.CallableType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.join.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.join.is_better": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.is_equivalent": {
  "data": {
   "shadows": "mypy.subtypes.is_equivalent"
  },
  "type": "import"
 },
 "mypy.join.is_proper_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_proper_subtype"
  },
  "type": "import"
 },
 "mypy.join.is_protocol_implementation": {
  "data": {
   "shadows": "mypy.subtypes.is_protocol_implementation"
  },
  "type": "import"
 },
 "mypy.join.is_similar_callables": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "bool",
    "len",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.join.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.join.is_subtype_ignoring_tvars": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype_ignoring_tvars"
  },
  "type": "import"
 },
 "mypy.join.join_instances": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "join_instances_via_supertype",
    "len",
    "mypy.join.join_types",
    "mypy.subtypes.is_subtype",
    "mypy.subtypes.is_subtype_ignoring_tvars",
    "mypy.types.Instance",
    "mypy.types.Type",
    "object_from_instance",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.join.join_instances_via_supertype": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "is_better",
    "mypy.join.join_instances",
    "mypy.join.join_types",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.subtypes.is_subtype",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.join.join_similar_callables": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "len",
    "mypy.join.join_types",
    "mypy.meet.meet_types",
    "mypy.types.CallableType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.join.join_simple": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeJoinVisitor",
    "isinstance",
    "mypy.subtypes.is_proper_subtype",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.ErasedType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union",
    "mypy.types.true_or_false",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.join.join_type_list": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "mypy.join.join_types",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.join.join_types": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TypeJoinVisitor",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.ErasedType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "mypy.types.true_or_false"
   ]
  },
  "type": "function"
 },
 "mypy.join.map_instance_to_supertype": {
  "data": {
   "shadows": "mypy.maptype.map_instance_to_supertype"
  },
  "type": "import"
 },
 "mypy.join.meet_types": {
  "data": {
   "shadows": "mypy.meet.meet_types"
  },
  "type": "import"
 },
 "mypy.join.object_from_instance": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.join.true_or_false": {
  "data": {
   "shadows": "mypy.types.true_or_false"
  },
  "type": "import"
 },
 "mypy.literals": {
  "data": {
   "symbols_in_volume": [
    "mypy.literals._Hasher",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mypy.literals.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.literals.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.literals.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.literals.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.literals.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.literals.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.literals.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.literals.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.literals.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.literals.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.literals.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.literals.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.literals.EnumCallExpr": {
  "data": {
   "shadows": "mypy.nodes.EnumCallExpr"
  },
  "type": "import"
 },
 "mypy.literals.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.literals.ExpressionVisitor": {
  "data": {
   "shadows": "mypy.visitor.ExpressionVisitor"
  },
  "type": "import"
 },
 "mypy.literals.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.literals.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.literals.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.literals.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.literals.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.literals.Key": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "mypy.literals.LITERAL_NO": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_NO"
  },
  "type": "import"
 },
 "mypy.literals.LITERAL_TYPE": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_TYPE"
  },
  "type": "import"
 },
 "mypy.literals.LITERAL_YES": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_YES"
  },
  "type": "import"
 },
 "mypy.literals.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.literals.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.literals.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.literals.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.literals.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.literals.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.literals.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.literals.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.literals.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.literals.PromoteExpr": {
  "data": {
   "shadows": "mypy.nodes.PromoteExpr"
  },
  "type": "import"
 },
 "mypy.literals.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.literals.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.literals.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.literals.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.literals.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.literals.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.literals.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.literals.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.literals.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.literals.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.literals.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.literals.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.literals.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.literals.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.literals.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.literals.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.literals.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.literals.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.literals.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.literals._Hasher": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.visitor.ExpressionVisitor",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "mypy.literals._Hasher.seq_expr": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "all",
    "mypy.literals.Key",
    "mypy.literals.literal",
    "mypy.literals.literal_hash",
    "mypy.nodes.LITERAL_YES",
    "mypy.nodes.ListExpr",
    "mypy.nodes.SetExpr",
    "mypy.nodes.TupleExpr",
    "str",
    "tuple",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit__promote_expr": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mypy.nodes.PromoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_await_expr": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_backquote_expr": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_bytes_expr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.BytesExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_call_expr": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_cast_expr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_comparison_expr": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.ComparisonExpr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_complex_expr": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.ComplexExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_conditional_expr": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_dict_expr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "all",
    "mypy.literals.Key",
    "mypy.literals.literal",
    "mypy.literals.literal_hash",
    "mypy.nodes.DictExpr",
    "mypy.nodes.LITERAL_YES",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_dictionary_comprehension": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_ellipsis": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_enum_call_expr": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mypy.nodes.EnumCallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_float_expr": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.FloatExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_generator_expr": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_index_expr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal",
    "mypy.literals.literal_hash",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.LITERAL_YES",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_int_expr": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.IntExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_lambda_expr": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_list_comprehension": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_list_expr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.ListExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_member_expr": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_name_expr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_namedtuple_expr": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mypy.nodes.NamedTupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_newtype_expr": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "mypy.nodes.NewTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_op_expr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.OpExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_reveal_type_expr": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_set_comprehension": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_set_expr": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.SetExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_slice_expr": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_star_expr": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_str_expr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.StrExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_super_expr": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.nodes.SuperExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_temp_node": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "mypy.nodes.TempNode"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_tuple_expr": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.TupleExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_type_alias_expr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mypy.nodes.TypeAliasExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_type_application": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_type_var_expr": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_typeddict_expr": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mypy.nodes.TypedDictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_unary_expr": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.UnaryExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_unicode_expr": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.UnicodeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_yield_expr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_yield_from_expr": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._hasher": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "mypy.literals.literal": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "literal_hash",
    "min",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.ComplexExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.LITERAL_NO",
    "mypy.nodes.LITERAL_TYPE",
    "mypy.nodes.LITERAL_YES",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.OpExpr",
    "mypy.nodes.StarExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnaryExpr",
    "mypy.nodes.UnicodeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals.literal_hash": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals.subkeys": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "mypy.literals.Key",
    "tuple",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.main": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "mypy.build.PYTHON_EXTENSIONS",
    "mypy.main.flag_prefix_map",
    "mypy.main.flag_prefix_pairs",
    "mypy.main.os",
    "mypy.main.parse_version",
    "mypy.main.re",
    "str",
    "tuple"
   ]
  },
  "type": "module"
 },
 "mypy.main.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.main.AugmentedHelpFormatter": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "mypy.main.argparse"
   ]
  },
  "type": "class"
 },
 "mypy.main.AugmentedHelpFormatter.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.main.BuildResult": {
  "data": {
   "shadows": "mypy.build.BuildResult"
  },
  "type": "import"
 },
 "mypy.main.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.main.BuildType": {
  "data": {
   "shadows": "mypy.options.BuildType"
  },
  "type": "import"
 },
 "mypy.main.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.main.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.main.FOOTER": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "mypy.main.InvalidPackageName": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.main.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.main.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.main.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.main.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.main.PYTHON_EXTENSIONS": {
  "data": {
   "shadows": "mypy.build.PYTHON_EXTENSIONS"
  },
  "type": "import"
 },
 "mypy.main.PY_EXTENSIONS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mypy.main.SHARED_CONFIG_FILES": {
  "data": {
   "lineno": 657
  },
  "type": "constant"
 },
 "mypy.main.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.main.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.main.SplitNamespace": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mypy.main.argparse"
   ]
  },
  "type": "class"
 },
 "mypy.main.SplitNamespace.__getattr__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "getattr",
    "len",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.main.SplitNamespace.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.main.SplitNamespace.__setattr__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "setattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.main.SplitNamespace._get": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.main.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.main.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.main.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "mypy.main.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.main.config_types": {
  "data": {
   "lineno": 644
  },
  "type": "constant"
 },
 "mypy.main.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "mypy.main.crawl_up": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "dir",
    "get_init_file",
    "mypy.main.InvalidPackageName",
    "mypy.main.os",
    "str",
    "strip_py",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.main.create_source_list": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "crawl_up",
    "expand_dir",
    "fail",
    "mypy.build.BuildSource",
    "mypy.main.InvalidPackageName",
    "mypy.main.PY_EXTENSIONS",
    "mypy.main.os",
    "mypy.options.Options",
    "str",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.main.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.main.expand_dir": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "crawl_up",
    "get_init_file",
    "mypy.build.BuildSource",
    "mypy.main.PY_EXTENSIONS",
    "mypy.main.keyfunc",
    "mypy.main.os",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.main.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.main.fail": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "mypy.main.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.main.find_bin_directory": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mypy.main.os",
    "range",
    "readlinkabs",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.main.flag_prefix_map": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "mypy.main.flag_prefix_pairs": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "mypy.main.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mypy.main.get_init_file": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "dir",
    "mypy.main.PY_EXTENSIONS",
    "mypy.main.os",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.main.invert_flag_name": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len",
    "mypy.main.flag_prefix_map",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.main.keyfunc": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "mypy.main.PY_EXTENSIONS",
    "mypy.main.os",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.main.main": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "BrokenPipeError",
    "find_bin_directory",
    "mypy.errors.CompileError",
    "mypy.main.sys",
    "mypy.main.time",
    "mypy.util.write_junit_xml",
    "print",
    "process_options",
    "str",
    "type_check_only",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.main.orig_stat": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mypy.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.main.parse_config_file": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "mypy.defaults.CONFIG_FILE",
    "mypy.main.SHARED_CONFIG_FILES",
    "mypy.main.configparser",
    "mypy.main.fnmatch",
    "mypy.main.os",
    "mypy.main.re",
    "mypy.main.sys",
    "mypy.options.Options",
    "mypy.options.Options.PER_MODULE_OPTIONS",
    "parse_section",
    "print",
    "set",
    "setattr",
    "sorted",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.main.parse_section": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "callable",
    "ct",
    "getattr",
    "mypy.main.argparse",
    "mypy.main.config_types",
    "mypy.main.sys",
    "mypy.options.Options",
    "mypy.report.reporter_classes",
    "object",
    "print",
    "str",
    "type",
    "typing.Dict",
    "typing.Mapping",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.main.parse_version": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "mypy.defaults.PYTHON3_VERSION_MIN",
    "mypy.main.argparse",
    "mypy.main.re",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.main.process_options": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "add_invertible_flag",
    "bool",
    "create_source_list",
    "fail",
    "getattr",
    "len",
    "mypy.build.BuildSource",
    "mypy.build.find_modules_recursive",
    "mypy.build.mypy_path",
    "mypy.defaults.CACHE_DIR",
    "mypy.defaults.CONFIG_FILE",
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.experiments.find_occurrences",
    "mypy.main.AugmentedHelpFormatter",
    "mypy.main.FOOTER",
    "mypy.main.SplitNamespace",
    "mypy.main.argparse",
    "mypy.main.os",
    "mypy.main.parse_version",
    "mypy.main.sys",
    "mypy.options.BuildType.MODULE",
    "mypy.options.BuildType.PROGRAM_TEXT",
    "mypy.options.Options",
    "mypy.report.reporter_classes",
    "mypy.version.__version__",
    "parse_config_file",
    "print",
    "setattr",
    "sorted",
    "str",
    "sum",
    "typing.List",
    "typing.Tuple",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.main.process_options.add_invertible_flag": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "bool",
    "help",
    "mypy.main.argparse",
    "mypy.main.invert_flag_name",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.main.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.main.readlinkabs": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.main.os",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.main.reporter_classes": {
  "data": {
   "shadows": "mypy.report.reporter_classes"
  },
  "type": "import"
 },
 "mypy.main.stat_proxy": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mypy.main.orig_stat",
    "mypy.main.os",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.main.strip_py": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "len",
    "mypy.main.PY_EXTENSIONS",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.main.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.main.type_check_only": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mypy.build.BuildResult",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.options.Options",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.main.util": {
  "data": {
   "shadows": "mypy.util"
  },
  "type": "import"
 },
 "mypy.maptype": {
  "data": {},
  "type": "module"
 },
 "mypy.maptype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.maptype.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.maptype.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.maptype.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.maptype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.maptype.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.maptype.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.maptype.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.maptype.class_derivation_paths": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.maptype.instance_to_type_environment": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.map_instance_to_direct_supertypes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "instance_to_type_environment",
    "isinstance",
    "len",
    "mypy.expandtype.expand_type",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.unannotated",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.map_instance_to_supertype": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "map_instance_to_supertypes",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.map_instance_to_supertypes": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "class_derivation_paths",
    "len",
    "map_instance_to_direct_supertypes",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.from_error",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.meet": {
  "data": {},
  "type": "module"
 },
 "mypy.meet.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.meet.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.meet.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.meet.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.meet.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.meet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.meet.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.meet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.meet.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.meet.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.meet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.meet.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.meet.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.meet.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.meet.TypeMeetVisitor": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.meet.TypeMeetVisitor.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.default": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.meet": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "mypy.meet.meet_types",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_any": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_callable_type": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "meet_similar_callables",
    "mypy.join.combine_similar_callables",
    "mypy.join.is_similar_callables",
    "mypy.subtypes.is_equivalent",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_deleted_type": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.DeletedType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_erased_type": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_instance": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.meet.meet_types",
    "mypy.subtypes.is_subtype",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.UninhabitedType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_none_type": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_partial_type": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_tuple_type": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "isinstance",
    "mypy.meet.meet_types",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_type_type": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_type_var": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "list",
    "mypy.join.join_type_list",
    "mypy.subtypes.is_equivalent",
    "mypy.types.Type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_unbound_type": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_union_type": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "isinstance",
    "mypy.meet.meet_types",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.meet.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.meet.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.meet.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.meet.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.meet.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.meet.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.meet.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.meet.adjust_tuple": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.meet.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.meet.combine_similar_callables": {
  "data": {
   "shadows": "mypy.join.combine_similar_callables"
  },
  "type": "import"
 },
 "mypy.meet.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.meet.is_equivalent": {
  "data": {
   "shadows": "mypy.subtypes.is_equivalent"
  },
  "type": "import"
 },
 "mypy.meet.is_overlapping_tuples": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "adjust_tuple",
    "all",
    "bool",
    "isinstance",
    "mypy.meet.is_overlapping_types",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.meet.is_overlapping_types": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "any",
    "bool",
    "is_overlapping_tuples",
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.subtypes.is_protocol_implementation",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.is_protocol_implementation": {
  "data": {
   "shadows": "mypy.subtypes.is_protocol_implementation"
  },
  "type": "import"
 },
 "mypy.meet.is_similar_callables": {
  "data": {
   "shadows": "mypy.join.is_similar_callables"
  },
  "type": "import"
 },
 "mypy.meet.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.meet.join_type_list": {
  "data": {
   "shadows": "mypy.join.join_type_list"
  },
  "type": "import"
 },
 "mypy.meet.join_types": {
  "data": {
   "shadows": "mypy.join.join_types"
  },
  "type": "import"
 },
 "mypy.meet.meet_similar_callables": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "len",
    "mypy.join.join_types",
    "mypy.meet.meet_types",
    "mypy.types.CallableType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.meet.meet_types": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeMeetVisitor",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.ErasedType",
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.narrow_declared_type": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "is_overlapping_types",
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.meet.meet_types",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.messages": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2"
   ]
  },
  "type": "module"
 },
 "mypy.messages.ALL_MUST_BE_SEQ_STR": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "mypy.messages.ARGUMENT_TYPE_EXPECTED": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "mypy.messages.ARG_CONSTRUCTOR_NAMES": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "mypy.messages.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.messages.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.messages.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.messages.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.messages.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.messages.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.messages.ASYNC_ITERABLE_EXPECTED": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mypy.messages.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.messages.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.messages.BARE_GENERIC": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mypy.messages.CANNOT_ACCESS_INIT": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mypy.messages.CANNOT_ASSIGN_TO_METHOD": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mypy.messages.CANNOT_ASSIGN_TO_TYPE": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mypy.messages.CANNOT_INFER_ITEM_TYPE": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mypy.messages.CANNOT_INFER_LAMBDA_TYPE": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mypy.messages.CANNOT_ISINSTANCE_NEWTYPE": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "mypy.messages.CANNOT_ISINSTANCE_TYPEDDICT": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "mypy.messages.COMMON_MISTAKES": {
  "data": {
   "lineno": 1388
  },
  "type": "constant"
 },
 "mypy.messages.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.messages.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.messages.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.messages.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.messages.DUPLICATE_TYPE_SIGNATURES": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mypy.messages.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.messages.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.messages.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.messages.FORMAT_REQUIRES_MAPPING": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "mypy.messages.FUNCTION_PARAMETER_CANNOT_BE_COVARIANT": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "mypy.messages.FUNCTION_TYPE_EXPECTED": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "mypy.messages.ForwardRef": {
  "data": {
   "shadows": "mypy.types.ForwardRef"
  },
  "type": "import"
 },
 "mypy.messages.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.messages.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.messages.GENERIC_INSTANCE_VAR_CLASS_ACCESS": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "mypy.messages.IMPLICIT_GENERIC_ANY_BUILTIN": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_IMPORT_OF": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_REDEFINITION": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_RETURN_VALUE_TYPE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_ASSIGNMENT": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_ASYNC_FOR": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AENTER": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AEXIT": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_AWAIT": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_YIELD": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPES_IN_YIELD_FROM": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mypy.messages.INCOMPATIBLE_TYPEVAR_VALUE": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "mypy.messages.INCONSISTENT_ABSTRACT_OVERLOAD": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_EXCEPTION": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_EXCEPTION_TYPE": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_GENERATOR_RETURN_ITEM_TYPE": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_IMPLICIT_RETURN": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_RETURN_TYPE_FOR_ASYNC_GENERATOR": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_RETURN_TYPE_FOR_GENERATOR": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_SLICE_INDEX": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_TUPLE_INDEX_TYPE": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mypy.messages.INVALID_TYPEDDICT_ARGS": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "mypy.messages.IS_CLASSVAR": {
  "data": {
   "shadows": "mypy.subtypes.IS_CLASSVAR"
  },
  "type": "import"
 },
 "mypy.messages.IS_CLASS_OR_STATIC": {
  "data": {
   "shadows": "mypy.subtypes.IS_CLASS_OR_STATIC"
  },
  "type": "import"
 },
 "mypy.messages.IS_SETTABLE": {
  "data": {
   "shadows": "mypy.subtypes.IS_SETTABLE"
  },
  "type": "import"
 },
 "mypy.messages.ITERABLE_EXPECTED": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mypy.messages.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.messages.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.messages.KEYWORD_ARGUMENT_REQUIRES_STR_KEY_TYPE": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "mypy.messages.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.messages.MALFORMED_ASSERT": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "mypy.messages.MISSING_RETURN_STATEMENT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mypy.messages.MUST_HAVE_NONE_RETURN_TYPE": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mypy.messages.MessageBuilder": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "mypy.messages.MessageBuilder.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mypy.errors.Errors",
    "mypy.nodes.MypyFile",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.add_errors": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.argument_incompatible_with_supertype": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.bad_proto_variance": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "capitalize",
    "int",
    "mypy.nodes.Context",
    "str",
    "variance_string"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.base_class_definitions_incompatible": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.cannot_determine_type": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.cannot_determine_type_in_base": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.cannot_instantiate_abstract_class": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "format_string_list",
    "mypy.nodes.Context",
    "plural_s",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.cant_assign_to_classvar": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.cant_assign_to_method": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "mypy.messages.CANNOT_ASSIGN_TO_METHOD",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.concrete_only_assign": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.concrete_only_call": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.copy": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "mypy.messages.MessageBuilder"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.could_not_infer_type_arguments": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "callable_name",
    "int",
    "mypy.nodes.Context",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.deleted_as_lvalue": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.deleted_as_rvalue": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.disable_errors": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.disallowed_any_type": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.does_not_return_value": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "callable_name",
    "capitalize",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.types.FunctionLike",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.duplicate_argument_value": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "callable_name",
    "int",
    "mypy.nodes.Context",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.enable_errors": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.explicit_any": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.fail": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.first_argument_for_super_must_be_type": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.format": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "int",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.format_bare": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "len",
    "max",
    "mypy.erasetype.erase_type",
    "mypy.messages.ARG_CONSTRUCTOR_NAMES",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.reverse_type_aliases",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.DeletedType",
    "mypy.types.ForwardRef",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "repr",
    "str",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.format_distinctly": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "bool",
    "format_method",
    "mypy.types.Type",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.forward_operator_not_callable": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.has_no_attr": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "any",
    "best_matches",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.op_methods.items",
    "mypy.nodes.op_methods.values",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.UnionType",
    "pretty_or",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.incompatible_argument": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "IndexError",
    "append_invariance_notes",
    "callable_name",
    "extract_type",
    "int",
    "isinstance",
    "map",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_ASSIGNMENT",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Context",
    "mypy.nodes.op_methods.items",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.incompatible_conditional_function_def": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.incompatible_operator_assignment": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.incompatible_self_argument": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.incompatible_type_application": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.incompatible_typevar_value": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "callable_name",
    "mypy.messages.INCOMPATIBLE_TYPEVAR_VALUE",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.incorrectly_returning_any": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.invalid_index_type": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.invalid_keyword_var_arg": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.invalid_signature": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.invalid_var_arg": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.is_errors": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.key_not_in_mapping": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.missing_named_argument": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "for_function",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.no_formal_self": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.no_variant_matches_arguments": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "callable_name",
    "mypy.nodes.Context",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.not_callable": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.note": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.note_call": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.operator_method_signatures_overlap": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.overloaded_signatures_arg_specific": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.overloaded_signatures_overlap": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.overloaded_signatures_ret_specific": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.override_target": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.pretty_callable": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.pretty_overload": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.nodes.Context",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.print_more": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.nodes.Context",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.quote_type_string": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mypy.messages.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.read_only_property": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "str",
    "type.name"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.redundant_cast": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.report": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.report_non_method_protocol": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.report_protocol_problems": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "any",
    "get_bad_protocol_flags",
    "get_conflict_protocol_types",
    "get_missing_protocol_members",
    "isinstance",
    "len",
    "mypy.erasetype.erase_type",
    "mypy.nodes.Context",
    "mypy.subtypes.IS_CLASSVAR",
    "mypy.subtypes.IS_CLASS_OR_STATIC",
    "mypy.subtypes.IS_SETTABLE",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.TupleType",
    "mypy.types.TypedDictType",
    "mypy.types.UninhabitedType",
    "plural_s",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.requires_int_or_char": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.return_type_incompatible_with_supertype": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.reveal_type": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.signature_incompatible_with_supertype": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.signatures_incompatible": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.string_interpolation_mixing_key_and_non_keys": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.string_interpolation_with_star_and_key": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.too_few_arguments": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "all",
    "callable_name",
    "for_function",
    "len",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.too_few_string_formatting_arguments": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.too_many_arguments": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "for_function",
    "mypy.nodes.Context",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.too_many_positional_arguments": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "for_function",
    "mypy.nodes.Context",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.too_many_string_formatting_arguments": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.type_arguments_not_allowed": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.type_not_iterable": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.typed_function_untyped_decorator": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.typeddict_key_must_be_string_literal": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "format_item_name_list",
    "mypy.nodes.Context",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.typeddict_key_not_found": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "format_item_name_list",
    "mypy.nodes.Context",
    "mypy.types.TypedDictType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.undefined_in_superclass": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.unexpected_keyword_argument": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "callable_name",
    "find_defining_module",
    "for_function",
    "mypy.nodes.Context",
    "mypy.types.CallableType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.unexpected_typeddict_keys": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "format_key_list",
    "mypy.nodes.Context",
    "mypy.types.TypedDictType",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.unimported_type_becomes_any": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.unsupported_left_operand": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.unsupported_operand_types": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.unsupported_placeholder": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.unsupported_type_type": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.untyped_decorated_function": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.untyped_function_call": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "callable_name",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.warn": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.wrong_number_values_to_unpack": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MessageBuilder.yield_from_invalid_operand_type": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.messages.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.messages.NEED_ANNOTATION_FOR_VAR": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mypy.messages.NON_BOOLEAN_IN_CONDITIONAL": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mypy.messages.NO_RETURN_EXPECTED": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mypy.messages.NO_RETURN_VALUE_EXPECTED": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mypy.messages.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.messages.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.messages.ONLY_CLASS_APPLICATION": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "mypy.messages.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.messages.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.messages.READ_ONLY_PROPERTY_OVERRIDES_READ_WRITE": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mypy.messages.RETURN_TYPE_CANNOT_BE_CONTRAVARIANT": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "mypy.messages.RETURN_TYPE_EXPECTED": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "mypy.messages.RETURN_VALUE_EXPECTED": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mypy.messages.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.messages.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.messages.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.messages.TUPLE_INDEX_OUT_OF_RANGE": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mypy.messages.TYPEDDICT_KEY_MUST_BE_STRING_LITERAL": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "mypy.messages.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.messages.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.messages.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.messages.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.messages.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.messages.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.messages.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.messages.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.messages.UNSUPPORTED_ARGUMENT_2_FOR_SUPER": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "mypy.messages.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.messages.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.messages.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.messages.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.messages.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.messages.YIELD_VALUE_EXPECTED": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mypy.messages.append_invariance_notes": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "mypy.sametypes.is_same_type",
    "mypy.subtypes.is_subtype",
    "mypy.types.Instance",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.best_matches": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "mypy.messages.difflib",
    "sorted",
    "str",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.callable_name": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "mypy.types.FunctionLike",
    "str",
    "type.get_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.messages.capitalize": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.messages.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "mypy.messages.erase_type": {
  "data": {
   "shadows": "mypy.erasetype.erase_type"
  },
  "type": "import"
 },
 "mypy.messages.extract_type": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "mypy.messages.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.find_defining_module": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "KeyError",
    "mypy.nodes.MypyFile",
    "mypy.types.CallableType",
    "range",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.messages.find_member": {
  "data": {
   "shadows": "mypy.subtypes.find_member"
  },
  "type": "import"
 },
 "mypy.messages.for_function": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "mypy.messages.callable_name",
    "mypy.types.CallableType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.format_item_name_list": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "len",
    "list",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.messages.format_key_list": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "bool",
    "len",
    "repr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.format_string_list": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "len",
    "list",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.messages.get_bad_protocol_flags": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "int",
    "mypy.subtypes.IS_CLASSVAR",
    "mypy.subtypes.IS_CLASS_OR_STATIC",
    "mypy.subtypes.IS_SETTABLE",
    "mypy.subtypes.find_member",
    "mypy.subtypes.get_member_flags",
    "mypy.types.Instance",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.messages.get_conflict_protocol_types": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "mypy.subtypes.IS_SETTABLE",
    "mypy.subtypes.find_member",
    "mypy.subtypes.get_member_flags",
    "mypy.subtypes.is_subtype",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.messages.get_member_flags": {
  "data": {
   "shadows": "mypy.subtypes.get_member_flags"
  },
  "type": "import"
 },
 "mypy.messages.get_missing_protocol_members": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "mypy.subtypes.find_member",
    "mypy.types.Instance",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.messages.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.messages.make_inferred_type_note": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.NameExpr",
    "mypy.nodes.ReturnStmt",
    "mypy.nodes.Var",
    "mypy.subtypes.is_subtype",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.messages.op_methods": {
  "data": {
   "shadows": "mypy.nodes.op_methods"
  },
  "type": "import"
 },
 "mypy.messages.plural_s": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "len",
    "str",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.messages.pretty_or": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.messages.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.messages.reverse_type_aliases": {
  "data": {
   "shadows": "mypy.nodes.reverse_type_aliases"
  },
  "type": "import"
 },
 "mypy.messages.strip_quotes": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "mypy.messages.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.messages.temp_message_builder": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "mypy.errors.Errors",
    "mypy.messages.MessageBuilder"
   ]
  },
  "type": "function"
 },
 "mypy.messages.variance_string": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.moduleinfo": {
  "data": {
   "symbols_in_volume": [
    "mypy.moduleinfo.common_std_lib_modules"
   ]
  },
  "type": "module"
 },
 "mypy.moduleinfo.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.moduleinfo.common_std_lib_modules": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "mypy.moduleinfo.is_in_module_collection": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "bool",
    "id.split",
    "len",
    "range",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.moduleinfo.is_py2_std_lib_module": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "bool",
    "id",
    "is_in_module_collection",
    "mypy.moduleinfo.python2_std_lib_modules",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.moduleinfo.is_py3_std_lib_module": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "bool",
    "id",
    "is_in_module_collection",
    "mypy.moduleinfo.python3_std_lib_modules",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.moduleinfo.is_third_party_module": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "bool",
    "id",
    "is_in_module_collection",
    "mypy.moduleinfo.third_party_modules",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.moduleinfo.python2_std_lib_modules": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "mypy.moduleinfo.python3_std_lib_modules": {
  "data": {
   "lineno": 510
  },
  "type": "constant"
 },
 "mypy.moduleinfo.third_party_modules": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mypy.myunit": {
  "data": {},
  "type": "module"
 },
 "mypy.myunit.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.myunit.AssertionFailure": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.myunit.AssertionFailure.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.myunit.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.myunit.ListSuite": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.myunit.ListSuite.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "mypy.myunit.Suite",
    "setattr",
    "super",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.myunit.SkipTestCaseException": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.myunit.Suite": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "mypy.myunit.Suite.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "type",
    "typename"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.Suite.add_test": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mypy.myunit.TestCase",
    "str",
    "typing.Callable",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.Suite.cases": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.Suite.init": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "isinstance",
    "mypy.myunit.Suite",
    "mypy.myunit.TestCase"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.Suite.set_up": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "mypy.myunit.Suite.skip": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mypy.myunit.SkipTestCaseException"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.Suite.tear_down": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mypy.myunit.TestCase": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "mypy.myunit.TestCase.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.TestCase.run": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "mypy.myunit.TestCase.set_up": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mypy.myunit.os",
    "mypy.myunit.tempfile"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.TestCase.tear_down": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "OSError",
    "mypy.myunit.os"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "mypy.myunit.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.myunit.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.myunit.__main__": {
  "data": {
   "symbols_in_volume": [
    "mypy.myunit.main"
   ]
  },
  "type": "module"
 },
 "mypy.myunit.__main__.main": {
  "data": {
   "shadows": "mypy.myunit.main"
  },
  "type": "import"
 },
 "mypy.myunit.add_suites_from_module": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "mypy.myunit.Suite",
    "mypy.myunit.importlib",
    "mypy.myunit.sys",
    "str",
    "type",
    "typing.Callable",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.assert_equal": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mypy.myunit.AssertionFailure",
    "mypy.myunit.good_repr",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.assert_false": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "mypy.myunit.AssertionFailure",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.assert_not_equal": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mypy.myunit.AssertionFailure",
    "mypy.myunit.good_repr",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.assert_raises": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "BaseException",
    "KeyboardInterrupt",
    "assert_type",
    "f",
    "isinstance",
    "len",
    "mypy.myunit.AssertionFailure",
    "mypy.myunit.assert_equal",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.assert_true": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "mypy.myunit.AssertionFailure",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.assert_type": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.myunit.AssertionFailure",
    "object",
    "type",
    "typename"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.myunit.clean_traceback": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.fail": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.myunit.AssertionFailure"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.good_repr": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.handle_failure": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "BaseException",
    "SystemExit",
    "clean_traceback",
    "isinstance",
    "mypy.myunit.is_verbose",
    "mypy.myunit.sys",
    "mypy.myunit.traceback",
    "str",
    "type",
    "typename",
    "types.TracebackType"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.myunit.is_quiet": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mypy.myunit.is_verbose": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mypy.myunit.main": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "len",
    "mypy.myunit.ListSuite",
    "mypy.myunit.add_suites_from_module",
    "mypy.myunit.is_quiet",
    "mypy.myunit.is_verbose",
    "mypy.myunit.patterns",
    "mypy.myunit.sys",
    "print",
    "run_test_recursive",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.match_pattern": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "bool",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.myunit.patterns": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mypy.myunit.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.myunit.run_single_test": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "BaseException",
    "KeyboardInterrupt",
    "bool",
    "handle_failure",
    "isinstance",
    "mypy.myunit.SkipTestCaseException",
    "mypy.myunit.is_verbose",
    "mypy.myunit.sys",
    "mypy.myunit.time",
    "mypy.myunit.times",
    "str",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.run_test_recursive": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "list",
    "match_pattern",
    "mypy.myunit.TestCase",
    "mypy.myunit.patterns",
    "run_single_test",
    "str",
    "tuple",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.myunit.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mypy.myunit.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.myunit.times": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mypy.myunit.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mypy.myunit.typename": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.nodes": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "globals",
    "isinstance",
    "issubclass",
    "mypy.nodes.Expression",
    "mypy.nodes.GDEF",
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.TVAR",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.nodes.collections_type_aliases",
    "mypy.nodes.node_kinds",
    "mypy.nodes.nongen_builtins",
    "mypy.nodes.op_methods",
    "mypy.nodes.ops_with_inplace_method",
    "mypy.nodes.reverse_collection_aliases",
    "mypy.nodes.reverse_op_methods",
    "mypy.nodes.reverse_type_aliases",
    "mypy.nodes.type_aliases",
    "set",
    "str",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.nodes.ARG_NAMED": {
  "data": {
   "lineno": 1206
  },
  "type": "constant"
 },
 "mypy.nodes.ARG_NAMED_OPT": {
  "data": {
   "lineno": 1210
  },
  "type": "constant"
 },
 "mypy.nodes.ARG_OPT": {
  "data": {
   "lineno": 1202
  },
  "type": "constant"
 },
 "mypy.nodes.ARG_POS": {
  "data": {
   "lineno": 1200
  },
  "type": "constant"
 },
 "mypy.nodes.ARG_STAR": {
  "data": {
   "lineno": 1204
  },
  "type": "constant"
 },
 "mypy.nodes.ARG_STAR2": {
  "data": {
   "lineno": 1208
  },
  "type": "constant"
 },
 "mypy.nodes.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.nodes.Argument": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "mypy.nodes.Node"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Argument.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Argument.set_line": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context",
    "super",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.AssertStmt": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.AssertStmt.__init__": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.AssertStmt.accept": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.AssignmentStmt": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "mypy.nodes.Statement",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.AssignmentStmt.__init__": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Expression",
    "mypy.nodes.Lvalue",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.AssignmentStmt.accept": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.AwaitExpr": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.AwaitExpr.__init__": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.AwaitExpr.accept": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.BackquoteExpr": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.BackquoteExpr.__init__": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.BackquoteExpr.accept": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Block": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Block.__init__": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "mypy.nodes.Statement",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Block.accept": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.BreakStmt": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.BreakStmt.accept": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.BytesExpr": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.BytesExpr.__init__": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.BytesExpr.accept": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.CONTRAVARIANT": {
  "data": {
   "lineno": 1668
  },
  "type": "constant"
 },
 "mypy.nodes.COVARIANT": {
  "data": {
   "lineno": 1667
  },
  "type": "constant"
 },
 "mypy.nodes.CallExpr": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.CallExpr.__init__": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.nodes.Expression",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.CallExpr.accept": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.nodes.CastExpr": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.CastExpr.__init__": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.CastExpr.accept": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ClassDef": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ClassDef.__init__": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.nodes.Expression",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ClassDef.accept": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ClassDef.deserialize": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "Block",
    "classmethod",
    "mypy.nodes.ClassDef",
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ClassDef.is_generic": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ClassDef.serialize": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ComparisonExpr": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ComparisonExpr.__init__": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ComparisonExpr.accept": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ComplexExpr": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ComplexExpr.__init__": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "complex"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ComplexExpr.accept": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ConditionalExpr": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ConditionalExpr.__init__": {
  "data": {
   "lineno": 1622,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ConditionalExpr.accept": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Context": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "mypy.nodes.Context.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Context.get_column": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Context.get_line": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Context.set_line": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ContinueStmt": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ContinueStmt.accept": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "mypy.nodes.Statement",
    "mypy.nodes.SymbolNode"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Decorator.__init__": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.FuncDef",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator.accept": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator.deserialize": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator.fullname": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator.info": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator.name": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator.serialize": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Decorator.type": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.DelStmt": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.DelStmt.__init__": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "mypy.nodes.Lvalue"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.DelStmt.accept": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.nodes.DictExpr": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.DictExpr.__init__": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.DictExpr.accept": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.DictionaryComprehension": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.DictionaryComprehension.__init__": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Expression",
    "mypy.nodes.Lvalue",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.DictionaryComprehension.accept": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ENUM_BASECLASS": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "mypy.nodes.EllipsisExpr": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.EllipsisExpr.accept": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.EnumCallExpr": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.EnumCallExpr.__init__": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.EnumCallExpr.accept": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ExecStmt": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "globals",
    "locals",
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ExecStmt.__init__": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "globals",
    "locals",
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ExecStmt.accept": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Expression": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "mypy.nodes.Node"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Expression.accept": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ExpressionStmt": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ExpressionStmt.__init__": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ExpressionStmt.accept": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ExpressionVisitor": {
  "data": {
   "shadows": "mypy.visitor.ExpressionVisitor"
  },
  "type": "import"
 },
 "mypy.nodes.FakeInfo": {
  "data": {
   "lineno": 2237,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.FakeInfo.__getattribute__": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": [
    "AssertionError",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FakeInfo.__init__": {
  "data": {
   "lineno": 2250,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FloatExpr": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.FloatExpr.__init__": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FloatExpr.accept": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ForStmt": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ForStmt.__init__": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "mypy.nodes.Expression",
    "mypy.nodes.Lvalue",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ForStmt.accept": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncBase": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.FuncBase.fullname": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncBase.name": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncDef": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "mypy.nodes.FuncItem",
    "mypy.nodes.Statement",
    "mypy.nodes.SymbolNode"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.FuncDef.__init__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "mypy.nodes.Argument",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncDef.accept": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncDef.deserialize": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "Block",
    "classmethod",
    "mypy.nodes.FuncDef",
    "mypy.nodes.JsonDict",
    "set_flags",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncDef.name": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncDef.serialize": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "get_flags",
    "mypy.nodes.FuncDef",
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncItem": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "mypy.nodes.FuncBase"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.FuncItem.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.Argument",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncItem.is_dynamic": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncItem.max_fixed_argc": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.FuncItem.set_line": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Context",
    "super",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.GDEF": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mypy.nodes.GeneratorExpr": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.GeneratorExpr.__init__": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Expression",
    "mypy.nodes.Lvalue",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.GeneratorExpr.accept": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.GlobalDecl": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.GlobalDecl.__init__": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.GlobalDecl.accept": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.INVARIANT": {
  "data": {
   "lineno": 1666
  },
  "type": "constant"
 },
 "mypy.nodes.IfStmt": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.IfStmt.__init__": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "mypy.nodes.Expression",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.IfStmt.accept": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Import": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mypy.nodes.ImportBase"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Import.__init__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Import.accept": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ImportAll": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "id",
    "mypy.nodes.ImportBase"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ImportAll.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "id",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ImportAll.accept": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ImportBase": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ImportBase.__init__": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "mypy.nodes.ImportFrom": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "id",
    "mypy.nodes.ImportBase"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ImportFrom.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "id",
    "int",
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ImportFrom.accept": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.IndexExpr": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.IndexExpr.__init__": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.IndexExpr.accept": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.IntExpr": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.IntExpr.__init__": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.IntExpr.accept": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.JsonDict": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mypy.nodes.LDEF": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mypy.nodes.LITERAL_NO": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "mypy.nodes.LITERAL_TYPE": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "mypy.nodes.LITERAL_YES": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "mypy.nodes.LambdaExpr": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.FuncItem"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.LambdaExpr.accept": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.LambdaExpr.expr": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.ReturnStmt",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.LambdaExpr.is_dynamic": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.LambdaExpr.name": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.nodes.ListComprehension": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ListComprehension.__init__": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ListComprehension.accept": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ListExpr": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ListExpr.__init__": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ListExpr.accept": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Lvalue": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "mypy.nodes.MDEF": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mypy.nodes.MODULE_REF": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mypy.nodes.MemberExpr": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "mypy.nodes.RefExpr"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.MemberExpr.__init__": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MemberExpr.accept": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MroError": {
  "data": {
   "lineno": 2475,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.MypyFile": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mypy.nodes.SymbolNode"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.MypyFile.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.nodes.Statement",
    "set",
    "typing.List",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MypyFile.accept": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MypyFile.deserialize": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.JsonDict",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MypyFile.fullname": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MypyFile.is_package_init_file": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bool",
    "len",
    "mypy.nodes.os"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MypyFile.name": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.MypyFile.serialize": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NameExpr": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "mypy.nodes.RefExpr"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.NameExpr.__init__": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NameExpr.accept": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NameExpr.deserialize": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.JsonDict",
    "mypy.nodes.NameExpr",
    "mypy.nodes.SymbolNode"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NameExpr.serialize": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NamedTupleExpr": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.NamedTupleExpr.__init__": {
  "data": {
   "lineno": 1755
  },
  "type": "function"
 },
 "mypy.nodes.NamedTupleExpr.accept": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NewTypeExpr": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.NewTypeExpr.__init__": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NewTypeExpr.accept": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Node": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Node.__str__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Node.accept": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.nodes.T",
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.nodes.NonlocalDecl": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.NonlocalDecl.__init__": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.NonlocalDecl.accept": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OpExpr": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.OpExpr.__init__": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OpExpr.accept": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OperatorAssignmentStmt": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.OperatorAssignmentStmt.__init__": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.Lvalue",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OperatorAssignmentStmt.accept": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.nodes.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.nodes.OverloadPart": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "mypy.nodes.OverloadedFuncDef": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "mypy.nodes.FuncBase",
    "mypy.nodes.Statement",
    "mypy.nodes.SymbolNode"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.OverloadedFuncDef.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OverloadedFuncDef.accept": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OverloadedFuncDef.deserialize": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.JsonDict",
    "mypy.nodes.OverloadPart",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.SymbolNode",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OverloadedFuncDef.name": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.OverloadedFuncDef.serialize": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.PassStmt": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.PassStmt.accept": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.PrintStmt": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.PrintStmt.__init__": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Expression",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.PrintStmt.accept": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.PromoteExpr": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.PromoteExpr.__init__": {
  "data": {
   "lineno": 1799,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.PromoteExpr.accept": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.RaiseStmt": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.RaiseStmt.__init__": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.RaiseStmt.accept": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.RefExpr": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ReturnStmt": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.ReturnStmt.__init__": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.ReturnStmt.accept": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.RevealTypeExpr": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.RevealTypeExpr.__init__": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.RevealTypeExpr.accept": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.nodes.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.nodes.SetComprehension": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.SetComprehension.__init__": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SetComprehension.accept": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SetExpr": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.SetExpr.__init__": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SetExpr.accept": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SliceExpr": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.SliceExpr.__init__": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SliceExpr.accept": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.StarExpr": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.StarExpr.__init__": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.StarExpr.accept": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Statement": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mypy.nodes.Node"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Statement.accept": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.StatementVisitor": {
  "data": {
   "shadows": "mypy.visitor.StatementVisitor"
  },
  "type": "import"
 },
 "mypy.nodes.StrExpr": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.StrExpr.__init__": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.StrExpr.accept": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SuperExpr": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.SuperExpr.__init__": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SuperExpr.accept": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolNode": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mypy.nodes.Node"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.SymbolNode.deserialize": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "method",
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolNode.fullname": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolNode.name": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolNode.serialize": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTable": {
  "data": {
   "lineno": 2436,
   "symbols_in_volume": [
    "mypy.nodes.SymbolTableNode",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.SymbolTable.__str__": {
  "data": {
   "lineno": 2437,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.implicit_module_attrs",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTable.deserialize": {
  "data": {
   "lineno": 2465,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.JsonDict",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTable.serialize": {
  "data": {
   "lineno": 2453,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTableNode": {
  "data": {
   "lineno": 2257
  },
  "type": "class"
 },
 "mypy.nodes.SymbolTableNode.__init__": {
  "data": {
   "lineno": 2324,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.nodes.SymbolNode",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTableNode.__str__": {
  "data": {
   "lineno": 2363,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.node_kinds",
    "mypy.util.short_type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTableNode.deserialize": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.JsonDict",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.inverse_node_kinds"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTableNode.fullname": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTableNode.serialize": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.node_kinds",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.SymbolTableNode.type": {
  "data": {
   "lineno": 2349,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.Var",
    "property"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.T": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mypy.nodes.TVAR": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mypy.nodes.TYPE_ALIAS": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mypy.nodes.TempNode": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TempNode.__init__": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TempNode.__repr__": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TempNode.accept": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TryStmt": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "mypy.nodes.Statement",
    "vars"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TryStmt.__init__": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "mypy.nodes.Expression",
    "typing.List",
    "typing.Optional",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TryStmt.accept": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.nodes.TupleExpr": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TupleExpr.__init__": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TupleExpr.accept": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeAliasExpr": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TypeAliasExpr.__init__": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "bool",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeAliasExpr.accept": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeApplication": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TypeApplication.__init__": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeApplication.accept": {
  "data": {
   "lineno": 1653,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "mypy.nodes.SymbolNode"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TypeInfo.__getitem__": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "KeyError",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.__init__": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.__repr__": {
  "data": {
   "lineno": 2062,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.__str__": {
  "data": {
   "lineno": 2146,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo._calculate_is_enum": {
  "data": {
   "lineno": 2117,
   "symbols_in_volume": [
    "any",
    "bool",
    "mypy.nodes.ENUM_BASECLASS"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.add_type_vars": {
  "data": {
   "lineno": 2008
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.calculate_metaclass_type": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.calculate_mro": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "linearize_hierarchy"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.deserialize": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.ClassDef",
    "mypy.nodes.JsonDict",
    "mypy.nodes.TypeInfo",
    "set_flags"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.direct_base_classes": {
  "data": {
   "lineno": 2139
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.dump": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Var",
    "sorted",
    "str",
    "type_str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.dump.type_str": {
  "data": {
   "lineno": 2161,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.fullname": {
  "data": {
   "lineno": 2017,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.get": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.get_containing_type_info": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.get_method": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncBase",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.has_base": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.has_method": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.has_readable_member": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.is_cached_subtype_check": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.is_generic": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.is_metaclass": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.name": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.record_subtype_cache_entry": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeInfo.serialize": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "get_flags",
    "mypy.nodes.JsonDict",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.nodes.TypeVarExpr": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.INVARIANT",
    "mypy.nodes.SymbolNode"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TypeVarExpr.__init__": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.INVARIANT",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeVarExpr.accept": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeVarExpr.deserialize": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.JsonDict",
    "mypy.nodes.TypeVarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeVarExpr.fullname": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeVarExpr.name": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypeVarExpr.serialize": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.TypedDictExpr": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.TypedDictExpr.__init__": {
  "data": {
   "lineno": 1768
  },
  "type": "function"
 },
 "mypy.nodes.TypedDictExpr.accept": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.UNBOUND_IMPORTED": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mypy.nodes.UnaryExpr": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.UnaryExpr.__init__": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.UnaryExpr.accept": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.UnicodeExpr": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.UnicodeExpr.__init__": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.UnicodeExpr.accept": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.nodes.Var": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "mypy.nodes.SymbolNode",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.Var.__init__": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Var.accept": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Var.deserialize": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "classmethod",
    "mypy.nodes.JsonDict",
    "mypy.nodes.Var",
    "set_flags",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Var.fullname": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Var.name": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.Var.serialize": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "get_flags",
    "mypy.nodes.JsonDict",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.WhileStmt": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.WhileStmt.__init__": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.WhileStmt.accept": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.WithStmt": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "mypy.nodes.Statement"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.WithStmt.__init__": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "mypy.nodes.Expression",
    "mypy.nodes.Lvalue",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.WithStmt.accept": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.StatementVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.YieldExpr": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.YieldExpr.__init__": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.YieldExpr.accept": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.YieldFromExpr": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "class"
 },
 "mypy.nodes.YieldFromExpr.__init__": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.YieldFromExpr.accept": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "mypy.nodes.T",
    "mypy.visitor.ExpressionVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.nodes.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.nodes.check_arg_kinds": {
  "data": {
   "lineno": 2543,
   "symbols_in_volume": [
    "fail",
    "int",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.T",
    "str",
    "typing.Callable",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.check_arg_names": {
  "data": {
   "lineno": 2577,
   "symbols_in_volume": [
    "fail",
    "mypy.nodes.T",
    "set",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.collections_type_aliases": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "mypy.nodes.comparison_fallback_method": {
  "data": {
   "lineno": 1331
  },
  "type": "constant"
 },
 "mypy.nodes.deserialize_map": {
  "data": {
   "lineno": 2536
  },
  "type": "constant"
 },
 "mypy.nodes.get_flags": {
  "data": {
   "lineno": 2511,
   "symbols_in_volume": [
    "getattr",
    "mypy.nodes.Node",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.get_member_expr_fullname": {
  "data": {
   "lineno": 2520,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.implicit_module_attrs": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mypy.nodes.inplace_operator_methods": {
  "data": {
   "lineno": 1340
  },
  "type": "constant"
 },
 "mypy.nodes.inverse_node_kinds": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "mypy.nodes.linearize_hierarchy": {
  "data": {
   "lineno": 2479,
   "symbols_in_volume": [
    "merge",
    "mypy.nodes.TypeInfo",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.merge": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "mypy.nodes.MroError",
    "mypy.nodes.TypeInfo",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.mypy.strconv": {
  "data": {
   "shadows": "mypy.strconv"
  },
  "type": "import"
 },
 "mypy.nodes.mypy.types": {
  "data": {
   "shadows": "mypy.types"
  },
  "type": "import"
 },
 "mypy.nodes.node_kinds": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "mypy.nodes.nongen_builtins": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "mypy.nodes.normal_from_reverse_op": {
  "data": {
   "lineno": 1365
  },
  "type": "constant"
 },
 "mypy.nodes.op_methods": {
  "data": {
   "lineno": 1308
  },
  "type": "constant"
 },
 "mypy.nodes.ops_falling_back_to_cmp": {
  "data": {
   "lineno": 1332
  },
  "type": "constant"
 },
 "mypy.nodes.ops_with_inplace_method": {
  "data": {
   "lineno": 1337
  },
  "type": "constant"
 },
 "mypy.nodes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.nodes.reverse_collection_aliases": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "mypy.nodes.reverse_op_method_set": {
  "data": {
   "lineno": 1366
  },
  "type": "constant"
 },
 "mypy.nodes.reverse_op_methods": {
  "data": {
   "lineno": 1343
  },
  "type": "constant"
 },
 "mypy.nodes.reverse_type_aliases": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "mypy.nodes.set_flags": {
  "data": {
   "lineno": 2515,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "setattr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.nodes.short_type": {
  "data": {
   "shadows": "mypy.util.short_type"
  },
  "type": "import"
 },
 "mypy.nodes.type_aliases": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "mypy.nodes.unary_op_methods": {
  "data": {
   "lineno": 1368
  },
  "type": "constant"
 },
 "mypy.options": {
  "data": {},
  "type": "module"
 },
 "mypy.options.BuildType": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "mypy.options.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.options.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.options.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.options.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "mypy.options.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.options.Options": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mypy.options.Options.__eq__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.defaults.CACHE_DIR",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.options.BuildType",
    "mypy.options.sys"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.__ne__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.__repr__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "mypy.options.pprint",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.clone_for_module": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "mypy.options.Options",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.module_matches_pattern": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.select_options_affecting_cache": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.options.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.options.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "mypy.options.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.options.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.options.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.options.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mypy.options.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "mypy.options.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.parse": {
  "data": {},
  "type": "module"
 },
 "mypy.parse.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.parse.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.parse.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.parse.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.parse.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.parse.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.parse.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.parse.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.parse.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.parse.mypy.fastparse": {
  "data": {
   "shadows": "mypy.fastparse"
  },
  "type": "import"
 },
 "mypy.parse.mypy.fastparse2": {
  "data": {
   "shadows": "mypy.fastparse2"
  },
  "type": "import"
 },
 "mypy.parse.parse": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "bytes",
    "mypy.errors.Errors",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.plugin": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.plugin.AnalyzerPluginInterface",
    "mypy.plugin.CheckerPluginInterface",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "typing.List",
    "typing.NamedTuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.plugin.AnalyzeTypeContext": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mypy.plugin.AnalyzerPluginInterface": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "mypy.plugin.AnalyzerPluginInterface.analyze_callable_args": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "int",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnalyzerPluginInterface.analyze_type": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnalyzerPluginInterface.fail": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnalyzerPluginInterface.named_type": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.plugin.AttributeContext": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mypy.plugin.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.plugin.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.plugin.ChainedPlugin": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mypy.plugin.Plugin"
   ]
  },
  "type": "class"
 },
 "mypy.plugin.ChainedPlugin.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin._find_hook": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "lookup",
    "mypy.plugin.Plugin",
    "mypy.plugin.T",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_attribute_hook": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.plugin.AttributeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_function_hook": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mypy.plugin.FunctionContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_method_hook": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_method_signature_hook": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_type_analyze_hook": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mypy.plugin.AnalyzeTypeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.CheckerPluginInterface": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "mypy.plugin.CheckerPluginInterface.named_generic_type": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.plugin.DefaultPlugin": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mypy.plugin.Plugin"
   ]
  },
  "type": "class"
 },
 "mypy.plugin.DefaultPlugin.get_function_hook": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mypy.plugin.FunctionContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.DefaultPlugin.get_method_hook": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.DefaultPlugin.get_method_signature_hook": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.plugin.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.plugin.FunctionContext": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mypy.plugin.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.plugin.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.plugin.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.plugin.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.plugin.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.plugin.MethodContext": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "mypy.plugin.MethodSigContext": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mypy.plugin.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.plugin.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.plugin.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.plugin.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.plugin.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.plugin.Plugin": {
  "data": {
   "lineno": 102
  },
  "type": "class"
 },
 "mypy.plugin.Plugin.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_attribute_hook": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.plugin.AttributeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_function_hook": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mypy.plugin.FunctionContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_method_hook": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_method_signature_hook": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_type_analyze_hook": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mypy.plugin.AnalyzeTypeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.plugin.T": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "mypy.plugin.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.plugin.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.plugin.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.plugin.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.plugin.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.plugin.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.plugin.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.plugin.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.plugin.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.plugin.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.plugin.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.plugin.contextmanager_callback": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.plugin.FunctionContext",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.int_pow_callback": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.IntExpr",
    "mypy.nodes.UnaryExpr",
    "mypy.plugin.MethodContext",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.open_callback": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.StrExpr",
    "mypy.plugin.FunctionContext",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.typed_dict_get_callback": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.DictExpr",
    "mypy.nodes.StrExpr",
    "mypy.plugin.MethodContext",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType.make_simplified_union",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.typed_dict_get_signature_callback": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.DictExpr",
    "mypy.nodes.StrExpr",
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType.make_simplified_union",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.report": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mypy.report.AnyExpressionsReporter",
    "mypy.report.CoberturaXmlReporter",
    "mypy.report.LineCountReporter",
    "mypy.report.LineCoverageReporter",
    "mypy.report.MemoryXmlReporter",
    "mypy.report.XmlReporter",
    "mypy.report.XsltHtmlReporter",
    "mypy.report.XsltTxtReporter",
    "mypy.report.alias_reporter",
    "mypy.report.collections",
    "mypy.report.register_reporter",
    "mypy.types.TypeOfAny.explicit",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.from_unimported_type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeOfAny.unannotated"
   ]
  },
  "type": "module"
 },
 "mypy.report.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mypy.report.AbstractReporter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mypy.report.AbstractReporter.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.AbstractReporter.on_file": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.AbstractReporter.on_finish": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mypy.report.AbstractXmlReporter": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.AbstractXmlReporter.__init__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "mypy.report.MemoryXmlReporter",
    "mypy.report.Reports",
    "str",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.report.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.report.AnyExpressionsReporter": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.AnyExpressionsReporter.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "mypy.stats.ensure_dir_exists",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter._report_any_exprs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "float",
    "sorted",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter._report_types_of_anys": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "list",
    "mypy.report.collections",
    "mypy.report.type_of_any_name_map",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter._write_out_report": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "max",
    "mypy.report.itertools",
    "mypy.report.os",
    "open",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter.on_file": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "list",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.stats.StatisticsVisitor",
    "mypy.stats.TYPE_UNANALYZED",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter.on_finish": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "mypy.report.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.report.CoberturaPackage": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mypy.report.CoberturaPackage.__init__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaPackage.add_packages": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "lxml.etree.SubElement",
    "operator.attrgetter",
    "sorted",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaPackage.as_xml": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "lxml.etree.Element",
    "lxml.etree.SubElement",
    "mypy.report.get_line_rate",
    "sorted",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaXmlReporter": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.CoberturaXmlReporter.__init__": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "int",
    "lxml.etree.Element",
    "lxml.etree.ElementTree",
    "mypy.report.CoberturaPackage",
    "mypy.report.Reports",
    "mypy.report.time",
    "mypy.version.__version__",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaXmlReporter.on_file": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "enumerate",
    "lxml.etree.Element",
    "lxml.etree.SubElement",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.CoberturaPackage",
    "mypy.report.FileInfo",
    "mypy.report.get_line_rate",
    "mypy.report.os",
    "mypy.report.tokenize",
    "mypy.stats.StatisticsVisitor",
    "mypy.stats.TYPE_ANY",
    "mypy.stats.TYPE_EMPTY",
    "mypy.stats.TYPE_IMPRECISE",
    "mypy.stats.precision_names",
    "mypy.types.Type",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaXmlReporter.on_finish": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "lxml.etree.SubElement",
    "mypy.report.get_line_rate",
    "mypy.report.os",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.report.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.report.FileInfo": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "mypy.report.FileInfo.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "len",
    "mypy.stats.precision_names",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.FileInfo.attrib": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "mypy.stats.precision_names",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.report.FileInfo.total": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "mypy.report.FuncCounterVisitor": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.report.FuncCounterVisitor.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.FuncCounterVisitor.visit_func_def": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.report.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.report.LXML_INSTALLED": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mypy.report.LineCountReporter": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.LineCountReporter.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "mypy.stats.ensure_dir_exists",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCountReporter.on_file": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.FuncCounterVisitor",
    "mypy.types.Type",
    "open",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCountReporter.on_finish": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mypy.report.os",
    "open",
    "range",
    "sorted",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageReporter": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.LineCoverageReporter.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "mypy.stats.ensure_dir_exists",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageReporter.on_file": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "enumerate",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.LineCoverageVisitor",
    "mypy.report.os",
    "mypy.types.Type",
    "open",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageReporter.on_finish": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "mypy.report.json",
    "mypy.report.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageVisitor": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.report.LineCoverageVisitor.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageVisitor.indentation_level": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "int",
    "list",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageVisitor.visit_func_def": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.FuncDef",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.report.MemoryXmlReporter": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.MemoryXmlReporter.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "lxml.etree.XMLSchema",
    "lxml.etree.parse",
    "mypy.report.Reports",
    "mypy.report.os",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.MemoryXmlReporter._get_any_info_for_line": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "int",
    "mypy.report.collections",
    "mypy.report.type_of_any_name_map",
    "mypy.stats.StatisticsVisitor",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.MemoryXmlReporter.on_file": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "enumerate",
    "lxml.etree.Element",
    "lxml.etree.ElementTree",
    "lxml.etree.ProcessingInstruction",
    "lxml.etree.SubElement",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.FileInfo",
    "mypy.report.os",
    "mypy.report.tokenize",
    "mypy.stats.StatisticsVisitor",
    "mypy.stats.TYPE_EMPTY",
    "mypy.stats.is_special_module",
    "mypy.stats.precision_names",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mypy.report.MemoryXmlReporter.on_finish": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "lxml.etree.Element",
    "lxml.etree.ElementTree",
    "lxml.etree.ProcessingInstruction",
    "lxml.etree.SubElement",
    "mypy.report.os",
    "sorted",
    "str",
    "urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mypy.report.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.report.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.report.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.report.Reports": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "mypy.report.Reports.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.Reports.add_report": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "mypy.report.LXML_INSTALLED",
    "mypy.report.reporter_classes",
    "mypy.report.sys",
    "print",
    "reporter_cls",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.Reports.file": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.Reports.finish": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mypy.report.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.report.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.report.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.report.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.report.XmlReporter": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "mypy.report.AbstractXmlReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.XmlReporter.on_file": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.os",
    "mypy.stats.ensure_dir_exists",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.XmlReporter.on_finish": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "mypy.report.os",
    "mypy.report.shutil",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltHtmlReporter": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "mypy.report.AbstractXmlReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.XsltHtmlReporter.__init__": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "lxml.etree.XSLT",
    "lxml.etree.XSLT.strparam",
    "lxml.etree.parse",
    "mypy.report.Reports",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltHtmlReporter.on_file": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "bytes",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.os",
    "mypy.stats.ensure_dir_exists",
    "mypy.types.Type",
    "open",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltHtmlReporter.on_finish": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "bytes",
    "mypy.report.os",
    "mypy.report.shutil",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltTxtReporter": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "mypy.report.AbstractXmlReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.XsltTxtReporter.__init__": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "lxml.etree.XSLT",
    "lxml.etree.parse",
    "mypy.report.Reports",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltTxtReporter.on_file": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltTxtReporter.on_finish": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "bytes",
    "mypy.report.os",
    "mypy.stats.ensure_dir_exists",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.report.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.report.alias_reporter": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.report.reporter_classes",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "mypy.report.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.report.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mypy.report.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "mypy.report.get_line_rate": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mypy.report.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.report.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.report.pathname2url": {
  "data": {
   "shadows": "urllib.request.pathname2url"
  },
  "type": "import"
 },
 "mypy.report.register_reporter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool",
    "mypy.report.AbstractReporter",
    "mypy.report.Reports",
    "mypy.report.reporter_classes",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.report.reporter_classes": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mypy.report.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.report.stats": {
  "data": {
   "shadows": "mypy.stats"
  },
  "type": "import"
 },
 "mypy.report.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.report.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.report.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "mypy.report.type_of_any_name_map": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mypy.report.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.sametypes": {
  "data": {},
  "type": "module"
 },
 "mypy.sametypes.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.sametypes.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.sametypes.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.sametypes.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.sametypes.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.sametypes.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.sametypes.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.sametypes.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.sametypes.SameTypeVisitor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.sametypes.SameTypeVisitor.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_any": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.sametypes.is_same_types",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.ErasedType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_instance": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_types",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_none_type": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_types",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_types",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_type_type": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_type_var": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_union_type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.sametypes.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.sametypes.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.sametypes.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.sametypes.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.sametypes.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.sametypes.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.sametypes.is_same_type": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "SameTypeVisitor",
    "bool",
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "simplify_union"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.is_same_types": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "len",
    "mypy.sametypes.is_same_type",
    "mypy.types.Type",
    "range",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.simplify_union": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal": {
  "data": {
   "symbols_in_volume": [
    "int",
    "mypy.semanal.ALWAYS_FALSE",
    "mypy.semanal.ALWAYS_TRUE",
    "mypy.semanal.MYPY_FALSE",
    "mypy.semanal.MYPY_TRUE",
    "mypy.semanal.TRUTH_VALUE_UNKNOWN",
    "mypy.semanal.TYPE_PROMOTIONS",
    "mypy.semanal.TYPE_PROMOTIONS_PYTHON2",
    "mypy.semanal.TYPE_PROMOTIONS_PYTHON3",
    "str",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.semanal.ALWAYS_FALSE": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mypy.semanal.ALWAYS_TRUE": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "mypy.semanal.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.semanal.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.semanal.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.semanal.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.semanal.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.semanal.Argument": {
  "data": {
   "shadows": "mypy.nodes.Argument"
  },
  "type": "import"
 },
 "mypy.semanal.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.semanal.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.semanal.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.semanal.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.semanal.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.semanal.BreakStmt": {
  "data": {
   "shadows": "mypy.nodes.BreakStmt"
  },
  "type": "import"
 },
 "mypy.semanal.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.semanal.CANNOT_ASSIGN_TO_TYPE": {
  "data": {
   "shadows": "mypy.messages.CANNOT_ASSIGN_TO_TYPE"
  },
  "type": "import"
 },
 "mypy.semanal.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.semanal.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.semanal.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.semanal.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.semanal.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.semanal.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.semanal.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.semanal.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.semanal.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.semanal.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.semanal.ContinueStmt": {
  "data": {
   "shadows": "mypy.nodes.ContinueStmt"
  },
  "type": "import"
 },
 "mypy.semanal.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.semanal.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.semanal.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.semanal.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.semanal.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.semanal.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.semanal.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.semanal.EnumCallExpr": {
  "data": {
   "shadows": "mypy.nodes.EnumCallExpr"
  },
  "type": "import"
 },
 "mypy.semanal.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.semanal.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.semanal.ExecStmt": {
  "data": {
   "shadows": "mypy.nodes.ExecStmt"
  },
  "type": "import"
 },
 "mypy.semanal.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.semanal.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.semanal.FUNCTION_BOTH_PHASES": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "mypy.semanal.FUNCTION_FIRST_PHASE_POSTPONE_SECOND": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "mypy.semanal.FUNCTION_SECOND_PHASE": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "mypy.semanal.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.semanal.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.semanal.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.semanal.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.semanal.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.semanal.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.semanal.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.semanal.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.semanal.GlobalDecl": {
  "data": {
   "shadows": "mypy.nodes.GlobalDecl"
  },
  "type": "import"
 },
 "mypy.semanal.INVARIANT": {
  "data": {
   "shadows": "mypy.nodes.INVARIANT"
  },
  "type": "import"
 },
 "mypy.semanal.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.semanal.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.semanal.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.semanal.ImportBase": {
  "data": {
   "shadows": "mypy.nodes.ImportBase"
  },
  "type": "import"
 },
 "mypy.semanal.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.semanal.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.semanal.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.semanal.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.semanal.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.semanal.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.semanal.LDEF": {
  "data": {
   "shadows": "mypy.nodes.LDEF"
  },
  "type": "import"
 },
 "mypy.semanal.LITERAL_YES": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_YES"
  },
  "type": "import"
 },
 "mypy.semanal.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.semanal.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.semanal.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.semanal.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.semanal.Lvalue": {
  "data": {
   "shadows": "mypy.nodes.Lvalue"
  },
  "type": "import"
 },
 "mypy.semanal.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "mypy.semanal.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.semanal.MYPY_FALSE": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "mypy.semanal.MYPY_TRUE": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mypy.semanal.MakeAnyNonExplicit": {
  "data": {
   "lineno": 4201,
   "symbols_in_volume": [
    "mypy.types.TypeTranslator"
   ]
  },
  "type": "class"
 },
 "mypy.semanal.MakeAnyNonExplicit.visit_any": {
  "data": {
   "lineno": 4202,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.explicit",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.MarkImportsMypyOnlyVisitor": {
  "data": {
   "lineno": 4183,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.semanal.MarkImportsMypyOnlyVisitor.visit_import": {
  "data": {
   "lineno": 4186,
   "symbols_in_volume": [
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.MarkImportsMypyOnlyVisitor.visit_import_all": {
  "data": {
   "lineno": 4192,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.MarkImportsMypyOnlyVisitor.visit_import_from": {
  "data": {
   "lineno": 4189,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.MarkImportsUnreachableVisitor": {
  "data": {
   "lineno": 4166,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.semanal.MarkImportsUnreachableVisitor.visit_import": {
  "data": {
   "lineno": 4169,
   "symbols_in_volume": [
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.MarkImportsUnreachableVisitor.visit_import_all": {
  "data": {
   "lineno": 4175,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.MarkImportsUnreachableVisitor.visit_import_from": {
  "data": {
   "lineno": 4172,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.semanal.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.semanal.MroError": {
  "data": {
   "shadows": "mypy.nodes.MroError"
  },
  "type": "import"
 },
 "mypy.semanal.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.semanal.NAMEDTUPLE_PROHIBITED_NAMES": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "mypy.semanal.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.semanal.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.semanal.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.semanal.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.semanal.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.semanal.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.semanal.NonlocalDecl": {
  "data": {
   "shadows": "mypy.nodes.NonlocalDecl"
  },
  "type": "import"
 },
 "mypy.semanal.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.semanal.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.semanal.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.semanal.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.semanal.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.semanal.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.semanal.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.semanal.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "mypy.semanal.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.semanal.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.semanal.PromoteExpr": {
  "data": {
   "shadows": "mypy.nodes.PromoteExpr"
  },
  "type": "import"
 },
 "mypy.semanal.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.semanal.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.semanal.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.semanal.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.semanal.SUGGESTED_TEST_FIXTURES": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "mypy.semanal.SemanticAnalyzerPass2": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "globals",
    "locals",
    "mypy.visitor.NodeVisitor",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.semanal.SemanticAnalyzerPass2.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "mypy.errors.Errors",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.MypyFile",
    "mypy.plugin.Plugin",
    "mypy.semanal.FUNCTION_BOTH_PHASES",
    "mypy.tvar_scope.TypeVarScope",
    "set",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.accept": {
  "data": {
   "lineno": 3859,
   "symbols_in_volume": [
    "Exception",
    "mypy.errors.report_internal_error",
    "mypy.nodes.Node"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.add_exports": {
  "data": {
   "lineno": 3792,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.add_fixture_note": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.semanal.SUGGESTED_TEST_FIXTURES",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.add_local": {
  "data": {
   "lineno": 3784,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.FuncDef",
    "mypy.nodes.LDEF",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.add_module_symbol": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "bool",
    "id",
    "mypy.nodes.Context",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.SymbolTableNode",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.add_submodules_to_parent_modules": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "bool",
    "id",
    "id.rsplit",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.SymbolTableNode",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.add_symbol": {
  "data": {
   "lineno": 3758,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.sametypes.is_same_type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.add_unknown_symbol": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.nodes.GDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_unimported_type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.alias_fallback": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Block",
    "mypy.nodes.ClassDef",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.anal_type": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "bool",
    "mypy.tvar_scope.TypeVarScope",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_alias": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Expression",
    "mypy.typeanal.TypeVariableQuery",
    "mypy.typeanal.analyze_type_alias",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_base_classes": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "calculate_class_mro",
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ClassDef",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.NamedTupleExpr",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_class_body": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "bool",
    "contextlib.contextmanager",
    "mypy.nodes.ClassDef",
    "mypy.nodes.SymbolTable",
    "mypy.semanal.NAMEDTUPLE_PROHIBITED_NAMES",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_class_decorator": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.Expression",
    "mypy.nodes.RefExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_class_keywords": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_comp_for": {
  "data": {
   "lineno": 3491,
   "symbols_in_volume": [
    "enumerate",
    "mypy.nodes.DictionaryComprehension",
    "mypy.nodes.GeneratorExpr",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_comp_for_2": {
  "data": {
   "lineno": 3508,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension",
    "mypy.nodes.GeneratorExpr",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_function": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.FuncItem",
    "mypy.semanal.FUNCTION_FIRST_PHASE_POSTPONE_SECOND",
    "mypy.semanal.FUNCTION_SECOND_PHASE",
    "mypy.types.CallableType",
    "set_callable_name",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_lvalue": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.GDEF",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.LDEF",
    "mypy.nodes.ListExpr",
    "mypy.nodes.Lvalue",
    "mypy.nodes.MDEF",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StarExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_member_lvalue": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.MDEF",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_metaclass": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.nodes.get_member_expr_fullname",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.typevars.fill_typevars"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_namedtuple_classdef": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.NamedTupleExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeInfo",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_newtype_declaration": {
  "data": {
   "lineno": 2030,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_property_with_multi_part_definition": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.Decorator",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.OverloadedFuncDef",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_simple_literal_type": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_try_stmt": {
  "data": {
   "lineno": 3016,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.TryStmt",
    "mypy.visitor.NodeVisitor",
    "type",
    "type.accept",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_tuple_or_list_lvalue": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.ListExpr",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_typeddict_classdef": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "any",
    "bool",
    "filter",
    "isinstance",
    "len",
    "list",
    "mypy.nodes.ClassDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.TypedDictExpr",
    "mypy.types.TypedDictType",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_types": {
  "data": {
   "lineno": 2501,
   "symbols_in_volume": [
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.Expression",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_typevar_declaration": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "isinstance",
    "mypy.typeanal.TypeVarList",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.analyze_unbound_tvar": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.TVAR",
    "mypy.nodes.TypeVarExpr",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.basic_new_typeinfo": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "mypy.nodes.ClassDef",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_enum_call_typeinfo": {
  "data": {
   "lineno": 2807,
   "symbols_in_volume": [
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_namedtuple_typeinfo": {
  "data": {
   "lineno": 2393,
   "symbols_in_volume": [
    "add_field",
    "add_method",
    "make_init_arg",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Argument",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType",
    "mypy.types.function_type",
    "str",
    "typing.Dict",
    "typing.List",
    "vars",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_namedtuple_typeinfo.add_field": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_namedtuple_typeinfo.add_method": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Argument",
    "mypy.nodes.Block",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MDEF",
    "mypy.nodes.NameExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.function_type",
    "set_callable_name",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_namedtuple_typeinfo.make_init_arg": {
  "data": {
   "lineno": 2483,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Argument",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_namedtuple_typeinfo.patch": {
  "data": {
   "lineno": 2413,
   "symbols_in_volume": [
    "list",
    "mypy.join.join_type_list"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_newtype_typeinfo": {
  "data": {
   "lineno": 2080,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Argument",
    "mypy.nodes.Block",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_typeddict_typeinfo": {
  "data": {
   "lineno": 2642,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.nodes.TypeInfo",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "str",
    "typing.List",
    "typing.Set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.build_typeddict_typeinfo.patch": {
  "data": {
   "lineno": 2652,
   "symbols_in_volume": [
    "list",
    "mypy.join.join_type_list"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.builtin_type": {
  "data": {
   "lineno": 3692,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.calculate_abstract_status": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_and_set_up_type_alias": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "make_any_non_explicit",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeAliasExpr",
    "mypy.nodes.TypeInfo",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_classvar": {
  "data": {
   "lineno": 2663,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_classvar_in_signature": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_decorated_function_is_method": {
  "data": {
   "lineno": 2937,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_enum_call": {
  "data": {
   "lineno": 2764,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.EnumCallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.GDEF",
    "mypy.nodes.RefExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "str",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_fixed_args": {
  "data": {
   "lineno": 3276,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.CallExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_for_obsolete_short_name": {
  "data": {
   "lineno": 3619,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.Context",
    "mypy.semanal.obsolete_name_mapping",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_function_signature": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.FuncItem",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_lvalue_validity": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "isinstance",
    "mypy.messages.CANNOT_ASSIGN_TO_TYPE",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.TypeVarExpr",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_namedtuple": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.GDEF",
    "mypy.nodes.NamedTupleExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "str",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_namedtuple_classdef": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.ClassDef",
    "mypy.nodes.Decorator",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.ExpressionStmt",
    "mypy.nodes.FuncBase",
    "mypy.nodes.NameExpr",
    "mypy.nodes.PassStmt",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TempNode",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_newtype_args": {
  "data": {
   "lineno": 2054,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Context",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Type",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_no_global": {
  "data": {
   "lineno": 3797,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.OverloadedFuncDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_typeddict": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.GDEF",
    "mypy.nodes.RefExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.TypedDictExpr",
    "set",
    "str",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_typeddict_classdef": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.ClassDef",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.ExpressionStmt",
    "mypy.nodes.NameExpr",
    "mypy.nodes.PassStmt",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TempNode",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated",
    "set",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.check_typevar_name": {
  "data": {
   "lineno": 2155,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Context",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.class_type": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkmember.type_object_type",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.clean_up_bases_and_infer_type_variables": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.ClassDef",
    "mypy.typeanal.remove_dups",
    "mypy.types.UnboundType",
    "reversed",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.correct_relative_import": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportFrom",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.detect_protocol_base": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.ClassDef",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.enter": {
  "data": {
   "lineno": 3736,
   "symbols_in_volume": [
    "mypy.nodes.SymbolTable",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.enter_class": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "mypy.semanal.FUNCTION_BOTH_PHASES"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.expr_to_analyzed_type": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.fail": {
  "data": {
   "lineno": 3832,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.fail_blocker": {
  "data": {
   "lineno": 3843,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.fail_enum_call_arg": {
  "data": {
   "lineno": 2877,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.fail_invalid_classvar": {
  "data": {
   "lineno": 2686,
   "symbols_in_volume": [
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.fail_namedtuple_arg": {
  "data": {
   "lineno": 2374,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.fail_typeddict_arg": {
  "data": {
   "lineno": 2637,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.file_context": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mypy.nodes.MypyFile",
    "mypy.nodes.TypeInfo",
    "mypy.options.Options",
    "str",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.get_all_bases_tvars": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.ClassDef",
    "mypy.typeanal.TypeVarList",
    "mypy.typeanal.TypeVariableQuery",
    "mypy.typeanal.remove_dups",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.get_typevar_declaration": {
  "data": {
   "lineno": 2169,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_base_class": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_class_scope": {
  "data": {
   "lineno": 3752,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_classvar": {
  "data": {
   "lineno": 2678,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_func_scope": {
  "data": {
   "lineno": 3749,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_module_scope": {
  "data": {
   "lineno": 3755,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_self_member_ref": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_typeddict": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.is_valid_del_target": {
  "data": {
   "lineno": 3082,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.leave": {
  "data": {
   "lineno": 3743
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.leave_class": {
  "data": {
   "lineno": 737
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.lookup": {
  "data": {
   "lineno": 3564,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "reversed",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.lookup_fully_qualified": {
  "data": {
   "lineno": 3698,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.lookup_fully_qualified_or_none": {
  "data": {
   "lineno": 3712,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "range",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.lookup_qualified": {
  "data": {
   "lineno": 3626,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.Context",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "range",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.lookup_type_node": {
  "data": {
   "lineno": 3440,
   "symbols_in_volume": [
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.Expression",
    "mypy.nodes.SymbolTableNode",
    "mypy.types.UnboundType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.make_argument": {
  "data": {
   "lineno": 2498,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Argument",
    "mypy.nodes.Var",
    "mypy.types.Type",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.name_already_defined": {
  "data": {
   "lineno": 3821,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.name_not_defined": {
  "data": {
   "lineno": 3808,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.semanal.SUGGESTED_TEST_FIXTURES",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.named_type": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.named_type_or_none": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.normalize_type_alias": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.collections_type_aliases",
    "mypy.nodes.type_aliases",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.note": {
  "data": {
   "lineno": 3846,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.object_type": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.parse_bool": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.parse_enum_call_args": {
  "data": {
   "lineno": 2819,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.CallExpr",
    "mypy.nodes.DictExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.UnicodeExpr",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.parse_namedtuple_args": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.parse_namedtuple_fields_with_types": {
  "data": {
   "lineno": 2351,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Type",
    "str",
    "type",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.parse_typeddict_args": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.CallExpr",
    "mypy.nodes.DictExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.parse_typeddict_fields_with_types": {
  "data": {
   "lineno": 2619,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Type",
    "str",
    "type",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.prepare_method_signature": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.typevars.fill_typevars",
    "replace_implicit_first_type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_enum_call": {
  "data": {
   "lineno": 2749,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.GDEF",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_import_over_existing_name": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.ImportBase",
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF",
    "mypy.nodes.NameExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_module_assignment": {
  "data": {
   "lineno": 2689,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.Expression",
    "mypy.nodes.ListExpr",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.Var",
    "typing.List",
    "typing.Union",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_namedtuple_definition": {
  "data": {
   "lineno": 2251,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.GDEF",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_newtype_declaration": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.GDEF",
    "mypy.nodes.NewTypeExpr",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "mypy.types.Instance",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_typeddict_definition": {
  "data": {
   "lineno": 2511,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.GDEF",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_typevar_declaration": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TVAR",
    "mypy.nodes.TypeVarExpr",
    "mypy.typeanal.check_for_explicit_any",
    "mypy.typeanal.has_any_from_unimported_type",
    "typing.TypeVar",
    "typing.TypeVar.line"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.process_typevar_parameters": {
  "data": {
   "lineno": 2185,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.INVARIANT",
    "mypy.nodes.NameExpr",
    "mypy.types.Type",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.qualified_name": {
  "data": {
   "lineno": 3729,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.rebind_symbol_table_node": {
  "data": {
   "lineno": 3674,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.util.get_prefix",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.refresh_class_def": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncItem"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.refresh_partial": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.refresh_top_level": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.set_original_def": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.Node",
    "mypy.nodes.Var",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.setup_class_def_analysis": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef",
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.setup_type_promotion": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ClassDef",
    "mypy.nodes.PromoteExpr",
    "mypy.semanal.TYPE_PROMOTIONS_PYTHON2",
    "mypy.semanal.TYPE_PROMOTIONS_PYTHON3"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.store_declared_types": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.Lvalue",
    "mypy.nodes.RefExpr",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.Var",
    "mypy.types.StarType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.str_type": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.translate_dict_call": {
  "data": {
   "lineno": 3258,
   "symbols_in_volume": [
    "all",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.CallExpr",
    "mypy.nodes.DictExpr",
    "mypy.nodes.StrExpr",
    "str",
    "typing.Optional",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.tvar_scope_frame": {
  "data": {
   "lineno": 3557,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mypy.tvar_scope.TypeVarScope",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.type_analyzer": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "bool",
    "mypy.tvar_scope.TypeVarScope",
    "mypy.typeanal.TypeAnalyser",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.undefined_name_extra_info": {
  "data": {
   "lineno": 3853,
   "symbols_in_volume": [
    "mypy.semanal.obsolete_name_mapping",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.update_function_type_variables": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "mypy.nodes.FuncItem",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.update_metaclass": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ClassDef",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.verify_base_classes": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "bool",
    "find_duplicate",
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit__promote_expr": {
  "data": {
   "lineno": 3528,
   "symbols_in_volume": [
    "mypy.nodes.PromoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_assert_stmt": {
  "data": {
   "lineno": 2957,
   "symbols_in_volume": [
    "mypy.nodes.AssertStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_assignment_stmt": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.GDEF",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TempNode",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_await_expr": {
  "data": {
   "lineno": 3546,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_backquote_expr": {
  "data": {
   "lineno": 3525,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_block": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_block_maybe": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_break_stmt": {
  "data": {
   "lineno": 2996,
   "symbols_in_volume": [
    "mypy.nodes.BreakStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_call_expr": {
  "data": {
   "lineno": 3193,
   "symbols_in_volume": [
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.CallExpr",
    "mypy.nodes.CastExpr",
    "mypy.nodes.GDEF",
    "mypy.nodes.ListExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.PromoteExpr",
    "mypy.nodes.RevealTypeExpr",
    "mypy.nodes.TupleExpr",
    "refers_to_fullname"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_cast_expr": {
  "data": {
   "lineno": 3458,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_class_def": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_comparison_expr": {
  "data": {
   "lineno": 3391,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_conditional_expr": {
  "data": {
   "lineno": 3520,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_continue_stmt": {
  "data": {
   "lineno": 3000,
   "symbols_in_volume": [
    "mypy.nodes.ContinueStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_decorator": {
  "data": {
   "lineno": 2883,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mypy.nodes.Decorator",
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "refers_to_fullname",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_del_stmt": {
  "data": {
   "lineno": 3077,
   "symbols_in_volume": [
    "mypy.nodes.DelStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_dict_expr": {
  "data": {
   "lineno": 3169,
   "symbols_in_volume": [
    "mypy.nodes.DictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_dictionary_comprehension": {
  "data": {
   "lineno": 3476,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_exec_stmt": {
  "data": {
   "lineno": 3121,
   "symbols_in_volume": [
    "mypy.nodes.ExecStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_expression_stmt": {
  "data": {
   "lineno": 2942,
   "symbols_in_volume": [
    "mypy.nodes.ExpressionStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_file": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.strict_optional_set",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "mypy.nodes.implicit_module_attrs",
    "mypy.nodes.type_aliases",
    "mypy.options.Options",
    "remove_imported_names_from_symtable",
    "str",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_for_stmt": {
  "data": {
   "lineno": 2978,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ForStmt",
    "mypy.nodes.ListExpr",
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_func_def": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.semanal.FUNCTION_FIRST_PHASE_POSTPONE_SECOND",
    "mypy.semanal.FUNCTION_SECOND_PHASE",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_generator_expr": {
  "data": {
   "lineno": 3484,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_global_decl": {
  "data": {
   "lineno": 3090,
   "symbols_in_volume": [
    "mypy.nodes.GlobalDecl"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_if_stmt": {
  "data": {
   "lineno": 3004,
   "symbols_in_volume": [
    "infer_reachability_of_if_statement",
    "len",
    "mypy.nodes.IfStmt",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_import": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "id",
    "id.split",
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_import_all": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll",
    "mypy.nodes.SymbolTableNode"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_import_from": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.ImportFrom",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_index_expr": {
  "data": {
   "lineno": 3398,
   "symbols_in_volume": [
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.TypeAliasExpr",
    "mypy.nodes.TypeApplication",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.nongen_builtins",
    "mypy.typeanal.no_subscript_builtin_alias",
    "refers_to_class_or_function"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_lambda_expr": {
  "data": {
   "lineno": 3517,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_list_comprehension": {
  "data": {
   "lineno": 3470,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_list_expr": {
  "data": {
   "lineno": 3157,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ListExpr",
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_member_expr": {
  "data": {
   "lineno": 3295,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MDEF",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.MypyFile",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.semanal.obsolete_name_mapping",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.special_form",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_name_expr": {
  "data": {
   "lineno": 3132,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "mypy.nodes.TVAR"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_nonlocal_decl": {
  "data": {
   "lineno": 3096,
   "symbols_in_volume": [
    "mypy.nodes.NonlocalDecl",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_op_expr": {
  "data": {
   "lineno": 3374,
   "symbols_in_volume": [
    "infer_condition_value",
    "mypy.nodes.OpExpr",
    "mypy.semanal.ALWAYS_FALSE",
    "mypy.semanal.ALWAYS_TRUE"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 2963,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.GDEF",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.OperatorAssignmentStmt",
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_overloaded_func_def": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "any",
    "callable",
    "enumerate",
    "isinstance",
    "len",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MDEF",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.SymbolTableNode",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.function_type",
    "refers_to_fullname",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_print_stmt": {
  "data": {
   "lineno": 3115,
   "symbols_in_volume": [
    "mypy.nodes.PrintStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_raise_stmt": {
  "data": {
   "lineno": 2951,
   "symbols_in_volume": [
    "mypy.nodes.RaiseStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_return_stmt": {
  "data": {
   "lineno": 2945,
   "symbols_in_volume": [
    "mypy.nodes.ReturnStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_reveal_type_expr": {
  "data": {
   "lineno": 3462,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_set_comprehension": {
  "data": {
   "lineno": 3473,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_set_expr": {
  "data": {
   "lineno": 3163,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.SetExpr",
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_slice_expr": {
  "data": {
   "lineno": 3450,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_star_expr": {
  "data": {
   "lineno": 3175,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_super_expr": {
  "data": {
   "lineno": 3143,
   "symbols_in_volume": [
    "mypy.nodes.SuperExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_try_stmt": {
  "data": {
   "lineno": 3013,
   "symbols_in_volume": [
    "mypy.nodes.TryStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_tuple_expr": {
  "data": {
   "lineno": 3151,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_type_application": {
  "data": {
   "lineno": 3465,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.TypeApplication",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_unary_expr": {
  "data": {
   "lineno": 3395,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_while_stmt": {
  "data": {
   "lineno": 2971,
   "symbols_in_volume": [
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_with_stmt": {
  "data": {
   "lineno": 3030,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.ListExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.WithStmt",
    "mypy.types.TupleType",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_yield_expr": {
  "data": {
   "lineno": 3531,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.SemanticAnalyzerPass2.visit_yield_from_expr": {
  "data": {
   "lineno": 3182,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.semanal.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.semanal.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.semanal.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.semanal.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.semanal.StarType": {
  "data": {
   "shadows": "mypy.types.StarType"
  },
  "type": "import"
 },
 "mypy.semanal.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.semanal.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.semanal.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "mypy.semanal.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.semanal.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.semanal.T": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "mypy.semanal.TRUTH_VALUE_UNKNOWN": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "mypy.semanal.TVAR": {
  "data": {
   "shadows": "mypy.nodes.TVAR"
  },
  "type": "import"
 },
 "mypy.semanal.TYPE_ALIAS": {
  "data": {
   "shadows": "mypy.nodes.TYPE_ALIAS"
  },
  "type": "import"
 },
 "mypy.semanal.TYPE_PROMOTIONS": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "mypy.semanal.TYPE_PROMOTIONS_PYTHON2": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "mypy.semanal.TYPE_PROMOTIONS_PYTHON3": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "mypy.semanal.Targ": {
  "data": {
   "lineno": 4089
  },
  "type": "constant"
 },
 "mypy.semanal.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.semanal.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.semanal.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.semanal.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.semanal.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.semanal.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.semanal.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.semanal.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.semanal.TypeAnalyser": {
  "data": {
   "shadows": "mypy.typeanal.TypeAnalyser"
  },
  "type": "import"
 },
 "mypy.semanal.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.semanal.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.semanal.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.semanal.TypeTranslationError": {
  "data": {
   "shadows": "mypy.exprtotype.TypeTranslationError"
  },
  "type": "import"
 },
 "mypy.semanal.TypeTranslator": {
  "data": {
   "shadows": "mypy.types.TypeTranslator"
  },
  "type": "import"
 },
 "mypy.semanal.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVarList": {
  "data": {
   "shadows": "mypy.typeanal.TypeVarList"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVarScope": {
  "data": {
   "shadows": "mypy.tvar_scope.TypeVarScope"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVariableQuery": {
  "data": {
   "shadows": "mypy.typeanal.TypeVariableQuery"
  },
  "type": "import"
 },
 "mypy.semanal.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.semanal.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.semanal.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.semanal.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.semanal.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.semanal.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.semanal.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.semanal.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.semanal.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.semanal.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.semanal.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.semanal.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.semanal.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.semanal.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.semanal.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.semanal.analyze_type_alias": {
  "data": {
   "shadows": "mypy.typeanal.analyze_type_alias"
  },
  "type": "import"
 },
 "mypy.semanal.calculate_class_mro": {
  "data": {
   "lineno": 3898,
   "symbols_in_volume": [
    "any",
    "fail",
    "mypy.nodes.ClassDef",
    "mypy.nodes.Context",
    "mypy.nodes.MroError",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.semanal.check_for_explicit_any": {
  "data": {
   "shadows": "mypy.typeanal.check_for_explicit_any"
  },
  "type": "import"
 },
 "mypy.semanal.checkmember": {
  "data": {
   "shadows": "mypy.checkmember"
  },
  "type": "import"
 },
 "mypy.semanal.collections_type_aliases": {
  "data": {
   "shadows": "mypy.nodes.collections_type_aliases"
  },
  "type": "import"
 },
 "mypy.semanal.consider_sys_platform": {
  "data": {
   "lineno": 4050,
   "symbols_in_volume": [
    "fixed_comparison",
    "int",
    "is_sys_attr",
    "isinstance",
    "len",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.semanal.ALWAYS_FALSE",
    "mypy.semanal.ALWAYS_TRUE",
    "mypy.semanal.TRUTH_VALUE_UNKNOWN",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.consider_sys_version_info": {
  "data": {
   "lineno": 4009,
   "symbols_in_volume": [
    "contains_int_or_tuple_of_ints",
    "contains_sys_version_info",
    "fixed_comparison",
    "int",
    "isinstance",
    "len",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.Expression",
    "mypy.semanal.TRUTH_VALUE_UNKNOWN",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.contains_int_or_tuple_of_ints": {
  "data": {
   "lineno": 4109,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.literals.literal",
    "mypy.nodes.Expression",
    "mypy.nodes.IntExpr",
    "mypy.nodes.LITERAL_YES",
    "mypy.nodes.TupleExpr",
    "tuple",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.contains_sys_version_info": {
  "data": {
   "lineno": 4124,
   "symbols_in_volume": [
    "int",
    "is_sys_attr",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.SliceExpr",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.semanal.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.semanal.expr_to_unanalyzed_type": {
  "data": {
   "shadows": "mypy.exprtotype.expr_to_unanalyzed_type"
  },
  "type": "import"
 },
 "mypy.semanal.fill_typevars": {
  "data": {
   "shadows": "mypy.typevars.fill_typevars"
  },
  "type": "import"
 },
 "mypy.semanal.find_duplicate": {
  "data": {
   "lineno": 3909,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.semanal.T",
    "range",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.fixed_comparison": {
  "data": {
   "lineno": 4092,
   "symbols_in_volume": [
    "int",
    "mypy.semanal.ALWAYS_FALSE",
    "mypy.semanal.ALWAYS_TRUE",
    "mypy.semanal.TRUTH_VALUE_UNKNOWN",
    "mypy.semanal.Targ",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.function_type": {
  "data": {
   "shadows": "mypy.types.function_type"
  },
  "type": "import"
 },
 "mypy.semanal.get_member_expr_fullname": {
  "data": {
   "shadows": "mypy.nodes.get_member_expr_fullname"
  },
  "type": "import"
 },
 "mypy.semanal.get_prefix": {
  "data": {
   "shadows": "mypy.util.get_prefix"
  },
  "type": "import"
 },
 "mypy.semanal.has_any_from_unimported_type": {
  "data": {
   "shadows": "mypy.typeanal.has_any_from_unimported_type"
  },
  "type": "import"
 },
 "mypy.semanal.implicit_module_attrs": {
  "data": {
   "shadows": "mypy.nodes.implicit_module_attrs"
  },
  "type": "import"
 },
 "mypy.semanal.infer_condition_value": {
  "data": {
   "lineno": 3963,
   "symbols_in_volume": [
    "consider_sys_platform",
    "consider_sys_version_info",
    "int",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.OpExpr",
    "mypy.nodes.UnaryExpr",
    "mypy.semanal.ALWAYS_FALSE",
    "mypy.semanal.ALWAYS_TRUE",
    "mypy.semanal.MYPY_TRUE",
    "mypy.semanal.TRUTH_VALUE_UNKNOWN",
    "mypy.semanal.inverted_truth_mapping",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.infer_reachability_of_if_statement": {
  "data": {
   "lineno": 3935,
   "symbols_in_volume": [
    "infer_condition_value",
    "int",
    "len",
    "mark_block_mypy_only",
    "mark_block_unreachable",
    "mypy.nodes.Block",
    "mypy.nodes.IfStmt",
    "mypy.semanal.ALWAYS_FALSE",
    "mypy.semanal.ALWAYS_TRUE",
    "mypy.semanal.MYPY_FALSE",
    "mypy.semanal.MYPY_TRUE",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.inverted_truth_mapping": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mypy.semanal.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.semanal.is_sys_attr": {
  "data": {
   "lineno": 4149,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.join": {
  "data": {
   "shadows": "mypy.join"
  },
  "type": "import"
 },
 "mypy.semanal.literal": {
  "data": {
   "shadows": "mypy.literals.literal"
  },
  "type": "import"
 },
 "mypy.semanal.make_any_non_explicit": {
  "data": {
   "lineno": 4196,
   "symbols_in_volume": [
    "MakeAnyNonExplicit",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.mark_block_mypy_only": {
  "data": {
   "lineno": 4179,
   "symbols_in_volume": [
    "MarkImportsMypyOnlyVisitor",
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.mark_block_unreachable": {
  "data": {
   "lineno": 4161,
   "symbols_in_volume": [
    "MarkImportsUnreachableVisitor",
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.no_subscript_builtin_alias": {
  "data": {
   "shadows": "mypy.typeanal.no_subscript_builtin_alias"
  },
  "type": "import"
 },
 "mypy.semanal.nongen_builtins": {
  "data": {
   "shadows": "mypy.nodes.nongen_builtins"
  },
  "type": "import"
 },
 "mypy.semanal.obsolete_name_mapping": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "mypy.semanal.refers_to_class_or_function": {
  "data": {
   "lineno": 3892,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncDef",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.refers_to_fullname": {
  "data": {
   "lineno": 3887,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.RefExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.remove_dups": {
  "data": {
   "shadows": "mypy.typeanal.remove_dups"
  },
  "type": "import"
 },
 "mypy.semanal.remove_imported_names_from_symtable": {
  "data": {
   "lineno": 3920,
   "symbols_in_volume": [
    "mypy.nodes.SymbolTable",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.replace_implicit_first_type": {
  "data": {
   "lineno": 3866,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.report_internal_error": {
  "data": {
   "shadows": "mypy.errors.report_internal_error"
  },
  "type": "import"
 },
 "mypy.semanal.set_callable_name": {
  "data": {
   "lineno": 3876,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncDef",
    "mypy.types.FunctionLike",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal.type_aliases": {
  "data": {
   "shadows": "mypy.nodes.type_aliases"
  },
  "type": "import"
 },
 "mypy.semanal_pass1": {
  "data": {},
  "type": "module"
 },
 "mypy.semanal_pass1.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.LDEF": {
  "data": {
   "shadows": "mypy.nodes.LDEF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Lvalue": {
  "data": {
   "shadows": "mypy.nodes.Lvalue"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mypy.semanal.SemanticAnalyzerPass2"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.add_symbol": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.sametypes.is_same_type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.analyze_lvalue": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Lvalue"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.kind_by_scope": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.GDEF",
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.process_nested_classes": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.IfStmt",
    "mypy.nodes.Import",
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportFrom",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_assignment_stmt": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_block": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_class_def": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.LDEF",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_decorator": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "mypy.nodes.Decorator",
    "mypy.nodes.SymbolTableNode"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mypy.experiments.strict_optional_set",
    "mypy.nodes.GDEF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "mypy.nodes.implicit_module_attrs.items",
    "mypy.options.Options",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "mypy.types.UnionType",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_for_stmt": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_func_def": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_if_stmt": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "mypy.nodes.IfStmt",
    "mypy.semanal.infer_reachability_of_if_statement"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_import": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "id",
    "mypy.nodes.Import",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_import_all": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_import_from": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_overloaded_func_def": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.SymbolTableNode"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_try_stmt": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "mypy.nodes.TryStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_while_stmt": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_with_stmt": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mypy.nodes.WithStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass2": {
  "data": {
   "shadows": "mypy.semanal.SemanticAnalyzerPass2"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.implicit_module_attrs": {
  "data": {
   "shadows": "mypy.nodes.implicit_module_attrs"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.infer_reachability_of_if_statement": {
  "data": {
   "shadows": "mypy.semanal.infer_reachability_of_if_statement"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.semanal_pass3": {
  "data": {},
  "type": "module"
 },
 "mypy.semanal_pass3.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.ForwardRef": {
  "data": {
   "shadows": "mypy.types.ForwardRef"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "mypy.types.TypeTranslator"
   ]
  },
  "type": "class"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.nodes.Node",
    "mypy.nodes.SymbolTableNode",
    "str",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.check_recursion": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.nodes.Node",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_callable_type": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_forwardref_type": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_instance": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "bool",
    "len",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_overloaded": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_tuple_type": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_type_type": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_type_var": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_typeddict_type": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.ForwardReferenceResolver.visit_union_type": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.UnionType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Lvalue": {
  "data": {
   "shadows": "mypy.nodes.Lvalue"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mypy.errors.Errors",
    "mypy.nodes.MypyFile",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.accept": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Exception",
    "mypy.errors.report_internal_error",
    "mypy.nodes.Node"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.analyze": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Node",
    "mypy.nodes.SymbolTableNode",
    "mypy.types.Type",
    "type",
    "type.accept",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.analyze.patch": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ForwardReferenceResolver"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.analyze_info": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.analyze_types": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "mypy.types.Type",
    "type",
    "type.accept",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.analyze_types.patch": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ForwardReferenceResolver"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.builtin_type": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.check_for_omitted_generics": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "mypy.messages.BARE_GENERIC",
    "mypy.typeanal.collect_any_types",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_omitted_generics"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.fail": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.fail_blocker": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.make_type_analyzer": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "bool",
    "mypy.typeanal.TypeAnalyserPass3",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.perform_transform": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CastExpr",
    "mypy.nodes.ForStmt",
    "mypy.nodes.FuncDef",
    "mypy.nodes.NameExpr",
    "mypy.nodes.NamedTupleExpr",
    "mypy.nodes.NewTypeExpr",
    "mypy.nodes.Node",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeAliasExpr",
    "mypy.nodes.TypeApplication",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.TypeVarExpr",
    "mypy.nodes.TypedDictExpr",
    "mypy.nodes.Var",
    "mypy.nodes.WithStmt",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "transform",
    "typing.Callable",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.refresh_partial": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.refresh_top_level": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.transform_types_in_lvalue": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Lvalue",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.Var",
    "mypy.types.Type",
    "transform",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_assignment_stmt": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.NamedTupleExpr",
    "mypy.nodes.NewTypeExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TypeAliasExpr",
    "mypy.nodes.TypeVarExpr",
    "mypy.nodes.TypedDictExpr",
    "mypy.nodes.Var",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_block": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_cast_expr": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_class_def": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "add_protocol_members",
    "isinstance",
    "list",
    "mypy.nodes.ClassDef",
    "mypy.nodes.NamedTupleExpr",
    "mypy.nodes.TypedDictExpr",
    "mypy.types.Instance",
    "super",
    "type",
    "type.type.fullname",
    "type.type.is_protocol"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_decorator": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "calculate_return_type",
    "find_fixed_callable_return",
    "is_identity_signature",
    "isinstance",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.RefExpr",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.function_type",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_file": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mypy.experiments.strict_optional_set",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "str",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_for_stmt": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_func_def": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_overloaded_func_def": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mypy.nodes.OverloadedFuncDef",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_reveal_type_expr": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_type_application": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.SemanticAnalyzerPass3.visit_with_stmt": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mypy.nodes.WithStmt",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeAnalyserPass3": {
  "data": {
   "shadows": "mypy.typeanal.TypeAnalyserPass3"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeTranslator": {
  "data": {
   "shadows": "mypy.types.TypeTranslator"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.add_protocol_members": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "list",
    "mypy.nodes.TypeInfo",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.calculate_return_type": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncDef",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.unannotated",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.collect_any_types": {
  "data": {
   "shadows": "mypy.typeanal.collect_any_types"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.find_fixed_callable_return": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncDef",
    "mypy.nodes.RefExpr",
    "mypy.types.CallableType",
    "mypy.typevars.has_no_typevars",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.function_type": {
  "data": {
   "shadows": "mypy.types.function_type"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.has_no_typevars": {
  "data": {
   "shadows": "mypy.typevars.has_no_typevars"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.is_identity_signature": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass3.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.mypy.semanal": {
  "data": {
   "shadows": "mypy.semanal"
  },
  "type": "import"
 },
 "mypy.semanal_pass3.report_internal_error": {
  "data": {
   "shadows": "mypy.errors.report_internal_error"
  },
  "type": "import"
 },
 "mypy.server": {
  "data": {},
  "type": "module"
 },
 "mypy.server.astdiff": {
  "data": {
   "symbols_in_volume": [
    "mypy.types.Type",
    "object",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.server.astdiff.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.server.astdiff.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.server.astdiff.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_any": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.server.astdiff.is_identical_type",
    "mypy.server.astdiff.is_identical_types",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool",
    "mypy.types.ErasedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_instance": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.server.astdiff.is_identical_types",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_none_type": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.server.astdiff.is_identical_types",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.server.astdiff.is_identical_types",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_type_type": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.server.astdiff.is_identical_type",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_type_var": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.server.astdiff.is_identical_type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.IdenticalTypeVisitor.visit_union_type": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.server.astdiff.is_identical_types",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.server.astdiff.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.astdiff.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.server.astdiff.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.server.astdiff.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.server.astdiff.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.server.astdiff.SnapshotItem": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_any": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_simple_type",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_type",
    "mypy.server.astdiff.snapshot_types",
    "mypy.types.CallableType",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_simple_type",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_simple_type",
    "mypy.types.ErasedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_instance": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_types",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_none_type": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_simple_type",
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_types",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.server.astdiff.SnapshotItem",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_types",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_type_type": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_type",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_type_var": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_type",
    "mypy.server.astdiff.snapshot_types",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_type",
    "mypy.types.TypedDictType",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_types",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_simple_type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SnapshotTypeVisitor.visit_union_type": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_type",
    "mypy.types.UnionType",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "mypy.server.astdiff.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.server.astdiff.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mypy.server.astdiff.TVAR": {
  "data": {
   "shadows": "mypy.nodes.TVAR"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TYPE_ALIAS": {
  "data": {
   "shadows": "mypy.nodes.TYPE_ALIAS"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.server.astdiff.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.server.astdiff.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.server.astdiff.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.server.astdiff.compare_symbol_table_snapshots": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mypy.server.astdiff.SnapshotItem",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.get_prefix": {
  "data": {
   "shadows": "mypy.util.get_prefix"
  },
  "type": "import"
 },
 "mypy.server.astdiff.is_identical_type": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "IdenticalTypeVisitor",
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.is_identical_types": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "all",
    "bool",
    "len",
    "mypy.server.astdiff.TT",
    "mypy.server.astdiff.is_identical_type",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.snapshot_definition": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncBase",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.server.astdiff.snapshot_symbol_table",
    "object",
    "snapshot_optional_type",
    "snapshot_type",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.snapshot_optional_type": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_type",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.snapshot_simple_type": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.snapshot_symbol_table": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TVAR",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeVarExpr",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.server.astdiff.SnapshotItem",
    "mypy.util.get_prefix",
    "snapshot_definition",
    "snapshot_optional_type",
    "snapshot_type",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.snapshot_type": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "SnapshotTypeVisitor",
    "mypy.server.astdiff.SnapshotItem",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.server.astdiff.snapshot_types": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.snapshot_type",
    "mypy.types.Type",
    "tuple",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.SymbolNode",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.server.astmerge.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.server.astmerge.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.server.astmerge.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.server.astmerge.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.server.astmerge.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.astmerge.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "mypy.server.astmerge.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.server.astmerge.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.server.astmerge.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.server.astmerge.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.server.astmerge.NodeReplaceVisitor": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mypy.nodes.SymbolNode",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.fixup": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mypy.server.astmerge.SN",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.fixup_type": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "TypeReplaceVisitor",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.process_type_info": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "enumerate",
    "mypy.nodes.TypeInfo",
    "replace_nodes_in_symbol_table"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.replace_statements": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Statement",
    "mypy.nodes.SymbolNode",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_block": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_class_def": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_func_def": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_member_expr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_mypy_file": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_name_expr": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_namedtuple_expr": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.nodes.NamedTupleExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NodeReplaceVisitor.visit_ref_expr": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "mypy.nodes.RefExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.server.astmerge.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.server.astmerge.SN": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mypy.server.astmerge.Statement": {
  "data": {
   "shadows": "mypy.nodes.Statement"
  },
  "type": "import"
 },
 "mypy.server.astmerge.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "mypy.server.astmerge.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TypeReplaceVisitor": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mypy.nodes.SymbolNode",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.fixup": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "mypy.server.astmerge.SN",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_any": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_callable_type": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_deleted_type": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_instance": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_none_type": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_overloaded": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_partial_type": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_tuple_type": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_type_type": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_type_var": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "NotImplementedError",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_unbound_type": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeReplaceVisitor.visit_union_type": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.server.astmerge.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.server.astmerge.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.server.astmerge.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.server.astmerge.get_prefix": {
  "data": {
   "shadows": "mypy.util.get_prefix"
  },
  "type": "import"
 },
 "mypy.server.astmerge.merge_asts": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "replace_nodes_in_ast",
    "replace_nodes_in_symbol_table",
    "replacement_map_from_symbol_table"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.replace_nodes_in_ast": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NodeReplaceVisitor",
    "mypy.nodes.SymbolNode",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.replace_nodes_in_symbol_table": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.server.astmerge.TypeReplaceVisitor",
    "typing.Dict",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.server.astmerge.replacement_map_from_symbol_table": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolNode",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "mypy.util.get_prefix",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip": {
  "data": {},
  "type": "module"
 },
 "mypy.server.aststrip.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.server.aststrip.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.server.aststrip.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.server.aststrip.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.server.aststrip.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.server.aststrip.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.server.aststrip.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.server.aststrip.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.server.aststrip.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.server.aststrip.NodeStripVisitor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.aststrip.NodeStripVisitor.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.enter_class": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "mypy.server.aststrip.contextlib",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.is_duplicate_attribute_def": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "any",
    "bool",
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.strip_class_body": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.strip_file_top_level": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.strip_ref_expr": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.nodes.RefExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_func_def": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "nothing",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_import": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.nodes.Import",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_import_from": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_member_expr": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_name_expr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.nodes.GDEF",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.aststrip.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.server.aststrip.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.server.aststrip.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.server.aststrip.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.server.aststrip.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.server.aststrip.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "mypy.server.aststrip.is_self_member_ref": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.nothing": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mypy.server.aststrip.contextlib",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.strip_target": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NodeStripVisitor",
    "isinstance",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps": {
  "data": {},
  "type": "module"
 },
 "mypy.server.deps.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.server.deps.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.server.deps.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.server.deps.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.server.deps.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.server.deps.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.server.deps.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.server.deps.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.server.deps.DependencyVisitor": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.deps.DependencyVisitor.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.add_attribute_dependency": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.add_attribute_dependency_for_expr": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.add_dependency": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.add_iter_dependency": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.add_operator_method_dependency": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.add_operator_method_dependency_for_type": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "isinstance",
    "mypy.server.trigger.make_trigger",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "mypy.types.UnionType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.add_type_dependencies": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "get_type_triggers",
    "mypy.types.Type",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.attribute_triggers": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "isinstance",
    "mypy.server.trigger.make_trigger",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType",
    "mypy.types.UnionType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.current_full_target": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.current_scope": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.current_target": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.enter_class_scope": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.enter_file_scope": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.enter_function_scope": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.get_non_partial_lvalue_type": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var",
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.leave_scope": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.process_binary_op": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.op_methods.get",
    "mypy.nodes.reverse_op_methods.get",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.process_lvalue": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "get_type_triggers",
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.GDEF",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.MDEF",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr",
    "mypy.server.trigger.make_trigger"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "get_type_triggers",
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NamedTupleExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.TypeVarExpr",
    "mypy.nodes.Var",
    "mypy.server.trigger.make_trigger",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_block": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_call_expr": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.server.trigger.make_trigger",
    "mypy.types.FunctionLike",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_cast_expr": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_class_def": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.Var",
    "mypy.server.trigger.make_trigger",
    "non_trivial_bases",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "enumerate",
    "mypy.nodes.ComparisonExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_decorator": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mypy.nodes.Decorator",
    "mypy.server.trigger.make_trigger",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_del_stmt": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.DelStmt",
    "mypy.nodes.IndexExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_for_stmt": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ForStmt",
    "mypy.nodes.ListExpr",
    "mypy.nodes.TupleExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_func_def": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "get_type_triggers",
    "isinstance",
    "mypy.checkmember.bind_self",
    "mypy.nodes.FuncDef",
    "mypy.server.trigger.make_trigger",
    "mypy.types.FunctionLike",
    "non_trivial_bases",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_generator_expr": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_import": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "id",
    "mypy.nodes.Import",
    "mypy.server.trigger.make_trigger"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_import_from": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom",
    "mypy.server.trigger.make_trigger"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_index_expr": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_member_expr": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr",
    "mypy.server.trigger.make_trigger",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_mypy_file": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_name_expr": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF",
    "mypy.nodes.NameExpr",
    "mypy.server.trigger.make_trigger"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_op_expr": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "mypy.nodes.OperatorAssignmentStmt",
    "mypy.nodes.op_methods",
    "mypy.nodes.ops_with_inplace_method",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_print_stmt": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "mypy.nodes.PrintStmt",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_star_expr": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_type_application": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_unary_expr": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr",
    "mypy.nodes.unary_op_methods",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_with_stmt": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "mypy.nodes.WithStmt",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.DependencyVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.server.deps.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.server.deps.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.server.deps.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.server.deps.ForwardRef": {
  "data": {
   "shadows": "mypy.types.ForwardRef"
  },
  "type": "import"
 },
 "mypy.server.deps.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.server.deps.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.server.deps.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.server.deps.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.server.deps.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.server.deps.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.server.deps.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.server.deps.LDEF": {
  "data": {
   "shadows": "mypy.nodes.LDEF"
  },
  "type": "import"
 },
 "mypy.server.deps.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.deps.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "mypy.server.deps.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.server.deps.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.server.deps.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.server.deps.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.server.deps.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.deps.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.server.deps.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.server.deps.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.server.deps.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.server.deps.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.server.deps.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.server.deps.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.server.deps.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.server.deps.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.server.deps.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.server.deps.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.server.deps.TypeTriggersVisitor": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "mypy.types.TypeVisitor",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "mypy.server.deps.TypeTriggersVisitor.__init__": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_any": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_callable_type": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "mypy.server.deps.get_type_triggers",
    "mypy.types.CallableType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_deleted_type": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_forwardref_type": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_instance": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "mypy.server.deps.get_type_triggers",
    "mypy.server.trigger.make_trigger",
    "mypy.types.Instance",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_none_type": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_overloaded": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "mypy.server.deps.get_type_triggers",
    "mypy.types.Overloaded",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_partial_type": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_tuple_type": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "mypy.server.deps.get_type_triggers",
    "mypy.types.TupleType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_type_type": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "mypy.server.deps.get_type_triggers",
    "mypy.types.TypeType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_type_var": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "mypy.server.trigger.make_trigger",
    "mypy.types.TypeVarType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "mypy.types.TypedDictType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_unbound_type": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "mypy.types.UnboundType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "mypy.types.UninhabitedType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeTriggersVisitor.visit_union_type": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "mypy.server.deps.get_type_triggers",
    "mypy.types.UnionType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.server.deps.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.server.deps.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.server.deps.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.server.deps.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.server.deps.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.server.deps.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.server.deps.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.server.deps.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.server.deps.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.server.deps.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.server.deps.bind_self": {
  "data": {
   "shadows": "mypy.checkmember.bind_self"
  },
  "type": "import"
 },
 "mypy.server.deps.dump_all_dependencies": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "id",
    "int",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.server.deps.get_dependencies",
    "mypy.types.Type",
    "print",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.get_dependencies": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "DependencyVisitor",
    "int",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.get_dependencies_of_target": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "DependencyVisitor",
    "int",
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.Decorator",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncBase",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MypyFile",
    "mypy.nodes.Node",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.get_type_triggers": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "TypeTriggersVisitor",
    "mypy.types.Type",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.make_trigger": {
  "data": {
   "shadows": "mypy.server.trigger.make_trigger"
  },
  "type": "import"
 },
 "mypy.server.deps.non_trivial_bases": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.deps.op_methods": {
  "data": {
   "shadows": "mypy.nodes.op_methods"
  },
  "type": "import"
 },
 "mypy.server.deps.ops_with_inplace_method": {
  "data": {
   "shadows": "mypy.nodes.ops_with_inplace_method"
  },
  "type": "import"
 },
 "mypy.server.deps.reverse_op_methods": {
  "data": {
   "shadows": "mypy.nodes.reverse_op_methods"
  },
  "type": "import"
 },
 "mypy.server.deps.unary_op_methods": {
  "data": {
   "shadows": "mypy.nodes.unary_op_methods"
  },
  "type": "import"
 },
 "mypy.server.subexpr": {
  "data": {},
  "type": "module"
 },
 "mypy.server.subexpr.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.server.subexpr.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.server.subexpr.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.server.subexpr.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SubexpressionFinder": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.subexpr.SubexpressionFinder.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder._visit_leaf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.add": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_await_expr": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_backquote_expr": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_call_expr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_cast_expr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_comparison_expr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_conditional_expr": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_dict_expr": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mypy.nodes.DictExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_dictionary_comprehension": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_generator_expr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_index_expr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_lambda_expr": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_list_comprehension": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_list_expr": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_member_expr": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_op_expr": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_reveal_type_expr": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_set_comprehension": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_set_expr": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mypy.nodes.SetExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_slice_expr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_star_expr": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_tuple_expr": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_type_application": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_unary_expr": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_yield_expr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_yield_from_expr": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.server.subexpr.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.server.subexpr.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.get_subexpressions": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "SubexpressionFinder",
    "mypy.nodes.Expression",
    "mypy.nodes.Node",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.target": {
  "data": {},
  "type": "module"
 },
 "mypy.server.target.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.server.target.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.target.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.target.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.server.target.module_prefix": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "split_target",
    "str",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.target.split_target": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "str",
    "typing.Iterable",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.trigger": {
  "data": {},
  "type": "module"
 },
 "mypy.server.trigger.make_trigger": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.update": {
  "data": {
   "symbols_in_volume": [
    "mypy.build.Graph",
    "mypy.nodes.MypyFile",
    "mypy.nodes.TypeInfo",
    "mypy.server.update.BlockedUpdate",
    "mypy.server.update.NormalUpdate",
    "str",
    "typing.List",
    "typing.NamedTuple",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.server.update.BlockedUpdate": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "mypy.server.update.BuildManager": {
  "data": {
   "shadows": "mypy.build.BuildManager"
  },
  "type": "import"
 },
 "mypy.server.update.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.server.update.CacheMeta": {
  "data": {
   "shadows": "mypy.build.CacheMeta"
  },
  "type": "import"
 },
 "mypy.server.update.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.server.update.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.server.update.DEBUG": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mypy.server.update.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.server.update.DeferredNode": {
  "data": {
   "shadows": "mypy.checker.DeferredNode"
  },
  "type": "import"
 },
 "mypy.server.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.server.update.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.server.update.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.server.update.FineGrainedBuildManager": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "mypy.server.update.FineGrainedBuildManager.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "extract_type_maps",
    "get_all_dependencies",
    "get_module_to_path_map",
    "mark_all_meta_as_memory_only",
    "mypy.build.BuildManager",
    "mypy.build.Graph",
    "preserve_full_cache"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.FineGrainedBuildManager.update": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dedupe_modules",
    "id",
    "mypy.build.find_module_clear_caches",
    "mypy.server.update.DEBUG",
    "print",
    "repr",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.FineGrainedBuildManager.update_single": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "bool",
    "calculate_active_triggers",
    "extract_type_maps",
    "get_module_to_path_map",
    "id",
    "isinstance",
    "mark_all_meta_as_memory_only",
    "mypy.server.astdiff.snapshot_symbol_table",
    "mypy.server.update.DEBUG",
    "preserve_full_cache",
    "print",
    "propagate_changes_using_dependencies",
    "sorted",
    "str",
    "typing.List",
    "typing.Tuple",
    "update_dependencies",
    "update_single_isolated"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.server.update.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.server.update.Graph": {
  "data": {
   "shadows": "mypy.build.Graph"
  },
  "type": "import"
 },
 "mypy.server.update.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.server.update.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.server.update.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.server.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.update.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.server.update.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.server.update.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.server.update.NamespaceNode": {
  "data": {
   "lineno": 742
  },
  "type": "constant"
 },
 "mypy.server.update.NormalUpdate": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "mypy.server.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.update.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.server.update.SavedCache": {
  "data": {
   "shadows": "mypy.build.SavedCache"
  },
  "type": "import"
 },
 "mypy.server.update.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.server.update.SnapshotItem": {
  "data": {
   "shadows": "mypy.server.astdiff.SnapshotItem"
  },
  "type": "import"
 },
 "mypy.server.update.State": {
  "data": {
   "shadows": "mypy.build.State"
  },
  "type": "import"
 },
 "mypy.server.update.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "mypy.server.update.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.server.update.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.server.update.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.server.update.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.server.update.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.server.update.UpdateResult": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "mypy.server.update.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.server.update.assert_equivalent_paths": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.cache_meta_from_dict": {
  "data": {
   "shadows": "mypy.build.cache_meta_from_dict"
  },
  "type": "import"
 },
 "mypy.server.update.calculate_active_triggers": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildManager",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "mypy.server.astdiff.SnapshotItem",
    "mypy.server.astdiff.compare_symbol_table_snapshots",
    "mypy.server.astdiff.snapshot_symbol_table",
    "mypy.server.trigger.make_trigger",
    "set",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.compare_symbol_table_snapshots": {
  "data": {
   "shadows": "mypy.server.astdiff.compare_symbol_table_snapshots"
  },
  "type": "import"
 },
 "mypy.server.update.dedupe_modules": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "id",
    "set",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.delete_module": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "len",
    "mypy.build.BuildManager",
    "mypy.build.State",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.extract_type_maps": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "id",
    "mypy.build.Graph",
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.find_import_line": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.Import",
    "mypy.nodes.ImportFrom",
    "mypy.nodes.MypyFile",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.find_module_clear_caches": {
  "data": {
   "shadows": "mypy.build.find_module_clear_caches"
  },
  "type": "import"
 },
 "mypy.server.update.find_targets_recursive": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "lookup_target",
    "mypy.checker.DeferredNode",
    "mypy.nodes.MypyFile",
    "mypy.server.target.module_prefix",
    "mypy.server.update.DEBUG",
    "print",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.get_all_changed_modules": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "mypy.build.State",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.get_all_dependencies": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.build.State",
    "mypy.options.Options",
    "str",
    "typing.Dict",
    "typing.Set",
    "update_dependencies"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.get_dependencies": {
  "data": {
   "shadows": "mypy.server.deps.get_dependencies"
  },
  "type": "import"
 },
 "mypy.server.update.get_dependencies_of_target": {
  "data": {
   "shadows": "mypy.server.deps.get_dependencies_of_target"
  },
  "type": "import"
 },
 "mypy.server.update.get_enclosing_namespace_types": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checker.DeferredNode",
    "mypy.nodes.MypyFile",
    "mypy.nodes.Var",
    "mypy.server.update.NamespaceNode",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.get_module_to_path_map": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.get_sources": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildSource",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.get_triggered_namespace_items": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Var",
    "mypy.server.astdiff.is_identical_type",
    "mypy.server.trigger.make_trigger",
    "mypy.server.update.NamespaceNode",
    "mypy.types.Type",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.invalidate_stale_cache_entries": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "mypy.build.SavedCache",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.is_identical_type": {
  "data": {
   "shadows": "mypy.server.astdiff.is_identical_type"
  },
  "type": "import"
 },
 "mypy.server.update.load_graph": {
  "data": {
   "shadows": "mypy.build.load_graph"
  },
  "type": "import"
 },
 "mypy.server.update.lookup_target": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checker.DeferredNode",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MypyFile",
    "mypy.nodes.TypeInfo",
    "mypy.server.target.split_target",
    "str",
    "type",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.make_trigger": {
  "data": {
   "shadows": "mypy.server.trigger.make_trigger"
  },
  "type": "import"
 },
 "mypy.server.update.mark_all_meta_as_memory_only": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildManager",
    "mypy.build.State",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.memory_only_cache_meta": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "bool",
    "id",
    "int",
    "mypy.build.BuildManager",
    "mypy.build.CacheMeta",
    "mypy.build.cache_meta_from_dict",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.merge_asts": {
  "data": {
   "shadows": "mypy.server.astmerge.merge_asts"
  },
  "type": "import"
 },
 "mypy.server.update.module_prefix": {
  "data": {
   "shadows": "mypy.server.target.module_prefix"
  },
  "type": "import"
 },
 "mypy.server.update.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.server.update.preserve_full_cache": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "id",
    "list",
    "memory_only_cache_meta",
    "mypy.build.BuildManager",
    "mypy.build.Graph",
    "mypy.build.SavedCache"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.propagate_changes_using_dependencies": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "find_targets_recursive",
    "id",
    "id.update",
    "list",
    "lookup_target",
    "mypy.build.BuildManager",
    "mypy.build.State",
    "mypy.server.target.module_prefix",
    "mypy.server.update.DEBUG",
    "print",
    "reprocess_nodes",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.replace_modules_with_new_variants": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "id",
    "id.names",
    "mypy.build.BuildManager",
    "mypy.build.State",
    "mypy.nodes.MypyFile",
    "mypy.server.astmerge.merge_asts",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.reprocess_nodes": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "get_enclosing_namespace_types",
    "get_triggered_namespace_items",
    "mypy.build.BuildManager",
    "mypy.build.State",
    "mypy.checker.DeferredNode",
    "mypy.server.aststrip.strip_target",
    "mypy.server.update.DEBUG",
    "mypy.server.update.verify_dependencies",
    "print",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.Set",
    "update_deps"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.reprocess_nodes.key": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checker.DeferredNode",
    "mypy.nodes.FuncDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.snapshot_symbol_table": {
  "data": {
   "shadows": "mypy.server.astdiff.snapshot_symbol_table"
  },
  "type": "import"
 },
 "mypy.server.update.split_target": {
  "data": {
   "shadows": "mypy.server.target.split_target"
  },
  "type": "import"
 },
 "mypy.server.update.strip_target": {
  "data": {
   "shadows": "mypy.server.aststrip.strip_target"
  },
  "type": "import"
 },
 "mypy.server.update.update_dependencies": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "id",
    "id.type_map",
    "mypy.build.State",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.server.deps.get_dependencies",
    "set",
    "str",
    "typing.Dict",
    "typing.Mapping",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.update_deps": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "mypy.build.State",
    "mypy.checker.DeferredNode",
    "mypy.options.Options",
    "mypy.server.deps.get_dependencies_of_target",
    "set",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.update_single_isolated": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "assert_equivalent_paths",
    "delete_module",
    "dict",
    "get_all_changed_modules",
    "get_sources",
    "id",
    "invalidate_stale_cache_entries",
    "len",
    "mypy.build.BuildManager",
    "mypy.build.load_graph",
    "mypy.errors.CompileError",
    "mypy.server.update.BlockedUpdate",
    "mypy.server.update.DEBUG",
    "mypy.server.update.NormalUpdate",
    "mypy.server.update.UpdateResult",
    "print",
    "replace_modules_with_new_variants",
    "set",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.server.update.verify_dependencies": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "find_import_line",
    "mypy.build.BuildManager",
    "mypy.build.State"
   ]
  },
  "type": "function"
 },
 "mypy.sharedparse": {
  "data": {
   "symbols_in_volume": [
    "mypy.sharedparse.MAGIC_METHODS",
    "mypy.sharedparse.MAGIC_METHODS_ALLOWING_KWARGS"
   ]
  },
  "type": "module"
 },
 "mypy.sharedparse.MAGIC_METHODS": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mypy.sharedparse.MAGIC_METHODS_ALLOWING_KWARGS": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "mypy.sharedparse.MAGIC_METHODS_POS_ARGS_ONLY": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "mypy.sharedparse.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.sharedparse.argument_elide_name": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.sharedparse.special_function_elide_names": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool",
    "mypy.sharedparse.MAGIC_METHODS_POS_ARGS_ONLY",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.solve": {
  "data": {},
  "type": "module"
 },
 "mypy.solve.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.solve.Constraint": {
  "data": {
   "shadows": "mypy.constraints.Constraint"
  },
  "type": "import"
 },
 "mypy.solve.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.solve.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.solve.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.solve.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.solve.SUPERTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUPERTYPE_OF"
  },
  "type": "import"
 },
 "mypy.solve.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.solve.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.solve.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.solve.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.solve.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.solve.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.solve.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.solve.join_types": {
  "data": {
   "shadows": "mypy.join.join_types"
  },
  "type": "import"
 },
 "mypy.solve.meet_types": {
  "data": {
   "shadows": "mypy.meet.meet_types"
  },
  "type": "import"
 },
 "mypy.solve.solve_constraints": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "collections.defaultdict",
    "isinstance",
    "list",
    "mypy.constraints.Constraint",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.join.join_types",
    "mypy.meet.meet_types",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarId",
    "mypy.types.UninhabitedType",
    "typing.List",
    "typing.Optional",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.stats": {
  "data": {},
  "type": "module"
 },
 "mypy.stats.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.stats.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.stats.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.stats.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.stats.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.stats.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.stats.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mypy.stats.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.stats.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.stats.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.stats.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.stats.HasAnyQuery": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.stats.HasAnyQuery.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.HasAnyQuery.visit_any": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.stats.HasAnyQuery.visit_instance": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Instance",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.HasAnyQuery2": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "mypy.stats.HasAnyQuery"
   ]
  },
  "type": "class"
 },
 "mypy.stats.HasAnyQuery2.visit_callable_type": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "bool",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.stats.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.stats.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.stats.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stats.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.stats.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.stats.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.stats.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.stats.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stats.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.stats.StatisticsVisitor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.stats.StatisticsVisitor.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "collections.Counter",
    "mypy.nodes.Expression",
    "mypy.traverser.TraverserVisitor.__init__",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.log": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.process_node": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.record_line": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "max",
    "mypy.stats.TYPE_EMPTY"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.type": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "any",
    "is_complex",
    "is_imprecise",
    "is_imprecise2",
    "isinstance",
    "mypy.stats.TYPE_ANY",
    "mypy.stats.TYPE_IMPRECISE",
    "mypy.stats.TYPE_PRECISE",
    "mypy.stats.TYPE_UNANALYZED",
    "mypy.typeanal.collect_all_inner_types",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.TypeVarExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_call_expr": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_class_def": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_func_def": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.FuncDef",
    "mypy.stats.TYPE_ANY",
    "mypy.types.CallableType",
    "print",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_index_expr": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_member_expr": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_name_expr": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_op_expr": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_type_application": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_unary_expr": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stats.TYPE_ANY": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_EMPTY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_IMPRECISE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_PRECISE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_UNANALYZED": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mypy.stats.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.stats.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stats.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.stats.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.stats.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.stats.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.stats.TypeQuery": {
  "data": {
   "shadows": "mypy.types.TypeQuery"
  },
  "type": "import"
 },
 "mypy.stats.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.stats.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.stats.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.stats.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.stats.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "mypy.stats.collect_all_inner_types": {
  "data": {
   "shadows": "mypy.typeanal.collect_all_inner_types"
  },
  "type": "import"
 },
 "mypy.stats.dump_type_stats": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bool",
    "is_special_module",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.stats.StatisticsVisitor",
    "mypy.types.Type",
    "print",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stats.ensure_dir_exists": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_complex": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.stats.is_generic",
    "mypy.types.FunctionLike",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_generic": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_imprecise": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "HasAnyQuery",
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_imprecise2": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "HasAnyQuery2",
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_special_module": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stats.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.stats.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.stats.precision_names": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mypy.stats.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.strconv": {
  "data": {},
  "type": "module"
 },
 "mypy.strconv.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.strconv.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.strconv.IdMapper": {
  "data": {
   "shadows": "mypy.util.IdMapper"
  },
  "type": "import"
 },
 "mypy.strconv.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.strconv.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.strconv.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.strconv.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.strconv.StrConv": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor",
    "str"
   ]
  },
  "type": "class"
 },
 "mypy.strconv.StrConv.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bool",
    "mypy.util.IdMapper"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.dump": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dump_tagged",
    "mypy.util.short_type",
    "object",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.format_id": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.func_helper": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.get_id": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "object",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.pretty_name": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "bool",
    "id",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.str_repr": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.strconv.re",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit__promote_expr": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_assert_stmt": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_assignment_stmt": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_await_expr": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_backquote_expr": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_block": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_break_stmt": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_bytes_expr": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_call_expr": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_cast_expr": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_class_def": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_comparison_expr": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_complex_expr": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_conditional_expr": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_continue_stmt": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_decorator": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_del_stmt": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_dict_expr": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_dictionary_comprehension": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_ellipsis": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_enum_call_expr": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_exec_stmt": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_expression_stmt": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_float_expr": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_for_stmt": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_func_def": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_generator_expr": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_global_decl": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_if_stmt": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_import": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_import_all": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_import_from": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_index_expr": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_int_expr": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_lambda_expr": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_list_comprehension": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_list_expr": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_member_expr": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_mypy_file": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.strconv.os",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_name_expr": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "mypy.util.short_type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_namedtuple_expr": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_newtype_expr": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_nonlocal_decl": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_op_expr": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_overloaded_func_def": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_pass_stmt": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_print_stmt": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_raise_stmt": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_return_stmt": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_reveal_type_expr": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_set_comprehension": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_set_expr": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_slice_expr": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_star_expr": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_str_expr": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_super_expr": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_temp_node": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_try_stmt": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_tuple_expr": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_type_alias_expr": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_type_application": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_type_var_expr": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_typeddict_expr": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_unary_expr": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_unicode_expr": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_var": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_while_stmt": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_with_stmt": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_yield_expr": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_yield_from_expr": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.strconv.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.strconv.TypeStrVisitor": {
  "data": {
   "shadows": "mypy.types.TypeStrVisitor"
  },
  "type": "import"
 },
 "mypy.strconv.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.strconv.dump_tagged": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "indent",
    "isinstance",
    "list",
    "mypy.types.Type",
    "mypy.types.TypeStrVisitor",
    "object",
    "str",
    "tuple",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.indent": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.mypy.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.strconv.mypy.types": {
  "data": {
   "shadows": "mypy.types"
  },
  "type": "import"
 },
 "mypy.strconv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.strconv.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.strconv.short_type": {
  "data": {
   "shadows": "mypy.util.short_type"
  },
  "type": "import"
 },
 "mypy.stubgen": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "int",
    "mypy.options.Options",
    "mypy.stubgen.main",
    "str",
    "typing.List",
    "typing.NamedTuple",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mypy.stubgen.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.stubgen.AliasPrinter": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor",
    "str"
   ]
  },
  "type": "class"
 },
 "mypy.stubgen.AliasPrinter.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_call_expr": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.CallExpr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_ellipsis": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_index_expr": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_list_expr": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_name_expr": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_str_expr": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mypy.nodes.StrExpr",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_tuple_expr": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AnnotationPrinter": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mypy.types.TypeStrVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.stubgen.AnnotationPrinter.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AnnotationPrinter.visit_none_type": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AnnotationPrinter.visit_unbound_type": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "mypy.types.UnboundType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.stubgen.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.stubgen.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.stubgen.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.CLASS": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "mypy.stubgen.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.stubgen.CantImport": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.stubgen.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.stubgen.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.stubgen.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.stubgen.EMPTY": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "mypy.stubgen.EMPTY_CLASS": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "mypy.stubgen.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.stubgen.FUNC": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "mypy.stubgen.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.stubgen.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.stubgen.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.stubgen.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.stubgen.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.stubgen.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.stubgen.ImportTracker": {
  "data": {
   "lineno": 302
  },
  "type": "class"
 },
 "mypy.stubgen.ImportTracker.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.add_import": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.add_import_from": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.import_lines": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.reexport": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.require_name": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.stubgen.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.stubgen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stubgen.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.stubgen.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.stubgen.MypyOptions": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.stubgen.NOT_IN_ALL": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "mypy.stubgen.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.stubgen.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.stubgen.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.stubgen.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stubgen.Options": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mypy.stubgen.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.stubgen.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.StubGenerator": {
  "data": {
   "lineno": 398
  },
  "type": "class"
 },
 "mypy.stubgen.StubGenerator.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.ImportTracker",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.add": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.add_import_line": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.add_typing_import": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.get_base_types": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "get_qualified_name",
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.stubgen.AliasPrinter",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.get_init": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.TempNode",
    "mypy.types.Type",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.get_str_type_of_node": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnaryExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_namedtuple": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_not_in_all": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_private_name": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_recorded_name": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_top_level": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_type_expression": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.CallExpr",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.output": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.print_annotation": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "mypy.stubgen.AnnotationPrinter",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.process_namedtuple": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.stubgen.CLASS",
    "mypy.stubgen.EMPTY",
    "repr",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.process_typealias": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.stubgen.AliasPrinter"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.record_name": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_assignment_stmt": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.VAR",
    "mypy.types.TupleType",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_class_def": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.ClassDef",
    "mypy.stubgen.CLASS",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.EMPTY_CLASS",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_decorator": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_func_def": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "enumerate",
    "find_self_initializers",
    "isinstance",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.FuncDef",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.FUNC",
    "mypy.types.AnyType",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_if_stmt": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.IfStmt",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_import": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "id",
    "id.split",
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_import_all": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_import_from": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_mypy_file": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "mypy.stubgen.EMPTY",
    "sorted",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.stubgen.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stubgen.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.stubgen.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.stubgen.TypeStrVisitor": {
  "data": {
   "shadows": "mypy.types.TypeStrVisitor"
  },
  "type": "import"
 },
 "mypy.stubgen.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.stubgen.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.stubgen.VAR": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "mypy.stubgen.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.stubgen.default_python2_interpreter": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "SystemExit",
    "mypy.stubgen.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.stubgen.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.stubgen.find_module_path_and_all": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "bool",
    "getattr",
    "int",
    "load_python_module_info",
    "mypy.stubgen.CantImport",
    "mypy.stubgen.importlib",
    "mypy.stubutil.is_c_module",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.find_self_initializers": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "SelfTraverser",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncBase",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.find_self_initializers.SelfTraverser": {
  "data": {
   "lineno": 805
  },
  "type": "class"
 },
 "mypy.stubgen.find_self_initializers.SelfTraverser.visit_assignment_stmt": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.find_unique_signatures": {
  "data": {
   "shadows": "mypy.stubgenc.find_unique_signatures"
  },
  "type": "import"
 },
 "mypy.stubgen.generate_stub": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "StubGenerator",
    "bool",
    "int",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.options.Options",
    "mypy.stubgen.sys",
    "mypy.stubutil.write_header",
    "open",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.generate_stub_for_c_module": {
  "data": {
   "shadows": "mypy.stubgenc.generate_stub_for_c_module"
  },
  "type": "import"
 },
 "mypy.stubgen.generate_stub_for_module": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bool",
    "find_module_path_and_all",
    "generate_stub",
    "int",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.stubgen.CantImport",
    "mypy.stubgen.sys",
    "mypy.stubgen.traceback",
    "mypy.stubgenc.generate_stub_for_c_module",
    "print",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.get_qualified_name": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mypy.stubgen.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.stubgen.is_c_module": {
  "data": {
   "shadows": "mypy.stubutil.is_c_module"
  },
  "type": "import"
 },
 "mypy.stubgen.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.stubgen.load_python_module_info": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "SystemExit",
    "mypy.stubgen.json",
    "mypy.stubgen.subprocess",
    "mypy.stubgen.sys",
    "print",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.main": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "dict",
    "mypy.stubgen.generate_stub_for_module",
    "mypy.stubgen.glob",
    "mypy.stubgen.sys",
    "mypy.stubgen.walk_packages",
    "mypy.stubgenc.find_unique_signatures",
    "mypy.stubgenc.parse_all_signatures",
    "open",
    "parse_options",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.mypy.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.stubgen.mypy.errors": {
  "data": {
   "shadows": "mypy.errors"
  },
  "type": "import"
 },
 "mypy.stubgen.mypy.parse": {
  "data": {
   "shadows": "mypy.parse"
  },
  "type": "import"
 },
 "mypy.stubgen.mypy.traverser": {
  "data": {
   "shadows": "mypy.traverser"
  },
  "type": "import"
 },
 "mypy.stubgen.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.stubgen.parse_all_signatures": {
  "data": {
   "shadows": "mypy.stubgenc.parse_all_signatures"
  },
  "type": "import"
 },
 "mypy.stubgen.parse_options": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "SystemExit",
    "default_python2_interpreter",
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.options.Options",
    "mypy.stubgen.sys",
    "str",
    "typing.List",
    "usage"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "mypy.stubgen.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.stubgen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.stubgen.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "mypy.stubgen.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mypy.stubgen.usage": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "SystemExit",
    "bool",
    "mypy.stubgen.sys",
    "mypy.stubgen.textwrap",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.walk_packages": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "__import__",
    "mypy.stubgen.pkgutil",
    "str",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.write_header": {
  "data": {
   "shadows": "mypy.stubutil.write_header"
  },
  "type": "import"
 },
 "mypy.stubgenc": {
  "data": {},
  "type": "module"
 },
 "mypy.stubgenc.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.stubgenc.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stubgenc.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "mypy.stubgenc.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stubgenc.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stubgenc.add_typing_import": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "any",
    "mypy.stubgenc.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.find_unique_signatures": {
  "data": {
   "shadows": "mypy.stubutil.find_unique_signatures"
  },
  "type": "import"
 },
 "mypy.stubgenc.generate_c_function_stub": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "getattr",
    "infer_method_sig",
    "mypy.stubutil.infer_sig_from_docstring",
    "object",
    "str",
    "types.ModuleType",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.generate_c_type_stub": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "any",
    "is_skipped_attribute",
    "issubclass",
    "method_name_sort_key",
    "mypy.stubgenc.generate_c_function_stub",
    "mypy.stubgenc.is_c_classmethod",
    "mypy.stubgenc.is_c_method",
    "object",
    "set",
    "sorted",
    "str",
    "type",
    "types.ModuleType",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.generate_stub_for_c_module": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "add_typing_import",
    "bool",
    "generate_c_function_stub",
    "generate_c_type_stub",
    "is_c_function",
    "is_c_type",
    "mypy.stubgenc.importlib",
    "mypy.stubutil.is_c_module",
    "mypy.stubutil.write_header",
    "open",
    "set",
    "sorted",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.stubgenc.infer_method_sig": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.infer_sig_from_docstring": {
  "data": {
   "shadows": "mypy.stubutil.infer_sig_from_docstring"
  },
  "type": "import"
 },
 "mypy.stubgenc.is_c_classmethod": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_c_function": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "object",
    "ord",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_c_method": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "object",
    "str.__add__",
    "str.__new__",
    "str.index",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_c_module": {
  "data": {
   "shadows": "mypy.stubutil.is_c_module"
  },
  "type": "import"
 },
 "mypy.stubgenc.is_c_type": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bool",
    "int",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_skipped_attribute": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.method_name_sort_key": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.stubgenc.parse_all_signatures": {
  "data": {
   "shadows": "mypy.stubutil.parse_all_signatures"
  },
  "type": "import"
 },
 "mypy.stubgenc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.stubgenc.write_header": {
  "data": {
   "shadows": "mypy.stubutil.write_header"
  },
  "type": "import"
 },
 "mypy.stubutil": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mypy.stubutil.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.stubutil.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mypy.stubutil.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stubutil.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "mypy.stubutil.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "mypy.stubutil.MutableSequence": {
  "data": {
   "shadows": "typing.MutableSequence"
  },
  "type": "import"
 },
 "mypy.stubutil.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stubutil.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.stubutil.Sig": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mypy.stubutil.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stubutil.build_signature": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.find_unique_signatures": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "mypy.stubutil.Sig",
    "set",
    "sorted",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.infer_sig_from_docstring": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mypy.stubutil.re",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.is_c_module": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.parse_all_signatures": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mypy.stubutil.Sig",
    "mypy.stubutil.build_signature",
    "mypy.stubutil.parse_signature",
    "mypy.stubutil.re",
    "sorted",
    "str",
    "typing.List",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.parse_signature": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "mypy.stubutil.re",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.stubutil.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.stubutil.write_header": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "int",
    "mypy.stubutil.sys",
    "str",
    "typing.IO",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.types.Type",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "mypy.subtypes.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.subtypes.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.subtypes.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.subtypes.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.subtypes.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.subtypes.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.subtypes.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.subtypes.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.subtypes.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.subtypes.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.subtypes.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.subtypes.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.subtypes.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.subtypes.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.subtypes.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.subtypes.FormalArgument": {
  "data": {
   "shadows": "mypy.types.FormalArgument"
  },
  "type": "import"
 },
 "mypy.subtypes.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.subtypes.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.subtypes.IS_CLASSVAR": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mypy.subtypes.IS_CLASS_OR_STATIC": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mypy.subtypes.IS_SETTABLE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mypy.subtypes.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.subtypes.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.subtypes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.subtypes.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.subtypes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.subtypes.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.subtypes.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.subtypes.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.subtypes.ProperSubtypeVisitor": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.subtypes.ProperSubtypeVisitor.__init__": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_any": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "mypy.subtypes.is_callable_subtype",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "bool",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "bool",
    "mypy.types.ErasedType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_instance": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "all",
    "bool",
    "check_argument",
    "isinstance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.subtypes.find_member",
    "mypy.subtypes.is_proper_subtype",
    "mypy.subtypes.is_protocol_implementation",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_instance.check_argument": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.sametypes.is_same_type",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_none_type": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.NoneTyp",
    "mypy.types.is_named_instance"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "bool",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "len",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.is_named_instance",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_type_type": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_type_var": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.ProperSubtypeVisitor.visit_union_type": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "all",
    "bool",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.subtypes.SubtypeVisitor": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.subtypes.SubtypeVisitor.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "mypy.subtypes.TypeParameterChecker",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_any": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "all",
    "bool",
    "is_callable_subtype",
    "isinstance",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bool",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "bool",
    "mypy.types.ErasedType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_instance": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "all",
    "bool",
    "find_member",
    "is_protocol_implementation",
    "isinstance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeType",
    "mypy.types.is_named_instance",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_none_type": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.is_named_instance"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Overloaded",
    "mypy.types.TypeType",
    "mypy.types.UnboundType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "len",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.is_named_instance",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_type_type": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_type_var": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_subtype",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_equivalent",
    "mypy.subtypes.is_subtype",
    "mypy.types.Instance",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.SubtypeVisitor.visit_union_type": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "all",
    "bool",
    "mypy.subtypes.is_subtype",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.subtypes.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.subtypes.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.subtypes.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.subtypes.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.subtypes.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.subtypes.TypeParameterChecker": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mypy.subtypes.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.subtypes.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.subtypes.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.subtypes.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.subtypes.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.subtypes.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.subtypes.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.subtypes.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.subtypes.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.subtypes.are_args_compatible": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "bool",
    "is_proper_subtype",
    "mypy.subtypes.is_subtype",
    "mypy.types.FormalArgument"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.bind_self": {
  "data": {
   "shadows": "mypy.checkmember.bind_self"
  },
  "type": "import"
 },
 "mypy.subtypes.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.subtypes.check_type_parameter": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "int",
    "is_equivalent",
    "is_subtype",
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.subtypes.erase_type": {
  "data": {
   "shadows": "mypy.erasetype.erase_type"
  },
  "type": "import"
 },
 "mypy.subtypes.expand_type_by_instance": {
  "data": {
   "shadows": "mypy.expandtype.expand_type_by_instance"
  },
  "type": "import"
 },
 "mypy.subtypes.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.subtypes.find_member": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "find_node_type",
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.find_node_type": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkmember.bind_self",
    "mypy.expandtype.expand_type_by_instance",
    "mypy.maptype.map_instance_to_supertype",
    "mypy.nodes.FuncBase",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.function_type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.function_type": {
  "data": {
   "shadows": "mypy.types.function_type"
  },
  "type": "import"
 },
 "mypy.subtypes.get_member_flags": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var",
    "mypy.subtypes.IS_CLASSVAR",
    "mypy.subtypes.IS_CLASS_OR_STATIC",
    "mypy.subtypes.IS_SETTABLE",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_callable_subtype": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "are_args_compatible",
    "bool",
    "is_compat",
    "is_proper_subtype",
    "len",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.subtypes.is_subtype",
    "mypy.types.CallableType",
    "mypy.types.FormalArgument",
    "range",
    "unify_generic_callable"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_equivalent": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "mypy.subtypes.TypeParameterChecker",
    "mypy.subtypes.check_type_parameter",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_more_precise": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_named_instance": {
  "data": {
   "shadows": "mypy.types.is_named_instance"
  },
  "type": "import"
 },
 "mypy.subtypes.is_proper_subtype": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "ProperSubtypeVisitor",
    "any",
    "bool",
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_protocol_implementation": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "bool",
    "find_member",
    "get_member_flags",
    "is_proper_subtype",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.subtypes.IS_CLASSVAR",
    "mypy.subtypes.IS_CLASS_OR_STATIC",
    "mypy.subtypes.IS_SETTABLE",
    "mypy.subtypes.is_subtype",
    "mypy.subtypes.pop_on_exit",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.subtypes.is_subtype": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "SubtypeVisitor",
    "any",
    "bool",
    "isinstance",
    "mypy.subtypes.TypeParameterChecker",
    "mypy.subtypes.check_type_parameter",
    "mypy.types.AnyType",
    "mypy.types.ErasedType",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "mypy.types.UnboundType",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_subtype_ignoring_tvars": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.is_subtype_ignoring_tvars.ignore_tvars": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.map_instance_to_supertype": {
  "data": {
   "shadows": "mypy.maptype.map_instance_to_supertype"
  },
  "type": "import"
 },
 "mypy.subtypes.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.subtypes.mypy.applytype": {
  "data": {
   "shadows": "mypy.applytype"
  },
  "type": "import"
 },
 "mypy.subtypes.mypy.constraints": {
  "data": {
   "shadows": "mypy.constraints"
  },
  "type": "import"
 },
 "mypy.subtypes.mypy.solve": {
  "data": {
   "shadows": "mypy.solve"
  },
  "type": "import"
 },
 "mypy.subtypes.non_method_protocol_members": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.subtypes.find_member",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.pop_on_exit": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mypy.types.Instance",
    "typing.Iterator",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.restrict_subtype_away": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "is_proper_subtype",
    "isinstance",
    "mypy.erasetype.erase_type",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_union"
   ]
  },
  "type": "function"
 },
 "mypy.subtypes.sametypes": {
  "data": {
   "shadows": "mypy.sametypes"
  },
  "type": "import"
 },
 "mypy.subtypes.unify_generic_callable": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "bool",
    "mypy.messages.temp_message_builder",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "type",
    "type.arg_types",
    "type.ret_type",
    "type.variables",
    "typing.List",
    "typing.Optional",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.test": {
  "data": {},
  "type": "module"
 },
 "mypy.test.collect": {
  "data": {},
  "type": "module"
 },
 "mypy.test.config": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.config.PREFIX",
    "mypy.test.config.os",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.this_file_dir"
   ]
  },
  "type": "module"
 },
 "mypy.test.config.PREFIX": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mypy.test.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.config.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.config.test_data_prefix": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.test.config.test_temp_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mypy.test.config.this_file_dir": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mypy.test.config.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.test.data": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.data.DeleteFile",
    "mypy.test.data.UpdateFile",
    "mypy.test.data.os",
    "str",
    "typing.NamedTuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.test.data.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.test.data.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.test.data.DataDrivenTestCase": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "input",
    "mypy.myunit.TestCase"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.DataDrivenTestCase.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "bool",
    "input",
    "int",
    "str",
    "super",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.add_dirs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "dir",
    "mypy.test.data.os",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.find_steps": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "int",
    "max",
    "module_from_path",
    "mypy.test.data.DeleteFile",
    "mypy.test.data.FileOperation",
    "mypy.test.data.UpdateFile",
    "mypy.test.data.re",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.run": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mypy.myunit.SkipTestCaseException"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.set_up": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "dir",
    "mypy.test.data.os",
    "mypy.test.data.re",
    "open",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.tear_down": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "FileNotFoundError",
    "OSError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.os",
    "mypy.test.data.shutil",
    "os.remove",
    "os.rmdir",
    "print",
    "reversed",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataSuite": {
  "data": {
   "lineno": 612
  },
  "type": "class"
 },
 "mypy.test.data.DataSuite.__init__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataSuite.cases": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.data.DataDrivenTestCase",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataSuite.run_case": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "NotImplementedError",
    "mypy.test.data.DataDrivenTestCase"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DeleteFile": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mypy.test.data.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.data.FileOperation": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mypy.test.data.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.test.data.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.data.MypyDataCase": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "mypy.test.data.pytest"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.MypyDataCase.__init__": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "len",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.MypyDataSuite",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.reportinfo": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.repr_failure": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "SystemExit",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.runtest": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "mypy.test.data.pytest"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.setup": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.teardown": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataSuite": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "mypy.test.data.pytest"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.MypyDataSuite.collect": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "MypyDataCase",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.test.data.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.data.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.data.SkipTestCaseException": {
  "data": {
   "shadows": "mypy.myunit.SkipTestCaseException"
  },
  "type": "import"
 },
 "mypy.test.data.TestCase": {
  "data": {
   "shadows": "mypy.myunit.TestCase"
  },
  "type": "import"
 },
 "mypy.test.data.TestItem": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.TestItem.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "id",
    "int",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.data.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.test.data.UpdateFile": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mypy.test.data.collapse_line_continuation": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "mypy.test.data.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.expand_errors": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "input",
    "input.split",
    "len",
    "mypy.test.data.re",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.expand_includes": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "mypy.test.data.os",
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.expand_variables": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "mypy.test.data.root_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.fix_cobertura_filename": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "mypy.test.data.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.fix_win_path": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mypy.test.data.re",
    "mypy.test.data.root_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.module_from_path": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.data.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.data.parse_test_cases": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "DataDrivenTestCase",
    "ValueError",
    "bool",
    "expand_errors",
    "expand_includes",
    "expand_variables",
    "fix_win_path",
    "input",
    "int",
    "join",
    "len",
    "mypy.test.data.os",
    "mypy.test.data.posixpath",
    "mypy.test.data.re",
    "open",
    "parse_test_data",
    "range",
    "set",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.parse_test_data": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "collapse_line_continuation",
    "id",
    "id.index",
    "len",
    "mypy.test.data.TestItem",
    "str",
    "strip_list",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mypy.test.data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mypy.test.data.pytest_addoption": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "MypyDataSuite",
    "isinstance",
    "issubclass",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.data.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "mypy.test.data.rmdir": {
  "data": {
   "shadows": "os.rmdir"
  },
  "type": "import"
 },
 "mypy.test.data.root_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mypy.test.data.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.data.strip_list": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "len",
    "mypy.test.data.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.helpers": {
  "data": {},
  "type": "module"
 },
 "mypy.test.helpers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.test.helpers.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.helpers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.test.helpers.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.helpers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.helpers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.helpers.MIN_LINE_LENGTH_FOR_ALIGNMENT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mypy.test.helpers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.helpers.assert_string_arrays_equal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "clean_up",
    "len",
    "mypy.myunit.AssertionFailure",
    "mypy.test.helpers.MIN_LINE_LENGTH_FOR_ALIGNMENT",
    "mypy.test.helpers.sys",
    "num_skipped_prefix_lines",
    "num_skipped_suffix_lines",
    "range",
    "show_align_message",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.assert_string_arrays_equal_wildcards": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "clean_up",
    "match_array",
    "mypy.test.helpers.assert_string_arrays_equal",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "mypy.test.helpers.clean_up": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mypy.test.helpers.os",
    "mypy.test.helpers.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.helpers.match_array": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.normalize_error_messages": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "mypy.test.helpers.os",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.num_skipped_prefix_lines": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.num_skipped_suffix_lines": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.helpers.retry_on_error": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "OSError",
    "float",
    "func",
    "min",
    "mypy.test.helpers.time",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.show_align_message": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "mypy.test.helpers.sys",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.helpers.testcase_pyversion": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "int",
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.test.helpers.testfile_pyversion",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.testfile_pyversion": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "int",
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.defaults.PYTHON3_VERSION",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.helpers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.test.helpers.update_testcase_output": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "itertools.chain.from_iterable",
    "len",
    "list",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.os",
    "open",
    "print",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.test.testargs": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testargs.ArgSuite": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testargs.ArgSuite.test_coherence": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mypy.main.process_options",
    "mypy.myunit.assert_equal",
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.test.testargs.BuildType": {
  "data": {
   "shadows": "mypy.options.BuildType"
  },
  "type": "import"
 },
 "mypy.test.testargs.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testargs.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testargs.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testargs.process_options": {
  "data": {
   "shadows": "mypy.main.process_options"
  },
  "type": "import"
 },
 "mypy.test.testargs.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.test.testcheck": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testcheck.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testcheck.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testcheck.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testcheck.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testcheck.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testcheck.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testcheck.TypeCheckSuite": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testcheck.TypeCheckSuite.cases": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.check_module_equivalence": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "mypy.test.helpers.assert_string_arrays_equal",
    "sorted",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.clear_cache": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mypy.defaults.CACHE_DIR",
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.shutil"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.find_error_paths": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.re",
    "set",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildManager",
    "mypy.build.find_cache_meta",
    "mypy.build.validate_meta",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.find_module_files": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "id",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.parse_module": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "int",
    "mypy.build.find_module",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testcheck.re",
    "open",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.parse_options": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "int",
    "mypy.main.process_options",
    "mypy.options.Options",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.testcase_pyversion",
    "mypy.test.testcheck.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.run_case": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "max",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.re",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.run_case_once": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.build.find_module_clear_caches",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.retry_on_error",
    "mypy.test.helpers.update_testcase_output",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.shutil",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.verify_cache": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.myunit.AssertionFailure",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testcheck.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testcheck.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testcheck.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.test.testcheck.files": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mypy.test.testcheck.find_module_clear_caches": {
  "data": {
   "shadows": "mypy.build.find_module_clear_caches"
  },
  "type": "import"
 },
 "mypy.test.testcheck.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testcheck.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testcheck.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testcheck.process_options": {
  "data": {
   "shadows": "mypy.main.process_options"
  },
  "type": "import"
 },
 "mypy.test.testcheck.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testcheck.retry_on_error": {
  "data": {
   "shadows": "mypy.test.helpers.retry_on_error"
  },
  "type": "import"
 },
 "mypy.test.testcheck.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.testcheck.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testcheck.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testcheck.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testcheck.testcase_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testcase_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testcheck.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.test.testcheck.typed_ast": {
  "data": {
   "shadows": "typed_ast"
  },
  "type": "import"
 },
 "mypy.test.testcheck.update_testcase_output": {
  "data": {
   "shadows": "mypy.test.helpers.update_testcase_output"
  },
  "type": "import"
 },
 "mypy.test.testcmdline": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.testcmdline.sys"
   ]
  },
  "type": "module"
 },
 "mypy.test.testcmdline.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.PythonEvaluationSuite": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testcmdline.PythonEvaluationSuite.cases": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testcmdline.cmdline_files",
    "mypy.test.testcmdline.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.PythonEvaluationSuite.run_case": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_python_evaluation"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.SkipTestCaseException": {
  "data": {
   "shadows": "mypy.myunit.SkipTestCaseException"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.base_version": {
  "data": {
   "shadows": "mypy.version.base_version"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.cmdline_files": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mypy.test.testcmdline.fix_cobertura_filename": {
  "data": {
   "shadows": "mypy.test.data.fix_cobertura_filename"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.normalize_file_output": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "mypy.test.testcmdline.re",
    "mypy.version.__version__",
    "mypy.version.base_version",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.parse_args": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.test.testcmdline.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.python3_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mypy.test.testcmdline.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.test_python_evaluation": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.myunit.AssertionFailure",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.fix_cobertura_filename",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.testcmdline.os",
    "mypy.test.testcmdline.python3_path",
    "mypy.test.testcmdline.subprocess",
    "normalize_file_output",
    "open",
    "parse_args",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdeps": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testdeps.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testdeps.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testdeps.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testdeps.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.test.testdeps.GetDependenciesSuite": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testdeps.GetDependenciesSuite.build": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdeps.os",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdeps.GetDependenciesSuite.cases": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testdeps.files",
    "mypy.test.testdeps.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdeps.GetDependenciesSuite.run_case": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.server.deps.get_dependencies",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testdeps.files",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdeps.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testdeps.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testdeps.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testdeps.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testdeps.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testdeps.files": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mypy.test.testdeps.get_dependencies": {
  "data": {
   "shadows": "mypy.server.deps.get_dependencies"
  },
  "type": "import"
 },
 "mypy.test.testdeps.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testdeps.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testdeps.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testdeps.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdiff": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testdiff.ASTDiffSuite": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testdiff.ASTDiffSuite.build": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdiff.os",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdiff.ASTDiffSuite.cases": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testdiff.files",
    "mypy.test.testdiff.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdiff.ASTDiffSuite.run_case": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "mypy.server.astdiff.compare_symbol_table_snapshots",
    "mypy.server.astdiff.snapshot_symbol_table",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdiff.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testdiff.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testdiff.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testdiff.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testdiff.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testdiff.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testdiff.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testdiff.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testdiff.compare_symbol_table_snapshots": {
  "data": {
   "shadows": "mypy.server.astdiff.compare_symbol_table_snapshots"
  },
  "type": "import"
 },
 "mypy.test.testdiff.files": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mypy.test.testdiff.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testdiff.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testdiff.snapshot_symbol_table": {
  "data": {
   "shadows": "mypy.server.astdiff.snapshot_symbol_table"
  },
  "type": "import"
 },
 "mypy.test.testdiff.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testdiff.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdmypy": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testdmypy.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.TypeCheckSuite": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testdmypy.TypeCheckSuite.cases": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.sys",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.check_module_equivalence": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mypy.test.helpers.assert_string_arrays_equal",
    "sorted",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.clear_cache": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "mypy.defaults.CACHE_DIR",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.shutil"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.find_error_paths": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.re",
    "set",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.find_missing_cache_files": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildManager",
    "mypy.build.find_cache_meta",
    "mypy.build.validate_meta",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.find_module_files": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "id",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.has_stable_flags": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "any",
    "bool",
    "classmethod",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.re"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.is_incremental": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "mypy.test.data.DataDrivenTestCase"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.parse_module": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "int",
    "mypy.build.find_module",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdmypy.re",
    "open",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.parse_options": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "int",
    "mypy.main.process_options",
    "mypy.options.Options",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.testcase_pyversion",
    "mypy.test.testdmypy.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.run_case": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "max",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.re",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.run_case_once": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "mypy.build.BuildSource",
    "mypy.build.find_module_clear_caches",
    "mypy.dmypy_server.Server",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.retry_on_error",
    "mypy.test.helpers.update_testcase_output",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.shutil",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.verify_cache": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.myunit.AssertionFailure",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.dmypy": {
  "data": {
   "shadows": "mypy.dmypy"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.dmypy_server": {
  "data": {
   "shadows": "mypy.dmypy_server"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.files": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mypy.test.testdmypy.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.process_options": {
  "data": {
   "shadows": "mypy.main.process_options"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.retry_on_error": {
  "data": {
   "shadows": "mypy.test.helpers.retry_on_error"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.testcase_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testcase_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.typed_ast": {
  "data": {
   "shadows": "typed_ast"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.update_testcase_output": {
  "data": {
   "shadows": "mypy.test.helpers.update_testcase_output"
  },
  "type": "import"
 },
 "mypy.test.testextensions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "exec",
    "mypy.test.testextensions.PY36",
    "mypy.test.testextensions.PY36_TESTS",
    "mypy.test.testextensions.sys",
    "unittest.main"
   ]
  },
  "type": "module"
 },
 "mypy.test.testextensions.BaseTestCase": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "mypy.test.testextensions.BaseTestCase.assertIsSubclass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "issubclass"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.BaseTestCase.assertNotIsSubclass": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "issubclass"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.PY36": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mypy.test.testextensions.PY36_TESTS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.test.testextensions.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "mypy.test.testextensions.TypedDict": {
  "data": {
   "shadows": "mypy_extensions.TypedDict"
  },
  "type": "import"
 },
 "mypy.test.testextensions.TypedDictTests": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mypy.test.testextensions.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "mypy.test.testextensions.TypedDictTests.test_basics_iterable_syntax": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Emp",
    "Emp.__annotations__",
    "Emp.__bases__",
    "Emp.__module__",
    "Emp.__name__",
    "Emp.__total__",
    "collections.Sequence",
    "dict",
    "int",
    "mypy.test.testextensions.typing",
    "mypy_extensions.TypedDict",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_basics_keywords_syntax": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Emp",
    "Emp.__annotations__",
    "Emp.__bases__",
    "Emp.__module__",
    "Emp.__name__",
    "Emp.__total__",
    "collections.Sequence",
    "dict",
    "int",
    "mypy.test.testextensions.typing",
    "mypy_extensions.TypedDict",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_optional": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "EmpD",
    "int",
    "mypy.test.testextensions.typing",
    "mypy_extensions.TypedDict",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_pickle": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "EmpD",
    "EmpDnew",
    "int",
    "mypy.test.testextensions.pickle",
    "mypy_extensions.TypedDict",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_py36_class_syntax_usage": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "LabelPoint2D",
    "Point2D",
    "dict",
    "int",
    "mypy.test.testextensions.PY36",
    "mypy.test.testextensions.typing",
    "str",
    "unittest.skipUnless"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_total": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "D",
    "D.__total__",
    "Options",
    "Options.__total__",
    "int",
    "mypy.test.testextensions.PY36",
    "mypy_extensions.TypedDict"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_typeddict_errors": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Emp",
    "TypeError",
    "dict",
    "int",
    "isinstance",
    "issubclass",
    "mypy_extensions.TypedDict",
    "mypy_extensions.TypedDict.__module__",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.collections_abc": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mypy.test.testextensions.main": {
  "data": {
   "shadows": "unittest.main"
  },
  "type": "import"
 },
 "mypy.test.testextensions.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mypy.test.testextensions.skipUnless": {
  "data": {
   "shadows": "unittest.skipUnless"
  },
  "type": "import"
 },
 "mypy.test.testextensions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testextensions.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testfinegrained.BuildManager": {
  "data": {
   "shadows": "mypy.build.BuildManager"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.FineGrainedBuildManager": {
  "data": {
   "shadows": "mypy.server.update.FineGrainedBuildManager"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.FineGrainedSuite": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testfinegrained.FineGrainedSuite.build": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.build.BuildSource",
    "mypy.build.Graph",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testfinegrained.os",
    "open",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.FineGrainedSuite.cases": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testfinegrained.files",
    "mypy.test.testfinegrained.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.FineGrainedSuite.run_case": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "mypy.server.update.FineGrainedBuildManager",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.UpdateFile",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testfinegrained.os",
    "mypy.test.testfinegrained.shutil",
    "normalize_messages"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.Graph": {
  "data": {
   "shadows": "mypy.build.Graph"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.StrConv": {
  "data": {
   "shadows": "mypy.strconv.StrConv"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.TypeStrVisitor": {
  "data": {
   "shadows": "mypy.types.TypeStrVisitor"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.UpdateFile": {
  "data": {
   "shadows": "mypy.test.data.UpdateFile"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.files": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.test.testfinegrained.get_subexpressions": {
  "data": {
   "shadows": "mypy.server.subexpr.get_subexpressions"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.ignore_node": {
  "data": {
   "shadows": "mypy.test.testtypegen.ignore_node"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.indent": {
  "data": {
   "shadows": "mypy.strconv.indent"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.merge_asts": {
  "data": {
   "shadows": "mypy.server.astmerge.merge_asts"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.normalize_messages": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.test.testfinegrained.os",
    "mypy.test.testfinegrained.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.short_type": {
  "data": {
   "shadows": "mypy.util.short_type"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testgraph": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testgraph.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "mypy.test.testgraph.BuildManager": {
  "data": {
   "shadows": "mypy.build.BuildManager"
  },
  "type": "import"
 },
 "mypy.test.testgraph.BuildSourceSet": {
  "data": {
   "shadows": "mypy.build.BuildSourceSet"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.test.testgraph.GraphSuite": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testgraph.GraphSuite._make_manager": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.build.BuildSourceSet",
    "mypy.errors.Errors",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "mypy.report.Reports",
    "mypy.version.__version__"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_order_ascc": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "frozenset",
    "mypy.build.State",
    "mypy.build.order_ascc",
    "mypy.build.sorted_components",
    "mypy.myunit.assert_equal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_scc": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "frozenset",
    "mypy.build.strongly_connected_components",
    "mypy.myunit.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_sorted_components": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "frozenset",
    "mypy.build.State",
    "mypy.build.sorted_components",
    "mypy.myunit.assert_equal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_topsort": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "frozenset",
    "list",
    "mypy.build.topsort",
    "mypy.myunit.assert_equal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Reports": {
  "data": {
   "shadows": "mypy.report.Reports"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testgraph.State": {
  "data": {
   "shadows": "mypy.build.State"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testgraph.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.test.testgraph.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testgraph.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testgraph.order_ascc": {
  "data": {
   "shadows": "mypy.build.order_ascc"
  },
  "type": "import"
 },
 "mypy.test.testgraph.sorted_components": {
  "data": {
   "shadows": "mypy.build.sorted_components"
  },
  "type": "import"
 },
 "mypy.test.testgraph.strongly_connected_components": {
  "data": {
   "shadows": "mypy.build.strongly_connected_components"
  },
  "type": "import"
 },
 "mypy.test.testgraph.topsort": {
  "data": {
   "shadows": "mypy.build.topsort"
  },
  "type": "import"
 },
 "mypy.test.testinfer": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testinfer.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.test.testinfer.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.test.testinfer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.assert_map": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "expand_callee_kinds",
    "expand_caller_kinds",
    "int",
    "mypy.checkexpr.map_actuals_to_formals",
    "mypy.myunit.assert_equal",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.assert_vararg_map": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int",
    "mypy.checkexpr.map_actuals_to_formals",
    "mypy.myunit.assert_equal",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_basic": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_both_kinds_of_varargs": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_callee_star": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_caller_star": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_duplicate_named_arg": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_keyword_varargs": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR2"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_missing_named_arg": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_named_args": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_optional": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_positional_only": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_some_named_args": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_special_cases": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_too_many_caller_args": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_tuple_star": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_varargs_and_bare_asterisk": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.tuple": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "list",
    "mypy.test.typefixture.TypeFixture",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testinfer.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testinfer.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testinfer.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.test.testinfer.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testinfer.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testinfer.expand_callee_kinds": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.expand_caller_kinds": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.ARG_NAMED",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.map_actuals_to_formals": {
  "data": {
   "shadows": "mypy.checkexpr.map_actuals_to_formals"
  },
  "type": "import"
 },
 "mypy.test.testmerge": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testmerge.AST": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mypy.test.testmerge.ASTMergeSuite": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testmerge.ASTMergeSuite.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "mypy.strconv.StrConv",
    "mypy.types.TypeStrVisitor",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.build": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.build.BuildSource",
    "mypy.build.State",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testmerge.os",
    "open",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.build_increment": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.server.update.FineGrainedBuildManager",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.cases": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testmerge.files",
    "mypy.test.testmerge.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.test.testmerge.AST",
    "mypy.test.testmerge.SYMTABLE",
    "mypy.test.testmerge.TYPEINFO",
    "mypy.test.testmerge.TYPES",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump_asts": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "mypy.test.testmerge.NOT_DUMPED_MODULES",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump_symbol_table": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "mypy.nodes.SymbolTable",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump_symbol_tables": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "id",
    "id.names",
    "is_dumped_module",
    "mypy.nodes.MypyFile",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump_typeinfo": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump_typeinfos": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "id",
    "id.names",
    "is_dumped_module",
    "mypy.nodes.MypyFile",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump_typeinfos_recursive": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.dump_types": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "is_dumped_module",
    "mypy.build.BuildManager",
    "mypy.util.short_type",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.format_symbol_table_node": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Node",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.format_type": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.ASTMergeSuite.run_case": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "mypy.server.subexpr.get_subexpressions",
    "mypy.server.update.FineGrainedBuildManager",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.testmerge.AST",
    "mypy.test.testmerge.SYMTABLE",
    "mypy.test.testmerge.TYPEINFO",
    "mypy.test.testmerge.TYPES",
    "mypy.test.testmerge.os",
    "mypy.test.testmerge.shutil"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.BuildManager": {
  "data": {
   "shadows": "mypy.build.BuildManager"
  },
  "type": "import"
 },
 "mypy.test.testmerge.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testmerge.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testmerge.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testmerge.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testmerge.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testmerge.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.test.testmerge.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.test.testmerge.FineGrainedBuildManager": {
  "data": {
   "shadows": "mypy.server.update.FineGrainedBuildManager"
  },
  "type": "import"
 },
 "mypy.test.testmerge.IdMapper": {
  "data": {
   "shadows": "mypy.util.IdMapper"
  },
  "type": "import"
 },
 "mypy.test.testmerge.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testmerge.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testmerge.NOT_DUMPED_MODULES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mypy.test.testmerge.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.test.testmerge.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testmerge.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testmerge.SYMTABLE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.test.testmerge.State": {
  "data": {
   "shadows": "mypy.build.State"
  },
  "type": "import"
 },
 "mypy.test.testmerge.StrConv": {
  "data": {
   "shadows": "mypy.strconv.StrConv"
  },
  "type": "import"
 },
 "mypy.test.testmerge.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.test.testmerge.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.test.testmerge.TYPEINFO": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mypy.test.testmerge.TYPES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mypy.test.testmerge.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testmerge.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testmerge.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.test.testmerge.TypeStrVisitor": {
  "data": {
   "shadows": "mypy.types.TypeStrVisitor"
  },
  "type": "import"
 },
 "mypy.test.testmerge.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.test.testmerge.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testmerge.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testmerge.files": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mypy.test.testmerge.get_subexpressions": {
  "data": {
   "shadows": "mypy.server.subexpr.get_subexpressions"
  },
  "type": "import"
 },
 "mypy.test.testmerge.ignore_node": {
  "data": {
   "shadows": "mypy.test.testtypegen.ignore_node"
  },
  "type": "import"
 },
 "mypy.test.testmerge.indent": {
  "data": {
   "shadows": "mypy.strconv.indent"
  },
  "type": "import"
 },
 "mypy.test.testmerge.is_dumped_module": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "bool",
    "id",
    "id.startswith",
    "mypy.test.testmerge.NOT_DUMPED_MODULES",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmerge.merge_asts": {
  "data": {
   "shadows": "mypy.server.astmerge.merge_asts"
  },
  "type": "import"
 },
 "mypy.test.testmerge.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testmerge.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testmerge.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testmerge.short_type": {
  "data": {
   "shadows": "mypy.util.short_type"
  },
  "type": "import"
 },
 "mypy.test.testmerge.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.testmerge.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testmerge.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testmoduleinfo.ModuleInfoSuite": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testmoduleinfo.ModuleInfoSuite.test_is_in_module_collection": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mypy.moduleinfo.is_in_module_collection",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmoduleinfo.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.assert_false": {
  "data": {
   "shadows": "mypy.myunit.assert_false"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.moduleinfo": {
  "data": {
   "shadows": "mypy.moduleinfo"
  },
  "type": "import"
 },
 "mypy.test.testparse": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testparse.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testparse.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testparse.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testparse.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testparse.INPUT_FILE_NAME": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mypy.test.testparse.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testparse.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testparse.ParseErrorSuite": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testparse.ParseErrorSuite.cases": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.ParseErrorSuite.run_case": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_parse_error"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.ParserSuite": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testparse.ParserSuite.cases": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.ParserSuite.run_case": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_parser"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testparse.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testparse.config": {
  "data": {
   "shadows": "mypy.test.config"
  },
  "type": "import"
 },
 "mypy.test.testparse.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testparse.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testparse.parse": {
  "data": {
   "shadows": "mypy.parse.parse"
  },
  "type": "import"
 },
 "mypy.test.testparse.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testparse.test_parse_error": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bytes",
    "mypy.errors.CompileError",
    "mypy.myunit.AssertionFailure",
    "mypy.options.Options",
    "mypy.parse.parse",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testparse.INPUT_FILE_NAME"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.test_parser": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bytes",
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.errors.CompileError",
    "mypy.options.Options",
    "mypy.parse.parse",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.testpythoneval.re",
    "mypy.test.testpythoneval.sys"
   ]
  },
  "type": "module"
 },
 "mypy.test.testpythoneval.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.PythonEvaluationSuite": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testpythoneval.PythonEvaluationSuite.cases": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testpythoneval.os",
    "mypy.test.testpythoneval.python_34_eval_files",
    "mypy.test.testpythoneval.python_eval_files",
    "mypy.test.testpythoneval.sys",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.PythonEvaluationSuite.run_case": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_python_evaluation"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.adapt_output": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testpythoneval.program_re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.api": {
  "data": {
   "shadows": "mypy.api"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.program_re": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.python3_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.python_34_eval_files": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.python_eval_files": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.run": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "int",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testpythoneval.split_lines",
    "mypy.test.testpythoneval.subprocess",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.split_lines": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bytes",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.test_python_evaluation": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "adapt_output",
    "len",
    "mypy.api.run",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testpythoneval.os",
    "mypy.test.testpythoneval.pytest",
    "mypy.test.testpythoneval.python3_path",
    "mypy.util.try_find_python2_interpreter",
    "open",
    "run"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.try_find_python2_interpreter": {
  "data": {
   "shadows": "mypy.util.try_find_python2_interpreter"
  },
  "type": "import"
 },
 "mypy.test.testreports": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testreports.CoberturaPackage": {
  "data": {
   "shadows": "mypy.report.CoberturaPackage"
  },
  "type": "import"
 },
 "mypy.test.testreports.CoberturaReportSuite": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testreports.CoberturaReportSuite.test_as_xml": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "lxml.etree.Element",
    "lxml.etree.tostring",
    "mypy.myunit.assert_equal",
    "mypy.report.CoberturaPackage",
    "mypy.test.testreports.textwrap"
   ]
  },
  "type": "function"
 },
 "mypy.test.testreports.CoberturaReportSuite.test_get_line_rate": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.report.get_line_rate"
   ]
  },
  "type": "function"
 },
 "mypy.test.testreports.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testreports.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testreports.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "mypy.test.testreports.get_line_rate": {
  "data": {
   "shadows": "mypy.report.get_line_rate"
  },
  "type": "import"
 },
 "mypy.test.testreports.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "mypy.test.testsemanal": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testsemanal.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.SemAnalErrorSuite": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalErrorSuite.cases": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_error_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalErrorSuite.run_case": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_semanal_error"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSuite": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalSuite.cases": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSuite.run_case": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_semanal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSymtableSuite": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalSymtableSuite.cases": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_symtable_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSymtableSuite.run_case": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testsemanal.get_semanal_options",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalTypeInfoSuite": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalTypeInfoSuite.cases": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_typeinfo_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalTypeInfoSuite.run_case": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "TypeInfoMap",
    "isinstance",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.nodes.TypeInfo",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testsemanal.get_semanal_options",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.TypeInfoMap": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.TypeInfoMap.__str__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "isinstance",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.get_semanal_options": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.semanal_error_files": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.semanal_files": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.semanal_symtable_files": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.semanal_typeinfo_files": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.test_semanal": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.testfile_pyversion",
    "mypy.test.testsemanal.get_semanal_options",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.test_semanal_error": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.testsemanal.get_semanal_options"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.testfile_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testfile_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testsolve": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testsolve.Constraint": {
  "data": {
   "shadows": "mypy.constraints.Constraint"
  },
  "type": "import"
 },
 "mypy.test.testsolve.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testsolve.SUBTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUBTYPE_OF"
  },
  "type": "import"
 },
 "mypy.test.testsolve.SUPERTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUPERTYPE_OF"
  },
  "type": "import"
 },
 "mypy.test.testsolve.SolveSuite": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsolve.SolveSuite.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.assert_solve": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "isinstance",
    "mypy.constraints.Constraint",
    "mypy.myunit.assert_equal",
    "mypy.solve.solve_constraints",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "str",
    "tuple",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.subc": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.constraints.SUBTYPE_OF",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.supc": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_both_kinds_of_constraints": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_both_normal_and_any_types_in_results": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_empty_input": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_exactly_specified_result": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_multiple_variables": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_no_constraints_for_var": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_simple_constraints_with_dynamic_type": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_simple_subtype_constraints": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_simple_supertype_constraints": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_unsatisfiable_constraints": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mypy.test.testsolve.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testsolve.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testsolve.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.test.testsolve.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.test.testsolve.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testsolve.solve_constraints": {
  "data": {
   "shadows": "mypy.solve.solve_constraints"
  },
  "type": "import"
 },
 "mypy.test.teststubgen": {
  "data": {},
  "type": "module"
 },
 "mypy.test.teststubgen.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.Options": {
  "data": {
   "shadows": "mypy.stubgen.Options"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.StubgenPythonSuite": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.teststubgen.StubgenPythonSuite.cases": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenPythonSuite.run_case": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_stubgen"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.assert_parse_signature": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.parse_signature",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_build_signature": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.build_signature"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_find_unique_signatures": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.find_unique_signatures"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_infer_sig_from_docstring": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.infer_sig_from_docstring"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_all_signatures": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.parse_all_signatures"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_args": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_default_arg": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_kw_only_arg": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_optional_args": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_qualified_function": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_star_arg": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_star_star_arg": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.teststubgen.StubgencSuite.test_generate_c_type_stub_no_crash_for_object": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.generate_c_type_stub",
    "object",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_binary_op_sig": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_getitem_sig": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_hash_sig": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_setitem_sig": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_unary_op_sig": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.add_file": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.build_signature": {
  "data": {
   "shadows": "mypy.stubutil.build_signature"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.config": {
  "data": {
   "shadows": "mypy.test.config"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.find_unique_signatures": {
  "data": {
   "shadows": "mypy.stubutil.find_unique_signatures"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.generate_c_type_stub": {
  "data": {
   "shadows": "mypy.stubgenc.generate_c_type_stub"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.generate_stub": {
  "data": {
   "shadows": "mypy.stubgen.generate_stub"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.generate_stub_for_module": {
  "data": {
   "shadows": "mypy.stubgen.generate_stub_for_module"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.infer_method_sig": {
  "data": {
   "shadows": "mypy.stubgenc.infer_method_sig"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.infer_sig_from_docstring": {
  "data": {
   "shadows": "mypy.stubutil.infer_sig_from_docstring"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.load_output": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "add_file",
    "len",
    "mypy.test.teststubgen.glob",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse": {
  "data": {
   "shadows": "mypy.parse.parse"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_all_signatures": {
  "data": {
   "shadows": "mypy.stubutil.parse_all_signatures"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_flags": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.stubgen.Options",
    "mypy.stubgen.parse_options",
    "mypy.test.teststubgen.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.parse_options": {
  "data": {
   "shadows": "mypy.stubgen.parse_options"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_signature": {
  "data": {
   "shadows": "mypy.stubutil.parse_signature"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.reset_importlib_caches": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mypy.test.teststubgen.importlib"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.test_stubgen": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "bytes",
    "load_output",
    "mypy.errors.CompileError",
    "mypy.stubgen.generate_stub",
    "mypy.stubgen.generate_stub_for_module",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.teststubgen.parse_flags",
    "mypy.test.teststubgen.shutil",
    "mypy.test.teststubgen.sys",
    "mypy.test.teststubgen.tempfile",
    "reset_importlib_caches"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testsubtypes.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.INVARIANT": {
  "data": {
   "shadows": "mypy.nodes.INVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.InterfaceTypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.InterfaceTypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.SubtypingSuite": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_equivalent": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_not_subtype": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_strict_subtype": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_subtype": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_unrelated": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.set_up": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.INVARIANT",
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_basic_callable_subtyping": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_default_arg_callable_subtyping": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_interface_subtyping": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mypy.test.typefixture.InterfaceTypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_subtyping_with_inheritance_contravariant": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_subtyping_with_inheritance_covariant": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_subtyping_with_inheritance_invariant": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_instance_subtyping": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_interface_subtyping": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_simple_generic_instance_subtyping_contravariant": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_simple_generic_instance_subtyping_covariant": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_simple_generic_instance_subtyping_invariant": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_trivial_cases": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_type_callable_subtyping": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_1": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_2": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_3": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_4": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_5": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_6": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_7": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_8": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_9": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.test.testtransform": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testtransform.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testtransform.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testtransform.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testtransform.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testtransform.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testtransform.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testtransform.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testtransform.TestTransformVisitor": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.treetransform.TransformVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtransform.TestTransformVisitor.type": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.TransformSuite": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtransform.TransformSuite.cases": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.TransformSuite.run_case": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "test_transform"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.TransformVisitor": {
  "data": {
   "shadows": "mypy.treetransform.TransformVisitor"
  },
  "type": "import"
 },
 "mypy.test.testtransform.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testtransform.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testtransform.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testtransform.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testtransform.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testtransform.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testtransform.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testtransform.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testtransform.test_transform": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TestTransformVisitor",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.testfile_pyversion",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.testfile_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testfile_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testtypegen": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testtypegen.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.SkippedNodeSearcher": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypegen.SkippedNodeSearcher.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.SkippedNodeSearcher.skip_if_typing": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.SkippedNodeSearcher.visit_assignment_stmt": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ignore_node",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.NameExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.SkippedNodeSearcher.visit_int_expr": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.nodes.IntExpr"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.SkippedNodeSearcher.visit_mypy_file": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.SkippedNodeSearcher.visit_name_expr": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.TypeExportSuite": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypegen.TypeExportSuite.cases": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.TypeExportSuite.run_case": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "SkippedNodeSearcher",
    "ignore_node",
    "isinstance",
    "map",
    "map.keys",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.nodes.NameExpr",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testtypegen.re",
    "mypy.util.short_type",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.config": {
  "data": {
   "shadows": "mypy.test.config"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.ignore_node": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TypeVarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypegen.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testtypegen.short_type": {
  "data": {
   "shadows": "mypy.util.short_type"
  },
  "type": "import"
 },
 "mypy.test.testtypes": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testtypes.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.test.testtypes.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.test.testtypes.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.INVARIANT": {
  "data": {
   "shadows": "mypy.nodes.INVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.test.testtypes.InterfaceTypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.InterfaceTypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testtypes.JoinSuite": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.JoinSuite.assert_join": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.assert_simple_join": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "mypy.join.join_types",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.callable": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.set_up": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_any_type": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_callables_with_any": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_class_subtyping": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_function_types": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generic_interfaces": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "mypy.test.typefixture.InterfaceTypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generic_types_and_any": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generics_with_inheritance": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generics_with_inheritance_and_shared_supertype": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generics_with_multiple_args": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_join_class_types_with_interface_result": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_join_interface_and_class_types": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_join_interface_types": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_mixed_truth_restricted_type": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "mypy.join.join_types",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.false_only",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_mixed_truth_restricted_type_simple": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "mypy.join.join_simple",
    "mypy.myunit.assert_true",
    "mypy.types.false_only",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_none": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_other_mixed_types": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "c",
    "ov"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded.ov": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "list",
    "mypy.types.CallableType",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded_with_any": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "any",
    "c",
    "ov"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded_with_any.ov": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "list",
    "mypy.types.CallableType",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_simple_generics": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_simple_type_objects": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "isinstance",
    "mypy.join.join_types",
    "mypy.myunit.assert_true",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_trivial_cases": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_tuples": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_type_type": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_type_vars": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_unbound_type": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.tuple": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "list",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.type_callable": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testtypes.MeetSuite": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.MeetSuite.assert_meet": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.assert_simple_meet": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "mypy.meet.meet_types",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.callable": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.set_up": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_callables_with_dynamic": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_class_subtyping": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_dynamic_type": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_function_types": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generic_types_and_dynamic": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generics_with_inheritance": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generics_with_inheritance_and_shared_supertype": {
  "data": {
   "lineno": 732
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generics_with_multiple_args": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_class_types_with_shared_interfaces": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_interface_and_class_types": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_interface_types": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_with_generic_interfaces": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "mypy.test.typefixture.InterfaceTypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_none": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_simple_generics": {
  "data": {
   "lineno": 708
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_trivial_cases": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_tuples": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_type_type": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_type_vars": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_unbound_type": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.tuple": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "list",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeOpsSuite": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.TypeOpsSuite.assert_erase": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "mypy.erasetype.erase_type",
    "mypy.myunit.assert_equal",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.assert_expand": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "id",
    "mypy.expandtype.expand_type",
    "mypy.myunit.assert_equal",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.callable": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "str",
    "typing.List",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.set_up": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.INVARIANT",
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_empty_tuple_always_false": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_function_type": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_generic_type": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_tuple_type": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_type_object": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_type_type": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_type_variable": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_expand_basic_generic_types": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_expand_naked_type_var": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_false_type_is_idempotent": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.NoneTyp",
    "mypy.types.false_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_instance": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.myunit.assert_type",
    "mypy.types.Instance",
    "mypy.types.false_only",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_true_type_is_uninhabited": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "mypy.myunit.assert_type",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UninhabitedType",
    "mypy.types.false_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_union": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "mypy.types.false_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_more_precise": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_more_precise"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype_contravariance": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype_covariance": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype_invariance": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_nonempty_tuple_always_true": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_trivial_erase": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_trivial_expand": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_false_type_is_uninhabited": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mypy.myunit.assert_type",
    "mypy.types.NoneTyp",
    "mypy.types.UninhabitedType",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_instance": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.myunit.assert_type",
    "mypy.types.Instance",
    "mypy.types.true_only",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_true_type_is_idempotent": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_union": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_be_false_if_any_false": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_be_true_if_any_true": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_not_be_false_if_none_false": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_not_be_true_if_none_true": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.tuple": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "list",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypesSuite": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.TypesSuite.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture",
    "mypy.types.UnboundType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_any": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_callable_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_POS",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_callable_type_with_default_args": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_callable_type_with_var_args": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_generic_function_type": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeVarDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_generic_unbound_type": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_simple_unbound_type": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.UnboundType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_tuple_type": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_type_variable_binding": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.TypeVarDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_false": {
  "data": {
   "shadows": "mypy.myunit.assert_false"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_type": {
  "data": {
   "shadows": "mypy.myunit.assert_type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.erase_type": {
  "data": {
   "shadows": "mypy.erasetype.erase_type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.false_only": {
  "data": {
   "shadows": "mypy.types.false_only"
  },
  "type": "import"
 },
 "mypy.test.testtypes.is_more_precise": {
  "data": {
   "shadows": "mypy.subtypes.is_more_precise"
  },
  "type": "import"
 },
 "mypy.test.testtypes.is_proper_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_proper_subtype"
  },
  "type": "import"
 },
 "mypy.test.testtypes.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.test.testtypes.join_simple": {
  "data": {
   "shadows": "mypy.join.join_simple"
  },
  "type": "import"
 },
 "mypy.test.testtypes.join_types": {
  "data": {
   "shadows": "mypy.join.join_types"
  },
  "type": "import"
 },
 "mypy.test.testtypes.meet_types": {
  "data": {
   "shadows": "mypy.meet.meet_types"
  },
  "type": "import"
 },
 "mypy.test.testtypes.true_only": {
  "data": {
   "shadows": "mypy.types.true_only"
  },
  "type": "import"
 },
 "mypy.test.typefixture": {
  "data": {},
  "type": "module"
 },
 "mypy.test.typefixture.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.test.typefixture.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.test.typefixture.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.test.typefixture.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.test.typefixture.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.test.typefixture.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.test.typefixture.InterfaceTypeFixture": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "class"
 },
 "mypy.test.typefixture.InterfaceTypeFixture.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.typefixture.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.typefixture.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeFixture": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mypy.test.typefixture.TypeFixture.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "int",
    "make_type_var",
    "mypy.nodes.COVARIANT",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.__init__.make_type_var": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "id",
    "int",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable_default": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable_type": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable_var_arg": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.make_type_info": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "id",
    "int",
    "mypy.nodes.Block",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.ClassDef",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "mypy.types.TypeVarDef",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.test.update": {
  "data": {},
  "type": "module"
 },
 "mypy.traverser": {
  "data": {},
  "type": "module"
 },
 "mypy.traverser.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.traverser.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.traverser.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.traverser.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.traverser.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.traverser.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.traverser.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.traverser.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.traverser.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.traverser.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.traverser.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.traverser.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.traverser.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.traverser.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.traverser.ExecStmt": {
  "data": {
   "shadows": "mypy.nodes.ExecStmt"
  },
  "type": "import"
 },
 "mypy.traverser.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.traverser.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.traverser.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.traverser.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.traverser.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.traverser.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.traverser.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.traverser.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.traverser.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.traverser.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.traverser.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.traverser.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.traverser.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.traverser.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.traverser.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.traverser.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.traverser.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.traverser.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.traverser.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.traverser.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.traverser.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.traverser.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.traverser.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.traverser.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.traverser.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.traverser.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.traverser.TraverserVisitor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.traverser.TraverserVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.nodes.AssertStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_await_expr": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_block": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_call_expr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_cast_expr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_class_def": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_decorator": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.nodes.Decorator"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_del_stmt": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.nodes.DelStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_dict_expr": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "mypy.nodes.DictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "mypy.nodes.ExecStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.nodes.ExpressionStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_for_stmt": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_func": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.nodes.FuncItem"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_func_def": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_generator_expr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_if_stmt": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.nodes.IfStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_import": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_import_from": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_index_expr": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_list_expr": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_member_expr": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_mypy_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_op_expr": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mypy.nodes.OperatorAssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mypy.nodes.OverloadedFuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_print_stmt": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "mypy.nodes.PrintStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mypy.nodes.RaiseStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_return_stmt": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mypy.nodes.ReturnStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_set_expr": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "mypy.nodes.SetExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_slice_expr": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_star_expr": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_try_stmt": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.TryStmt",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_type_application": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_unary_expr": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_while_stmt": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_with_stmt": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.WithStmt",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_yield_expr": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.traverser.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.traverser.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.traverser.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.traverser.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.traverser.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.traverser.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.traverser.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.treetransform": {
  "data": {},
  "type": "module"
 },
 "mypy.treetransform.Argument": {
  "data": {
   "shadows": "mypy.nodes.Argument"
  },
  "type": "import"
 },
 "mypy.treetransform.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.treetransform.BreakStmt": {
  "data": {
   "shadows": "mypy.nodes.BreakStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.treetransform.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ContinueStmt": {
  "data": {
   "shadows": "mypy.nodes.ContinueStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.treetransform.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.treetransform.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.treetransform.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.EnumCallExpr": {
  "data": {
   "shadows": "mypy.nodes.EnumCallExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ExecStmt": {
  "data": {
   "shadows": "mypy.nodes.ExecStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.treetransform.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.treetransform.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.treetransform.FuncMapInitializer": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.treetransform.FuncMapInitializer.__init__": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "mypy.treetransform.TransformVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.FuncMapInitializer.visit_func_def": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.treetransform.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.GlobalDecl": {
  "data": {
   "shadows": "mypy.nodes.GlobalDecl"
  },
  "type": "import"
 },
 "mypy.treetransform.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.treetransform.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.treetransform.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.treetransform.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.treetransform.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.treetransform.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.treetransform.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.treetransform.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.treetransform.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.treetransform.NonlocalDecl": {
  "data": {
   "shadows": "mypy.nodes.NonlocalDecl"
  },
  "type": "import"
 },
 "mypy.treetransform.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.treetransform.OverloadPart": {
  "data": {
   "shadows": "mypy.nodes.OverloadPart"
  },
  "type": "import"
 },
 "mypy.treetransform.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.treetransform.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.PromoteExpr": {
  "data": {
   "shadows": "mypy.nodes.PromoteExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.treetransform.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Statement": {
  "data": {
   "shadows": "mypy.nodes.Statement"
  },
  "type": "import"
 },
 "mypy.treetransform.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.treetransform.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.treetransform.TransformVisitor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.treetransform.TransformVisitor.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.block": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.blocks": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.copy_argument": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mypy.nodes.Argument"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.copy_function_attributes": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mypy.nodes.FuncItem"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.copy_ref": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.duplicate_assignment": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.duplicate_generator": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.duplicate_name": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.expr": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.expressions": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.mypyfile": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.names": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.node": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "mypy.nodes.Node"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_block": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_expr": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_expressions": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Iterable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_names": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "typing.Iterable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_type": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.statements": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "mypy.nodes.Statement",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.stmt": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Statement"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.type": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.types": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit__promote_expr": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "mypy.nodes.PromoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "mypy.nodes.AssertStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_await_expr": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_block": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_break_stmt": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "mypy.nodes.BreakStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_bytes_expr": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "mypy.nodes.BytesExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_call_expr": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_cast_expr": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_class_def": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_complex_expr": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mypy.nodes.ComplexExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_continue_stmt": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.nodes.ContinueStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_decorator": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.nodes.Decorator"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_del_stmt": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "mypy.nodes.DelStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_dict_expr": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "mypy.nodes.DictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_ellipsis": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_enum_call_expr": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "mypy.nodes.EnumCallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "mypy.nodes.ExecStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mypy.nodes.ExpressionStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_float_expr": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "mypy.nodes.FloatExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_for_stmt": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_func_def": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "FuncMapInitializer",
    "mypy.nodes.FuncDef",
    "mypy.types.FunctionLike",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_generator_expr": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_global_decl": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mypy.nodes.GlobalDecl"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_if_stmt": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "mypy.nodes.IfStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_import": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_import_all": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_import_from": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_index_expr": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_int_expr": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "mypy.nodes.IntExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr",
    "mypy.types.FunctionLike",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_list_expr": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_member_expr": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_mypy_file": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_name_expr": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_namedtuple_expr": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "mypy.nodes.NamedTupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_newtype_expr": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "mypy.nodes.NewTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_nonlocal_decl": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.nodes.NonlocalDecl"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_op_expr": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "mypy.nodes.OperatorAssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "mypy.nodes.OverloadPart",
    "mypy.nodes.OverloadedFuncDef",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_pass_stmt": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "mypy.nodes.PassStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_print_stmt": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "mypy.nodes.PrintStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "mypy.nodes.RaiseStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_return_stmt": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mypy.nodes.ReturnStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_set_expr": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "mypy.nodes.SetExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_slice_expr": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_star_expr": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_str_expr": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "mypy.nodes.StrExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_super_expr": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.SuperExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_temp_node": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "mypy.nodes.TempNode"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_try_stmt": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "mypy.nodes.TryStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_type_alias_expr": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "mypy.nodes.TypeAliasExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_type_application": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_type_var_expr": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_typeddict_expr": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "mypy.nodes.TypedDictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_unary_expr": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_unicode_expr": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "mypy.nodes.UnicodeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_var": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_while_stmt": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_with_stmt": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mypy.nodes.WithStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_yield_expr": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.treetransform.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.treetransform.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.treetransform.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.treetransform.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.tvar_scope": {
  "data": {},
  "type": "module"
 },
 "mypy.tvar_scope.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.tvar_scope.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.tvar_scope.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarScope": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "mypy.tvar_scope.TypeVarScope.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.__str__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.allow_binding": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.bind": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr",
    "mypy.types.TypeVarDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.class_frame": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mypy.tvar_scope.TypeVarScope"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.get_binding": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.SymbolTableNode",
    "mypy.types.TypeVarDef",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.get_function_scope": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.method_frame": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mypy.tvar_scope.TypeVarScope"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.typeanal": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.TypeVarExpr",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.typeanal.ARG_KINDS_BY_CONSTRUCTOR": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mypy.typeanal.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.typeanal.AnalyzeTypeContext": {
  "data": {
   "shadows": "mypy.plugin.AnalyzeTypeContext"
  },
  "type": "import"
 },
 "mypy.typeanal.AnalyzerPluginInterface": {
  "data": {
   "shadows": "mypy.plugin.AnalyzerPluginInterface"
  },
  "type": "import"
 },
 "mypy.typeanal.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.typeanal.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.typeanal.CallableArgument": {
  "data": {
   "shadows": "mypy.types.CallableArgument"
  },
  "type": "import"
 },
 "mypy.typeanal.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeQuery",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery.__init__": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery.combine_lists_strategy": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "mypy.typeanal.itertools",
    "mypy.types.Type",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery.query_types": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "list",
    "mypy.types.Type",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAnyTypesQuery": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.TypeQuery",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.CollectAnyTypesQuery.__init__": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAnyTypesQuery.combine_lists_strategy": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.AnyType",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAnyTypesQuery.visit_any": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.typeanal.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.typeanal.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.typeanal.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.typeanal.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.typeanal.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.typeanal.ForwardRef": {
  "data": {
   "shadows": "mypy.types.ForwardRef"
  },
  "type": "import"
 },
 "mypy.typeanal.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.typeanal.HasAnyFromUnimportedType": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.HasAnyFromUnimportedType.__init__": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasAnyFromUnimportedType.visit_any": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.from_unimported_type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasAnyFromUnimportedType.visit_typeddict_type": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasExplicitAny": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.HasExplicitAny.__init__": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasExplicitAny.visit_any": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.explicit"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasExplicitAny.visit_typeddict_type": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.typeanal.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.typeanal.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.typeanal.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.typeanal.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.typeanal.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.typeanal.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.typeanal.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.typeanal.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.typeanal.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.typeanal.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.typeanal.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.typeanal.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.typeanal.StarType": {
  "data": {
   "shadows": "mypy.types.StarType"
  },
  "type": "import"
 },
 "mypy.typeanal.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.typeanal.SyntheticTypeVisitor": {
  "data": {
   "shadows": "mypy.types.SyntheticTypeVisitor"
  },
  "type": "import"
 },
 "mypy.typeanal.T": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mypy.typeanal.TVAR": {
  "data": {
   "shadows": "mypy.nodes.TVAR"
  },
  "type": "import"
 },
 "mypy.typeanal.TYPE_ALIAS": {
  "data": {
   "shadows": "mypy.nodes.TYPE_ALIAS"
  },
  "type": "import"
 },
 "mypy.typeanal.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.typeanal.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.typeanal.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeAnalyser": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.plugin.AnalyzerPluginInterface",
    "mypy.types.SyntheticTypeVisitor",
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.TypeAnalyser.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool",
    "fail_func",
    "lookup_func",
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "mypy.tvar_scope.TypeVarScope",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.anal_array": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.anal_type": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.anal_var_defs": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "mypy.types.TypeVarDef",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.analyze_callable_args": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.check_arg_kinds",
    "mypy.nodes.check_arg_names",
    "mypy.typeanal.ARG_KINDS_BY_CONSTRUCTOR",
    "mypy.types.CallableArgument",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.analyze_callable_type": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.EllipsisType",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "mypy.types.TypeOfAny.explicit",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.analyze_type": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.bind_function_type_variables": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.TypeVarExpr",
    "mypy.types.CallableType",
    "mypy.types.TypeVarDef",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.fail": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.infer_type_variables": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "TypeVariableQuery",
    "list",
    "mypy.nodes.TypeVarExpr",
    "mypy.types.CallableType",
    "str",
    "type.arg_types",
    "type.ret_type.accept",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.is_defined_type_var": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.named_type": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.tuple_type": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.tvar_scope_frame": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_any": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_callable_argument": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.CallableArgument",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_callable_type": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "bool",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_deleted_type": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_ellipsis_type": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.EllipsisType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_forwardref_type": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_instance": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_none_type": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_partial_type": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_star_type": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "mypy.types.StarType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_tuple_type": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.types.AnyType",
    "mypy.types.StarType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "sum"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_type_list": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_type_type": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_type_var": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_typeddict_type": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_unbound_type": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "hook",
    "isinstance",
    "len",
    "list",
    "make_optional_type",
    "mypy.messages.BARE_GENERIC",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.TVAR",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.nodes.Var",
    "mypy.nodes.nongen_builtins",
    "mypy.plugin.AnalyzeTypeContext",
    "mypy.typeanal.no_subscript_builtin_alias",
    "mypy.types.AnyType",
    "mypy.types.EllipsisType",
    "mypy.types.ForwardRef",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.explicit",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.from_unimported_type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.TypeVarType",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType.make_union",
    "mypy.types.get_type_vars",
    "replace_alias_tvars",
    "set_any_tvars"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_uninhabited_type": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_union_type": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.TypeAnalyserPass3.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "bool",
    "fail_func",
    "lookup_func",
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.anal_type": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "mypy.typeanal.TypeAnalyser",
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.check_type_var_values": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "any",
    "int",
    "isinstance",
    "len",
    "mypy.messages.INCOMPATIBLE_TYPEVAR_VALUE.format",
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "type.name",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.resolve_type": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.ForwardRef",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_any": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_callable_type": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_deleted_type": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_forwardref_type": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "mypy.types.ForwardRef"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_instance": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "mypy.messages.IMPLICIT_GENERIC_ANY_BUILTIN.format",
    "mypy.nodes.nongen_builtins",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarType",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_none_type": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_overloaded": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_partial_type": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_star_type": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "mypy.types.StarType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_tuple_type": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_type_list": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "mypy.types.TypeList"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_type_type": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_type_var": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_typeddict_type": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_unbound_type": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_uninhabited_type": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_union_type": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeQuery": {
  "data": {
   "shadows": "mypy.types.TypeQuery"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeTranslationError": {
  "data": {
   "shadows": "mypy.exprtotype.TypeTranslationError"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarList": {
  "data": {
   "lineno": 844
  },
  "type": "constant"
 },
 "mypy.typeanal.TypeVarScope": {
  "data": {
   "shadows": "mypy.tvar_scope.TypeVarScope"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVariableQuery": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "mypy.typeanal.TypeVarList",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.TypeVariableQuery.__init__": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "mypy.typeanal.flatten_tvars",
    "str",
    "super",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVariableQuery._seems_like_callable": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.EllipsisType",
    "mypy.types.TypeList",
    "mypy.types.UnboundType",
    "type.args"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVariableQuery.visit_callable_type": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "mypy.typeanal.TypeVarList",
    "mypy.types.CallableType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVariableQuery.visit_unbound_type": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.TVAR",
    "mypy.nodes.TypeVarExpr",
    "mypy.typeanal.TypeVarList",
    "mypy.types.UnboundType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.typeanal.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.typeanal.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.typeanal.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.typeanal.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.typeanal.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.typeanal.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.typeanal.analyze_type_alias": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeAnalyser",
    "bool",
    "fail_func",
    "isinstance",
    "len",
    "lookup_func",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TVAR",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeInfo",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "mypy.tvar_scope.TypeVarScope",
    "mypy.typeanal.type_constructors",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "str",
    "type",
    "type.accept",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "mypy.typeanal.check_arg_kinds": {
  "data": {
   "shadows": "mypy.nodes.check_arg_kinds"
  },
  "type": "import"
 },
 "mypy.typeanal.check_arg_names": {
  "data": {
   "shadows": "mypy.nodes.check_arg_names"
  },
  "type": "import"
 },
 "mypy.typeanal.check_for_explicit_any": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "bool",
    "has_explicit_any",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.collect_all_inner_types": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "CollectAllInnerTypesQuery",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.collect_any_types": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "CollectAnyTypesQuery",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.typeanal.expr_to_unanalyzed_type": {
  "data": {
   "shadows": "mypy.exprtotype.expr_to_unanalyzed_type"
  },
  "type": "import"
 },
 "mypy.typeanal.flatten_tvars": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "itertools.chain.from_iterable",
    "mypy.typeanal.T",
    "mypy.typeanal.remove_dups",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.get_typ_args": {
  "data": {
   "shadows": "mypy.types.get_typ_args"
  },
  "type": "import"
 },
 "mypy.typeanal.get_type_vars": {
  "data": {
   "shadows": "mypy.types.get_type_vars"
  },
  "type": "import"
 },
 "mypy.typeanal.has_any_from_unimported_type": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "HasAnyFromUnimportedType",
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.has_explicit_any": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "HasExplicitAny",
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.typeanal.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.typeanal.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mypy.typeanal.make_optional_type": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.union_items"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.typeanal.no_subscript_builtin_alias": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.nongen_builtins",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.typeanal.nongen_builtins": {
  "data": {
   "shadows": "mypy.nodes.nongen_builtins"
  },
  "type": "import"
 },
 "mypy.typeanal.remove_dups": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "mypy.typeanal.T",
    "set",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.replace_alias_tvars": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "mypy.types.UnboundType",
    "mypy.types.get_typ_args",
    "mypy.types.set_typ_args",
    "str",
    "typing.List",
    "vars",
    "vars.index"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.set_any_tvars": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.typeanal.replace_alias_tvars",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.set_typ_args": {
  "data": {
   "shadows": "mypy.types.set_typ_args"
  },
  "type": "import"
 },
 "mypy.typeanal.type_constructors": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mypy.typeanal.union_items": {
  "data": {
   "shadows": "mypy.types.union_items"
  },
  "type": "import"
 },
 "mypy.types": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "globals",
    "int",
    "isinstance",
    "issubclass",
    "mypy.types.Type",
    "mypy.types.names",
    "object",
    "str",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.NamedTuple",
    "typing.Optional",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.types.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.types.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.types.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.types.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.types.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.types.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.types.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.types.AnyType": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.AnyType.__eq__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.AnyType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.AnyType.__hash__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "hash",
    "int",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.types.AnyType.__init__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "int",
    "mypy.types.TypeOfAny",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.AnyType.accept": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.AnyType.copy_modified": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny",
    "mypy.types._dummy",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.AnyType.deserialize": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.AnyType",
    "mypy.types.JsonDict",
    "mypy.types.TypeOfAny"
   ]
  },
  "type": "function"
 },
 "mypy.types.AnyType.serialize": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.types.CallableArgument": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.CallableArgument.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "int",
    "mypy.types.Type",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableArgument.accept": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableArgument.serialize": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "mypy.types.FunctionLike"
   ]
  },
  "type": "class"
 },
 "mypy.types.CallableType.__eq__": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "mypy.types.CallableType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.__hash__": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "hash",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.__init__": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "any",
    "bool",
    "int",
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.SymbolNode",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.accept": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.argument_by_name": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "enumerate",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.types.FormalArgument",
    "str",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.argument_by_position": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.types.FormalArgument",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.copy_modified": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.nodes.SymbolNode",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "mypy.types._dummy",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.corresponding_argument": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "mypy.subtypes.is_equivalent",
    "mypy.types.FormalArgument",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.deserialize": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.JsonDict",
    "mypy.types.TypeVarDef",
    "mypy.types.deserialize_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.get_name": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.is_concrete_type_obj": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.is_generic": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.is_type_obj": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.items": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.max_fixed_args": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.serialize": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.type_object": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.type_var_ids": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "mypy.types.TypeVarId",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.CallableType.with_name": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.DeletedType": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.DeletedType.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.DeletedType.accept": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.DeletedType.deserialize": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.DeletedType",
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.DeletedType.serialize": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.types.EllipsisType": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.EllipsisType.accept": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.EllipsisType.serialize": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "mypy.types.ErasedType": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.ErasedType.accept": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.FormalArgument": {
  "data": {
   "lineno": 609
  },
  "type": "constant"
 },
 "mypy.types.ForwardRef": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.ForwardRef.__init__": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.types.ForwardRef.accept": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.ForwardRef.resolve": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.ForwardRef.resolved": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "mypy.types.Type",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.ForwardRef.serialize": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.ForwardRef.unbound": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "mypy.types.UnboundType",
    "property"
   ]
  },
  "type": "function"
 },
 "mypy.types.FunctionLike": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.FunctionLike.get_name": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.FunctionLike.is_concrete_type_obj": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.FunctionLike.is_type_obj": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.FunctionLike.items": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.FunctionLike.type_object": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mypy.types.FunctionLike.with_name": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "mypy.types.INVARIANT": {
  "data": {
   "shadows": "mypy.nodes.INVARIANT"
  },
  "type": "import"
 },
 "mypy.types.IdMapper": {
  "data": {
   "shadows": "mypy.util.IdMapper"
  },
  "type": "import"
 },
 "mypy.types.Instance": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.types.Instance.__eq__": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "mypy.types.Instance",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.Instance.__hash__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "hash",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.Instance.__init__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.types.NOT_READY",
    "mypy.types.Type",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.Instance.accept": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.Instance.copy_modified": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.Instance.deserialize": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "list",
    "mypy.types.Instance",
    "mypy.types.JsonDict",
    "mypy.types.NOT_READY",
    "mypy.types.deserialize_type",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.types.Instance.serialize": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "mypy.types.JsonDict",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.types.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.types.JsonDict": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mypy.types.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.types.NOT_READY": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "mypy.types.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.types.NoneTyp": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.NoneTyp.__eq__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.NoneTyp",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.NoneTyp.__hash__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "hash",
    "int",
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.types.NoneTyp.__init__": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.types.NoneTyp.accept": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.NoneTyp.deserialize": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.JsonDict",
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.types.NoneTyp.serialize": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.types.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.types.Overloaded": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "mypy.types.FunctionLike"
   ]
  },
  "type": "class"
 },
 "mypy.types.Overloaded.__eq__": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "mypy.types.Overloaded",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.__hash__": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "hash",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.__init__": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.accept": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.deserialize": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.CallableType",
    "mypy.types.JsonDict",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.get_name": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.is_type_obj": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.items": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.name": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.serialize": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.Overloaded.type_object": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "mypy.types.Overloaded.with_name": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "mypy.types.Overloaded",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.PartialType": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.types.PartialType.__init__": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.PartialType.accept": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.types.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.types.StarType": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "class"
 },
 "mypy.types.StarType.__init__": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "int",
    "mypy.types.Type",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.types.StarType.accept": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.StarType.serialize": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "mypy.types.SyntheticTypeVisitor": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.types.SyntheticTypeVisitor.visit_callable_argument": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.CallableArgument",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.SyntheticTypeVisitor.visit_ellipsis_type": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.EllipsisType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.SyntheticTypeVisitor.visit_star_type": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.StarType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.SyntheticTypeVisitor.visit_type_list": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.TypeList"
   ]
  },
  "type": "function"
 },
 "mypy.types.T": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mypy.types.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.types.TupleType": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.TupleType.__eq__": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "mypy.types.TupleType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.__hash__": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "hash",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.__init__": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.types.Instance",
    "mypy.types.Type",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.accept": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.copy_modified": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.deserialize": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.Instance",
    "mypy.types.JsonDict",
    "mypy.types.TupleType",
    "mypy.types.deserialize_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.length": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.serialize": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.TupleType.slice": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "int",
    "mypy.types.TupleType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.Type": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "mypy.types.Type.__repr__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeStrVisitor",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.Type.accept": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.Type.deserialize": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.Type.serialize": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "mypy.types.JsonDict",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeList": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeList.__init__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "int",
    "mypy.types.Type",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeList.accept": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeList.serialize": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeOfAny": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeQuery": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "mypy.types.SyntheticTypeVisitor",
    "mypy.types.T"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeQuery.__init__": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "mypy.types.T",
    "typing.Callable",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.query_types": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.Type",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_any": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_callable_argument": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "mypy.types.CallableArgument",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_callable_type": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_deleted_type": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_ellipsis_type": {
  "data": {
   "lineno": 1866,
   "symbols_in_volume": [
    "mypy.types.EllipsisType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_erased_type": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_forwardref_type": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_instance": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_none_type": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_overloaded": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "mypy.types.Overloaded",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_partial_type": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_star_type": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "mypy.types.StarType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_tuple_type": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_type_list": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.TypeList"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_type_type": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_type_var": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_typeddict_type": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_unbound_type": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_uninhabited_type": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeQuery.visit_union_type": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "mypy.types.T",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "mypy.types.SyntheticTypeVisitor",
    "str"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeStrVisitor.__init__": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "mypy.util.IdMapper",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.list_str": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_any": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_callable_argument": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "mypy.types.CallableArgument",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_callable_type": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "is_named_instance",
    "isinstance",
    "len",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_deleted_type": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_ellipsis_type": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "mypy.types.EllipsisType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_erased_type": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_forwardref_type": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_instance": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_none_type": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_overloaded": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "mypy.types.Overloaded",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_partial_type": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "len",
    "mypy.types.PartialType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_star_type": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "mypy.types.StarType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_tuple_type": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "mypy.types.TupleType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_type_list": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "mypy.types.TypeList",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_type_type": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "mypy.types.TypeType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_type_var": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "mypy.types.TypeVarType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "item_str",
    "mypy.types.TypedDictType",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_typeddict_type.item_str": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_unbound_type": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "mypy.types.UnboundType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": [
    "mypy.types.UninhabitedType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeStrVisitor.visit_union_type": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "mypy.types.UnionType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeTranslator.translate_types": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.translate_variables": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "mypy.types.TypeVarDef",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_any": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_callable_type": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_deleted_type": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_erased_type": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_forwardref_type": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_instance": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_none_type": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_overloaded": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_partial_type": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_tuple_type": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_type_type": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_type_var": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_typeddict_type": {
  "data": {
   "lineno": 1570,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_unbound_type": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_uninhabited_type": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeTranslator.visit_union_type": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeType": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeType.__eq__": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "mypy.types.TypeType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeType.__hash__": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeType.__init__": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "int",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.TypeVarType",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeType.accept": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeType.deserialize": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.JsonDict",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.deserialize_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeType.make_normalized": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.UnionType",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeType.serialize": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.types.TypeVarDef": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "id",
    "mypy.nodes.INVARIANT"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeVarDef.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "id",
    "int",
    "isinstance",
    "mypy.nodes.INVARIANT",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "str",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarDef.__repr__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "is_named_instance",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarDef.deserialize": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.JsonDict",
    "mypy.types.TypeVarDef",
    "mypy.types.deserialize_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarDef.new_unification_variable": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarId",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarDef.serialize": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarId": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "mypy.types.TypeVarId.__eq__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.TypeVarId",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarId.__hash__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarId.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarId.__ne__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarId.__repr__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarId.is_meta_var": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarId.new": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "mypy.types.TypeVarId",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarType": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "id",
    "mypy.nodes.INVARIANT",
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeVarType.__eq__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "mypy.types.TypeVarType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarType.__hash__": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarType.__init__": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "int",
    "mypy.types.TypeVarDef",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarType.accept": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarType.deserialize": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.JsonDict",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType",
    "mypy.types.deserialize_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarType.erase_to_union_or_bound": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVarType.serialize": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "mypy.types.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypeVisitor._notimplemented_helper": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_any": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.AnyType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.CallableType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.DeletedType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_forwardref_type": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.types.ForwardRef",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_instance": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.Instance",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_none_type": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.NoneTyp",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "mypy.types.Overloaded",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.PartialType",
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_type_type": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_type_var": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypeVisitor.visit_union_type": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.types.T",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.TypedDictType.__eq__": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "frozenset",
    "isinstance",
    "mypy.types.TypedDictType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.__hash__": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "frozenset",
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.__init__": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.types.Instance",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.accept": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.as_anonymous": {
  "data": {
   "lineno": 1080
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.copy_modified": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.create_anonymous_fallback": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.deserialize": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "classmethod",
    "collections.OrderedDict",
    "mypy.types.Instance",
    "mypy.types.JsonDict",
    "mypy.types.TypedDictType",
    "mypy.types.deserialize_type",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.is_anonymous": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.names_are_wider_than": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.serialize": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "mypy.types.JsonDict",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.zip": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "mypy.types.Type",
    "str",
    "typing.Iterable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.TypedDictType.zipall": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "mypy.types.Type",
    "str",
    "typing.Iterable",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnboundType": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.UnboundType.__eq__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "mypy.types.UnboundType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnboundType.__hash__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "hash",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnboundType.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.types.Type",
    "str",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnboundType.accept": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnboundType.deserialize": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.JsonDict",
    "mypy.types.UnboundType",
    "mypy.types.deserialize_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnboundType.serialize": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.UninhabitedType": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.UninhabitedType.__eq__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.UninhabitedType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.UninhabitedType.__hash__": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "hash",
    "int",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.types.UninhabitedType.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "bool",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.types.UninhabitedType.accept": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.UninhabitedType.deserialize": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.JsonDict",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.types.UninhabitedType.serialize": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.types.UnionType": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.types.UnionType.__eq__": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "frozenset",
    "isinstance",
    "mypy.types.UnionType",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.__hash__": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "frozenset",
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.__init__": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "any",
    "flatten_nested_unions",
    "int",
    "mypy.types.Type",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.accept": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "mypy.types.T"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.deserialize": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.JsonDict",
    "mypy.types.UnionType",
    "mypy.types.deserialize_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.has_readable_member": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.UnionType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.length": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.make_simplified_union": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "range",
    "set",
    "staticmethod",
    "true_or_false",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.make_union": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.relevant_items": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.UnionType.serialize": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "mypy.types.JsonDict"
   ]
  },
  "type": "function"
 },
 "mypy.types._dummy": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "mypy.types.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.types.argument_elide_name": {
  "data": {
   "shadows": "mypy.sharedparse.argument_elide_name"
  },
  "type": "import"
 },
 "mypy.types.callable_type": {
  "data": {
   "lineno": 1967,
   "symbols_in_volume": [
    "len",
    "mypy.sharedparse.argument_elide_name",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.types.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.types.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mypy.types.copy_type": {
  "data": {
   "lineno": 1895,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.copy"
   ]
  },
  "type": "function"
 },
 "mypy.types.deserialize_map": {
  "data": {
   "lineno": 2054
  },
  "type": "constant"
 },
 "mypy.types.deserialize_type": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "method",
    "mypy.types.JsonDict",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.types.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.types.false_only": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "mypy.types.copy_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.flatten_nested_unions": {
  "data": {
   "lineno": 2027,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.function_type": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "callable_type",
    "isinstance",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.get_typ_args": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.get_type_vars": {
  "data": {
   "lineno": 2006,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "mypy.types.get_typ_args",
    "set",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.is_equivalent": {
  "data": {
   "shadows": "mypy.subtypes.is_equivalent"
  },
  "type": "import"
 },
 "mypy.types.is_named_instance": {
  "data": {
   "lineno": 1889,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.types.is_proper_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_proper_subtype"
  },
  "type": "import"
 },
 "mypy.types.mypy.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.types.names": {
  "data": {
   "lineno": 2052
  },
  "type": "constant"
 },
 "mypy.types.set_typ_args": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.types.strip_type": {
  "data": {
   "lineno": 1877,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.types.true_only": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "mypy.types.copy_type"
   ]
  },
  "type": "function"
 },
 "mypy.types.true_or_false": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.copy_type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.types.union_items": {
  "data": {
   "lineno": 2038,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typevars": {
  "data": {},
  "type": "module"
 },
 "mypy.typevars.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.typevars.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.typevars.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.typevars.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.typevars.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.typevars.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.typevars.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.typevars.erase_typevars": {
  "data": {
   "shadows": "mypy.erasetype.erase_typevars"
  },
  "type": "import"
 },
 "mypy.typevars.fill_typevars": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.TypeVarType",
    "range",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.typevars.has_no_typevars": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "mypy.erasetype.erase_typevars",
    "mypy.sametypes.is_same_type",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typevars.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.util": {
  "data": {
   "symbols_in_volume": [
    "mypy.util.re",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.util.ENCODING_RE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.util.ERROR_TEMPLATE": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mypy.util.FAIL_TEMPLATE": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "mypy.util.IdMapper": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "mypy.util.IdMapper.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mypy.util.IdMapper.id": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.util.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.util.PASS_TEMPLATE": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "mypy.util.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.util.T": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mypy.util.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.util.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.util._python2_interpreter": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mypy.util.array_repr": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.util.T",
    "repr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.util.default_python2_interpreter": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mypy.util.escape": {
  "data": {
   "shadows": "xml.sax.saxutils.escape"
  },
  "type": "import"
 },
 "mypy.util.find_python_encoding": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bytes",
    "int",
    "mypy.util.ENCODING_RE",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.util.get_prefix": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.util.short_type": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.util.split_module_names": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.util.try_find_python2_interpreter": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "OSError",
    "mypy.util._python2_interpreter",
    "mypy.util.default_python2_interpreter",
    "mypy.util.subprocess",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.util.write_junit_xml": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bool",
    "float",
    "mypy.util.ERROR_TEMPLATE",
    "mypy.util.FAIL_TEMPLATE",
    "mypy.util.PASS_TEMPLATE",
    "open",
    "str",
    "typing.List",
    "xml.sax.saxutils.escape"
   ]
  },
  "type": "function"
 },
 "mypy.version": {
  "data": {},
  "type": "module"
 },
 "mypy.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mypy.visitor": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.visitor.ExpressionVisitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mypy.visitor.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "mypy.visitor.ExpressionVisitor.visit__promote_expr": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_await_expr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_bytes_expr": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_call_expr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_cast_expr": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_complex_expr": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_dict_expr": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_ellipsis": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_enum_call_expr": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_float_expr": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_generator_expr": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_index_expr": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_int_expr": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_list_expr": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_member_expr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_name_expr": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_namedtuple_expr": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_newtype_expr": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_op_expr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_set_expr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_slice_expr": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_star_expr": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_str_expr": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_super_expr": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_temp_node": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_type_alias_expr": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_type_application": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_type_var_expr": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_typeddict_expr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_unary_expr": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_unicode_expr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_yield_expr": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "mypy.visitor.NodeVisitor": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "mypy.visitor.ExpressionVisitor",
    "mypy.visitor.StatementVisitor",
    "mypy.visitor.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "mypy.visitor.NodeVisitor.visit__promote_expr": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_await_expr": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_block": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_break_stmt": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_bytes_expr": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_call_expr": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_cast_expr": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_class_def": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_complex_expr": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_continue_stmt": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_decorator": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_del_stmt": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_dict_expr": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_ellipsis": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_enum_call_expr": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_float_expr": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_for_stmt": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_func_def": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_generator_expr": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_global_decl": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_if_stmt": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_import": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_import_all": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_import_from": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_index_expr": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_int_expr": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_list_expr": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_member_expr": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_mypy_file": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_name_expr": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_namedtuple_expr": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_newtype_expr": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_nonlocal_decl": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_op_expr": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_pass_stmt": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_print_stmt": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_return_stmt": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_set_expr": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_slice_expr": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_star_expr": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_str_expr": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_super_expr": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_temp_node": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_try_stmt": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_type_alias_expr": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_type_application": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_type_var_expr": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_typeddict_expr": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_unary_expr": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_unicode_expr": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_var": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_while_stmt": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_with_stmt": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_yield_expr": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "mypy.visitor.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "mypy.visitor.StatementVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_block": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_break_stmt": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_class_def": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_continue_stmt": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_decorator": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_del_stmt": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_for_stmt": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_func_def": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_global_decl": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_if_stmt": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_import": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_import_all": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_import_from": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_nonlocal_decl": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_pass_stmt": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_print_stmt": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_return_stmt": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_try_stmt": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_var": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_while_stmt": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_with_stmt": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.T": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.visitor.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.visitor.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.visitor.mypy.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.waiter": {
  "data": {},
  "type": "module"
 },
 "mypy.waiter.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.waiter.DEVNULL": {
  "data": {
   "shadows": "subprocess.DEVNULL"
  },
  "type": "import"
 },
 "mypy.waiter.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.waiter.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mypy.waiter.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.waiter.LazySubprocess": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "mypy.waiter.LazySubprocess.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.elapsed_time": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.read_output": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.start": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.waiter.tempfile",
    "mypy.waiter.time",
    "subprocess.Popen",
    "subprocess.STDOUT"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.status": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.wait": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.waiter.Noter": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "mypy.waiter.Noter.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.clear": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "mypy.waiter.Noter.message": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.waiter.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.start": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.stop": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.update": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.waiter.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "mypy.waiter.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "mypy.waiter.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.waiter.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.waiter.Waiter": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "mypy.waiter.Waiter.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "collections.defaultdict",
    "dict",
    "int",
    "len",
    "multiprocessing.cpu_count",
    "mypy.waiter.os",
    "sched_getaffinity",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._poll_current": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "int",
    "mypy.waiter.time",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._record_time": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "float",
    "mypy.waiter.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._report_task_failure": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "int",
    "mypy.waiter.sys",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._start_next": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "mypy.waiter.pipes",
    "mypy.waiter.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._wait_next": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.waiter.sys",
    "parse_test_stats_from_output",
    "print",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.add": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.waiter.LazySubprocess",
    "mypy.waiter.sys"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.load_log_file": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "FileNotFoundError",
    "mypy.waiter.json",
    "mypy.waiter.sys",
    "open",
    "print",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.run": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Exception",
    "any",
    "avg",
    "int",
    "len",
    "mypy.waiter.Noter",
    "mypy.waiter.json",
    "mypy.waiter.sys",
    "open",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.run.avg": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "float",
    "len",
    "sum",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.run.sort_function": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "float",
    "int",
    "mypy.waiter.LazySubprocess",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.WaiterError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.waiter.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "mypy.waiter.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.waiter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.waiter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.waiter.parse_test_stats_from_output": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "int",
    "mypy.waiter.re",
    "str",
    "sum",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.pipes": {
  "data": {
   "shadows": "pipes"
  },
  "type": "import"
 },
 "mypy.waiter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.waiter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.waiter.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mypy.waiter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 }
}