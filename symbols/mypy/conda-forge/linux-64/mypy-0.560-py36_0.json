{
 "mypy": {
  "data": {},
  "type": "module"
 },
 "mypy.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mypy.main.main"
   ]
  },
  "type": "module"
 },
 "mypy.__main__.console_entry": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "mypy.main.main"
   ]
  },
  "type": "function"
 },
 "mypy.__main__.main": {
  "data": {
   "shadows": "mypy.main.main"
  },
  "type": "import"
 },
 "mypy.api": {
  "data": {},
  "type": "module"
 },
 "mypy.api.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.api.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mypy.api.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.api.main": {
  "data": {
   "shadows": "mypy.main.main"
  },
  "type": "import"
 },
 "mypy.api.run": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "SystemExit",
    "int",
    "io.StringIO",
    "mypy.api.sys",
    "mypy.main.main",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.applytype": {
  "data": {},
  "type": "module"
 },
 "mypy.applytype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.applytype.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.applytype.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.applytype.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.applytype.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.applytype.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.applytype.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.applytype.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.applytype.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.applytype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.applytype.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.applytype.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.applytype.apply_generic_arguments": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "all",
    "any",
    "callable",
    "callable.arg_types",
    "callable.copy_modified",
    "callable.ret_type",
    "callable.variables",
    "callable.variables.name",
    "callable.variables.upper_bound",
    "callable.variables.values",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mypy.expandtype.expand_type",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.PartialType",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "type",
    "type.values",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.applytype.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.applytype.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.applytype.mypy.subtypes": {
  "data": {
   "shadows": "mypy.subtypes"
  },
  "type": "import"
 },
 "mypy.checkstrformat": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Type",
    "typing.Callable",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.checkstrformat.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.checkstrformat.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Checkers": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mypy.checkstrformat.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.checkstrformat.ConversionSpecifier": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "mypy.checkstrformat.ConversionSpecifier.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.ConversionSpecifier.has_key": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.ConversionSpecifier.has_star": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.checkstrformat.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.checkstrformat.FormatStringExpr": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mypy.checkstrformat.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.checkstrformat.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.checkstrformat.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.checkstrformat.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.StringFormatterChecker": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "mypy.checkstrformat.StringFormatterChecker.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mypy.messages.MessageBuilder"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.accept": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "all",
    "any",
    "bool",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.nodes.Context",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.build_replacement_checkers": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.messages.FORMAT_REQUIRES_MAPPING",
    "mypy.messages.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.DictExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.check_simple_str_interpolation": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "any",
    "check_node",
    "check_type",
    "isinstance",
    "len",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StarExpr",
    "mypy.nodes.TupleExpr",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.check_str_interpolation": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_c_type": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "check_type",
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_c_type.check_expr": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "check_type",
    "isinstance",
    "len",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_c_type.check_type": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "mypy.messages.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_regular_type": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "check_type",
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_regular_type.check_expr": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "check_type",
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_regular_type.check_type": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.messages.INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION",
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_star": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "check_type",
    "mypy.checkstrformat.Checkers",
    "mypy.nodes.Context"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_star.check_expr": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "check_type",
    "mypy.nodes.Expression",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.checkers_for_star.check_type": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.conversion_type": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "isinstance",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Context",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.named_type": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.parse_conversion_specifiers": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "format",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.re",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.StringFormatterChecker.replacement_checkers": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "mypy.checkstrformat.Checkers",
    "mypy.checkstrformat.ConversionSpecifier",
    "mypy.checkstrformat.FormatStringExpr",
    "mypy.nodes.Context",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.checkstrformat.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.checkstrformat.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.checkstrformat.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.checkstrformat.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.checkstrformat.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.checkstrformat.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.checkstrformat.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.checkstrformat.mypy.checker": {
  "data": {
   "shadows": "mypy.checker"
  },
  "type": "import"
 },
 "mypy.checkstrformat.mypy.checkexpr": {
  "data": {
   "shadows": "mypy.checkexpr"
  },
  "type": "import"
 },
 "mypy.checkstrformat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.defaults": {
  "data": {},
  "type": "module"
 },
 "mypy.defaults.CACHE_DIR": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mypy.defaults.CONFIG_FILE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mypy.defaults.PYTHON2_VERSION": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mypy.defaults.PYTHON3_VERSION": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "mypy.defaults.PYTHON3_VERSION_MIN": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mypy.dmypy_util": {
  "data": {},
  "type": "module"
 },
 "mypy.dmypy_util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.dmypy_util.STATUS_FILE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.dmypy_util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.dmypy_util.receive": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "OSError",
    "bytearray",
    "dict",
    "isinstance",
    "mypy.dmypy_util.json",
    "mypy.dmypy_util.socket",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.dmypy_util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mypy.expandtype": {
  "data": {
   "symbols_in_volume": [
    "mypy.types.FunctionLike",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.expandtype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.expandtype.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.expandtype.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.expandtype.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.expandtype.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.expandtype.ExpandTypeVisitor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.expandtype.ExpandTypeVisitor.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.expand_types": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "mypy.types.Type",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_any": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.types.ErasedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_instance": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_none_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_type_type": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_type_var": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.ExpandTypeVisitor.visit_union_type": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.F": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.expandtype.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.expandtype.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.expandtype.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.expandtype.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.expandtype.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.expandtype.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.expandtype.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.expandtype.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.expandtype.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.expandtype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.expandtype.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.expandtype.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.expandtype.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.expandtype.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.expandtype.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.expandtype.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.expandtype.expand_type": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "mypy.expandtype.ExpandTypeVisitor",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.expand_type_by_instance": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mypy.expandtype.expand_type",
    "mypy.types.Instance",
    "mypy.types.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.expandtype.freshen_function_type_vars": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "mypy.expandtype.F",
    "mypy.expandtype.expand_type",
    "mypy.types.CallableType",
    "mypy.types.Overloaded",
    "mypy.types.TypeVarDef.new_unification_variable",
    "mypy.types.TypeVarType",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.experiments": {
  "data": {},
  "type": "module"
 },
 "mypy.experiments.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.experiments.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.experiments.STRICT_OPTIONAL": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mypy.experiments.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.experiments.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.experiments.find_occurrences": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mypy.experiments.strict_optional_set": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool",
    "contextlib.contextmanager",
    "mypy.experiments.STRICT_OPTIONAL",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.exprtotype": {
  "data": {},
  "type": "module"
 },
 "mypy.exprtotype.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.exprtotype.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.exprtotype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.exprtotype.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.CallableArgument": {
  "data": {
   "shadows": "mypy.types.CallableArgument"
  },
  "type": "import"
 },
 "mypy.exprtotype.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.exprtotype.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.exprtotype.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.Optional": {
  "data": {
   "shadows": "mypy.types.Optional"
  },
  "type": "import"
 },
 "mypy.exprtotype.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.exprtotype.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.exprtotype.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.exprtotype.TypeTranslationError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.exprtotype.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.exprtotype.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.exprtotype._extract_argument_name": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.types.Optional",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.exprtotype.expr_to_unanalyzed_type": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "SyntaxError",
    "enumerate",
    "isinstance",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype._extract_argument_name",
    "mypy.fastparse.parse_type_comment",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.CallExpr",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.UnicodeExpr",
    "mypy.nodes.get_member_expr_fullname",
    "mypy.types.AnyType",
    "mypy.types.CallableArgument",
    "mypy.types.EllipsisType",
    "mypy.types.Optional",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "mypy.types.TypeOfAny.unannotated",
    "mypy.types.UnboundType",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mypy.exprtotype.get_member_expr_fullname": {
  "data": {
   "shadows": "mypy.nodes.get_member_expr_fullname"
  },
  "type": "import"
 },
 "mypy.exprtotype.parse_type_comment": {
  "data": {
   "shadows": "mypy.fastparse.parse_type_comment"
  },
  "type": "import"
 },
 "mypy.fastparse2": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mypy.fastparse2.sys",
    "mypy.nodes.Node",
    "print",
    "typed_ast.ast27.expr",
    "typed_ast.ast27.stmt",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.fastparse2.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.fastparse2.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.fastparse2.ASTConverter": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "typed_ast.ast27.Add",
    "typed_ast.ast27.BitAnd",
    "typed_ast.ast27.BitOr",
    "typed_ast.ast27.BitXor",
    "typed_ast.ast27.Div",
    "typed_ast.ast27.Eq",
    "typed_ast.ast27.FloorDiv",
    "typed_ast.ast27.Gt",
    "typed_ast.ast27.GtE",
    "typed_ast.ast27.In",
    "typed_ast.ast27.Is",
    "typed_ast.ast27.IsNot",
    "typed_ast.ast27.LShift",
    "typed_ast.ast27.Lt",
    "typed_ast.ast27.LtE",
    "typed_ast.ast27.Mod",
    "typed_ast.ast27.Mult",
    "typed_ast.ast27.NodeTransformer",
    "typed_ast.ast27.NotEq",
    "typed_ast.ast27.NotIn",
    "typed_ast.ast27.Pow",
    "typed_ast.ast27.RShift",
    "typed_ast.ast27.Sub"
   ]
  },
  "type": "class"
 },
 "mypy.fastparse2.ASTConverter.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "bool",
    "mypy.errors.Errors",
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.as_block": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Block",
    "typed_ast.ast27.stmt",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.as_required_block": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.Block",
    "typed_ast.ast27.stmt",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.fail": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.fix_function_overloads": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.Statement",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.from_comp_operator": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse2.ASTConverter",
    "str",
    "type",
    "typed_ast.ast27.cmpop"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.from_operator": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse2.ASTConverter",
    "str",
    "type",
    "typed_ast.ast27.operator"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.generic_visit": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "RuntimeError",
    "str",
    "type",
    "typed_ast.ast27.AST"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.in_class": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.set_type_optional": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "type",
    "type.optional",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.stringify_name": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "type",
    "typed_ast.ast27.AST",
    "typed_ast.ast27.Attribute",
    "typed_ast.ast27.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "convert_arg",
    "enumerate",
    "extract_names",
    "get_type",
    "int",
    "len",
    "mypy.fastparse.TypeConverter",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Argument",
    "mypy.nodes.Statement",
    "mypy.nodes.Var",
    "mypy.nodes.check_arg_names",
    "typed_ast.ast27.arguments",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.convert_arg": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.Tuple",
    "typed_ast.ast27.dump",
    "typed_ast.ast27.expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.extract_names": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "extract_names",
    "isinstance",
    "str",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.Tuple",
    "typed_ast.ast27.expr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.fail_arg": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.transform_args.get_type": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "int",
    "len",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.translate_expr_list": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "typed_ast.ast27.AST",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.translate_module_id": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.translate_stmt_list": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Statement",
    "typed_ast.ast27.AST",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.try_handler": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TryStmt",
    "typed_ast.ast27.ExceptHandler",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.stmt",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "super",
    "typed_ast.ast27.AST",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Assert": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.AssertStmt",
    "typed_ast.ast27.Assert"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Assign": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse2.with_line",
    "mypy.nodes.AssignmentStmt",
    "typed_ast.ast27.Assign"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Attribute": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.SuperExpr",
    "typed_ast.ast27.Attribute",
    "typed_ast.ast27.Call",
    "typed_ast.ast27.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_AugAssign": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.OperatorAssignmentStmt",
    "typed_ast.ast27.AugAssign"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_BinOp": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "RuntimeError",
    "mypy.fastparse2.with_line",
    "mypy.nodes.OpExpr",
    "str",
    "type",
    "typed_ast.ast27.BinOp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_BoolOp": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "RuntimeError",
    "group",
    "isinstance",
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.OpExpr",
    "str",
    "type",
    "typed_ast.ast27.And",
    "typed_ast.ast27.BoolOp",
    "typed_ast.ast27.Or"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_BoolOp.group": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "group",
    "len",
    "mypy.nodes.Expression",
    "mypy.nodes.OpExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Break": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.BreakStmt",
    "typed_ast.ast27.Break"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Call": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.CallExpr",
    "typed_ast.ast27.Call"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ClassDef": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ClassDef",
    "typed_ast.ast27.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Compare": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ComparisonExpr",
    "typed_ast.ast27.Compare"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Continue": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ContinueStmt",
    "typed_ast.ast27.Continue"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Delete": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.DelStmt",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.Delete"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Dict": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "list",
    "mypy.fastparse2.with_line",
    "mypy.nodes.DictExpr",
    "typed_ast.ast27.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_DictComp": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.DictionaryComprehension",
    "typed_ast.ast27.DictComp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Ellipsis": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr",
    "typed_ast.ast27.Ellipsis"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Exec": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ExecStmt",
    "typed_ast.ast27.Exec"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Expr": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ExpressionStmt",
    "typed_ast.ast27.Expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ExtSlice": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.ExtSlice"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_For": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse2.with_line",
    "mypy.nodes.ForStmt",
    "typed_ast.ast27.For"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_FunctionDef": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "SyntaxError",
    "any",
    "isinstance",
    "len",
    "mypy.fastparse.TypeConverter",
    "mypy.fastparse2.TYPE_COMMENT_SYNTAX_ERROR",
    "mypy.fastparse2._dummy_fallback",
    "mypy.fastparse2.is_no_type_check_decorator",
    "mypy.fastparse2.with_line",
    "mypy.messages.DUPLICATE_TYPE_SIGNATURES",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.Statement",
    "mypy.nodes.Var",
    "mypy.sharedparse.argument_elide_name",
    "mypy.sharedparse.special_function_elide_names",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.EllipsisType",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeOfAny.unannotated",
    "typed_ast.ast27.FunctionDef",
    "typed_ast.ast3.Ellipsis",
    "typed_ast.ast3.FunctionType",
    "typed_ast.ast3.parse",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_GeneratorExp": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.GeneratorExpr",
    "typed_ast.ast27.GeneratorExp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Global": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.GlobalDecl",
    "typed_ast.ast27.Global"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_If": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.IfStmt",
    "typed_ast.ast27.If"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_IfExp": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ConditionalExpr",
    "typed_ast.ast27.IfExp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Import": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.Import",
    "typed_ast.ast27.Import"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ImportFrom": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportBase",
    "mypy.nodes.ImportFrom",
    "typed_ast.ast27.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Index": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typed_ast.ast27.Index"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Lambda": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.LambdaExpr",
    "typed_ast.ast27.Lambda",
    "typed_ast.ast27.Return"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_List": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ListExpr",
    "typed_ast.ast27.List"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_ListComp": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ListComprehension",
    "typed_ast.ast27.GeneratorExp",
    "typed_ast.ast27.ListComp",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Module": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "typed_ast.ast27.Module"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Name": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.NameExpr",
    "typed_ast.ast27.Name"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Num": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "RuntimeError",
    "complex",
    "float",
    "int",
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.ComplexExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.UnaryExpr",
    "str",
    "type",
    "typed_ast.ast27.Num"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Pass": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.PassStmt",
    "typed_ast.ast27.Pass"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Print": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.PrintStmt",
    "typed_ast.ast27.Print"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Raise": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.RaiseStmt",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.Raise"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Repr": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.BackquoteExpr",
    "typed_ast.ast27.Repr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Return": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.ReturnStmt",
    "typed_ast.ast27.Return"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Set": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.SetExpr",
    "typed_ast.ast27.Set"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_SetComp": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.SetComprehension",
    "typed_ast.ast27.GeneratorExp",
    "typed_ast.ast27.SetComp",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Slice": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr",
    "typed_ast.ast27.Slice"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Str": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.Expression",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnicodeExpr",
    "str",
    "typed_ast.ast27.Str"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Subscript": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.IndexExpr",
    "typed_ast.ast27.Subscript"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_TryExcept": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.TryStmt",
    "typed_ast.ast27.TryExcept"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_TryFinally": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.fastparse2.with_line",
    "mypy.nodes.TryStmt",
    "typed_ast.ast27.TryExcept",
    "typed_ast.ast27.TryFinally"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Tuple": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.TupleExpr",
    "typed_ast.ast27.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_UnaryOp": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mypy.fastparse2.with_line",
    "mypy.nodes.UnaryExpr",
    "str",
    "type",
    "typed_ast.ast27.Invert",
    "typed_ast.ast27.Not",
    "typed_ast.ast27.UAdd",
    "typed_ast.ast27.USub",
    "typed_ast.ast27.UnaryOp"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_While": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.WhileStmt",
    "typed_ast.ast27.While"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_With": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "mypy.fastparse.parse_type_comment",
    "mypy.fastparse2.with_line",
    "mypy.nodes.WithStmt",
    "typed_ast.ast27.With"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.ASTConverter.visit_Yield": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "mypy.fastparse2.with_line",
    "mypy.nodes.YieldExpr",
    "typed_ast.ast27.Yield"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.fastparse2.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.fastparse2.Argument": {
  "data": {
   "shadows": "mypy.nodes.Argument"
  },
  "type": "import"
 },
 "mypy.fastparse2.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.fastparse2.BreakStmt": {
  "data": {
   "shadows": "mypy.nodes.BreakStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.fastparse2.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.fastparse2.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.fastparse2.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ContinueStmt": {
  "data": {
   "shadows": "mypy.nodes.ContinueStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.fastparse2.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse2.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.fastparse2.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.fastparse2.ExecStmt": {
  "data": {
   "shadows": "mypy.nodes.ExecStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.fastparse2.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.fastparse2.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.GlobalDecl": {
  "data": {
   "shadows": "mypy.nodes.GlobalDecl"
  },
  "type": "import"
 },
 "mypy.fastparse2.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.fastparse2.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.fastparse2.ImportBase": {
  "data": {
   "shadows": "mypy.nodes.ImportBase"
  },
  "type": "import"
 },
 "mypy.fastparse2.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.fastparse2.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.fastparse2.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse2.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.fastparse2.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.fastparse2.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.fastparse2.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.fastparse2.OverloadPart": {
  "data": {
   "shadows": "mypy.nodes.OverloadPart"
  },
  "type": "import"
 },
 "mypy.fastparse2.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.fastparse2.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.fastparse2.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.fastparse2.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.fastparse2.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Statement": {
  "data": {
   "shadows": "mypy.nodes.Statement"
  },
  "type": "import"
 },
 "mypy.fastparse2.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.T": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mypy.fastparse2.TYPE_COMMENT_AST_ERROR": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mypy.fastparse2.TYPE_COMMENT_SYNTAX_ERROR": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mypy.fastparse2.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.fastparse2.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.fastparse2.TypeConverter": {
  "data": {
   "shadows": "mypy.fastparse.TypeConverter"
  },
  "type": "import"
 },
 "mypy.fastparse2.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.fastparse2.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.fastparse2.U": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mypy.fastparse2.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.fastparse2.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.fastparse2.V": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mypy.fastparse2.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.fastparse2.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.fastparse2.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.fastparse2._dummy_fallback": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mypy.fastparse2.argument_elide_name": {
  "data": {
   "shadows": "mypy.sharedparse.argument_elide_name"
  },
  "type": "import"
 },
 "mypy.fastparse2.ast27": {
  "data": {
   "shadows": "typed_ast.ast27"
  },
  "type": "import"
 },
 "mypy.fastparse2.ast3": {
  "data": {
   "shadows": "typed_ast.ast3"
  },
  "type": "import"
 },
 "mypy.fastparse2.ast35": {
  "data": {
   "shadows": "typed_ast.ast35"
  },
  "type": "import"
 },
 "mypy.fastparse2.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.fastparse2.check_arg_names": {
  "data": {
   "shadows": "mypy.nodes.check_arg_names"
  },
  "type": "import"
 },
 "mypy.fastparse2.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.fastparse2.find": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bool",
    "f",
    "mypy.fastparse2.V",
    "typing.Callable",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.is_no_type_check_decorator": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typed_ast.ast27.Attribute",
    "typed_ast.ast27.Name",
    "typed_ast.ast27.expr"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.fastparse2.parse": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "SyntaxError",
    "bytes",
    "isinstance",
    "mypy.errors.Errors",
    "mypy.fastparse2.ASTConverter",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "set",
    "str",
    "typed_ast.ast27.parse",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.parse_type_comment": {
  "data": {
   "shadows": "mypy.fastparse.parse_type_comment"
  },
  "type": "import"
 },
 "mypy.fastparse2.special_function_elide_names": {
  "data": {
   "shadows": "mypy.sharedparse.special_function_elide_names"
  },
  "type": "import"
 },
 "mypy.fastparse2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.fastparse2.with_line": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mypy.fastparse2.T",
    "mypy.fastparse2.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.with_line.wrapper": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "mypy.fastparse2.T",
    "mypy.fastparse2.U"
   ]
  },
  "type": "function"
 },
 "mypy.fastparse2.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mypy.git": {
  "data": {
   "symbols_in_volume": [
    "mypy.git.MYPY"
   ]
  },
  "type": "module"
 },
 "mypy.git.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.git.MYPY": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mypy.git.chdir_prefix": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dir",
    "mypy.git.os",
    "mypy.git.pipes",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.error_submodule_not_initialized": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dir",
    "mypy.git.chdir_prefix",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.error_submodule_not_updated": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dir",
    "mypy.git.chdir_prefix",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.get_submodules": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dir",
    "mypy.git.subprocess",
    "mypy.git.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.git_revision": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bytes",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.has_extra_files": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.have_git": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "OSError",
    "bool",
    "mypy.git.subprocess"
   ]
  },
  "type": "function"
 },
 "mypy.git.is_dirty": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.is_git_repo": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bool",
    "dir",
    "mypy.git.os",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.git.pipes": {
  "data": {
   "shadows": "pipes"
  },
  "type": "import"
 },
 "mypy.git.submodule_revision": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bytes",
    "dir",
    "mypy.git.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.git.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.git.verify_git_integrity_or_abort": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "mypy.git.error_submodule_not_initialized",
    "mypy.git.error_submodule_not_updated",
    "mypy.git.get_submodules",
    "mypy.git.git_revision",
    "mypy.git.has_extra_files",
    "mypy.git.have_git",
    "mypy.git.is_dirty",
    "mypy.git.is_git_repo",
    "mypy.git.os",
    "mypy.git.submodule_revision",
    "mypy.git.sys",
    "mypy.git.warn_dirty",
    "mypy.git.warn_extra_files",
    "mypy.git.warn_no_git_executable",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.warn_dirty": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dir",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.warn_extra_files": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "dir",
    "mypy.git.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.git.warn_no_git_executable": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.git.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.indirection": {
  "data": {},
  "type": "module"
 },
 "mypy.indirection.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.indirection.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.indirection.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.indirection.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.indirection.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.indirection.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.indirection.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.indirection.SyntheticTypeVisitor": {
  "data": {
   "shadows": "mypy.types.SyntheticTypeVisitor"
  },
  "type": "import"
 },
 "mypy.indirection.TypeIndirectionVisitor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.types.SyntheticTypeVisitor",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "mypy.indirection.TypeIndirectionVisitor.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor._visit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mypy.types.Type",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.find_modules": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mypy.types.Type",
    "str",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_any": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_callable_argument": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.types.CallableArgument",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_callable_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.indirection.extract_module_names",
    "mypy.types.CallableType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_deleted_type": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_ellipsis_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.types.EllipsisType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_erased_type": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_forwardref_type": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_instance": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.util.split_module_names",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_none_type": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_overloaded": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.types.Overloaded",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_partial_type": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_star_type": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mypy.types.StarType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_tuple_type": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "mypy.types.TupleType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_type_list": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mypy.types.TypeList",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_type_type": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mypy.types.TypeType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_type_var": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mypy.types.TypeVarType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.types.TypedDictType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_unbound_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mypy.types.UnboundType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "mypy.types.UninhabitedType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.TypeIndirectionVisitor.visit_union_type": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.types.UnionType",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.indirection.extract_module_names": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mypy.util.split_module_names",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.indirection.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.indirection.split_module_names": {
  "data": {
   "shadows": "mypy.util.split_module_names"
  },
  "type": "import"
 },
 "mypy.indirection.types": {
  "data": {
   "shadows": "mypy.types"
  },
  "type": "import"
 },
 "mypy.infer": {
  "data": {},
  "type": "module"
 },
 "mypy.infer.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.infer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.infer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.infer.SUBTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUBTYPE_OF"
  },
  "type": "import"
 },
 "mypy.infer.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.infer.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.infer.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.infer.infer_constraints": {
  "data": {
   "shadows": "mypy.constraints.infer_constraints"
  },
  "type": "import"
 },
 "mypy.infer.infer_constraints_for_callable": {
  "data": {
   "shadows": "mypy.constraints.infer_constraints_for_callable"
  },
  "type": "import"
 },
 "mypy.infer.infer_function_type_arguments": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.constraints.infer_constraints_for_callable",
    "mypy.solve.solve_constraints",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.infer.infer_type_arguments": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mypy.constraints.SUBTYPE_OF",
    "mypy.constraints.infer_constraints",
    "mypy.solve.solve_constraints",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.infer.solve_constraints": {
  "data": {
   "shadows": "mypy.solve.solve_constraints"
  },
  "type": "import"
 },
 "mypy.literals": {
  "data": {
   "symbols_in_volume": [
    "mypy.literals._Hasher",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mypy.literals.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.literals.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.literals.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.literals.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.literals.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.literals.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.literals.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.literals.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.literals.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.literals.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.literals.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.literals.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.literals.EnumCallExpr": {
  "data": {
   "shadows": "mypy.nodes.EnumCallExpr"
  },
  "type": "import"
 },
 "mypy.literals.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.literals.ExpressionVisitor": {
  "data": {
   "shadows": "mypy.visitor.ExpressionVisitor"
  },
  "type": "import"
 },
 "mypy.literals.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.literals.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.literals.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.literals.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.literals.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.literals.Key": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "mypy.literals.LITERAL_NO": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_NO"
  },
  "type": "import"
 },
 "mypy.literals.LITERAL_TYPE": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_TYPE"
  },
  "type": "import"
 },
 "mypy.literals.LITERAL_YES": {
  "data": {
   "shadows": "mypy.nodes.LITERAL_YES"
  },
  "type": "import"
 },
 "mypy.literals.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.literals.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.literals.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.literals.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.literals.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.literals.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.literals.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.literals.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.literals.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.literals.PromoteExpr": {
  "data": {
   "shadows": "mypy.nodes.PromoteExpr"
  },
  "type": "import"
 },
 "mypy.literals.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.literals.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.literals.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.literals.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.literals.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.literals.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.literals.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.literals.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.literals.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.literals.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.literals.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.literals.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.literals.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.literals.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.literals.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.literals.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.literals.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.literals.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.literals.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.literals._Hasher": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.visitor.ExpressionVisitor",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "mypy.literals._Hasher.seq_expr": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "all",
    "mypy.literals.Key",
    "mypy.literals.literal",
    "mypy.literals.literal_hash",
    "mypy.nodes.LITERAL_YES",
    "mypy.nodes.ListExpr",
    "mypy.nodes.SetExpr",
    "mypy.nodes.TupleExpr",
    "str",
    "tuple",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit__promote_expr": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mypy.nodes.PromoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_await_expr": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_backquote_expr": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_bytes_expr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.BytesExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_call_expr": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_cast_expr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_comparison_expr": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.ComparisonExpr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_complex_expr": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.ComplexExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_conditional_expr": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_dict_expr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "all",
    "mypy.literals.Key",
    "mypy.literals.literal",
    "mypy.literals.literal_hash",
    "mypy.nodes.DictExpr",
    "mypy.nodes.LITERAL_YES",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_dictionary_comprehension": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_ellipsis": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_enum_call_expr": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mypy.nodes.EnumCallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_float_expr": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.FloatExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_generator_expr": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_index_expr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal",
    "mypy.literals.literal_hash",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.LITERAL_YES",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_int_expr": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.IntExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_lambda_expr": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_list_comprehension": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_list_expr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.ListExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_member_expr": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_name_expr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_namedtuple_expr": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mypy.nodes.NamedTupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_newtype_expr": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "mypy.nodes.NewTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_op_expr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.OpExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_reveal_type_expr": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_set_comprehension": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_set_expr": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.SetExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_slice_expr": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_star_expr": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_str_expr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.StrExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_super_expr": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.nodes.SuperExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_temp_node": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "mypy.nodes.TempNode"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_tuple_expr": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.TupleExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_type_alias_expr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mypy.nodes.TypeAliasExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_type_application": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_type_var_expr": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_typeddict_expr": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mypy.nodes.TypedDictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_unary_expr": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.literals.literal_hash",
    "mypy.nodes.UnaryExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_unicode_expr": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.UnicodeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_yield_expr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._Hasher.visit_yield_from_expr": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals._hasher": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "mypy.literals.literal": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "min",
    "mypy.literals.literal_hash",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.ComplexExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.LITERAL_NO",
    "mypy.nodes.LITERAL_TYPE",
    "mypy.nodes.LITERAL_YES",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.OpExpr",
    "mypy.nodes.StarExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnaryExpr",
    "mypy.nodes.UnicodeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.literals.literal_hash": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mypy.literals.Key",
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.literals.subkeys": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "mypy.literals.Key",
    "tuple",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.maptype": {
  "data": {},
  "type": "module"
 },
 "mypy.maptype.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.maptype.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.maptype.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.maptype.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.maptype.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.maptype.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.maptype.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.maptype.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.maptype.class_derivation_paths": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.maptype.instance_to_type_environment": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.map_instance_to_direct_supertypes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.expandtype.expand_type",
    "mypy.maptype.instance_to_type_environment",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.unannotated",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.map_instance_to_supertype": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mypy.maptype.map_instance_to_supertypes",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.maptype.map_instance_to_supertypes": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "mypy.maptype.class_derivation_paths",
    "mypy.maptype.map_instance_to_direct_supertypes",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.from_error",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.meet": {
  "data": {},
  "type": "module"
 },
 "mypy.meet.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.meet.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.meet.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.meet.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.meet.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.meet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.meet.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.meet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.meet.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.meet.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.meet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.meet.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.meet.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.meet.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.meet.TypeMeetVisitor": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.meet.TypeMeetVisitor.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.default": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.meet": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "mypy.meet.meet_types",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_any": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_callable_type": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "mypy.join.combine_similar_callables",
    "mypy.join.is_similar_callables",
    "mypy.meet.meet_similar_callables",
    "mypy.subtypes.is_equivalent",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_deleted_type": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.DeletedType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_erased_type": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "mypy.types.ErasedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_instance": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.meet.meet_types",
    "mypy.subtypes.is_subtype",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.UninhabitedType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_none_type": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_partial_type": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_tuple_type": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "isinstance",
    "mypy.meet.meet_types",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_type_type": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_type_var": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "list",
    "mypy.join.join_type_list",
    "mypy.subtypes.is_equivalent",
    "mypy.types.Type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_unbound_type": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeMeetVisitor.visit_union_type": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "isinstance",
    "mypy.meet.meet_types",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.meet.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.meet.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.meet.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.meet.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.meet.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.meet.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.meet.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.meet.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.meet.adjust_tuple": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.meet.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.meet.combine_similar_callables": {
  "data": {
   "shadows": "mypy.join.combine_similar_callables"
  },
  "type": "import"
 },
 "mypy.meet.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.meet.is_equivalent": {
  "data": {
   "shadows": "mypy.subtypes.is_equivalent"
  },
  "type": "import"
 },
 "mypy.meet.is_overlapping_tuples": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "mypy.meet.adjust_tuple",
    "mypy.meet.is_overlapping_types",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.meet.is_overlapping_types": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.meet.is_overlapping_tuples",
    "mypy.subtypes.is_protocol_implementation",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.is_protocol_implementation": {
  "data": {
   "shadows": "mypy.subtypes.is_protocol_implementation"
  },
  "type": "import"
 },
 "mypy.meet.is_similar_callables": {
  "data": {
   "shadows": "mypy.join.is_similar_callables"
  },
  "type": "import"
 },
 "mypy.meet.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.meet.join_type_list": {
  "data": {
   "shadows": "mypy.join.join_type_list"
  },
  "type": "import"
 },
 "mypy.meet.join_types": {
  "data": {
   "shadows": "mypy.join.join_types"
  },
  "type": "import"
 },
 "mypy.meet.meet_similar_callables": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "len",
    "mypy.join.join_types",
    "mypy.meet.meet_types",
    "mypy.types.CallableType",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.meet.meet_types": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "mypy.meet.TypeMeetVisitor",
    "mypy.types.AnyType",
    "mypy.types.ErasedType",
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.meet.narrow_declared_type": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.meet.is_overlapping_types",
    "mypy.meet.meet_types",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.myunit.__main__": {
  "data": {
   "symbols_in_volume": [
    "mypy.myunit.main"
   ]
  },
  "type": "module"
 },
 "mypy.myunit.__main__.main": {
  "data": {
   "shadows": "mypy.myunit.main"
  },
  "type": "import"
 },
 "mypy.options": {
  "data": {},
  "type": "module"
 },
 "mypy.options.BuildType": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "mypy.options.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.options.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.options.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.options.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "mypy.options.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.options.Options": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mypy.options.Options.__eq__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.defaults.CACHE_DIR",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.options.BuildType",
    "mypy.options.sys"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.__ne__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.__repr__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "mypy.options.pprint",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.clone_for_module": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "mypy.options.Options",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.module_matches_pattern": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "mypy.options.Options.select_options_affecting_cache": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "mypy.options.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.options.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "mypy.options.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.options.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.options.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.options.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mypy.options.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "mypy.options.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.parse": {
  "data": {},
  "type": "module"
 },
 "mypy.parse.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.parse.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.parse.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.parse.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.parse.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.parse.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.parse.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.parse.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.parse.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.parse.mypy.fastparse": {
  "data": {
   "shadows": "mypy.fastparse"
  },
  "type": "import"
 },
 "mypy.parse.mypy.fastparse2": {
  "data": {
   "shadows": "mypy.fastparse2"
  },
  "type": "import"
 },
 "mypy.parse.parse": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "bytes",
    "mypy.errors.Errors",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.plugin": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.plugin.AnalyzerPluginInterface",
    "mypy.plugin.CheckerPluginInterface",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.UnboundType",
    "typing.List",
    "typing.NamedTuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.plugin.AnalyzeTypeContext": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mypy.plugin.AnalyzerPluginInterface": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "mypy.plugin.AnalyzerPluginInterface.analyze_callable_args": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "int",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnalyzerPluginInterface.analyze_type": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnalyzerPluginInterface.fail": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnalyzerPluginInterface.named_type": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.plugin.AttributeContext": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mypy.plugin.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.plugin.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.plugin.ChainedPlugin": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mypy.plugin.Plugin"
   ]
  },
  "type": "class"
 },
 "mypy.plugin.ChainedPlugin.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin._find_hook": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "lookup",
    "mypy.plugin.Plugin",
    "mypy.plugin.T",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_attribute_hook": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.plugin.AttributeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_function_hook": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mypy.plugin.FunctionContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_method_hook": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_method_signature_hook": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.ChainedPlugin.get_type_analyze_hook": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mypy.plugin.AnalyzeTypeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.CheckerPluginInterface": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "mypy.plugin.CheckerPluginInterface.named_generic_type": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.plugin.DefaultPlugin": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mypy.plugin.Plugin"
   ]
  },
  "type": "class"
 },
 "mypy.plugin.DefaultPlugin.get_function_hook": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mypy.plugin.FunctionContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.DefaultPlugin.get_method_hook": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.DefaultPlugin.get_method_signature_hook": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.plugin.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.plugin.FunctionContext": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mypy.plugin.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.plugin.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.plugin.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.plugin.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.plugin.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.plugin.MethodContext": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "mypy.plugin.MethodSigContext": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mypy.plugin.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.plugin.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.plugin.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.plugin.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.plugin.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.plugin.Plugin": {
  "data": {
   "lineno": 102
  },
  "type": "class"
 },
 "mypy.plugin.Plugin.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_attribute_hook": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.plugin.AttributeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_function_hook": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mypy.plugin.FunctionContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_method_hook": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_method_signature_hook": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.Plugin.get_type_analyze_hook": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mypy.plugin.AnalyzeTypeContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.plugin.T": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "mypy.plugin.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.plugin.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.plugin.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.plugin.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.plugin.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.plugin.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.plugin.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.plugin.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.plugin.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.plugin.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.plugin.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.plugin.contextmanager_callback": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.plugin.FunctionContext",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.int_pow_callback": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.IntExpr",
    "mypy.nodes.UnaryExpr",
    "mypy.plugin.MethodContext",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.open_callback": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.StrExpr",
    "mypy.plugin.FunctionContext",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.typed_dict_get_callback": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.DictExpr",
    "mypy.nodes.StrExpr",
    "mypy.plugin.MethodContext",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType.make_simplified_union",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.plugin.typed_dict_get_signature_callback": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.DictExpr",
    "mypy.nodes.StrExpr",
    "mypy.plugin.MethodSigContext",
    "mypy.types.CallableType",
    "mypy.types.TypeVarType",
    "mypy.types.TypedDictType",
    "mypy.types.UnionType.make_simplified_union",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.report": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mypy.report.AnyExpressionsReporter",
    "mypy.report.CoberturaXmlReporter",
    "mypy.report.LineCountReporter",
    "mypy.report.LineCoverageReporter",
    "mypy.report.MemoryXmlReporter",
    "mypy.report.XmlReporter",
    "mypy.report.XsltHtmlReporter",
    "mypy.report.XsltTxtReporter",
    "mypy.report.alias_reporter",
    "mypy.report.collections",
    "mypy.report.register_reporter",
    "mypy.types.TypeOfAny.explicit",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.from_unimported_type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeOfAny.unannotated"
   ]
  },
  "type": "module"
 },
 "mypy.report.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mypy.report.AbstractReporter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mypy.report.AbstractReporter.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.AbstractReporter.on_file": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.AbstractReporter.on_finish": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mypy.report.AbstractXmlReporter": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.AbstractXmlReporter.__init__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "mypy.report.MemoryXmlReporter",
    "mypy.report.Reports",
    "str",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.report.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.report.AnyExpressionsReporter": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.AnyExpressionsReporter.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "mypy.stats.ensure_dir_exists",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter._report_any_exprs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "float",
    "sorted",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter._report_types_of_anys": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "list",
    "mypy.report.collections",
    "mypy.report.type_of_any_name_map",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter._write_out_report": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "max",
    "mypy.report.itertools",
    "mypy.report.os",
    "open",
    "str",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter.on_file": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "list",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.stats.StatisticsVisitor",
    "mypy.stats.TYPE_UNANALYZED",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.AnyExpressionsReporter.on_finish": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "mypy.report.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.report.CoberturaPackage": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mypy.report.CoberturaPackage.__init__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaPackage.add_packages": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "lxml.etree.SubElement",
    "operator.attrgetter",
    "sorted",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaPackage.as_xml": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "lxml.etree.Element",
    "lxml.etree.SubElement",
    "mypy.report.get_line_rate",
    "sorted",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaXmlReporter": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.CoberturaXmlReporter.__init__": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "int",
    "lxml.etree.Element",
    "lxml.etree.ElementTree",
    "mypy.report.CoberturaPackage",
    "mypy.report.Reports",
    "mypy.report.time",
    "mypy.version.__version__",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaXmlReporter.on_file": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "enumerate",
    "lxml.etree.Element",
    "lxml.etree.SubElement",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.CoberturaPackage",
    "mypy.report.FileInfo",
    "mypy.report.get_line_rate",
    "mypy.report.os",
    "mypy.report.tokenize",
    "mypy.stats.StatisticsVisitor",
    "mypy.stats.TYPE_ANY",
    "mypy.stats.TYPE_EMPTY",
    "mypy.stats.TYPE_IMPRECISE",
    "mypy.stats.precision_names",
    "mypy.types.Type",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.CoberturaXmlReporter.on_finish": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "lxml.etree.SubElement",
    "mypy.report.get_line_rate",
    "mypy.report.os",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.report.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.report.FileInfo": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "mypy.report.FileInfo.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "len",
    "mypy.stats.precision_names",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.FileInfo.attrib": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "mypy.stats.precision_names",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.report.FileInfo.total": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "mypy.report.FuncCounterVisitor": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.report.FuncCounterVisitor.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.FuncCounterVisitor.visit_func_def": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.report.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.report.LXML_INSTALLED": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mypy.report.LineCountReporter": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.LineCountReporter.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "mypy.stats.ensure_dir_exists",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCountReporter.on_file": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.FuncCounterVisitor",
    "mypy.types.Type",
    "open",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCountReporter.on_finish": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mypy.report.os",
    "open",
    "range",
    "sorted",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageReporter": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.LineCoverageReporter.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mypy.report.Reports",
    "mypy.stats.ensure_dir_exists",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageReporter.on_file": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "enumerate",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.LineCoverageVisitor",
    "mypy.report.os",
    "mypy.types.Type",
    "open",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageReporter.on_finish": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "mypy.report.json",
    "mypy.report.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageVisitor": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.report.LineCoverageVisitor.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageVisitor.indentation_level": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "int",
    "list",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.report.LineCoverageVisitor.visit_func_def": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.FuncDef",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.report.MemoryXmlReporter": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "mypy.report.AbstractReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.MemoryXmlReporter.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "lxml.etree.XMLSchema",
    "lxml.etree.parse",
    "mypy.report.Reports",
    "mypy.report.os",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.MemoryXmlReporter._get_any_info_for_line": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "int",
    "mypy.report.collections",
    "mypy.report.type_of_any_name_map",
    "mypy.stats.StatisticsVisitor",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.MemoryXmlReporter.on_file": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "enumerate",
    "lxml.etree.Element",
    "lxml.etree.ElementTree",
    "lxml.etree.ProcessingInstruction",
    "lxml.etree.SubElement",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.FileInfo",
    "mypy.report.os",
    "mypy.report.tokenize",
    "mypy.stats.StatisticsVisitor",
    "mypy.stats.TYPE_EMPTY",
    "mypy.stats.is_special_module",
    "mypy.stats.precision_names",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mypy.report.MemoryXmlReporter.on_finish": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "lxml.etree.Element",
    "lxml.etree.ElementTree",
    "lxml.etree.ProcessingInstruction",
    "lxml.etree.SubElement",
    "mypy.report.os",
    "sorted",
    "str",
    "urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mypy.report.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.report.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.report.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.report.Reports": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "mypy.report.Reports.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.Reports.add_report": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "mypy.report.LXML_INSTALLED",
    "mypy.report.reporter_classes",
    "mypy.report.sys",
    "print",
    "reporter_cls",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.Reports.file": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.Reports.finish": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mypy.report.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.report.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.report.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.report.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.report.XmlReporter": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "mypy.report.AbstractXmlReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.XmlReporter.on_file": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.os",
    "mypy.stats.ensure_dir_exists",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.XmlReporter.on_finish": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "mypy.report.os",
    "mypy.report.shutil",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltHtmlReporter": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "mypy.report.AbstractXmlReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.XsltHtmlReporter.__init__": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "lxml.etree.XSLT",
    "lxml.etree.XSLT.strparam",
    "lxml.etree.parse",
    "mypy.report.Reports",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltHtmlReporter.on_file": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "bytes",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.report.os",
    "mypy.stats.ensure_dir_exists",
    "mypy.types.Type",
    "open",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltHtmlReporter.on_finish": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "bytes",
    "mypy.report.os",
    "mypy.report.shutil",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltTxtReporter": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "mypy.report.AbstractXmlReporter"
   ]
  },
  "type": "class"
 },
 "mypy.report.XsltTxtReporter.__init__": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "lxml.etree.XSLT",
    "lxml.etree.parse",
    "mypy.report.Reports",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltTxtReporter.on_file": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.types.Type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.report.XsltTxtReporter.on_finish": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "bytes",
    "mypy.report.os",
    "mypy.stats.ensure_dir_exists",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.report.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.report.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.report.alias_reporter": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.report.reporter_classes",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "mypy.report.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.report.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mypy.report.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "mypy.report.get_line_rate": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.report.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mypy.report.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.report.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.report.pathname2url": {
  "data": {
   "shadows": "urllib.request.pathname2url"
  },
  "type": "import"
 },
 "mypy.report.register_reporter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool",
    "mypy.report.AbstractReporter",
    "mypy.report.Reports",
    "mypy.report.reporter_classes",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "mypy.report.reporter_classes": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mypy.report.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.report.stats": {
  "data": {
   "shadows": "mypy.stats"
  },
  "type": "import"
 },
 "mypy.report.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.report.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.report.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "mypy.report.type_of_any_name_map": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mypy.report.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.sametypes": {
  "data": {},
  "type": "module"
 },
 "mypy.sametypes.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.sametypes.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.sametypes.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.sametypes.ErasedType": {
  "data": {
   "shadows": "mypy.types.ErasedType"
  },
  "type": "import"
 },
 "mypy.sametypes.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.sametypes.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.sametypes.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.sametypes.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.sametypes.SameTypeVisitor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.sametypes.SameTypeVisitor.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_any": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_callable_type": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.sametypes.is_same_types",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_deleted_type": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_erased_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.ErasedType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_instance": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_types",
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_none_type": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_overloaded": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_types",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_partial_type": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_tuple_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_types",
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_type_type": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_type_var": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_typeddict_type": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_unbound_type": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_uninhabited_type": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.SameTypeVisitor.visit_union_type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "mypy.sametypes.is_same_type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.sametypes.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.sametypes.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.sametypes.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.sametypes.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.sametypes.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.sametypes.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.sametypes.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.sametypes.is_same_type": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.sametypes.SameTypeVisitor",
    "mypy.sametypes.simplify_union",
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.is_same_types": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "len",
    "mypy.sametypes.is_same_type",
    "mypy.types.Type",
    "range",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.sametypes.simplify_union": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.UnionType.make_simplified_union"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1": {
  "data": {},
  "type": "module"
 },
 "mypy.semanal_pass1.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.LDEF": {
  "data": {
   "shadows": "mypy.nodes.LDEF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Lvalue": {
  "data": {
   "shadows": "mypy.nodes.Lvalue"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.MODULE_REF": {
  "data": {
   "shadows": "mypy.nodes.MODULE_REF"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mypy.semanal.SemanticAnalyzerPass2"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.add_symbol": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.MODULE_REF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.sametypes.is_same_type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.analyze_lvalue": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Lvalue"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.kind_by_scope": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "int",
    "mypy.nodes.GDEF",
    "mypy.nodes.LDEF",
    "mypy.nodes.MDEF"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.process_nested_classes": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.IfStmt",
    "mypy.nodes.Import",
    "mypy.nodes.ImportAll",
    "mypy.nodes.ImportFrom",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_assignment_stmt": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_block": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_class_def": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.LDEF",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_decorator": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "mypy.nodes.Decorator",
    "mypy.nodes.SymbolTableNode"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mypy.experiments.strict_optional_set",
    "mypy.nodes.GDEF",
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "mypy.nodes.implicit_module_attrs.items",
    "mypy.options.Options",
    "mypy.types.AnyType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "mypy.types.UnionType",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_for_stmt": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_func_def": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_if_stmt": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "mypy.nodes.IfStmt",
    "mypy.semanal.infer_reachability_of_if_statement"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_import": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "id",
    "mypy.nodes.Import",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_import_all": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_import_from": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_overloaded_func_def": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.GDEF",
    "mypy.nodes.OverloadedFuncDef",
    "mypy.nodes.SymbolTableNode"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_try_stmt": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "mypy.nodes.TryStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_while_stmt": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass1.visit_with_stmt": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mypy.nodes.WithStmt"
   ]
  },
  "type": "function"
 },
 "mypy.semanal_pass1.SemanticAnalyzerPass2": {
  "data": {
   "shadows": "mypy.semanal.SemanticAnalyzerPass2"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.implicit_module_attrs": {
  "data": {
   "shadows": "mypy.nodes.implicit_module_attrs"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.infer_reachability_of_if_statement": {
  "data": {
   "shadows": "mypy.semanal.infer_reachability_of_if_statement"
  },
  "type": "import"
 },
 "mypy.semanal_pass1.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.server": {
  "data": {},
  "type": "module"
 },
 "mypy.server.aststrip": {
  "data": {},
  "type": "module"
 },
 "mypy.server.aststrip.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.server.aststrip.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.server.aststrip.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.server.aststrip.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.server.aststrip.GDEF": {
  "data": {
   "shadows": "mypy.nodes.GDEF"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.server.aststrip.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.server.aststrip.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.server.aststrip.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.server.aststrip.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.server.aststrip.NodeStripVisitor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.aststrip.NodeStripVisitor.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.enter_class": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "mypy.server.aststrip.contextlib",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.is_duplicate_attribute_def": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "any",
    "bool",
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.strip_class_body": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.strip_file_top_level": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.strip_ref_expr": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.nodes.RefExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_func_def": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "mypy.server.aststrip.nothing",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_import": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.nodes.Import",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_import_from": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom",
    "mypy.nodes.UNBOUND_IMPORTED"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_member_expr": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.NodeStripVisitor.visit_name_expr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.nodes.GDEF",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.aststrip.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.server.aststrip.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.server.aststrip.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.server.aststrip.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.server.aststrip.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.server.aststrip.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.server.aststrip.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "mypy.server.aststrip.is_self_member_ref": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.nothing": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mypy.server.aststrip.contextlib",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.server.aststrip.strip_target": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.FuncItem",
    "mypy.nodes.MypyFile",
    "mypy.server.aststrip.NodeStripVisitor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr": {
  "data": {},
  "type": "module"
 },
 "mypy.server.subexpr.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.server.subexpr.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.server.subexpr.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.server.subexpr.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.server.subexpr.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.SubexpressionFinder": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.server.subexpr.SubexpressionFinder.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder._visit_leaf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.add": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_await_expr": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_backquote_expr": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_call_expr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_cast_expr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_comparison_expr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_conditional_expr": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_dict_expr": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mypy.nodes.DictExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_dictionary_comprehension": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_generator_expr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_index_expr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_lambda_expr": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_list_comprehension": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_list_expr": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_member_expr": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_op_expr": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_reveal_type_expr": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_set_comprehension": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_set_expr": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mypy.nodes.SetExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_slice_expr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_star_expr": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_tuple_expr": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_type_application": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_unary_expr": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_yield_expr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.SubexpressionFinder.visit_yield_from_expr": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.server.subexpr.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.server.subexpr.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.server.subexpr.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.server.subexpr.get_subexpressions": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.Node",
    "mypy.server.subexpr.SubexpressionFinder",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.server.target": {
  "data": {},
  "type": "module"
 },
 "mypy.server.target.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.server.target.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.server.target.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.server.target.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.server.target.module_prefix": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mypy.server.target.split_target",
    "str",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.server.target.split_target": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "str",
    "typing.Iterable",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.server.trigger": {
  "data": {},
  "type": "module"
 },
 "mypy.server.trigger.make_trigger": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.sharedparse": {
  "data": {
   "symbols_in_volume": [
    "mypy.sharedparse.MAGIC_METHODS",
    "mypy.sharedparse.MAGIC_METHODS_ALLOWING_KWARGS"
   ]
  },
  "type": "module"
 },
 "mypy.sharedparse.MAGIC_METHODS": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mypy.sharedparse.MAGIC_METHODS_ALLOWING_KWARGS": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "mypy.sharedparse.MAGIC_METHODS_POS_ARGS_ONLY": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "mypy.sharedparse.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.sharedparse.argument_elide_name": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.sharedparse.special_function_elide_names": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool",
    "mypy.sharedparse.MAGIC_METHODS_POS_ARGS_ONLY",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.solve": {
  "data": {},
  "type": "module"
 },
 "mypy.solve.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.solve.Constraint": {
  "data": {
   "shadows": "mypy.constraints.Constraint"
  },
  "type": "import"
 },
 "mypy.solve.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.solve.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.solve.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.solve.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.solve.SUPERTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUPERTYPE_OF"
  },
  "type": "import"
 },
 "mypy.solve.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.solve.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.solve.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.solve.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.solve.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.solve.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.solve.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.solve.join_types": {
  "data": {
   "shadows": "mypy.join.join_types"
  },
  "type": "import"
 },
 "mypy.solve.meet_types": {
  "data": {
   "shadows": "mypy.meet.meet_types"
  },
  "type": "import"
 },
 "mypy.solve.solve_constraints": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "collections.defaultdict",
    "isinstance",
    "list",
    "mypy.constraints.Constraint",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.join.join_types",
    "mypy.meet.meet_types",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarId",
    "mypy.types.UninhabitedType",
    "typing.List",
    "typing.Optional",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.stats": {
  "data": {},
  "type": "module"
 },
 "mypy.stats.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.stats.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.stats.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.stats.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.stats.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.stats.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.stats.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mypy.stats.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.stats.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.stats.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.stats.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.stats.HasAnyQuery": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.stats.HasAnyQuery.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.HasAnyQuery.visit_any": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.stats.HasAnyQuery.visit_instance": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Instance",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.HasAnyQuery2": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "mypy.stats.HasAnyQuery"
   ]
  },
  "type": "class"
 },
 "mypy.stats.HasAnyQuery2.visit_callable_type": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "bool",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.stats.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.stats.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.stats.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stats.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.stats.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.stats.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.stats.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.stats.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stats.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.stats.StatisticsVisitor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.stats.StatisticsVisitor.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "collections.Counter",
    "mypy.nodes.Expression",
    "mypy.traverser.TraverserVisitor.__init__",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.log": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.process_node": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.record_line": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "max",
    "mypy.stats.TYPE_EMPTY"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.type": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "mypy.stats.TYPE_ANY",
    "mypy.stats.TYPE_IMPRECISE",
    "mypy.stats.TYPE_PRECISE",
    "mypy.stats.TYPE_UNANALYZED",
    "mypy.stats.is_complex",
    "mypy.stats.is_imprecise",
    "mypy.stats.is_imprecise2",
    "mypy.typeanal.collect_all_inner_types",
    "mypy.types.AnyType",
    "mypy.types.FunctionLike",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_another_any",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TupleExpr",
    "mypy.nodes.TypeVarExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_call_expr": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_class_def": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_func_def": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.FuncDef",
    "mypy.stats.TYPE_ANY",
    "mypy.types.CallableType",
    "print",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_index_expr": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_member_expr": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_name_expr": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_op_expr": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_type_application": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_unary_expr": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stats.StatisticsVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stats.TYPE_ANY": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_EMPTY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_IMPRECISE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_PRECISE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mypy.stats.TYPE_UNANALYZED": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mypy.stats.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.stats.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stats.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.stats.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.stats.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.stats.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.stats.TypeQuery": {
  "data": {
   "shadows": "mypy.types.TypeQuery"
  },
  "type": "import"
 },
 "mypy.stats.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.stats.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.stats.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.stats.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.stats.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "mypy.stats.collect_all_inner_types": {
  "data": {
   "shadows": "mypy.typeanal.collect_all_inner_types"
  },
  "type": "import"
 },
 "mypy.stats.dump_type_stats": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.stats.StatisticsVisitor",
    "mypy.stats.is_special_module",
    "mypy.types.Type",
    "print",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stats.ensure_dir_exists": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_complex": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.stats.is_generic",
    "mypy.types.FunctionLike",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_generic": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_imprecise": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "bool",
    "mypy.stats.HasAnyQuery",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_imprecise2": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "bool",
    "mypy.stats.HasAnyQuery2",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.stats.is_special_module": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stats.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.stats.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.stats.precision_names": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mypy.stats.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.strconv": {
  "data": {},
  "type": "module"
 },
 "mypy.strconv.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.strconv.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.strconv.IdMapper": {
  "data": {
   "shadows": "mypy.util.IdMapper"
  },
  "type": "import"
 },
 "mypy.strconv.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.strconv.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.strconv.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.strconv.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.strconv.StrConv": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor",
    "str"
   ]
  },
  "type": "class"
 },
 "mypy.strconv.StrConv.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bool",
    "mypy.util.IdMapper"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.dump": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mypy.strconv.dump_tagged",
    "mypy.util.short_type",
    "object",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.format_id": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.func_helper": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.get_id": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "object",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.pretty_name": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "bool",
    "id",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.str_repr": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.strconv.re",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit__promote_expr": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_assert_stmt": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_assignment_stmt": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_await_expr": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_backquote_expr": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_block": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_break_stmt": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_bytes_expr": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_call_expr": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_cast_expr": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_class_def": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_comparison_expr": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_complex_expr": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_conditional_expr": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_continue_stmt": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_decorator": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_del_stmt": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_dict_expr": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_dictionary_comprehension": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_ellipsis": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_enum_call_expr": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_exec_stmt": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_expression_stmt": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_float_expr": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_for_stmt": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_func_def": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_generator_expr": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "any",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_global_decl": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_if_stmt": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_import": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "id",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_import_all": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_import_from": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_index_expr": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_int_expr": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_lambda_expr": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_list_comprehension": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_list_expr": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_member_expr": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_mypy_file": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.strconv.os",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_name_expr": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "mypy.util.short_type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_namedtuple_expr": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_newtype_expr": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_nonlocal_decl": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_op_expr": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_overloaded_func_def": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_pass_stmt": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_print_stmt": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_raise_stmt": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_return_stmt": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_reveal_type_expr": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_set_comprehension": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_set_expr": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_slice_expr": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_star_expr": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_str_expr": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_super_expr": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_temp_node": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_try_stmt": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_tuple_expr": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_type_alias_expr": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_type_application": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_type_var_expr": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_typeddict_expr": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_unary_expr": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_unicode_expr": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_var": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_while_stmt": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_with_stmt": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_yield_expr": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.StrConv.visit_yield_from_expr": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.strconv.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.strconv.TypeStrVisitor": {
  "data": {
   "shadows": "mypy.types.TypeStrVisitor"
  },
  "type": "import"
 },
 "mypy.strconv.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.strconv.dump_tagged": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "mypy.strconv.indent",
    "mypy.types.Type",
    "mypy.types.TypeStrVisitor",
    "object",
    "str",
    "tuple",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.indent": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.strconv.mypy.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.strconv.mypy.types": {
  "data": {
   "shadows": "mypy.types"
  },
  "type": "import"
 },
 "mypy.strconv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.strconv.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.strconv.short_type": {
  "data": {
   "shadows": "mypy.util.short_type"
  },
  "type": "import"
 },
 "mypy.stubgen": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "int",
    "mypy.options.Options",
    "mypy.stubgen.main",
    "str",
    "typing.List",
    "typing.NamedTuple",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mypy.stubgen.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.stubgen.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.stubgen.AliasPrinter": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor",
    "str"
   ]
  },
  "type": "class"
 },
 "mypy.stubgen.AliasPrinter.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_call_expr": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.CallExpr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_ellipsis": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_index_expr": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_list_expr": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_name_expr": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_str_expr": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mypy.nodes.StrExpr",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AliasPrinter.visit_tuple_expr": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AnnotationPrinter": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mypy.types.TypeStrVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.stubgen.AnnotationPrinter.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AnnotationPrinter.visit_none_type": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.AnnotationPrinter.visit_unbound_type": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "mypy.types.UnboundType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.stubgen.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.stubgen.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.stubgen.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.CLASS": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "mypy.stubgen.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.stubgen.CantImport": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.stubgen.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.stubgen.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.stubgen.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.stubgen.EMPTY": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "mypy.stubgen.EMPTY_CLASS": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "mypy.stubgen.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.stubgen.FUNC": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "mypy.stubgen.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "mypy.stubgen.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.stubgen.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.stubgen.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.stubgen.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.stubgen.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.stubgen.ImportTracker": {
  "data": {
   "lineno": 302
  },
  "type": "class"
 },
 "mypy.stubgen.ImportTracker.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.add_import": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.add_import_from": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.import_lines": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.reexport": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.ImportTracker.require_name": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.stubgen.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.stubgen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stubgen.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "mypy.stubgen.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.stubgen.MypyOptions": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.stubgen.NOT_IN_ALL": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "mypy.stubgen.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.stubgen.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.stubgen.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.stubgen.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stubgen.Options": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mypy.stubgen.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.stubgen.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.StubGenerator": {
  "data": {
   "lineno": 398
  },
  "type": "class"
 },
 "mypy.stubgen.StubGenerator.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.ImportTracker",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.add": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.add_import_line": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.add_typing_import": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.get_base_types": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ClassDef",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.stubgen.AliasPrinter",
    "mypy.stubgen.get_qualified_name",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.get_init": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.TempNode",
    "mypy.types.Type",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.get_str_type_of_node": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.BytesExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.FloatExpr",
    "mypy.nodes.IntExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.UnaryExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_namedtuple": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_not_in_all": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_private_name": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_recorded_name": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_top_level": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.is_type_expression": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.CallExpr",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.output": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.print_annotation": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "mypy.stubgen.AnnotationPrinter",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.process_namedtuple": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "mypy.stubgen.CLASS",
    "mypy.stubgen.EMPTY",
    "repr",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.process_typealias": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "mypy.nodes.NameExpr",
    "mypy.stubgen.AliasPrinter"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.record_name": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_assignment_stmt": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ListExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.TupleExpr",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.VAR",
    "mypy.types.TupleType",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_class_def": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.ClassDef",
    "mypy.stubgen.CLASS",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.EMPTY_CLASS",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_decorator": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_func_def": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.FuncDef",
    "mypy.stubgen.EMPTY",
    "mypy.stubgen.FUNC",
    "mypy.stubgen.find_self_initializers",
    "mypy.types.AnyType",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_if_stmt": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.ComparisonExpr",
    "mypy.nodes.IfStmt",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_import": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "id",
    "id.split",
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_import_all": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_import_from": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.StubGenerator.visit_mypy_file": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "mypy.stubgen.EMPTY",
    "sorted",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.stubgen.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stubgen.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.stubgen.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.stubgen.TypeStrVisitor": {
  "data": {
   "shadows": "mypy.types.TypeStrVisitor"
  },
  "type": "import"
 },
 "mypy.stubgen.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.stubgen.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.stubgen.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.stubgen.VAR": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "mypy.stubgen.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.stubgen.default_python2_interpreter": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "SystemExit",
    "mypy.stubgen.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.stubgen.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.stubgen.find_module_path_and_all": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "bool",
    "getattr",
    "int",
    "mypy.stubgen.CantImport",
    "mypy.stubgen.importlib",
    "mypy.stubgen.load_python_module_info",
    "mypy.stubutil.is_c_module",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.find_self_initializers": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "SelfTraverser",
    "mypy.nodes.Expression",
    "mypy.nodes.FuncBase",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.find_self_initializers.SelfTraverser": {
  "data": {
   "lineno": 805
  },
  "type": "class"
 },
 "mypy.stubgen.find_self_initializers.SelfTraverser.visit_assignment_stmt": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.find_unique_signatures": {
  "data": {
   "shadows": "mypy.stubgenc.find_unique_signatures"
  },
  "type": "import"
 },
 "mypy.stubgen.generate_stub": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.options.Options",
    "mypy.stubgen.StubGenerator",
    "mypy.stubgen.sys",
    "mypy.stubutil.write_header",
    "open",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.generate_stub_for_c_module": {
  "data": {
   "shadows": "mypy.stubgenc.generate_stub_for_c_module"
  },
  "type": "import"
 },
 "mypy.stubgen.generate_stub_for_module": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bool",
    "int",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.stubgen.CantImport",
    "mypy.stubgen.find_module_path_and_all",
    "mypy.stubgen.generate_stub",
    "mypy.stubgen.sys",
    "mypy.stubgen.traceback",
    "mypy.stubgenc.generate_stub_for_c_module",
    "print",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.get_qualified_name": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mypy.stubgen.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.stubgen.is_c_module": {
  "data": {
   "shadows": "mypy.stubutil.is_c_module"
  },
  "type": "import"
 },
 "mypy.stubgen.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.stubgen.load_python_module_info": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "SystemExit",
    "mypy.stubgen.json",
    "mypy.stubgen.subprocess",
    "mypy.stubgen.sys",
    "print",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.main": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "Exception",
    "SystemExit",
    "dict",
    "mypy.stubgen.generate_stub_for_module",
    "mypy.stubgen.glob",
    "mypy.stubgen.parse_options",
    "mypy.stubgen.sys",
    "mypy.stubgen.walk_packages",
    "mypy.stubgenc.find_unique_signatures",
    "mypy.stubgenc.parse_all_signatures",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.mypy.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.stubgen.mypy.errors": {
  "data": {
   "shadows": "mypy.errors"
  },
  "type": "import"
 },
 "mypy.stubgen.mypy.parse": {
  "data": {
   "shadows": "mypy.parse"
  },
  "type": "import"
 },
 "mypy.stubgen.mypy.traverser": {
  "data": {
   "shadows": "mypy.traverser"
  },
  "type": "import"
 },
 "mypy.stubgen.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.stubgen.parse_all_signatures": {
  "data": {
   "shadows": "mypy.stubgenc.parse_all_signatures"
  },
  "type": "import"
 },
 "mypy.stubgen.parse_options": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "SystemExit",
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.options.Options",
    "mypy.stubgen.default_python2_interpreter",
    "mypy.stubgen.sys",
    "mypy.stubgen.usage",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "mypy.stubgen.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.stubgen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.stubgen.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "mypy.stubgen.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mypy.stubgen.usage": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "SystemExit",
    "bool",
    "mypy.stubgen.sys",
    "mypy.stubgen.textwrap",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.walk_packages": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "__import__",
    "mypy.stubgen.pkgutil",
    "str",
    "typing.Iterator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgen.write_header": {
  "data": {
   "shadows": "mypy.stubutil.write_header"
  },
  "type": "import"
 },
 "mypy.stubgenc": {
  "data": {},
  "type": "module"
 },
 "mypy.stubgenc.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.stubgenc.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stubgenc.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "mypy.stubgenc.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stubgenc.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stubgenc.add_typing_import": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "any",
    "mypy.stubgenc.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.find_unique_signatures": {
  "data": {
   "shadows": "mypy.stubutil.find_unique_signatures"
  },
  "type": "import"
 },
 "mypy.stubgenc.generate_c_function_stub": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "getattr",
    "mypy.stubgenc.infer_method_sig",
    "mypy.stubutil.infer_sig_from_docstring",
    "object",
    "str",
    "types.ModuleType",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.generate_c_type_stub": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "any",
    "issubclass",
    "mypy.stubgenc.generate_c_function_stub",
    "mypy.stubgenc.is_c_classmethod",
    "mypy.stubgenc.is_c_method",
    "mypy.stubgenc.is_skipped_attribute",
    "mypy.stubgenc.method_name_sort_key",
    "object",
    "set",
    "sorted",
    "str",
    "type",
    "types.ModuleType",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.generate_stub_for_c_module": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "mypy.stubgenc.add_typing_import",
    "mypy.stubgenc.generate_c_function_stub",
    "mypy.stubgenc.generate_c_type_stub",
    "mypy.stubgenc.importlib",
    "mypy.stubgenc.is_c_function",
    "mypy.stubgenc.is_c_type",
    "mypy.stubutil.is_c_module",
    "mypy.stubutil.write_header",
    "open",
    "set",
    "sorted",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.stubgenc.infer_method_sig": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.infer_sig_from_docstring": {
  "data": {
   "shadows": "mypy.stubutil.infer_sig_from_docstring"
  },
  "type": "import"
 },
 "mypy.stubgenc.is_c_classmethod": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_c_function": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "object",
    "ord",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_c_method": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "object",
    "str.__add__",
    "str.__new__",
    "str.index",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_c_module": {
  "data": {
   "shadows": "mypy.stubutil.is_c_module"
  },
  "type": "import"
 },
 "mypy.stubgenc.is_c_type": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bool",
    "int",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.is_skipped_attribute": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.method_name_sort_key": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubgenc.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.stubgenc.parse_all_signatures": {
  "data": {
   "shadows": "mypy.stubutil.parse_all_signatures"
  },
  "type": "import"
 },
 "mypy.stubgenc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.stubgenc.write_header": {
  "data": {
   "shadows": "mypy.stubutil.write_header"
  },
  "type": "import"
 },
 "mypy.stubutil": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mypy.stubutil.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.stubutil.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mypy.stubutil.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.stubutil.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "mypy.stubutil.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "mypy.stubutil.MutableSequence": {
  "data": {
   "shadows": "typing.MutableSequence"
  },
  "type": "import"
 },
 "mypy.stubutil.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.stubutil.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.stubutil.Sig": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mypy.stubutil.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.stubutil.build_signature": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.find_unique_signatures": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "mypy.stubutil.Sig",
    "set",
    "sorted",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.infer_sig_from_docstring": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mypy.stubutil.re",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.is_c_module": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.parse_all_signatures": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mypy.stubutil.Sig",
    "mypy.stubutil.build_signature",
    "mypy.stubutil.parse_signature",
    "mypy.stubutil.re",
    "sorted",
    "str",
    "typing.List",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.parse_signature": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "mypy.stubutil.re",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.stubutil.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.stubutil.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.stubutil.write_header": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "int",
    "mypy.stubutil.sys",
    "str",
    "typing.IO",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test": {
  "data": {},
  "type": "module"
 },
 "mypy.test.collect": {
  "data": {},
  "type": "module"
 },
 "mypy.test.config": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.config.PREFIX",
    "mypy.test.config.os",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.this_file_dir"
   ]
  },
  "type": "module"
 },
 "mypy.test.config.PREFIX": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mypy.test.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.config.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.config.test_data_prefix": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.test.config.test_temp_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mypy.test.config.this_file_dir": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mypy.test.config.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.test.data": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.data.DeleteFile",
    "mypy.test.data.UpdateFile",
    "mypy.test.data.os",
    "str",
    "typing.NamedTuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mypy.test.data.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.test.data.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.test.data.DataDrivenTestCase": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "input",
    "mypy.myunit.TestCase"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.DataDrivenTestCase.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "bool",
    "input",
    "int",
    "str",
    "super",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.add_dirs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "dir",
    "mypy.test.data.os",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.find_steps": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "int",
    "max",
    "mypy.test.data.DeleteFile",
    "mypy.test.data.FileOperation",
    "mypy.test.data.UpdateFile",
    "mypy.test.data.module_from_path",
    "mypy.test.data.re",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.run": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mypy.myunit.SkipTestCaseException"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.set_up": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "dir",
    "mypy.test.data.os",
    "mypy.test.data.re",
    "open",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataDrivenTestCase.tear_down": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "FileNotFoundError",
    "OSError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.os",
    "mypy.test.data.shutil",
    "os.remove",
    "os.rmdir",
    "print",
    "reversed",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataSuite": {
  "data": {
   "lineno": 612
  },
  "type": "class"
 },
 "mypy.test.data.DataSuite.__init__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataSuite.cases": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.data.DataDrivenTestCase",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DataSuite.run_case": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "NotImplementedError",
    "mypy.test.data.DataDrivenTestCase"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.DeleteFile": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mypy.test.data.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.data.FileOperation": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mypy.test.data.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.test.data.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.data.MypyDataCase": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "mypy.test.data.pytest"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.MypyDataCase.__init__": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "len",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.MypyDataSuite",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.reportinfo": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.repr_failure": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "SystemExit",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.runtest": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "mypy.test.data.pytest"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.setup": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataCase.teardown": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "mypy.test.data.MypyDataSuite": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "mypy.test.data.pytest"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.MypyDataSuite.collect": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "mypy.test.data.MypyDataCase",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "mypy.test.data.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.data.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.data.SkipTestCaseException": {
  "data": {
   "shadows": "mypy.myunit.SkipTestCaseException"
  },
  "type": "import"
 },
 "mypy.test.data.TestCase": {
  "data": {
   "shadows": "mypy.myunit.TestCase"
  },
  "type": "import"
 },
 "mypy.test.data.TestItem": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "mypy.test.data.TestItem.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "id",
    "int",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.data.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.test.data.UpdateFile": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mypy.test.data.collapse_line_continuation": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "mypy.test.data.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.expand_errors": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "input",
    "input.split",
    "len",
    "mypy.test.data.re",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.expand_includes": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "mypy.test.data.os",
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.expand_variables": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "mypy.test.data.root_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.fix_cobertura_filename": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "mypy.test.data.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.fix_win_path": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mypy.test.data.re",
    "mypy.test.data.root_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.module_from_path": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.data.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.data.parse_test_cases": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "input",
    "int",
    "join",
    "len",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.expand_errors",
    "mypy.test.data.expand_includes",
    "mypy.test.data.expand_variables",
    "mypy.test.data.fix_win_path",
    "mypy.test.data.os",
    "mypy.test.data.parse_test_data",
    "mypy.test.data.posixpath",
    "mypy.test.data.re",
    "open",
    "range",
    "set",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.parse_test_data": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "id",
    "id.index",
    "len",
    "mypy.test.data.TestItem",
    "mypy.test.data.collapse_line_continuation",
    "mypy.test.data.strip_list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mypy.test.data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mypy.test.data.pytest_addoption": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.pytest_pycollect_makeitem": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "mypy.test.data.MypyDataSuite",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.data.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "mypy.test.data.rmdir": {
  "data": {
   "shadows": "os.rmdir"
  },
  "type": "import"
 },
 "mypy.test.data.root_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mypy.test.data.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.data.strip_list": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "len",
    "mypy.test.data.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.data.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testargs": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testargs.ArgSuite": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testargs.ArgSuite.test_coherence": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mypy.main.process_options",
    "mypy.myunit.assert_equal",
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.test.testargs.BuildType": {
  "data": {
   "shadows": "mypy.options.BuildType"
  },
  "type": "import"
 },
 "mypy.test.testargs.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testargs.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testargs.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testargs.process_options": {
  "data": {
   "shadows": "mypy.main.process_options"
  },
  "type": "import"
 },
 "mypy.test.testargs.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.test.testcheck": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testcheck.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testcheck.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testcheck.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testcheck.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testcheck.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testcheck.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testcheck.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testcheck.TypeCheckSuite": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testcheck.TypeCheckSuite.cases": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.check_module_equivalence": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "mypy.test.helpers.assert_string_arrays_equal",
    "sorted",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.clear_cache": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mypy.defaults.CACHE_DIR",
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.shutil"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.find_error_paths": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.re",
    "set",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildManager",
    "mypy.build.find_cache_meta",
    "mypy.build.validate_meta",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.find_module_files": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "id",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.parse_module": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "int",
    "mypy.build.find_module",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testcheck.re",
    "open",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.parse_options": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "int",
    "mypy.main.process_options",
    "mypy.options.Options",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.testcase_pyversion",
    "mypy.test.testcheck.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.run_case": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "max",
    "mypy.experiments.STRICT_OPTIONAL",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.re",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.run_case_once": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.build.find_module_clear_caches",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.retry_on_error",
    "mypy.test.helpers.update_testcase_output",
    "mypy.test.testcheck.files",
    "mypy.test.testcheck.os",
    "mypy.test.testcheck.shutil",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.TypeCheckSuite.verify_cache": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.myunit.AssertionFailure",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcheck.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testcheck.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testcheck.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testcheck.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.test.testcheck.files": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mypy.test.testcheck.find_module_clear_caches": {
  "data": {
   "shadows": "mypy.build.find_module_clear_caches"
  },
  "type": "import"
 },
 "mypy.test.testcheck.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testcheck.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testcheck.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testcheck.process_options": {
  "data": {
   "shadows": "mypy.main.process_options"
  },
  "type": "import"
 },
 "mypy.test.testcheck.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testcheck.retry_on_error": {
  "data": {
   "shadows": "mypy.test.helpers.retry_on_error"
  },
  "type": "import"
 },
 "mypy.test.testcheck.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.testcheck.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testcheck.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testcheck.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testcheck.testcase_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testcase_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testcheck.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.test.testcheck.typed_ast": {
  "data": {
   "shadows": "typed_ast"
  },
  "type": "import"
 },
 "mypy.test.testcheck.update_testcase_output": {
  "data": {
   "shadows": "mypy.test.helpers.update_testcase_output"
  },
  "type": "import"
 },
 "mypy.test.testcmdline": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.testcmdline.sys"
   ]
  },
  "type": "module"
 },
 "mypy.test.testcmdline.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.PythonEvaluationSuite": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testcmdline.PythonEvaluationSuite.cases": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testcmdline.cmdline_files",
    "mypy.test.testcmdline.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.PythonEvaluationSuite.run_case": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testcmdline.test_python_evaluation"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.SkipTestCaseException": {
  "data": {
   "shadows": "mypy.myunit.SkipTestCaseException"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.base_version": {
  "data": {
   "shadows": "mypy.version.base_version"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.cmdline_files": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mypy.test.testcmdline.fix_cobertura_filename": {
  "data": {
   "shadows": "mypy.test.data.fix_cobertura_filename"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.normalize_file_output": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "mypy.test.testcmdline.re",
    "mypy.version.__version__",
    "mypy.version.base_version",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.parse_args": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.test.testcmdline.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.python3_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mypy.test.testcmdline.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testcmdline.test_python_evaluation": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.myunit.AssertionFailure",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.fix_cobertura_filename",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.testcmdline.normalize_file_output",
    "mypy.test.testcmdline.os",
    "mypy.test.testcmdline.parse_args",
    "mypy.test.testcmdline.python3_path",
    "mypy.test.testcmdline.subprocess",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testcmdline.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdeps": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testdeps.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testdeps.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testdeps.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testdeps.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.test.testdeps.GetDependenciesSuite": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testdeps.GetDependenciesSuite.build": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.nodes.Expression",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdeps.os",
    "mypy.types.Type",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdeps.GetDependenciesSuite.cases": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testdeps.files",
    "mypy.test.testdeps.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdeps.GetDependenciesSuite.run_case": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.server.deps.get_dependencies",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testdeps.files",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdeps.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testdeps.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testdeps.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testdeps.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testdeps.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testdeps.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testdeps.files": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mypy.test.testdeps.get_dependencies": {
  "data": {
   "shadows": "mypy.server.deps.get_dependencies"
  },
  "type": "import"
 },
 "mypy.test.testdeps.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testdeps.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testdeps.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testdeps.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdiff": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testdiff.ASTDiffSuite": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testdiff.ASTDiffSuite.build": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.nodes.MypyFile",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdiff.os",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdiff.ASTDiffSuite.cases": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testdiff.files",
    "mypy.test.testdiff.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdiff.ASTDiffSuite.run_case": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "mypy.server.astdiff.compare_symbol_table_snapshots",
    "mypy.server.astdiff.snapshot_symbol_table",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdiff.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testdiff.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testdiff.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testdiff.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testdiff.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testdiff.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testdiff.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testdiff.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testdiff.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testdiff.compare_symbol_table_snapshots": {
  "data": {
   "shadows": "mypy.server.astdiff.compare_symbol_table_snapshots"
  },
  "type": "import"
 },
 "mypy.test.testdiff.files": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mypy.test.testdiff.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testdiff.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testdiff.snapshot_symbol_table": {
  "data": {
   "shadows": "mypy.server.astdiff.snapshot_symbol_table"
  },
  "type": "import"
 },
 "mypy.test.testdiff.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testdiff.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdmypy": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testdmypy.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.TypeCheckSuite": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testdmypy.TypeCheckSuite.cases": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.sys",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.check_module_equivalence": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mypy.test.helpers.assert_string_arrays_equal",
    "sorted",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.clear_cache": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "mypy.defaults.CACHE_DIR",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.shutil"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.find_error_paths": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.re",
    "set",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.find_missing_cache_files": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "id",
    "mypy.build.BuildManager",
    "mypy.build.find_cache_meta",
    "mypy.build.validate_meta",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.find_module_files": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "id",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.has_stable_flags": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "any",
    "bool",
    "classmethod",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.re"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.is_incremental": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "mypy.test.data.DataDrivenTestCase"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.parse_module": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "int",
    "mypy.build.find_module",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testdmypy.re",
    "open",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.parse_options": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "int",
    "mypy.main.process_options",
    "mypy.options.Options",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.testcase_pyversion",
    "mypy.test.testdmypy.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.run_case": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "max",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.re",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.run_case_once": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "mypy.build.BuildSource",
    "mypy.build.find_module_clear_caches",
    "mypy.dmypy_server.Server",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.retry_on_error",
    "mypy.test.helpers.update_testcase_output",
    "mypy.test.testdmypy.files",
    "mypy.test.testdmypy.os",
    "mypy.test.testdmypy.shutil",
    "open",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.TypeCheckSuite.verify_cache": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.myunit.AssertionFailure",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testdmypy.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.dmypy": {
  "data": {
   "shadows": "mypy.dmypy"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.dmypy_server": {
  "data": {
   "shadows": "mypy.dmypy_server"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.experiments": {
  "data": {
   "shadows": "mypy.experiments"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.files": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mypy.test.testdmypy.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.process_options": {
  "data": {
   "shadows": "mypy.main.process_options"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.retry_on_error": {
  "data": {
   "shadows": "mypy.test.helpers.retry_on_error"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.testcase_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testcase_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.typed_ast": {
  "data": {
   "shadows": "typed_ast"
  },
  "type": "import"
 },
 "mypy.test.testdmypy.update_testcase_output": {
  "data": {
   "shadows": "mypy.test.helpers.update_testcase_output"
  },
  "type": "import"
 },
 "mypy.test.testextensions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "exec",
    "mypy.test.testextensions.PY36",
    "mypy.test.testextensions.PY36_TESTS",
    "mypy.test.testextensions.sys",
    "unittest.main"
   ]
  },
  "type": "module"
 },
 "mypy.test.testextensions.BaseTestCase": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "mypy.test.testextensions.BaseTestCase.assertIsSubclass": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "issubclass"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.BaseTestCase.assertNotIsSubclass": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "issubclass"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.PY36": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mypy.test.testextensions.PY36_TESTS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.test.testextensions.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "mypy.test.testextensions.TypedDict": {
  "data": {
   "shadows": "mypy_extensions.TypedDict"
  },
  "type": "import"
 },
 "mypy.test.testextensions.TypedDictTests": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mypy.test.testextensions.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "mypy.test.testextensions.TypedDictTests.test_basics_iterable_syntax": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Emp",
    "Emp.__annotations__",
    "Emp.__bases__",
    "Emp.__module__",
    "Emp.__name__",
    "Emp.__total__",
    "collections.Sequence",
    "dict",
    "int",
    "mypy.test.testextensions.typing",
    "mypy_extensions.TypedDict",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_basics_keywords_syntax": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Emp",
    "Emp.__annotations__",
    "Emp.__bases__",
    "Emp.__module__",
    "Emp.__name__",
    "Emp.__total__",
    "collections.Sequence",
    "dict",
    "int",
    "mypy.test.testextensions.typing",
    "mypy_extensions.TypedDict",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_optional": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "EmpD",
    "int",
    "mypy.test.testextensions.typing",
    "mypy_extensions.TypedDict",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_pickle": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "EmpD",
    "EmpDnew",
    "int",
    "mypy.test.testextensions.pickle",
    "mypy_extensions.TypedDict",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_py36_class_syntax_usage": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "LabelPoint2D",
    "Point2D",
    "dict",
    "int",
    "mypy.test.testextensions.PY36",
    "mypy.test.testextensions.typing",
    "str",
    "unittest.skipUnless"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_total": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "D",
    "D.__total__",
    "Options",
    "Options.__total__",
    "int",
    "mypy.test.testextensions.PY36",
    "mypy_extensions.TypedDict"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.TypedDictTests.test_typeddict_errors": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Emp",
    "TypeError",
    "dict",
    "int",
    "isinstance",
    "issubclass",
    "mypy_extensions.TypedDict",
    "mypy_extensions.TypedDict.__module__",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testextensions.collections_abc": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mypy.test.testextensions.main": {
  "data": {
   "shadows": "unittest.main"
  },
  "type": "import"
 },
 "mypy.test.testextensions.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mypy.test.testextensions.skipUnless": {
  "data": {
   "shadows": "unittest.skipUnless"
  },
  "type": "import"
 },
 "mypy.test.testextensions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testextensions.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testfinegrained.BuildManager": {
  "data": {
   "shadows": "mypy.build.BuildManager"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.FineGrainedBuildManager": {
  "data": {
   "shadows": "mypy.server.update.FineGrainedBuildManager"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.FineGrainedSuite": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testfinegrained.FineGrainedSuite.build": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.build.BuildSource",
    "mypy.build.Graph",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testfinegrained.os",
    "open",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.FineGrainedSuite.cases": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testfinegrained.files",
    "mypy.test.testfinegrained.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.FineGrainedSuite.run_case": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "mypy.server.update.FineGrainedBuildManager",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.UpdateFile",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testfinegrained.normalize_messages",
    "mypy.test.testfinegrained.os",
    "mypy.test.testfinegrained.shutil"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.Graph": {
  "data": {
   "shadows": "mypy.build.Graph"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.StrConv": {
  "data": {
   "shadows": "mypy.strconv.StrConv"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.TypeStrVisitor": {
  "data": {
   "shadows": "mypy.types.TypeStrVisitor"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.UpdateFile": {
  "data": {
   "shadows": "mypy.test.data.UpdateFile"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.files": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.test.testfinegrained.get_subexpressions": {
  "data": {
   "shadows": "mypy.server.subexpr.get_subexpressions"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.ignore_node": {
  "data": {
   "shadows": "mypy.test.testtypegen.ignore_node"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.indent": {
  "data": {
   "shadows": "mypy.strconv.indent"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.merge_asts": {
  "data": {
   "shadows": "mypy.server.astmerge.merge_asts"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.normalize_messages": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.test.testfinegrained.os",
    "mypy.test.testfinegrained.re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testfinegrained.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.short_type": {
  "data": {
   "shadows": "mypy.util.short_type"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testfinegrained.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testgraph": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testgraph.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "mypy.test.testgraph.BuildManager": {
  "data": {
   "shadows": "mypy.build.BuildManager"
  },
  "type": "import"
 },
 "mypy.test.testgraph.BuildSourceSet": {
  "data": {
   "shadows": "mypy.build.BuildSourceSet"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Errors": {
  "data": {
   "shadows": "mypy.errors.Errors"
  },
  "type": "import"
 },
 "mypy.test.testgraph.GraphSuite": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testgraph.GraphSuite._make_manager": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mypy.build.BuildManager",
    "mypy.build.BuildSourceSet",
    "mypy.errors.Errors",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "mypy.report.Reports",
    "mypy.version.__version__"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_order_ascc": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "frozenset",
    "mypy.build.State",
    "mypy.build.order_ascc",
    "mypy.build.sorted_components",
    "mypy.myunit.assert_equal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_scc": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "frozenset",
    "mypy.build.strongly_connected_components",
    "mypy.myunit.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_sorted_components": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "frozenset",
    "mypy.build.State",
    "mypy.build.sorted_components",
    "mypy.myunit.assert_equal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.GraphSuite.test_topsort": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "frozenset",
    "list",
    "mypy.build.topsort",
    "mypy.myunit.assert_equal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testgraph.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Reports": {
  "data": {
   "shadows": "mypy.report.Reports"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.test.testgraph.State": {
  "data": {
   "shadows": "mypy.build.State"
  },
  "type": "import"
 },
 "mypy.test.testgraph.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testgraph.__version__": {
  "data": {
   "shadows": "mypy.version.__version__"
  },
  "type": "import"
 },
 "mypy.test.testgraph.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testgraph.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testgraph.order_ascc": {
  "data": {
   "shadows": "mypy.build.order_ascc"
  },
  "type": "import"
 },
 "mypy.test.testgraph.sorted_components": {
  "data": {
   "shadows": "mypy.build.sorted_components"
  },
  "type": "import"
 },
 "mypy.test.testgraph.strongly_connected_components": {
  "data": {
   "shadows": "mypy.build.strongly_connected_components"
  },
  "type": "import"
 },
 "mypy.test.testgraph.topsort": {
  "data": {
   "shadows": "mypy.build.topsort"
  },
  "type": "import"
 },
 "mypy.test.testinfer": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testinfer.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.test.testinfer.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.test.testinfer.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.test.testinfer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.assert_map": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "int",
    "mypy.checkexpr.map_actuals_to_formals",
    "mypy.myunit.assert_equal",
    "mypy.test.testinfer.expand_callee_kinds",
    "mypy.test.testinfer.expand_caller_kinds",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.assert_vararg_map": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int",
    "mypy.checkexpr.map_actuals_to_formals",
    "mypy.myunit.assert_equal",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_basic": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_both_kinds_of_varargs": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_callee_star": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_caller_star": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_duplicate_named_arg": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_keyword_varargs": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR2"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_missing_named_arg": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_named_args": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_optional": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_positional_only": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_some_named_args": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_special_cases": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_too_many_caller_args": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_tuple_star": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.test_varargs_and_bare_asterisk": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_STAR"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.MapActualsToFormalsSuite.tuple": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "list",
    "mypy.test.typefixture.TypeFixture",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testinfer.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testinfer.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testinfer.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.test.testinfer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.test.testinfer.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testinfer.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testinfer.expand_callee_kinds": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.expand_caller_kinds": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mypy.nodes.ARG_NAMED",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.test.testinfer.map_actuals_to_formals": {
  "data": {
   "shadows": "mypy.checkexpr.map_actuals_to_formals"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testmoduleinfo.ModuleInfoSuite": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testmoduleinfo.ModuleInfoSuite.test_is_in_module_collection": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mypy.moduleinfo.is_in_module_collection",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true"
   ]
  },
  "type": "function"
 },
 "mypy.test.testmoduleinfo.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.assert_false": {
  "data": {
   "shadows": "mypy.myunit.assert_false"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testmoduleinfo.moduleinfo": {
  "data": {
   "shadows": "mypy.moduleinfo"
  },
  "type": "import"
 },
 "mypy.test.testparse": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testparse.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.testparse.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testparse.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testparse.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testparse.INPUT_FILE_NAME": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mypy.test.testparse.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testparse.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testparse.ParseErrorSuite": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testparse.ParseErrorSuite.cases": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.ParseErrorSuite.run_case": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testparse.test_parse_error"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.ParserSuite": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testparse.ParserSuite.cases": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.ParserSuite.run_case": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testparse.test_parser"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testparse.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testparse.config": {
  "data": {
   "shadows": "mypy.test.config"
  },
  "type": "import"
 },
 "mypy.test.testparse.defaults": {
  "data": {
   "shadows": "mypy.defaults"
  },
  "type": "import"
 },
 "mypy.test.testparse.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testparse.parse": {
  "data": {
   "shadows": "mypy.parse.parse"
  },
  "type": "import"
 },
 "mypy.test.testparse.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testparse.test_parse_error": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bytes",
    "mypy.errors.CompileError",
    "mypy.myunit.AssertionFailure",
    "mypy.options.Options",
    "mypy.parse.parse",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testparse.INPUT_FILE_NAME"
   ]
  },
  "type": "function"
 },
 "mypy.test.testparse.test_parser": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bytes",
    "mypy.defaults.PYTHON2_VERSION",
    "mypy.defaults.PYTHON3_VERSION",
    "mypy.errors.CompileError",
    "mypy.options.Options",
    "mypy.parse.parse",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval": {
  "data": {
   "symbols_in_volume": [
    "mypy.test.testpythoneval.re",
    "mypy.test.testpythoneval.sys"
   ]
  },
  "type": "module"
 },
 "mypy.test.testpythoneval.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.PythonEvaluationSuite": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testpythoneval.PythonEvaluationSuite.cases": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testpythoneval.os",
    "mypy.test.testpythoneval.python_34_eval_files",
    "mypy.test.testpythoneval.python_eval_files",
    "mypy.test.testpythoneval.sys",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.PythonEvaluationSuite.run_case": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testpythoneval.test_python_evaluation"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.adapt_output": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testpythoneval.program_re",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.api": {
  "data": {
   "shadows": "mypy.api"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.program_re": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.python3_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.python_34_eval_files": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.python_eval_files": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mypy.test.testpythoneval.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.run": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "int",
    "mypy.test.config.test_temp_dir",
    "mypy.test.testpythoneval.split_lines",
    "mypy.test.testpythoneval.subprocess",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.split_lines": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bytes",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.test_python_evaluation": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "mypy.api.run",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testpythoneval.adapt_output",
    "mypy.test.testpythoneval.os",
    "mypy.test.testpythoneval.pytest",
    "mypy.test.testpythoneval.python3_path",
    "mypy.test.testpythoneval.run",
    "mypy.util.try_find_python2_interpreter",
    "open"
   ]
  },
  "type": "function"
 },
 "mypy.test.testpythoneval.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testpythoneval.try_find_python2_interpreter": {
  "data": {
   "shadows": "mypy.util.try_find_python2_interpreter"
  },
  "type": "import"
 },
 "mypy.test.testreports": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testreports.CoberturaPackage": {
  "data": {
   "shadows": "mypy.report.CoberturaPackage"
  },
  "type": "import"
 },
 "mypy.test.testreports.CoberturaReportSuite": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testreports.CoberturaReportSuite.test_as_xml": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "lxml.etree.Element",
    "lxml.etree.tostring",
    "mypy.myunit.assert_equal",
    "mypy.report.CoberturaPackage",
    "mypy.test.testreports.textwrap"
   ]
  },
  "type": "function"
 },
 "mypy.test.testreports.CoberturaReportSuite.test_get_line_rate": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.report.get_line_rate"
   ]
  },
  "type": "function"
 },
 "mypy.test.testreports.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testreports.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testreports.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "mypy.test.testreports.get_line_rate": {
  "data": {
   "shadows": "mypy.report.get_line_rate"
  },
  "type": "import"
 },
 "mypy.test.testreports.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "mypy.test.testsemanal": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testsemanal.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.SemAnalErrorSuite": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalErrorSuite.cases": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_error_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalErrorSuite.run_case": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testsemanal.test_semanal_error"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSuite": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalSuite.cases": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSuite.run_case": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testsemanal.test_semanal"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSymtableSuite": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalSymtableSuite.cases": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_symtable_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalSymtableSuite.run_case": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testsemanal.get_semanal_options",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalTypeInfoSuite": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.SemAnalTypeInfoSuite.cases": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "mypy.test.testsemanal.semanal_typeinfo_files",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.SemAnalTypeInfoSuite.run_case": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.nodes.TypeInfo",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.testsemanal.TypeInfoMap",
    "mypy.test.testsemanal.get_semanal_options",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.TypeInfoMap": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mypy.nodes.TypeInfo",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsemanal.TypeInfoMap.__str__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "isinstance",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.get_semanal_options": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.options.Options"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.semanal_error_files": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.semanal_files": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.semanal_symtable_files": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.semanal_typeinfo_files": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "mypy.test.testsemanal.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.test_semanal": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.testfile_pyversion",
    "mypy.test.testsemanal.get_semanal_options",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.test_semanal_error": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.testsemanal.get_semanal_options"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsemanal.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testsemanal.testfile_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testfile_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testsolve": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testsolve.Constraint": {
  "data": {
   "shadows": "mypy.constraints.Constraint"
  },
  "type": "import"
 },
 "mypy.test.testsolve.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.testsolve.SUBTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUBTYPE_OF"
  },
  "type": "import"
 },
 "mypy.test.testsolve.SUPERTYPE_OF": {
  "data": {
   "shadows": "mypy.constraints.SUPERTYPE_OF"
  },
  "type": "import"
 },
 "mypy.test.testsolve.SolveSuite": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsolve.SolveSuite.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.assert_solve": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "isinstance",
    "mypy.constraints.Constraint",
    "mypy.myunit.assert_equal",
    "mypy.solve.solve_constraints",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "str",
    "tuple",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.subc": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.constraints.SUBTYPE_OF",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.supc": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mypy.constraints.Constraint",
    "mypy.constraints.SUPERTYPE_OF",
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_both_kinds_of_constraints": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_both_normal_and_any_types_in_results": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_empty_input": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_exactly_specified_result": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_multiple_variables": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_no_constraints_for_var": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_simple_constraints_with_dynamic_type": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_simple_subtype_constraints": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_simple_supertype_constraints": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mypy.test.testsolve.SolveSuite.test_unsatisfiable_constraints": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mypy.test.testsolve.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testsolve.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testsolve.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.test.testsolve.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.test.testsolve.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.test.testsolve.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testsolve.solve_constraints": {
  "data": {
   "shadows": "mypy.solve.solve_constraints"
  },
  "type": "import"
 },
 "mypy.test.teststubgen": {
  "data": {},
  "type": "module"
 },
 "mypy.test.teststubgen.AssertionFailure": {
  "data": {
   "shadows": "mypy.myunit.AssertionFailure"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.Options": {
  "data": {
   "shadows": "mypy.stubgen.Options"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.StubgenPythonSuite": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.teststubgen.StubgenPythonSuite.cases": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenPythonSuite.run_case": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.teststubgen.test_stubgen"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.assert_parse_signature": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.parse_signature",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_build_signature": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.build_signature"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_find_unique_signatures": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.find_unique_signatures"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_infer_sig_from_docstring": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.infer_sig_from_docstring"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_all_signatures": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubutil.parse_all_signatures"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_args": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_default_arg": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_kw_only_arg": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_optional_args": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_qualified_function": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_star_arg": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgenUtilSuite.test_parse_signature_with_star_star_arg": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.teststubgen.StubgencSuite.test_generate_c_type_stub_no_crash_for_object": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.generate_c_type_stub",
    "object",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_binary_op_sig": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_getitem_sig": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_hash_sig": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_setitem_sig": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.StubgencSuite.test_infer_unary_op_sig": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.stubgenc.infer_method_sig"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.add_file": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "open",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.build_signature": {
  "data": {
   "shadows": "mypy.stubutil.build_signature"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.config": {
  "data": {
   "shadows": "mypy.test.config"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.find_unique_signatures": {
  "data": {
   "shadows": "mypy.stubutil.find_unique_signatures"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.generate_c_type_stub": {
  "data": {
   "shadows": "mypy.stubgenc.generate_c_type_stub"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.generate_stub": {
  "data": {
   "shadows": "mypy.stubgen.generate_stub"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.generate_stub_for_module": {
  "data": {
   "shadows": "mypy.stubgen.generate_stub_for_module"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.infer_method_sig": {
  "data": {
   "shadows": "mypy.stubgenc.infer_method_sig"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.infer_sig_from_docstring": {
  "data": {
   "shadows": "mypy.stubutil.infer_sig_from_docstring"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.load_output": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "mypy.test.teststubgen.add_file",
    "mypy.test.teststubgen.glob",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse": {
  "data": {
   "shadows": "mypy.parse.parse"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_all_signatures": {
  "data": {
   "shadows": "mypy.stubutil.parse_all_signatures"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_flags": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mypy.stubgen.Options",
    "mypy.stubgen.parse_options",
    "mypy.test.teststubgen.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.parse_options": {
  "data": {
   "shadows": "mypy.stubgen.parse_options"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_signature": {
  "data": {
   "shadows": "mypy.stubutil.parse_signature"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.reset_importlib_caches": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mypy.test.teststubgen.importlib"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mypy.test.teststubgen.test_stubgen": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "bytes",
    "mypy.errors.CompileError",
    "mypy.stubgen.generate_stub",
    "mypy.stubgen.generate_stub_for_module",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.teststubgen.load_output",
    "mypy.test.teststubgen.parse_flags",
    "mypy.test.teststubgen.reset_importlib_caches",
    "mypy.test.teststubgen.shutil",
    "mypy.test.teststubgen.sys",
    "mypy.test.teststubgen.tempfile"
   ]
  },
  "type": "function"
 },
 "mypy.test.teststubgen.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testsubtypes.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.INVARIANT": {
  "data": {
   "shadows": "mypy.nodes.INVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.InterfaceTypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.InterfaceTypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.SubtypingSuite": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_equivalent": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_not_subtype": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_strict_subtype": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_subtype": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.assert_unrelated": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.set_up": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.INVARIANT",
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_basic_callable_subtyping": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_default_arg_callable_subtyping": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_interface_subtyping": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mypy.test.typefixture.InterfaceTypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_subtyping_with_inheritance_contravariant": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_subtyping_with_inheritance_covariant": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_generic_subtyping_with_inheritance_invariant": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_instance_subtyping": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_interface_subtyping": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_simple_generic_instance_subtyping_contravariant": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_simple_generic_instance_subtyping_covariant": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_simple_generic_instance_subtyping_invariant": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_trivial_cases": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_type_callable_subtyping": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_1": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_2": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_3": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_4": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_5": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_6": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_7": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_8": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.SubtypingSuite.test_var_arg_callable_subtyping_9": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mypy.test.testsubtypes.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testsubtypes.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.test.testtransform": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testtransform.BuildSource": {
  "data": {
   "shadows": "mypy.build.BuildSource"
  },
  "type": "import"
 },
 "mypy.test.testtransform.CompileError": {
  "data": {
   "shadows": "mypy.errors.CompileError"
  },
  "type": "import"
 },
 "mypy.test.testtransform.DataDrivenTestCase": {
  "data": {
   "shadows": "mypy.test.data.DataDrivenTestCase"
  },
  "type": "import"
 },
 "mypy.test.testtransform.DataSuite": {
  "data": {
   "shadows": "mypy.test.data.DataSuite"
  },
  "type": "import"
 },
 "mypy.test.testtransform.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.test.testtransform.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testtransform.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.test.testtransform.TestTransformVisitor": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.treetransform.TransformVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtransform.TestTransformVisitor.type": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.TransformSuite": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mypy.test.data.DataSuite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtransform.TransformSuite.cases": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod",
    "mypy.test.config.test_data_prefix",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.data.parse_test_cases",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.TransformSuite.run_case": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.testtransform.test_transform"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.TransformVisitor": {
  "data": {
   "shadows": "mypy.treetransform.TransformVisitor"
  },
  "type": "import"
 },
 "mypy.test.testtransform.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testtransform.assert_string_arrays_equal": {
  "data": {
   "shadows": "mypy.test.helpers.assert_string_arrays_equal"
  },
  "type": "import"
 },
 "mypy.test.testtransform.build": {
  "data": {
   "shadows": "mypy.build"
  },
  "type": "import"
 },
 "mypy.test.testtransform.normalize_error_messages": {
  "data": {
   "shadows": "mypy.test.helpers.normalize_error_messages"
  },
  "type": "import"
 },
 "mypy.test.testtransform.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mypy.test.testtransform.parse_test_cases": {
  "data": {
   "shadows": "mypy.test.data.parse_test_cases"
  },
  "type": "import"
 },
 "mypy.test.testtransform.test_data_prefix": {
  "data": {
   "shadows": "mypy.test.config.test_data_prefix"
  },
  "type": "import"
 },
 "mypy.test.testtransform.test_temp_dir": {
  "data": {
   "shadows": "mypy.test.config.test_temp_dir"
  },
  "type": "import"
 },
 "mypy.test.testtransform.test_transform": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mypy.build.BuildSource",
    "mypy.build.build",
    "mypy.errors.CompileError",
    "mypy.options.Options",
    "mypy.test.config.test_temp_dir",
    "mypy.test.data.DataDrivenTestCase",
    "mypy.test.helpers.assert_string_arrays_equal",
    "mypy.test.helpers.normalize_error_messages",
    "mypy.test.helpers.testfile_pyversion",
    "mypy.test.testtransform.TestTransformVisitor",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtransform.testfile_pyversion": {
  "data": {
   "shadows": "mypy.test.helpers.testfile_pyversion"
  },
  "type": "import"
 },
 "mypy.test.testtypes": {
  "data": {},
  "type": "module"
 },
 "mypy.test.testtypes.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.test.testtypes.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.test.testtypes.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.CONTRAVARIANT": {
  "data": {
   "shadows": "mypy.nodes.CONTRAVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.INVARIANT": {
  "data": {
   "shadows": "mypy.nodes.INVARIANT"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.test.testtypes.InterfaceTypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.InterfaceTypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testtypes.JoinSuite": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.JoinSuite.assert_join": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.assert_simple_join": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "mypy.join.join_types",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.callable": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.set_up": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_any_type": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_callables_with_any": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_class_subtyping": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_function_types": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generic_interfaces": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "mypy.test.typefixture.InterfaceTypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generic_types_and_any": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generics_with_inheritance": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generics_with_inheritance_and_shared_supertype": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_generics_with_multiple_args": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_join_class_types_with_interface_result": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_join_interface_and_class_types": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_join_interface_types": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_mixed_truth_restricted_type": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "mypy.join.join_types",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.false_only",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_mixed_truth_restricted_type_simple": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "mypy.join.join_simple",
    "mypy.myunit.assert_true",
    "mypy.types.false_only",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_none": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_other_mixed_types": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "c",
    "ov"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded.ov": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "list",
    "mypy.types.CallableType",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded_with_any": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "any",
    "c",
    "ov"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_overloaded_with_any.ov": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "list",
    "mypy.types.CallableType",
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_simple_generics": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_simple_type_objects": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "isinstance",
    "mypy.join.join_types",
    "mypy.myunit.assert_true",
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_trivial_cases": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_tuples": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_type_type": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_type_vars": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.test_unbound_type": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.tuple": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "list",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.JoinSuite.type_callable": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.testtypes.MeetSuite": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.MeetSuite.assert_meet": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.assert_simple_meet": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "mypy.meet.meet_types",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_subtype",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.callable": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.set_up": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_callables_with_dynamic": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_class_subtyping": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_dynamic_type": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_function_types": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generic_types_and_dynamic": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generics_with_inheritance": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generics_with_inheritance_and_shared_supertype": {
  "data": {
   "lineno": 732
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_generics_with_multiple_args": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_class_types_with_shared_interfaces": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_interface_and_class_types": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_interface_types": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_meet_with_generic_interfaces": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "mypy.test.typefixture.InterfaceTypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_none": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_simple_generics": {
  "data": {
   "lineno": 708
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_trivial_cases": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_tuples": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_type_type": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_type_vars": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.test_unbound_type": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.MeetSuite.tuple": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "list",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Suite": {
  "data": {
   "shadows": "mypy.myunit.Suite"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeFixture": {
  "data": {
   "shadows": "mypy.test.typefixture.TypeFixture"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeOpsSuite": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.TypeOpsSuite.assert_erase": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "mypy.erasetype.erase_type",
    "mypy.myunit.assert_equal",
    "mypy.types.Type",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.assert_expand": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "id",
    "mypy.expandtype.expand_type",
    "mypy.myunit.assert_equal",
    "mypy.types.Type",
    "mypy.types.TypeVarId",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.callable": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "str",
    "typing.List",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.set_up": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mypy.nodes.CONTRAVARIANT",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.INVARIANT",
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_empty_tuple_always_false": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_function_type": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_generic_type": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mypy.types.Instance"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_tuple_type": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_type_object": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_type_type": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_erase_with_type_variable": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_expand_basic_generic_types": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_expand_naked_type_var": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_false_type_is_idempotent": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.NoneTyp",
    "mypy.types.false_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_instance": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.myunit.assert_type",
    "mypy.types.Instance",
    "mypy.types.false_only",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_true_type_is_uninhabited": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "mypy.myunit.assert_type",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UninhabitedType",
    "mypy.types.false_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_false_only_of_union": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "mypy.types.false_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_more_precise": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_more_precise"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype_contravariance": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype_covariance": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_is_proper_subtype_invariance": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.subtypes.is_proper_subtype"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_nonempty_tuple_always_true": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_trivial_erase": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_trivial_expand": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_false_type_is_uninhabited": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mypy.myunit.assert_type",
    "mypy.types.NoneTyp",
    "mypy.types.UninhabitedType",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_instance": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.myunit.assert_type",
    "mypy.types.Instance",
    "mypy.types.true_only",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_true_type_is_idempotent": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_true_only_of_union": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.myunit.assert_equal",
    "mypy.myunit.assert_false",
    "mypy.myunit.assert_true",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnionType",
    "mypy.types.true_only"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_be_false_if_any_false": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_be_true_if_any_true": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.myunit.assert_true",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_not_be_false_if_none_false": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.test_union_can_not_be_true_if_none_true": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "mypy.myunit.assert_false",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeOpsSuite.tuple": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "list",
    "mypy.types.TupleType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.test.testtypes.TypesSuite": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mypy.myunit.Suite"
   ]
  },
  "type": "class"
 },
 "mypy.test.testtypes.TypesSuite.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture",
    "mypy.types.UnboundType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_any": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_callable_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_POS",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_callable_type_with_default_args": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_callable_type_with_var_args": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_generic_function_type": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.NoneTyp",
    "mypy.types.TypeVarDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_generic_unbound_type": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.UnboundType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_simple_unbound_type": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.UnboundType",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_tuple_type": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.TypeOfAny.special_form",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.TypesSuite.test_type_variable_binding": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mypy.myunit.assert_equal",
    "mypy.types.TypeVarDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.test.testtypes.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_equal": {
  "data": {
   "shadows": "mypy.myunit.assert_equal"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_false": {
  "data": {
   "shadows": "mypy.myunit.assert_false"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_true": {
  "data": {
   "shadows": "mypy.myunit.assert_true"
  },
  "type": "import"
 },
 "mypy.test.testtypes.assert_type": {
  "data": {
   "shadows": "mypy.myunit.assert_type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.erase_type": {
  "data": {
   "shadows": "mypy.erasetype.erase_type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.expand_type": {
  "data": {
   "shadows": "mypy.expandtype.expand_type"
  },
  "type": "import"
 },
 "mypy.test.testtypes.false_only": {
  "data": {
   "shadows": "mypy.types.false_only"
  },
  "type": "import"
 },
 "mypy.test.testtypes.is_more_precise": {
  "data": {
   "shadows": "mypy.subtypes.is_more_precise"
  },
  "type": "import"
 },
 "mypy.test.testtypes.is_proper_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_proper_subtype"
  },
  "type": "import"
 },
 "mypy.test.testtypes.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.test.testtypes.join_simple": {
  "data": {
   "shadows": "mypy.join.join_simple"
  },
  "type": "import"
 },
 "mypy.test.testtypes.join_types": {
  "data": {
   "shadows": "mypy.join.join_types"
  },
  "type": "import"
 },
 "mypy.test.testtypes.meet_types": {
  "data": {
   "shadows": "mypy.meet.meet_types"
  },
  "type": "import"
 },
 "mypy.test.testtypes.true_only": {
  "data": {
   "shadows": "mypy.types.true_only"
  },
  "type": "import"
 },
 "mypy.test.typefixture": {
  "data": {},
  "type": "module"
 },
 "mypy.test.typefixture.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.test.typefixture.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.test.typefixture.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.test.typefixture.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.test.typefixture.COVARIANT": {
  "data": {
   "shadows": "mypy.nodes.COVARIANT"
  },
  "type": "import"
 },
 "mypy.test.typefixture.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.test.typefixture.InterfaceTypeFixture": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mypy.test.typefixture.TypeFixture"
   ]
  },
  "type": "class"
 },
 "mypy.test.typefixture.InterfaceTypeFixture.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.test.typefixture.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.test.typefixture.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.test.typefixture.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeFixture": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mypy.test.typefixture.TypeFixture.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "int",
    "make_type_var",
    "mypy.nodes.COVARIANT",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.__init__.make_type_var": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "id",
    "int",
    "mypy.types.Type",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable_default": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable_type": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "list",
    "mypy.nodes.ARG_POS",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.callable_var_arg": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeFixture.make_type_info": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "id",
    "int",
    "mypy.nodes.Block",
    "mypy.nodes.COVARIANT",
    "mypy.nodes.ClassDef",
    "mypy.nodes.SymbolTable",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "mypy.types.TypeVarDef",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.test.typefixture.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.test.typefixture.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.test.typefixture.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.test.update": {
  "data": {},
  "type": "module"
 },
 "mypy.traverser": {
  "data": {},
  "type": "module"
 },
 "mypy.traverser.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.traverser.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.traverser.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.traverser.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.traverser.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.traverser.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.traverser.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.traverser.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.traverser.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.traverser.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.traverser.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.traverser.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.traverser.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.traverser.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.traverser.ExecStmt": {
  "data": {
   "shadows": "mypy.nodes.ExecStmt"
  },
  "type": "import"
 },
 "mypy.traverser.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.traverser.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.traverser.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.traverser.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.traverser.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.traverser.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.traverser.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.traverser.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.traverser.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.traverser.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.traverser.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.traverser.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.traverser.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.traverser.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.traverser.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.traverser.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.traverser.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.traverser.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.traverser.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.traverser.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.traverser.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.traverser.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.traverser.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.traverser.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.traverser.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.traverser.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.traverser.TraverserVisitor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.traverser.TraverserVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mypy.nodes.AssertStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_await_expr": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_block": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_call_expr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_cast_expr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_class_def": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_decorator": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mypy.nodes.Decorator"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_del_stmt": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mypy.nodes.DelStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_dict_expr": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "mypy.nodes.DictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "mypy.nodes.ExecStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.nodes.ExpressionStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_for_stmt": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_func": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mypy.nodes.FuncItem"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_func_def": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_generator_expr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_if_stmt": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mypy.nodes.IfStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_import": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_import_from": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_index_expr": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "mypy.nodes.IndexExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_list_expr": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_member_expr": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_mypy_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_op_expr": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mypy.nodes.OperatorAssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mypy.nodes.OverloadedFuncDef"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_print_stmt": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "mypy.nodes.PrintStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mypy.nodes.RaiseStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_return_stmt": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mypy.nodes.ReturnStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_set_expr": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "mypy.nodes.SetExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_slice_expr": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_star_expr": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_try_stmt": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.TryStmt",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_type_application": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_unary_expr": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_while_stmt": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_with_stmt": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.WithStmt",
    "range"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_yield_expr": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TraverserVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.traverser.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.traverser.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.traverser.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.traverser.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.traverser.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.traverser.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.traverser.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.traverser.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.treetransform": {
  "data": {},
  "type": "module"
 },
 "mypy.treetransform.Argument": {
  "data": {
   "shadows": "mypy.nodes.Argument"
  },
  "type": "import"
 },
 "mypy.treetransform.AssertStmt": {
  "data": {
   "shadows": "mypy.nodes.AssertStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.AwaitExpr": {
  "data": {
   "shadows": "mypy.nodes.AwaitExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.BackquoteExpr": {
  "data": {
   "shadows": "mypy.nodes.BackquoteExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "mypy.treetransform.BreakStmt": {
  "data": {
   "shadows": "mypy.nodes.BreakStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.BytesExpr": {
  "data": {
   "shadows": "mypy.nodes.BytesExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.CastExpr": {
  "data": {
   "shadows": "mypy.nodes.CastExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "mypy.treetransform.ComparisonExpr": {
  "data": {
   "shadows": "mypy.nodes.ComparisonExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ComplexExpr": {
  "data": {
   "shadows": "mypy.nodes.ComplexExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ConditionalExpr": {
  "data": {
   "shadows": "mypy.nodes.ConditionalExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ContinueStmt": {
  "data": {
   "shadows": "mypy.nodes.ContinueStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.treetransform.DelStmt": {
  "data": {
   "shadows": "mypy.nodes.DelStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.treetransform.DictExpr": {
  "data": {
   "shadows": "mypy.nodes.DictExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.DictionaryComprehension": {
  "data": {
   "shadows": "mypy.nodes.DictionaryComprehension"
  },
  "type": "import"
 },
 "mypy.treetransform.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.EnumCallExpr": {
  "data": {
   "shadows": "mypy.nodes.EnumCallExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ExecStmt": {
  "data": {
   "shadows": "mypy.nodes.ExecStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.treetransform.ExpressionStmt": {
  "data": {
   "shadows": "mypy.nodes.ExpressionStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.FloatExpr": {
  "data": {
   "shadows": "mypy.nodes.FloatExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ForStmt": {
  "data": {
   "shadows": "mypy.nodes.ForStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.treetransform.FuncItem": {
  "data": {
   "shadows": "mypy.nodes.FuncItem"
  },
  "type": "import"
 },
 "mypy.treetransform.FuncMapInitializer": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "mypy.traverser.TraverserVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.treetransform.FuncMapInitializer.__init__": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "mypy.treetransform.TransformVisitor"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.FuncMapInitializer.visit_func_def": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.FunctionLike": {
  "data": {
   "shadows": "mypy.types.FunctionLike"
  },
  "type": "import"
 },
 "mypy.treetransform.GeneratorExpr": {
  "data": {
   "shadows": "mypy.nodes.GeneratorExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.GlobalDecl": {
  "data": {
   "shadows": "mypy.nodes.GlobalDecl"
  },
  "type": "import"
 },
 "mypy.treetransform.IfStmt": {
  "data": {
   "shadows": "mypy.nodes.IfStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Import": {
  "data": {
   "shadows": "mypy.nodes.Import"
  },
  "type": "import"
 },
 "mypy.treetransform.ImportAll": {
  "data": {
   "shadows": "mypy.nodes.ImportAll"
  },
  "type": "import"
 },
 "mypy.treetransform.ImportFrom": {
  "data": {
   "shadows": "mypy.nodes.ImportFrom"
  },
  "type": "import"
 },
 "mypy.treetransform.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.IntExpr": {
  "data": {
   "shadows": "mypy.nodes.IntExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.treetransform.LambdaExpr": {
  "data": {
   "shadows": "mypy.nodes.LambdaExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.treetransform.ListComprehension": {
  "data": {
   "shadows": "mypy.nodes.ListComprehension"
  },
  "type": "import"
 },
 "mypy.treetransform.ListExpr": {
  "data": {
   "shadows": "mypy.nodes.ListExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.MypyFile": {
  "data": {
   "shadows": "mypy.nodes.MypyFile"
  },
  "type": "import"
 },
 "mypy.treetransform.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.NamedTupleExpr": {
  "data": {
   "shadows": "mypy.nodes.NamedTupleExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.NewTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.NewTypeExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Node": {
  "data": {
   "shadows": "mypy.nodes.Node"
  },
  "type": "import"
 },
 "mypy.treetransform.NodeVisitor": {
  "data": {
   "shadows": "mypy.visitor.NodeVisitor"
  },
  "type": "import"
 },
 "mypy.treetransform.NonlocalDecl": {
  "data": {
   "shadows": "mypy.nodes.NonlocalDecl"
  },
  "type": "import"
 },
 "mypy.treetransform.OpExpr": {
  "data": {
   "shadows": "mypy.nodes.OpExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.OperatorAssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.OperatorAssignmentStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.treetransform.OverloadPart": {
  "data": {
   "shadows": "mypy.nodes.OverloadPart"
  },
  "type": "import"
 },
 "mypy.treetransform.OverloadedFuncDef": {
  "data": {
   "shadows": "mypy.nodes.OverloadedFuncDef"
  },
  "type": "import"
 },
 "mypy.treetransform.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.PrintStmt": {
  "data": {
   "shadows": "mypy.nodes.PrintStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.PromoteExpr": {
  "data": {
   "shadows": "mypy.nodes.PromoteExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.RaiseStmt": {
  "data": {
   "shadows": "mypy.nodes.RaiseStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.ReturnStmt": {
  "data": {
   "shadows": "mypy.nodes.ReturnStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.RevealTypeExpr": {
  "data": {
   "shadows": "mypy.nodes.RevealTypeExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SetComprehension": {
  "data": {
   "shadows": "mypy.nodes.SetComprehension"
  },
  "type": "import"
 },
 "mypy.treetransform.SetExpr": {
  "data": {
   "shadows": "mypy.nodes.SetExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SliceExpr": {
  "data": {
   "shadows": "mypy.nodes.SliceExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.StarExpr": {
  "data": {
   "shadows": "mypy.nodes.StarExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Statement": {
  "data": {
   "shadows": "mypy.nodes.Statement"
  },
  "type": "import"
 },
 "mypy.treetransform.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SuperExpr": {
  "data": {
   "shadows": "mypy.nodes.SuperExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.SymbolTable": {
  "data": {
   "shadows": "mypy.nodes.SymbolTable"
  },
  "type": "import"
 },
 "mypy.treetransform.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "mypy.treetransform.TransformVisitor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "mypy.visitor.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.treetransform.TransformVisitor.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.block": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.blocks": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.copy_argument": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mypy.nodes.Argument"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.copy_function_attributes": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mypy.nodes.FuncItem"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.copy_ref": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.RefExpr",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.duplicate_assignment": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.duplicate_generator": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.duplicate_name": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.expr": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Expression"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.expressions": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.mypyfile": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.MypyFile"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.names": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.node": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "mypy.nodes.Node"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_block": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "mypy.nodes.Block",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_expr": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_expressions": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "mypy.nodes.Expression",
    "typing.Iterable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_names": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr",
    "typing.Iterable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.optional_type": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.statements": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "mypy.nodes.Statement",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.stmt": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Statement"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.type": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.types": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "mypy.types.Type",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit__promote_expr": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "mypy.nodes.PromoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "mypy.nodes.AssertStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mypy.nodes.AssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_await_expr": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "mypy.nodes.AwaitExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "mypy.nodes.BackquoteExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_block": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "mypy.nodes.Block"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_break_stmt": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "mypy.nodes.BreakStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_bytes_expr": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "mypy.nodes.BytesExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_call_expr": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "mypy.nodes.CallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_cast_expr": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "mypy.nodes.CastExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_class_def": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mypy.nodes.ClassDef"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "mypy.nodes.ComparisonExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_complex_expr": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mypy.nodes.ComplexExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "mypy.nodes.ConditionalExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_continue_stmt": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mypy.nodes.ContinueStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_decorator": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mypy.nodes.Decorator"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_del_stmt": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "mypy.nodes.DelStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_dict_expr": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "mypy.nodes.DictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "mypy.nodes.DictionaryComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_ellipsis": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "mypy.nodes.EllipsisExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_enum_call_expr": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "mypy.nodes.EnumCallExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "mypy.nodes.ExecStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mypy.nodes.ExpressionStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_float_expr": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "mypy.nodes.FloatExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_for_stmt": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "mypy.nodes.ForStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_func_def": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mypy.nodes.FuncDef",
    "mypy.treetransform.FuncMapInitializer",
    "mypy.types.FunctionLike",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_generator_expr": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "mypy.nodes.GeneratorExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_global_decl": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mypy.nodes.GlobalDecl"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_if_stmt": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "mypy.nodes.IfStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_import": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mypy.nodes.Import"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_import_all": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.nodes.ImportAll"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_import_from": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mypy.nodes.ImportFrom"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_index_expr": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_int_expr": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "mypy.nodes.IntExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "mypy.nodes.LambdaExpr",
    "mypy.types.FunctionLike",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "mypy.nodes.ListComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_list_expr": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "mypy.nodes.ListExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_member_expr": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.nodes.MemberExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_mypy_file": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mypy.nodes.MypyFile",
    "mypy.nodes.SymbolTable",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_name_expr": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "mypy.nodes.NameExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_namedtuple_expr": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "mypy.nodes.NamedTupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_newtype_expr": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "mypy.nodes.NewTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_nonlocal_decl": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mypy.nodes.NonlocalDecl"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_op_expr": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "mypy.nodes.OpExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "mypy.nodes.OperatorAssignmentStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "mypy.nodes.OverloadPart",
    "mypy.nodes.OverloadedFuncDef",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_pass_stmt": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "mypy.nodes.PassStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_print_stmt": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "mypy.nodes.PrintStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "mypy.nodes.RaiseStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_return_stmt": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mypy.nodes.ReturnStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "mypy.nodes.RevealTypeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mypy.nodes.SetComprehension"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_set_expr": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "mypy.nodes.SetExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_slice_expr": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "mypy.nodes.SliceExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_star_expr": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "mypy.nodes.StarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_str_expr": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "mypy.nodes.StrExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_super_expr": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.CallExpr",
    "mypy.nodes.SuperExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_temp_node": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "mypy.nodes.TempNode"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_try_stmt": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "mypy.nodes.TryStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "mypy.nodes.TupleExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_type_alias_expr": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "mypy.nodes.TypeAliasExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_type_application": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "mypy.nodes.TypeApplication"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_type_var_expr": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_typeddict_expr": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "mypy.nodes.Node",
    "mypy.nodes.TypedDictExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_unary_expr": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "mypy.nodes.UnaryExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_unicode_expr": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "mypy.nodes.UnicodeExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_var": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_while_stmt": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mypy.nodes.WhileStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_with_stmt": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mypy.nodes.WithStmt"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_yield_expr": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "mypy.nodes.YieldExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TransformVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "mypy.nodes.YieldFromExpr"
   ]
  },
  "type": "function"
 },
 "mypy.treetransform.TraverserVisitor": {
  "data": {
   "shadows": "mypy.traverser.TraverserVisitor"
  },
  "type": "import"
 },
 "mypy.treetransform.TryStmt": {
  "data": {
   "shadows": "mypy.nodes.TryStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.TupleExpr": {
  "data": {
   "shadows": "mypy.nodes.TupleExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.treetransform.TypeAliasExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeAliasExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.TypeApplication": {
  "data": {
   "shadows": "mypy.nodes.TypeApplication"
  },
  "type": "import"
 },
 "mypy.treetransform.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.TypedDictExpr": {
  "data": {
   "shadows": "mypy.nodes.TypedDictExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.UnaryExpr": {
  "data": {
   "shadows": "mypy.nodes.UnaryExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.UnicodeExpr": {
  "data": {
   "shadows": "mypy.nodes.UnicodeExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.treetransform.WhileStmt": {
  "data": {
   "shadows": "mypy.nodes.WhileStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.WithStmt": {
  "data": {
   "shadows": "mypy.nodes.WithStmt"
  },
  "type": "import"
 },
 "mypy.treetransform.YieldExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.YieldFromExpr": {
  "data": {
   "shadows": "mypy.nodes.YieldFromExpr"
  },
  "type": "import"
 },
 "mypy.treetransform.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "mypy.tvar_scope": {
  "data": {},
  "type": "module"
 },
 "mypy.tvar_scope.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.tvar_scope.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.tvar_scope.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarId": {
  "data": {
   "shadows": "mypy.types.TypeVarId"
  },
  "type": "import"
 },
 "mypy.tvar_scope.TypeVarScope": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "mypy.tvar_scope.TypeVarScope.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.__str__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.allow_binding": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.bind": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mypy.nodes.TypeVarExpr",
    "mypy.types.TypeVarDef",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.class_frame": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mypy.tvar_scope.TypeVarScope"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.get_binding": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.SymbolTableNode",
    "mypy.types.TypeVarDef",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.get_function_scope": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mypy.tvar_scope.TypeVarScope.method_frame": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mypy.tvar_scope.TypeVarScope"
   ]
  },
  "type": "function"
 },
 "mypy.tvar_scope.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.typeanal": {
  "data": {
   "symbols_in_volume": [
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.TypeVarExpr",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.typeanal.ARG_KINDS_BY_CONSTRUCTOR": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mypy.typeanal.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_STAR": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR"
  },
  "type": "import"
 },
 "mypy.typeanal.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "mypy.typeanal.AnalyzeTypeContext": {
  "data": {
   "shadows": "mypy.plugin.AnalyzeTypeContext"
  },
  "type": "import"
 },
 "mypy.typeanal.AnalyzerPluginInterface": {
  "data": {
   "shadows": "mypy.plugin.AnalyzerPluginInterface"
  },
  "type": "import"
 },
 "mypy.typeanal.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "mypy.typeanal.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "mypy.typeanal.CallableArgument": {
  "data": {
   "shadows": "mypy.types.CallableArgument"
  },
  "type": "import"
 },
 "mypy.typeanal.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeQuery",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery.__init__": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery.combine_lists_strategy": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "mypy.typeanal.itertools",
    "mypy.types.Type",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAllInnerTypesQuery.query_types": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "list",
    "mypy.types.Type",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAnyTypesQuery": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.TypeQuery",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.CollectAnyTypesQuery.__init__": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAnyTypesQuery.combine_lists_strategy": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "classmethod",
    "mypy.types.AnyType",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.CollectAnyTypesQuery.visit_any": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "mypy.typeanal.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "mypy.typeanal.DeletedType": {
  "data": {
   "shadows": "mypy.types.DeletedType"
  },
  "type": "import"
 },
 "mypy.typeanal.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.typeanal.EllipsisType": {
  "data": {
   "shadows": "mypy.types.EllipsisType"
  },
  "type": "import"
 },
 "mypy.typeanal.Expression": {
  "data": {
   "shadows": "mypy.nodes.Expression"
  },
  "type": "import"
 },
 "mypy.typeanal.ForwardRef": {
  "data": {
   "shadows": "mypy.types.ForwardRef"
  },
  "type": "import"
 },
 "mypy.typeanal.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "mypy.typeanal.HasAnyFromUnimportedType": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.HasAnyFromUnimportedType.__init__": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasAnyFromUnimportedType.visit_any": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.from_unimported_type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasAnyFromUnimportedType.visit_typeddict_type": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasExplicitAny": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.HasExplicitAny.__init__": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "any",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasExplicitAny.visit_any": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "bool",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.explicit"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.HasExplicitAny.visit_typeddict_type": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "bool",
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.IndexExpr": {
  "data": {
   "shadows": "mypy.nodes.IndexExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.typeanal.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.typeanal.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "mypy.typeanal.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.typeanal.MessageBuilder": {
  "data": {
   "shadows": "mypy.messages.MessageBuilder"
  },
  "type": "import"
 },
 "mypy.typeanal.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.NoneTyp": {
  "data": {
   "shadows": "mypy.types.NoneTyp"
  },
  "type": "import"
 },
 "mypy.typeanal.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.typeanal.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "mypy.typeanal.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mypy.typeanal.Overloaded": {
  "data": {
   "shadows": "mypy.types.Overloaded"
  },
  "type": "import"
 },
 "mypy.typeanal.PartialType": {
  "data": {
   "shadows": "mypy.types.PartialType"
  },
  "type": "import"
 },
 "mypy.typeanal.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "mypy.typeanal.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.typeanal.StarType": {
  "data": {
   "shadows": "mypy.types.StarType"
  },
  "type": "import"
 },
 "mypy.typeanal.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "mypy.typeanal.SyntheticTypeVisitor": {
  "data": {
   "shadows": "mypy.types.SyntheticTypeVisitor"
  },
  "type": "import"
 },
 "mypy.typeanal.T": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mypy.typeanal.TVAR": {
  "data": {
   "shadows": "mypy.nodes.TVAR"
  },
  "type": "import"
 },
 "mypy.typeanal.TYPE_ALIAS": {
  "data": {
   "shadows": "mypy.nodes.TYPE_ALIAS"
  },
  "type": "import"
 },
 "mypy.typeanal.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.typeanal.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.typeanal.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeAnalyser": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mypy.plugin.AnalyzerPluginInterface",
    "mypy.types.SyntheticTypeVisitor",
    "mypy.types.Type"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.TypeAnalyser.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool",
    "fail_func",
    "lookup_func",
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "mypy.tvar_scope.TypeVarScope",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.anal_array": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.anal_type": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "bool",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.anal_var_defs": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "mypy.types.TypeVarDef",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.analyze_callable_args": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.check_arg_kinds",
    "mypy.nodes.check_arg_names",
    "mypy.typeanal.ARG_KINDS_BY_CONSTRUCTOR",
    "mypy.types.CallableArgument",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.analyze_callable_type": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.nodes.ARG_STAR",
    "mypy.nodes.ARG_STAR2",
    "mypy.types.AnyType",
    "mypy.types.CallableType",
    "mypy.types.EllipsisType",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "mypy.types.TypeOfAny.explicit",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.analyze_type": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.bind_function_type_variables": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.Context",
    "mypy.nodes.TypeVarExpr",
    "mypy.types.CallableType",
    "mypy.types.TypeVarDef",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.fail": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.infer_type_variables": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "list",
    "mypy.nodes.TypeVarExpr",
    "mypy.typeanal.TypeVariableQuery",
    "mypy.types.CallableType",
    "str",
    "type.arg_types",
    "type.ret_type.accept",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.is_defined_type_var": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.named_type": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.tuple_type": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.special_form",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.tvar_scope_frame": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_any": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_callable_argument": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.CallableArgument",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_callable_type": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "bool",
    "mypy.types.CallableType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_deleted_type": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "mypy.types.DeletedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_ellipsis_type": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.EllipsisType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_forwardref_type": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "mypy.types.ForwardRef",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_instance": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_none_type": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mypy.types.NoneTyp",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_partial_type": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "mypy.types.PartialType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_star_type": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "mypy.types.StarType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_tuple_type": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mypy.types.AnyType",
    "mypy.types.StarType",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.special_form",
    "sum"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_type_list": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeList",
    "mypy.types.TypeOfAny.from_error"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_type_type": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_type_var": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_typeddict_type": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "mypy.types.Type",
    "mypy.types.TypedDictType",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_unbound_type": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "hook",
    "isinstance",
    "len",
    "list",
    "mypy.messages.BARE_GENERIC",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.TVAR",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.UNBOUND_IMPORTED",
    "mypy.nodes.Var",
    "mypy.nodes.nongen_builtins",
    "mypy.plugin.AnalyzeTypeContext",
    "mypy.typeanal.make_optional_type",
    "mypy.typeanal.no_subscript_builtin_alias",
    "mypy.typeanal.replace_alias_tvars",
    "mypy.typeanal.set_any_tvars",
    "mypy.types.AnyType",
    "mypy.types.EllipsisType",
    "mypy.types.ForwardRef",
    "mypy.types.Instance",
    "mypy.types.NoneTyp",
    "mypy.types.TupleType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.explicit",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.from_unimported_type",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeType",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.TypeVarType",
    "mypy.types.UnboundType",
    "mypy.types.UninhabitedType",
    "mypy.types.UnionType.make_union",
    "mypy.types.get_type_vars"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_uninhabited_type": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyser.visit_union_type": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "mypy.types.Type",
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "mypy.types.TypeVisitor"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.TypeAnalyserPass3.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "bool",
    "fail_func",
    "lookup_func",
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.anal_type": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "mypy.typeanal.TypeAnalyser",
    "mypy.types.Type",
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.check_type_var_values": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "any",
    "int",
    "isinstance",
    "len",
    "mypy.messages.INCOMPATIBLE_TYPEVAR_VALUE.format",
    "mypy.nodes.Context",
    "mypy.nodes.TypeInfo",
    "mypy.sametypes.is_same_type",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "str",
    "type.name",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.resolve_type": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.ForwardRef",
    "mypy.types.Instance",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_any": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "mypy.types.AnyType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_callable_type": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "mypy.types.CallableType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_deleted_type": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "mypy.types.DeletedType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_forwardref_type": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "mypy.types.ForwardRef"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_instance": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "mypy.messages.IMPLICIT_GENERIC_ANY_BUILTIN.format",
    "mypy.nodes.nongen_builtins",
    "mypy.subtypes.is_subtype",
    "mypy.types.AnyType",
    "mypy.types.Instance",
    "mypy.types.TypeOfAny.from_error",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.special_form",
    "mypy.types.TypeVarType",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_none_type": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "mypy.types.NoneTyp"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_overloaded": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "mypy.types.Overloaded"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_partial_type": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "mypy.types.PartialType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_star_type": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "mypy.types.StarType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_tuple_type": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "mypy.types.TupleType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_type_list": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "mypy.types.TypeList"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_type_type": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "mypy.types.TypeType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_type_var": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "mypy.types.TypeVarType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_typeddict_type": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "mypy.types.TypedDictType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_unbound_type": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "mypy.types.UnboundType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_uninhabited_type": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "mypy.types.UninhabitedType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeAnalyserPass3.visit_union_type": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "mypy.types.UnionType"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeList": {
  "data": {
   "shadows": "mypy.types.TypeList"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeQuery": {
  "data": {
   "shadows": "mypy.types.TypeQuery"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeTranslationError": {
  "data": {
   "shadows": "mypy.exprtotype.TypeTranslationError"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarList": {
  "data": {
   "lineno": 844
  },
  "type": "constant"
 },
 "mypy.typeanal.TypeVarScope": {
  "data": {
   "shadows": "mypy.tvar_scope.TypeVarScope"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.typeanal.TypeVariableQuery": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "mypy.typeanal.TypeVarList",
    "mypy.types.TypeQuery"
   ]
  },
  "type": "class"
 },
 "mypy.typeanal.TypeVariableQuery.__init__": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Context",
    "mypy.nodes.SymbolTableNode",
    "mypy.typeanal.flatten_tvars",
    "str",
    "super",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVariableQuery._seems_like_callable": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "mypy.types.EllipsisType",
    "mypy.types.TypeList",
    "mypy.types.UnboundType",
    "type.args"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVariableQuery.visit_callable_type": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "mypy.typeanal.TypeVarList",
    "mypy.types.CallableType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVariableQuery.visit_unbound_type": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "isinstance",
    "mypy.nodes.TVAR",
    "mypy.nodes.TypeVarExpr",
    "mypy.typeanal.TypeVarList",
    "mypy.types.UnboundType",
    "super"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.TypeVisitor": {
  "data": {
   "shadows": "mypy.types.TypeVisitor"
  },
  "type": "import"
 },
 "mypy.typeanal.TypedDictType": {
  "data": {
   "shadows": "mypy.types.TypedDictType"
  },
  "type": "import"
 },
 "mypy.typeanal.UNBOUND_IMPORTED": {
  "data": {
   "shadows": "mypy.nodes.UNBOUND_IMPORTED"
  },
  "type": "import"
 },
 "mypy.typeanal.UnboundType": {
  "data": {
   "shadows": "mypy.types.UnboundType"
  },
  "type": "import"
 },
 "mypy.typeanal.UninhabitedType": {
  "data": {
   "shadows": "mypy.types.UninhabitedType"
  },
  "type": "import"
 },
 "mypy.typeanal.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "mypy.typeanal.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "mypy.typeanal.analyze_type_alias": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "fail_func",
    "isinstance",
    "len",
    "lookup_func",
    "mypy.exprtotype.TypeTranslationError",
    "mypy.exprtotype.expr_to_unanalyzed_type",
    "mypy.nodes.CallExpr",
    "mypy.nodes.Context",
    "mypy.nodes.Expression",
    "mypy.nodes.IndexExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TVAR",
    "mypy.nodes.TYPE_ALIAS",
    "mypy.nodes.TypeInfo",
    "mypy.options.Options",
    "mypy.plugin.Plugin",
    "mypy.tvar_scope.TypeVarScope",
    "mypy.typeanal.TypeAnalyser",
    "mypy.typeanal.type_constructors",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "str",
    "type",
    "type.accept",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "mypy.typeanal.check_arg_kinds": {
  "data": {
   "shadows": "mypy.nodes.check_arg_kinds"
  },
  "type": "import"
 },
 "mypy.typeanal.check_arg_names": {
  "data": {
   "shadows": "mypy.nodes.check_arg_names"
  },
  "type": "import"
 },
 "mypy.typeanal.check_for_explicit_any": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "bool",
    "mypy.messages.MessageBuilder",
    "mypy.nodes.Context",
    "mypy.options.Options",
    "mypy.typeanal.has_explicit_any",
    "mypy.types.Type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.collect_all_inner_types": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "mypy.typeanal.CollectAllInnerTypesQuery",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.collect_any_types": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "mypy.typeanal.CollectAnyTypesQuery",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mypy.typeanal.expr_to_unanalyzed_type": {
  "data": {
   "shadows": "mypy.exprtotype.expr_to_unanalyzed_type"
  },
  "type": "import"
 },
 "mypy.typeanal.flatten_tvars": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "itertools.chain.from_iterable",
    "mypy.typeanal.T",
    "mypy.typeanal.remove_dups",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.get_typ_args": {
  "data": {
   "shadows": "mypy.types.get_typ_args"
  },
  "type": "import"
 },
 "mypy.typeanal.get_type_vars": {
  "data": {
   "shadows": "mypy.types.get_type_vars"
  },
  "type": "import"
 },
 "mypy.typeanal.has_any_from_unimported_type": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "bool",
    "mypy.typeanal.HasAnyFromUnimportedType",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.has_explicit_any": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "bool",
    "mypy.typeanal.HasExplicitAny",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.typeanal.is_subtype": {
  "data": {
   "shadows": "mypy.subtypes.is_subtype"
  },
  "type": "import"
 },
 "mypy.typeanal.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mypy.typeanal.make_optional_type": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "isinstance",
    "mypy.types.NoneTyp",
    "mypy.types.Type",
    "mypy.types.UnionType",
    "mypy.types.union_items"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.messages": {
  "data": {
   "shadows": "mypy.messages"
  },
  "type": "import"
 },
 "mypy.typeanal.no_subscript_builtin_alias": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.nongen_builtins",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.typeanal.nongen_builtins": {
  "data": {
   "shadows": "mypy.nodes.nongen_builtins"
  },
  "type": "import"
 },
 "mypy.typeanal.remove_dups": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "mypy.typeanal.T",
    "set",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.replace_alias_tvars": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "mypy.types.Type",
    "mypy.types.TypeVarType",
    "mypy.types.UnboundType",
    "mypy.types.get_typ_args",
    "mypy.types.set_typ_args",
    "str",
    "typing.List",
    "vars",
    "vars.index"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.set_any_tvars": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.typeanal.replace_alias_tvars",
    "mypy.types.AnyType",
    "mypy.types.Type",
    "mypy.types.TypeOfAny.from_omitted_generics",
    "mypy.types.TypeOfAny.special_form",
    "str",
    "typing.List",
    "vars"
   ]
  },
  "type": "function"
 },
 "mypy.typeanal.set_typ_args": {
  "data": {
   "shadows": "mypy.types.set_typ_args"
  },
  "type": "import"
 },
 "mypy.typeanal.type_constructors": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mypy.typeanal.union_items": {
  "data": {
   "shadows": "mypy.types.union_items"
  },
  "type": "import"
 },
 "mypy.typevars": {
  "data": {},
  "type": "module"
 },
 "mypy.typevars.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "mypy.typevars.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.typevars.TupleType": {
  "data": {
   "shadows": "mypy.types.TupleType"
  },
  "type": "import"
 },
 "mypy.typevars.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "mypy.typevars.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "mypy.typevars.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "mypy.typevars.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mypy.typevars.erase_typevars": {
  "data": {
   "shadows": "mypy.erasetype.erase_typevars"
  },
  "type": "import"
 },
 "mypy.typevars.fill_typevars": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "mypy.nodes.TypeInfo",
    "mypy.types.Instance",
    "mypy.types.TupleType",
    "mypy.types.TypeVarType",
    "range",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mypy.typevars.has_no_typevars": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "mypy.erasetype.erase_typevars",
    "mypy.sametypes.is_same_type",
    "mypy.types.Type"
   ]
  },
  "type": "function"
 },
 "mypy.typevars.is_same_type": {
  "data": {
   "shadows": "mypy.sametypes.is_same_type"
  },
  "type": "import"
 },
 "mypy.util": {
  "data": {
   "symbols_in_volume": [
    "mypy.util.re",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.util.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.util.ENCODING_RE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.util.ERROR_TEMPLATE": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mypy.util.FAIL_TEMPLATE": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "mypy.util.IdMapper": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "mypy.util.IdMapper.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mypy.util.IdMapper.id": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "object"
   ]
  },
  "type": "function"
 },
 "mypy.util.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.util.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.util.PASS_TEMPLATE": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "mypy.util.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mypy.util.T": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mypy.util.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.util.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.util._python2_interpreter": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mypy.util.array_repr": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.util.T",
    "repr",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.util.default_python2_interpreter": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mypy.util.escape": {
  "data": {
   "shadows": "xml.sax.saxutils.escape"
  },
  "type": "import"
 },
 "mypy.util.find_python_encoding": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bytes",
    "int",
    "mypy.util.ENCODING_RE",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.util.get_prefix": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.util.short_type": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mypy.util.split_module_names": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mypy.util.try_find_python2_interpreter": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "OSError",
    "mypy.util._python2_interpreter",
    "mypy.util.default_python2_interpreter",
    "mypy.util.subprocess",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.util.write_junit_xml": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bool",
    "float",
    "mypy.util.ERROR_TEMPLATE",
    "mypy.util.FAIL_TEMPLATE",
    "mypy.util.PASS_TEMPLATE",
    "open",
    "str",
    "typing.List",
    "xml.sax.saxutils.escape"
   ]
  },
  "type": "function"
 },
 "mypy.version": {
  "data": {},
  "type": "module"
 },
 "mypy.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mypy.visitor": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "mypy.visitor.ExpressionVisitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mypy.visitor.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "mypy.visitor.ExpressionVisitor.visit__promote_expr": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_await_expr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_bytes_expr": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_call_expr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_cast_expr": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_complex_expr": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_dict_expr": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_ellipsis": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_enum_call_expr": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_float_expr": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_generator_expr": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_index_expr": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_int_expr": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_list_expr": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_member_expr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_name_expr": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_namedtuple_expr": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_newtype_expr": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_op_expr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_set_expr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_slice_expr": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_star_expr": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_str_expr": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_super_expr": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_temp_node": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_type_alias_expr": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_type_application": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_type_var_expr": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_typeddict_expr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_unary_expr": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_unicode_expr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_yield_expr": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.ExpressionVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "mypy.visitor.NodeVisitor": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "mypy.visitor.ExpressionVisitor",
    "mypy.visitor.StatementVisitor",
    "mypy.visitor.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "mypy.visitor.NodeVisitor.visit__promote_expr": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_await_expr": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_backquote_expr": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_block": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_break_stmt": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_bytes_expr": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_call_expr": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_cast_expr": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_class_def": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_comparison_expr": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_complex_expr": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_conditional_expr": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_continue_stmt": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_decorator": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_del_stmt": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_dict_expr": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_dictionary_comprehension": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_ellipsis": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_enum_call_expr": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_float_expr": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_for_stmt": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_func_def": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_generator_expr": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_global_decl": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_if_stmt": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_import": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_import_all": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_import_from": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_index_expr": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_int_expr": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_lambda_expr": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_list_comprehension": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_list_expr": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_member_expr": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_mypy_file": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_name_expr": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_namedtuple_expr": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_newtype_expr": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_nonlocal_decl": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_op_expr": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_pass_stmt": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_print_stmt": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_return_stmt": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_reveal_type_expr": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_set_comprehension": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_set_expr": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_slice_expr": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_star_expr": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_str_expr": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_super_expr": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_temp_node": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_try_stmt": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_tuple_expr": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_type_alias_expr": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_type_application": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_type_var_expr": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_typeddict_expr": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_unary_expr": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_unicode_expr": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_var": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_while_stmt": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_with_stmt": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_yield_expr": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.NodeVisitor.visit_yield_from_expr": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "mypy.visitor.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "mypy.visitor.StatementVisitor.visit_assert_stmt": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_assignment_stmt": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_block": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_break_stmt": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_class_def": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_continue_stmt": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_decorator": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_del_stmt": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_exec_stmt": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_expression_stmt": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_for_stmt": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_func_def": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_global_decl": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_if_stmt": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_import": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_import_all": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_import_from": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_nonlocal_decl": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_operator_assignment_stmt": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_overloaded_func_def": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_pass_stmt": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_print_stmt": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_raise_stmt": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_return_stmt": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_try_stmt": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_var": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_while_stmt": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.StatementVisitor.visit_with_stmt": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mypy.visitor.T"
   ]
  },
  "type": "function"
 },
 "mypy.visitor.T": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mypy.visitor.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "mypy.visitor.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mypy.visitor.mypy.nodes": {
  "data": {
   "shadows": "mypy.nodes"
  },
  "type": "import"
 },
 "mypy.waiter": {
  "data": {},
  "type": "module"
 },
 "mypy.waiter.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mypy.waiter.DEVNULL": {
  "data": {
   "shadows": "subprocess.DEVNULL"
  },
  "type": "import"
 },
 "mypy.waiter.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mypy.waiter.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mypy.waiter.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "mypy.waiter.LazySubprocess": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "mypy.waiter.LazySubprocess.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.elapsed_time": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.read_output": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.start": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mypy.waiter.tempfile",
    "mypy.waiter.time",
    "subprocess.Popen",
    "subprocess.STDOUT"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.status": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.LazySubprocess.wait": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mypy.waiter.Noter": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "mypy.waiter.Noter.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.clear": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "mypy.waiter.Noter.message": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mypy.waiter.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.start": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.stop": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Noter.update": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mypy.waiter.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "mypy.waiter.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "mypy.waiter.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "mypy.waiter.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mypy.waiter.Waiter": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "mypy.waiter.Waiter.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "collections.defaultdict",
    "dict",
    "int",
    "len",
    "multiprocessing.cpu_count",
    "mypy.waiter.os",
    "sched_getaffinity",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._poll_current": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "int",
    "mypy.waiter.time",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._record_time": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "float",
    "mypy.waiter.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._report_task_failure": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "int",
    "mypy.waiter.sys",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._start_next": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "mypy.waiter.pipes",
    "mypy.waiter.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter._wait_next": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.waiter.parse_test_stats_from_output",
    "mypy.waiter.sys",
    "print",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.add": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "mypy.waiter.LazySubprocess",
    "mypy.waiter.sys"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.load_log_file": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "FileNotFoundError",
    "mypy.waiter.json",
    "mypy.waiter.sys",
    "open",
    "print",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.run": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Exception",
    "any",
    "avg",
    "int",
    "len",
    "mypy.waiter.Noter",
    "mypy.waiter.json",
    "mypy.waiter.sys",
    "open",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.run.avg": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "float",
    "len",
    "sum",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.Waiter.run.sort_function": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "float",
    "int",
    "mypy.waiter.LazySubprocess",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.WaiterError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mypy.waiter.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "mypy.waiter.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mypy.waiter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mypy.waiter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mypy.waiter.parse_test_stats_from_output": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "int",
    "mypy.waiter.re",
    "str",
    "sum",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mypy.waiter.pipes": {
  "data": {
   "shadows": "pipes"
  },
  "type": "import"
 },
 "mypy.waiter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mypy.waiter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mypy.waiter.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mypy.waiter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 }
}